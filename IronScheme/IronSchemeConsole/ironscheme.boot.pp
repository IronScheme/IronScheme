;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme lists)
  ((g$list-tail$4906$bP4ck
     g$list-tail$5043$bP4ck
     (case-lambda
       ((g$lst$4934$bP4ck g$index$4935$bP4ck)
        (if ((case-lambda
               ((g$t$4936$bP4ck)
                (if g$t$4936$bP4ck
                  g$t$4936$bP4ck
                  (begin '#f (g$negative?$5292$bP4ck g$index$4935$bP4ck)))))
             (null? g$lst$4934$bP4ck))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$4934$bP4ck
            g$index$4935$bP4ck)
          (if (g$zero?$5293$bP4ck g$index$4935$bP4ck)
            g$lst$4934$bP4ck
            (g$list-tail$4906$bP4ck
              (cdr g$lst$4934$bP4ck)
              (- g$index$4935$bP4ck '1)))))))
   (g$list-ref$4907$bP4ck
     g$list-ref$5044$bP4ck
     (case-lambda
       ((g$lst$4937$bP4ck g$index$4938$bP4ck)
        (car (g$list-tail$4906$bP4ck g$lst$4937$bP4ck g$index$4938$bP4ck)))))
   (g$last-pair$4908$bP4ck
     g$last-pair$5045$bP4ck
     (case-lambda
       ((g$lst$4939$bP4ck)
        (if (null? g$lst$4939$bP4ck)
          g$lst$4939$bP4ck
          (if (null? (cdr g$lst$4939$bP4ck))
            g$lst$4939$bP4ck
            (g$last-pair$4908$bP4ck (cdr g$lst$4939$bP4ck)))))))
   (g$make-list$4909$bP4ck
     g$make-list$5046$bP4ck
     (case-lambda
       ((g$n$4940$bP4ck) (list->vector (make-vector g$n$4940$bP4ck)))
       ((g$n$4941$bP4ck g$fill$4942$bP4ck)
        (list->vector (make-vector g$n$4941$bP4ck g$fill$4942$bP4ck)))))
   (g$find$4910$bP4ck
     g$find$5047$bP4ck
     (case-lambda
       ((g$proc$4943$bP4ck g$l$4944$bP4ck)
        (if (null? g$l$4944$bP4ck)
          '#f
          ((case-lambda
             ((g$e$4945$bP4ck g$r$4946$bP4ck g$proc$4947$bP4ck)
              (if (g$proc$4947$bP4ck g$e$4945$bP4ck)
                g$e$4945$bP4ck
                (g$find$4910$bP4ck g$proc$4947$bP4ck g$r$4946$bP4ck))))
           (car g$l$4944$bP4ck)
           (cdr g$l$4944$bP4ck)
           g$proc$4943$bP4ck)))))
   (g$partition$4911$bP4ck
     g$partition$5048$bP4ck
     (case-lambda
       ((g$proc$4948$bP4ck g$l$4949$bP4ck)
        ((letrec ((g$f$4950$bP4ck
                    (case-lambda
                      ((g$l$4951$bP4ck g$a$4952$bP4ck g$b$4953$bP4ck)
                       (if (null? g$l$4951$bP4ck)
                         (values
                           (reverse! g$a$4952$bP4ck)
                           (reverse! g$b$4953$bP4ck))
                         ((case-lambda
                            ((g$e$4954$bP4ck)
                             (if (g$proc$4948$bP4ck g$e$4954$bP4ck)
                               (g$f$4950$bP4ck
                                 (cdr g$l$4951$bP4ck)
                                 (cons g$e$4954$bP4ck g$a$4952$bP4ck)
                                 g$b$4953$bP4ck)
                               (g$f$4950$bP4ck
                                 (cdr g$l$4951$bP4ck)
                                 g$a$4952$bP4ck
                                 (cons g$e$4954$bP4ck g$b$4953$bP4ck)))))
                          (car g$l$4951$bP4ck)))))))
           g$f$4950$bP4ck)
         g$l$4949$bP4ck
         '()
         '()))))
   (g$remp$4912$bP4ck
     g$remp$5049$bP4ck
     (case-lambda
       ((g$proc$4955$bP4ck g$l$4956$bP4ck)
        ((letrec ((g$f$4957$bP4ck
                    (case-lambda
                      ((g$l$4958$bP4ck g$a$4959$bP4ck)
                       (if (null? g$l$4958$bP4ck)
                         (reverse! g$a$4959$bP4ck)
                         ((case-lambda
                            ((g$e$4960$bP4ck)
                             (if (g$proc$4955$bP4ck g$e$4960$bP4ck)
                               (g$f$4957$bP4ck
                                 (cdr g$l$4958$bP4ck)
                                 g$a$4959$bP4ck)
                               (g$f$4957$bP4ck
                                 (cdr g$l$4958$bP4ck)
                                 (cons g$e$4960$bP4ck g$a$4959$bP4ck)))))
                          (car g$l$4958$bP4ck)))))))
           g$f$4957$bP4ck)
         g$l$4956$bP4ck
         '()))))
   (g$filter$4913$bP4ck
     g$filter$5050$bP4ck
     (case-lambda
       ((g$proc$4961$bP4ck g$l$4962$bP4ck)
        ((letrec ((g$f$4963$bP4ck
                    (case-lambda
                      ((g$l$4964$bP4ck g$a$4965$bP4ck)
                       (if (null? g$l$4964$bP4ck)
                         (reverse! g$a$4965$bP4ck)
                         ((case-lambda
                            ((g$e$4966$bP4ck)
                             (if (g$proc$4961$bP4ck g$e$4966$bP4ck)
                               (g$f$4963$bP4ck
                                 (cdr g$l$4964$bP4ck)
                                 (cons g$e$4966$bP4ck g$a$4965$bP4ck))
                               (g$f$4963$bP4ck
                                 (cdr g$l$4964$bP4ck)
                                 g$a$4965$bP4ck))))
                          (car g$l$4964$bP4ck)))))))
           g$f$4963$bP4ck)
         g$l$4962$bP4ck
         '()))))
   (g$assq$4914$bP4ck
     g$assq$5051$bP4ck
     (case-lambda
       ((g$obj$4967$bP4ck g$lst$4968$bP4ck)
        (if (null? g$lst$4968$bP4ck)
          '#f
          ((case-lambda
             ((g$obj$4969$bP4ck g$t$4970$bP4ck g$r$4971$bP4ck)
              (if (eq? g$obj$4969$bP4ck (car g$t$4970$bP4ck))
                g$t$4970$bP4ck
                (g$assq$4914$bP4ck g$obj$4969$bP4ck g$r$4971$bP4ck))))
           g$obj$4967$bP4ck
           (car g$lst$4968$bP4ck)
           (cdr g$lst$4968$bP4ck))))))
   (g$assv$4915$bP4ck
     g$assv$5052$bP4ck
     (case-lambda
       ((g$obj$4972$bP4ck g$lst$4973$bP4ck)
        (if (null? g$lst$4973$bP4ck)
          '#f
          ((case-lambda
             ((g$obj$4974$bP4ck g$t$4975$bP4ck g$r$4976$bP4ck)
              (if (eqv? g$obj$4974$bP4ck (car g$t$4975$bP4ck))
                g$t$4975$bP4ck
                (g$assv$4915$bP4ck g$obj$4974$bP4ck g$r$4976$bP4ck))))
           g$obj$4972$bP4ck
           (car g$lst$4973$bP4ck)
           (cdr g$lst$4973$bP4ck))))))
   (g$assoc$4916$bP4ck
     g$assoc$5053$bP4ck
     (case-lambda
       ((g$obj$4977$bP4ck g$lst$4978$bP4ck)
        (if (null? g$lst$4978$bP4ck)
          '#f
          ((case-lambda
             ((g$obj$4979$bP4ck g$t$4980$bP4ck g$r$4981$bP4ck)
              (if (equal? g$obj$4979$bP4ck (car g$t$4980$bP4ck))
                g$t$4980$bP4ck
                (g$assoc$4916$bP4ck g$obj$4979$bP4ck g$r$4981$bP4ck))))
           g$obj$4977$bP4ck
           (car g$lst$4978$bP4ck)
           (cdr g$lst$4978$bP4ck))))))
   (g$assp$4917$bP4ck
     g$assp$5054$bP4ck
     (case-lambda
       ((g$p?$4982$bP4ck g$lst$4983$bP4ck)
        (if (null? g$lst$4983$bP4ck)
          '#f
          ((case-lambda
             ((g$p?$4984$bP4ck g$t$4985$bP4ck g$r$4986$bP4ck)
              (if (g$p?$4984$bP4ck (car g$t$4985$bP4ck))
                g$t$4985$bP4ck
                (g$assp$4917$bP4ck g$p?$4984$bP4ck g$r$4986$bP4ck))))
           g$p?$4982$bP4ck
           (car g$lst$4983$bP4ck)
           (cdr g$lst$4983$bP4ck))))))
   (g$memq$4918$bP4ck
     g$memq$5055$bP4ck
     (case-lambda
       ((g$obj$4987$bP4ck g$lst$4988$bP4ck)
        (if (null? g$lst$4988$bP4ck)
          '#f
          (if (eq? g$obj$4987$bP4ck (car g$lst$4988$bP4ck))
            g$lst$4988$bP4ck
            (g$memq$4918$bP4ck g$obj$4987$bP4ck (cdr g$lst$4988$bP4ck)))))))
   (g$memv$4919$bP4ck
     g$memv$5056$bP4ck
     (case-lambda
       ((g$obj$4989$bP4ck g$lst$4990$bP4ck)
        (if (null? g$lst$4990$bP4ck)
          '#f
          (if (eqv? g$obj$4989$bP4ck (car g$lst$4990$bP4ck))
            g$lst$4990$bP4ck
            (g$memv$4919$bP4ck g$obj$4989$bP4ck (cdr g$lst$4990$bP4ck)))))))
   (g$member$4920$bP4ck
     g$member$5057$bP4ck
     (case-lambda
       ((g$obj$4991$bP4ck g$lst$4992$bP4ck)
        (if (null? g$lst$4992$bP4ck)
          '#f
          (if (equal? g$obj$4991$bP4ck (car g$lst$4992$bP4ck))
            g$lst$4992$bP4ck
            (g$member$4920$bP4ck g$obj$4991$bP4ck (cdr g$lst$4992$bP4ck)))))))
   (g$memp$4921$bP4ck
     g$memp$5058$bP4ck
     (case-lambda
       ((g$p?$4993$bP4ck g$lst$4994$bP4ck)
        (if (null? g$lst$4994$bP4ck)
          '#f
          (if (g$p?$4993$bP4ck (car g$lst$4994$bP4ck))
            g$lst$4994$bP4ck
            (g$memp$4921$bP4ck g$p?$4993$bP4ck (cdr g$lst$4994$bP4ck)))))))
   (g$all-empty?$4922$bP4ck
     g$all-empty?$5059$bP4ck
     (case-lambda
       ((g$ls$4995$bP4ck)
        ((case-lambda
           ((g$t$4996$bP4ck)
            (if g$t$4996$bP4ck
              g$t$4996$bP4ck
              (begin
                '#f
                (if (null? (car g$ls$4995$bP4ck))
                  (begin '#f (g$all-empty?$4922$bP4ck (cdr g$ls$4995$bP4ck)))
                  '#f)))))
         (null? g$ls$4995$bP4ck)))))
   (g$split$4923$bP4ck
     g$split$5060$bP4ck
     (case-lambda
       ((g$ls$4997$bP4ck)
        (if (null? g$ls$4997$bP4ck)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$4923$bP4ck (cdr g$ls$4997$bP4ck))))
            (case-lambda
              ((g$cars$4998$bP4ck g$cdrs$4999$bP4ck)
               ((case-lambda
                  ((g$a$5000$bP4ck)
                   (values
                     (cons (car g$a$5000$bP4ck) g$cars$4998$bP4ck)
                     (cons (cdr g$a$5000$bP4ck) g$cdrs$4999$bP4ck))))
                (car g$ls$4997$bP4ck)))))))))
   (g$for-all$4924$bP4ck
     g$for-all$5061$bP4ck
     (case-lambda
       ((g$f$5001$bP4ck . g$args$5002$bP4ck)
        (if (g$all-empty?$4922$bP4ck g$args$5002$bP4ck)
          '#t
          (call-with-values
            (case-lambda (() (g$split$4923$bP4ck g$args$5002$bP4ck)))
            (case-lambda
              ((g$cars$5003$bP4ck g$cdrs$5004$bP4ck)
               (if (g$all-empty?$4922$bP4ck g$cdrs$5004$bP4ck)
                 (apply g$f$5001$bP4ck g$cars$5003$bP4ck)
                 (if (apply g$f$5001$bP4ck g$cars$5003$bP4ck)
                   (begin
                     '#f
                     (apply
                       g$for-all$4924$bP4ck
                       g$f$5001$bP4ck
                       g$cdrs$5004$bP4ck))
                   '#f)))))))))
   (g$exists$4925$bP4ck
     g$exists$5062$bP4ck
     (case-lambda
       ((g$f$5005$bP4ck . g$args$5006$bP4ck)
        (if (g$all-empty?$4922$bP4ck g$args$5006$bP4ck)
          '#f
          (call-with-values
            (case-lambda (() (g$split$4923$bP4ck g$args$5006$bP4ck)))
            (case-lambda
              ((g$cars$5007$bP4ck g$cdrs$5008$bP4ck)
               ((case-lambda
                  ((g$t$5009$bP4ck)
                   (if g$t$5009$bP4ck
                     g$t$5009$bP4ck
                     (begin
                       '#f
                       (apply
                         g$exists$4925$bP4ck
                         g$f$5005$bP4ck
                         g$cdrs$5008$bP4ck)))))
                (apply g$f$5005$bP4ck g$cars$5007$bP4ck)))))))))
   (g$map$4926$bP4ck
     g$map$5063$bP4ck
     (case-lambda
       ((g$proc$5010$bP4ck . g$lists$5011$bP4ck)
        ((letrec ((g$f$5012$bP4ck
                    (case-lambda
                      ((g$lists$5013$bP4ck g$a$5014$bP4ck)
                       (if (g$all-empty?$4922$bP4ck g$lists$5013$bP4ck)
                         (reverse! g$a$5014$bP4ck)
                         (call-with-values
                           (case-lambda
                             (() (g$split$4923$bP4ck g$lists$5013$bP4ck)))
                           (case-lambda
                             ((g$cars$5015$bP4ck g$cdrs$5016$bP4ck)
                              (g$f$5012$bP4ck
                                g$cdrs$5016$bP4ck
                                (cons
                                  (apply g$proc$5010$bP4ck g$cars$5015$bP4ck)
                                  g$a$5014$bP4ck))))))))))
           g$f$5012$bP4ck)
         g$lists$5011$bP4ck
         '()))))
   (g$for-each$4927$bP4ck
     g$for-each$5064$bP4ck
     (case-lambda
       ((g$f$5017$bP4ck . g$args$5018$bP4ck)
        (if (not (g$all-empty?$4922$bP4ck g$args$5018$bP4ck))
          (call-with-values
            (case-lambda (() (g$split$4923$bP4ck g$args$5018$bP4ck)))
            (case-lambda
              ((g$cars$5019$bP4ck g$cdrs$5020$bP4ck)
               (begin
                 (apply g$f$5017$bP4ck g$cars$5019$bP4ck)
                 (apply
                   g$for-each$4927$bP4ck
                   g$f$5017$bP4ck
                   g$cdrs$5020$bP4ck)))))
          (void)))))
   (g$cons*$4928$bP4ck
     g$cons*$5065$bP4ck
     (case-lambda
       ((g$a$5021$bP4ck . g$rest$5022$bP4ck)
        ((letrec ((g$f$5023$bP4ck
                    (case-lambda
                      ((g$a$5024$bP4ck g$rest$5025$bP4ck)
                       (if (null? g$rest$5025$bP4ck)
                         g$a$5024$bP4ck
                         (cons
                           g$a$5024$bP4ck
                           (g$f$5023$bP4ck
                             (car g$rest$5025$bP4ck)
                             (cdr g$rest$5025$bP4ck))))))))
           g$f$5023$bP4ck)
         g$a$5021$bP4ck
         g$rest$5022$bP4ck))))
   (g$fold-left$4929$bP4ck
     g$fold-left$5066$bP4ck
     (case-lambda
       ((g$combine$5026$bP4ck
          g$nil$5027$bP4ck
          g$list1$5028$bP4ck
          .
          g$lists$5029$bP4ck)
        (if (null? g$list1$5028$bP4ck)
          g$nil$5027$bP4ck
          (apply
            g$fold-left$4929$bP4ck
            (g$cons*$4928$bP4ck
              g$combine$5026$bP4ck
              (apply
                g$combine$5026$bP4ck
                (g$cons*$4928$bP4ck
                  g$nil$5027$bP4ck
                  (car g$list1$5028$bP4ck)
                  (g$map$4926$bP4ck car g$lists$5029$bP4ck)))
              (cdr g$list1$5028$bP4ck)
              (g$map$4926$bP4ck cdr g$lists$5029$bP4ck)))))))
   (g$fold-right$4930$bP4ck
     g$fold-right$5067$bP4ck
     (case-lambda
       ((g$combine$5030$bP4ck
          g$nil$5031$bP4ck
          g$list1$5032$bP4ck
          .
          g$lists$5033$bP4ck)
        (if (null? g$list1$5032$bP4ck)
          g$nil$5031$bP4ck
          (apply
            g$combine$5030$bP4ck
            (append
              (list (car g$list1$5032$bP4ck))
              (g$map$4926$bP4ck car g$lists$5033$bP4ck)
              (list
                (apply
                  g$fold-right$4930$bP4ck
                  (g$cons*$4928$bP4ck
                    g$combine$5030$bP4ck
                    g$nil$5031$bP4ck
                    (cdr g$list1$5032$bP4ck)
                    (g$map$4926$bP4ck cdr g$lists$5033$bP4ck))))))))))
   (g$remove$4931$bP4ck
     g$remove$5068$bP4ck
     (case-lambda
       ((g$obj$5034$bP4ck g$list$5035$bP4ck)
        (g$remp$4912$bP4ck
          (case-lambda
            ((g$x$5036$bP4ck) (equal? g$obj$5034$bP4ck g$x$5036$bP4ck)))
          g$list$5035$bP4ck))))
   (g$remv$4932$bP4ck
     g$remv$5069$bP4ck
     (case-lambda
       ((g$obj$5037$bP4ck g$list$5038$bP4ck)
        (g$remp$4912$bP4ck
          (case-lambda
            ((g$x$5039$bP4ck) (eqv? g$obj$5037$bP4ck g$x$5039$bP4ck)))
          g$list$5038$bP4ck))))
   (g$remq$4933$bP4ck
     g$remq$5070$bP4ck
     (case-lambda
       ((g$obj$5040$bP4ck g$list$5041$bP4ck)
        (g$remp$4912$bP4ck
          (case-lambda ((g$x$5042$bP4ck) (eq? g$obj$5040$bP4ck g$x$5042$bP4ck)))
          g$list$5041$bP4ck)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$caar$5071$bP4ck
     g$caar$5263$bP4ck
     (case-lambda ((g$x$5135$bP4ck) (car (car g$x$5135$bP4ck)))))
   (g$cadr$5072$bP4ck
     g$cadr$5264$bP4ck
     (case-lambda ((g$x$5136$bP4ck) (car (cdr g$x$5136$bP4ck)))))
   (g$cdar$5073$bP4ck
     g$cdar$5265$bP4ck
     (case-lambda ((g$x$5137$bP4ck) (cdr (car g$x$5137$bP4ck)))))
   (g$cddr$5074$bP4ck
     g$cddr$5266$bP4ck
     (case-lambda ((g$x$5138$bP4ck) (cdr (cdr g$x$5138$bP4ck)))))
   (g$caaar$5075$bP4ck
     g$caaar$5267$bP4ck
     (case-lambda
       ((g$x$5139$bP4ck) (g$caar$5071$bP4ck (car g$x$5139$bP4ck)))))
   (g$caadr$5076$bP4ck
     g$caadr$5268$bP4ck
     (case-lambda
       ((g$x$5140$bP4ck) (g$caar$5071$bP4ck (cdr g$x$5140$bP4ck)))))
   (g$cadar$5077$bP4ck
     g$cadar$5269$bP4ck
     (case-lambda
       ((g$x$5141$bP4ck) (g$cadr$5072$bP4ck (car g$x$5141$bP4ck)))))
   (g$caddr$5078$bP4ck
     g$caddr$5270$bP4ck
     (case-lambda
       ((g$x$5142$bP4ck) (g$cadr$5072$bP4ck (cdr g$x$5142$bP4ck)))))
   (g$cdaar$5079$bP4ck
     g$cdaar$5271$bP4ck
     (case-lambda
       ((g$x$5143$bP4ck) (g$cdar$5073$bP4ck (car g$x$5143$bP4ck)))))
   (g$cdadr$5080$bP4ck
     g$cdadr$5272$bP4ck
     (case-lambda
       ((g$x$5144$bP4ck) (g$cdar$5073$bP4ck (cdr g$x$5144$bP4ck)))))
   (g$cddar$5081$bP4ck
     g$cddar$5273$bP4ck
     (case-lambda
       ((g$x$5145$bP4ck) (g$cddr$5074$bP4ck (car g$x$5145$bP4ck)))))
   (g$cdddr$5082$bP4ck
     g$cdddr$5274$bP4ck
     (case-lambda
       ((g$x$5146$bP4ck) (g$cddr$5074$bP4ck (cdr g$x$5146$bP4ck)))))
   (g$caaaar$5083$bP4ck
     g$caaaar$5275$bP4ck
     (case-lambda
       ((g$x$5147$bP4ck) (g$caaar$5075$bP4ck (car g$x$5147$bP4ck)))))
   (g$caaadr$5084$bP4ck
     g$caaadr$5276$bP4ck
     (case-lambda
       ((g$x$5148$bP4ck) (g$caaar$5075$bP4ck (cdr g$x$5148$bP4ck)))))
   (g$caadar$5085$bP4ck
     g$caadar$5277$bP4ck
     (case-lambda
       ((g$x$5149$bP4ck) (g$caadr$5076$bP4ck (car g$x$5149$bP4ck)))))
   (g$caaddr$5086$bP4ck
     g$caaddr$5278$bP4ck
     (case-lambda
       ((g$x$5150$bP4ck) (g$caadr$5076$bP4ck (cdr g$x$5150$bP4ck)))))
   (g$cadaar$5087$bP4ck
     g$cadaar$5279$bP4ck
     (case-lambda
       ((g$x$5151$bP4ck) (g$cadar$5077$bP4ck (car g$x$5151$bP4ck)))))
   (g$cadadr$5088$bP4ck
     g$cadadr$5280$bP4ck
     (case-lambda
       ((g$x$5152$bP4ck) (g$cadar$5077$bP4ck (cdr g$x$5152$bP4ck)))))
   (g$caddar$5089$bP4ck
     g$caddar$5281$bP4ck
     (case-lambda
       ((g$x$5153$bP4ck) (g$caddr$5078$bP4ck (car g$x$5153$bP4ck)))))
   (g$cadddr$5090$bP4ck
     g$cadddr$5282$bP4ck
     (case-lambda
       ((g$x$5154$bP4ck) (g$caddr$5078$bP4ck (cdr g$x$5154$bP4ck)))))
   (g$cdaaar$5091$bP4ck
     g$cdaaar$5283$bP4ck
     (case-lambda
       ((g$x$5155$bP4ck) (g$cdaar$5079$bP4ck (car g$x$5155$bP4ck)))))
   (g$cdaadr$5092$bP4ck
     g$cdaadr$5284$bP4ck
     (case-lambda
       ((g$x$5156$bP4ck) (g$cdaar$5079$bP4ck (cdr g$x$5156$bP4ck)))))
   (g$cdadar$5093$bP4ck
     g$cdadar$5285$bP4ck
     (case-lambda
       ((g$x$5157$bP4ck) (g$cdadr$5080$bP4ck (car g$x$5157$bP4ck)))))
   (g$cdaddr$5094$bP4ck
     g$cdaddr$5286$bP4ck
     (case-lambda
       ((g$x$5158$bP4ck) (g$cdadr$5080$bP4ck (cdr g$x$5158$bP4ck)))))
   (g$cddaar$5095$bP4ck
     g$cddaar$5287$bP4ck
     (case-lambda
       ((g$x$5159$bP4ck) (g$cddar$5081$bP4ck (car g$x$5159$bP4ck)))))
   (g$cddadr$5096$bP4ck
     g$cddadr$5288$bP4ck
     (case-lambda
       ((g$x$5160$bP4ck) (g$cddar$5081$bP4ck (cdr g$x$5160$bP4ck)))))
   (g$cdddar$5097$bP4ck
     g$cdddar$5289$bP4ck
     (case-lambda
       ((g$x$5161$bP4ck) (g$cdddr$5082$bP4ck (car g$x$5161$bP4ck)))))
   (g$cddddr$5098$bP4ck
     g$cddddr$5290$bP4ck
     (case-lambda
       ((g$x$5162$bP4ck) (g$cdddr$5082$bP4ck (cdr g$x$5162$bP4ck)))))
   (g$positive?$5099$bP4ck
     g$positive?$5291$bP4ck
     (case-lambda
       ((g$r$5163$bP4ck)
        (begin
          (if (not (real-valued? g$r$5163$bP4ck))
            (assertion-violation 'positive? '"not a real" g$r$5163$bP4ck)
            (void))
          (< '0 g$r$5163$bP4ck)))))
   (g$negative?$5100$bP4ck
     g$negative?$5292$bP4ck
     (case-lambda
       ((g$r$5164$bP4ck)
        (begin
          (if (not (real-valued? g$r$5164$bP4ck))
            (assertion-violation 'negative? '"not a real" g$r$5164$bP4ck)
            (void))
          (> '0 g$r$5164$bP4ck)))))
   (g$zero?$5101$bP4ck
     g$zero?$5293$bP4ck
     (case-lambda
       ((g$r$5165$bP4ck)
        (begin
          (if (not (real-valued? g$r$5165$bP4ck))
            (assertion-violation 'zero? '"not a real" g$r$5165$bP4ck)
            (void))
          (= '0 g$r$5165$bP4ck)))))
   (g$even?$5102$bP4ck
     g$even?$5294$bP4ck
     (case-lambda
       ((g$n$5166$bP4ck)
        (begin
          (if (not (integer-valued? g$n$5166$bP4ck))
            (assertion-violation 'even? '"not a integer" g$n$5166$bP4ck)
            (void))
          (= '0 (mod g$n$5166$bP4ck '2))))))
   (g$odd?$5103$bP4ck
     g$odd?$5295$bP4ck
     (case-lambda
       ((g$n$5167$bP4ck)
        (begin
          (if (not (integer-valued? g$n$5167$bP4ck))
            (assertion-violation 'odd? '"not a integer" g$n$5167$bP4ck)
            (void))
          (= '1 (mod g$n$5167$bP4ck '2))))))
   (g$max$5104$bP4ck
     g$max$5296$bP4ck
     (case-lambda
       ((g$a$5168$bP4ck . g$rest$5169$bP4ck)
        (g$fold-left$5066$bP4ck
          (case-lambda
            ((g$a$5170$bP4ck g$b$5171$bP4ck)
             ((case-lambda
                ((g$r$5172$bP4ck)
                 (if ((case-lambda
                        ((g$t$5173$bP4ck)
                         (if g$t$5173$bP4ck
                           g$t$5173$bP4ck
                           (begin '#f (inexact? g$b$5171$bP4ck)))))
                      (inexact? g$a$5170$bP4ck))
                   (inexact g$r$5172$bP4ck)
                   g$r$5172$bP4ck)))
              (if (< g$a$5170$bP4ck g$b$5171$bP4ck)
                g$b$5171$bP4ck
                g$a$5170$bP4ck))))
          g$a$5168$bP4ck
          g$rest$5169$bP4ck))))
   (g$min$5105$bP4ck
     g$min$5297$bP4ck
     (case-lambda
       ((g$a$5174$bP4ck . g$rest$5175$bP4ck)
        (g$fold-left$5066$bP4ck
          (case-lambda
            ((g$a$5176$bP4ck g$b$5177$bP4ck)
             ((case-lambda
                ((g$r$5178$bP4ck)
                 (if ((case-lambda
                        ((g$t$5179$bP4ck)
                         (if g$t$5179$bP4ck
                           g$t$5179$bP4ck
                           (begin '#f (inexact? g$b$5177$bP4ck)))))
                      (inexact? g$a$5176$bP4ck))
                   (inexact g$r$5178$bP4ck)
                   g$r$5178$bP4ck)))
              (if (> g$a$5176$bP4ck g$b$5177$bP4ck)
                g$b$5177$bP4ck
                g$a$5176$bP4ck))))
          g$a$5174$bP4ck
          g$rest$5175$bP4ck))))
   (g$gcd$5106$bP4ck
     g$gcd$5298$bP4ck
     (case-lambda
       (g$nums$5180$bP4ck
        ((case-lambda
           ((g$t$5181$bP4ck)
            (if (g$memv$5056$bP4ck g$t$5181$bP4ck '(0))
              '0
              (if (g$memv$5056$bP4ck g$t$5181$bP4ck '(1))
                ((case-lambda
                   ((g$n$5182$bP4ck)
                    (begin
                      (if (not (integer-valued? g$n$5182$bP4ck))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$5182$bP4ck)
                        (void))
                      (abs g$n$5182$bP4ck))))
                 (car g$nums$5180$bP4ck))
                (if (g$memv$5056$bP4ck g$t$5181$bP4ck '(2))
                  ((case-lambda
                     ((g$a$5183$bP4ck g$b$5184$bP4ck)
                      (begin
                        (if (not (integer-valued? g$a$5183$bP4ck))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$5183$bP4ck)
                          (void))
                        (if (not (integer-valued? g$b$5184$bP4ck))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$5184$bP4ck)
                          (void))
                        (if (g$zero?$5101$bP4ck g$b$5184$bP4ck)
                          (abs g$a$5183$bP4ck)
                          (abs (g$gcd$5106$bP4ck
                                 g$b$5184$bP4ck
                                 (mod g$a$5183$bP4ck g$b$5184$bP4ck)))))))
                   (car g$nums$5180$bP4ck)
                   (g$cadr$5072$bP4ck g$nums$5180$bP4ck))
                  (g$fold-left$5066$bP4ck
                    g$gcd$5106$bP4ck
                    (abs (car g$nums$5180$bP4ck))
                    (cdr g$nums$5180$bP4ck)))))))
         (length g$nums$5180$bP4ck)))))
   (g$lcm$5107$bP4ck
     g$lcm$5299$bP4ck
     (case-lambda
       (g$nums$5185$bP4ck
        ((case-lambda
           ((g$t$5186$bP4ck)
            (if (g$memv$5056$bP4ck g$t$5186$bP4ck '(0))
              '1
              (if (g$memv$5056$bP4ck g$t$5186$bP4ck '(1))
                ((case-lambda
                   ((g$n$5187$bP4ck)
                    (begin
                      (if (not (integer-valued? g$n$5187$bP4ck))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$5187$bP4ck)
                        (void))
                      (abs g$n$5187$bP4ck))))
                 (car g$nums$5185$bP4ck))
                (if (g$memv$5056$bP4ck g$t$5186$bP4ck '(2))
                  ((case-lambda
                     ((g$a$5188$bP4ck g$b$5189$bP4ck)
                      (begin
                        (if (not (integer-valued? g$a$5188$bP4ck))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$5188$bP4ck)
                          (void))
                        (if (not (integer-valued? g$b$5189$bP4ck))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$5189$bP4ck)
                          (void))
                        (if ((case-lambda
                               ((g$t$5190$bP4ck)
                                (if g$t$5190$bP4ck
                                  g$t$5190$bP4ck
                                  (begin
                                    '#f
                                    (g$zero?$5101$bP4ck g$b$5189$bP4ck)))))
                             (g$zero?$5101$bP4ck g$a$5188$bP4ck))
                          '0
                          (abs (* (/ g$a$5188$bP4ck
                                     (g$gcd$5106$bP4ck
                                       g$a$5188$bP4ck
                                       g$b$5189$bP4ck))
                                  g$b$5189$bP4ck))))))
                   (car g$nums$5185$bP4ck)
                   (g$cadr$5072$bP4ck g$nums$5185$bP4ck))
                  (g$fold-left$5066$bP4ck
                    g$lcm$5107$bP4ck
                    (abs (car g$nums$5185$bP4ck))
                    (cdr g$nums$5185$bP4ck)))))))
         (length g$nums$5185$bP4ck)))))
   (g$string=?$5114$bP4ck
     g$string=?$5300$bP4ck
     (case-lambda
       ((g$a$5191$bP4ck g$b$5192$bP4ck . g$rest$5193$bP4ck)
        (begin
          (if (not (string? g$a$5191$bP4ck))
            (assertion-violation 'string=? '"not a string" g$a$5191$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5194$bP4ck)
               (begin
                 (if (not (string? g$x$5194$bP4ck))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5194$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5195$bP4ck)
                     (begin
                       (set! g$a$5191$bP4ck g$x$5194$bP4ck)
                       g$r$5195$bP4ck)))
                  (= (string-compare g$a$5191$bP4ck g$x$5194$bP4ck) '0)))))
            (cons g$b$5192$bP4ck g$rest$5193$bP4ck))))))
   (g$string<?$5115$bP4ck
     g$string<?$5301$bP4ck
     (case-lambda
       ((g$a$5196$bP4ck g$b$5197$bP4ck . g$rest$5198$bP4ck)
        (begin
          (if (not (string? g$a$5196$bP4ck))
            (assertion-violation 'string<? '"not a string" g$a$5196$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5199$bP4ck)
               (begin
                 (if (not (string? g$x$5199$bP4ck))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5199$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5200$bP4ck)
                     (begin
                       (set! g$a$5196$bP4ck g$x$5199$bP4ck)
                       g$r$5200$bP4ck)))
                  (< (string-compare g$a$5196$bP4ck g$x$5199$bP4ck) '0)))))
            (cons g$b$5197$bP4ck g$rest$5198$bP4ck))))))
   (g$string>?$5116$bP4ck
     g$string>?$5302$bP4ck
     (case-lambda
       ((g$a$5201$bP4ck g$b$5202$bP4ck . g$rest$5203$bP4ck)
        (begin
          (if (not (string? g$a$5201$bP4ck))
            (assertion-violation 'string>? '"not a string" g$a$5201$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5204$bP4ck)
               (begin
                 (if (not (string? g$x$5204$bP4ck))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5204$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5205$bP4ck)
                     (begin
                       (set! g$a$5201$bP4ck g$x$5204$bP4ck)
                       g$r$5205$bP4ck)))
                  (> (string-compare g$a$5201$bP4ck g$x$5204$bP4ck) '0)))))
            (cons g$b$5202$bP4ck g$rest$5203$bP4ck))))))
   (g$string<=?$5117$bP4ck
     g$string<=?$5303$bP4ck
     (case-lambda
       ((g$a$5206$bP4ck g$b$5207$bP4ck . g$rest$5208$bP4ck)
        (begin
          (if (not (string? g$a$5206$bP4ck))
            (assertion-violation 'string<=? '"not a string" g$a$5206$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5209$bP4ck)
               (begin
                 (if (not (string? g$x$5209$bP4ck))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5209$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5210$bP4ck)
                     (begin
                       (set! g$a$5206$bP4ck g$x$5209$bP4ck)
                       g$r$5210$bP4ck)))
                  (<= (string-compare g$a$5206$bP4ck g$x$5209$bP4ck) '0)))))
            (cons g$b$5207$bP4ck g$rest$5208$bP4ck))))))
   (g$string>=?$5118$bP4ck
     g$string>=?$5304$bP4ck
     (case-lambda
       ((g$a$5211$bP4ck g$b$5212$bP4ck . g$rest$5213$bP4ck)
        (begin
          (if (not (string? g$a$5211$bP4ck))
            (assertion-violation 'string>=? '"not a string" g$a$5211$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5214$bP4ck)
               (begin
                 (if (not (string? g$x$5214$bP4ck))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5214$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5215$bP4ck)
                     (begin
                       (set! g$a$5211$bP4ck g$x$5214$bP4ck)
                       g$r$5215$bP4ck)))
                  (>= (string-compare g$a$5211$bP4ck g$x$5214$bP4ck) '0)))))
            (cons g$b$5212$bP4ck g$rest$5213$bP4ck))))))
   (g$symbol=?$5119$bP4ck
     g$symbol=?$5305$bP4ck
     (case-lambda
       ((g$a$5216$bP4ck g$b$5217$bP4ck . g$rest$5218$bP4ck)
        (begin
          (if (not (symbol? g$a$5216$bP4ck))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5216$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5219$bP4ck)
               (begin
                 (if (not (symbol? g$x$5219$bP4ck))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5219$bP4ck)
                   (void))
                 (eq? g$a$5216$bP4ck g$x$5219$bP4ck))))
            (cons g$b$5217$bP4ck g$rest$5218$bP4ck))))))
   (g$boolean=?$5120$bP4ck
     g$boolean=?$5306$bP4ck
     (case-lambda
       ((g$a$5220$bP4ck g$b$5221$bP4ck . g$rest$5222$bP4ck)
        (begin
          (if (not (boolean? g$a$5220$bP4ck))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5220$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5223$bP4ck)
               (begin
                 (if (not (boolean? g$x$5223$bP4ck))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5223$bP4ck)
                   (void))
                 (eq? g$a$5220$bP4ck g$x$5223$bP4ck))))
            (cons g$b$5221$bP4ck g$rest$5222$bP4ck))))))
   (g$char=?$5127$bP4ck
     g$char=?$5307$bP4ck
     (case-lambda
       ((g$a$5224$bP4ck g$b$5225$bP4ck . g$rest$5226$bP4ck)
        (begin
          (if (not (char? g$a$5224$bP4ck))
            (assertion-violation 'char=? '"not a char" g$a$5224$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5227$bP4ck)
               (begin
                 (if (not (char? g$x$5227$bP4ck))
                   (assertion-violation 'char=? '"not a char" g$x$5227$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5228$bP4ck)
                     (begin
                       (set! g$a$5224$bP4ck g$x$5227$bP4ck)
                       g$r$5228$bP4ck)))
                  (= (char->integer g$a$5224$bP4ck)
                     (char->integer g$x$5227$bP4ck))))))
            (cons g$b$5225$bP4ck g$rest$5226$bP4ck))))))
   (g$char<?$5128$bP4ck
     g$char<?$5308$bP4ck
     (case-lambda
       ((g$a$5229$bP4ck g$b$5230$bP4ck . g$rest$5231$bP4ck)
        (begin
          (if (not (char? g$a$5229$bP4ck))
            (assertion-violation 'char<? '"not a char" g$a$5229$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5232$bP4ck)
               (begin
                 (if (not (char? g$x$5232$bP4ck))
                   (assertion-violation 'char<? '"not a char" g$x$5232$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5233$bP4ck)
                     (begin
                       (set! g$a$5229$bP4ck g$x$5232$bP4ck)
                       g$r$5233$bP4ck)))
                  (< (char->integer g$a$5229$bP4ck)
                     (char->integer g$x$5232$bP4ck))))))
            (cons g$b$5230$bP4ck g$rest$5231$bP4ck))))))
   (g$char>?$5129$bP4ck
     g$char>?$5309$bP4ck
     (case-lambda
       ((g$a$5234$bP4ck g$b$5235$bP4ck . g$rest$5236$bP4ck)
        (begin
          (if (not (char? g$a$5234$bP4ck))
            (assertion-violation 'char>? '"not a char" g$a$5234$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5237$bP4ck)
               (begin
                 (if (not (char? g$x$5237$bP4ck))
                   (assertion-violation 'char>? '"not a char" g$x$5237$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5238$bP4ck)
                     (begin
                       (set! g$a$5234$bP4ck g$x$5237$bP4ck)
                       g$r$5238$bP4ck)))
                  (> (char->integer g$a$5234$bP4ck)
                     (char->integer g$x$5237$bP4ck))))))
            (cons g$b$5235$bP4ck g$rest$5236$bP4ck))))))
   (g$char<=?$5130$bP4ck
     g$char<=?$5310$bP4ck
     (case-lambda
       ((g$a$5239$bP4ck g$b$5240$bP4ck . g$rest$5241$bP4ck)
        (begin
          (if (not (char? g$a$5239$bP4ck))
            (assertion-violation 'char<=? '"not a char" g$a$5239$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5242$bP4ck)
               (begin
                 (if (not (char? g$x$5242$bP4ck))
                   (assertion-violation 'char<=? '"not a char" g$x$5242$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5243$bP4ck)
                     (begin
                       (set! g$a$5239$bP4ck g$x$5242$bP4ck)
                       g$r$5243$bP4ck)))
                  (<= (char->integer g$a$5239$bP4ck)
                      (char->integer g$x$5242$bP4ck))))))
            (cons g$b$5240$bP4ck g$rest$5241$bP4ck))))))
   (g$char>=?$5131$bP4ck
     g$char>=?$5311$bP4ck
     (case-lambda
       ((g$a$5244$bP4ck g$b$5245$bP4ck . g$rest$5246$bP4ck)
        (begin
          (if (not (char? g$a$5244$bP4ck))
            (assertion-violation 'char>=? '"not a char" g$a$5244$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5247$bP4ck)
               (begin
                 (if (not (char? g$x$5247$bP4ck))
                   (assertion-violation 'char>=? '"not a char" g$x$5247$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5248$bP4ck)
                     (begin
                       (set! g$a$5244$bP4ck g$x$5247$bP4ck)
                       g$r$5248$bP4ck)))
                  (>= (char->integer g$a$5244$bP4ck)
                      (char->integer g$x$5247$bP4ck))))))
            (cons g$b$5245$bP4ck g$rest$5246$bP4ck))))))
   (g$rationalize$5132$bP4ck
     g$rationalize$5312$bP4ck
     (case-lambda
       ((g$x$5249$bP4ck g$e$5250$bP4ck)
        (if (if (infinite? g$x$5249$bP4ck)
              (begin '#f (infinite? g$e$5250$bP4ck))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5251$bP4ck)
              (if (if (exact? g$x$5249$bP4ck)
                    (begin '#f (exact? g$e$5250$bP4ck))
                    '#f)
                g$r$5251$bP4ck
                (inexact g$r$5251$bP4ck))))
           (apply
             /
             (g$find-ratio$5133$bP4ck g$x$5249$bP4ck g$e$5250$bP4ck)))))))
   (g$find-ratio$5133$bP4ck
     g$find-ratio$5313$bP4ck
     (case-lambda
       ((g$x$5252$bP4ck g$e$5253$bP4ck)
        (g$find-ratio-between$5134$bP4ck
          (- g$x$5252$bP4ck g$e$5253$bP4ck)
          (+ g$x$5252$bP4ck g$e$5253$bP4ck)))))
   (g$find-ratio-between$5134$bP4ck
     g$find-ratio-between$5314$bP4ck
     (case-lambda
       ((g$x$5254$bP4ck g$y$5255$bP4ck)
        (letrec* ((g$sr$5256$bP4ck
                    (case-lambda
                      ((g$x$5258$bP4ck g$y$5259$bP4ck)
                       ((case-lambda
                          ((g$fx$5260$bP4ck g$fy$5261$bP4ck)
                           (if (>= g$fx$5260$bP4ck g$x$5258$bP4ck)
                             (list g$fx$5260$bP4ck '1)
                             (if (= g$fx$5260$bP4ck g$fy$5261$bP4ck)
                               ((case-lambda
                                  ((g$rat$5262$bP4ck)
                                   (list
                                     (+ (g$cadr$5072$bP4ck g$rat$5262$bP4ck)
                                        (* g$fx$5260$bP4ck
                                           (car g$rat$5262$bP4ck)))
                                     (car g$rat$5262$bP4ck))))
                                (g$sr$5256$bP4ck
                                  (/ (- g$y$5259$bP4ck g$fy$5261$bP4ck))
                                  (/ (- g$x$5258$bP4ck g$fx$5260$bP4ck))))
                               (list (+ '1 g$fx$5260$bP4ck) '1)))))
                        (exact (floor g$x$5258$bP4ck))
                        (exact (floor g$y$5259$bP4ck)))))))
          (if (< g$y$5255$bP4ck g$x$5254$bP4ck)
            (g$find-ratio-between$5134$bP4ck g$y$5255$bP4ck g$x$5254$bP4ck)
            (if (>= g$x$5254$bP4ck g$y$5255$bP4ck)
              (list g$x$5254$bP4ck '1)
              (if (g$positive?$5099$bP4ck g$x$5254$bP4ck)
                (g$sr$5256$bP4ck g$x$5254$bP4ck g$y$5255$bP4ck)
                (if (g$negative?$5100$bP4ck g$y$5255$bP4ck)
                  ((case-lambda
                     ((g$rat$5257$bP4ck)
                      (list
                        (- (car g$rat$5257$bP4ck))
                        (g$cadr$5072$bP4ck g$rat$5257$bP4ck))))
                   (g$sr$5256$bP4ck (- g$y$5255$bP4ck) (- g$x$5254$bP4ck)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5503$bP4ck g$using$5536$bP4ck (clr-using-internal 'system))
   (g$using$5505$bP4ck
     g$using$5537$bP4ck
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5506$bP4ck
     g$make-eq-hashtable$5538$bP4ck
     (case-lambda
       (() (g$make-eq-hashtable$5506$bP4ck '32))
       ((g$k$5515$bP4ck)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5515$bP4ck)))))
   (g$make-eqv-hashtable$5507$bP4ck
     g$make-eqv-hashtable$5539$bP4ck
     (case-lambda
       (() (g$make-eqv-hashtable$5507$bP4ck '32))
       ((g$k$5516$bP4ck) (make-hashtable eqv-hash eqv? g$k$5516$bP4ck))))
   (g$hashtable-size$5508$bP4ck
     g$hashtable-size$5540$bP4ck
     (case-lambda
       ((g$ht$5517$bP4ck)
        (clr-call-internal 'hashtable 'get_count g$ht$5517$bP4ck))))
   (g$hashtable-ref$5509$bP4ck
     g$hashtable-ref$5541$bP4ck
     (case-lambda
       ((g$ht$5518$bP4ck g$key$5519$bP4ck g$default$5520$bP4ck)
        (letrec* ((g$r$5521$bP4ck
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5518$bP4ck
                      g$key$5519$bP4ck)))
          (if (not (null? g$r$5521$bP4ck))
            g$r$5521$bP4ck
            g$default$5520$bP4ck)))))
   (g$hashtable-set!$5510$bP4ck
     g$hashtable-set!$5542$bP4ck
     (case-lambda
       ((g$ht$5522$bP4ck g$key$5523$bP4ck g$obj$5524$bP4ck)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5522$bP4ck
          g$key$5523$bP4ck
          g$obj$5524$bP4ck))))
   (g$hashtable-delete!$5511$bP4ck
     g$hashtable-delete!$5543$bP4ck
     (case-lambda
       ((g$ht$5525$bP4ck g$key$5526$bP4ck)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5525$bP4ck
          g$key$5526$bP4ck))))
   (g$hashtable-contains?$5512$bP4ck
     g$hashtable-contains?$5544$bP4ck
     (case-lambda
       ((g$ht$5527$bP4ck g$key$5528$bP4ck)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5527$bP4ck
          g$key$5528$bP4ck))))
   (g$hashtable-update!$5513$bP4ck
     g$hashtable-update!$5545$bP4ck
     (case-lambda
       ((g$ht$5529$bP4ck
          g$key$5530$bP4ck
          g$proc$5531$bP4ck
          g$default$5532$bP4ck)
        (g$hashtable-set!$5510$bP4ck
          g$ht$5529$bP4ck
          g$key$5530$bP4ck
          (g$proc$5531$bP4ck
            (g$hashtable-ref$5509$bP4ck
              g$ht$5529$bP4ck
              g$key$5530$bP4ck
              g$default$5532$bP4ck))))))
   (g$hashtable-clear!$5514$bP4ck
     g$hashtable-clear!$5546$bP4ck
     (case-lambda
       ((g$ht$5533$bP4ck) (g$hashtable-clear!$5514$bP4ck g$ht$5533$bP4ck '32))
       ((g$ht$5534$bP4ck g$k$5535$bP4ck)
        (clr-call-internal 'hashtable 'clear g$ht$5534$bP4ck)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5548$bP4ck g$using$5555$bP4ck (clr-using-internal 'system.io))
   (g$file-exists?$5549$bP4ck
     g$file-exists?$5556$bP4ck
     (case-lambda
       ((g$fn$5552$bP4ck)
        (clr-call-internal 'file 'exists '() g$fn$5552$bP4ck))))
   (g$delete-file$5550$bP4ck
     g$delete-file$5557$bP4ck
     (case-lambda
       ((g$fn$5553$bP4ck)
        (clr-call-internal 'file 'delete '() g$fn$5553$bP4ck))))
   (g$get-directory-name$5551$bP4ck
     g$get-directory-name$5558$bP4ck
     (case-lambda
       ((g$path$5554$bP4ck)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5554$bP4ck)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5559$bP4ck
     g$native-endianness$5670$bP4ck
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5560$bP4ck
     g$bytevector-u16-ref$5671$bP4ck
     (case-lambda
       ((g$bytevector$5588$bP4ck g$k$5589$bP4ck g$endianness$5590$bP4ck)
        (bytevector-uint-ref
          g$bytevector$5588$bP4ck
          g$k$5589$bP4ck
          g$endianness$5590$bP4ck
          '2))))
   (g$bytevector-s16-ref$5561$bP4ck
     g$bytevector-s16-ref$5672$bP4ck
     (case-lambda
       ((g$bytevector$5591$bP4ck g$k$5592$bP4ck g$endianness$5593$bP4ck)
        (bytevector-sint-ref
          g$bytevector$5591$bP4ck
          g$k$5592$bP4ck
          g$endianness$5593$bP4ck
          '2))))
   (g$bytevector-u16-native-ref$5562$bP4ck
     g$bytevector-u16-native-ref$5673$bP4ck
     (case-lambda
       ((g$bytevector$5594$bP4ck g$k$5595$bP4ck)
        (bytevector-uint-ref
          g$bytevector$5594$bP4ck
          g$k$5595$bP4ck
          (g$native-endianness$5559$bP4ck)
          '2))))
   (g$bytevector-s16-native-ref$5563$bP4ck
     g$bytevector-s16-native-ref$5674$bP4ck
     (case-lambda
       ((g$bytevector$5596$bP4ck g$k$5597$bP4ck)
        (bytevector-sint-ref
          g$bytevector$5596$bP4ck
          g$k$5597$bP4ck
          (g$native-endianness$5559$bP4ck)
          '2))))
   (g$bytevector-u16-set!$5564$bP4ck
     g$bytevector-u16-set!$5675$bP4ck
     (case-lambda
       ((g$bytevector$5598$bP4ck
          g$k$5599$bP4ck
          g$n$5600$bP4ck
          g$endianness$5601$bP4ck)
        (bytevector-uint-set!
          g$bytevector$5598$bP4ck
          g$k$5599$bP4ck
          g$n$5600$bP4ck
          g$endianness$5601$bP4ck
          '2))))
   (g$bytevector-s16-set!$5565$bP4ck
     g$bytevector-s16-set!$5676$bP4ck
     (case-lambda
       ((g$bytevector$5602$bP4ck
          g$k$5603$bP4ck
          g$n$5604$bP4ck
          g$endianness$5605$bP4ck)
        (bytevector-sint-set!
          g$bytevector$5602$bP4ck
          g$k$5603$bP4ck
          g$n$5604$bP4ck
          g$endianness$5605$bP4ck
          '2))))
   (g$bytevector-u16-native-set!$5566$bP4ck
     g$bytevector-u16-native-set!$5677$bP4ck
     (case-lambda
       ((g$bytevector$5606$bP4ck g$k$5607$bP4ck g$n$5608$bP4ck)
        (bytevector-uint-set!
          g$bytevector$5606$bP4ck
          g$k$5607$bP4ck
          g$n$5608$bP4ck
          (g$native-endianness$5559$bP4ck)
          '2))))
   (g$bytevector-s16-native-set!$5567$bP4ck
     g$bytevector-s16-native-set!$5678$bP4ck
     (case-lambda
       ((g$bytevector$5609$bP4ck g$k$5610$bP4ck g$n$5611$bP4ck)
        (bytevector-sint-set!
          g$bytevector$5609$bP4ck
          g$k$5610$bP4ck
          g$n$5611$bP4ck
          (g$native-endianness$5559$bP4ck)
          '2))))
   (g$bytevector-u32-ref$5568$bP4ck
     g$bytevector-u32-ref$5679$bP4ck
     (case-lambda
       ((g$bytevector$5612$bP4ck g$k$5613$bP4ck g$endianness$5614$bP4ck)
        (bytevector-uint-ref
          g$bytevector$5612$bP4ck
          g$k$5613$bP4ck
          g$endianness$5614$bP4ck
          '4))))
   (g$bytevector-s32-ref$5569$bP4ck
     g$bytevector-s32-ref$5680$bP4ck
     (case-lambda
       ((g$bytevector$5615$bP4ck g$k$5616$bP4ck g$endianness$5617$bP4ck)
        (bytevector-sint-ref
          g$bytevector$5615$bP4ck
          g$k$5616$bP4ck
          g$endianness$5617$bP4ck
          '4))))
   (g$bytevector-u32-native-ref$5570$bP4ck
     g$bytevector-u32-native-ref$5681$bP4ck
     (case-lambda
       ((g$bytevector$5618$bP4ck g$k$5619$bP4ck)
        (bytevector-uint-ref
          g$bytevector$5618$bP4ck
          g$k$5619$bP4ck
          (g$native-endianness$5559$bP4ck)
          '4))))
   (g$bytevector-s32-native-ref$5571$bP4ck
     g$bytevector-s32-native-ref$5682$bP4ck
     (case-lambda
       ((g$bytevector$5620$bP4ck g$k$5621$bP4ck)
        (bytevector-sint-ref
          g$bytevector$5620$bP4ck
          g$k$5621$bP4ck
          (g$native-endianness$5559$bP4ck)
          '4))))
   (g$bytevector-u32-set!$5572$bP4ck
     g$bytevector-u32-set!$5683$bP4ck
     (case-lambda
       ((g$bytevector$5622$bP4ck
          g$k$5623$bP4ck
          g$n$5624$bP4ck
          g$endianness$5625$bP4ck)
        (bytevector-uint-set!
          g$bytevector$5622$bP4ck
          g$k$5623$bP4ck
          g$n$5624$bP4ck
          g$endianness$5625$bP4ck
          '4))))
   (g$bytevector-s32-set!$5573$bP4ck
     g$bytevector-s32-set!$5684$bP4ck
     (case-lambda
       ((g$bytevector$5626$bP4ck
          g$k$5627$bP4ck
          g$n$5628$bP4ck
          g$endianness$5629$bP4ck)
        (bytevector-sint-set!
          g$bytevector$5626$bP4ck
          g$k$5627$bP4ck
          g$n$5628$bP4ck
          g$endianness$5629$bP4ck
          '4))))
   (g$bytevector-u32-native-set!$5574$bP4ck
     g$bytevector-u32-native-set!$5685$bP4ck
     (case-lambda
       ((g$bytevector$5630$bP4ck g$k$5631$bP4ck g$n$5632$bP4ck)
        (bytevector-uint-set!
          g$bytevector$5630$bP4ck
          g$k$5631$bP4ck
          g$n$5632$bP4ck
          (g$native-endianness$5559$bP4ck)
          '4))))
   (g$bytevector-s32-native-set!$5575$bP4ck
     g$bytevector-s32-native-set!$5686$bP4ck
     (case-lambda
       ((g$bytevector$5633$bP4ck g$k$5634$bP4ck g$n$5635$bP4ck)
        (bytevector-sint-set!
          g$bytevector$5633$bP4ck
          g$k$5634$bP4ck
          g$n$5635$bP4ck
          (g$native-endianness$5559$bP4ck)
          '4))))
   (g$bytevector-u64-ref$5576$bP4ck
     g$bytevector-u64-ref$5687$bP4ck
     (case-lambda
       ((g$bytevector$5636$bP4ck g$k$5637$bP4ck g$endianness$5638$bP4ck)
        (bytevector-uint-ref
          g$bytevector$5636$bP4ck
          g$k$5637$bP4ck
          g$endianness$5638$bP4ck
          '8))))
   (g$bytevector-s64-ref$5577$bP4ck
     g$bytevector-s64-ref$5688$bP4ck
     (case-lambda
       ((g$bytevector$5639$bP4ck g$k$5640$bP4ck g$endianness$5641$bP4ck)
        (bytevector-sint-ref
          g$bytevector$5639$bP4ck
          g$k$5640$bP4ck
          g$endianness$5641$bP4ck
          '8))))
   (g$bytevector-u64-native-ref$5578$bP4ck
     g$bytevector-u64-native-ref$5689$bP4ck
     (case-lambda
       ((g$bytevector$5642$bP4ck g$k$5643$bP4ck)
        (bytevector-uint-ref
          g$bytevector$5642$bP4ck
          g$k$5643$bP4ck
          (g$native-endianness$5559$bP4ck)
          '8))))
   (g$bytevector-s64-native-ref$5579$bP4ck
     g$bytevector-s64-native-ref$5690$bP4ck
     (case-lambda
       ((g$bytevector$5644$bP4ck g$k$5645$bP4ck)
        (bytevector-sint-ref
          g$bytevector$5644$bP4ck
          g$k$5645$bP4ck
          (g$native-endianness$5559$bP4ck)
          '8))))
   (g$bytevector-u64-set!$5580$bP4ck
     g$bytevector-u64-set!$5691$bP4ck
     (case-lambda
       ((g$bytevector$5646$bP4ck
          g$k$5647$bP4ck
          g$n$5648$bP4ck
          g$endianness$5649$bP4ck)
        (bytevector-uint-set!
          g$bytevector$5646$bP4ck
          g$k$5647$bP4ck
          g$n$5648$bP4ck
          g$endianness$5649$bP4ck
          '8))))
   (g$bytevector-s64-set!$5581$bP4ck
     g$bytevector-s64-set!$5692$bP4ck
     (case-lambda
       ((g$bytevector$5650$bP4ck
          g$k$5651$bP4ck
          g$n$5652$bP4ck
          g$endianness$5653$bP4ck)
        (bytevector-sint-set!
          g$bytevector$5650$bP4ck
          g$k$5651$bP4ck
          g$n$5652$bP4ck
          g$endianness$5653$bP4ck
          '8))))
   (g$bytevector-u64-native-set!$5582$bP4ck
     g$bytevector-u64-native-set!$5693$bP4ck
     (case-lambda
       ((g$bytevector$5654$bP4ck g$k$5655$bP4ck g$n$5656$bP4ck)
        (bytevector-uint-set!
          g$bytevector$5654$bP4ck
          g$k$5655$bP4ck
          g$n$5656$bP4ck
          (g$native-endianness$5559$bP4ck)
          '8))))
   (g$bytevector-s64-native-set!$5583$bP4ck
     g$bytevector-s64-native-set!$5694$bP4ck
     (case-lambda
       ((g$bytevector$5657$bP4ck g$k$5658$bP4ck g$n$5659$bP4ck)
        (bytevector-sint-set!
          g$bytevector$5657$bP4ck
          g$k$5658$bP4ck
          g$n$5659$bP4ck
          (g$native-endianness$5559$bP4ck)
          '8))))
   (g$bytevector-ieee-single-native-ref$5584$bP4ck
     g$bytevector-ieee-single-native-ref$5695$bP4ck
     (case-lambda
       ((g$bytevector$5660$bP4ck g$k$5661$bP4ck)
        (if (not (g$zero?$5293$bP4ck (mod g$k$5661$bP4ck '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5661$bP4ck)
          (bytevector-ieee-single-ref
            g$bytevector$5660$bP4ck
            g$k$5661$bP4ck
            (g$native-endianness$5559$bP4ck))))))
   (g$bytevector-ieee-double-native-ref$5585$bP4ck
     g$bytevector-ieee-double-native-ref$5696$bP4ck
     (case-lambda
       ((g$bytevector$5662$bP4ck g$k$5663$bP4ck)
        (if (not (g$zero?$5293$bP4ck (mod g$k$5663$bP4ck '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5663$bP4ck)
          (bytevector-ieee-double-ref
            g$bytevector$5662$bP4ck
            g$k$5663$bP4ck
            (g$native-endianness$5559$bP4ck))))))
   (g$bytevector-ieee-single-native-set!$5586$bP4ck
     g$bytevector-ieee-single-native-set!$5697$bP4ck
     (case-lambda
       ((g$bytevector$5664$bP4ck g$k$5665$bP4ck g$x$5666$bP4ck)
        (if (not (g$zero?$5293$bP4ck (mod g$k$5665$bP4ck '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5665$bP4ck)
          (bytevector-ieee-single-set!
            g$bytevector$5664$bP4ck
            g$k$5665$bP4ck
            g$x$5666$bP4ck
            (g$native-endianness$5559$bP4ck))))))
   (g$bytevector-ieee-double-native-set!$5587$bP4ck
     g$bytevector-ieee-double-native-set!$5698$bP4ck
     (case-lambda
       ((g$bytevector$5667$bP4ck g$k$5668$bP4ck g$x$5669$bP4ck)
        (if (not (g$zero?$5293$bP4ck (mod g$k$5668$bP4ck '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5668$bP4ck)
          (bytevector-ieee-double-set!
            g$bytevector$5667$bP4ck
            g$k$5668$bP4ck
            g$x$5669$bP4ck
            (g$native-endianness$5559$bP4ck)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6689$5699$bP4ck
     g$6689$5794$bP4ck
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6692$bP4ck
       '#f
       '#f
       '#()))
   (g$6691$5700$bP4ck g$6691$5795$bP4ck '#f)
   (g$6690$5701$bP4ck
     g$6690$5796$bP4ck
     (make-record-constructor-descriptor
       g$6689$5699$bP4ck
       '#f
       g$6691$5700$bP4ck))
   (g$&condition?$5702$bP4ck
     g$&condition?$5797$bP4ck
     (record-predicate g$6689$5699$bP4ck))
   (g$make-&condition$5703$bP4ck
     g$make-&condition$5798$bP4ck
     (record-constructor g$6690$5701$bP4ck))
   (g$&condition-rtd$5704$bP4ck
     g$&condition-rtd$5799$bP4ck
     g$6689$5699$bP4ck)
   (g$&condition-rcd$5705$bP4ck
     g$&condition-rcd$5800$bP4ck
     g$6690$5701$bP4ck)
   (g$6705$5706$bP4ck
     g$6705$5801$bP4ck
     (make-record-type-descriptor
       '&message
       g$6689$5699$bP4ck
       'g$6708$bP4ck
       '#f
       '#f
       '#((immutable message))))
   (g$6707$5707$bP4ck g$6707$5802$bP4ck '#f)
   (g$6706$5708$bP4ck
     g$6706$5803$bP4ck
     (make-record-constructor-descriptor
       g$6705$5706$bP4ck
       g$6690$5701$bP4ck
       g$6707$5707$bP4ck))
   (g$6704$5709$bP4ck
     g$6704$5804$bP4ck
     (record-predicate g$6705$5706$bP4ck))
   (g$make-message-condition$5710$bP4ck
     g$make-message-condition$5805$bP4ck
     (record-constructor g$6706$5708$bP4ck))
   (g$6703$5711$bP4ck
     g$6703$5806$bP4ck
     (record-accessor g$6705$5706$bP4ck '0))
   (g$message-condition?$5712$bP4ck
     g$message-condition?$5807$bP4ck
     (condition-predicate g$6705$5706$bP4ck))
   (g$condition-message$5713$bP4ck
     g$condition-message$5808$bP4ck
     (condition-accessor g$6705$5706$bP4ck g$6703$5711$bP4ck))
   (g$6721$5714$bP4ck
     g$6721$5809$bP4ck
     (make-record-type-descriptor
       '&warning
       g$6689$5699$bP4ck
       'g$6724$bP4ck
       '#f
       '#f
       '#()))
   (g$6723$5715$bP4ck g$6723$5810$bP4ck '#f)
   (g$6722$5716$bP4ck
     g$6722$5811$bP4ck
     (make-record-constructor-descriptor
       g$6721$5714$bP4ck
       g$6690$5701$bP4ck
       g$6723$5715$bP4ck))
   (g$6720$5717$bP4ck
     g$6720$5812$bP4ck
     (record-predicate g$6721$5714$bP4ck))
   (g$make-warning$5718$bP4ck
     g$make-warning$5813$bP4ck
     (record-constructor g$6722$5716$bP4ck))
   (g$warning?$5719$bP4ck
     g$warning?$5814$bP4ck
     (condition-predicate g$6721$5714$bP4ck))
   (g$6735$5720$bP4ck
     g$6735$5815$bP4ck
     (make-record-type-descriptor
       '&serious
       g$6689$5699$bP4ck
       'g$6738$bP4ck
       '#f
       '#f
       '#()))
   (g$6737$5721$bP4ck g$6737$5816$bP4ck '#f)
   (g$6736$5722$bP4ck
     g$6736$5817$bP4ck
     (make-record-constructor-descriptor
       g$6735$5720$bP4ck
       g$6690$5701$bP4ck
       g$6737$5721$bP4ck))
   (g$6734$5723$bP4ck
     g$6734$5818$bP4ck
     (record-predicate g$6735$5720$bP4ck))
   (g$make-serious-condition$5724$bP4ck
     g$make-serious-condition$5819$bP4ck
     (record-constructor g$6736$5722$bP4ck))
   (g$serious-condition?$5725$bP4ck
     g$serious-condition?$5820$bP4ck
     (condition-predicate g$6735$5720$bP4ck))
   (g$6749$5726$bP4ck
     g$6749$5821$bP4ck
     (make-record-type-descriptor
       '&error
       g$6735$5720$bP4ck
       'g$6752$bP4ck
       '#f
       '#f
       '#()))
   (g$6751$5727$bP4ck g$6751$5822$bP4ck '#f)
   (g$6750$5728$bP4ck
     g$6750$5823$bP4ck
     (make-record-constructor-descriptor
       g$6749$5726$bP4ck
       g$6736$5722$bP4ck
       g$6751$5727$bP4ck))
   (g$6748$5729$bP4ck
     g$6748$5824$bP4ck
     (record-predicate g$6749$5726$bP4ck))
   (g$make-error$5730$bP4ck
     g$make-error$5825$bP4ck
     (record-constructor g$6750$5728$bP4ck))
   (g$error?$5731$bP4ck
     g$error?$5826$bP4ck
     (condition-predicate g$6749$5726$bP4ck))
   (g$6763$5732$bP4ck
     g$6763$5827$bP4ck
     (make-record-type-descriptor
       '&violation
       g$6735$5720$bP4ck
       'g$6766$bP4ck
       '#f
       '#f
       '#()))
   (g$6765$5733$bP4ck g$6765$5828$bP4ck '#f)
   (g$6764$5734$bP4ck
     g$6764$5829$bP4ck
     (make-record-constructor-descriptor
       g$6763$5732$bP4ck
       g$6736$5722$bP4ck
       g$6765$5733$bP4ck))
   (g$6762$5735$bP4ck
     g$6762$5830$bP4ck
     (record-predicate g$6763$5732$bP4ck))
   (g$make-violation$5736$bP4ck
     g$make-violation$5831$bP4ck
     (record-constructor g$6764$5734$bP4ck))
   (g$violation?$5737$bP4ck
     g$violation?$5832$bP4ck
     (condition-predicate g$6763$5732$bP4ck))
   (g$6777$5738$bP4ck
     g$6777$5833$bP4ck
     (make-record-type-descriptor
       '&assertion
       g$6763$5732$bP4ck
       'g$6780$bP4ck
       '#f
       '#f
       '#()))
   (g$6779$5739$bP4ck g$6779$5834$bP4ck '#f)
   (g$6778$5740$bP4ck
     g$6778$5835$bP4ck
     (make-record-constructor-descriptor
       g$6777$5738$bP4ck
       g$6764$5734$bP4ck
       g$6779$5739$bP4ck))
   (g$6776$5741$bP4ck
     g$6776$5836$bP4ck
     (record-predicate g$6777$5738$bP4ck))
   (g$make-assertion-violation$5742$bP4ck
     g$make-assertion-violation$5837$bP4ck
     (record-constructor g$6778$5740$bP4ck))
   (g$assertion-violation?$5743$bP4ck
     g$assertion-violation?$5838$bP4ck
     (condition-predicate g$6777$5738$bP4ck))
   (g$6792$5744$bP4ck
     g$6792$5839$bP4ck
     (make-record-type-descriptor
       '&irritants
       g$6689$5699$bP4ck
       'g$6795$bP4ck
       '#f
       '#f
       '#((immutable irritants))))
   (g$6794$5745$bP4ck g$6794$5840$bP4ck '#f)
   (g$6793$5746$bP4ck
     g$6793$5841$bP4ck
     (make-record-constructor-descriptor
       g$6792$5744$bP4ck
       g$6690$5701$bP4ck
       g$6794$5745$bP4ck))
   (g$6791$5747$bP4ck
     g$6791$5842$bP4ck
     (record-predicate g$6792$5744$bP4ck))
   (g$make-irritants-condition$5748$bP4ck
     g$make-irritants-condition$5843$bP4ck
     (record-constructor g$6793$5746$bP4ck))
   (g$6790$5749$bP4ck
     g$6790$5844$bP4ck
     (record-accessor g$6792$5744$bP4ck '0))
   (g$irritants-condition?$5750$bP4ck
     g$irritants-condition?$5845$bP4ck
     (condition-predicate g$6792$5744$bP4ck))
   (g$condition-irritants$5751$bP4ck
     g$condition-irritants$5846$bP4ck
     (condition-accessor g$6792$5744$bP4ck g$6790$5749$bP4ck))
   (g$6809$5752$bP4ck
     g$6809$5847$bP4ck
     (make-record-type-descriptor
       '&who
       g$6689$5699$bP4ck
       'g$6812$bP4ck
       '#f
       '#f
       '#((immutable who))))
   (g$6811$5753$bP4ck g$6811$5848$bP4ck '#f)
   (g$6810$5754$bP4ck
     g$6810$5849$bP4ck
     (make-record-constructor-descriptor
       g$6809$5752$bP4ck
       g$6690$5701$bP4ck
       g$6811$5753$bP4ck))
   (g$6808$5755$bP4ck
     g$6808$5850$bP4ck
     (record-predicate g$6809$5752$bP4ck))
   (g$make-who-condition$5756$bP4ck
     g$make-who-condition$5851$bP4ck
     (record-constructor g$6810$5754$bP4ck))
   (g$6807$5757$bP4ck
     g$6807$5852$bP4ck
     (record-accessor g$6809$5752$bP4ck '0))
   (g$who-condition?$5758$bP4ck
     g$who-condition?$5853$bP4ck
     (condition-predicate g$6809$5752$bP4ck))
   (g$condition-who$5759$bP4ck
     g$condition-who$5854$bP4ck
     (condition-accessor g$6809$5752$bP4ck g$6807$5757$bP4ck))
   (g$6825$5760$bP4ck
     g$6825$5855$bP4ck
     (make-record-type-descriptor
       '&non-continuable
       g$6763$5732$bP4ck
       'g$6828$bP4ck
       '#f
       '#f
       '#()))
   (g$6827$5761$bP4ck g$6827$5856$bP4ck '#f)
   (g$6826$5762$bP4ck
     g$6826$5857$bP4ck
     (make-record-constructor-descriptor
       g$6825$5760$bP4ck
       g$6764$5734$bP4ck
       g$6827$5761$bP4ck))
   (g$6824$5763$bP4ck
     g$6824$5858$bP4ck
     (record-predicate g$6825$5760$bP4ck))
   (g$make-non-continuable-violation$5764$bP4ck
     g$make-non-continuable-violation$5859$bP4ck
     (record-constructor g$6826$5762$bP4ck))
   (g$non-continuable-violation?$5765$bP4ck
     g$non-continuable-violation?$5860$bP4ck
     (condition-predicate g$6825$5760$bP4ck))
   (g$6839$5766$bP4ck
     g$6839$5861$bP4ck
     (make-record-type-descriptor
       '&implementation-restriction
       g$6763$5732$bP4ck
       'g$6842$bP4ck
       '#f
       '#f
       '#()))
   (g$6841$5767$bP4ck g$6841$5862$bP4ck '#f)
   (g$6840$5768$bP4ck
     g$6840$5863$bP4ck
     (make-record-constructor-descriptor
       g$6839$5766$bP4ck
       g$6764$5734$bP4ck
       g$6841$5767$bP4ck))
   (g$6838$5769$bP4ck
     g$6838$5864$bP4ck
     (record-predicate g$6839$5766$bP4ck))
   (g$make-implementation-restriction-violation$5770$bP4ck
     g$make-implementation-restriction-violation$5865$bP4ck
     (record-constructor g$6840$5768$bP4ck))
   (g$implementation-restriction-violation?$5771$bP4ck
     g$implementation-restriction-violation?$5866$bP4ck
     (condition-predicate g$6839$5766$bP4ck))
   (g$6853$5772$bP4ck
     g$6853$5867$bP4ck
     (make-record-type-descriptor
       '&lexical
       g$6763$5732$bP4ck
       'g$6856$bP4ck
       '#f
       '#f
       '#()))
   (g$6855$5773$bP4ck g$6855$5868$bP4ck '#f)
   (g$6854$5774$bP4ck
     g$6854$5869$bP4ck
     (make-record-constructor-descriptor
       g$6853$5772$bP4ck
       g$6764$5734$bP4ck
       g$6855$5773$bP4ck))
   (g$6852$5775$bP4ck
     g$6852$5870$bP4ck
     (record-predicate g$6853$5772$bP4ck))
   (g$make-lexical-violation$5776$bP4ck
     g$make-lexical-violation$5871$bP4ck
     (record-constructor g$6854$5774$bP4ck))
   (g$lexical-violation?$5777$bP4ck
     g$lexical-violation?$5872$bP4ck
     (condition-predicate g$6853$5772$bP4ck))
   (g$6869$5778$bP4ck
     g$6869$5873$bP4ck
     (make-record-type-descriptor
       '&syntax
       g$6763$5732$bP4ck
       'g$6872$bP4ck
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6871$5779$bP4ck g$6871$5874$bP4ck '#f)
   (g$6870$5780$bP4ck
     g$6870$5875$bP4ck
     (make-record-constructor-descriptor
       g$6869$5778$bP4ck
       g$6764$5734$bP4ck
       g$6871$5779$bP4ck))
   (g$6868$5781$bP4ck
     g$6868$5876$bP4ck
     (record-predicate g$6869$5778$bP4ck))
   (g$make-syntax-violation$5782$bP4ck
     g$make-syntax-violation$5877$bP4ck
     (record-constructor g$6870$5780$bP4ck))
   (g$6866$5783$bP4ck
     g$6866$5878$bP4ck
     (record-accessor g$6869$5778$bP4ck '0))
   (g$6867$5784$bP4ck
     g$6867$5879$bP4ck
     (record-accessor g$6869$5778$bP4ck '1))
   (g$syntax-violation?$5785$bP4ck
     g$syntax-violation?$5880$bP4ck
     (condition-predicate g$6869$5778$bP4ck))
   (g$syntax-violation-form$5786$bP4ck
     g$syntax-violation-form$5881$bP4ck
     (condition-accessor g$6869$5778$bP4ck g$6866$5783$bP4ck))
   (g$syntax-violation-subform$5787$bP4ck
     g$syntax-violation-subform$5882$bP4ck
     (condition-accessor g$6869$5778$bP4ck g$6867$5784$bP4ck))
   (g$6887$5788$bP4ck
     g$6887$5883$bP4ck
     (make-record-type-descriptor
       '&undefined
       g$6763$5732$bP4ck
       'g$6890$bP4ck
       '#f
       '#f
       '#()))
   (g$6889$5789$bP4ck g$6889$5884$bP4ck '#f)
   (g$6888$5790$bP4ck
     g$6888$5885$bP4ck
     (make-record-constructor-descriptor
       g$6887$5788$bP4ck
       g$6764$5734$bP4ck
       g$6889$5789$bP4ck))
   (g$6886$5791$bP4ck
     g$6886$5886$bP4ck
     (record-predicate g$6887$5788$bP4ck))
   (g$make-undefined-violation$5792$bP4ck
     g$make-undefined-violation$5887$bP4ck
     (record-constructor g$6888$5790$bP4ck))
   (g$undefined-violation?$5793$bP4ck
     g$undefined-violation?$5888$bP4ck
     (condition-predicate g$6887$5788$bP4ck)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5889$bP4ck
     g$append!$5895$bP4ck
     (case-lambda
       ((g$a$5890$bP4ck . g$b$5891$bP4ck)
        (if (null? g$a$5890$bP4ck)
          g$b$5891$bP4ck
          (if (null? g$b$5891$bP4ck)
            g$a$5890$bP4ck
            (begin
              ((letrec ((g$f$5892$bP4ck
                          (case-lambda
                            ((g$a$5893$bP4ck)
                             ((case-lambda
                                ((g$n$5894$bP4ck)
                                 (if (null? g$n$5894$bP4ck)
                                   (set-cdr! g$a$5893$bP4ck g$b$5891$bP4ck)
                                   (g$f$5892$bP4ck g$n$5894$bP4ck))))
                              (cdr g$a$5893$bP4ck))))))
                 g$f$5892$bP4ck)
               g$a$5890$bP4ck)
              g$a$5890$bP4ck)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$5896$bP4ck g$inexact->exact$5916$bP4ck exact)
   (g$exact->inexact$5897$bP4ck g$exact->inexact$5917$bP4ck inexact)
   (g$sign$5898$bP4ck
     g$sign$5918$bP4ck
     (case-lambda
       ((g$n$5904$bP4ck)
        (if (> g$n$5904$bP4ck '0) '1 (if (< g$n$5904$bP4ck '0) '-1 '0)))))
   (g$quotient$5899$bP4ck
     g$quotient$5919$bP4ck
     (case-lambda
       ((g$n1$5905$bP4ck g$n2$5906$bP4ck)
        (begin
          (if (not (integer-valued? g$n1$5905$bP4ck))
            (assertion-violation 'quotient '"not an integer" g$n1$5905$bP4ck)
            (void))
          (if (not (integer-valued? g$n2$5906$bP4ck))
            (assertion-violation 'quotient '"not an integer" g$n2$5906$bP4ck)
            (void))
          (* (g$sign$5898$bP4ck g$n1$5905$bP4ck)
             (g$sign$5898$bP4ck g$n2$5906$bP4ck)
             (div (abs g$n1$5905$bP4ck) (abs g$n2$5906$bP4ck)))))))
   (g$remainder$5900$bP4ck
     g$remainder$5920$bP4ck
     (case-lambda
       ((g$n1$5907$bP4ck g$n2$5908$bP4ck)
        (begin
          (if (not (integer-valued? g$n1$5907$bP4ck))
            (assertion-violation 'remainder '"not an integer" g$n1$5907$bP4ck)
            (void))
          (if (not (integer-valued? g$n2$5908$bP4ck))
            (assertion-violation 'remainder '"not an integer" g$n2$5908$bP4ck)
            (void))
          (* (g$sign$5898$bP4ck g$n1$5907$bP4ck)
             (mod (abs g$n1$5907$bP4ck) (abs g$n2$5908$bP4ck)))))))
   (g$modulo$5901$bP4ck
     g$modulo$5921$bP4ck
     (case-lambda
       ((g$n1$5909$bP4ck g$n2$5910$bP4ck)
        (begin
          (if (not (integer-valued? g$n1$5909$bP4ck))
            (assertion-violation 'modulo '"not an integer" g$n1$5909$bP4ck)
            (void))
          (if (not (integer-valued? g$n2$5910$bP4ck))
            (assertion-violation 'modulo '"not an integer" g$n2$5910$bP4ck)
            (void))
          (* (g$sign$5898$bP4ck g$n2$5910$bP4ck)
             (mod (* (g$sign$5898$bP4ck g$n2$5910$bP4ck) g$n1$5909$bP4ck)
                  (abs g$n2$5910$bP4ck)))))))
   (g$make-promise$5902$bP4ck
     g$make-promise$5922$bP4ck
     (case-lambda
       ((g$proc$5911$bP4ck)
        ((case-lambda
           ((g$result-ready?$5912$bP4ck g$result$5913$bP4ck)
            (case-lambda
              (()
               (if g$result-ready?$5912$bP4ck
                 g$result$5913$bP4ck
                 ((case-lambda
                    ((g$x$5914$bP4ck)
                     (if g$result-ready?$5912$bP4ck
                       g$result$5913$bP4ck
                       (begin
                         (set! g$result-ready?$5912$bP4ck '#t)
                         (set! g$result$5913$bP4ck g$x$5914$bP4ck)
                         g$result$5913$bP4ck))))
                  (g$proc$5911$bP4ck)))))))
         '#f
         '#f))))
   (g$force$5903$bP4ck
     g$force$5923$bP4ck
     (case-lambda ((g$object$5915$bP4ck) (g$object$5915$bP4ck)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5924$bP4ck
     g$split$5949$bP4ck
     (case-lambda
       ((g$ls$5928$bP4ck)
        ((letrec ((g$loop$5929$bP4ck
                    (case-lambda
                      ((g$rest$5930$bP4ck g$left$5931$bP4ck g$right$5932$bP4ck)
                       (if (null? g$rest$5930$bP4ck)
                         (cons g$left$5931$bP4ck g$right$5932$bP4ck)
                         (if (null? (cdr g$rest$5930$bP4ck))
                           (cons
                             (cons (car g$rest$5930$bP4ck) g$left$5931$bP4ck)
                             g$right$5932$bP4ck)
                           (g$loop$5929$bP4ck
                             (g$cddr$5266$bP4ck g$rest$5930$bP4ck)
                             (cons (car g$rest$5930$bP4ck) g$left$5931$bP4ck)
                             (cons
                               (g$cadr$5264$bP4ck g$rest$5930$bP4ck)
                               g$right$5932$bP4ck))))))))
           g$loop$5929$bP4ck)
         g$ls$5928$bP4ck
         '()
         '()))))
   (g$reverse-it$5925$bP4ck
     g$reverse-it$5950$bP4ck
     (case-lambda
       ((g$head$5933$bP4ck g$tail$5934$bP4ck)
        (if (null? g$head$5933$bP4ck)
          g$tail$5934$bP4ck
          (g$reverse-it$5925$bP4ck
            (cdr g$head$5933$bP4ck)
            (cons (car g$head$5933$bP4ck) g$tail$5934$bP4ck))))))
   (g$merge$5926$bP4ck
     g$merge$5951$bP4ck
     (case-lambda
       ((g$list-1$5935$bP4ck g$list-2$5936$bP4ck g$precedes?$5937$bP4ck)
        ((letrec ((g$loop$5938$bP4ck
                    (case-lambda
                      ((g$source-1$5939$bP4ck
                         g$source-2$5940$bP4ck
                         g$so-far$5941$bP4ck)
                       (if (null? g$source-1$5939$bP4ck)
                         (g$reverse-it$5925$bP4ck
                           g$so-far$5941$bP4ck
                           g$source-2$5940$bP4ck)
                         (if (null? g$source-2$5940$bP4ck)
                           (g$reverse-it$5925$bP4ck
                             g$so-far$5941$bP4ck
                             g$source-1$5939$bP4ck)
                           ((case-lambda
                              ((g$car-1$5942$bP4ck g$car-2$5943$bP4ck)
                               (if (g$precedes?$5937$bP4ck
                                     g$car-2$5943$bP4ck
                                     g$car-1$5942$bP4ck)
                                 (g$loop$5938$bP4ck
                                   g$source-1$5939$bP4ck
                                   (cdr g$source-2$5940$bP4ck)
                                   (cons
                                     g$car-2$5943$bP4ck
                                     g$so-far$5941$bP4ck))
                                 (g$loop$5938$bP4ck
                                   g$source-2$5940$bP4ck
                                   (cdr g$source-1$5939$bP4ck)
                                   (cons
                                     g$car-1$5942$bP4ck
                                     g$so-far$5941$bP4ck)))))
                            (car g$source-1$5939$bP4ck)
                            (car g$source-2$5940$bP4ck))))))))
           g$loop$5938$bP4ck)
         g$list-1$5935$bP4ck
         g$list-2$5936$bP4ck
         '()))))
   (g$list-sort$5927$bP4ck
     g$list-sort$5952$bP4ck
     (case-lambda
       ((g$precedes?$5944$bP4ck g$ls$5945$bP4ck)
        (if (null? g$ls$5945$bP4ck)
          '()
          ((letrec ((g$helper$5946$bP4ck
                      (case-lambda
                        ((g$piece$5947$bP4ck)
                         (if (null? (cdr g$piece$5947$bP4ck))
                           g$piece$5947$bP4ck
                           ((case-lambda
                              ((g$parts$5948$bP4ck)
                               (g$merge$5926$bP4ck
                                 (g$helper$5946$bP4ck (car g$parts$5948$bP4ck))
                                 (g$helper$5946$bP4ck (cdr g$parts$5948$bP4ck))
                                 g$precedes?$5944$bP4ck)))
                            (g$split$5924$bP4ck g$piece$5947$bP4ck)))))))
             g$helper$5946$bP4ck)
           g$ls$5945$bP4ck))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$5959$bP4ck
     g$string-ci=?$6025$bP4ck
     (case-lambda
       ((g$a$5975$bP4ck g$b$5976$bP4ck . g$rest$5977$bP4ck)
        (begin
          (if (not (string? g$a$5975$bP4ck))
            (assertion-violation 'string-ci=? '"not a string" g$a$5975$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5978$bP4ck)
               (begin
                 (if (not (string? g$x$5978$bP4ck))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$5978$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5979$bP4ck)
                     (begin
                       (set! g$a$5975$bP4ck g$x$5978$bP4ck)
                       g$r$5979$bP4ck)))
                  (= (string-ci-compare g$a$5975$bP4ck g$x$5978$bP4ck) '0)))))
            (cons g$b$5976$bP4ck g$rest$5977$bP4ck))))))
   (g$string-ci<?$5960$bP4ck
     g$string-ci<?$6026$bP4ck
     (case-lambda
       ((g$a$5980$bP4ck g$b$5981$bP4ck . g$rest$5982$bP4ck)
        (begin
          (if (not (string? g$a$5980$bP4ck))
            (assertion-violation 'string-ci<? '"not a string" g$a$5980$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5983$bP4ck)
               (begin
                 (if (not (string? g$x$5983$bP4ck))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$5983$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5984$bP4ck)
                     (begin
                       (set! g$a$5980$bP4ck g$x$5983$bP4ck)
                       g$r$5984$bP4ck)))
                  (< (string-ci-compare g$a$5980$bP4ck g$x$5983$bP4ck) '0)))))
            (cons g$b$5981$bP4ck g$rest$5982$bP4ck))))))
   (g$string-ci>?$5961$bP4ck
     g$string-ci>?$6027$bP4ck
     (case-lambda
       ((g$a$5985$bP4ck g$b$5986$bP4ck . g$rest$5987$bP4ck)
        (begin
          (if (not (string? g$a$5985$bP4ck))
            (assertion-violation 'string-ci>? '"not a string" g$a$5985$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5988$bP4ck)
               (begin
                 (if (not (string? g$x$5988$bP4ck))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$5988$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5989$bP4ck)
                     (begin
                       (set! g$a$5985$bP4ck g$x$5988$bP4ck)
                       g$r$5989$bP4ck)))
                  (> (string-ci-compare g$a$5985$bP4ck g$x$5988$bP4ck) '0)))))
            (cons g$b$5986$bP4ck g$rest$5987$bP4ck))))))
   (g$string-ci<=?$5962$bP4ck
     g$string-ci<=?$6028$bP4ck
     (case-lambda
       ((g$a$5990$bP4ck g$b$5991$bP4ck . g$rest$5992$bP4ck)
        (begin
          (if (not (string? g$a$5990$bP4ck))
            (assertion-violation 'string-ci<=? '"not a string" g$a$5990$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5993$bP4ck)
               (begin
                 (if (not (string? g$x$5993$bP4ck))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$5993$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5994$bP4ck)
                     (begin
                       (set! g$a$5990$bP4ck g$x$5993$bP4ck)
                       g$r$5994$bP4ck)))
                  (<= (string-ci-compare g$a$5990$bP4ck g$x$5993$bP4ck) '0)))))
            (cons g$b$5991$bP4ck g$rest$5992$bP4ck))))))
   (g$string-ci>=?$5963$bP4ck
     g$string-ci>=?$6029$bP4ck
     (case-lambda
       ((g$a$5995$bP4ck g$b$5996$bP4ck . g$rest$5997$bP4ck)
        (begin
          (if (not (string? g$a$5995$bP4ck))
            (assertion-violation 'string-ci>=? '"not a string" g$a$5995$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$5998$bP4ck)
               (begin
                 (if (not (string? g$x$5998$bP4ck))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$5998$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$5999$bP4ck)
                     (begin
                       (set! g$a$5995$bP4ck g$x$5998$bP4ck)
                       g$r$5999$bP4ck)))
                  (>= (string-ci-compare g$a$5995$bP4ck g$x$5998$bP4ck) '0)))))
            (cons g$b$5996$bP4ck g$rest$5997$bP4ck))))))
   (g$char-ci=?$5970$bP4ck
     g$char-ci=?$6030$bP4ck
     (case-lambda
       ((g$a$6000$bP4ck g$b$6001$bP4ck . g$rest$6002$bP4ck)
        (begin
          (if (not (char? g$a$6000$bP4ck))
            (assertion-violation 'char-ci=? '"not a char" g$a$6000$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$6003$bP4ck)
               (begin
                 (if (not (char? g$x$6003$bP4ck))
                   (assertion-violation 'char-ci=? '"not a char" g$x$6003$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$6004$bP4ck)
                     (begin
                       (set! g$a$6000$bP4ck g$x$6003$bP4ck)
                       g$r$6004$bP4ck)))
                  (= (char->integer (char-upcase g$a$6000$bP4ck))
                     (char->integer (char-upcase g$x$6003$bP4ck)))))))
            (cons g$b$6001$bP4ck g$rest$6002$bP4ck))))))
   (g$char-ci<?$5971$bP4ck
     g$char-ci<?$6031$bP4ck
     (case-lambda
       ((g$a$6005$bP4ck g$b$6006$bP4ck . g$rest$6007$bP4ck)
        (begin
          (if (not (char? g$a$6005$bP4ck))
            (assertion-violation 'char-ci<? '"not a char" g$a$6005$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$6008$bP4ck)
               (begin
                 (if (not (char? g$x$6008$bP4ck))
                   (assertion-violation 'char-ci<? '"not a char" g$x$6008$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$6009$bP4ck)
                     (begin
                       (set! g$a$6005$bP4ck g$x$6008$bP4ck)
                       g$r$6009$bP4ck)))
                  (< (char->integer (char-upcase g$a$6005$bP4ck))
                     (char->integer (char-upcase g$x$6008$bP4ck)))))))
            (cons g$b$6006$bP4ck g$rest$6007$bP4ck))))))
   (g$char-ci>?$5972$bP4ck
     g$char-ci>?$6032$bP4ck
     (case-lambda
       ((g$a$6010$bP4ck g$b$6011$bP4ck . g$rest$6012$bP4ck)
        (begin
          (if (not (char? g$a$6010$bP4ck))
            (assertion-violation 'char-ci>? '"not a char" g$a$6010$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$6013$bP4ck)
               (begin
                 (if (not (char? g$x$6013$bP4ck))
                   (assertion-violation 'char-ci>? '"not a char" g$x$6013$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$6014$bP4ck)
                     (begin
                       (set! g$a$6010$bP4ck g$x$6013$bP4ck)
                       g$r$6014$bP4ck)))
                  (> (char->integer (char-upcase g$a$6010$bP4ck))
                     (char->integer (char-upcase g$x$6013$bP4ck)))))))
            (cons g$b$6011$bP4ck g$rest$6012$bP4ck))))))
   (g$char-ci<=?$5973$bP4ck
     g$char-ci<=?$6033$bP4ck
     (case-lambda
       ((g$a$6015$bP4ck g$b$6016$bP4ck . g$rest$6017$bP4ck)
        (begin
          (if (not (char? g$a$6015$bP4ck))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6015$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$6018$bP4ck)
               (begin
                 (if (not (char? g$x$6018$bP4ck))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$6018$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$6019$bP4ck)
                     (begin
                       (set! g$a$6015$bP4ck g$x$6018$bP4ck)
                       g$r$6019$bP4ck)))
                  (<= (char->integer (char-upcase g$a$6015$bP4ck))
                      (char->integer (char-upcase g$x$6018$bP4ck)))))))
            (cons g$b$6016$bP4ck g$rest$6017$bP4ck))))))
   (g$char-ci>=?$5974$bP4ck
     g$char-ci>=?$6034$bP4ck
     (case-lambda
       ((g$a$6020$bP4ck g$b$6021$bP4ck . g$rest$6022$bP4ck)
        (begin
          (if (not (char? g$a$6020$bP4ck))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6020$bP4ck)
            (void))
          (g$for-all$5061$bP4ck
            (case-lambda
              ((g$x$6023$bP4ck)
               (begin
                 (if (not (char? g$x$6023$bP4ck))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$6023$bP4ck)
                   (void))
                 ((case-lambda
                    ((g$r$6024$bP4ck)
                     (begin
                       (set! g$a$6020$bP4ck g$x$6023$bP4ck)
                       g$r$6024$bP4ck)))
                  (>= (char->integer (char-upcase g$a$6020$bP4ck))
                      (char->integer (char-upcase g$x$6023$bP4ck)))))))
            (cons g$b$6021$bP4ck g$rest$6022$bP4ck)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6035$bP4ck
     g$bitwise-if$6066$bP4ck
     (case-lambda
       ((g$ei1$6042$bP4ck g$ei2$6043$bP4ck g$ei3$6044$bP4ck)
        (bitwise-ior
          (bitwise-and g$ei1$6042$bP4ck g$ei2$6043$bP4ck)
          (bitwise-and (bitwise-not g$ei1$6042$bP4ck) g$ei3$6044$bP4ck)))))
   (g$bitwise-copy-bit$6036$bP4ck
     g$bitwise-copy-bit$6067$bP4ck
     (case-lambda
       ((g$ei1$6045$bP4ck g$ei2$6046$bP4ck g$ei3$6047$bP4ck)
        (g$bitwise-if$6035$bP4ck
          (g$bitwise-arithmetic-shift-left$6039$bP4ck '1 g$ei2$6046$bP4ck)
          (g$bitwise-arithmetic-shift-left$6039$bP4ck
            g$ei3$6047$bP4ck
            g$ei2$6046$bP4ck)
          g$ei1$6045$bP4ck))))
   (g$bitwise-bit-field$6037$bP4ck
     g$bitwise-bit-field$6068$bP4ck
     (case-lambda
       ((g$ei1$6048$bP4ck g$ei2$6049$bP4ck g$ei3$6050$bP4ck)
        (g$bitwise-arithmetic-shift-right$6040$bP4ck
          (bitwise-and
            g$ei1$6048$bP4ck
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6039$bP4ck
                '-1
                g$ei3$6050$bP4ck)))
          g$ei2$6049$bP4ck))))
   (g$bitwise-copy-bit-field$6038$bP4ck
     g$bitwise-copy-bit-field$6069$bP4ck
     (case-lambda
       ((g$to$6051$bP4ck g$start$6052$bP4ck g$end$6053$bP4ck g$from$6054$bP4ck)
        (g$bitwise-if$6035$bP4ck
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$6039$bP4ck '-1 g$start$6052$bP4ck)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6039$bP4ck
                '-1
                g$end$6053$bP4ck)))
          (g$bitwise-arithmetic-shift-left$6039$bP4ck
            g$from$6054$bP4ck
            g$start$6052$bP4ck)
          g$to$6051$bP4ck))))
   (g$bitwise-arithmetic-shift-left$6039$bP4ck
     g$bitwise-arithmetic-shift-left$6070$bP4ck
     (case-lambda
       ((g$ei1$6055$bP4ck g$ei2$6056$bP4ck)
        (bitwise-arithmetic-shift g$ei1$6055$bP4ck g$ei2$6056$bP4ck))))
   (g$bitwise-arithmetic-shift-right$6040$bP4ck
     g$bitwise-arithmetic-shift-right$6071$bP4ck
     (case-lambda
       ((g$ei1$6057$bP4ck g$ei2$6058$bP4ck)
        (bitwise-arithmetic-shift g$ei1$6057$bP4ck (- g$ei2$6058$bP4ck)))))
   (g$bitwise-rotate-bit-field$6041$bP4ck
     g$bitwise-rotate-bit-field$6072$bP4ck
     (case-lambda
       ((g$n$6059$bP4ck g$start$6060$bP4ck g$end$6061$bP4ck g$count$6062$bP4ck)
        ((case-lambda
           ((g$width$6063$bP4ck)
            (if (g$positive?$5291$bP4ck g$width$6063$bP4ck)
              ((case-lambda
                 ((g$count$6064$bP4ck g$field$6065$bP4ck)
                  (g$bitwise-copy-bit-field$6038$bP4ck
                    g$n$6059$bP4ck
                    g$start$6060$bP4ck
                    g$end$6061$bP4ck
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$6039$bP4ck
                        g$field$6065$bP4ck
                        g$count$6064$bP4ck)
                      (g$bitwise-arithmetic-shift-right$6040$bP4ck
                        g$field$6065$bP4ck
                        (- g$width$6063$bP4ck g$count$6064$bP4ck))))))
               (mod g$count$6062$bP4ck g$width$6063$bP4ck)
               (g$bitwise-bit-field$6037$bP4ck
                 g$n$6059$bP4ck
                 g$start$6060$bP4ck
                 g$end$6061$bP4ck))
              g$n$6059$bP4ck)))
         (- g$end$6061$bP4ck g$start$6060$bP4ck))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fx*/carry$6073$bP4ck
     g$fx*/carry$6122$bP4ck
     (case-lambda
       ((g$fx1$6083$bP4ck g$fx2$6084$bP4ck g$fx3$6085$bP4ck)
        ((case-lambda
           ((g$s$6086$bP4ck g$e$6087$bP4ck)
            (values
              (mod0 g$s$6086$bP4ck g$e$6087$bP4ck)
              (div0 g$s$6086$bP4ck g$e$6087$bP4ck))))
         (+ (* g$fx1$6083$bP4ck g$fx2$6084$bP4ck) g$fx3$6085$bP4ck)
         (expt '2 (fixnum-width))))))
   (g$fx-/carry$6074$bP4ck
     g$fx-/carry$6123$bP4ck
     (case-lambda
       ((g$fx1$6088$bP4ck g$fx2$6089$bP4ck g$fx3$6090$bP4ck)
        ((case-lambda
           ((g$s$6091$bP4ck g$e$6092$bP4ck)
            (values
              (mod0 g$s$6091$bP4ck g$e$6092$bP4ck)
              (div0 g$s$6091$bP4ck g$e$6092$bP4ck))))
         (- g$fx1$6088$bP4ck g$fx2$6089$bP4ck g$fx3$6090$bP4ck)
         (expt '2 (fixnum-width))))))
   (g$fx+/carry$6075$bP4ck
     g$fx+/carry$6124$bP4ck
     (case-lambda
       ((g$fx1$6093$bP4ck g$fx2$6094$bP4ck g$fx3$6095$bP4ck)
        ((case-lambda
           ((g$s$6096$bP4ck g$e$6097$bP4ck)
            (values
              (mod0 g$s$6096$bP4ck g$e$6097$bP4ck)
              (div0 g$s$6096$bP4ck g$e$6097$bP4ck))))
         (+ g$fx1$6093$bP4ck g$fx2$6094$bP4ck g$fx3$6095$bP4ck)
         (expt '2 (fixnum-width))))))
   (g$fxif$6076$bP4ck
     g$fxif$6125$bP4ck
     (case-lambda
       ((g$fx1$6098$bP4ck g$fx2$6099$bP4ck g$fx3$6100$bP4ck)
        (fxior
          (fxand g$fx1$6098$bP4ck g$fx2$6099$bP4ck)
          (fxand (fxnot g$fx1$6098$bP4ck) g$fx3$6100$bP4ck)))))
   (g$fxcopy-bit$6077$bP4ck
     g$fxcopy-bit$6126$bP4ck
     (case-lambda
       ((g$fx1$6101$bP4ck g$fx2$6102$bP4ck g$fx3$6103$bP4ck)
        (g$fxif$6076$bP4ck
          (g$fxarithmetic-shift-left$6080$bP4ck '1 g$fx2$6102$bP4ck)
          (g$fxarithmetic-shift-left$6080$bP4ck
            g$fx3$6103$bP4ck
            g$fx2$6102$bP4ck)
          g$fx1$6101$bP4ck))))
   (g$fxbit-field$6078$bP4ck
     g$fxbit-field$6127$bP4ck
     (case-lambda
       ((g$fx1$6104$bP4ck g$fx2$6105$bP4ck g$fx3$6106$bP4ck)
        (g$fxarithmetic-shift-right$6081$bP4ck
          (fxand
            g$fx1$6104$bP4ck
            (fxnot (g$fxarithmetic-shift-left$6080$bP4ck '-1 g$fx3$6106$bP4ck)))
          g$fx2$6105$bP4ck))))
   (g$fxcopy-bit-field$6079$bP4ck
     g$fxcopy-bit-field$6128$bP4ck
     (case-lambda
       ((g$to$6107$bP4ck g$start$6108$bP4ck g$end$6109$bP4ck g$from$6110$bP4ck)
        (g$fxif$6076$bP4ck
          (fxand
            (g$fxarithmetic-shift-left$6080$bP4ck '-1 g$start$6108$bP4ck)
            (fxnot (g$fxarithmetic-shift-left$6080$bP4ck '-1 g$end$6109$bP4ck)))
          (g$fxarithmetic-shift-left$6080$bP4ck
            g$from$6110$bP4ck
            g$start$6108$bP4ck)
          g$to$6107$bP4ck))))
   (g$fxarithmetic-shift-left$6080$bP4ck
     g$fxarithmetic-shift-left$6129$bP4ck
     (case-lambda
       ((g$fx1$6111$bP4ck g$fx2$6112$bP4ck)
        (fxarithmetic-shift g$fx1$6111$bP4ck g$fx2$6112$bP4ck))))
   (g$fxarithmetic-shift-right$6081$bP4ck
     g$fxarithmetic-shift-right$6130$bP4ck
     (case-lambda
       ((g$fx1$6113$bP4ck g$fx2$6114$bP4ck)
        (fxarithmetic-shift g$fx1$6113$bP4ck (fx- g$fx2$6114$bP4ck)))))
   (g$fxrotate-bit-field$6082$bP4ck
     g$fxrotate-bit-field$6131$bP4ck
     (case-lambda
       ((g$n$6115$bP4ck g$start$6116$bP4ck g$end$6117$bP4ck g$count$6118$bP4ck)
        ((case-lambda
           ((g$width$6119$bP4ck)
            (if (fxpositive? g$width$6119$bP4ck)
              ((case-lambda
                 ((g$count$6120$bP4ck g$field$6121$bP4ck)
                  (g$fxcopy-bit-field$6079$bP4ck
                    g$n$6115$bP4ck
                    g$start$6116$bP4ck
                    g$end$6117$bP4ck
                    (fxior
                      (g$fxarithmetic-shift-left$6080$bP4ck
                        g$field$6121$bP4ck
                        g$count$6120$bP4ck)
                      (g$fxarithmetic-shift-right$6081$bP4ck
                        g$field$6121$bP4ck
                        (fx- g$width$6119$bP4ck g$count$6120$bP4ck))))))
               (fxmod g$count$6118$bP4ck g$width$6119$bP4ck)
               (g$fxbit-field$6078$bP4ck
                 g$n$6115$bP4ck
                 g$start$6116$bP4ck
                 g$end$6117$bP4ck))
              g$n$6115$bP4ck)))
         (fx- g$end$6117$bP4ck g$start$6116$bP4ck))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7172$6132$bP4ck
     g$7172$6144$bP4ck
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7175$bP4ck
       '#f
       '#f
       '#()))
   (g$7174$6133$bP4ck g$7174$6145$bP4ck '#f)
   (g$7173$6134$bP4ck
     g$7173$6146$bP4ck
     (make-record-constructor-descriptor
       g$7172$6132$bP4ck
       &implementation-restriction-rcd
       g$7174$6133$bP4ck))
   (g$7171$6135$bP4ck
     g$7171$6147$bP4ck
     (record-predicate g$7172$6132$bP4ck))
   (g$make-no-infinities-violation$6136$bP4ck
     g$make-no-infinities-violation$6148$bP4ck
     (record-constructor g$7173$6134$bP4ck))
   (g$no-infinities-violation?$6137$bP4ck
     g$no-infinities-violation?$6149$bP4ck
     (condition-predicate g$7172$6132$bP4ck))
   (g$7186$6138$bP4ck
     g$7186$6150$bP4ck
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7189$bP4ck
       '#f
       '#f
       '#()))
   (g$7188$6139$bP4ck g$7188$6151$bP4ck '#f)
   (g$7187$6140$bP4ck
     g$7187$6152$bP4ck
     (make-record-constructor-descriptor
       g$7186$6138$bP4ck
       &implementation-restriction-rcd
       g$7188$6139$bP4ck))
   (g$7185$6141$bP4ck
     g$7185$6153$bP4ck
     (record-predicate g$7186$6138$bP4ck))
   (g$make-no-nans-violation$6142$bP4ck
     g$make-no-nans-violation$6154$bP4ck
     (record-constructor g$7187$6140$bP4ck))
   (g$no-nans-violation?$6143$bP4ck
     g$no-nans-violation?$6155$bP4ck
     (condition-predicate g$7186$6138$bP4ck)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7201$6156$bP4ck
     g$7201$6236$bP4ck
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7204$bP4ck
       '#f
       '#f
       '#()))
   (g$7203$6157$bP4ck g$7203$6237$bP4ck '#f)
   (g$7202$6158$bP4ck
     g$7202$6238$bP4ck
     (make-record-constructor-descriptor
       g$7201$6156$bP4ck
       &error-rcd
       g$7203$6157$bP4ck))
   (g$7200$6159$bP4ck
     g$7200$6239$bP4ck
     (record-predicate g$7201$6156$bP4ck))
   (g$make-i/o-error$6160$bP4ck
     g$make-i/o-error$6240$bP4ck
     (record-constructor g$7202$6158$bP4ck))
   (g$i/o-error?$6161$bP4ck
     g$i/o-error?$6241$bP4ck
     (condition-predicate g$7201$6156$bP4ck))
   (g$7215$6162$bP4ck
     g$7215$6242$bP4ck
     (make-record-type-descriptor
       '&i/o-read
       g$7201$6156$bP4ck
       'g$7218$bP4ck
       '#f
       '#f
       '#()))
   (g$7217$6163$bP4ck g$7217$6243$bP4ck '#f)
   (g$7216$6164$bP4ck
     g$7216$6244$bP4ck
     (make-record-constructor-descriptor
       g$7215$6162$bP4ck
       g$7202$6158$bP4ck
       g$7217$6163$bP4ck))
   (g$7214$6165$bP4ck
     g$7214$6245$bP4ck
     (record-predicate g$7215$6162$bP4ck))
   (g$make-i/o-read-error$6166$bP4ck
     g$make-i/o-read-error$6246$bP4ck
     (record-constructor g$7216$6164$bP4ck))
   (g$i/o-read-error?$6167$bP4ck
     g$i/o-read-error?$6247$bP4ck
     (condition-predicate g$7215$6162$bP4ck))
   (g$7229$6168$bP4ck
     g$7229$6248$bP4ck
     (make-record-type-descriptor
       '&i/o-write
       g$7201$6156$bP4ck
       'g$7232$bP4ck
       '#f
       '#f
       '#()))
   (g$7231$6169$bP4ck g$7231$6249$bP4ck '#f)
   (g$7230$6170$bP4ck
     g$7230$6250$bP4ck
     (make-record-constructor-descriptor
       g$7229$6168$bP4ck
       g$7202$6158$bP4ck
       g$7231$6169$bP4ck))
   (g$7228$6171$bP4ck
     g$7228$6251$bP4ck
     (record-predicate g$7229$6168$bP4ck))
   (g$make-i/o-write-error$6172$bP4ck
     g$make-i/o-write-error$6252$bP4ck
     (record-constructor g$7230$6170$bP4ck))
   (g$i/o-write-error?$6173$bP4ck
     g$i/o-write-error?$6253$bP4ck
     (condition-predicate g$7229$6168$bP4ck))
   (g$7244$6174$bP4ck
     g$7244$6254$bP4ck
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7201$6156$bP4ck
       'g$7247$bP4ck
       '#f
       '#f
       '#((immutable position))))
   (g$7246$6175$bP4ck g$7246$6255$bP4ck '#f)
   (g$7245$6176$bP4ck
     g$7245$6256$bP4ck
     (make-record-constructor-descriptor
       g$7244$6174$bP4ck
       g$7202$6158$bP4ck
       g$7246$6175$bP4ck))
   (g$7243$6177$bP4ck
     g$7243$6257$bP4ck
     (record-predicate g$7244$6174$bP4ck))
   (g$make-i/o-invalid-position-error$6178$bP4ck
     g$make-i/o-invalid-position-error$6258$bP4ck
     (record-constructor g$7245$6176$bP4ck))
   (g$7242$6179$bP4ck
     g$7242$6259$bP4ck
     (record-accessor g$7244$6174$bP4ck '0))
   (g$i/o-invalid-position-error?$6180$bP4ck
     g$i/o-invalid-position-error?$6260$bP4ck
     (condition-predicate g$7244$6174$bP4ck))
   (g$i/o-error-position$6181$bP4ck
     g$i/o-error-position$6261$bP4ck
     (condition-accessor g$7244$6174$bP4ck g$7242$6179$bP4ck))
   (g$7261$6182$bP4ck
     g$7261$6262$bP4ck
     (make-record-type-descriptor
       '&i/o-filename
       g$7201$6156$bP4ck
       'g$7264$bP4ck
       '#f
       '#f
       '#((immutable filename))))
   (g$7263$6183$bP4ck g$7263$6263$bP4ck '#f)
   (g$7262$6184$bP4ck
     g$7262$6264$bP4ck
     (make-record-constructor-descriptor
       g$7261$6182$bP4ck
       g$7202$6158$bP4ck
       g$7263$6183$bP4ck))
   (g$7260$6185$bP4ck
     g$7260$6265$bP4ck
     (record-predicate g$7261$6182$bP4ck))
   (g$make-i/o-filename-error$6186$bP4ck
     g$make-i/o-filename-error$6266$bP4ck
     (record-constructor g$7262$6184$bP4ck))
   (g$7259$6187$bP4ck
     g$7259$6267$bP4ck
     (record-accessor g$7261$6182$bP4ck '0))
   (g$i/o-filename-error?$6188$bP4ck
     g$i/o-filename-error?$6268$bP4ck
     (condition-predicate g$7261$6182$bP4ck))
   (g$i/o-error-filename$6189$bP4ck
     g$i/o-error-filename$6269$bP4ck
     (condition-accessor g$7261$6182$bP4ck g$7259$6187$bP4ck))
   (g$7277$6190$bP4ck
     g$7277$6270$bP4ck
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7261$6182$bP4ck
       'g$7280$bP4ck
       '#f
       '#f
       '#()))
   (g$7279$6191$bP4ck g$7279$6271$bP4ck '#f)
   (g$7278$6192$bP4ck
     g$7278$6272$bP4ck
     (make-record-constructor-descriptor
       g$7277$6190$bP4ck
       g$7262$6184$bP4ck
       g$7279$6191$bP4ck))
   (g$7276$6193$bP4ck
     g$7276$6273$bP4ck
     (record-predicate g$7277$6190$bP4ck))
   (g$make-i/o-file-protection-error$6194$bP4ck
     g$make-i/o-file-protection-error$6274$bP4ck
     (record-constructor g$7278$6192$bP4ck))
   (g$i/o-file-protection-error?$6195$bP4ck
     g$i/o-file-protection-error?$6275$bP4ck
     (condition-predicate g$7277$6190$bP4ck))
   (g$7291$6196$bP4ck
     g$7291$6276$bP4ck
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7277$6190$bP4ck
       'g$7294$bP4ck
       '#f
       '#f
       '#()))
   (g$7293$6197$bP4ck g$7293$6277$bP4ck '#f)
   (g$7292$6198$bP4ck
     g$7292$6278$bP4ck
     (make-record-constructor-descriptor
       g$7291$6196$bP4ck
       g$7278$6192$bP4ck
       g$7293$6197$bP4ck))
   (g$7290$6199$bP4ck
     g$7290$6279$bP4ck
     (record-predicate g$7291$6196$bP4ck))
   (g$make-i/o-file-is-read-only-error$6200$bP4ck
     g$make-i/o-file-is-read-only-error$6280$bP4ck
     (record-constructor g$7292$6198$bP4ck))
   (g$i/o-file-is-read-only-error?$6201$bP4ck
     g$i/o-file-is-read-only-error?$6281$bP4ck
     (condition-predicate g$7291$6196$bP4ck))
   (g$7305$6202$bP4ck
     g$7305$6282$bP4ck
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7261$6182$bP4ck
       'g$7308$bP4ck
       '#f
       '#f
       '#()))
   (g$7307$6203$bP4ck g$7307$6283$bP4ck '#f)
   (g$7306$6204$bP4ck
     g$7306$6284$bP4ck
     (make-record-constructor-descriptor
       g$7305$6202$bP4ck
       g$7262$6184$bP4ck
       g$7307$6203$bP4ck))
   (g$7304$6205$bP4ck
     g$7304$6285$bP4ck
     (record-predicate g$7305$6202$bP4ck))
   (g$make-i/o-file-already-exists-error$6206$bP4ck
     g$make-i/o-file-already-exists-error$6286$bP4ck
     (record-constructor g$7306$6204$bP4ck))
   (g$i/o-file-already-exists-error?$6207$bP4ck
     g$i/o-file-already-exists-error?$6287$bP4ck
     (condition-predicate g$7305$6202$bP4ck))
   (g$7319$6208$bP4ck
     g$7319$6288$bP4ck
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7261$6182$bP4ck
       'g$7322$bP4ck
       '#f
       '#f
       '#()))
   (g$7321$6209$bP4ck g$7321$6289$bP4ck '#f)
   (g$7320$6210$bP4ck
     g$7320$6290$bP4ck
     (make-record-constructor-descriptor
       g$7319$6208$bP4ck
       g$7262$6184$bP4ck
       g$7321$6209$bP4ck))
   (g$7318$6211$bP4ck
     g$7318$6291$bP4ck
     (record-predicate g$7319$6208$bP4ck))
   (g$make-i/o-file-does-not-exist-error$6212$bP4ck
     g$make-i/o-file-does-not-exist-error$6292$bP4ck
     (record-constructor g$7320$6210$bP4ck))
   (g$i/o-file-does-not-exist-error?$6213$bP4ck
     g$i/o-file-does-not-exist-error?$6293$bP4ck
     (condition-predicate g$7319$6208$bP4ck))
   (g$7334$6214$bP4ck
     g$7334$6294$bP4ck
     (make-record-type-descriptor
       '&i/o-port
       g$7201$6156$bP4ck
       'g$7337$bP4ck
       '#f
       '#f
       '#((immutable port))))
   (g$7336$6215$bP4ck g$7336$6295$bP4ck '#f)
   (g$7335$6216$bP4ck
     g$7335$6296$bP4ck
     (make-record-constructor-descriptor
       g$7334$6214$bP4ck
       g$7202$6158$bP4ck
       g$7336$6215$bP4ck))
   (g$7333$6217$bP4ck
     g$7333$6297$bP4ck
     (record-predicate g$7334$6214$bP4ck))
   (g$make-i/o-port-error$6218$bP4ck
     g$make-i/o-port-error$6298$bP4ck
     (record-constructor g$7335$6216$bP4ck))
   (g$7332$6219$bP4ck
     g$7332$6299$bP4ck
     (record-accessor g$7334$6214$bP4ck '0))
   (g$i/o-port-error?$6220$bP4ck
     g$i/o-port-error?$6300$bP4ck
     (condition-predicate g$7334$6214$bP4ck))
   (g$i/o-error-port$6221$bP4ck
     g$i/o-error-port$6301$bP4ck
     (condition-accessor g$7334$6214$bP4ck g$7332$6219$bP4ck))
   (g$7350$6222$bP4ck
     g$7350$6302$bP4ck
     (make-record-type-descriptor
       '&i/o-decoding
       g$7334$6214$bP4ck
       'g$7353$bP4ck
       '#f
       '#f
       '#()))
   (g$7352$6223$bP4ck g$7352$6303$bP4ck '#f)
   (g$7351$6224$bP4ck
     g$7351$6304$bP4ck
     (make-record-constructor-descriptor
       g$7350$6222$bP4ck
       g$7335$6216$bP4ck
       g$7352$6223$bP4ck))
   (g$7349$6225$bP4ck
     g$7349$6305$bP4ck
     (record-predicate g$7350$6222$bP4ck))
   (g$make-i/o-decoding-error$6226$bP4ck
     g$make-i/o-decoding-error$6306$bP4ck
     (record-constructor g$7351$6224$bP4ck))
   (g$i/o-decoding-error?$6227$bP4ck
     g$i/o-decoding-error?$6307$bP4ck
     (condition-predicate g$7350$6222$bP4ck))
   (g$7365$6228$bP4ck
     g$7365$6308$bP4ck
     (make-record-type-descriptor
       '&i/o-encoding
       g$7334$6214$bP4ck
       'g$7368$bP4ck
       '#f
       '#f
       '#((immutable char))))
   (g$7367$6229$bP4ck g$7367$6309$bP4ck '#f)
   (g$7366$6230$bP4ck
     g$7366$6310$bP4ck
     (make-record-constructor-descriptor
       g$7365$6228$bP4ck
       g$7335$6216$bP4ck
       g$7367$6229$bP4ck))
   (g$7364$6231$bP4ck
     g$7364$6311$bP4ck
     (record-predicate g$7365$6228$bP4ck))
   (g$make-i/o-encoding-error$6232$bP4ck
     g$make-i/o-encoding-error$6312$bP4ck
     (record-constructor g$7366$6230$bP4ck))
   (g$7363$6233$bP4ck
     g$7363$6313$bP4ck
     (record-accessor g$7365$6228$bP4ck '0))
   (g$i/o-encoding-error?$6234$bP4ck
     g$i/o-encoding-error?$6314$bP4ck
     (condition-predicate g$7365$6228$bP4ck))
   (g$i/o-encoding-error-char$6235$bP4ck
     g$i/o-encoding-error-char$6315$bP4ck
     (condition-accessor g$7365$6228$bP4ck g$7363$6233$bP4ck)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$6317$bP4ck
     g$using$6333$bP4ck
     (clr-using-internal 'ironscheme.runtime))
   (g$get-output-string$6318$bP4ck
     g$get-output-string$6334$bP4ck
     (case-lambda
       ((g$port$6324$bP4ck)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6324$bP4ck))))
   (g$open-output-string$6319$bP4ck
     g$open-output-string$6335$bP4ck
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6320$bP4ck
     g$open-string-output-port$6336$bP4ck
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6325$bP4ck)
            (values
              g$p$6325$bP4ck
              (case-lambda
                (() (g$get-output-string$6318$bP4ck g$p$6325$bP4ck))))))
         (g$open-output-string$6319$bP4ck)))))
   (g$port?$6321$bP4ck
     g$port?$6337$bP4ck
     (case-lambda
       ((g$obj$6326$bP4ck)
        ((case-lambda
           ((g$t$6327$bP4ck)
            (if g$t$6327$bP4ck
              g$t$6327$bP4ck
              (begin '#f (binary-port? g$obj$6326$bP4ck)))))
         (textual-port? g$obj$6326$bP4ck)))))
   (g$call-with-string-output-port$6322$bP4ck
     g$call-with-string-output-port$6338$bP4ck
     (case-lambda
       ((g$proc$6328$bP4ck)
        ((case-lambda
           ((g$p$6329$bP4ck)
            (begin
              (g$call-with-port$6323$bP4ck g$p$6329$bP4ck g$proc$6328$bP4ck)
              (g$get-output-string$6318$bP4ck g$p$6329$bP4ck))))
         (g$open-output-string$6319$bP4ck)))))
   (g$call-with-port$6323$bP4ck
     g$call-with-port$6339$bP4ck
     (case-lambda
       ((g$port$6330$bP4ck g$proc$6331$bP4ck)
        ((case-lambda
           ((g$r$6332$bP4ck)
            (begin (close-port g$port$6330$bP4ck) g$r$6332$bP4ck)))
         (g$proc$6331$bP4ck g$port$6330$bP4ck))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$6340$bP4ck
     g$peek-char$6382$bP4ck
     (case-lambda
       (() (g$peek-char$6340$bP4ck (current-input-port)))
       ((g$port$6354$bP4ck) (lookahead-char g$port$6354$bP4ck))))
   (g$read-char$6341$bP4ck
     g$read-char$6383$bP4ck
     (case-lambda
       (() (g$read-char$6341$bP4ck (current-input-port)))
       ((g$port$6355$bP4ck) (get-char g$port$6355$bP4ck))))
   (g$write-char$6342$bP4ck
     g$write-char$6384$bP4ck
     (case-lambda
       ((g$chr$6356$bP4ck)
        (g$write-char$6342$bP4ck g$chr$6356$bP4ck (current-output-port)))
       ((g$chr$6357$bP4ck g$port$6358$bP4ck)
        (put-char g$port$6358$bP4ck g$chr$6357$bP4ck))))
   (g$with-input-from-file$6349$bP4ck
     g$with-input-from-file$6385$bP4ck
     (case-lambda
       ((g$filename$6359$bP4ck g$thunk$6360$bP4ck)
        ((case-lambda
           ((g$current-input-port$6363$bP4ck g$t$6364$bP4ck)
            ((case-lambda
               ((g$swap$6365$bP4ck)
                (dynamic-wind
                  g$swap$6365$bP4ck
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6360$bP4ck)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6365$bP4ck)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6366$bP4ck)
                    (begin
                      (g$current-input-port$6363$bP4ck g$t$6364$bP4ck)
                      (set! g$t$6364$bP4ck g$t$6366$bP4ck))))
                 (g$current-input-port$6363$bP4ck)))))))
         current-input-port
         (open-input-file g$filename$6359$bP4ck)))))
   (g$with-output-to-file$6350$bP4ck
     g$with-output-to-file$6386$bP4ck
     (case-lambda
       ((g$filename$6367$bP4ck g$thunk$6368$bP4ck)
        ((case-lambda
           ((g$current-output-port$6371$bP4ck g$t$6372$bP4ck)
            ((case-lambda
               ((g$swap$6373$bP4ck)
                (dynamic-wind
                  g$swap$6373$bP4ck
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6368$bP4ck)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6373$bP4ck)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6374$bP4ck)
                    (begin
                      (g$current-output-port$6371$bP4ck g$t$6372$bP4ck)
                      (set! g$t$6372$bP4ck g$t$6374$bP4ck))))
                 (g$current-output-port$6371$bP4ck)))))))
         current-output-port
         (open-output-file g$filename$6367$bP4ck)))))
   (g$call-with-input-file$6351$bP4ck
     g$call-with-input-file$6387$bP4ck
     (case-lambda
       ((g$filename$6375$bP4ck g$proc$6376$bP4ck)
        ((case-lambda
           ((g$p$6377$bP4ck)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6376$bP4ck g$p$6377$bP4ck)))
              (case-lambda (() (close-input-port g$p$6377$bP4ck))))))
         (open-input-file g$filename$6375$bP4ck)))))
   (g$call-with-output-file$6352$bP4ck
     g$call-with-output-file$6388$bP4ck
     (case-lambda
       ((g$filename$6378$bP4ck g$proc$6379$bP4ck)
        ((case-lambda
           ((g$p$6380$bP4ck)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6379$bP4ck g$p$6380$bP4ck)))
              (case-lambda (() (close-output-port g$p$6380$bP4ck))))))
         (open-output-file g$filename$6378$bP4ck)))))
   (g$newline$6353$bP4ck
     g$newline$6389$bP4ck
     (case-lambda
       (() (g$newline$6353$bP4ck (current-output-port)))
       ((g$port$6381$bP4ck) (display '"
" g$port$6381$bP4ck)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7450$6390$bP4ck
     g$7450$6499$bP4ck
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7452$6391$bP4ck g$7452$6500$bP4ck '#f)
   (g$7451$6392$bP4ck
     g$7451$6501$bP4ck
     (make-record-constructor-descriptor
       g$7450$6390$bP4ck
       '#f
       g$7452$6391$bP4ck))
   (g$enum?$6393$bP4ck
     g$enum?$6502$bP4ck
     (record-predicate g$7450$6390$bP4ck))
   (g$make-enum$6394$bP4ck
     g$make-enum$6503$bP4ck
     (record-constructor g$7451$6392$bP4ck))
   (g$enum-value$6395$bP4ck
     g$enum-value$6504$bP4ck
     (record-accessor g$7450$6390$bP4ck '0))
   (g$enum-info$6396$bP4ck
     g$enum-info$6505$bP4ck
     (record-accessor g$7450$6390$bP4ck '1))
   (g$7463$6397$bP4ck
     g$7463$6506$bP4ck
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7465$6398$bP4ck g$7465$6507$bP4ck '#f)
   (g$7464$6399$bP4ck
     g$7464$6508$bP4ck
     (make-record-constructor-descriptor
       g$7463$6397$bP4ck
       '#f
       g$7465$6398$bP4ck))
   (g$enum-universe?$6400$bP4ck
     g$enum-universe?$6509$bP4ck
     (record-predicate g$7463$6397$bP4ck))
   (g$make-enum-universe$6401$bP4ck
     g$make-enum-universe$6510$bP4ck
     (record-constructor g$7464$6399$bP4ck))
   (g$enum-universe-id$6402$bP4ck
     g$enum-universe-id$6511$bP4ck
     (record-accessor g$7463$6397$bP4ck '0))
   (g$enum-universe-symbols$6403$bP4ck
     g$enum-universe-symbols$6512$bP4ck
     (record-accessor g$7463$6397$bP4ck '1))
   (g$enum-universe-mapping$6404$bP4ck
     g$enum-universe-mapping$6513$bP4ck
     (record-accessor g$7463$6397$bP4ck '2))
   (g$enum-universe-value$6405$bP4ck
     g$enum-universe-value$6514$bP4ck
     (record-accessor g$7463$6397$bP4ck '3))
   (g$enum-type=?$6406$bP4ck
     g$enum-type=?$6515$bP4ck
     (case-lambda
       ((g$enumset1$6428$bP4ck g$enumset2$6429$bP4ck)
        (eq? (g$enum-universe-id$6402$bP4ck
               (g$enum-info$6396$bP4ck g$enumset1$6428$bP4ck))
             (g$enum-universe-id$6402$bP4ck
               (g$enum-info$6396$bP4ck g$enumset2$6429$bP4ck))))))
   (g$get-symbols$6407$bP4ck
     g$get-symbols$6516$bP4ck
     (case-lambda
       ((g$enumset$6430$bP4ck)
        (g$enum-universe-symbols$6403$bP4ck
          (g$enum-info$6396$bP4ck g$enumset$6430$bP4ck)))))
   (g$get-value$6408$bP4ck
     g$get-value$6517$bP4ck
     (case-lambda
       ((g$enumset$6431$bP4ck g$s$6432$bP4ck)
        (g$hashtable-ref$5541$bP4ck
          (g$enum-universe-mapping$6404$bP4ck
            (g$enum-info$6396$bP4ck g$enumset$6431$bP4ck))
          g$s$6432$bP4ck
          '#f))))
   (g$assert-enum$6409$bP4ck
     g$assert-enum$6518$bP4ck
     (case-lambda
       ((g$who$6433$bP4ck g$enumset$6434$bP4ck)
        (if (not (g$enum?$6393$bP4ck g$enumset$6434$bP4ck))
          (assertion-violation
            g$who$6433$bP4ck
            '"not an enumeration"
            g$enumset$6434$bP4ck)
          (void)))))
   (g$make-info$6410$bP4ck
     g$make-info$6519$bP4ck
     (case-lambda
       ((g$symbols$6435$bP4ck)
        ((case-lambda
           ((g$ht$6436$bP4ck)
            ((letrec ((g$f$6437$bP4ck
                        (case-lambda
                          ((g$s$6438$bP4ck g$a$6439$bP4ck g$mask$6440$bP4ck)
                           (if (null? g$s$6438$bP4ck)
                             (values
                               (reverse! g$a$6439$bP4ck)
                               g$ht$6436$bP4ck
                               (- g$mask$6440$bP4ck '1))
                             ((case-lambda
                                ((g$n$6441$bP4ck)
                                 (if (symbol? g$n$6441$bP4ck)
                                   (if (g$hashtable-contains?$5544$bP4ck
                                         g$ht$6436$bP4ck
                                         g$n$6441$bP4ck)
                                     (g$f$6437$bP4ck
                                       (cdr g$s$6438$bP4ck)
                                       g$a$6439$bP4ck
                                       g$mask$6440$bP4ck)
                                     (begin
                                       (g$hashtable-set!$5542$bP4ck
                                         g$ht$6436$bP4ck
                                         g$n$6441$bP4ck
                                         g$mask$6440$bP4ck)
                                       (g$f$6437$bP4ck
                                         (cdr g$s$6438$bP4ck)
                                         (cons g$n$6441$bP4ck g$a$6439$bP4ck)
                                         (g$bitwise-arithmetic-shift-left$6070$bP4ck
                                           g$mask$6440$bP4ck
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6441$bP4ck))))
                              (car g$s$6438$bP4ck)))))))
               g$f$6437$bP4ck)
             g$symbols$6435$bP4ck
             '()
             '1)))
         (g$make-eq-hashtable$5538$bP4ck)))))
   (g$make-name$6411$bP4ck
     g$make-name$6520$bP4ck
     (case-lambda
       ((g$symbols$6442$bP4ck)
        (string->symbol (g$format$6559$bP4ck '"~a" g$symbols$6442$bP4ck)))))
   (g$make-enumeration$6412$bP4ck
     g$make-enumeration$6521$bP4ck
     (case-lambda
       ((g$symbols$6443$bP4ck)
        (call-with-values
          (case-lambda (() (g$make-info$6410$bP4ck g$symbols$6443$bP4ck)))
          (case-lambda
            ((g$s$6447$bP4ck g$mapping$6448$bP4ck g$mask$6449$bP4ck)
             ((case-lambda
                ((g$mask$6450$bP4ck g$mapping$6451$bP4ck g$s$6452$bP4ck)
                 (g$make-enum$6394$bP4ck
                   g$mask$6450$bP4ck
                   (g$make-enum-universe$6401$bP4ck
                     (g$make-name$6411$bP4ck g$s$6452$bP4ck)
                     g$s$6452$bP4ck
                     g$mapping$6451$bP4ck
                     g$mask$6450$bP4ck))))
              g$mask$6449$bP4ck
              g$mapping$6448$bP4ck
              g$s$6447$bP4ck)))))))
   (g$enum-set-universe$6413$bP4ck
     g$enum-set-universe$6522$bP4ck
     (case-lambda
       ((g$enumset$6453$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck 'enum-set-universe g$enumset$6453$bP4ck)
          ((case-lambda
             ((g$ei$6454$bP4ck)
              (g$make-enum$6394$bP4ck
                (g$enum-universe-value$6405$bP4ck g$ei$6454$bP4ck)
                g$ei$6454$bP4ck)))
           (g$enum-info$6396$bP4ck g$enumset$6453$bP4ck))))))
   (g$enum-set-indexer$6414$bP4ck
     g$enum-set-indexer$6523$bP4ck
     (case-lambda
       ((g$enumset$6455$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck 'enum-set-indexer g$enumset$6455$bP4ck)
          (case-lambda
            ((g$symbol$6456$bP4ck)
             (begin
               (if (not (symbol? g$symbol$6456$bP4ck))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6456$bP4ck)
                 (void))
               ((case-lambda
                  ((g$v$6457$bP4ck)
                   (if g$v$6457$bP4ck
                     (- (bitwise-length g$v$6457$bP4ck) '1)
                     '#f)))
                (g$get-value$6408$bP4ck
                  g$enumset$6455$bP4ck
                  g$symbol$6456$bP4ck)))))))))
   (g$enum-set-constructor$6415$bP4ck
     g$enum-set-constructor$6524$bP4ck
     (case-lambda
       ((g$enumset$6458$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck 'enum-set-constructor g$enumset$6458$bP4ck)
          (case-lambda
            ((g$symbols$6459$bP4ck)
             ((letrec ((g$f$6460$bP4ck
                         (case-lambda
                           ((g$v$6461$bP4ck g$s$6462$bP4ck)
                            (if (null? g$s$6462$bP4ck)
                              (g$make-enum$6394$bP4ck
                                g$v$6461$bP4ck
                                (g$enum-info$6396$bP4ck g$enumset$6458$bP4ck))
                              ((case-lambda
                                 ((g$n$6463$bP4ck)
                                  (if (symbol? g$n$6463$bP4ck)
                                    ((case-lambda
                                       ((g$v*$6464$bP4ck)
                                        (if g$v*$6464$bP4ck
                                          (g$f$6460$bP4ck
                                            (bitwise-ior
                                              g$v$6461$bP4ck
                                              g$v*$6464$bP4ck)
                                            (cdr g$s$6462$bP4ck))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6463$bP4ck))))
                                     (g$get-value$6408$bP4ck
                                       g$enumset$6458$bP4ck
                                       g$n$6463$bP4ck))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6463$bP4ck))))
                               (car g$s$6462$bP4ck)))))))
                g$f$6460$bP4ck)
              '0
              g$symbols$6459$bP4ck)))))))
   (g$enum-set->list$6416$bP4ck
     g$enum-set->list$6525$bP4ck
     (case-lambda
       ((g$enumset$6465$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck 'enum-set->list g$enumset$6465$bP4ck)
          ((case-lambda
             ((g$value$6466$bP4ck)
              ((letrec ((g$f$6467$bP4ck
                          (case-lambda
                            ((g$s$6468$bP4ck g$l$6469$bP4ck)
                             (if (null? g$s$6468$bP4ck)
                               (reverse! g$l$6469$bP4ck)
                               (if (g$zero?$5293$bP4ck
                                     (bitwise-and
                                       (g$get-value$6408$bP4ck
                                         g$enumset$6465$bP4ck
                                         (car g$s$6468$bP4ck))
                                       g$value$6466$bP4ck))
                                 (g$f$6467$bP4ck
                                   (cdr g$s$6468$bP4ck)
                                   g$l$6469$bP4ck)
                                 (g$f$6467$bP4ck
                                   (cdr g$s$6468$bP4ck)
                                   (cons
                                     (car g$s$6468$bP4ck)
                                     g$l$6469$bP4ck))))))))
                 g$f$6467$bP4ck)
               (g$get-symbols$6407$bP4ck g$enumset$6465$bP4ck)
               '())))
           (g$enum-value$6395$bP4ck g$enumset$6465$bP4ck))))))
   (g$enum-set-member?$6417$bP4ck
     g$enum-set-member?$6526$bP4ck
     (case-lambda
       ((g$symbol$6470$bP4ck g$enumset$6471$bP4ck)
        (begin
          (if (not (symbol? g$symbol$6470$bP4ck))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6470$bP4ck)
            (void))
          (g$assert-enum$6409$bP4ck 'enum-set-member? g$enumset$6471$bP4ck)
          ((case-lambda
             ((g$v$6472$bP4ck)
              (if g$v$6472$bP4ck
                (not (g$zero?$5293$bP4ck
                       (bitwise-and
                         g$v$6472$bP4ck
                         (g$enum-value$6395$bP4ck g$enumset$6471$bP4ck))))
                '#f)))
           (g$get-value$6408$bP4ck
             g$enumset$6471$bP4ck
             g$symbol$6470$bP4ck))))))
   (g$enum-set-subset?$6418$bP4ck
     g$enum-set-subset?$6527$bP4ck
     (case-lambda
       ((g$enumset1$6473$bP4ck g$enumset2$6474$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck 'enum-set-subset? g$enumset1$6473$bP4ck)
          (g$assert-enum$6409$bP4ck 'enum-set-subset? g$enumset2$6474$bP4ck)
          ((case-lambda
             ((g$v1$6475$bP4ck g$v2$6476$bP4ck)
              (if (g$enum-type=?$6406$bP4ck
                    g$enumset1$6473$bP4ck
                    g$enumset2$6474$bP4ck)
                (= (bitwise-and g$v1$6475$bP4ck g$v2$6476$bP4ck)
                   g$v1$6475$bP4ck)
                ((letrec ((g$f$6477$bP4ck
                            (case-lambda
                              ((g$s$6478$bP4ck)
                               (if (null? g$s$6478$bP4ck)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6479$bP4ck g$v2*$6480$bP4ck)
                                     (if g$v2*$6480$bP4ck
                                       ((case-lambda
                                          ((g$has1$6481$bP4ck g$has2$6482$bP4ck)
                                           (if (if g$has1$6481$bP4ck
                                                 (begin
                                                   '#f
                                                   (not g$has2$6482$bP4ck))
                                                 '#f)
                                             '#f
                                             (g$f$6477$bP4ck
                                               (cdr g$s$6478$bP4ck)))))
                                        (not (g$zero?$5293$bP4ck
                                               (bitwise-and
                                                 g$v1$6475$bP4ck
                                                 g$v1*$6479$bP4ck)))
                                        (not (g$zero?$5293$bP4ck
                                               (bitwise-and
                                                 g$v2$6476$bP4ck
                                                 g$v2*$6480$bP4ck))))
                                       '#f)))
                                  (g$get-value$6408$bP4ck
                                    g$enumset1$6473$bP4ck
                                    (car g$s$6478$bP4ck))
                                  (g$get-value$6408$bP4ck
                                    g$enumset2$6474$bP4ck
                                    (car g$s$6478$bP4ck))))))))
                   g$f$6477$bP4ck)
                 (g$get-symbols$6407$bP4ck g$enumset1$6473$bP4ck)))))
           (g$enum-value$6395$bP4ck g$enumset1$6473$bP4ck)
           (g$enum-value$6395$bP4ck g$enumset2$6474$bP4ck))))))
   (g$enum-set=?$6419$bP4ck
     g$enum-set=?$6528$bP4ck
     (case-lambda
       ((g$enumset1$6483$bP4ck g$enumset2$6484$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck 'enum-set=? g$enumset1$6483$bP4ck)
          (g$assert-enum$6409$bP4ck 'enum-set=? g$enumset2$6484$bP4ck)
          (if (g$enum-set-subset?$6418$bP4ck
                g$enumset1$6483$bP4ck
                g$enumset2$6484$bP4ck)
            (begin
              '#f
              (g$enum-set-subset?$6418$bP4ck
                g$enumset2$6484$bP4ck
                g$enumset1$6483$bP4ck))
            '#f)))))
   (g$enum-set-union$6420$bP4ck
     g$enum-set-union$6529$bP4ck
     (case-lambda
       ((g$enumset1$6485$bP4ck g$enumset2$6486$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck 'enum-set-union g$enumset1$6485$bP4ck)
          (g$assert-enum$6409$bP4ck 'enum-set-union g$enumset2$6486$bP4ck)
          (if (g$enum-type=?$6406$bP4ck
                g$enumset1$6485$bP4ck
                g$enumset2$6486$bP4ck)
            (g$make-enum$6394$bP4ck
              (bitwise-ior
                (g$enum-value$6395$bP4ck g$enumset1$6485$bP4ck)
                (g$enum-value$6395$bP4ck g$enumset2$6486$bP4ck))
              (g$enum-info$6396$bP4ck g$enumset1$6485$bP4ck))
            '#f)))))
   (g$enum-set-intersection$6421$bP4ck
     g$enum-set-intersection$6530$bP4ck
     (case-lambda
       ((g$enumset1$6487$bP4ck g$enumset2$6488$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck
            'enum-set-intersection
            g$enumset1$6487$bP4ck)
          (g$assert-enum$6409$bP4ck
            'enum-set-intersection
            g$enumset2$6488$bP4ck)
          (if (g$enum-type=?$6406$bP4ck
                g$enumset1$6487$bP4ck
                g$enumset2$6488$bP4ck)
            (g$make-enum$6394$bP4ck
              (bitwise-and
                (g$enum-value$6395$bP4ck g$enumset1$6487$bP4ck)
                (g$enum-value$6395$bP4ck g$enumset2$6488$bP4ck))
              (g$enum-info$6396$bP4ck g$enumset1$6487$bP4ck))
            '#f)))))
   (g$enum-set-difference$6422$bP4ck
     g$enum-set-difference$6531$bP4ck
     (case-lambda
       ((g$enumset1$6489$bP4ck g$enumset2$6490$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck 'enum-set-difference g$enumset1$6489$bP4ck)
          (g$assert-enum$6409$bP4ck 'enum-set-difference g$enumset2$6490$bP4ck)
          (if (g$enum-type=?$6406$bP4ck
                g$enumset1$6489$bP4ck
                g$enumset2$6490$bP4ck)
            (g$make-enum$6394$bP4ck
              (bitwise-and
                (g$enum-value$6395$bP4ck g$enumset1$6489$bP4ck)
                (bitwise-not (g$enum-value$6395$bP4ck g$enumset2$6490$bP4ck)))
              (g$enum-info$6396$bP4ck g$enumset1$6489$bP4ck))
            '#f)))))
   (g$enum-set-complement$6423$bP4ck
     g$enum-set-complement$6532$bP4ck
     (case-lambda
       ((g$enumset$6491$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck 'enum-set-complement g$enumset$6491$bP4ck)
          (g$make-enum$6394$bP4ck
            (bitwise-not (g$enum-value$6395$bP4ck g$enumset$6491$bP4ck))
            (g$enum-info$6396$bP4ck g$enumset$6491$bP4ck))))))
   (g$enum-set-projection$6424$bP4ck
     g$enum-set-projection$6533$bP4ck
     (case-lambda
       ((g$enumset1$6492$bP4ck g$enumset2$6493$bP4ck)
        (begin
          (g$assert-enum$6409$bP4ck 'enum-set-projection g$enumset1$6492$bP4ck)
          (g$assert-enum$6409$bP4ck 'enum-set-projection g$enumset2$6493$bP4ck)
          ((case-lambda
             ((g$v1$6494$bP4ck)
              ((letrec ((g$f$6495$bP4ck
                          (case-lambda
                            ((g$s$6496$bP4ck g$v$6497$bP4ck)
                             (if (null? g$s$6496$bP4ck)
                               (g$make-enum$6394$bP4ck
                                 g$v$6497$bP4ck
                                 (g$enum-info$6396$bP4ck g$enumset2$6493$bP4ck))
                               (if (g$zero?$5293$bP4ck
                                     (bitwise-and
                                       g$v1$6494$bP4ck
                                       (g$get-value$6408$bP4ck
                                         g$enumset1$6492$bP4ck
                                         (car g$s$6496$bP4ck))))
                                 (g$f$6495$bP4ck
                                   (cdr g$s$6496$bP4ck)
                                   g$v$6497$bP4ck)
                                 ((case-lambda
                                    ((g$v2$6498$bP4ck)
                                     (if g$v2$6498$bP4ck
                                       (g$f$6495$bP4ck
                                         (cdr g$s$6496$bP4ck)
                                         (bitwise-ior
                                           g$v$6497$bP4ck
                                           g$v2$6498$bP4ck))
                                       (g$f$6495$bP4ck
                                         (cdr g$s$6496$bP4ck)
                                         g$v$6497$bP4ck))))
                                  (g$get-value$6408$bP4ck
                                    g$enumset2$6493$bP4ck
                                    (car g$s$6496$bP4ck)))))))))
                 g$f$6495$bP4ck)
               (g$get-symbols$6407$bP4ck g$enumset1$6492$bP4ck)
               '0)))
           (g$enum-value$6395$bP4ck g$enumset1$6492$bP4ck)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6425$bP4ck g$p$6426$bP4ck g$wr$6427$bP4ck)
       (g$fprintf$6558$bP4ck
         g$p$6426$bP4ck
         '"#[enum-set ~a]"
         (g$enum-set->list$6416$bP4ck g$x$6425$bP4ck))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6534$bP4ck
     g$dofmt$6556$bP4ck
     (case-lambda
       ((g$p$6538$bP4ck g$cntl$6539$bP4ck g$args$6540$bP4ck)
        ((case-lambda
           ((g$nmax$6541$bP4ck)
            ((letrec ((g$loop$6542$bP4ck
                        (case-lambda
                          ((g$n$6543$bP4ck g$a$6544$bP4ck)
                           (if (fx<=? g$n$6543$bP4ck g$nmax$6541$bP4ck)
                             ((case-lambda
                                ((g$c$6545$bP4ck)
                                 (if (if (g$char=?$5307$bP4ck
                                           g$c$6545$bP4ck
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6543$bP4ck
                                           g$nmax$6541$bP4ck))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6546$bP4ck)
                                       (if (g$memv$5056$bP4ck
                                             g$t$6546$bP4ck
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6544$bP4ck)
                                             g$p$6538$bP4ck)
                                           (g$loop$6542$bP4ck
                                             (fx+ g$n$6543$bP4ck '2)
                                             (cdr g$a$6544$bP4ck)))
                                         (if (g$memv$5056$bP4ck
                                               g$t$6546$bP4ck
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6544$bP4ck)
                                               g$p$6538$bP4ck)
                                             (g$loop$6542$bP4ck
                                               (fx+ g$n$6543$bP4ck '2)
                                               (cdr g$a$6544$bP4ck)))
                                           (if (g$memv$5056$bP4ck
                                                 g$t$6546$bP4ck
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6544$bP4ck)
                                                   '2)
                                                 g$p$6538$bP4ck)
                                               (g$loop$6542$bP4ck
                                                 (fx+ g$n$6543$bP4ck '2)
                                                 (cdr g$a$6544$bP4ck)))
                                             (if (g$memv$5056$bP4ck
                                                   g$t$6546$bP4ck
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6544$bP4ck)
                                                     '8)
                                                   g$p$6538$bP4ck)
                                                 (g$loop$6542$bP4ck
                                                   (fx+ g$n$6543$bP4ck '2)
                                                   (cdr g$a$6544$bP4ck)))
                                               (if (g$memv$5056$bP4ck
                                                     g$t$6546$bP4ck
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6544$bP4ck)
                                                       '16)
                                                     g$p$6538$bP4ck)
                                                   (g$loop$6542$bP4ck
                                                     (fx+ g$n$6543$bP4ck '2)
                                                     (cdr g$a$6544$bP4ck)))
                                                 (if (g$memv$5056$bP4ck
                                                       g$t$6546$bP4ck
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6544$bP4ck)
                                                         '10)
                                                       g$p$6538$bP4ck)
                                                     (g$loop$6542$bP4ck
                                                       (fx+ g$n$6543$bP4ck '2)
                                                       (cdr g$a$6544$bP4ck)))
                                                   (if (g$memv$5056$bP4ck
                                                         g$t$6546$bP4ck
                                                         '(#\~))
                                                     (begin
                                                       (g$write-char$6384$bP4ck
                                                         '#\~
                                                         g$p$6538$bP4ck)
                                                       (g$loop$6542$bP4ck
                                                         (fx+ g$n$6543$bP4ck '2)
                                                         g$a$6544$bP4ck))
                                                     (begin
                                                       (g$write-char$6384$bP4ck
                                                         g$c$6545$bP4ck
                                                         g$p$6538$bP4ck)
                                                       (g$loop$6542$bP4ck
                                                         (fx+ g$n$6543$bP4ck '1)
                                                         g$a$6544$bP4ck)))))))))))
                                    (string-ref
                                      g$cntl$6539$bP4ck
                                      (fx+ g$n$6543$bP4ck '1)))
                                   (begin
                                     (g$write-char$6384$bP4ck
                                       g$c$6545$bP4ck
                                       g$p$6538$bP4ck)
                                     (g$loop$6542$bP4ck
                                       (fx+ g$n$6543$bP4ck '1)
                                       g$a$6544$bP4ck)))))
                              (string-ref g$cntl$6539$bP4ck g$n$6543$bP4ck))
                             (void))))))
               g$loop$6542$bP4ck)
             '0
             g$args$6540$bP4ck)))
         (fx- (string-length g$cntl$6539$bP4ck) '1)))))
   (g$printf$6535$bP4ck
     g$printf$6557$bP4ck
     (case-lambda
       ((g$control$6547$bP4ck . g$args$6548$bP4ck)
        (g$dofmt$6534$bP4ck
          (current-output-port)
          g$control$6547$bP4ck
          g$args$6548$bP4ck))))
   (g$fprintf$6536$bP4ck
     g$fprintf$6558$bP4ck
     (case-lambda
       ((g$p$6549$bP4ck g$control$6550$bP4ck . g$args$6551$bP4ck)
        (g$dofmt$6534$bP4ck
          g$p$6549$bP4ck
          g$control$6550$bP4ck
          g$args$6551$bP4ck))))
   (g$format$6537$bP4ck
     g$format$6559$bP4ck
     (case-lambda
       ((g$control$6552$bP4ck . g$args$6553$bP4ck)
        (call-with-values
          g$open-string-output-port$6336$bP4ck
          (case-lambda
            ((g$p$6554$bP4ck g$c$6555$bP4ck)
             (begin
               (g$dofmt$6534$bP4ck
                 g$p$6554$bP4ck
                 g$control$6552$bP4ck
                 g$args$6553$bP4ck)
               (g$c$6555$bP4ck)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6560$bP4ck
     g$make-traced-macro$6563$bP4ck
     (case-lambda
       ((g$name$6561$bP4ck g$x$6562$bP4ck)
        (if (procedure? g$x$6562$bP4ck)
          (make-traced-procedure
            g$name$6561$bP4ck
            g$x$6562$bP4ck
            g$syntax->datum$11602$bP4ck)
          (if (g$variable-transformer?$11424$bP4ck g$x$6562$bP4ck)
            (g$make-variable-transformer$11423$bP4ck
              (make-traced-procedure
                g$name$6561$bP4ck
                (g$variable-transformer-procedure$11425$bP4ck g$x$6562$bP4ck)
                g$syntax->datum$11602$bP4ck))
            g$x$6562$bP4ck))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$6564$bP4ck
     g$cps/generate-reference$6826$bP4ck
     (case-lambda
       ((g$variable$6617$bP4ck)
        (g$cps/generate-operand$6568$bP4ck
          (g$make-reference$6594$bP4ck g$variable$6617$bP4ck)))))
   (g$cps/generate-literal$6565$bP4ck
     g$cps/generate-literal$6827$bP4ck
     (case-lambda
       ((g$datum$6618$bP4ck)
        (g$cps/generate-operand$6568$bP4ck
          (g$make-literal$6593$bP4ck g$datum$6618$bP4ck)))))
   (g$cps/generate-abstraction$6566$bP4ck
     g$cps/generate-abstraction$6828$bP4ck
     (case-lambda
       ((g$bvl$6619$bP4ck g$body-generator$6620$bP4ck)
        (g$cps/generate-operand$6568$bP4ck
          (g$make-user-abstraction$6595$bP4ck
            g$bvl$6619$bP4ck
            (case-lambda
              ((g$continuation-variable$6621$bP4ck)
               (g$body-generator$6620$bP4ck
                 (g$variable-continuator$6581$bP4ck
                   g$continuation-variable$6621$bP4ck)))))))))
   (g$cps/generate-abstractions$6567$bP4ck
     g$cps/generate-abstractions$6829$bP4ck
     (case-lambda
       ((g$bvls$6622$bP4ck g$body-generators$6623$bP4ck)
        (g$cps/generate-operand$6568$bP4ck
          (g$make-user-abstractions$6596$bP4ck
            g$bvls$6622$bP4ck
            (g$map$5063$bP4ck
              (case-lambda
                ((g$body-generator$6624$bP4ck)
                 (case-lambda
                   ((g$continuation-variable$6625$bP4ck)
                    (g$body-generator$6624$bP4ck
                      (g$variable-continuator$6581$bP4ck
                        g$continuation-variable$6625$bP4ck))))))
              g$body-generators$6623$bP4ck))))))
   (g$cps/generate-operand$6568$bP4ck
     g$cps/generate-operand$6830$bP4ck
     (case-lambda
       ((g$operand$6626$bP4ck)
        (case-lambda
          ((g$continuator$6627$bP4ck)
           (g$continue-with-operand$6584$bP4ck
             g$continuator$6627$bP4ck
             g$operand$6626$bP4ck))))))
   (g$cps/generate-conditional$6569$bP4ck
     g$cps/generate-conditional$6831$bP4ck
     (case-lambda
       ((g$condition-generator$6628$bP4ck
          g$consequent-generator$6629$bP4ck
          g$alternative-generator$6630$bP4ck)
        (case-lambda
          ((g$continuator$6631$bP4ck)
           (letrec* ((g$if-variable$6632$bP4ck
                       (case-lambda
                         ((g$continuation-variable$6634$bP4ck)
                          ((case-lambda
                             ((g$continuator*$6635$bP4ck)
                              (g$condition-generator$6628$bP4ck
                                (g$conditional-continuator$6580$bP4ck
                                  (case-lambda
                                    ((g$condition$6636$bP4ck)
                                     (g$make-conditional$6603$bP4ck
                                       g$condition$6636$bP4ck
                                       (g$consequent-generator$6629$bP4ck
                                         g$continuator*$6635$bP4ck)
                                       (g$alternative-generator$6630$bP4ck
                                         g$continuator*$6635$bP4ck))))))))
                           (g$variable-continuator$6581$bP4ck
                             g$continuation-variable$6634$bP4ck))))))
             (g$reify-continuation*$6586$bP4ck
               g$continuator$6631$bP4ck
               g$if-variable$6632$bP4ck
               (case-lambda
                 ((g$continuation-abstraction$6633$bP4ck)
                  (g$make-conditional-join$6604$bP4ck
                    g$continuation-abstraction$6633$bP4ck
                    g$if-variable$6632$bP4ck))))))))))
   (g$cps/generate-recursive-bind$6570$bP4ck
     g$cps/generate-recursive-bind$6832$bP4ck
     (case-lambda
       ((g$variables$6637$bP4ck
          g$generators$6638$bP4ck
          g$body-generator$6639$bP4ck)
        (case-lambda
          ((g$continuator$6640$bP4ck)
           (g$make-recursive-bind$6598$bP4ck
             g$variables$6637$bP4ck
             (g$map$5063$bP4ck
               (case-lambda
                 ((g$generator$6641$bP4ck)
                  (case-lambda
                    ((g$continuation-variable$6642$bP4ck)
                     (g$generator$6641$bP4ck
                       (g$variable-continuator$6581$bP4ck
                         g$continuation-variable$6642$bP4ck))))))
               g$generators$6638$bP4ck)
             (g$body-generator$6639$bP4ck
               (g$reified-continuator$6583$bP4ck
                 g$continuator$6640$bP4ck))))))))
   (g$cps/generate-recursive*-bind$6571$bP4ck
     g$cps/generate-recursive*-bind$6833$bP4ck
     (case-lambda
       ((g$variables$6643$bP4ck
          g$generators$6644$bP4ck
          g$body-generator$6645$bP4ck)
        (case-lambda
          ((g$continuator$6646$bP4ck)
           (g$make-recursive*-bind$6599$bP4ck
             g$variables$6643$bP4ck
             (g$map$5063$bP4ck
               (case-lambda
                 ((g$generator$6647$bP4ck)
                  (case-lambda
                    ((g$continuation-variable$6648$bP4ck)
                     (g$generator$6647$bP4ck
                       (g$variable-continuator$6581$bP4ck
                         g$continuation-variable$6648$bP4ck))))))
               g$generators$6644$bP4ck)
             (g$body-generator$6645$bP4ck
               (g$reified-continuator$6583$bP4ck
                 g$continuator$6646$bP4ck))))))))
   (g$cps/generate-recursive*-library-bind$6572$bP4ck
     g$cps/generate-recursive*-library-bind$6834$bP4ck
     (case-lambda
       ((g$name$6649$bP4ck
          g$variables$6650$bP4ck
          g$variables*$6651$bP4ck
          g$generators$6652$bP4ck
          g$body-generator$6653$bP4ck)
        (case-lambda
          ((g$continuator$6654$bP4ck)
           (g$make-recursive*-library-bind$6600$bP4ck
             g$name$6649$bP4ck
             g$variables$6650$bP4ck
             g$variables*$6651$bP4ck
             (g$map$5063$bP4ck
               (case-lambda
                 ((g$generator$6655$bP4ck)
                  (case-lambda
                    ((g$continuation-variable$6656$bP4ck)
                     (g$generator$6655$bP4ck
                       (g$variable-continuator$6581$bP4ck
                         g$continuation-variable$6656$bP4ck))))))
               g$generators$6652$bP4ck)
             (g$body-generator$6653$bP4ck
               (g$reified-continuator$6583$bP4ck
                 g$continuator$6654$bP4ck))))))))
   (g$cps/generate-sequence$6573$bP4ck
     g$cps/generate-sequence$6835$bP4ck
     (case-lambda
       ((g$generators$6657$bP4ck)
        (case-lambda
          ((g$continuator$6658$bP4ck)
           ((letrec ((g$recur$6659$bP4ck
                       (case-lambda
                         ((g$generators$6660$bP4ck)
                          ((car g$generators$6660$bP4ck)
                           ((case-lambda
                              ((g$generators$6661$bP4ck)
                               (if (pair? g$generators$6661$bP4ck)
                                 (g$effect-continuator$6579$bP4ck
                                   (case-lambda
                                     (()
                                      (g$recur$6659$bP4ck
                                        g$generators$6661$bP4ck))))
                                 g$continuator$6658$bP4ck)))
                            (cdr g$generators$6660$bP4ck)))))))
              g$recur$6659$bP4ck)
            g$generators$6657$bP4ck))))))
   (g$cps/generate-assignment$6574$bP4ck
     g$cps/generate-assignment$6836$bP4ck
     (case-lambda
       ((g$location$6662$bP4ck g$expression-generator$6663$bP4ck)
        (case-lambda
          ((g$continuator$6664$bP4ck)
           (g$expression-generator$6663$bP4ck
             (g$operand-continuator$6578$bP4ck
               (case-lambda
                 ((g$operand$6665$bP4ck)
                  (g$make-assignment$6606$bP4ck
                    g$location$6662$bP4ck
                    g$operand$6665$bP4ck
                    (g$continue-with-operand$6584$bP4ck
                      g$continuator$6664$bP4ck
                      '(void))))))))))))
   (g$cps/generate-primitive$6575$bP4ck
     g$cps/generate-primitive$6837$bP4ck
     (case-lambda
       ((g$operator$6666$bP4ck g$operand-generators$6667$bP4ck)
        (case-lambda
          ((g$continuator$6668$bP4ck)
           (g$continue-with-operand$6584$bP4ck
             g$continuator$6668$bP4ck
             (cons
               g$operator$6666$bP4ck
               (g$map$5063$bP4ck
                 (case-lambda
                   ((g$generator$6669$bP4ck)
                    (case-lambda
                      ((g$continuation-variable$6670$bP4ck)
                       (g$generator$6669$bP4ck
                         (g$variable-continuator$6581$bP4ck
                           g$continuation-variable$6670$bP4ck))))))
                 g$operand-generators$6667$bP4ck))))))))
   (g$cps/generate-combination$6576$bP4ck
     g$cps/generate-combination$6838$bP4ck
     (case-lambda
       ((g$operator-generator$6671$bP4ck g$operand-generators$6672$bP4ck)
        (g$cps/generate-subproblems$6577$bP4ck
          (reverse
            (cons
              g$operator-generator$6671$bP4ck
              g$operand-generators$6672$bP4ck))
          (case-lambda
            ((g$operands$6673$bP4ck g$continuator$6674$bP4ck)
             (g$make-combination$6601$bP4ck
               (car g$operands$6673$bP4ck)
               (g$reify-continuation$6585$bP4ck g$continuator$6674$bP4ck)
               (cdr g$operands$6673$bP4ck))))))))
   (g$cps/generate-subproblems$6577$bP4ck
     g$cps/generate-subproblems$6839$bP4ck
     (case-lambda
       ((g$generators$6675$bP4ck g$combiner$6676$bP4ck)
        (case-lambda
          ((g$continuator$6677$bP4ck)
           ((letrec ((g$recur$6678$bP4ck
                       (case-lambda
                         ((g$generators$6679$bP4ck g$operands$6680$bP4ck)
                          (if (pair? g$generators$6679$bP4ck)
                            ((car g$generators$6679$bP4ck)
                             ((case-lambda
                                ((g$generators$6681$bP4ck)
                                 (g$operand-continuator$6578$bP4ck
                                   (case-lambda
                                     ((g$operand$6682$bP4ck)
                                      (g$recur$6678$bP4ck
                                        g$generators$6681$bP4ck
                                        (cons
                                          g$operand$6682$bP4ck
                                          g$operands$6680$bP4ck)))))))
                              (cdr g$generators$6679$bP4ck)))
                            (g$combiner$6676$bP4ck
                              g$operands$6680$bP4ck
                              g$continuator$6677$bP4ck))))))
              g$recur$6678$bP4ck)
            g$generators$6675$bP4ck
            '()))))))
   (g$operand-continuator$6578$bP4ck
     g$operand-continuator$6840$bP4ck
     (case-lambda
       ((g$generator$6683$bP4ck)
        (case-lambda
          ((g$if-operand$6684$bP4ck
             g$if-effect$6685$bP4ck
             g$if-conditional$6686$bP4ck
             g$if-variable$6687$bP4ck
             g$if-inline$6688$bP4ck)
           (begin
             g$if-effect$6685$bP4ck
             g$if-conditional$6686$bP4ck
             g$if-variable$6687$bP4ck
             g$if-inline$6688$bP4ck
             (g$if-operand$6684$bP4ck g$generator$6683$bP4ck)))))))
   (g$effect-continuator$6579$bP4ck
     g$effect-continuator$6841$bP4ck
     (case-lambda
       ((g$generator$6689$bP4ck)
        (case-lambda
          ((g$if-operand$6690$bP4ck
             g$if-effect$6691$bP4ck
             g$if-conditional$6692$bP4ck
             g$if-variable$6693$bP4ck
             g$if-inline$6694$bP4ck)
           (begin
             g$if-operand$6690$bP4ck
             g$if-conditional$6692$bP4ck
             g$if-variable$6693$bP4ck
             g$if-inline$6694$bP4ck
             (g$if-effect$6691$bP4ck g$generator$6689$bP4ck)))))))
   (g$conditional-continuator$6580$bP4ck
     g$conditional-continuator$6842$bP4ck
     (case-lambda
       ((g$generator$6695$bP4ck)
        (case-lambda
          ((g$if-operand$6696$bP4ck
             g$if-effect$6697$bP4ck
             g$if-conditional$6698$bP4ck
             g$if-variable$6699$bP4ck
             g$if-inline$6700$bP4ck)
           (begin
             g$if-operand$6696$bP4ck
             g$if-effect$6697$bP4ck
             g$if-variable$6699$bP4ck
             g$if-inline$6700$bP4ck
             (g$if-conditional$6698$bP4ck g$generator$6695$bP4ck)))))))
   (g$variable-continuator$6581$bP4ck
     g$variable-continuator$6843$bP4ck
     (case-lambda
       ((g$variable$6701$bP4ck)
        (case-lambda
          ((g$if-operand$6702$bP4ck
             g$if-effect$6703$bP4ck
             g$if-conditional$6704$bP4ck
             g$if-variable$6705$bP4ck
             g$if-inline$6706$bP4ck)
           (begin
             g$if-operand$6702$bP4ck
             g$if-effect$6703$bP4ck
             g$if-variable$6705$bP4ck
             g$if-inline$6706$bP4ck
             (g$if-variable$6705$bP4ck g$variable$6701$bP4ck)))))))
   (g$inline-continuator$6582$bP4ck
     g$inline-continuator$6844$bP4ck
     (case-lambda
       ((g$continuation$6707$bP4ck)
        (case-lambda
          ((g$if-operand$6708$bP4ck
             g$if-effect$6709$bP4ck
             g$if-conditional$6710$bP4ck
             g$if-variable$6711$bP4ck
             g$if-inline$6712$bP4ck)
           (begin
             g$if-operand$6708$bP4ck
             g$if-effect$6709$bP4ck
             g$if-conditional$6710$bP4ck
             g$if-variable$6711$bP4ck
             (g$if-inline$6712$bP4ck g$continuation$6707$bP4ck)))))))
   (g$reified-continuator$6583$bP4ck
     g$reified-continuator$6845$bP4ck
     (case-lambda
       ((g$continuator$6713$bP4ck)
        (case-lambda
          ((g$if-operand$6714$bP4ck
             g$if-effect$6715$bP4ck
             g$if-conditional$6716$bP4ck
             g$if-variable$6717$bP4ck
             g$if-inline$6718$bP4ck)
           (begin
             g$if-operand$6714$bP4ck
             g$if-effect$6715$bP4ck
             g$if-conditional$6716$bP4ck
             (g$reify-continuation*$6586$bP4ck
               g$continuator$6713$bP4ck
               g$if-variable$6717$bP4ck
               g$if-inline$6718$bP4ck)))))))
   (g$continue-with-operand$6584$bP4ck
     g$continue-with-operand$6846$bP4ck
     (case-lambda
       ((g$continuator$6719$bP4ck g$operand$6720$bP4ck)
        (g$continuator$6719$bP4ck
          (case-lambda
            ((g$generator$6721$bP4ck)
             (g$generator$6721$bP4ck g$operand$6720$bP4ck)))
          (case-lambda ((g$generator$6722$bP4ck) (g$generator$6722$bP4ck)))
          (case-lambda
            ((g$generator$6723$bP4ck)
             (g$generator$6723$bP4ck
               (g$make-truth-test$6607$bP4ck g$operand$6720$bP4ck))))
          (case-lambda
            ((g$continuation-variable$6724$bP4ck)
             (g$make-return$6602$bP4ck
               (g$make-reference$6594$bP4ck g$continuation-variable$6724$bP4ck)
               (list g$operand$6720$bP4ck))))
          (case-lambda
            ((g$continuation-abstraction$6725$bP4ck)
             (g$make-return$6602$bP4ck
               g$continuation-abstraction$6725$bP4ck
               (list g$operand$6720$bP4ck))))))))
   (g$reify-continuation$6585$bP4ck
     g$reify-continuation$6847$bP4ck
     (case-lambda
       ((g$continuator$6726$bP4ck)
        (g$continuator$6726$bP4ck
          g$operand-continuation-reifier$6588$bP4ck
          g$effect-continuation-reifier$6590$bP4ck
          g$conditional-continuation-reifier$6592$bP4ck
          (case-lambda
            ((g$variable$6727$bP4ck)
             (g$make-reference$6594$bP4ck g$variable$6727$bP4ck)))
          (case-lambda
            ((g$continuation$6728$bP4ck) g$continuation$6728$bP4ck))))))
   (g$reify-continuation*$6586$bP4ck
     g$reify-continuation*$6848$bP4ck
     (case-lambda
       ((g$continuator$6729$bP4ck
          g$if-variable$6730$bP4ck
          g$if-inline$6731$bP4ck)
        (g$continuator$6729$bP4ck
          (g$operand-continuation-reifier*$6587$bP4ck g$if-inline$6731$bP4ck)
          (g$effect-continuation-reifier*$6589$bP4ck g$if-inline$6731$bP4ck)
          (g$conditional-continuation-reifier*$6591$bP4ck
            g$if-inline$6731$bP4ck)
          g$if-variable$6730$bP4ck
          g$if-inline$6731$bP4ck))))
   (g$operand-continuation-reifier*$6587$bP4ck
     g$operand-continuation-reifier*$6849$bP4ck
     (case-lambda
       ((g$receiver$6732$bP4ck)
        (case-lambda
          ((g$generator$6733$bP4ck)
           (g$receiver$6732$bP4ck
             ((case-lambda
                ((g$variable$6734$bP4ck)
                 (g$make-continuation-abstraction$6597$bP4ck
                   (list g$variable$6734$bP4ck)
                   (g$generator$6733$bP4ck
                     (g$make-reference$6594$bP4ck g$variable$6734$bP4ck)))))
              (g$generate-variable$6608$bP4ck 'V))))))))
   (g$operand-continuation-reifier$6588$bP4ck
     g$operand-continuation-reifier$6850$bP4ck
     (g$operand-continuation-reifier*$6587$bP4ck values))
   (g$effect-continuation-reifier*$6589$bP4ck
     g$effect-continuation-reifier*$6851$bP4ck
     (case-lambda
       ((g$receiver$6735$bP4ck)
        (case-lambda
          ((g$generator$6736$bP4ck)
           (g$receiver$6735$bP4ck
             ((case-lambda
                ((g$variable$6737$bP4ck)
                 (g$make-continuation-abstraction$6597$bP4ck
                   g$variable$6737$bP4ck
                   (g$generator$6736$bP4ck))))
              (g$generate-variable$6608$bP4ck 'IGNORE))))))))
   (g$effect-continuation-reifier$6590$bP4ck
     g$effect-continuation-reifier$6852$bP4ck
     (g$effect-continuation-reifier*$6589$bP4ck values))
   (g$conditional-continuation-reifier*$6591$bP4ck
     g$conditional-continuation-reifier*$6853$bP4ck
     (case-lambda
       ((g$receiver$6738$bP4ck)
        (case-lambda
          ((g$generator$6739$bP4ck)
           (g$receiver$6738$bP4ck
             ((case-lambda
                ((g$variable$6740$bP4ck)
                 (g$make-continuation-abstraction$6597$bP4ck
                   (list g$variable$6740$bP4ck)
                   (g$generator$6739$bP4ck
                     (g$make-truth-test$6607$bP4ck
                       (g$make-reference$6594$bP4ck g$variable$6740$bP4ck))))))
              (g$generate-variable$6608$bP4ck 'T))))))))
   (g$conditional-continuation-reifier$6592$bP4ck
     g$conditional-continuation-reifier$6854$bP4ck
     (g$conditional-continuation-reifier*$6591$bP4ck values))
   (g$make-literal$6593$bP4ck
     g$make-literal$6855$bP4ck
     (case-lambda ((g$datum$6741$bP4ck) (list 'quote g$datum$6741$bP4ck))))
   (g$make-reference$6594$bP4ck
     g$make-reference$6856$bP4ck
     (case-lambda ((g$variable$6742$bP4ck) g$variable$6742$bP4ck)))
   (g$make-user-abstraction$6595$bP4ck
     g$make-user-abstraction$6857$bP4ck
     (case-lambda
       ((g$bvl$6743$bP4ck g$body-constructor$6744$bP4ck)
        ((case-lambda
           ((g$continuation$6745$bP4ck)
            (list
              'case-lambda
              (list
                (cons g$continuation$6745$bP4ck g$bvl$6743$bP4ck)
                (g$body-constructor$6744$bP4ck g$continuation$6745$bP4ck)))))
         (g$generate-variable$6608$bP4ck 'C)))))
   (g$make-user-abstractions$6596$bP4ck
     g$make-user-abstractions$6858$bP4ck
     (case-lambda
       ((g$bvls$6746$bP4ck g$body-constructors$6747$bP4ck)
        ((case-lambda
           ((g$continuation$6748$bP4ck)
            (cons
              'case-lambda
              (g$map$5063$bP4ck
                (case-lambda
                  ((g$bvl$6749$bP4ck g$body-constructor$6750$bP4ck)
                   (list
                     (cons g$continuation$6748$bP4ck g$bvl$6749$bP4ck)
                     (g$body-constructor$6750$bP4ck
                       g$continuation$6748$bP4ck))))
                g$bvls$6746$bP4ck
                g$body-constructors$6747$bP4ck))))
         (g$generate-variable$6608$bP4ck 'C)))))
   (g$make-continuation-abstraction$6597$bP4ck
     g$make-continuation-abstraction$6859$bP4ck
     (case-lambda
       ((g$bvl$6751$bP4ck g$body$6752$bP4ck)
        (list 'case-lambda (list g$bvl$6751$bP4ck g$body$6752$bP4ck)))))
   (g$make-recursive-bind$6598$bP4ck
     g$make-recursive-bind$6860$bP4ck
     (case-lambda
       ((g$variables$6753$bP4ck g$constructors$6754$bP4ck g$body$6755$bP4ck)
        (list
          'letrec
          (g$map$5063$bP4ck
            (case-lambda
              ((g$variable$6756$bP4ck g$constructor$6757$bP4ck)
               (list
                 g$variable$6756$bP4ck
                 (cons
                   (g$make-user-abstraction$6595$bP4ck
                     '()
                     g$constructor$6757$bP4ck)
                   '(values)))))
            g$variables$6753$bP4ck
            g$constructors$6754$bP4ck)
          g$body$6755$bP4ck))))
   (g$make-recursive*-bind$6599$bP4ck
     g$make-recursive*-bind$6861$bP4ck
     (case-lambda
       ((g$variables$6758$bP4ck g$constructors$6759$bP4ck g$body$6760$bP4ck)
        (list
          'letrec*
          (g$map$5063$bP4ck
            (case-lambda
              ((g$variable$6761$bP4ck g$constructor$6762$bP4ck)
               (list
                 g$variable$6761$bP4ck
                 (cons
                   (g$make-user-abstraction$6595$bP4ck
                     '()
                     g$constructor$6762$bP4ck)
                   '(values)))))
            g$variables$6758$bP4ck
            g$constructors$6759$bP4ck)
          g$body$6760$bP4ck))))
   (g$make-recursive*-library-bind$6600$bP4ck
     g$make-recursive*-library-bind$6862$bP4ck
     (case-lambda
       ((g$name$6763$bP4ck
          g$variables$6764$bP4ck
          g$variables*$6765$bP4ck
          g$constructors$6766$bP4ck
          g$body$6767$bP4ck)
        (list
          'library-letrec*
          g$name$6763$bP4ck
          (g$map$5063$bP4ck
            (case-lambda
              ((g$variable$6768$bP4ck
                 g$variable*$6769$bP4ck
                 g$constructor$6770$bP4ck)
               (list
                 g$variable$6768$bP4ck
                 g$variable*$6769$bP4ck
                 (cons
                   (g$make-user-abstraction$6595$bP4ck
                     '()
                     g$constructor$6770$bP4ck)
                   '(values)))))
            g$variables$6764$bP4ck
            g$variables*$6765$bP4ck
            g$constructors$6766$bP4ck)
          g$body$6767$bP4ck))))
   (g$make-combination$6601$bP4ck
     g$make-combination$6863$bP4ck
     (case-lambda
       ((g$operator$6771$bP4ck g$continuation$6772$bP4ck g$operands$6773$bP4ck)
        (cons
          g$operator$6771$bP4ck
          (cons g$continuation$6772$bP4ck g$operands$6773$bP4ck)))))
   (g$make-return$6602$bP4ck
     g$make-return$6864$bP4ck
     (case-lambda
       ((g$continuation$6774$bP4ck g$operands$6775$bP4ck)
        (cons g$continuation$6774$bP4ck g$operands$6775$bP4ck))))
   (g$make-conditional$6603$bP4ck
     g$make-conditional$6865$bP4ck
     (case-lambda
       ((g$condition$6776$bP4ck
          g$consequent$6777$bP4ck
          g$alternative$6778$bP4ck)
        (list
          'if
          g$condition$6776$bP4ck
          g$consequent$6777$bP4ck
          g$alternative$6778$bP4ck))))
   (g$make-conditional-join$6604$bP4ck
     g$make-conditional-join$6866$bP4ck
     (case-lambda
       ((g$continuation$6779$bP4ck g$constructor$6780$bP4ck)
        ((case-lambda
           ((g$variable$6781$bP4ck)
            (g$make-let$6605$bP4ck
              (list g$variable$6781$bP4ck)
              (list g$continuation$6779$bP4ck)
              (g$constructor$6780$bP4ck g$variable$6781$bP4ck))))
         (g$generate-variable$6608$bP4ck 'J)))))
   (g$make-let$6605$bP4ck
     g$make-let$6867$bP4ck
     (case-lambda
       ((g$variables$6782$bP4ck g$expressions$6783$bP4ck g$body$6784$bP4ck)
        (cons
          (list 'case-lambda (list g$variables$6782$bP4ck g$body$6784$bP4ck))
          g$expressions$6783$bP4ck))))
   (g$make-assignment$6606$bP4ck
     g$make-assignment$6868$bP4ck
     (case-lambda
       ((g$location$6785$bP4ck g$operand$6786$bP4ck g$expression$6787$bP4ck)
        (list
          'begin
          (list 'set! g$location$6785$bP4ck g$operand$6786$bP4ck)
          g$expression$6787$bP4ck))))
   (g$make-truth-test$6607$bP4ck
     g$make-truth-test$6869$bP4ck
     (case-lambda ((g$operand$6788$bP4ck) g$operand$6788$bP4ck)))
   (g$generate-variable$6608$bP4ck
     g$generate-variable$6870$bP4ck
     (case-lambda ((g$name$6789$bP4ck) (gensym g$name$6789$bP4ck))))
   (g$parse$6609$bP4ck
     g$parse$6871$bP4ck
     (case-lambda
       ((g$x$6790$bP4ck)
        (if (pair? g$x$6790$bP4ck)
          ((case-lambda
             ((g$t$6791$bP4ck)
              (if (g$memv$5056$bP4ck g$t$6791$bP4ck '(quote))
                (g$cps/generate-literal$6565$bP4ck
                  (g$cadr$5264$bP4ck g$x$6790$bP4ck))
                (if (g$memv$5056$bP4ck g$t$6791$bP4ck '(if))
                  (g$cps/generate-conditional$6569$bP4ck
                    (g$parse$6609$bP4ck (g$cadr$5264$bP4ck g$x$6790$bP4ck))
                    (g$parse$6609$bP4ck (g$caddr$5270$bP4ck g$x$6790$bP4ck))
                    (g$parse$6609$bP4ck (g$cadddr$5282$bP4ck g$x$6790$bP4ck)))
                  (if (g$memv$5056$bP4ck g$t$6791$bP4ck '(case-lambda))
                    ((case-lambda
                       ((g$d$6792$bP4ck)
                        (g$cps/generate-abstractions$6567$bP4ck
                          (g$map$5063$bP4ck car g$d$6792$bP4ck)
                          (g$map$5063$bP4ck
                            (case-lambda
                              ((g$e$6793$bP4ck)
                               (g$cps/generate-sequence$6573$bP4ck
                                 (g$map$5063$bP4ck
                                   g$parse$6609$bP4ck
                                   (cdr g$e$6793$bP4ck)))))
                            g$d$6792$bP4ck))))
                     (cdr g$x$6790$bP4ck))
                    (if (g$memv$5056$bP4ck g$t$6791$bP4ck '(letrec))
                      ((case-lambda
                         ((g$bindings$6794$bP4ck g$body*$6795$bP4ck)
                          ((case-lambda
                             ((g$lhs*$6796$bP4ck g$rhs*$6797$bP4ck)
                              (g$cps/generate-recursive-bind$6570$bP4ck
                                g$lhs*$6796$bP4ck
                                (g$map$5063$bP4ck
                                  g$parse$6609$bP4ck
                                  g$rhs*$6797$bP4ck)
                                (g$parse$6609$bP4ck
                                  (cons 'begin g$body*$6795$bP4ck)))))
                           (g$map$5063$bP4ck car g$bindings$6794$bP4ck)
                           (g$map$5063$bP4ck
                             g$cadr$5264$bP4ck
                             g$bindings$6794$bP4ck))))
                       (g$cadr$5264$bP4ck g$x$6790$bP4ck)
                       (g$cddr$5266$bP4ck g$x$6790$bP4ck))
                      (if (g$memv$5056$bP4ck g$t$6791$bP4ck '(letrec*))
                        ((case-lambda
                           ((g$bindings$6798$bP4ck g$body*$6799$bP4ck)
                            ((case-lambda
                               ((g$lhs*$6800$bP4ck g$rhs*$6801$bP4ck)
                                (g$cps/generate-recursive*-bind$6571$bP4ck
                                  g$lhs*$6800$bP4ck
                                  (g$map$5063$bP4ck
                                    g$parse$6609$bP4ck
                                    g$rhs*$6801$bP4ck)
                                  (g$parse$6609$bP4ck
                                    (cons 'begin g$body*$6799$bP4ck)))))
                             (g$map$5063$bP4ck car g$bindings$6798$bP4ck)
                             (g$map$5063$bP4ck
                               g$cadr$5264$bP4ck
                               g$bindings$6798$bP4ck))))
                         (g$cadr$5264$bP4ck g$x$6790$bP4ck)
                         (g$cddr$5266$bP4ck g$x$6790$bP4ck))
                        (if (g$memv$5056$bP4ck
                              g$t$6791$bP4ck
                              '(library-letrec*))
                          ((case-lambda
                             ((g$name$6802$bP4ck g$x$6803$bP4ck)
                              ((case-lambda
                                 ((g$bindings$6804$bP4ck g$body*$6805$bP4ck)
                                  ((case-lambda
                                     ((g$lhs*$6806$bP4ck
                                        g$lhs**$6807$bP4ck
                                        g$rhs*$6808$bP4ck)
                                      (g$cps/generate-recursive*-library-bind$6572$bP4ck
                                        g$name$6802$bP4ck
                                        g$lhs*$6806$bP4ck
                                        g$lhs**$6807$bP4ck
                                        (g$map$5063$bP4ck
                                          g$parse$6609$bP4ck
                                          g$rhs*$6808$bP4ck)
                                        (g$parse$6609$bP4ck
                                          (cons 'begin g$body*$6805$bP4ck)))))
                                   (g$map$5063$bP4ck car g$bindings$6804$bP4ck)
                                   (g$map$5063$bP4ck
                                     g$cadr$5264$bP4ck
                                     g$bindings$6804$bP4ck)
                                   (g$map$5063$bP4ck
                                     g$caddr$5270$bP4ck
                                     g$bindings$6804$bP4ck))))
                               (g$cadr$5264$bP4ck g$x$6803$bP4ck)
                               (g$cddr$5266$bP4ck g$x$6803$bP4ck))))
                           (g$cadr$5264$bP4ck g$x$6790$bP4ck)
                           (cdr g$x$6790$bP4ck))
                          (if (g$memv$5056$bP4ck g$t$6791$bP4ck '(begin))
                            (g$cps/generate-sequence$6573$bP4ck
                              (g$map$5063$bP4ck
                                g$parse$6609$bP4ck
                                (cdr g$x$6790$bP4ck)))
                            (if (g$memv$5056$bP4ck g$t$6791$bP4ck '(set!))
                              (g$cps/generate-assignment$6574$bP4ck
                                (g$cadr$5264$bP4ck g$x$6790$bP4ck)
                                (g$parse$6609$bP4ck
                                  (g$caddr$5270$bP4ck g$x$6790$bP4ck)))
                              (if (list? g$x$6790$bP4ck)
                                (g$cps/generate-combination$6576$bP4ck
                                  (g$parse$6609$bP4ck (car g$x$6790$bP4ck))
                                  (g$map$5063$bP4ck
                                    g$parse$6609$bP4ck
                                    (cdr g$x$6790$bP4ck)))
                                (error
                                  'rewrite
                                  '"invalid form ~s ~s"
                                  g$x$6790$bP4ck
                                  (list? g$x$6790$bP4ck)))))))))))))
           (car g$x$6790$bP4ck))
          (if (symbol? g$x$6790$bP4ck)
            (g$cps/generate-reference$6564$bP4ck g$x$6790$bP4ck)
            (g$cps/generate-literal$6565$bP4ck g$x$6790$bP4ck))))))
   (g$starts-with?$6610$bP4ck
     g$starts-with?$6872$bP4ck
     (case-lambda
       ((g$str$6809$bP4ck g$sub$6810$bP4ck)
        (clr-call-internal
          'system.string
          'startswith
          g$str$6809$bP4ck
          g$sub$6810$bP4ck))))
   (g$special$6611$bP4ck
     g$special$6873$bP4ck
     '(values void call/cc call-with-current-continuation))
   (g$special2$6612$bP4ck
     g$special2$6874$bP4ck
     '(call/cc call-with-current-continuation))
   (g$primitive?$6613$bP4ck
     g$primitive?$6875$bP4ck
     (case-lambda
       ((g$o$6811$bP4ck)
        (if (if (symbol? g$o$6811$bP4ck)
              (begin
                '#f
                (not (g$memq$5055$bP4ck g$o$6811$bP4ck g$special2$6612$bP4ck)))
              '#f)
          (with-exception-handler
            (case-lambda ((g$e$6812$bP4ck) '#f))
            (case-lambda
              (()
               ((case-lambda
                  ((g$b$6813$bP4ck)
                   ((case-lambda
                      ((g$t$6814$bP4ck)
                       (if g$t$6814$bP4ck
                         g$t$6814$bP4ck
                         (begin
                           '#f
                           (g$starts-with?$6610$bP4ck
                             (symbol->string g$o$6811$bP4ck)
                             '"clr-")))))
                    (clr-is-internal
                      'ironscheme.runtime.builtinmethod
                      g$b$6813$bP4ck))))
                (symbol-value g$o$6811$bP4ck)))))
          '#f))))
   (g$fix-primitives$6614$bP4ck
     g$fix-primitives$6876$bP4ck
     (case-lambda
       ((g$e$6815$bP4ck)
        (if (if (pair? g$e$6815$bP4ck) (begin '#f (list? g$e$6815$bP4ck)) '#f)
          ((case-lambda
             ((g$o$6816$bP4ck)
              (if (eq? g$o$6816$bP4ck 'quote)
                g$e$6815$bP4ck
                (if (eq? g$o$6816$bP4ck 'library-letrec*)
                  ((case-lambda
                     ((g$name$6817$bP4ck g$e$6818$bP4ck)
                      ((case-lambda
                         ((g$bindings$6819$bP4ck g$body*$6820$bP4ck)
                          ((case-lambda
                             ((g$lhs*$6821$bP4ck
                                g$lhs**$6822$bP4ck
                                g$rhs*$6823$bP4ck)
                              (cons
                                'library-letrec*
                                (cons
                                  g$name$6817$bP4ck
                                  (cons
                                    (g$map$5063$bP4ck
                                      list
                                      g$lhs*$6821$bP4ck
                                      g$lhs**$6822$bP4ck
                                      (g$map$5063$bP4ck
                                        g$fix-primitives$6614$bP4ck
                                        g$rhs*$6823$bP4ck))
                                    (g$map$5063$bP4ck
                                      g$fix-primitives$6614$bP4ck
                                      g$body*$6820$bP4ck))))))
                           (g$map$5063$bP4ck car g$bindings$6819$bP4ck)
                           (g$map$5063$bP4ck
                             g$cadr$5264$bP4ck
                             g$bindings$6819$bP4ck)
                           (g$map$5063$bP4ck
                             g$caddr$5270$bP4ck
                             g$bindings$6819$bP4ck))))
                       (g$cadr$5264$bP4ck g$e$6818$bP4ck)
                       (g$cddr$5266$bP4ck g$e$6818$bP4ck))))
                   (g$cadr$5264$bP4ck g$e$6815$bP4ck)
                   (cdr g$e$6815$bP4ck))
                  (if (if (g$primitive?$6613$bP4ck g$o$6816$bP4ck)
                        (begin '#f (pair? (cdr g$e$6815$bP4ck)))
                        '#f)
                    (list
                      (g$fix-primitives$6614$bP4ck
                        (g$cadr$5264$bP4ck g$e$6815$bP4ck))
                      (cons
                        g$o$6816$bP4ck
                        (g$map$5063$bP4ck
                          g$fix-primitives$6614$bP4ck
                          (g$cddr$5266$bP4ck g$e$6815$bP4ck))))
                    (cons
                      (g$fix-primitives$6614$bP4ck g$o$6816$bP4ck)
                      (g$map$5063$bP4ck
                        g$fix-primitives$6614$bP4ck
                        (cdr g$e$6815$bP4ck))))))))
           (car g$e$6815$bP4ck))
          (if (if (symbol? g$e$6815$bP4ck)
                (if (not (g$memq$5055$bP4ck
                           g$e$6815$bP4ck
                           g$special$6611$bP4ck))
                  (begin '#f (g$primitive?$6613$bP4ck g$e$6815$bP4ck))
                  '#f)
                '#f)
            (list
              'case-lambda
              (list
                '(k . args)
                (list 'k (cons 'apply (cons g$e$6815$bP4ck '(args))))))
            g$e$6815$bP4ck)))))
   (g$parse->cps$6615$bP4ck
     g$parse->cps$6877$bP4ck
     (case-lambda
       ((g$e$6824$bP4ck)
        ((g$parse$6609$bP4ck g$e$6824$bP4ck)
         (g$variable-continuator$6581$bP4ck 'values)))))
   (g$convert->cps$6616$bP4ck
     g$convert->cps$6878$bP4ck
     (case-lambda
       ((g$e$6825$bP4ck)
        (g$fix-primitives$6614$bP4ck
          (g$parse->cps$6615$bP4ck g$e$6825$bP4ck))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$6879$bP4ck
     g$library-version-mismatch-warning$6975$bP4ck
     (case-lambda
       ((g$name$6952$bP4ck g$depname$6953$bP4ck g$filename$6954$bP4ck)
        (g$fprintf$6558$bP4ck
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$6952$bP4ck
          g$depname$6953$bP4ck
          g$filename$6954$bP4ck))))
   (g$file-locator-resolution-error$6880$bP4ck
     g$file-locator-resolution-error$6976$bP4ck
     (case-lambda
       ((g$libname$6955$bP4ck g$failed-list$6956$bP4ck)
        (letrec* ((g$7958$6957$bP4ck
                    (make-record-type-descriptor
                      '&library-resolution
                      &condition-rtd
                      'g$7961$bP4ck
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$7960$6958$bP4ck '#f)
                  (g$7959$6959$bP4ck
                    (make-record-constructor-descriptor
                      g$7958$6957$bP4ck
                      &condition-rcd
                      g$7960$6958$bP4ck))
                  (g$7957$6960$bP4ck (record-predicate g$7958$6957$bP4ck))
                  (g$make-library-resolution-condition$6961$bP4ck
                    (record-constructor g$7959$6959$bP4ck))
                  (g$7955$6962$bP4ck (record-accessor g$7958$6957$bP4ck '0))
                  (g$7956$6963$bP4ck (record-accessor g$7958$6957$bP4ck '1))
                  (g$library-resolution-condition?$6964$bP4ck
                    (condition-predicate g$7958$6957$bP4ck))
                  (g$condition-library$6965$bP4ck
                    (condition-accessor g$7958$6957$bP4ck g$7955$6962$bP4ck))
                  (g$condition-files$6966$bP4ck
                    (condition-accessor g$7958$6957$bP4ck g$7956$6963$bP4ck)))
          (raise
            (condition
              (g$make-error$5825$bP4ck)
              (g$make-who-condition$5851$bP4ck 'expander)
              (g$make-message-condition$5805$bP4ck
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$6961$bP4ck
                g$libname$6955$bP4ck
                g$failed-list$6956$bP4ck)))))))
   (g$read-library-source-file$6881$bP4ck
     g$read-library-source-file$6977$bP4ck
     (case-lambda
       ((g$file-name$6967$bP4ck)
        (g$with-input-from-file$6385$bP4ck
          g$file-name$6967$bP4ck
          read-annotated))))
   (g$make-parameter$6882$bP4ck
     g$make-parameter$6978$bP4ck
     (case-lambda
       ((g$x$6968$bP4ck)
        (g$make-parameter$6882$bP4ck
          g$x$6968$bP4ck
          (case-lambda ((g$x$6969$bP4ck) g$x$6969$bP4ck))))
       ((g$x$6970$bP4ck g$fender$6971$bP4ck)
        (begin
          (if (not (procedure? g$fender$6971$bP4ck))
            (g$assertion-error$11595$bP4ck
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(89,8) - (89,36)"))
            (void))
          ((case-lambda
             ((g$x$6972$bP4ck)
              (case-lambda
                (() g$x$6972$bP4ck)
                ((g$v$6973$bP4ck)
                 (set! g$x$6972$bP4ck (g$fender$6971$bP4ck g$v$6973$bP4ck))))))
           (g$fender$6971$bP4ck g$x$6970$bP4ck))))))
   (g$file-options-constructor$6950$bP4ck
     g$file-options-constructor$6979$bP4ck
     (g$make-parameter$6882$bP4ck '#f))
   (g$file-options-spec$6951$bP4ck
     g$file-options-spec$6980$bP4ck
     (case-lambda
       ((g$x$6974$bP4ck)
        ((g$file-options-constructor$6950$bP4ck) g$x$6974$bP4ck)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7176$bP4ck
     g$current-primitive-locations$7221$bP4ck
     (g$make-parameter$6978$bP4ck
       (case-lambda ((g$x$7182$bP4ck) '#f))
       (case-lambda
         ((g$p$7183$bP4ck)
          (begin
            (if (not (procedure? g$p$7183$bP4ck))
              (g$assertion-error$11595$bP4ck
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$7183$bP4ck)))))
   (g$mutable?$7177$bP4ck
     g$mutable?$7222$bP4ck
     (case-lambda
       ((g$x$7184$bP4ck)
        (letrec* ((g$simple?$7185$bP4ck
                    (case-lambda
                      ((g$x$7186$bP4ck)
                       ((case-lambda
                          ((g$t$7187$bP4ck)
                           (if g$t$7187$bP4ck
                             g$t$7187$bP4ck
                             ((case-lambda
                                ((g$t$7188$bP4ck)
                                 (if g$t$7188$bP4ck
                                   g$t$7188$bP4ck
                                   ((case-lambda
                                      ((g$t$7189$bP4ck)
                                       (if g$t$7189$bP4ck
                                         g$t$7189$bP4ck
                                         ((case-lambda
                                            ((g$t$7190$bP4ck)
                                             (if g$t$7190$bP4ck
                                               g$t$7190$bP4ck
                                               ((case-lambda
                                                  ((g$t$7191$bP4ck)
                                                   (if g$t$7191$bP4ck
                                                     g$t$7191$bP4ck
                                                     ((case-lambda
                                                        ((g$t$7192$bP4ck)
                                                         (if g$t$7192$bP4ck
                                                           g$t$7192$bP4ck
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7186$bP4ck)))))
                                                      (bytevector?
                                                        g$x$7186$bP4ck)))))
                                                (string? g$x$7186$bP4ck)))))
                                          (boolean? g$x$7186$bP4ck)))))
                                    (symbol? g$x$7186$bP4ck)))))
                              (char? g$x$7186$bP4ck)))))
                        (null? g$x$7186$bP4ck))))))
          (not (g$simple?$7185$bP4ck g$x$7184$bP4ck))))))
   (g$rewriter$7178$bP4ck
     g$rewriter$7223$bP4ck
     (case-lambda
       ((g$quote-hack?$7193$bP4ck)
        (letrec* ((g$f$7194$bP4ck
                    (case-lambda
                      ((g$x$7195$bP4ck)
                       (if (pair? g$x$7195$bP4ck)
                         ((case-lambda
                            ((g$t$7196$bP4ck)
                             (if (g$memv$5056$bP4ck g$t$7196$bP4ck '(quote))
                               (if (if g$quote-hack?$7193$bP4ck
                                     (begin
                                       '#f
                                       (g$mutable?$7177$bP4ck
                                         (g$cadr$5264$bP4ck g$x$7195$bP4ck)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7197$bP4ck)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7197$bP4ck
                                         (g$cadr$5264$bP4ck g$x$7195$bP4ck))
                                       g$g$7197$bP4ck)))
                                  (gensym))
                                 g$x$7195$bP4ck)
                               (if (g$memv$5056$bP4ck
                                     g$t$7196$bP4ck
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (g$map$5063$bP4ck
                                     (case-lambda
                                       ((g$x$7198$bP4ck)
                                        (cons
                                          (car g$x$7198$bP4ck)
                                          (g$map$5063$bP4ck
                                            g$f$7194$bP4ck
                                            (cdr g$x$7198$bP4ck)))))
                                     (cdr g$x$7195$bP4ck)))
                                 (if (g$memv$5056$bP4ck
                                       g$t$7196$bP4ck
                                       '(lambda))
                                   (g$cons*$5065$bP4ck
                                     'lambda
                                     (g$cadr$5264$bP4ck g$x$7195$bP4ck)
                                     (g$map$5063$bP4ck
                                       g$f$7194$bP4ck
                                       (g$cddr$5266$bP4ck g$x$7195$bP4ck)))
                                   (if (g$memv$5056$bP4ck
                                         g$t$7196$bP4ck
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$7199$bP4ck
                                           g$body*$7200$bP4ck)
                                         ((case-lambda
                                            ((g$lhs*$7201$bP4ck
                                               g$rhs*$7202$bP4ck)
                                             (g$cons*$5065$bP4ck
                                               'letrec
                                               (g$map$5063$bP4ck
                                                 list
                                                 g$lhs*$7201$bP4ck
                                                 (g$map$5063$bP4ck
                                                   g$f$7194$bP4ck
                                                   g$rhs*$7202$bP4ck))
                                               (g$map$5063$bP4ck
                                                 g$f$7194$bP4ck
                                                 g$body*$7200$bP4ck))))
                                          (g$map$5063$bP4ck
                                            car
                                            g$bindings$7199$bP4ck)
                                          (g$map$5063$bP4ck
                                            g$cadr$5264$bP4ck
                                            g$bindings$7199$bP4ck))))
                                      (g$cadr$5264$bP4ck g$x$7195$bP4ck)
                                      (g$cddr$5266$bP4ck g$x$7195$bP4ck))
                                     (if (g$memv$5056$bP4ck
                                           g$t$7196$bP4ck
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$7203$bP4ck
                                             g$body*$7204$bP4ck)
                                           ((case-lambda
                                              ((g$lhs*$7205$bP4ck
                                                 g$rhs*$7206$bP4ck)
                                               (g$cons*$5065$bP4ck
                                                 'letrec*
                                                 (g$map$5063$bP4ck
                                                   list
                                                   g$lhs*$7205$bP4ck
                                                   (g$map$5063$bP4ck
                                                     g$f$7194$bP4ck
                                                     g$rhs*$7206$bP4ck))
                                                 (g$map$5063$bP4ck
                                                   g$f$7194$bP4ck
                                                   g$body*$7204$bP4ck))))
                                            (g$map$5063$bP4ck
                                              car
                                              g$bindings$7203$bP4ck)
                                            (g$map$5063$bP4ck
                                              g$cadr$5264$bP4ck
                                              g$bindings$7203$bP4ck))))
                                        (g$cadr$5264$bP4ck g$x$7195$bP4ck)
                                        (g$cddr$5266$bP4ck g$x$7195$bP4ck))
                                       (if (g$memv$5056$bP4ck
                                             g$t$7196$bP4ck
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$7207$bP4ck g$x$7208$bP4ck)
                                             ((case-lambda
                                                ((g$bindings$7209$bP4ck
                                                   g$body*$7210$bP4ck)
                                                 ((case-lambda
                                                    ((g$lhs*$7211$bP4ck
                                                       g$lhs**$7212$bP4ck
                                                       g$rhs*$7213$bP4ck)
                                                     (g$cons*$5065$bP4ck
                                                       'library-letrec*
                                                       g$name$7207$bP4ck
                                                       (g$map$5063$bP4ck
                                                         list
                                                         g$lhs*$7211$bP4ck
                                                         g$lhs**$7212$bP4ck
                                                         (g$map$5063$bP4ck
                                                           g$f$7194$bP4ck
                                                           g$rhs*$7213$bP4ck))
                                                       (g$map$5063$bP4ck
                                                         g$f$7194$bP4ck
                                                         g$body*$7210$bP4ck))))
                                                  (g$map$5063$bP4ck
                                                    car
                                                    g$bindings$7209$bP4ck)
                                                  (g$map$5063$bP4ck
                                                    g$cadr$5264$bP4ck
                                                    g$bindings$7209$bP4ck)
                                                  (g$map$5063$bP4ck
                                                    g$caddr$5270$bP4ck
                                                    g$bindings$7209$bP4ck))))
                                              (g$cadr$5264$bP4ck g$x$7208$bP4ck)
                                              (g$cddr$5266$bP4ck
                                                g$x$7208$bP4ck))))
                                          (g$cadr$5264$bP4ck g$x$7195$bP4ck)
                                          (cdr g$x$7195$bP4ck))
                                         (if (g$memv$5056$bP4ck
                                               g$t$7196$bP4ck
                                               '(begin))
                                           (cons
                                             'begin
                                             (g$map$5063$bP4ck
                                               g$f$7194$bP4ck
                                               (cdr g$x$7195$bP4ck)))
                                           (if (g$memv$5056$bP4ck
                                                 g$t$7196$bP4ck
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5264$bP4ck
                                                 g$x$7195$bP4ck)
                                               (g$f$7194$bP4ck
                                                 (g$caddr$5270$bP4ck
                                                   g$x$7195$bP4ck)))
                                             (if (g$memv$5056$bP4ck
                                                   g$t$7196$bP4ck
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$7214$bP4ck)
                                                   ((case-lambda
                                                      ((g$t$7215$bP4ck)
                                                       (if g$t$7215$bP4ck
                                                         ((case-lambda
                                                            ((g$loc$7216$bP4ck)
                                                             g$loc$7216$bP4ck))
                                                          g$t$7215$bP4ck)
                                                         g$op$7214$bP4ck)))
                                                    ((g$current-primitive-locations$7176$bP4ck)
                                                     g$op$7214$bP4ck))))
                                                (g$cadr$5264$bP4ck
                                                  g$x$7195$bP4ck))
                                               (if (g$memv$5056$bP4ck
                                                     g$t$7196$bP4ck
                                                     '(define))
                                                 g$x$7195$bP4ck
                                                 (if (list? g$x$7195$bP4ck)
                                                   (g$map$5063$bP4ck
                                                     g$f$7194$bP4ck
                                                     g$x$7195$bP4ck)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7195$bP4ck
                                                     (list?
                                                       g$x$7195$bP4ck)))))))))))))))
                          (car g$x$7195$bP4ck))
                         g$x$7195$bP4ck)))))
          g$f$7194$bP4ck))))
   (g$expanded->core$7179$bP4ck
     g$expanded->core$7224$bP4ck
     (case-lambda
       ((g$x$7217$bP4ck) ((g$rewriter$7178$bP4ck '#t) g$x$7217$bP4ck))))
   (g$compile-core-expr$7180$bP4ck
     g$compile-core-expr$7225$bP4ck
     (case-lambda
       ((g$x$7218$bP4ck) ((g$rewriter$7178$bP4ck '#f) g$x$7218$bP4ck))))
   (g$compile-core-expr-to-port$7181$bP4ck
     g$compile-core-expr-to-port$7226$bP4ck
     (case-lambda
       ((g$x$7219$bP4ck g$p$7220$bP4ck)
        (g$pretty-print$7175$bP4ck
          ((g$rewriter$7178$bP4ck '#f) g$x$7219$bP4ck)
          g$p$7220$bP4ck)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7265$bP4ck
     g$make-collection$7460$bP4ck
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7326$bP4ck)
            (letrec* ((g$set-cons$7327$bP4ck
                        (case-lambda
                          ((g$x$7329$bP4ck g$ls$7330$bP4ck)
                           (if (g$memq$5055$bP4ck
                                 g$x$7329$bP4ck
                                 g$ls$7330$bP4ck)
                             g$ls$7330$bP4ck
                             (cons g$x$7329$bP4ck g$ls$7330$bP4ck))))))
              (case-lambda
                (() g$set$7326$bP4ck)
                ((g$x$7328$bP4ck)
                 (set! g$set$7326$bP4ck
                   (g$set-cons$7327$bP4ck g$x$7328$bP4ck g$set$7326$bP4ck)))))))
         '()))))
   (g$current-library-collection$7266$bP4ck
     g$current-library-collection$7461$bP4ck
     (g$make-parameter$6978$bP4ck
       (g$make-collection$7265$bP4ck)
       (case-lambda
         ((g$x$7331$bP4ck)
          (begin
            (if (not (procedure? g$x$7331$bP4ck))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7331$bP4ck)
              (void))
            g$x$7331$bP4ck)))))
   (g$8274$7267$bP4ck
     g$8274$7462$bP4ck
     (make-record-type-descriptor
       'library
       '#f
       'g$8277$bP4ck
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8276$7268$bP4ck g$8276$7463$bP4ck '#f)
   (g$8275$7269$bP4ck
     g$8275$7464$bP4ck
     (make-record-constructor-descriptor
       g$8274$7267$bP4ck
       '#f
       g$8276$7268$bP4ck))
   (g$library?$7270$bP4ck
     g$library?$7465$bP4ck
     (record-predicate g$8274$7267$bP4ck))
   (g$make-library$7271$bP4ck
     g$make-library$7466$bP4ck
     (record-constructor g$8275$7269$bP4ck))
   (g$library-id$7272$bP4ck
     g$library-id$7467$bP4ck
     (record-accessor g$8274$7267$bP4ck '0))
   (g$library-name$7273$bP4ck
     g$library-name$7468$bP4ck
     (record-accessor g$8274$7267$bP4ck '1))
   (g$library-version$7274$bP4ck
     g$library-version$7469$bP4ck
     (record-accessor g$8274$7267$bP4ck '2))
   (g$library-imp*$7275$bP4ck
     g$library-imp*$7470$bP4ck
     (record-accessor g$8274$7267$bP4ck '3))
   (g$library-vis*$7276$bP4ck
     g$library-vis*$7471$bP4ck
     (record-accessor g$8274$7267$bP4ck '4))
   (g$library-inv*$7277$bP4ck
     g$library-inv*$7472$bP4ck
     (record-accessor g$8274$7267$bP4ck '5))
   (g$library-subst$7278$bP4ck
     g$library-subst$7473$bP4ck
     (record-accessor g$8274$7267$bP4ck '6))
   (g$library-env$7279$bP4ck
     g$library-env$7474$bP4ck
     (record-accessor g$8274$7267$bP4ck '7))
   (g$library-visit-state$7280$bP4ck
     g$library-visit-state$7475$bP4ck
     (record-accessor g$8274$7267$bP4ck '8))
   (g$library-invoke-state$7281$bP4ck
     g$library-invoke-state$7476$bP4ck
     (record-accessor g$8274$7267$bP4ck '9))
   (g$library-visit-code$7282$bP4ck
     g$library-visit-code$7477$bP4ck
     (record-accessor g$8274$7267$bP4ck '10))
   (g$library-invoke-code$7283$bP4ck
     g$library-invoke-code$7478$bP4ck
     (record-accessor g$8274$7267$bP4ck '11))
   (g$library-visible?$7284$bP4ck
     g$library-visible?$7479$bP4ck
     (record-accessor g$8274$7267$bP4ck '12))
   (g$library-source-file-name$7285$bP4ck
     g$library-source-file-name$7480$bP4ck
     (record-accessor g$8274$7267$bP4ck '13))
   (g$set-library-id!$7286$bP4ck
     g$set-library-id!$7481$bP4ck
     (record-mutator g$8274$7267$bP4ck '0))
   (g$set-library-name!$7287$bP4ck
     g$set-library-name!$7482$bP4ck
     (record-mutator g$8274$7267$bP4ck '1))
   (g$set-library-version!$7288$bP4ck
     g$set-library-version!$7483$bP4ck
     (record-mutator g$8274$7267$bP4ck '2))
   (g$set-library-imp*!$7289$bP4ck
     g$set-library-imp*!$7484$bP4ck
     (record-mutator g$8274$7267$bP4ck '3))
   (g$set-library-vis*!$7290$bP4ck
     g$set-library-vis*!$7485$bP4ck
     (record-mutator g$8274$7267$bP4ck '4))
   (g$set-library-inv*!$7291$bP4ck
     g$set-library-inv*!$7486$bP4ck
     (record-mutator g$8274$7267$bP4ck '5))
   (g$set-library-subst!$7292$bP4ck
     g$set-library-subst!$7487$bP4ck
     (record-mutator g$8274$7267$bP4ck '6))
   (g$set-library-env!$7293$bP4ck
     g$set-library-env!$7488$bP4ck
     (record-mutator g$8274$7267$bP4ck '7))
   (g$set-library-visit-state!$7294$bP4ck
     g$set-library-visit-state!$7489$bP4ck
     (record-mutator g$8274$7267$bP4ck '8))
   (g$set-library-invoke-state!$7295$bP4ck
     g$set-library-invoke-state!$7490$bP4ck
     (record-mutator g$8274$7267$bP4ck '9))
   (g$set-library-visit-code!$7296$bP4ck
     g$set-library-visit-code!$7491$bP4ck
     (record-mutator g$8274$7267$bP4ck '10))
   (g$set-library-invoke-code!$7297$bP4ck
     g$set-library-invoke-code!$7492$bP4ck
     (record-mutator g$8274$7267$bP4ck '11))
   (g$set-library-visible?!$7298$bP4ck
     g$set-library-visible?!$7493$bP4ck
     (record-mutator g$8274$7267$bP4ck '12))
   (g$set-library-source-file-name!$7299$bP4ck
     g$set-library-source-file-name!$7494$bP4ck
     (record-mutator g$8274$7267$bP4ck '13))
   (g$rp$7300$bP4ck
     g$rp$7495$bP4ck
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7332$bP4ck g$p$7333$bP4ck g$wr$7334$bP4ck)
          (begin
            (if (not (g$library?$7270$bP4ck g$x$7332$bP4ck))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6559$bP4ck
                '"#<library ~s>"
                (if (null? (g$library-version$7274$bP4ck g$x$7332$bP4ck))
                  (g$library-name$7273$bP4ck g$x$7332$bP4ck)
                  (append
                    (g$library-name$7273$bP4ck g$x$7332$bP4ck)
                    (list (g$library-version$7274$bP4ck g$x$7332$bP4ck)))))
              g$p$7333$bP4ck))))))
   (g$find-dependencies$7301$bP4ck
     g$find-dependencies$7496$bP4ck
     (case-lambda
       ((g$ls$7335$bP4ck)
        (if (null? g$ls$7335$bP4ck)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7302$bP4ck
     g$find-library-by$7497$bP4ck
     (case-lambda
       ((g$pred$7336$bP4ck)
        ((letrec ((g$f$7337$bP4ck
                    (case-lambda
                      ((g$ls$7338$bP4ck)
                       (if (null? g$ls$7338$bP4ck)
                         '#f
                         (if (g$pred$7336$bP4ck (car g$ls$7338$bP4ck))
                           (car g$ls$7338$bP4ck)
                           (g$f$7337$bP4ck (cdr g$ls$7338$bP4ck))))))))
           g$f$7337$bP4ck)
         ((g$current-library-collection$7266$bP4ck))))))
   (g$library-path$7303$bP4ck
     g$library-path$7498$bP4ck
     (g$make-parameter$6978$bP4ck
       '(".")
       (case-lambda
         ((g$x$7339$bP4ck)
          (if (if (list? g$x$7339$bP4ck)
                (begin '#f (g$for-all$5061$bP4ck string? g$x$7339$bP4ck))
                '#f)
            (g$map$5063$bP4ck
              (case-lambda ((g$x$7340$bP4ck) g$x$7340$bP4ck))
              g$x$7339$bP4ck)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7339$bP4ck))))))
   (g$library-extensions$7304$bP4ck
     g$library-extensions$7499$bP4ck
     (g$make-parameter$6978$bP4ck
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7341$bP4ck)
          (if (if (list? g$x$7341$bP4ck)
                (begin '#f (g$for-all$5061$bP4ck string? g$x$7341$bP4ck))
                '#f)
            (g$map$5063$bP4ck
              (case-lambda ((g$x$7342$bP4ck) g$x$7342$bP4ck))
              g$x$7341$bP4ck)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7341$bP4ck))))))
   (g$library-name->file-name$7305$bP4ck
     g$library-name->file-name$7500$bP4ck
     (case-lambda
       ((g$x$7343$bP4ck)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6336$bP4ck)))
          (case-lambda
            ((g$p$7346$bP4ck g$extract$7347$bP4ck)
             ((case-lambda
                ((g$extract$7348$bP4ck g$p$7349$bP4ck)
                 (letrec* ((g$display-hex$7350$bP4ck
                             (case-lambda
                               ((g$n$7358$bP4ck)
                                (if (<= '0 g$n$7358$bP4ck '9)
                                  (display g$n$7358$bP4ck g$p$7349$bP4ck)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7358$bP4ck '10)))
                                    g$p$7349$bP4ck))))))
                   (begin
                     ((letrec ((g$f$7351$bP4ck
                                 (case-lambda
                                   ((g$ls$7352$bP4ck)
                                    (if (not (null? g$ls$7352$bP4ck))
                                      (begin
                                        (display '"/" g$p$7349$bP4ck)
                                        (g$for-each$5064$bP4ck
                                          (case-lambda
                                            ((g$c$7353$bP4ck)
                                             (if ((case-lambda
                                                    ((g$t$7354$bP4ck)
                                                     (if g$t$7354$bP4ck
                                                       g$t$7354$bP4ck
                                                       ((case-lambda
                                                          ((g$t$7355$bP4ck)
                                                           (if g$t$7355$bP4ck
                                                             g$t$7355$bP4ck
                                                             ((case-lambda
                                                                ((g$t$7356$bP4ck)
                                                                 (if g$t$7356$bP4ck
                                                                   g$t$7356$bP4ck
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$5056$bP4ck
                                                                       g$c$7353$bP4ck
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5310$bP4ck
                                                                '#\0
                                                                g$c$7353$bP4ck
                                                                '#\9)))))
                                                        (g$char<=?$5310$bP4ck
                                                          '#\A
                                                          g$c$7353$bP4ck
                                                          '#\Z)))))
                                                  (g$char<=?$5310$bP4ck
                                                    '#\a
                                                    g$c$7353$bP4ck
                                                    '#\z))
                                               (display
                                                 g$c$7353$bP4ck
                                                 g$p$7349$bP4ck)
                                               (begin
                                                 (display '"%" g$p$7349$bP4ck)
                                                 ((case-lambda
                                                    ((g$n$7357$bP4ck)
                                                     (begin
                                                       (g$display-hex$7350$bP4ck
                                                         (g$quotient$5919$bP4ck
                                                           g$n$7357$bP4ck
                                                           '16))
                                                       (g$display-hex$7350$bP4ck
                                                         (g$remainder$5920$bP4ck
                                                           g$n$7357$bP4ck
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7353$bP4ck))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7352$bP4ck))))
                                        (g$f$7351$bP4ck (cdr g$ls$7352$bP4ck)))
                                      (void))))))
                        g$f$7351$bP4ck)
                      g$x$7343$bP4ck)
                     (g$extract$7348$bP4ck)))))
              g$extract$7347$bP4ck
              g$p$7346$bP4ck)))))))
   (g$file-locator$7306$bP4ck
     g$file-locator$7501$bP4ck
     (g$make-parameter$6978$bP4ck
       (case-lambda
         ((g$x$7359$bP4ck)
          ((case-lambda
             ((g$str$7360$bP4ck)
              ((letrec ((g$f$7361$bP4ck
                          (case-lambda
                            ((g$ls$7362$bP4ck
                               g$exts$7363$bP4ck
                               g$failed-list$7364$bP4ck)
                             (if (null? g$ls$7362$bP4ck)
                               (g$file-locator-resolution-error$6976$bP4ck
                                 g$x$7359$bP4ck
                                 (reverse g$failed-list$7364$bP4ck))
                               (if (null? g$exts$7363$bP4ck)
                                 (g$f$7361$bP4ck
                                   (cdr g$ls$7362$bP4ck)
                                   (g$library-extensions$7304$bP4ck)
                                   g$failed-list$7364$bP4ck)
                                 ((case-lambda
                                    ((g$name$7365$bP4ck)
                                     (if (g$file-exists?$5556$bP4ck
                                           g$name$7365$bP4ck)
                                       g$name$7365$bP4ck
                                       (g$f$7361$bP4ck
                                         g$ls$7362$bP4ck
                                         (cdr g$exts$7363$bP4ck)
                                         (cons
                                           g$name$7365$bP4ck
                                           g$failed-list$7364$bP4ck)))))
                                  (string-append
                                    (car g$ls$7362$bP4ck)
                                    g$str$7360$bP4ck
                                    (car g$exts$7363$bP4ck)))))))))
                 g$f$7361$bP4ck)
               (g$library-path$7303$bP4ck)
               (g$library-extensions$7304$bP4ck)
               '())))
           (g$library-name->file-name$7305$bP4ck g$x$7359$bP4ck))))
       (case-lambda
         ((g$f$7366$bP4ck)
          (if (procedure? g$f$7366$bP4ck)
            g$f$7366$bP4ck
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7366$bP4ck))))))
   (g$serialize-all$7307$bP4ck
     g$serialize-all$7502$bP4ck
     (case-lambda
       ((g$serialize$7367$bP4ck g$compile$7368$bP4ck)
        (letrec* ((g$library-desc$7369$bP4ck
                    (case-lambda
                      ((g$x$7371$bP4ck)
                       (list
                         (g$library-id$7272$bP4ck g$x$7371$bP4ck)
                         (g$library-name$7273$bP4ck g$x$7371$bP4ck))))))
          (g$for-each$5064$bP4ck
            (case-lambda
              ((g$x$7370$bP4ck)
               (if (g$library-source-file-name$7285$bP4ck g$x$7370$bP4ck)
                 (g$serialize$7367$bP4ck
                   (g$library-source-file-name$7285$bP4ck g$x$7370$bP4ck)
                   (list
                     (g$library-id$7272$bP4ck g$x$7370$bP4ck)
                     (g$library-name$7273$bP4ck g$x$7370$bP4ck)
                     (g$library-version$7274$bP4ck g$x$7370$bP4ck)
                     (g$map$5063$bP4ck
                       g$library-desc$7369$bP4ck
                       (g$library-imp*$7275$bP4ck g$x$7370$bP4ck))
                     (g$map$5063$bP4ck
                       g$library-desc$7369$bP4ck
                       (g$library-vis*$7276$bP4ck g$x$7370$bP4ck))
                     (g$map$5063$bP4ck
                       g$library-desc$7369$bP4ck
                       (g$library-inv*$7277$bP4ck g$x$7370$bP4ck))
                     (g$library-subst$7278$bP4ck g$x$7370$bP4ck)
                     (g$library-env$7279$bP4ck g$x$7370$bP4ck)
                     (g$compile$7368$bP4ck
                       (g$library-visit-code$7282$bP4ck g$x$7370$bP4ck))
                     (g$compile$7368$bP4ck
                       (g$library-invoke-code$7283$bP4ck g$x$7370$bP4ck))
                     (g$library-visible?$7284$bP4ck g$x$7370$bP4ck)))
                 (void))))
            ((g$current-library-collection$7266$bP4ck)))))))
   (g$current-precompiled-library-loader$7308$bP4ck
     g$current-precompiled-library-loader$7503$bP4ck
     (g$make-parameter$6978$bP4ck
       (case-lambda ((g$filename$7372$bP4ck g$sk$7373$bP4ck) '#f))))
   (g$try-load-from-file$7309$bP4ck
     g$try-load-from-file$7504$bP4ck
     (case-lambda
       ((g$filename$7374$bP4ck)
        ((g$current-precompiled-library-loader$7308$bP4ck)
         g$filename$7374$bP4ck
         (case-lambda
           ((g$id$7375$bP4ck
              g$name$7376$bP4ck
              g$ver$7377$bP4ck
              g$imp*$7378$bP4ck
              g$vis*$7379$bP4ck
              g$inv*$7380$bP4ck
              g$exp-subst$7381$bP4ck
              g$exp-env$7382$bP4ck
              g$visit-proc$7383$bP4ck
              g$invoke-proc$7384$bP4ck
              g$visible?$7385$bP4ck)
            ((letrec ((g$f$7386$bP4ck
                        (case-lambda
                          ((g$deps$7387$bP4ck)
                           (if (null? g$deps$7387$bP4ck)
                             (begin
                               (g$install-library$7319$bP4ck
                                 g$id$7375$bP4ck
                                 g$name$7376$bP4ck
                                 g$ver$7377$bP4ck
                                 g$imp*$7378$bP4ck
                                 g$vis*$7379$bP4ck
                                 g$inv*$7380$bP4ck
                                 g$exp-subst$7381$bP4ck
                                 g$exp-env$7382$bP4ck
                                 g$visit-proc$7383$bP4ck
                                 g$invoke-proc$7384$bP4ck
                                 '#f
                                 '#f
                                 g$visible?$7385$bP4ck
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7388$bP4ck)
                                 ((case-lambda
                                    ((g$label$7389$bP4ck g$dname$7390$bP4ck)
                                     ((case-lambda
                                        ((g$l$7391$bP4ck)
                                         (if (if (g$library?$7270$bP4ck
                                                   g$l$7391$bP4ck)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7389$bP4ck
                                                      (g$library-id$7272$bP4ck
                                                        g$l$7391$bP4ck)))
                                               '#f)
                                           (g$f$7386$bP4ck
                                             (cdr g$deps$7387$bP4ck))
                                           (begin
                                             (g$library-version-mismatch-warning$6975$bP4ck
                                               g$name$7376$bP4ck
                                               g$dname$7390$bP4ck
                                               g$filename$7374$bP4ck)
                                             '#f))))
                                      (g$find-library-by-name$7314$bP4ck
                                        g$dname$7390$bP4ck))))
                                  (car g$d$7388$bP4ck)
                                  (g$cadr$5264$bP4ck g$d$7388$bP4ck))))
                              (car g$deps$7387$bP4ck)))))))
               g$f$7386$bP4ck)
             (append g$imp*$7378$bP4ck g$vis*$7379$bP4ck g$inv*$7380$bP4ck)))
           (g$others$7392$bP4ck '#f))))))
   (g$library-loader$7310$bP4ck
     g$library-loader$7505$bP4ck
     (g$make-parameter$6978$bP4ck
       (case-lambda
         ((g$x$7393$bP4ck)
          ((case-lambda
             ((g$file-name$7394$bP4ck)
              (if (not g$file-name$7394$bP4ck)
                (assertion-violation '#f '"cannot file library" g$x$7393$bP4ck)
                ((case-lambda
                   ((g$t$7395$bP4ck)
                    (if g$t$7395$bP4ck
                      g$t$7395$bP4ck
                      (begin
                        '#f
                        ((g$current-library-expander$7311$bP4ck)
                         (g$read-library-source-file$6977$bP4ck
                           g$file-name$7394$bP4ck)
                         g$file-name$7394$bP4ck
                         (case-lambda
                           ((g$name$7396$bP4ck)
                            (if (not (equal? g$name$7396$bP4ck g$x$7393$bP4ck))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6336$bP4ck)))
                                  (case-lambda
                                    ((g$p$7399$bP4ck g$e$7400$bP4ck)
                                     ((case-lambda
                                        ((g$e$7401$bP4ck g$p$7402$bP4ck)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7402$bP4ck)
                                           (write g$x$7393$bP4ck g$p$7402$bP4ck)
                                           (display '" in file " g$p$7402$bP4ck)
                                           (display
                                             g$file-name$7394$bP4ck
                                             g$p$7402$bP4ck)
                                           (display '", found " g$p$7402$bP4ck)
                                           (write
                                             g$name$7396$bP4ck
                                             g$p$7402$bP4ck)
                                           (display '" instead" g$p$7402$bP4ck)
                                           (g$e$7401$bP4ck))))
                                      g$e$7400$bP4ck
                                      g$p$7399$bP4ck)))))
                              (void)))))))))
                 (g$try-load-from-file$7309$bP4ck g$file-name$7394$bP4ck)))))
           ((g$file-locator$7306$bP4ck) g$x$7393$bP4ck))))
       (case-lambda
         ((g$f$7403$bP4ck)
          (if (procedure? g$f$7403$bP4ck)
            g$f$7403$bP4ck
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7403$bP4ck))))))
   (g$current-library-expander$7311$bP4ck
     g$current-library-expander$7506$bP4ck
     (g$make-parameter$6978$bP4ck
       (case-lambda
         ((g$x$7404$bP4ck)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7405$bP4ck)
          (if (procedure? g$f$7405$bP4ck)
            g$f$7405$bP4ck
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7405$bP4ck))))))
   (g$external-pending-libraries$7312$bP4ck
     g$external-pending-libraries$7507$bP4ck
     (g$make-parameter$6978$bP4ck '()))
   (g$find-external-library$7313$bP4ck
     g$find-external-library$7508$bP4ck
     (case-lambda
       ((g$name$7406$bP4ck)
        (begin
          (if (g$member$5057$bP4ck
                g$name$7406$bP4ck
                (g$external-pending-libraries$7312$bP4ck))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7406$bP4ck)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7409$bP4ck
                g$external-pending-libraries$7410$bP4ck)
              ((case-lambda
                 ((g$swap$7411$bP4ck)
                  (dynamic-wind
                    g$swap$7411$bP4ck
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7310$bP4ck) g$name$7406$bP4ck)
                         ((case-lambda
                            ((g$t$7412$bP4ck)
                             (if g$t$7412$bP4ck
                               g$t$7412$bP4ck
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7406$bP4ck)))))
                          (g$find-library-by$7302$bP4ck
                            (case-lambda
                              ((g$x$7413$bP4ck)
                               (equal?
                                 (g$library-name$7273$bP4ck g$x$7413$bP4ck)
                                 g$name$7406$bP4ck))))))))
                    g$swap$7411$bP4ck)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7414$bP4ck)
                      (begin
                        (g$external-pending-libraries$7409$bP4ck
                          g$external-pending-libraries$7410$bP4ck)
                        (set! g$external-pending-libraries$7410$bP4ck
                          g$t$7414$bP4ck))))
                   (g$external-pending-libraries$7409$bP4ck)))))))
           g$external-pending-libraries$7312$bP4ck
           (cons
             g$name$7406$bP4ck
             (g$external-pending-libraries$7312$bP4ck)))))))
   (g$find-library-by-name$7314$bP4ck
     g$find-library-by-name$7509$bP4ck
     (case-lambda
       ((g$name$7415$bP4ck)
        ((case-lambda
           ((g$t$7416$bP4ck)
            (if g$t$7416$bP4ck
              g$t$7416$bP4ck
              (begin
                '#f
                (g$find-external-library$7313$bP4ck g$name$7415$bP4ck)))))
         (g$find-library-by$7302$bP4ck
           (case-lambda
             ((g$x$7417$bP4ck)
              (equal?
                (g$library-name$7273$bP4ck g$x$7417$bP4ck)
                g$name$7415$bP4ck))))))))
   (g$library-exists?$7315$bP4ck
     g$library-exists?$7510$bP4ck
     (case-lambda
       ((g$name$7418$bP4ck)
        (if (g$find-library-by$7302$bP4ck
              (case-lambda
                ((g$x$7419$bP4ck)
                 (equal?
                   (g$library-name$7273$bP4ck g$x$7419$bP4ck)
                   g$name$7418$bP4ck))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7316$bP4ck
     g$find-library-by-spec/die$7511$bP4ck
     (case-lambda
       ((g$spec$7420$bP4ck)
        ((case-lambda
           ((g$id$7421$bP4ck)
            ((case-lambda
               ((g$t$7422$bP4ck)
                (if g$t$7422$bP4ck
                  g$t$7422$bP4ck
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7420$bP4ck)))))
             (g$find-library-by$7302$bP4ck
               (case-lambda
                 ((g$x$7423$bP4ck)
                  (eq? g$id$7421$bP4ck
                       (g$library-id$7272$bP4ck g$x$7423$bP4ck))))))))
         (car g$spec$7420$bP4ck)))))
   (g$label->binding-table$7317$bP4ck
     g$label->binding-table$7512$bP4ck
     (g$make-eq-hashtable$5538$bP4ck))
   (g$install-library-record$7318$bP4ck
     g$install-library-record$7513$bP4ck
     (case-lambda
       ((g$lib$7424$bP4ck)
        (begin
          ((case-lambda
             ((g$exp-env$7425$bP4ck)
              (g$for-each$5064$bP4ck
                (case-lambda
                  ((g$x$7426$bP4ck)
                   ((case-lambda
                      ((g$label$7427$bP4ck g$binding$7428$bP4ck)
                       ((case-lambda
                          ((g$binding$7429$bP4ck)
                           (g$hashtable-set!$5542$bP4ck
                             g$label->binding-table$7317$bP4ck
                             g$label$7427$bP4ck
                             g$binding$7429$bP4ck)))
                        ((case-lambda
                           ((g$t$7430$bP4ck)
                            (if (g$memv$5056$bP4ck g$t$7430$bP4ck '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7424$bP4ck
                                  (cdr g$binding$7428$bP4ck)))
                              (if (g$memv$5056$bP4ck
                                    g$t$7430$bP4ck
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7424$bP4ck
                                    (cdr g$binding$7428$bP4ck)))
                                (if (g$memv$5056$bP4ck
                                      g$t$7430$bP4ck
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7424$bP4ck
                                      (cdr g$binding$7428$bP4ck)))
                                  g$binding$7428$bP4ck)))))
                         (car g$binding$7428$bP4ck)))))
                    (car g$x$7426$bP4ck)
                    (cdr g$x$7426$bP4ck))))
                g$exp-env$7425$bP4ck)))
           (g$library-env$7279$bP4ck g$lib$7424$bP4ck))
          ((g$current-library-collection$7266$bP4ck) g$lib$7424$bP4ck)))))
   (g$install-library$7319$bP4ck
     g$install-library$7514$bP4ck
     (case-lambda
       ((g$id$7431$bP4ck
          g$name$7432$bP4ck
          g$ver$7433$bP4ck
          g$imp*$7434$bP4ck
          g$vis*$7435$bP4ck
          g$inv*$7436$bP4ck
          g$exp-subst$7437$bP4ck
          g$exp-env$7438$bP4ck
          g$visit-proc$7439$bP4ck
          g$invoke-proc$7440$bP4ck
          g$visit-code$7441$bP4ck
          g$invoke-code$7442$bP4ck
          g$visible?$7443$bP4ck
          g$source-file-name$7444$bP4ck)
        ((case-lambda
           ((g$imp-lib*$7445$bP4ck g$vis-lib*$7446$bP4ck g$inv-lib*$7447$bP4ck)
            (begin
              (if (not (if (symbol? g$id$7431$bP4ck)
                         (if (list? g$name$7432$bP4ck)
                           (begin '#f (list? g$ver$7433$bP4ck))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7431$bP4ck
                  g$name$7432$bP4ck
                  g$ver$7433$bP4ck)
                (void))
              (if (g$library-exists?$7315$bP4ck g$name$7432$bP4ck)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7432$bP4ck)
                (void))
              ((case-lambda
                 ((g$lib$7448$bP4ck)
                  (g$install-library-record$7318$bP4ck g$lib$7448$bP4ck)))
               (g$make-library$7271$bP4ck
                 g$id$7431$bP4ck
                 g$name$7432$bP4ck
                 g$ver$7433$bP4ck
                 g$imp-lib*$7445$bP4ck
                 g$vis-lib*$7446$bP4ck
                 g$inv-lib*$7447$bP4ck
                 g$exp-subst$7437$bP4ck
                 g$exp-env$7438$bP4ck
                 g$visit-proc$7439$bP4ck
                 g$invoke-proc$7440$bP4ck
                 g$visit-code$7441$bP4ck
                 g$invoke-code$7442$bP4ck
                 g$visible?$7443$bP4ck
                 g$source-file-name$7444$bP4ck)))))
         (g$map$5063$bP4ck
           g$find-library-by-spec/die$7316$bP4ck
           g$imp*$7434$bP4ck)
         (g$map$5063$bP4ck
           g$find-library-by-spec/die$7316$bP4ck
           g$vis*$7435$bP4ck)
         (g$map$5063$bP4ck
           g$find-library-by-spec/die$7316$bP4ck
           g$inv*$7436$bP4ck)))))
   (g$imported-label->binding$7320$bP4ck
     g$imported-label->binding$7515$bP4ck
     (case-lambda
       ((g$lab$7449$bP4ck)
        (g$hashtable-ref$5541$bP4ck
          g$label->binding-table$7317$bP4ck
          g$lab$7449$bP4ck
          '#f))))
   (g$invoke-library$7321$bP4ck
     g$invoke-library$7516$bP4ck
     (case-lambda
       ((g$lib$7450$bP4ck)
        ((case-lambda
           ((g$invoke$7451$bP4ck)
            (if (procedure? g$invoke$7451$bP4ck)
              (begin
                (g$set-library-invoke-state!$7295$bP4ck
                  g$lib$7450$bP4ck
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7450$bP4ck))))
                (g$for-each$5064$bP4ck
                  g$invoke-library$7321$bP4ck
                  (g$library-inv*$7277$bP4ck g$lib$7450$bP4ck))
                (g$set-library-invoke-state!$7295$bP4ck
                  g$lib$7450$bP4ck
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7450$bP4ck))))
                (g$invoke$7451$bP4ck)
                (g$set-library-invoke-state!$7295$bP4ck g$lib$7450$bP4ck '#t))
              (void))))
         (g$library-invoke-state$7281$bP4ck g$lib$7450$bP4ck)))))
   (g$visit-library$7322$bP4ck
     g$visit-library$7517$bP4ck
     (case-lambda
       ((g$lib$7452$bP4ck)
        ((case-lambda
           ((g$visit$7453$bP4ck)
            (if (procedure? g$visit$7453$bP4ck)
              (begin
                (g$set-library-visit-state!$7294$bP4ck
                  g$lib$7452$bP4ck
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7452$bP4ck))))
                (g$for-each$5064$bP4ck
                  g$invoke-library$7321$bP4ck
                  (g$library-vis*$7276$bP4ck g$lib$7452$bP4ck))
                (g$set-library-visit-state!$7294$bP4ck
                  g$lib$7452$bP4ck
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7452$bP4ck))))
                (g$visit$7453$bP4ck)
                (g$set-library-visit-state!$7294$bP4ck g$lib$7452$bP4ck '#t))
              (void))))
         (g$library-visit-state$7280$bP4ck g$lib$7452$bP4ck)))))
   (g$invoke-library-by-spec$7323$bP4ck
     g$invoke-library-by-spec$7518$bP4ck
     (case-lambda
       ((g$spec$7454$bP4ck)
        (g$invoke-library$7321$bP4ck
          (g$find-library-by-spec/die$7316$bP4ck g$spec$7454$bP4ck)))))
   (g$installed-libraries$7324$bP4ck
     g$installed-libraries$7519$bP4ck
     (case-lambda
       ((g$all?$7455$bP4ck)
        ((letrec ((g$f$7456$bP4ck
                    (case-lambda
                      ((g$ls$7457$bP4ck)
                       (if (null? g$ls$7457$bP4ck)
                         '()
                         (if ((case-lambda
                                ((g$t$7458$bP4ck)
                                 (if g$t$7458$bP4ck
                                   g$t$7458$bP4ck
                                   (begin
                                     '#f
                                     (g$library-visible?$7284$bP4ck
                                       (car g$ls$7457$bP4ck))))))
                              g$all?$7455$bP4ck)
                           (cons
                             (car g$ls$7457$bP4ck)
                             (g$f$7456$bP4ck (cdr g$ls$7457$bP4ck)))
                           (g$f$7456$bP4ck (cdr g$ls$7457$bP4ck))))))))
           g$f$7456$bP4ck)
         ((g$current-library-collection$7266$bP4ck))))
       (() (g$installed-libraries$7324$bP4ck '#f))))
   (g$library-spec$7325$bP4ck
     g$library-spec$7520$bP4ck
     (case-lambda
       ((g$x$7459$bP4ck)
        (begin
          (if (not (g$library?$7270$bP4ck g$x$7459$bP4ck))
            (assertion-violation 'library-spec '"not a library" g$x$7459$bP4ck)
            (void))
          (list
            (g$library-id$7272$bP4ck g$x$7459$bP4ck)
            (g$library-name$7273$bP4ck g$x$7459$bP4ck)
            (g$library-version$7274$bP4ck g$x$7459$bP4ck)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7521$bP4ck
     g$build-global-define$7631$bP4ck
     (case-lambda ((g$x$7602$bP4ck) (g$build-void$7598$bP4ck))))
   (g$build-lambda$7570$bP4ck
     g$build-lambda$7632$bP4ck
     (case-lambda
       ((g$ae$7603$bP4ck g$vars$7604$bP4ck g$exp$7605$bP4ck)
        (list 'case-lambda (list g$vars$7604$bP4ck g$exp$7605$bP4ck)))))
   (g$build-case-lambda$7571$bP4ck
     g$build-case-lambda$7633$bP4ck
     (case-lambda
       ((g$ae$7606$bP4ck g$vars*$7607$bP4ck g$exp*$7608$bP4ck)
        (cons
          'case-lambda
          (g$map$5063$bP4ck list g$vars*$7607$bP4ck g$exp*$7608$bP4ck)))))
   (g$build-let$7572$bP4ck
     g$build-let$7634$bP4ck
     (case-lambda
       ((g$ae$7609$bP4ck g$lhs*$7610$bP4ck g$rhs*$7611$bP4ck g$body$7612$bP4ck)
        (cons
          (g$build-lambda$7570$bP4ck
            g$ae$7609$bP4ck
            g$lhs*$7610$bP4ck
            g$body$7612$bP4ck)
          g$rhs*$7611$bP4ck))))
   (g$build-sequence$7597$bP4ck
     g$build-sequence$7635$bP4ck
     (case-lambda
       ((g$ae$7613$bP4ck g$exps$7614$bP4ck)
        ((letrec ((g$loop$7615$bP4ck
                    (case-lambda
                      ((g$exps$7616$bP4ck)
                       (if (null? (cdr g$exps$7616$bP4ck))
                         (car g$exps$7616$bP4ck)
                         (if (equal?
                               (car g$exps$7616$bP4ck)
                               (g$build-void$7598$bP4ck))
                           (g$loop$7615$bP4ck (cdr g$exps$7616$bP4ck))
                           (cons 'begin g$exps$7616$bP4ck)))))))
           g$loop$7615$bP4ck)
         g$exps$7614$bP4ck))))
   (g$build-void$7598$bP4ck
     g$build-void$7636$bP4ck
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7599$bP4ck
     g$build-letrec$7637$bP4ck
     (case-lambda
       ((g$ae$7617$bP4ck
          g$vars$7618$bP4ck
          g$val-exps$7619$bP4ck
          g$body-exp$7620$bP4ck)
        (if (null? g$vars$7618$bP4ck)
          g$body-exp$7620$bP4ck
          (list
            'letrec
            (g$map$5063$bP4ck list g$vars$7618$bP4ck g$val-exps$7619$bP4ck)
            g$body-exp$7620$bP4ck)))))
   (g$build-letrec*$7600$bP4ck
     g$build-letrec*$7638$bP4ck
     (case-lambda
       ((g$ae$7621$bP4ck
          g$vars$7622$bP4ck
          g$val-exps$7623$bP4ck
          g$body-exp$7624$bP4ck)
        (if (null? g$vars$7622$bP4ck)
          g$body-exp$7624$bP4ck
          (list
            'letrec*
            (g$map$5063$bP4ck list g$vars$7622$bP4ck g$val-exps$7623$bP4ck)
            g$body-exp$7624$bP4ck)))))
   (g$build-library-letrec*$7601$bP4ck
     g$build-library-letrec*$7639$bP4ck
     (case-lambda
       ((g$ae$7625$bP4ck
          g$name$7626$bP4ck
          g$vars$7627$bP4ck
          g$locs$7628$bP4ck
          g$val-exps$7629$bP4ck
          g$body-exp$7630$bP4ck)
        (list
          'library-letrec*
          g$name$7626$bP4ck
          (g$map$5063$bP4ck
            list
            g$vars$7627$bP4ck
            g$locs$7628$bP4ck
            g$val-exps$7629$bP4ck)
          g$body-exp$7630$bP4ck)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7640$bP4ck
     g$set-cons$11336$bP4ck
     (case-lambda
       ((g$x$8105$bP4ck g$ls$8106$bP4ck)
        (if (g$memq$5055$bP4ck g$x$8105$bP4ck g$ls$8106$bP4ck)
          g$ls$8106$bP4ck
          (cons g$x$8105$bP4ck g$ls$8106$bP4ck)))))
   (g$set-union$7641$bP4ck
     g$set-union$11337$bP4ck
     (case-lambda
       ((g$ls1$8107$bP4ck g$ls2$8108$bP4ck)
        (if (null? g$ls1$8107$bP4ck)
          g$ls2$8108$bP4ck
          (if (g$memq$5055$bP4ck (car g$ls1$8107$bP4ck) g$ls2$8108$bP4ck)
            (g$set-union$7641$bP4ck (cdr g$ls1$8107$bP4ck) g$ls2$8108$bP4ck)
            (cons
              (car g$ls1$8107$bP4ck)
              (g$set-union$7641$bP4ck
                (cdr g$ls1$8107$bP4ck)
                g$ls2$8108$bP4ck)))))))
   (g$top-mark*$7643$bP4ck g$top-mark*$11338$bP4ck '(top))
   (g$top-marked?$7644$bP4ck
     g$top-marked?$11339$bP4ck
     (case-lambda
       ((g$m*$8109$bP4ck) (g$memq$5055$bP4ck 'top g$m*$8109$bP4ck))))
   (g$gen-lexical$7645$bP4ck
     g$gen-lexical$11340$bP4ck
     (case-lambda
       ((g$sym$8110$bP4ck)
        (if (symbol? g$sym$8110$bP4ck)
          (gensym g$sym$8110$bP4ck)
          (if (g$stx?$7678$bP4ck g$sym$8110$bP4ck)
            (g$gen-lexical$7645$bP4ck (g$id->sym$7707$bP4ck g$sym$8110$bP4ck))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$8110$bP4ck))))))
   (g$gen-global$7646$bP4ck
     g$gen-global$11341$bP4ck
     (case-lambda
       ((g$x$8111$bP4ck) (g$gen-lexical$7645$bP4ck g$x$8111$bP4ck))))
   (g$gen-label$7647$bP4ck
     g$gen-label$11342$bP4ck
     (case-lambda ((g$_$8112$bP4ck) (gensym))))
   (g$gen-top-level-label$7648$bP4ck
     g$gen-top-level-label$11343$bP4ck
     (case-lambda
       ((g$id$8113$bP4ck g$rib$8114$bP4ck)
        (letrec* ((g$find$8115$bP4ck
                    (case-lambda
                      ((g$sym$8121$bP4ck
                         g$mark*$8122$bP4ck
                         g$sym*$8123$bP4ck
                         g$mark**$8124$bP4ck
                         g$label*$8125$bP4ck)
                       (if (pair? g$sym*$8123$bP4ck)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8121$bP4ck
                                        (car g$sym*$8123$bP4ck))
                                 (begin
                                   '#f
                                   (g$same-marks?$7708$bP4ck
                                     g$mark*$8122$bP4ck
                                     (car g$mark**$8124$bP4ck)))
                                 '#f)
                             (car g$label*$8125$bP4ck)
                             (g$find$8115$bP4ck
                               g$sym$8121$bP4ck
                               g$mark*$8122$bP4ck
                               (cdr g$sym*$8123$bP4ck)
                               (cdr g$mark**$8124$bP4ck)
                               (cdr g$label*$8125$bP4ck))))
                         '#f)))))
          ((case-lambda
             ((g$sym$8116$bP4ck g$mark*$8117$bP4ck)
              ((case-lambda
                 ((g$sym*$8118$bP4ck)
                  ((case-lambda
                     ((g$t$8119$bP4ck)
                      (if g$t$8119$bP4ck
                        ((case-lambda
                           ((g$label$8120$bP4ck)
                            (if (g$imported-label->binding$7515$bP4ck
                                  g$label$8120$bP4ck)
                              (gensym)
                              g$label$8120$bP4ck)))
                         g$t$8119$bP4ck)
                        (gensym))))
                   (if (g$memq$5055$bP4ck
                         g$sym$8116$bP4ck
                         (g$rib-sym*$7656$bP4ck g$rib$8114$bP4ck))
                     (begin
                       '#f
                       (g$find$8115$bP4ck
                         g$sym$8116$bP4ck
                         g$mark*$8117$bP4ck
                         g$sym*$8118$bP4ck
                         (g$rib-mark**$7657$bP4ck g$rib$8114$bP4ck)
                         (g$rib-label*$7658$bP4ck g$rib$8114$bP4ck)))
                     '#f))))
               (g$rib-sym*$7656$bP4ck g$rib$8114$bP4ck))))
           (g$id->sym$7707$bP4ck g$id$8113$bP4ck)
           (g$stx-mark*$7681$bP4ck g$id$8113$bP4ck))))))
   (g$gen-define-label+loc$7649$bP4ck
     g$gen-define-label+loc$11344$bP4ck
     (case-lambda
       ((g$id$8126$bP4ck g$rib$8127$bP4ck g$sd?$8128$bP4ck)
        (if g$sd?$8128$bP4ck
          (values (gensym) (g$gen-lexical$7645$bP4ck g$id$8126$bP4ck))
          ((case-lambda
             ((g$env$8129$bP4ck)
              ((case-lambda
                 ((g$label$8130$bP4ck g$locs$8131$bP4ck)
                  (values
                    g$label$8130$bP4ck
                    ((case-lambda
                       ((g$t$8132$bP4ck)
                        (if g$t$8132$bP4ck
                          (cdr g$t$8132$bP4ck)
                          ((case-lambda
                             ((g$loc$8133$bP4ck)
                              (begin
                                (g$set-interaction-env-locs!$8067$bP4ck
                                  g$env$8129$bP4ck
                                  (cons
                                    (cons g$label$8130$bP4ck g$loc$8133$bP4ck)
                                    g$locs$8131$bP4ck))
                                g$loc$8133$bP4ck)))
                           (g$gen-lexical$7645$bP4ck g$id$8126$bP4ck)))))
                     (g$assq$5051$bP4ck
                       g$label$8130$bP4ck
                       g$locs$8131$bP4ck)))))
               (g$gen-top-level-label$7648$bP4ck
                 g$id$8126$bP4ck
                 g$rib$8127$bP4ck)
               (g$interaction-env-locs$8064$bP4ck g$env$8129$bP4ck))))
           (g$top-level-context$8104$bP4ck))))))
   (g$gen-define-label$7650$bP4ck
     g$gen-define-label$11345$bP4ck
     (case-lambda
       ((g$id$8134$bP4ck g$rib$8135$bP4ck g$sd?$8136$bP4ck)
        (if g$sd?$8136$bP4ck
          (gensym)
          (g$gen-top-level-label$7648$bP4ck
            g$id$8134$bP4ck
            g$rib$8135$bP4ck)))))
   (g$8658$7651$bP4ck
     g$8658$11346$bP4ck
     (make-record-type-descriptor
       'rib
       '#f
       'g$8661$bP4ck
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$8660$7652$bP4ck g$8660$11347$bP4ck '#f)
   (g$8659$7653$bP4ck
     g$8659$11348$bP4ck
     (make-record-constructor-descriptor
       g$8658$7651$bP4ck
       '#f
       g$8660$7652$bP4ck))
   (g$rib?$7654$bP4ck
     g$rib?$11349$bP4ck
     (record-predicate g$8658$7651$bP4ck))
   (g$make-rib$7655$bP4ck
     g$make-rib$11350$bP4ck
     (record-constructor g$8659$7653$bP4ck))
   (g$rib-sym*$7656$bP4ck
     g$rib-sym*$11351$bP4ck
     (record-accessor g$8658$7651$bP4ck '0))
   (g$rib-mark**$7657$bP4ck
     g$rib-mark**$11352$bP4ck
     (record-accessor g$8658$7651$bP4ck '1))
   (g$rib-label*$7658$bP4ck
     g$rib-label*$11353$bP4ck
     (record-accessor g$8658$7651$bP4ck '2))
   (g$rib-sealed/freq$7659$bP4ck
     g$rib-sealed/freq$11354$bP4ck
     (record-accessor g$8658$7651$bP4ck '3))
   (g$rib-cache$7660$bP4ck
     g$rib-cache$11355$bP4ck
     (record-accessor g$8658$7651$bP4ck '4))
   (g$set-rib-sym*!$7661$bP4ck
     g$set-rib-sym*!$11356$bP4ck
     (record-mutator g$8658$7651$bP4ck '0))
   (g$set-rib-mark**!$7662$bP4ck
     g$set-rib-mark**!$11357$bP4ck
     (record-mutator g$8658$7651$bP4ck '1))
   (g$set-rib-label*!$7663$bP4ck
     g$set-rib-label*!$11358$bP4ck
     (record-mutator g$8658$7651$bP4ck '2))
   (g$set-rib-sealed/freq!$7664$bP4ck
     g$set-rib-sealed/freq!$11359$bP4ck
     (record-mutator g$8658$7651$bP4ck '3))
   (g$set-rib-cache!$7665$bP4ck
     g$set-rib-cache!$11360$bP4ck
     (record-mutator g$8658$7651$bP4ck '4))
   (g$make-empty-rib$7666$bP4ck
     g$make-empty-rib$11361$bP4ck
     (case-lambda (() (g$make-rib$7655$bP4ck '() '() '() '#f '#f))))
   (g$make-cache-rib$7667$bP4ck
     g$make-cache-rib$11362$bP4ck
     (case-lambda
       (()
        (g$make-rib$7655$bP4ck
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$5538$bP4ck)))))
   (g$find-label$7668$bP4ck
     g$find-label$11363$bP4ck
     (case-lambda
       ((g$rib$8137$bP4ck g$sym$8138$bP4ck g$mark*$8139$bP4ck)
        ((case-lambda
           ((g$ht$8140$bP4ck)
            (if g$ht$8140$bP4ck
              (begin
                '#f
                ((case-lambda
                   ((g$cv$8141$bP4ck)
                    ((case-lambda
                       ((g$t$8142$bP4ck)
                        (if g$t$8142$bP4ck (cdr g$t$8142$bP4ck) '#f)))
                     (if g$cv$8141$bP4ck
                       (begin
                         '#f
                         (g$assp$5054$bP4ck
                           (case-lambda
                             ((g$m$8143$bP4ck)
                              (g$same-marks?$7708$bP4ck
                                g$mark*$8139$bP4ck
                                g$m$8143$bP4ck)))
                           g$cv$8141$bP4ck))
                       '#f))))
                 (g$hashtable-ref$5541$bP4ck
                   g$ht$8140$bP4ck
                   g$sym$8138$bP4ck
                   '#f)))
              '#f)))
         (g$rib-cache$7660$bP4ck g$rib$8137$bP4ck)))))
   (g$extend-rib!$7669$bP4ck
     g$extend-rib!$11364$bP4ck
     (case-lambda
       ((g$rib$8144$bP4ck g$id$8145$bP4ck g$label$8146$bP4ck g$sd?$8147$bP4ck)
        (letrec* ((g$find$8148$bP4ck
                    (case-lambda
                      ((g$sym$8157$bP4ck
                         g$mark*$8158$bP4ck
                         g$sym*$8159$bP4ck
                         g$mark**$8160$bP4ck
                         g$label*$8161$bP4ck)
                       (if (pair? g$sym*$8159$bP4ck)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8157$bP4ck
                                        (car g$sym*$8159$bP4ck))
                                 (begin
                                   '#f
                                   (g$same-marks?$7708$bP4ck
                                     g$mark*$8158$bP4ck
                                     (car g$mark**$8160$bP4ck)))
                                 '#f)
                             g$label*$8161$bP4ck
                             (g$find$8148$bP4ck
                               g$sym$8157$bP4ck
                               g$mark*$8158$bP4ck
                               (cdr g$sym*$8159$bP4ck)
                               (cdr g$mark**$8160$bP4ck)
                               (cdr g$label*$8161$bP4ck))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7659$bP4ck g$rib$8144$bP4ck)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8144$bP4ck)
              (void))
            ((case-lambda
               ((g$sym$8149$bP4ck g$mark*$8150$bP4ck)
                ((case-lambda
                   ((g$sym*$8151$bP4ck)
                    ((case-lambda
                       ((g$t$8152$bP4ck)
                        (if g$t$8152$bP4ck
                          ((case-lambda
                             ((g$p$8153$bP4ck)
                              (if (not (eq? g$label$8146$bP4ck g$p$8153$bP4ck))
                                (g$syntax-violation$8096$bP4ck
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$8145$bP4ck)
                                (void))))
                           g$t$8152$bP4ck)
                          ((case-lambda
                             ((g$t$8154$bP4ck)
                              (if g$t$8154$bP4ck
                                ((case-lambda
                                   ((g$p$8155$bP4ck)
                                    (if (not (eq? g$label$8146$bP4ck
                                                  (car g$p$8155$bP4ck)))
                                      (if (not g$sd?$8147$bP4ck)
                                        (set-car!
                                          g$p$8155$bP4ck
                                          g$label$8146$bP4ck)
                                        (g$syntax-violation$8096$bP4ck
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$8145$bP4ck))
                                      (void))))
                                 g$t$8154$bP4ck)
                                (begin
                                  (if (g$rib-cache$7660$bP4ck g$rib$8144$bP4ck)
                                    (g$hashtable-update!$5545$bP4ck
                                      (g$rib-cache$7660$bP4ck g$rib$8144$bP4ck)
                                      g$sym$8149$bP4ck
                                      (case-lambda
                                        ((g$e$8156$bP4ck)
                                         (cons
                                           (cons
                                             g$mark*$8150$bP4ck
                                             g$label$8146$bP4ck)
                                           g$e$8156$bP4ck)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$7661$bP4ck
                                    g$rib$8144$bP4ck
                                    (cons g$sym$8149$bP4ck g$sym*$8151$bP4ck))
                                  (g$set-rib-mark**!$7662$bP4ck
                                    g$rib$8144$bP4ck
                                    (cons
                                      g$mark*$8150$bP4ck
                                      (g$rib-mark**$7657$bP4ck
                                        g$rib$8144$bP4ck)))
                                  (g$set-rib-label*!$7663$bP4ck
                                    g$rib$8144$bP4ck
                                    (cons
                                      g$label$8146$bP4ck
                                      (g$rib-label*$7658$bP4ck
                                        g$rib$8144$bP4ck)))))))
                           (if (g$memq$5055$bP4ck
                                 g$sym$8149$bP4ck
                                 (g$rib-sym*$7656$bP4ck g$rib$8144$bP4ck))
                             (begin
                               '#f
                               (g$find$8148$bP4ck
                                 g$sym$8149$bP4ck
                                 g$mark*$8150$bP4ck
                                 g$sym*$8151$bP4ck
                                 (g$rib-mark**$7657$bP4ck g$rib$8144$bP4ck)
                                 (g$rib-label*$7658$bP4ck g$rib$8144$bP4ck)))
                             '#f)))))
                     (g$find-label$7668$bP4ck
                       g$rib$8144$bP4ck
                       g$sym$8149$bP4ck
                       g$mark*$8150$bP4ck))))
                 (g$rib-sym*$7656$bP4ck g$rib$8144$bP4ck))))
             (g$id->sym$7707$bP4ck g$id$8145$bP4ck)
             (g$stx-mark*$7681$bP4ck g$id$8145$bP4ck)))))))
   (g$extend-rib/nc!$7670$bP4ck
     g$extend-rib/nc!$11365$bP4ck
     (case-lambda
       ((g$rib$8162$bP4ck g$id$8163$bP4ck g$label$8164$bP4ck)
        ((case-lambda
           ((g$sym$8165$bP4ck g$mark*$8166$bP4ck)
            ((case-lambda
               ((g$sym*$8167$bP4ck)
                (begin
                  (if (g$rib-cache$7660$bP4ck g$rib$8162$bP4ck)
                    (g$hashtable-update!$5545$bP4ck
                      (g$rib-cache$7660$bP4ck g$rib$8162$bP4ck)
                      g$sym$8165$bP4ck
                      (case-lambda
                        ((g$e$8168$bP4ck)
                         (cons
                           (cons g$mark*$8166$bP4ck g$label$8164$bP4ck)
                           g$e$8168$bP4ck)))
                      '())
                    (void))
                  (g$set-rib-sym*!$7661$bP4ck
                    g$rib$8162$bP4ck
                    (cons g$sym$8165$bP4ck g$sym*$8167$bP4ck))
                  (g$set-rib-mark**!$7662$bP4ck
                    g$rib$8162$bP4ck
                    (cons
                      g$mark*$8166$bP4ck
                      (g$rib-mark**$7657$bP4ck g$rib$8162$bP4ck)))
                  (g$set-rib-label*!$7663$bP4ck
                    g$rib$8162$bP4ck
                    (cons
                      g$label$8164$bP4ck
                      (g$rib-label*$7658$bP4ck g$rib$8162$bP4ck))))))
             (g$rib-sym*$7656$bP4ck g$rib$8162$bP4ck))))
         (g$id->sym$7707$bP4ck g$id$8163$bP4ck)
         (g$stx-mark*$7681$bP4ck g$id$8163$bP4ck)))))
   (g$make-rib-map$7671$bP4ck
     g$make-rib-map$11366$bP4ck
     (case-lambda
       ((g$sym*$8169$bP4ck)
        ((case-lambda
           ((g$ht$8170$bP4ck)
            ((letrec ((g$f$8171$bP4ck
                        (case-lambda
                          ((g$i$8172$bP4ck g$sym*$8173$bP4ck)
                           (if (null? g$sym*$8173$bP4ck)
                             g$ht$8170$bP4ck
                             (begin
                               (g$hashtable-update!$5545$bP4ck
                                 g$ht$8170$bP4ck
                                 (car g$sym*$8173$bP4ck)
                                 (case-lambda
                                   ((g$x$8174$bP4ck)
                                    (cons g$i$8172$bP4ck g$x$8174$bP4ck)))
                                 '())
                               (g$f$8171$bP4ck
                                 (+ g$i$8172$bP4ck '1)
                                 (cdr g$sym*$8173$bP4ck))))))))
               g$f$8171$bP4ck)
             '0
             g$sym*$8169$bP4ck)))
         (g$make-eq-hashtable$5538$bP4ck)))))
   (g$seal-rib!$7672$bP4ck
     g$seal-rib!$11367$bP4ck
     (case-lambda
       ((g$rib$8175$bP4ck)
        ((case-lambda
           ((g$sym*$8176$bP4ck)
            (if (not (null? g$sym*$8176$bP4ck))
              (begin
                (g$set-rib-sym*!$7661$bP4ck
                  g$rib$8175$bP4ck
                  (list->vector g$sym*$8176$bP4ck))
                (g$set-rib-mark**!$7662$bP4ck
                  g$rib$8175$bP4ck
                  (list->vector (g$rib-mark**$7657$bP4ck g$rib$8175$bP4ck)))
                (g$set-rib-label*!$7663$bP4ck
                  g$rib$8175$bP4ck
                  (list->vector (g$rib-label*$7658$bP4ck g$rib$8175$bP4ck)))
                (g$set-rib-sealed/freq!$7664$bP4ck
                  g$rib$8175$bP4ck
                  (g$make-rib-map$7671$bP4ck g$sym*$8176$bP4ck)))
              (void))))
         (g$rib-sym*$7656$bP4ck g$rib$8175$bP4ck)))))
   (g$unseal-rib!$7673$bP4ck
     g$unseal-rib!$11368$bP4ck
     (case-lambda
       ((g$rib$8177$bP4ck)
        (if (g$rib-sealed/freq$7659$bP4ck g$rib$8177$bP4ck)
          (begin
            (g$set-rib-sealed/freq!$7664$bP4ck g$rib$8177$bP4ck '#f)
            (g$set-rib-sym*!$7661$bP4ck
              g$rib$8177$bP4ck
              (vector->list (g$rib-sym*$7656$bP4ck g$rib$8177$bP4ck)))
            (g$set-rib-mark**!$7662$bP4ck
              g$rib$8177$bP4ck
              (vector->list (g$rib-mark**$7657$bP4ck g$rib$8177$bP4ck)))
            (g$set-rib-label*!$7663$bP4ck
              g$rib$8177$bP4ck
              (vector->list (g$rib-label*$7658$bP4ck g$rib$8177$bP4ck))))
          (void)))))
   (g$make-full-rib$7674$bP4ck
     g$make-full-rib$11369$bP4ck
     (case-lambda
       ((g$id*$8178$bP4ck g$label*$8179$bP4ck)
        ((case-lambda
           ((g$r$8180$bP4ck)
            (begin (g$seal-rib!$7672$bP4ck g$r$8180$bP4ck) g$r$8180$bP4ck)))
         (g$make-rib$7655$bP4ck
           (g$map$5063$bP4ck g$id->sym$7707$bP4ck g$id*$8178$bP4ck)
           (g$map$5063$bP4ck g$stx-mark*$7681$bP4ck g$id*$8178$bP4ck)
           g$label*$8179$bP4ck
           '#f
           '#f)))))
   (g$8689$7675$bP4ck
     g$8689$11370$bP4ck
     (make-record-type-descriptor
       'stx
       '#f
       'g$8692$bP4ck
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8691$7676$bP4ck g$8691$11371$bP4ck '#f)
   (g$8690$7677$bP4ck
     g$8690$11372$bP4ck
     (make-record-constructor-descriptor
       g$8689$7675$bP4ck
       '#f
       g$8691$7676$bP4ck))
   (g$stx?$7678$bP4ck
     g$stx?$11373$bP4ck
     (record-predicate g$8689$7675$bP4ck))
   (g$make-stx$7679$bP4ck
     g$make-stx$11374$bP4ck
     (record-constructor g$8690$7677$bP4ck))
   (g$stx-expr$7680$bP4ck
     g$stx-expr$11375$bP4ck
     (record-accessor g$8689$7675$bP4ck '0))
   (g$stx-mark*$7681$bP4ck
     g$stx-mark*$11376$bP4ck
     (record-accessor g$8689$7675$bP4ck '1))
   (g$stx-subst*$7682$bP4ck
     g$stx-subst*$11377$bP4ck
     (record-accessor g$8689$7675$bP4ck '2))
   (g$stx-ae*$7683$bP4ck
     g$stx-ae*$11378$bP4ck
     (record-accessor g$8689$7675$bP4ck '3))
   (g$set-stx-expr!$7684$bP4ck
     g$set-stx-expr!$11379$bP4ck
     (record-mutator g$8689$7675$bP4ck '0))
   (g$set-stx-mark*!$7685$bP4ck
     g$set-stx-mark*!$11380$bP4ck
     (record-mutator g$8689$7675$bP4ck '1))
   (g$set-stx-subst*!$7686$bP4ck
     g$set-stx-subst*!$11381$bP4ck
     (record-mutator g$8689$7675$bP4ck '2))
   (g$set-stx-ae*!$7687$bP4ck
     g$set-stx-ae*!$11382$bP4ck
     (record-mutator g$8689$7675$bP4ck '3))
   (g$rp$7688$bP4ck
     g$rp$11383$bP4ck
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8181$bP4ck g$p$8182$bP4ck g$wr$8183$bP4ck)
          (begin
            (display '"#<syntax " g$p$8182$bP4ck)
            (write (g$stx->datum$7717$bP4ck g$x$8181$bP4ck) g$p$8182$bP4ck)
            ((case-lambda
               ((g$expr$8184$bP4ck)
                (if (annotation? g$expr$8184$bP4ck)
                  ((case-lambda
                     ((g$src$8185$bP4ck)
                      (if (pair? g$src$8185$bP4ck)
                        (begin
                          (display '" (" g$p$8182$bP4ck)
                          (display (cdr g$src$8185$bP4ck) g$p$8182$bP4ck)
                          (display '" of " g$p$8182$bP4ck)
                          (display (car g$src$8185$bP4ck) g$p$8182$bP4ck)
                          (display '")" g$p$8182$bP4ck))
                        (void))))
                   (annotation-source g$expr$8184$bP4ck))
                  (void))))
             (g$stx-expr$7680$bP4ck g$x$8181$bP4ck))
            (display '">" g$p$8182$bP4ck))))))
   (g$datum->stx$7689$bP4ck
     g$datum->stx$11384$bP4ck
     (case-lambda
       ((g$id$8186$bP4ck g$datum$8187$bP4ck)
        (g$make-stx$7679$bP4ck
          g$datum$8187$bP4ck
          (g$stx-mark*$7681$bP4ck g$id$8186$bP4ck)
          (g$stx-subst*$7682$bP4ck g$id$8186$bP4ck)
          (g$stx-ae*$7683$bP4ck g$id$8186$bP4ck)))))
   (g$gen-mark$7690$bP4ck
     g$gen-mark$11385$bP4ck
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7691$bP4ck g$anti-mark$11386$bP4ck '#f)
   (g$anti-mark?$7692$bP4ck g$anti-mark?$11387$bP4ck not)
   (g$join-wraps$7693$bP4ck
     g$join-wraps$11388$bP4ck
     (case-lambda
       ((g$m1*$8188$bP4ck g$s1*$8189$bP4ck g$ae1*$8190$bP4ck g$e$8191$bP4ck)
        (letrec* ((g$cancel$8192$bP4ck
                    (case-lambda
                      ((g$ls1$8196$bP4ck g$ls2$8197$bP4ck)
                       ((letrec ((g$f$8198$bP4ck
                                   (case-lambda
                                     ((g$x$8199$bP4ck g$ls1$8200$bP4ck)
                                      (if (null? g$ls1$8200$bP4ck)
                                        (cdr g$ls2$8197$bP4ck)
                                        (cons
                                          g$x$8199$bP4ck
                                          (g$f$8198$bP4ck
                                            (car g$ls1$8200$bP4ck)
                                            (cdr g$ls1$8200$bP4ck))))))))
                          g$f$8198$bP4ck)
                        (car g$ls1$8196$bP4ck)
                        (cdr g$ls1$8196$bP4ck))))))
          ((case-lambda
             ((g$m2*$8193$bP4ck g$s2*$8194$bP4ck g$ae2*$8195$bP4ck)
              (if (if (not (null? g$m1*$8188$bP4ck))
                    (if (not (null? g$m2*$8193$bP4ck))
                      (begin
                        '#f
                        (g$anti-mark?$7692$bP4ck (car g$m2*$8193$bP4ck)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8192$bP4ck g$m1*$8188$bP4ck g$m2*$8193$bP4ck)
                  (g$cancel$8192$bP4ck g$s1*$8189$bP4ck g$s2*$8194$bP4ck)
                  (g$cancel$8192$bP4ck g$ae1*$8190$bP4ck g$ae2*$8195$bP4ck))
                (values
                  (append g$m1*$8188$bP4ck g$m2*$8193$bP4ck)
                  (append g$s1*$8189$bP4ck g$s2*$8194$bP4ck)
                  (append g$ae1*$8190$bP4ck g$ae2*$8195$bP4ck)))))
           (g$stx-mark*$7681$bP4ck g$e$8191$bP4ck)
           (g$stx-subst*$7682$bP4ck g$e$8191$bP4ck)
           (g$stx-ae*$7683$bP4ck g$e$8191$bP4ck))))))
   (g$mkstx$7694$bP4ck
     g$mkstx$11389$bP4ck
     (case-lambda
       ((g$e$8201$bP4ck g$m*$8202$bP4ck g$s*$8203$bP4ck g$ae*$8204$bP4ck)
        (if (if (g$stx?$7678$bP4ck g$e$8201$bP4ck)
              (begin '#f (not (g$top-marked?$7644$bP4ck g$m*$8202$bP4ck)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7693$bP4ck
                 g$m*$8202$bP4ck
                 g$s*$8203$bP4ck
                 g$ae*$8204$bP4ck
                 g$e$8201$bP4ck)))
            (case-lambda
              ((g$m*$8208$bP4ck g$s*$8209$bP4ck g$ae*$8210$bP4ck)
               ((case-lambda
                  ((g$ae*$8211$bP4ck g$s*$8212$bP4ck g$m*$8213$bP4ck)
                   (g$make-stx$7679$bP4ck
                     (g$stx-expr$7680$bP4ck g$e$8201$bP4ck)
                     g$m*$8213$bP4ck
                     g$s*$8212$bP4ck
                     g$ae*$8211$bP4ck)))
                g$ae*$8210$bP4ck
                g$s*$8209$bP4ck
                g$m*$8208$bP4ck))))
          (g$make-stx$7679$bP4ck
            g$e$8201$bP4ck
            g$m*$8202$bP4ck
            g$s*$8203$bP4ck
            g$ae*$8204$bP4ck)))))
   (g$add-mark$7695$bP4ck
     g$add-mark$11390$bP4ck
     (case-lambda
       ((g$m$8214$bP4ck g$e$8215$bP4ck g$ae$8216$bP4ck)
        (g$mkstx$7694$bP4ck
          g$e$8215$bP4ck
          (list g$m$8214$bP4ck)
          '(shift)
          (list g$ae$8216$bP4ck)))))
   (g$add-subst$7696$bP4ck
     g$add-subst$11391$bP4ck
     (case-lambda
       ((g$subst$8217$bP4ck g$e$8218$bP4ck)
        (g$mkstx$7694$bP4ck g$e$8218$bP4ck '() (list g$subst$8217$bP4ck) '()))))
   (g$syntax-kind?$7697$bP4ck
     g$syntax-kind?$11392$bP4ck
     (case-lambda
       ((g$x$8219$bP4ck g$p?$8220$bP4ck)
        (if (g$stx?$7678$bP4ck g$x$8219$bP4ck)
          (g$syntax-kind?$7697$bP4ck
            (g$stx-expr$7680$bP4ck g$x$8219$bP4ck)
            g$p?$8220$bP4ck)
          (if (annotation? g$x$8219$bP4ck)
            (g$syntax-kind?$7697$bP4ck
              (annotation-expression g$x$8219$bP4ck)
              g$p?$8220$bP4ck)
            (g$p?$8220$bP4ck g$x$8219$bP4ck))))))
   (g$syntax-vector->list$7698$bP4ck
     g$syntax-vector->list$11393$bP4ck
     (case-lambda
       ((g$x$8221$bP4ck)
        (if (g$stx?$7678$bP4ck g$x$8221$bP4ck)
          ((case-lambda
             ((g$ls$8222$bP4ck g$m*$8223$bP4ck g$s*$8224$bP4ck g$ae*$8225$bP4ck)
              (g$map$5063$bP4ck
                (case-lambda
                  ((g$x$8226$bP4ck)
                   (g$mkstx$7694$bP4ck
                     g$x$8226$bP4ck
                     g$m*$8223$bP4ck
                     g$s*$8224$bP4ck
                     g$ae*$8225$bP4ck)))
                g$ls$8222$bP4ck)))
           (g$syntax-vector->list$7698$bP4ck
             (g$stx-expr$7680$bP4ck g$x$8221$bP4ck))
           (g$stx-mark*$7681$bP4ck g$x$8221$bP4ck)
           (g$stx-subst*$7682$bP4ck g$x$8221$bP4ck)
           (g$stx-ae*$7683$bP4ck g$x$8221$bP4ck))
          (if (annotation? g$x$8221$bP4ck)
            (g$syntax-vector->list$7698$bP4ck
              (annotation-expression g$x$8221$bP4ck))
            (if (vector? g$x$8221$bP4ck)
              (vector->list g$x$8221$bP4ck)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8221$bP4ck)))))))
   (g$syntax-pair?$7699$bP4ck
     g$syntax-pair?$11394$bP4ck
     (case-lambda
       ((g$x$8227$bP4ck) (g$syntax-kind?$7697$bP4ck g$x$8227$bP4ck pair?))))
   (g$syntax-vector?$7700$bP4ck
     g$syntax-vector?$11395$bP4ck
     (case-lambda
       ((g$x$8228$bP4ck) (g$syntax-kind?$7697$bP4ck g$x$8228$bP4ck vector?))))
   (g$syntax-null?$7701$bP4ck
     g$syntax-null?$11396$bP4ck
     (case-lambda
       ((g$x$8229$bP4ck) (g$syntax-kind?$7697$bP4ck g$x$8229$bP4ck null?))))
   (g$syntax-list?$7702$bP4ck
     g$syntax-list?$11397$bP4ck
     (case-lambda
       ((g$x$8230$bP4ck)
        ((case-lambda
           ((g$t$8231$bP4ck)
            (if g$t$8231$bP4ck
              g$t$8231$bP4ck
              (begin
                '#f
                (if (g$syntax-pair?$7699$bP4ck g$x$8230$bP4ck)
                  (begin
                    '#f
                    (g$syntax-list?$7702$bP4ck
                      (g$syntax-cdr$7704$bP4ck g$x$8230$bP4ck)))
                  '#f)))))
         (g$syntax-null?$7701$bP4ck g$x$8230$bP4ck)))))
   (g$syntax-car$7703$bP4ck
     g$syntax-car$11398$bP4ck
     (case-lambda
       ((g$x$8232$bP4ck)
        (if (g$stx?$7678$bP4ck g$x$8232$bP4ck)
          (g$mkstx$7694$bP4ck
            (g$syntax-car$7703$bP4ck (g$stx-expr$7680$bP4ck g$x$8232$bP4ck))
            (g$stx-mark*$7681$bP4ck g$x$8232$bP4ck)
            (g$stx-subst*$7682$bP4ck g$x$8232$bP4ck)
            (g$stx-ae*$7683$bP4ck g$x$8232$bP4ck))
          (if (annotation? g$x$8232$bP4ck)
            (g$syntax-car$7703$bP4ck (annotation-expression g$x$8232$bP4ck))
            (if (pair? g$x$8232$bP4ck)
              (car g$x$8232$bP4ck)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8232$bP4ck)))))))
   (g$syntax-cdr$7704$bP4ck
     g$syntax-cdr$11399$bP4ck
     (case-lambda
       ((g$x$8233$bP4ck)
        (if (g$stx?$7678$bP4ck g$x$8233$bP4ck)
          (g$mkstx$7694$bP4ck
            (g$syntax-cdr$7704$bP4ck (g$stx-expr$7680$bP4ck g$x$8233$bP4ck))
            (g$stx-mark*$7681$bP4ck g$x$8233$bP4ck)
            (g$stx-subst*$7682$bP4ck g$x$8233$bP4ck)
            (g$stx-ae*$7683$bP4ck g$x$8233$bP4ck))
          (if (annotation? g$x$8233$bP4ck)
            (g$syntax-cdr$7704$bP4ck (annotation-expression g$x$8233$bP4ck))
            (if (pair? g$x$8233$bP4ck)
              (cdr g$x$8233$bP4ck)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8233$bP4ck)))))))
   (g$syntax->list$7705$bP4ck
     g$syntax->list$11400$bP4ck
     (case-lambda
       ((g$x$8234$bP4ck)
        (if (g$syntax-pair?$7699$bP4ck g$x$8234$bP4ck)
          (cons
            (g$syntax-car$7703$bP4ck g$x$8234$bP4ck)
            (g$syntax->list$7705$bP4ck
              (g$syntax-cdr$7704$bP4ck g$x$8234$bP4ck)))
          (if (g$syntax-null?$7701$bP4ck g$x$8234$bP4ck)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8234$bP4ck))))))
   (g$id?$7706$bP4ck
     g$id?$11401$bP4ck
     (case-lambda
       ((g$x$8235$bP4ck)
        (if (g$stx?$7678$bP4ck g$x$8235$bP4ck)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8236$bP4ck)
                (symbol?
                  (if (annotation? g$expr$8236$bP4ck)
                    (annotation-stripped g$expr$8236$bP4ck)
                    g$expr$8236$bP4ck))))
             (g$stx-expr$7680$bP4ck g$x$8235$bP4ck)))
          '#f))))
   (g$id->sym$7707$bP4ck
     g$id->sym$11402$bP4ck
     (case-lambda
       ((g$x$8237$bP4ck)
        (begin
          (if (not (g$stx?$7678$bP4ck g$x$8237$bP4ck))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8237$bP4ck)
            (void))
          ((case-lambda
             ((g$expr$8238$bP4ck)
              ((case-lambda
                 ((g$sym$8239$bP4ck)
                  (if (symbol? g$sym$8239$bP4ck)
                    g$sym$8239$bP4ck
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8237$bP4ck))))
               (if (annotation? g$expr$8238$bP4ck)
                 (annotation-stripped g$expr$8238$bP4ck)
                 g$expr$8238$bP4ck))))
           (g$stx-expr$7680$bP4ck g$x$8237$bP4ck))))))
   (g$same-marks?$7708$bP4ck
     g$same-marks?$11403$bP4ck
     (case-lambda
       ((g$x$8240$bP4ck g$y$8241$bP4ck)
        ((case-lambda
           ((g$t$8242$bP4ck)
            (if g$t$8242$bP4ck
              g$t$8242$bP4ck
              (begin
                '#f
                (if (pair? g$x$8240$bP4ck)
                  (if (pair? g$y$8241$bP4ck)
                    (if (eq? (car g$x$8240$bP4ck) (car g$y$8241$bP4ck))
                      (begin
                        '#f
                        (g$same-marks?$7708$bP4ck
                          (cdr g$x$8240$bP4ck)
                          (cdr g$y$8241$bP4ck)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8240$bP4ck) (begin '#f (null? g$y$8241$bP4ck)) '#f)))))
   (g$bound-id=?$7709$bP4ck
     g$bound-id=?$11404$bP4ck
     (case-lambda
       ((g$x$8243$bP4ck g$y$8244$bP4ck)
        (if (eq? (g$id->sym$7707$bP4ck g$x$8243$bP4ck)
                 (g$id->sym$7707$bP4ck g$y$8244$bP4ck))
          (begin
            '#f
            (g$same-marks?$7708$bP4ck
              (g$stx-mark*$7681$bP4ck g$x$8243$bP4ck)
              (g$stx-mark*$7681$bP4ck g$y$8244$bP4ck)))
          '#f))))
   (g$free-id=?$7710$bP4ck
     g$free-id=?$11405$bP4ck
     (case-lambda
       ((g$i$8245$bP4ck g$j$8246$bP4ck)
        ((case-lambda
           ((g$t0$8247$bP4ck g$t1$8248$bP4ck)
            (if ((case-lambda
                   ((g$t$8249$bP4ck)
                    (if g$t$8249$bP4ck
                      g$t$8249$bP4ck
                      (begin '#f g$t1$8248$bP4ck))))
                 g$t0$8247$bP4ck)
              (eq? g$t0$8247$bP4ck g$t1$8248$bP4ck)
              (eq? (g$id->sym$7707$bP4ck g$i$8245$bP4ck)
                   (g$id->sym$7707$bP4ck g$j$8246$bP4ck)))))
         (g$id->real-label$7720$bP4ck g$i$8245$bP4ck)
         (g$id->real-label$7720$bP4ck g$j$8246$bP4ck)))))
   (g$valid-bound-ids?$7711$bP4ck
     g$valid-bound-ids?$11406$bP4ck
     (case-lambda
       ((g$id*$8250$bP4ck)
        (if (g$for-all$5061$bP4ck g$id?$7706$bP4ck g$id*$8250$bP4ck)
          (begin '#f (g$distinct-bound-ids?$7712$bP4ck g$id*$8250$bP4ck))
          '#f))))
   (g$distinct-bound-ids?$7712$bP4ck
     g$distinct-bound-ids?$11407$bP4ck
     (case-lambda
       ((g$id*$8251$bP4ck)
        ((case-lambda
           ((g$t$8252$bP4ck)
            (if g$t$8252$bP4ck
              g$t$8252$bP4ck
              (begin
                '#f
                (if (not (g$bound-id-member?$7713$bP4ck
                           (car g$id*$8251$bP4ck)
                           (cdr g$id*$8251$bP4ck)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7712$bP4ck (cdr g$id*$8251$bP4ck)))
                  '#f)))))
         (null? g$id*$8251$bP4ck)))))
   (g$bound-id-member?$7713$bP4ck
     g$bound-id-member?$11408$bP4ck
     (case-lambda
       ((g$id$8253$bP4ck g$id*$8254$bP4ck)
        (if (pair? g$id*$8254$bP4ck)
          (begin
            '#f
            ((case-lambda
               ((g$t$8255$bP4ck)
                (if g$t$8255$bP4ck
                  g$t$8255$bP4ck
                  (begin
                    '#f
                    (g$bound-id-member?$7713$bP4ck
                      g$id$8253$bP4ck
                      (cdr g$id*$8254$bP4ck))))))
             (g$bound-id=?$7709$bP4ck g$id$8253$bP4ck (car g$id*$8254$bP4ck))))
          '#f))))
   (g$self-evaluating?$7714$bP4ck
     g$self-evaluating?$11409$bP4ck
     (case-lambda
       ((g$x$8256$bP4ck)
        ((case-lambda
           ((g$t$8257$bP4ck)
            (if g$t$8257$bP4ck
              g$t$8257$bP4ck
              ((case-lambda
                 ((g$t$8258$bP4ck)
                  (if g$t$8258$bP4ck
                    g$t$8258$bP4ck
                    ((case-lambda
                       ((g$t$8259$bP4ck)
                        (if g$t$8259$bP4ck
                          g$t$8259$bP4ck
                          ((case-lambda
                             ((g$t$8260$bP4ck)
                              (if g$t$8260$bP4ck
                                g$t$8260$bP4ck
                                (begin '#f (bytevector? g$x$8256$bP4ck)))))
                           (boolean? g$x$8256$bP4ck)))))
                     (char? g$x$8256$bP4ck)))))
               (string? g$x$8256$bP4ck)))))
         (number? g$x$8256$bP4ck)))))
   (g$strip-annotations$7715$bP4ck
     g$strip-annotations$11410$bP4ck
     (case-lambda
       ((g$x$8261$bP4ck)
        (if (pair? g$x$8261$bP4ck)
          (cons
            (g$strip-annotations$7715$bP4ck (car g$x$8261$bP4ck))
            (g$strip-annotations$7715$bP4ck (cdr g$x$8261$bP4ck)))
          (if (vector? g$x$8261$bP4ck)
            (vector-map g$strip-annotations$7715$bP4ck g$x$8261$bP4ck)
            (if (annotation? g$x$8261$bP4ck)
              (annotation-stripped g$x$8261$bP4ck)
              g$x$8261$bP4ck))))))
   (g$strip$7716$bP4ck
     g$strip$11411$bP4ck
     (case-lambda
       ((g$x$8262$bP4ck g$m*$8263$bP4ck)
        (if (g$top-marked?$7644$bP4ck g$m*$8263$bP4ck)
          (if ((case-lambda
                 ((g$t$8264$bP4ck)
                  (if g$t$8264$bP4ck
                    g$t$8264$bP4ck
                    ((case-lambda
                       ((g$t$8265$bP4ck)
                        (if g$t$8265$bP4ck
                          g$t$8265$bP4ck
                          (begin
                            '#f
                            (if (vector? g$x$8262$bP4ck)
                              (if (> (vector-length g$x$8262$bP4ck) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8262$bP4ck '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8262$bP4ck)
                       (begin '#f (annotation? (car g$x$8262$bP4ck)))
                       '#f)))))
               (annotation? g$x$8262$bP4ck))
            (g$strip-annotations$7715$bP4ck g$x$8262$bP4ck)
            g$x$8262$bP4ck)
          ((letrec ((g$f$8266$bP4ck
                      (case-lambda
                        ((g$x$8267$bP4ck)
                         (if (g$stx?$7678$bP4ck g$x$8267$bP4ck)
                           (g$strip$7716$bP4ck
                             (g$stx-expr$7680$bP4ck g$x$8267$bP4ck)
                             (g$stx-mark*$7681$bP4ck g$x$8267$bP4ck))
                           (if (annotation? g$x$8267$bP4ck)
                             (annotation-stripped g$x$8267$bP4ck)
                             (if (pair? g$x$8267$bP4ck)
                               ((case-lambda
                                  ((g$a$8268$bP4ck g$d$8269$bP4ck)
                                   (if (if (eq? g$a$8268$bP4ck
                                                (car g$x$8267$bP4ck))
                                         (begin
                                           '#f
                                           (eq? g$d$8269$bP4ck
                                                (cdr g$x$8267$bP4ck)))
                                         '#f)
                                     g$x$8267$bP4ck
                                     (cons g$a$8268$bP4ck g$d$8269$bP4ck))))
                                (g$f$8266$bP4ck (car g$x$8267$bP4ck))
                                (g$f$8266$bP4ck (cdr g$x$8267$bP4ck)))
                               (if (vector? g$x$8267$bP4ck)
                                 ((case-lambda
                                    ((g$old$8270$bP4ck)
                                     ((case-lambda
                                        ((g$new$8271$bP4ck)
                                         (if (g$for-all$5061$bP4ck
                                               eq?
                                               g$old$8270$bP4ck
                                               g$new$8271$bP4ck)
                                           g$x$8267$bP4ck
                                           (list->vector g$new$8271$bP4ck))))
                                      (g$map$5063$bP4ck
                                        g$f$8266$bP4ck
                                        g$old$8270$bP4ck))))
                                  (vector->list g$x$8267$bP4ck))
                                 g$x$8267$bP4ck))))))))
             g$f$8266$bP4ck)
           g$x$8262$bP4ck)))))
   (g$stx->datum$7717$bP4ck
     g$stx->datum$11412$bP4ck
     (case-lambda
       ((g$x$8272$bP4ck) (g$strip$7716$bP4ck g$x$8272$bP4ck '()))))
   (g$same-marks*?$7718$bP4ck
     g$same-marks*?$11413$bP4ck
     (case-lambda
       ((g$mark*$8273$bP4ck g$mark**$8274$bP4ck g$si$8275$bP4ck)
        (if (null? g$si$8275$bP4ck)
          '#f
          (if (g$same-marks?$7708$bP4ck
                g$mark*$8273$bP4ck
                (vector-ref g$mark**$8274$bP4ck (car g$si$8275$bP4ck)))
            (car g$si$8275$bP4ck)
            (g$same-marks*?$7718$bP4ck
              g$mark*$8273$bP4ck
              g$mark**$8274$bP4ck
              (cdr g$si$8275$bP4ck)))))))
   (g$id->label$7719$bP4ck
     g$id->label$11414$bP4ck
     (case-lambda
       ((g$id$8276$bP4ck)
        ((case-lambda
           ((g$t$8277$bP4ck)
            (if g$t$8277$bP4ck
              g$t$8277$bP4ck
              (begin
                '#f
                ((case-lambda
                   ((g$t$8278$bP4ck)
                    (if g$t$8278$bP4ck
                      ((case-lambda
                         ((g$env$8279$bP4ck)
                          ((case-lambda
                             ((g$rib$8280$bP4ck)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7649$bP4ck
                                     g$id$8276$bP4ck
                                     g$rib$8280$bP4ck
                                     '#f)))
                                (case-lambda
                                  ((g$lab$8283$bP4ck g$_loc$8284$bP4ck)
                                   ((case-lambda
                                      ((g$_loc$8285$bP4ck g$lab$8286$bP4ck)
                                       (begin
                                         (g$extend-rib!$7669$bP4ck
                                           g$rib$8280$bP4ck
                                           g$id$8276$bP4ck
                                           g$lab$8286$bP4ck
                                           '#t)
                                         g$lab$8286$bP4ck)))
                                    g$_loc$8284$bP4ck
                                    g$lab$8283$bP4ck))))))
                           (g$interaction-env-rib$8062$bP4ck
                             g$env$8279$bP4ck))))
                       g$t$8278$bP4ck)
                      '#f)))
                 (g$top-level-context$8104$bP4ck))))))
         (g$id->real-label$7720$bP4ck g$id$8276$bP4ck)))))
   (g$id->real-label$7720$bP4ck
     g$id->real-label$11415$bP4ck
     (case-lambda
       ((g$id$8287$bP4ck)
        ((case-lambda
           ((g$sym$8288$bP4ck)
            ((letrec ((g$search$8289$bP4ck
                        (case-lambda
                          ((g$subst*$8290$bP4ck g$mark*$8291$bP4ck)
                           (if (null? g$subst*$8290$bP4ck)
                             '#f
                             (if (eq? (car g$subst*$8290$bP4ck) 'shift)
                               (g$search$8289$bP4ck
                                 (cdr g$subst*$8290$bP4ck)
                                 (cdr g$mark*$8291$bP4ck))
                               ((case-lambda
                                  ((g$rib$8292$bP4ck)
                                   ((case-lambda
                                      ((g$t$8293$bP4ck)
                                       (if g$t$8293$bP4ck
                                         ((case-lambda
                                            ((g$ht$8294$bP4ck)
                                             ((case-lambda
                                                ((g$si$8295$bP4ck)
                                                 ((case-lambda
                                                    ((g$i$8296$bP4ck)
                                                     (if g$i$8296$bP4ck
                                                       (vector-ref
                                                         (g$rib-label*$7658$bP4ck
                                                           g$rib$8292$bP4ck)
                                                         g$i$8296$bP4ck)
                                                       (g$search$8289$bP4ck
                                                         (cdr g$subst*$8290$bP4ck)
                                                         g$mark*$8291$bP4ck))))
                                                  (if g$si$8295$bP4ck
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7718$bP4ck
                                                        g$mark*$8291$bP4ck
                                                        (g$rib-mark**$7657$bP4ck
                                                          g$rib$8292$bP4ck)
                                                        (reverse
                                                          g$si$8295$bP4ck)))
                                                    '#f))))
                                              (g$hashtable-ref$5541$bP4ck
                                                g$ht$8294$bP4ck
                                                g$sym$8288$bP4ck
                                                '#f))))
                                          g$t$8293$bP4ck)
                                         ((case-lambda
                                            ((g$t$8297$bP4ck)
                                             (if g$t$8297$bP4ck
                                               g$t$8297$bP4ck
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$8298$bP4ck
                                                             (case-lambda
                                                               ((g$sym*$8299$bP4ck
                                                                  g$mark**$8300$bP4ck
                                                                  g$label*$8301$bP4ck)
                                                                (if (null?
                                                                      g$sym*$8299$bP4ck)
                                                                  (g$search$8289$bP4ck
                                                                    (cdr g$subst*$8290$bP4ck)
                                                                    g$mark*$8291$bP4ck)
                                                                  (if (if (eq? (car g$sym*$8299$bP4ck)
                                                                               g$sym$8288$bP4ck)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$7708$bP4ck
                                                                            (car g$mark**$8300$bP4ck)
                                                                            g$mark*$8291$bP4ck))
                                                                        '#f)
                                                                    (car g$label*$8301$bP4ck)
                                                                    (g$f$8298$bP4ck
                                                                      (cdr g$sym*$8299$bP4ck)
                                                                      (cdr g$mark**$8300$bP4ck)
                                                                      (cdr g$label*$8301$bP4ck))))))))
                                                    g$f$8298$bP4ck)
                                                  (g$rib-sym*$7656$bP4ck
                                                    g$rib$8292$bP4ck)
                                                  (g$rib-mark**$7657$bP4ck
                                                    g$rib$8292$bP4ck)
                                                  (g$rib-label*$7658$bP4ck
                                                    g$rib$8292$bP4ck))))))
                                          (g$find-label$7668$bP4ck
                                            g$rib$8292$bP4ck
                                            g$sym$8288$bP4ck
                                            g$mark*$8291$bP4ck)))))
                                    (g$rib-sealed/freq$7659$bP4ck
                                      g$rib$8292$bP4ck))))
                                (car g$subst*$8290$bP4ck))))))))
               g$search$8289$bP4ck)
             (g$stx-subst*$7682$bP4ck g$id$8287$bP4ck)
             (g$stx-mark*$7681$bP4ck g$id$8287$bP4ck))))
         (g$id->sym$7707$bP4ck g$id$8287$bP4ck)))))
   (g$label->binding$7721$bP4ck
     g$label->binding$11416$bP4ck
     (case-lambda
       ((g$x$8302$bP4ck g$r$8303$bP4ck)
        ((case-lambda
           ((g$t$8304$bP4ck)
            (if g$t$8304$bP4ck
              ((case-lambda
                 ((g$b$8305$bP4ck)
                  (if (if (pair? g$b$8305$bP4ck)
                        (begin '#f (eq? (car g$b$8305$bP4ck) '$core-rtd))
                        '#f)
                    (cons
                      '$rtd
                      (g$map$5063$bP4ck
                        g$bless$7947$bP4ck
                        (cdr g$b$8305$bP4ck)))
                    (if (if (pair? g$b$8305$bP4ck)
                          (begin '#f (eq? (car g$b$8305$bP4ck) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$8306$bP4ck g$loc$8307$bP4ck)
                          (cons '$rtd (symbol-value g$loc$8307$bP4ck))))
                       (g$cadr$5264$bP4ck g$b$8305$bP4ck)
                       (g$cddr$5266$bP4ck g$b$8305$bP4ck))
                      g$b$8305$bP4ck))))
               g$t$8304$bP4ck)
              ((case-lambda
                 ((g$t$8308$bP4ck)
                  (if g$t$8308$bP4ck
                    (cdr g$t$8308$bP4ck)
                    ((case-lambda
                       ((g$t$8309$bP4ck)
                        (if g$t$8309$bP4ck
                          ((case-lambda
                             ((g$env$8310$bP4ck)
                              ((case-lambda
                                 ((g$t$8311$bP4ck)
                                  (if g$t$8311$bP4ck
                                    ((case-lambda
                                       ((g$p$8312$bP4ck)
                                        (g$cons*$5065$bP4ck
                                          'lexical
                                          (cdr g$p$8312$bP4ck)
                                          '#f)))
                                     g$t$8311$bP4ck)
                                    '(displaced-lexical . #f))))
                               (g$assq$5051$bP4ck
                                 g$x$8302$bP4ck
                                 (g$interaction-env-locs$8064$bP4ck
                                   g$env$8310$bP4ck)))))
                           g$t$8309$bP4ck)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$8104$bP4ck)))))
               (g$assq$5051$bP4ck g$x$8302$bP4ck g$r$8303$bP4ck)))))
         (g$imported-label->binding$7515$bP4ck g$x$8302$bP4ck)))))
   (g$make-binding$7722$bP4ck g$make-binding$11417$bP4ck cons)
   (g$binding-type$7723$bP4ck g$binding-type$11418$bP4ck car)
   (g$binding-value$7724$bP4ck g$binding-value$11419$bP4ck cdr)
   (g$raise-unbound-error$7725$bP4ck
     g$raise-unbound-error$11420$bP4ck
     (case-lambda
       ((g$id$8313$bP4ck)
        (g$syntax-violation*$8095$bP4ck
          '#f
          '"unbound identifier"
          g$id$8313$bP4ck
          (g$make-undefined-violation$5887$bP4ck)))))
   (g$syntax-type$7726$bP4ck
     g$syntax-type$11421$bP4ck
     (case-lambda
       ((g$e$8314$bP4ck g$r$8315$bP4ck)
        (if (g$id?$7706$bP4ck g$e$8314$bP4ck)
          ((case-lambda
             ((g$id$8316$bP4ck)
              ((case-lambda
                 ((g$label$8317$bP4ck)
                  ((case-lambda
                     ((g$b$8318$bP4ck)
                      ((case-lambda
                         ((g$type$8319$bP4ck)
                          (begin
                            (if (not g$label$8317$bP4ck)
                              (g$raise-unbound-error$7725$bP4ck g$id$8316$bP4ck)
                              (void))
                            ((case-lambda
                               ((g$t$8320$bP4ck)
                                (if (g$memv$5056$bP4ck
                                      g$t$8320$bP4ck
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable))
                                  (values
                                    g$type$8319$bP4ck
                                    (g$binding-value$7724$bP4ck g$b$8318$bP4ck)
                                    g$id$8316$bP4ck)
                                  (values 'other '#f '#f))))
                             g$type$8319$bP4ck))))
                       (g$binding-type$7723$bP4ck g$b$8318$bP4ck))))
                   (g$label->binding$7721$bP4ck
                     g$label$8317$bP4ck
                     g$r$8315$bP4ck))))
               (g$id->label$7719$bP4ck g$id$8316$bP4ck))))
           g$e$8314$bP4ck)
          (if (g$syntax-pair?$7699$bP4ck g$e$8314$bP4ck)
            ((case-lambda
               ((g$id$8321$bP4ck)
                (if (g$id?$7706$bP4ck g$id$8321$bP4ck)
                  ((case-lambda
                     ((g$label$8322$bP4ck)
                      ((case-lambda
                         ((g$b$8323$bP4ck)
                          ((case-lambda
                             ((g$type$8324$bP4ck)
                              (begin
                                (if (not g$label$8322$bP4ck)
                                  (g$raise-unbound-error$7725$bP4ck
                                    g$id$8321$bP4ck)
                                  (void))
                                ((case-lambda
                                   ((g$t$8325$bP4ck)
                                    (if (g$memv$5056$bP4ck
                                          g$t$8325$bP4ck
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd))
                                      (values
                                        g$type$8324$bP4ck
                                        (g$binding-value$7724$bP4ck
                                          g$b$8323$bP4ck)
                                        g$id$8321$bP4ck)
                                      (values 'call '#f '#f))))
                                 g$type$8324$bP4ck))))
                           (g$binding-type$7723$bP4ck g$b$8323$bP4ck))))
                       (g$label->binding$7721$bP4ck
                         g$label$8322$bP4ck
                         g$r$8315$bP4ck))))
                   (g$id->label$7719$bP4ck g$id$8321$bP4ck))
                  (values 'call '#f '#f))))
             (g$syntax-car$7703$bP4ck g$e$8314$bP4ck))
            ((case-lambda
               ((g$d$8326$bP4ck)
                (if (g$self-evaluating?$7714$bP4ck g$d$8326$bP4ck)
                  (values 'constant g$d$8326$bP4ck '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7717$bP4ck g$e$8314$bP4ck)))))))
   (g$sanitize-binding$7734$bP4ck
     g$sanitize-binding$11422$bP4ck
     (case-lambda
       ((g$x$8327$bP4ck g$src$8328$bP4ck)
        (if (procedure? g$x$8327$bP4ck)
          (g$cons*$5065$bP4ck 'local-macro g$x$8327$bP4ck g$src$8328$bP4ck)
          (if (if (pair? g$x$8327$bP4ck)
                (if (eq? (car g$x$8327$bP4ck) 'macro!)
                  (begin '#f (procedure? (cdr g$x$8327$bP4ck)))
                  '#f)
                '#f)
            (g$cons*$5065$bP4ck
              'local-macro!
              (cdr g$x$8327$bP4ck)
              g$src$8328$bP4ck)
            (if (if (pair? g$x$8327$bP4ck)
                  (begin '#f (eq? (car g$x$8327$bP4ck) '$rtd))
                  '#f)
              g$x$8327$bP4ck
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$8327$bP4ck)))))))
   (g$make-variable-transformer$7735$bP4ck
     g$make-variable-transformer$11423$bP4ck
     (case-lambda
       ((g$x$8329$bP4ck)
        (if (procedure? g$x$8329$bP4ck)
          (cons 'macro! g$x$8329$bP4ck)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8329$bP4ck)))))
   (g$variable-transformer?$7736$bP4ck
     g$variable-transformer?$11424$bP4ck
     (case-lambda
       ((g$x$8330$bP4ck)
        (if (pair? g$x$8330$bP4ck)
          (if (eq? (car g$x$8330$bP4ck) 'macro!)
            (begin '#f (procedure? (cdr g$x$8330$bP4ck)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7737$bP4ck
     g$variable-transformer-procedure$11425$bP4ck
     (case-lambda
       ((g$x$8331$bP4ck)
        (if (g$variable-transformer?$7736$bP4ck g$x$8331$bP4ck)
          (cdr g$x$8331$bP4ck)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8331$bP4ck)))))
   (g$make-eval-transformer$7738$bP4ck
     g$make-eval-transformer$11426$bP4ck
     (case-lambda
       ((g$x$8332$bP4ck)
        (g$sanitize-binding$7734$bP4ck
          (eval-core (g$expanded->core$7224$bP4ck g$x$8332$bP4ck))
          g$x$8332$bP4ck))))
   (g$parse-define$7924$bP4ck
     g$parse-define$11427$bP4ck
     (case-lambda
       ((g$x$8333$bP4ck)
        ((case-lambda
           ((g$t$8334$bP4ck)
            ((case-lambda
               ((g$ls/false$8335$bP4ck)
                (if (if g$ls/false$8335$bP4ck
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8336$bP4ck
                               g$fmls$8337$bP4ck
                               g$b$8338$bP4ck
                               g$b*$8339$bP4ck)
                             (g$id?$7706$bP4ck g$id$8336$bP4ck)))
                          g$ls/false$8335$bP4ck))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8340$bP4ck
                         g$fmls$8341$bP4ck
                         g$b$8342$bP4ck
                         g$b*$8343$bP4ck)
                       (begin
                         (g$verify-formals$8004$bP4ck
                           g$fmls$8341$bP4ck
                           g$x$8333$bP4ck)
                         (values
                           g$id$8340$bP4ck
                           (cons
                             'defun
                             (cons
                               g$fmls$8341$bP4ck
                               (cons g$b$8342$bP4ck g$b*$8343$bP4ck)))))))
                    g$ls/false$8335$bP4ck)
                  ((case-lambda
                     ((g$t$8344$bP4ck)
                      ((case-lambda
                         ((g$ls/false$8345$bP4ck)
                          (if (if g$ls/false$8345$bP4ck
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8346$bP4ck g$val$8347$bP4ck)
                                       (g$id?$7706$bP4ck g$id$8346$bP4ck)))
                                    g$ls/false$8345$bP4ck))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8348$bP4ck g$val$8349$bP4ck)
                                 (values
                                   g$id$8348$bP4ck
                                   (cons 'expr g$val$8349$bP4ck))))
                              g$ls/false$8345$bP4ck)
                            ((case-lambda
                               ((g$t$8350$bP4ck)
                                ((case-lambda
                                   ((g$ls/false$8351$bP4ck)
                                    (if (if g$ls/false$8351$bP4ck
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8352$bP4ck)
                                                 (g$id?$7706$bP4ck
                                                   g$id$8352$bP4ck)))
                                              g$ls/false$8351$bP4ck))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8353$bP4ck)
                                           (values
                                             g$id$8353$bP4ck
                                             (cons
                                               'expr
                                               (g$bless$7947$bP4ck '(void))))))
                                        g$ls/false$8351$bP4ck)
                                      (g$syntax-violation$8096$bP4ck
                                        '#f
                                        '"invalid syntax"
                                        g$t$8350$bP4ck))))
                                 (g$syntax-dispatch$7984$bP4ck
                                   g$t$8350$bP4ck
                                   '(_ any)))))
                             g$t$8344$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$8344$bP4ck
                         '(_ any any)))))
                   g$t$8334$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8334$bP4ck
               '(_ (any . any) any . each-any)))))
         g$x$8333$bP4ck))))
   (g$parse-define-syntax$7925$bP4ck
     g$parse-define-syntax$11428$bP4ck
     (case-lambda
       ((g$x$8354$bP4ck)
        ((case-lambda
           ((g$t$8355$bP4ck)
            ((case-lambda
               ((g$ls/false$8356$bP4ck)
                (if (if g$ls/false$8356$bP4ck
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8357$bP4ck g$val$8358$bP4ck)
                             (g$id?$7706$bP4ck g$id$8357$bP4ck)))
                          g$ls/false$8356$bP4ck))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8359$bP4ck g$val$8360$bP4ck)
                       (values g$id$8359$bP4ck g$val$8360$bP4ck)))
                    g$ls/false$8356$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8355$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8355$bP4ck '(_ any any)))))
         g$x$8354$bP4ck))))
   (g$scheme-stx-hashtable$7926$bP4ck
     g$scheme-stx-hashtable$11429$bP4ck
     (g$make-eq-hashtable$5538$bP4ck))
   (g$scheme-stx$7927$bP4ck
     g$scheme-stx$11430$bP4ck
     (case-lambda
       ((g$sym$8361$bP4ck)
        ((case-lambda
           ((g$t$8362$bP4ck)
            (if g$t$8362$bP4ck
              g$t$8362$bP4ck
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8363$bP4ck)
                    ((case-lambda
                       ((g$stx$8364$bP4ck)
                        ((case-lambda
                           ((g$stx$8365$bP4ck)
                            (begin
                              (g$hashtable-set!$5542$bP4ck
                                g$scheme-stx-hashtable$7926$bP4ck
                                g$sym$8361$bP4ck
                                g$stx$8365$bP4ck)
                              g$stx$8365$bP4ck)))
                         ((case-lambda
                            ((g$t$8366$bP4ck)
                             (if g$t$8366$bP4ck
                               ((case-lambda
                                  ((g$x$8367$bP4ck)
                                   ((case-lambda
                                      ((g$name$8368$bP4ck g$label$8369$bP4ck)
                                       (g$add-subst$7696$bP4ck
                                         (g$make-rib$7655$bP4ck
                                           (list g$name$8368$bP4ck)
                                           (list g$top-mark*$7643$bP4ck)
                                           (list g$label$8369$bP4ck)
                                           '#f
                                           '#f)
                                         g$stx$8364$bP4ck)))
                                    (car g$x$8367$bP4ck)
                                    (cdr g$x$8367$bP4ck))))
                                g$t$8366$bP4ck)
                               g$stx$8364$bP4ck)))
                          (g$assq$5051$bP4ck
                            g$sym$8361$bP4ck
                            g$subst$8363$bP4ck)))))
                     (g$make-stx$7679$bP4ck
                       g$sym$8361$bP4ck
                       g$top-mark*$7643$bP4ck
                       '()
                       '()))))
                 (g$library-subst$7473$bP4ck
                   (g$find-library-by-name$7509$bP4ck
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5541$bP4ck
           g$scheme-stx-hashtable$7926$bP4ck
           g$sym$8361$bP4ck
           '#f)))))
   (g$lexical-var$7928$bP4ck g$lexical-var$11431$bP4ck car)
   (g$lexical-mutable?$7929$bP4ck g$lexical-mutable?$11432$bP4ck cdr)
   (g$set-lexical-mutable!$7930$bP4ck
     g$set-lexical-mutable!$11433$bP4ck
     set-cdr!)
   (g$add-lexical$7931$bP4ck
     g$add-lexical$11434$bP4ck
     (case-lambda
       ((g$lab$8370$bP4ck g$lex$8371$bP4ck g$r$8372$bP4ck)
        (cons
          (g$cons*$5065$bP4ck g$lab$8370$bP4ck 'lexical g$lex$8371$bP4ck '#f)
          g$r$8372$bP4ck))))
   (g$add-lexicals$7932$bP4ck
     g$add-lexicals$11435$bP4ck
     (case-lambda
       ((g$lab*$8373$bP4ck g$lex*$8374$bP4ck g$r$8375$bP4ck)
        (if (null? g$lab*$8373$bP4ck)
          g$r$8375$bP4ck
          (g$add-lexicals$7932$bP4ck
            (cdr g$lab*$8373$bP4ck)
            (cdr g$lex*$8374$bP4ck)
            (g$add-lexical$7931$bP4ck
              (car g$lab*$8373$bP4ck)
              (car g$lex*$8374$bP4ck)
              g$r$8375$bP4ck))))))
   (g$letrec-helper$7933$bP4ck
     g$letrec-helper$11436$bP4ck
     (case-lambda
       ((g$e$8376$bP4ck g$r$8377$bP4ck g$mr$8378$bP4ck g$build$8379$bP4ck)
        ((case-lambda
           ((g$t$8380$bP4ck)
            ((case-lambda
               ((g$ls/false$8381$bP4ck)
                (if g$ls/false$8381$bP4ck
                  (apply
                    (case-lambda
                      ((g$lhs*$8382$bP4ck
                         g$rhs*$8383$bP4ck
                         g$b$8384$bP4ck
                         g$b*$8385$bP4ck)
                       (if (not (g$valid-bound-ids?$7711$bP4ck
                                  g$lhs*$8382$bP4ck))
                         (g$invalid-fmls-error$7949$bP4ck
                           g$e$8376$bP4ck
                           g$lhs*$8382$bP4ck)
                         ((case-lambda
                            ((g$lex*$8386$bP4ck g$lab*$8387$bP4ck)
                             ((case-lambda
                                ((g$rib$8388$bP4ck g$r$8389$bP4ck)
                                 ((case-lambda
                                    ((g$body$8390$bP4ck g$rhs*$8391$bP4ck)
                                     (g$build$8379$bP4ck
                                       '#f
                                       g$lex*$8386$bP4ck
                                       g$rhs*$8391$bP4ck
                                       g$body$8390$bP4ck)))
                                  (g$chi-internal$8013$bP4ck
                                    (g$add-subst$7696$bP4ck
                                      g$rib$8388$bP4ck
                                      (cons g$b$8384$bP4ck g$b*$8385$bP4ck))
                                    g$r$8389$bP4ck
                                    g$mr$8378$bP4ck)
                                  (g$chi-expr*$8000$bP4ck
                                    (g$map$5063$bP4ck
                                      (case-lambda
                                        ((g$x$8392$bP4ck)
                                         (g$add-subst$7696$bP4ck
                                           g$rib$8388$bP4ck
                                           g$x$8392$bP4ck)))
                                      g$rhs*$8383$bP4ck)
                                    g$r$8389$bP4ck
                                    g$mr$8378$bP4ck))))
                              (g$make-full-rib$7674$bP4ck
                                g$lhs*$8382$bP4ck
                                g$lab*$8387$bP4ck)
                              (g$add-lexicals$7932$bP4ck
                                g$lab*$8387$bP4ck
                                g$lex*$8386$bP4ck
                                g$r$8377$bP4ck))))
                          (g$map$5063$bP4ck
                            g$gen-lexical$7645$bP4ck
                            g$lhs*$8382$bP4ck)
                          (g$map$5063$bP4ck
                            g$gen-label$7647$bP4ck
                            g$lhs*$8382$bP4ck)))))
                    g$ls/false$8381$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8380$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8380$bP4ck
               '(_ #(each (any any)) any . each-any)))))
         g$e$8376$bP4ck))))
   (g$letrec-transformer$7934$bP4ck
     g$letrec-transformer$11437$bP4ck
     (case-lambda
       ((g$e$8393$bP4ck g$r$8394$bP4ck g$mr$8395$bP4ck)
        (g$letrec-helper$7933$bP4ck
          g$e$8393$bP4ck
          g$r$8394$bP4ck
          g$mr$8395$bP4ck
          g$build-letrec$7637$bP4ck))))
   (g$letrec*-transformer$7935$bP4ck
     g$letrec*-transformer$11438$bP4ck
     (case-lambda
       ((g$e$8396$bP4ck g$r$8397$bP4ck g$mr$8398$bP4ck)
        (g$letrec-helper$7933$bP4ck
          g$e$8396$bP4ck
          g$r$8397$bP4ck
          g$mr$8398$bP4ck
          g$build-letrec*$7638$bP4ck))))
   (g$fluid-let-syntax-transformer$7936$bP4ck
     g$fluid-let-syntax-transformer$11439$bP4ck
     (case-lambda
       ((g$e$8399$bP4ck g$r$8400$bP4ck g$mr$8401$bP4ck)
        (letrec* ((g$lookup$8402$bP4ck
                    (case-lambda
                      ((g$x$8412$bP4ck)
                       ((case-lambda
                          ((g$t$8413$bP4ck)
                           (if g$t$8413$bP4ck
                             g$t$8413$bP4ck
                             (begin
                               '#f
                               (g$syntax-violation$8096$bP4ck
                                 '#f
                                 '"unbound identifier"
                                 g$e$8399$bP4ck
                                 g$x$8412$bP4ck)))))
                        (g$id->label$7719$bP4ck g$x$8412$bP4ck))))))
          ((case-lambda
             ((g$t$8403$bP4ck)
              ((case-lambda
                 ((g$ls/false$8404$bP4ck)
                  (if g$ls/false$8404$bP4ck
                    (apply
                      (case-lambda
                        ((g$lhs*$8405$bP4ck
                           g$rhs*$8406$bP4ck
                           g$b$8407$bP4ck
                           g$b*$8408$bP4ck)
                         (if (not (g$valid-bound-ids?$7711$bP4ck
                                    g$lhs*$8405$bP4ck))
                           (g$invalid-fmls-error$7949$bP4ck
                             g$e$8399$bP4ck
                             g$lhs*$8405$bP4ck)
                           ((case-lambda
                              ((g$lab*$8409$bP4ck g$rhs*$8410$bP4ck)
                               (g$chi-internal$8013$bP4ck
                                 (cons g$b$8407$bP4ck g$b*$8408$bP4ck)
                                 (append
                                   (g$map$5063$bP4ck
                                     cons
                                     g$lab*$8409$bP4ck
                                     g$rhs*$8410$bP4ck)
                                   g$r$8400$bP4ck)
                                 (append
                                   (g$map$5063$bP4ck
                                     cons
                                     g$lab*$8409$bP4ck
                                     g$rhs*$8410$bP4ck)
                                   g$mr$8401$bP4ck))))
                            (g$map$5063$bP4ck
                              g$lookup$8402$bP4ck
                              g$lhs*$8405$bP4ck)
                            (g$map$5063$bP4ck
                              (case-lambda
                                ((g$x$8411$bP4ck)
                                 (g$make-eval-transformer$7738$bP4ck
                                   (g$expand-transformer$8029$bP4ck
                                     g$x$8411$bP4ck
                                     g$mr$8401$bP4ck))))
                              g$rhs*$8406$bP4ck)))))
                      g$ls/false$8404$bP4ck)
                    (g$syntax-violation$8096$bP4ck
                      '#f
                      '"invalid syntax"
                      g$t$8403$bP4ck))))
               (g$syntax-dispatch$7984$bP4ck
                 g$t$8403$bP4ck
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8399$bP4ck)))))
   (g$type-descriptor-transformer$7937$bP4ck
     g$type-descriptor-transformer$11440$bP4ck
     (case-lambda
       ((g$e$8414$bP4ck g$r$8415$bP4ck g$mr$8416$bP4ck)
        ((case-lambda
           ((g$t$8417$bP4ck)
            ((case-lambda
               ((g$ls/false$8418$bP4ck)
                (if (if g$ls/false$8418$bP4ck
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8419$bP4ck)
                             (g$id?$7706$bP4ck g$id$8419$bP4ck)))
                          g$ls/false$8418$bP4ck))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8420$bP4ck)
                       ((case-lambda
                          ((g$lab$8421$bP4ck)
                           ((case-lambda
                              ((g$b$8422$bP4ck)
                               ((case-lambda
                                  ((g$type$8423$bP4ck)
                                   (begin
                                     (if (not g$lab$8421$bP4ck)
                                       (g$raise-unbound-error$7725$bP4ck
                                         g$id$8420$bP4ck)
                                       (void))
                                     (if (not (if (eq? g$type$8423$bP4ck '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$7724$bP4ck
                                                           g$b$8422$bP4ck))))
                                                '#f))
                                       (g$syntax-violation$8096$bP4ck
                                         '#f
                                         '"not a record type"
                                         g$e$8414$bP4ck)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$7724$bP4ck
                                         g$b$8422$bP4ck)))))
                                (g$binding-type$7723$bP4ck g$b$8422$bP4ck))))
                            (g$label->binding$7721$bP4ck
                              g$lab$8421$bP4ck
                              g$r$8415$bP4ck))))
                        (g$id->label$7719$bP4ck g$id$8420$bP4ck))))
                    g$ls/false$8418$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8417$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8417$bP4ck '(_ any)))))
         g$e$8414$bP4ck))))
   (g$record-type-descriptor-transformer$7938$bP4ck
     g$record-type-descriptor-transformer$11441$bP4ck
     (case-lambda
       ((g$e$8424$bP4ck g$r$8425$bP4ck g$mr$8426$bP4ck)
        ((case-lambda
           ((g$t$8427$bP4ck)
            ((case-lambda
               ((g$ls/false$8428$bP4ck)
                (if (if g$ls/false$8428$bP4ck
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8429$bP4ck)
                             (g$id?$7706$bP4ck g$id$8429$bP4ck)))
                          g$ls/false$8428$bP4ck))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8430$bP4ck)
                       ((case-lambda
                          ((g$lab$8431$bP4ck)
                           ((case-lambda
                              ((g$b$8432$bP4ck)
                               ((case-lambda
                                  ((g$type$8433$bP4ck)
                                   (begin
                                     (if (not g$lab$8431$bP4ck)
                                       (g$raise-unbound-error$7725$bP4ck
                                         g$id$8430$bP4ck)
                                       (void))
                                     (if (not (if (eq? g$type$8433$bP4ck '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$7724$bP4ck
                                                      g$b$8432$bP4ck)))
                                                '#f))
                                       (g$syntax-violation$8096$bP4ck
                                         '#f
                                         '"not a record type"
                                         g$e$8424$bP4ck)
                                       (void))
                                     (g$chi-expr$8002$bP4ck
                                       (car (g$binding-value$7724$bP4ck
                                              g$b$8432$bP4ck))
                                       g$r$8425$bP4ck
                                       g$mr$8426$bP4ck))))
                                (g$binding-type$7723$bP4ck g$b$8432$bP4ck))))
                            (g$label->binding$7721$bP4ck
                              g$lab$8431$bP4ck
                              g$r$8425$bP4ck))))
                        (g$id->label$7719$bP4ck g$id$8430$bP4ck))))
                    g$ls/false$8428$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8427$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8427$bP4ck '(_ any)))))
         g$e$8424$bP4ck))))
   (g$record-constructor-descriptor-transformer$7939$bP4ck
     g$record-constructor-descriptor-transformer$11442$bP4ck
     (case-lambda
       ((g$e$8434$bP4ck g$r$8435$bP4ck g$mr$8436$bP4ck)
        ((case-lambda
           ((g$t$8437$bP4ck)
            ((case-lambda
               ((g$ls/false$8438$bP4ck)
                (if (if g$ls/false$8438$bP4ck
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8439$bP4ck)
                             (g$id?$7706$bP4ck g$id$8439$bP4ck)))
                          g$ls/false$8438$bP4ck))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8440$bP4ck)
                       ((case-lambda
                          ((g$lab$8441$bP4ck)
                           ((case-lambda
                              ((g$b$8442$bP4ck)
                               ((case-lambda
                                  ((g$type$8443$bP4ck)
                                   (begin
                                     (if (not g$lab$8441$bP4ck)
                                       (g$raise-unbound-error$7725$bP4ck
                                         g$id$8440$bP4ck)
                                       (void))
                                     (if (not (if (eq? g$type$8443$bP4ck '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$7724$bP4ck
                                                      g$b$8442$bP4ck)))
                                                '#f))
                                       (g$syntax-violation$8096$bP4ck
                                         '#f
                                         '"invalid type"
                                         g$e$8434$bP4ck)
                                       (void))
                                     (g$chi-expr$8002$bP4ck
                                       (g$cadr$5264$bP4ck
                                         (g$binding-value$7724$bP4ck
                                           g$b$8442$bP4ck))
                                       g$r$8435$bP4ck
                                       g$mr$8436$bP4ck))))
                                (g$binding-type$7723$bP4ck g$b$8442$bP4ck))))
                            (g$label->binding$7721$bP4ck
                              g$lab$8441$bP4ck
                              g$r$8435$bP4ck))))
                        (g$id->label$7719$bP4ck g$id$8440$bP4ck))))
                    g$ls/false$8438$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8437$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8437$bP4ck '(_ any)))))
         g$e$8434$bP4ck))))
   (g$when-macro$7940$bP4ck
     g$when-macro$11443$bP4ck
     (case-lambda
       ((g$e$8444$bP4ck)
        ((case-lambda
           ((g$t$8445$bP4ck)
            ((case-lambda
               ((g$ls/false$8446$bP4ck)
                (if g$ls/false$8446$bP4ck
                  (apply
                    (case-lambda
                      ((g$test$8447$bP4ck g$e$8448$bP4ck g$e*$8449$bP4ck)
                       (g$bless$7947$bP4ck
                         (list
                           'if
                           g$test$8447$bP4ck
                           (cons
                             'begin
                             (cons g$e$8448$bP4ck g$e*$8449$bP4ck))))))
                    g$ls/false$8446$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8445$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8445$bP4ck
               '(_ any any . each-any)))))
         g$e$8444$bP4ck))))
   (g$unless-macro$7941$bP4ck
     g$unless-macro$11444$bP4ck
     (case-lambda
       ((g$e$8450$bP4ck)
        ((case-lambda
           ((g$t$8451$bP4ck)
            ((case-lambda
               ((g$ls/false$8452$bP4ck)
                (if g$ls/false$8452$bP4ck
                  (apply
                    (case-lambda
                      ((g$test$8453$bP4ck g$e$8454$bP4ck g$e*$8455$bP4ck)
                       (g$bless$7947$bP4ck
                         (list
                           'if
                           (list 'not g$test$8453$bP4ck)
                           (cons
                             'begin
                             (cons g$e$8454$bP4ck g$e*$8455$bP4ck))))))
                    g$ls/false$8452$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8451$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8451$bP4ck
               '(_ any any . each-any)))))
         g$e$8450$bP4ck))))
   (g$if-transformer$7942$bP4ck
     g$if-transformer$11445$bP4ck
     (case-lambda
       ((g$e$8456$bP4ck g$r$8457$bP4ck g$mr$8458$bP4ck)
        ((case-lambda
           ((g$t$8459$bP4ck)
            ((case-lambda
               ((g$ls/false$8460$bP4ck)
                (if g$ls/false$8460$bP4ck
                  (apply
                    (case-lambda
                      ((g$e0$8461$bP4ck g$e1$8462$bP4ck g$e2$8463$bP4ck)
                       (list
                         'if
                         (g$chi-expr$8002$bP4ck
                           g$e0$8461$bP4ck
                           g$r$8457$bP4ck
                           g$mr$8458$bP4ck)
                         (g$chi-expr$8002$bP4ck
                           g$e1$8462$bP4ck
                           g$r$8457$bP4ck
                           g$mr$8458$bP4ck)
                         (g$chi-expr$8002$bP4ck
                           g$e2$8463$bP4ck
                           g$r$8457$bP4ck
                           g$mr$8458$bP4ck))))
                    g$ls/false$8460$bP4ck)
                  ((case-lambda
                     ((g$t$8464$bP4ck)
                      ((case-lambda
                         ((g$ls/false$8465$bP4ck)
                          (if g$ls/false$8465$bP4ck
                            (apply
                              (case-lambda
                                ((g$e0$8466$bP4ck g$e1$8467$bP4ck)
                                 (list
                                   'if
                                   (g$chi-expr$8002$bP4ck
                                     g$e0$8466$bP4ck
                                     g$r$8457$bP4ck
                                     g$mr$8458$bP4ck)
                                   (g$chi-expr$8002$bP4ck
                                     g$e1$8467$bP4ck
                                     g$r$8457$bP4ck
                                     g$mr$8458$bP4ck)
                                   (g$build-void$7636$bP4ck))))
                              g$ls/false$8465$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$8464$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$8464$bP4ck
                         '(_ any any)))))
                   g$t$8459$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8459$bP4ck '(_ any any any)))))
         g$e$8456$bP4ck))))
   (g$case-macro$7943$bP4ck
     g$case-macro$11446$bP4ck
     (case-lambda
       ((g$e$8468$bP4ck)
        (letrec* ((g$build-last$8469$bP4ck
                    (case-lambda
                      ((g$cls$8489$bP4ck)
                       ((case-lambda
                          ((g$t$8490$bP4ck)
                           ((case-lambda
                              ((g$ls/false$8491$bP4ck)
                               (if g$ls/false$8491$bP4ck
                                 (apply
                                   (case-lambda
                                     ((g$e$8492$bP4ck g$e*$8493$bP4ck)
                                      (cons
                                        'begin
                                        (cons g$e$8492$bP4ck g$e*$8493$bP4ck))))
                                   g$ls/false$8491$bP4ck)
                                 ((case-lambda
                                    ((g$t$8494$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$8495$bP4ck)
                                         (if g$ls/false$8495$bP4ck
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8470$bP4ck
                                                  g$cls$8489$bP4ck
                                                  '(if #f #f))))
                                             g$ls/false$8495$bP4ck)
                                           (g$syntax-violation$8096$bP4ck
                                             '#f
                                             '"invalid syntax"
                                             g$t$8494$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$8494$bP4ck
                                        '_))))
                                  g$t$8490$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$8490$bP4ck
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8489$bP4ck))))
                  (g$build-one$8470$bP4ck
                    (case-lambda
                      ((g$cls$8482$bP4ck g$k$8483$bP4ck)
                       ((case-lambda
                          ((g$t$8484$bP4ck)
                           ((case-lambda
                              ((g$ls/false$8485$bP4ck)
                               (if g$ls/false$8485$bP4ck
                                 (apply
                                   (case-lambda
                                     ((g$d*$8486$bP4ck
                                        g$e$8487$bP4ck
                                        g$e*$8488$bP4ck)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8486$bP4ck))
                                        (cons
                                          'begin
                                          (cons g$e$8487$bP4ck g$e*$8488$bP4ck))
                                        g$k$8483$bP4ck)))
                                   g$ls/false$8485$bP4ck)
                                 (g$syntax-violation$8096$bP4ck
                                   '#f
                                   '"invalid syntax"
                                   g$t$8484$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$8484$bP4ck
                              '(each-any any . each-any)))))
                        g$cls$8482$bP4ck)))))
          ((case-lambda
             ((g$t$8471$bP4ck)
              ((case-lambda
                 ((g$ls/false$8472$bP4ck)
                  (if g$ls/false$8472$bP4ck
                    (apply
                      (case-lambda
                        ((g$expr$8473$bP4ck)
                         (g$bless$7947$bP4ck
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8473$bP4ck))
                               '((if #f #f)))))))
                      g$ls/false$8472$bP4ck)
                    ((case-lambda
                       ((g$t$8474$bP4ck)
                        ((case-lambda
                           ((g$ls/false$8475$bP4ck)
                            (if g$ls/false$8475$bP4ck
                              (apply
                                (case-lambda
                                  ((g$expr$8476$bP4ck
                                     g$cls$8477$bP4ck
                                     g$cls*$8478$bP4ck)
                                   (g$bless$7947$bP4ck
                                     (list
                                       'let
                                       (list (list 't g$expr$8476$bP4ck))
                                       ((letrec ((g$f$8479$bP4ck
                                                   (case-lambda
                                                     ((g$cls$8480$bP4ck
                                                        g$cls*$8481$bP4ck)
                                                      (if (null?
                                                            g$cls*$8481$bP4ck)
                                                        (g$build-last$8469$bP4ck
                                                          g$cls$8480$bP4ck)
                                                        (g$build-one$8470$bP4ck
                                                          g$cls$8480$bP4ck
                                                          (g$f$8479$bP4ck
                                                            (car g$cls*$8481$bP4ck)
                                                            (cdr g$cls*$8481$bP4ck))))))))
                                          g$f$8479$bP4ck)
                                        g$cls$8477$bP4ck
                                        g$cls*$8478$bP4ck)))))
                                g$ls/false$8475$bP4ck)
                              (g$syntax-violation$8096$bP4ck
                                '#f
                                '"invalid syntax"
                                g$t$8474$bP4ck))))
                         (g$syntax-dispatch$7984$bP4ck
                           g$t$8474$bP4ck
                           '(_ any any . each-any)))))
                     g$t$8471$bP4ck))))
               (g$syntax-dispatch$7984$bP4ck g$t$8471$bP4ck '(_ any)))))
           g$e$8468$bP4ck)))))
   (g$quote-transformer$7944$bP4ck
     g$quote-transformer$11447$bP4ck
     (case-lambda
       ((g$e$8496$bP4ck g$r$8497$bP4ck g$mr$8498$bP4ck)
        ((case-lambda
           ((g$t$8499$bP4ck)
            ((case-lambda
               ((g$ls/false$8500$bP4ck)
                (if g$ls/false$8500$bP4ck
                  (apply
                    (case-lambda
                      ((g$datum$8501$bP4ck)
                       (list
                         'quote
                         (g$stx->datum$7717$bP4ck g$datum$8501$bP4ck))))
                    g$ls/false$8500$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8499$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8499$bP4ck '(_ any)))))
         g$e$8496$bP4ck))))
   (g$case-lambda-transformer$7945$bP4ck
     g$case-lambda-transformer$11448$bP4ck
     (case-lambda
       ((g$e$8502$bP4ck g$r$8503$bP4ck g$mr$8504$bP4ck)
        ((case-lambda
           ((g$t$8505$bP4ck)
            ((case-lambda
               ((g$ls/false$8506$bP4ck)
                (if g$ls/false$8506$bP4ck
                  (apply
                    (case-lambda
                      ((g$fmls*$8507$bP4ck g$b*$8508$bP4ck g$b**$8509$bP4ck)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$8006$bP4ck
                              g$e$8502$bP4ck
                              g$fmls*$8507$bP4ck
                              (g$map$5063$bP4ck
                                cons
                                g$b*$8508$bP4ck
                                g$b**$8509$bP4ck)
                              g$r$8503$bP4ck
                              g$mr$8504$bP4ck)))
                         (case-lambda
                           ((g$fmls*$8512$bP4ck g$body*$8513$bP4ck)
                            ((case-lambda
                               ((g$body*$8514$bP4ck g$fmls*$8515$bP4ck)
                                (g$build-case-lambda$7633$bP4ck
                                  '#f
                                  g$fmls*$8515$bP4ck
                                  g$body*$8514$bP4ck)))
                             g$body*$8513$bP4ck
                             g$fmls*$8512$bP4ck))))))
                    g$ls/false$8506$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8505$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8505$bP4ck
               '(_ . #(each (any any . each-any)))))))
         g$e$8502$bP4ck))))
   (g$lambda-transformer$7946$bP4ck
     g$lambda-transformer$11449$bP4ck
     (case-lambda
       ((g$e$8516$bP4ck g$r$8517$bP4ck g$mr$8518$bP4ck)
        ((case-lambda
           ((g$t$8519$bP4ck)
            ((case-lambda
               ((g$ls/false$8520$bP4ck)
                (if g$ls/false$8520$bP4ck
                  (apply
                    (case-lambda
                      ((g$fmls$8521$bP4ck g$b$8522$bP4ck g$b*$8523$bP4ck)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$8005$bP4ck
                              g$e$8516$bP4ck
                              g$fmls$8521$bP4ck
                              (cons g$b$8522$bP4ck g$b*$8523$bP4ck)
                              g$r$8517$bP4ck
                              g$mr$8518$bP4ck)))
                         (case-lambda
                           ((g$fmls$8526$bP4ck g$body$8527$bP4ck)
                            ((case-lambda
                               ((g$body$8528$bP4ck g$fmls$8529$bP4ck)
                                (g$build-lambda$7632$bP4ck
                                  '#f
                                  g$fmls$8529$bP4ck
                                  g$body$8528$bP4ck)))
                             g$body$8527$bP4ck
                             g$fmls$8526$bP4ck))))))
                    g$ls/false$8520$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8519$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8519$bP4ck
               '(_ any any . each-any)))))
         g$e$8516$bP4ck))))
   (g$bless$7947$bP4ck
     g$bless$11450$bP4ck
     (case-lambda
       ((g$x$8530$bP4ck)
        (g$mkstx$7694$bP4ck
          ((letrec ((g$f$8531$bP4ck
                      (case-lambda
                        ((g$x$8532$bP4ck)
                         (if (g$stx?$7678$bP4ck g$x$8532$bP4ck)
                           g$x$8532$bP4ck
                           (if (pair? g$x$8532$bP4ck)
                             (cons
                               (g$f$8531$bP4ck (car g$x$8532$bP4ck))
                               (g$f$8531$bP4ck (cdr g$x$8532$bP4ck)))
                             (if (symbol? g$x$8532$bP4ck)
                               (g$scheme-stx$7927$bP4ck g$x$8532$bP4ck)
                               (if (vector? g$x$8532$bP4ck)
                                 (vector-map g$f$8531$bP4ck g$x$8532$bP4ck)
                                 g$x$8532$bP4ck))))))))
             g$f$8531$bP4ck)
           g$x$8530$bP4ck)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7948$bP4ck
     g$with-syntax-macro$11451$bP4ck
     (case-lambda
       ((g$e$8533$bP4ck)
        ((case-lambda
           ((g$t$8534$bP4ck)
            ((case-lambda
               ((g$ls/false$8535$bP4ck)
                (if g$ls/false$8535$bP4ck
                  (apply
                    (case-lambda
                      ((g$pat*$8536$bP4ck
                         g$expr*$8537$bP4ck
                         g$b$8538$bP4ck
                         g$b*$8539$bP4ck)
                       ((case-lambda
                          ((g$idn*$8540$bP4ck)
                           (begin
                             (g$verify-formals$8004$bP4ck
                               (g$map$5063$bP4ck car g$idn*$8540$bP4ck)
                               g$e$8533$bP4ck)
                             ((case-lambda
                                ((g$t*$8541$bP4ck)
                                 (g$bless$7947$bP4ck
                                   (list
                                     'let
                                     (g$map$5063$bP4ck
                                       list
                                       g$t*$8541$bP4ck
                                       g$expr*$8537$bP4ck)
                                     ((letrec ((g$f$8542$bP4ck
                                                 (case-lambda
                                                   ((g$pat*$8543$bP4ck
                                                      g$t*$8544$bP4ck)
                                                    (if (null?
                                                          g$pat*$8543$bP4ck)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8538$bP4ck
                                                            g$b*$8539$bP4ck)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8544$bP4ck)
                                                        '()
                                                        (list
                                                          (car g$pat*$8543$bP4ck)
                                                          (g$f$8542$bP4ck
                                                            (cdr g$pat*$8543$bP4ck)
                                                            (cdr g$t*$8544$bP4ck)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8543$bP4ck))
                                                            (car g$t*$8544$bP4ck)))))))))
                                        g$f$8542$bP4ck)
                                      g$pat*$8536$bP4ck
                                      g$t*$8541$bP4ck)))))
                              (g$generate-temporaries$8086$bP4ck
                                g$expr*$8537$bP4ck)))))
                        ((letrec ((g$f$8545$bP4ck
                                    (case-lambda
                                      ((g$pat*$8546$bP4ck)
                                       (if (null? g$pat*$8546$bP4ck)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7983$bP4ck
                                                (car g$pat*$8546$bP4ck)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8549$bP4ck
                                                g$idn*$8550$bP4ck)
                                              ((case-lambda
                                                 ((g$idn*$8551$bP4ck
                                                    g$pat$8552$bP4ck)
                                                  (append
                                                    g$idn*$8551$bP4ck
                                                    (g$f$8545$bP4ck
                                                      (cdr g$pat*$8546$bP4ck)))))
                                               g$idn*$8550$bP4ck
                                               g$pat$8549$bP4ck)))))))))
                           g$f$8545$bP4ck)
                         g$pat*$8536$bP4ck))))
                    g$ls/false$8535$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8534$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8534$bP4ck
               '(_ #(each (any any)) any . each-any)))))
         g$e$8533$bP4ck))))
   (g$invalid-fmls-error$7949$bP4ck
     g$invalid-fmls-error$11452$bP4ck
     (case-lambda
       ((g$stx$8553$bP4ck g$fmls$8554$bP4ck)
        ((case-lambda
           ((g$t$8555$bP4ck)
            ((case-lambda
               ((g$ls/false$8556$bP4ck)
                (if g$ls/false$8556$bP4ck
                  (apply
                    (case-lambda
                      ((g$id*$8557$bP4ck g$last$8558$bP4ck)
                       ((letrec ((g$f$8559$bP4ck
                                   (case-lambda
                                     ((g$id*$8560$bP4ck)
                                      (if (null? g$id*$8560$bP4ck)
                                        (values)
                                        (if (not (g$id?$7706$bP4ck
                                                   (car g$id*$8560$bP4ck)))
                                          (g$syntax-violation$8096$bP4ck
                                            '#f
                                            '"not an identifier"
                                            g$stx$8553$bP4ck
                                            (car g$id*$8560$bP4ck))
                                          (begin
                                            (g$f$8559$bP4ck
                                              (cdr g$id*$8560$bP4ck))
                                            (if (g$bound-id-member?$7713$bP4ck
                                                  (car g$id*$8560$bP4ck)
                                                  (cdr g$id*$8560$bP4ck))
                                              (g$syntax-violation$8096$bP4ck
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8553$bP4ck
                                                (car g$id*$8560$bP4ck))
                                              (void)))))))))
                          g$f$8559$bP4ck)
                        (if (g$id?$7706$bP4ck g$last$8558$bP4ck)
                          (cons g$last$8558$bP4ck g$id*$8557$bP4ck)
                          (if (g$syntax-null?$7701$bP4ck g$last$8558$bP4ck)
                            g$id*$8557$bP4ck
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"not an identifier"
                              g$stx$8553$bP4ck
                              g$last$8558$bP4ck))))))
                    g$ls/false$8556$bP4ck)
                  ((case-lambda
                     ((g$t$8561$bP4ck)
                      ((case-lambda
                         ((g$ls/false$8562$bP4ck)
                          (if g$ls/false$8562$bP4ck
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8096$bP4ck
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8553$bP4ck
                                   g$fmls$8554$bP4ck)))
                              g$ls/false$8562$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$8561$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck g$t$8561$bP4ck '_))))
                   g$t$8555$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8555$bP4ck
               '#(each+ any () any)))))
         g$fmls$8554$bP4ck))))
   (g$let-macro$7950$bP4ck
     g$let-macro$11453$bP4ck
     (case-lambda
       ((g$stx$8563$bP4ck)
        ((case-lambda
           ((g$t$8564$bP4ck)
            ((case-lambda
               ((g$ls/false$8565$bP4ck)
                (if g$ls/false$8565$bP4ck
                  (apply
                    (case-lambda
                      ((g$lhs*$8566$bP4ck
                         g$rhs*$8567$bP4ck
                         g$b$8568$bP4ck
                         g$b*$8569$bP4ck)
                       (if (g$valid-bound-ids?$7711$bP4ck g$lhs*$8566$bP4ck)
                         (g$bless$7947$bP4ck
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8566$bP4ck
                                 (cons g$b$8568$bP4ck g$b*$8569$bP4ck)))
                             g$rhs*$8567$bP4ck))
                         (g$invalid-fmls-error$7949$bP4ck
                           g$stx$8563$bP4ck
                           g$lhs*$8566$bP4ck))))
                    g$ls/false$8565$bP4ck)
                  ((case-lambda
                     ((g$t$8570$bP4ck)
                      ((case-lambda
                         ((g$ls/false$8571$bP4ck)
                          (if (if g$ls/false$8571$bP4ck
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8572$bP4ck
                                         g$lhs*$8573$bP4ck
                                         g$rhs*$8574$bP4ck
                                         g$b$8575$bP4ck
                                         g$b*$8576$bP4ck)
                                       (g$id?$7706$bP4ck g$f$8572$bP4ck)))
                                    g$ls/false$8571$bP4ck))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8577$bP4ck
                                   g$lhs*$8578$bP4ck
                                   g$rhs*$8579$bP4ck
                                   g$b$8580$bP4ck
                                   g$b*$8581$bP4ck)
                                 (if (g$valid-bound-ids?$7711$bP4ck
                                       g$lhs*$8578$bP4ck)
                                   (g$bless$7947$bP4ck
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8577$bP4ck
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8578$bP4ck
                                                 (cons
                                                   g$b$8580$bP4ck
                                                   g$b*$8581$bP4ck)))))
                                         g$f$8577$bP4ck)
                                       g$rhs*$8579$bP4ck))
                                   (g$invalid-fmls-error$7949$bP4ck
                                     g$stx$8563$bP4ck
                                     g$lhs*$8578$bP4ck))))
                              g$ls/false$8571$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$8570$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$8570$bP4ck
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8564$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8564$bP4ck
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8563$bP4ck))))
   (g$let-values-macro$7951$bP4ck
     g$let-values-macro$11454$bP4ck
     (case-lambda
       ((g$stx$8582$bP4ck)
        (letrec* ((g$rename$8583$bP4ck
                    (case-lambda
                      ((g$x$8634$bP4ck g$old*$8635$bP4ck g$new*$8636$bP4ck)
                       (begin
                         (if (not (g$id?$7706$bP4ck g$x$8634$bP4ck))
                           (g$syntax-violation$8096$bP4ck
                             '#f
                             '"not an indentifier"
                             g$stx$8582$bP4ck
                             g$x$8634$bP4ck)
                           (void))
                         (if (g$bound-id-member?$7713$bP4ck
                               g$x$8634$bP4ck
                               g$old*$8635$bP4ck)
                           (g$syntax-violation$8096$bP4ck
                             '#f
                             '"duplicate binding"
                             g$stx$8582$bP4ck
                             g$x$8634$bP4ck)
                           (void))
                         ((case-lambda
                            ((g$y$8637$bP4ck)
                             (values
                               g$y$8637$bP4ck
                               (cons g$x$8634$bP4ck g$old*$8635$bP4ck)
                               (cons g$y$8637$bP4ck g$new*$8636$bP4ck))))
                          (gensym
                            (g$syntax->datum$8099$bP4ck g$x$8634$bP4ck)))))))
                  (g$rename*$8584$bP4ck
                    (case-lambda
                      ((g$x*$8625$bP4ck g$old*$8626$bP4ck g$new*$8627$bP4ck)
                       (if (null? g$x*$8625$bP4ck)
                         (values '() g$old*$8626$bP4ck g$new*$8627$bP4ck)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8583$bP4ck
                                (car g$x*$8625$bP4ck)
                                g$old*$8626$bP4ck
                                g$new*$8627$bP4ck)))
                           (case-lambda
                             ((g$x$8628$bP4ck
                                g$old*$8629$bP4ck
                                g$new*$8630$bP4ck)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8584$bP4ck
                                     (cdr g$x*$8625$bP4ck)
                                     g$old*$8629$bP4ck
                                     g$new*$8630$bP4ck)))
                                (case-lambda
                                  ((g$x*$8631$bP4ck
                                     g$old*$8632$bP4ck
                                     g$new*$8633$bP4ck)
                                   (values
                                     (cons g$x$8628$bP4ck g$x*$8631$bP4ck)
                                     g$old*$8632$bP4ck
                                     g$new*$8633$bP4ck))))))))))))
          ((case-lambda
             ((g$t$8585$bP4ck)
              ((case-lambda
                 ((g$ls/false$8586$bP4ck)
                  (if g$ls/false$8586$bP4ck
                    (apply
                      (case-lambda
                        ((g$b$8587$bP4ck g$b*$8588$bP4ck)
                         (g$cons*$5065$bP4ck
                           (g$bless$7947$bP4ck 'let)
                           '()
                           g$b$8587$bP4ck
                           g$b*$8588$bP4ck)))
                      g$ls/false$8586$bP4ck)
                    ((case-lambda
                       ((g$t$8589$bP4ck)
                        ((case-lambda
                           ((g$ls/false$8590$bP4ck)
                            (if g$ls/false$8590$bP4ck
                              (apply
                                (case-lambda
                                  ((g$lhs*$8591$bP4ck
                                     g$rhs*$8592$bP4ck
                                     g$b$8593$bP4ck
                                     g$b*$8594$bP4ck)
                                   (g$bless$7947$bP4ck
                                     ((letrec ((g$f$8595$bP4ck
                                                 (case-lambda
                                                   ((g$lhs*$8596$bP4ck
                                                      g$rhs*$8597$bP4ck
                                                      g$old*$8598$bP4ck
                                                      g$new*$8599$bP4ck)
                                                    (if (null?
                                                          g$lhs*$8596$bP4ck)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$5063$bP4ck
                                                            list
                                                            g$old*$8598$bP4ck
                                                            g$new*$8599$bP4ck)
                                                          (cons
                                                            g$b$8593$bP4ck
                                                            g$b*$8594$bP4ck)))
                                                      ((case-lambda
                                                         ((g$t$8600$bP4ck)
                                                          ((case-lambda
                                                             ((g$ls/false$8601$bP4ck)
                                                              (if g$ls/false$8601$bP4ck
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8602$bP4ck)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8584$bP4ck
                                                                            g$x*$8602$bP4ck
                                                                            g$old*$8598$bP4ck
                                                                            g$new*$8599$bP4ck)))
                                                                       (case-lambda
                                                                         ((g$y*$8606$bP4ck
                                                                            g$old*$8607$bP4ck
                                                                            g$new*$8608$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$new*$8609$bP4ck
                                                                                g$old*$8610$bP4ck
                                                                                g$y*$8611$bP4ck)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8597$bP4ck))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8611$bP4ck
                                                                                  (g$f$8595$bP4ck
                                                                                    (cdr g$lhs*$8596$bP4ck)
                                                                                    (cdr g$rhs*$8597$bP4ck)
                                                                                    g$old*$8610$bP4ck
                                                                                    g$new*$8609$bP4ck)))))
                                                                           g$new*$8608$bP4ck
                                                                           g$old*$8607$bP4ck
                                                                           g$y*$8606$bP4ck))))))
                                                                  g$ls/false$8601$bP4ck)
                                                                ((case-lambda
                                                                   ((g$t$8612$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8613$bP4ck)
                                                                        (if g$ls/false$8613$bP4ck
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8614$bP4ck
                                                                                 g$x$8615$bP4ck)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8583$bP4ck
                                                                                      g$x$8615$bP4ck
                                                                                      g$old*$8598$bP4ck
                                                                                      g$new*$8599$bP4ck)))
                                                                                 (case-lambda
                                                                                   ((g$y$8616$bP4ck
                                                                                      g$old*$8617$bP4ck
                                                                                      g$new*$8618$bP4ck)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8584$bP4ck
                                                                                           g$x*$8614$bP4ck
                                                                                           g$old*$8617$bP4ck
                                                                                           g$new*$8618$bP4ck)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8619$bP4ck
                                                                                           g$old*$8620$bP4ck
                                                                                           g$new*$8621$bP4ck)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8597$bP4ck))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8619$bP4ck
                                                                                               g$y$8616$bP4ck)
                                                                                             (g$f$8595$bP4ck
                                                                                               (cdr g$lhs*$8596$bP4ck)
                                                                                               (cdr g$rhs*$8597$bP4ck)
                                                                                               g$old*$8620$bP4ck
                                                                                               g$new*$8621$bP4ck)))))))))))
                                                                            g$ls/false$8613$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$t$8622$bP4ck)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8623$bP4ck)
                                                                                  (if g$ls/false$8623$bP4ck
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8624$bP4ck)
                                                                                         (g$syntax-violation$8096$bP4ck
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8582$bP4ck
                                                                                           g$others$8624$bP4ck)))
                                                                                      g$ls/false$8623$bP4ck)
                                                                                    (g$syntax-violation$8096$bP4ck
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8622$bP4ck))))
                                                                               (g$syntax-dispatch$7984$bP4ck
                                                                                 g$t$8622$bP4ck
                                                                                 'any))))
                                                                           g$t$8612$bP4ck))))
                                                                     (g$syntax-dispatch$7984$bP4ck
                                                                       g$t$8612$bP4ck
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8600$bP4ck))))
                                                           (g$syntax-dispatch$7984$bP4ck
                                                             g$t$8600$bP4ck
                                                             'each-any))))
                                                       (car g$lhs*$8596$bP4ck)))))))
                                        g$f$8595$bP4ck)
                                      g$lhs*$8591$bP4ck
                                      g$rhs*$8592$bP4ck
                                      '()
                                      '()))))
                                g$ls/false$8590$bP4ck)
                              (g$syntax-violation$8096$bP4ck
                                '#f
                                '"invalid syntax"
                                g$t$8589$bP4ck))))
                         (g$syntax-dispatch$7984$bP4ck
                           g$t$8589$bP4ck
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8585$bP4ck))))
               (g$syntax-dispatch$7984$bP4ck
                 g$t$8585$bP4ck
                 '(_ () any . each-any)))))
           g$stx$8582$bP4ck)))))
   (g$let*-values-macro$7952$bP4ck
     g$let*-values-macro$11455$bP4ck
     (case-lambda
       ((g$stx$8638$bP4ck)
        (letrec* ((g$check$8639$bP4ck
                    (case-lambda
                      ((g$x*$8663$bP4ck)
                       (if (not (null? g$x*$8663$bP4ck))
                         ((case-lambda
                            ((g$x$8664$bP4ck)
                             (begin
                               (if (not (g$id?$7706$bP4ck g$x$8664$bP4ck))
                                 (g$syntax-violation$8096$bP4ck
                                   '#f
                                   '"not an identifier"
                                   g$stx$8638$bP4ck
                                   g$x$8664$bP4ck)
                                 (void))
                               (g$check$8639$bP4ck (cdr g$x*$8663$bP4ck))
                               (if (g$bound-id-member?$7713$bP4ck
                                     g$x$8664$bP4ck
                                     (cdr g$x*$8663$bP4ck))
                                 (g$syntax-violation$8096$bP4ck
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8638$bP4ck
                                   g$x$8664$bP4ck)
                                 (void)))))
                          (car g$x*$8663$bP4ck))
                         (void))))))
          ((case-lambda
             ((g$t$8640$bP4ck)
              ((case-lambda
                 ((g$ls/false$8641$bP4ck)
                  (if g$ls/false$8641$bP4ck
                    (apply
                      (case-lambda
                        ((g$b$8642$bP4ck g$b*$8643$bP4ck)
                         (g$cons*$5065$bP4ck
                           (g$bless$7947$bP4ck 'let)
                           '()
                           g$b$8642$bP4ck
                           g$b*$8643$bP4ck)))
                      g$ls/false$8641$bP4ck)
                    ((case-lambda
                       ((g$t$8644$bP4ck)
                        ((case-lambda
                           ((g$ls/false$8645$bP4ck)
                            (if g$ls/false$8645$bP4ck
                              (apply
                                (case-lambda
                                  ((g$lhs*$8646$bP4ck
                                     g$rhs*$8647$bP4ck
                                     g$b$8648$bP4ck
                                     g$b*$8649$bP4ck)
                                   (g$bless$7947$bP4ck
                                     ((letrec ((g$f$8650$bP4ck
                                                 (case-lambda
                                                   ((g$lhs*$8651$bP4ck
                                                      g$rhs*$8652$bP4ck)
                                                    (if (null?
                                                          g$lhs*$8651$bP4ck)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8648$bP4ck
                                                          g$b*$8649$bP4ck))
                                                      ((case-lambda
                                                         ((g$t$8653$bP4ck)
                                                          ((case-lambda
                                                             ((g$ls/false$8654$bP4ck)
                                                              (if g$ls/false$8654$bP4ck
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8655$bP4ck)
                                                                     (begin
                                                                       (g$check$8639$bP4ck
                                                                         g$x*$8655$bP4ck)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8652$bP4ck))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8655$bP4ck
                                                                           (g$f$8650$bP4ck
                                                                             (cdr g$lhs*$8651$bP4ck)
                                                                             (cdr g$rhs*$8652$bP4ck)))))))
                                                                  g$ls/false$8654$bP4ck)
                                                                ((case-lambda
                                                                   ((g$t$8656$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8657$bP4ck)
                                                                        (if g$ls/false$8657$bP4ck
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8658$bP4ck
                                                                                 g$x$8659$bP4ck)
                                                                               (begin
                                                                                 (g$check$8639$bP4ck
                                                                                   (cons
                                                                                     g$x$8659$bP4ck
                                                                                     g$x*$8658$bP4ck))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8652$bP4ck))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8658$bP4ck
                                                                                       g$x$8659$bP4ck)
                                                                                     (g$f$8650$bP4ck
                                                                                       (cdr g$lhs*$8651$bP4ck)
                                                                                       (cdr g$rhs*$8652$bP4ck)))))))
                                                                            g$ls/false$8657$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$t$8660$bP4ck)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8661$bP4ck)
                                                                                  (if g$ls/false$8661$bP4ck
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8662$bP4ck)
                                                                                         (g$syntax-violation$8096$bP4ck
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8638$bP4ck
                                                                                           g$others$8662$bP4ck)))
                                                                                      g$ls/false$8661$bP4ck)
                                                                                    (g$syntax-violation$8096$bP4ck
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8660$bP4ck))))
                                                                               (g$syntax-dispatch$7984$bP4ck
                                                                                 g$t$8660$bP4ck
                                                                                 'any))))
                                                                           g$t$8656$bP4ck))))
                                                                     (g$syntax-dispatch$7984$bP4ck
                                                                       g$t$8656$bP4ck
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8653$bP4ck))))
                                                           (g$syntax-dispatch$7984$bP4ck
                                                             g$t$8653$bP4ck
                                                             'each-any))))
                                                       (car g$lhs*$8651$bP4ck)))))))
                                        g$f$8650$bP4ck)
                                      g$lhs*$8646$bP4ck
                                      g$rhs*$8647$bP4ck))))
                                g$ls/false$8645$bP4ck)
                              (g$syntax-violation$8096$bP4ck
                                '#f
                                '"invalid syntax"
                                g$t$8644$bP4ck))))
                         (g$syntax-dispatch$7984$bP4ck
                           g$t$8644$bP4ck
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8640$bP4ck))))
               (g$syntax-dispatch$7984$bP4ck
                 g$t$8640$bP4ck
                 '(_ () any . each-any)))))
           g$stx$8638$bP4ck)))))
   (g$trace-lambda-macro$7953$bP4ck
     g$trace-lambda-macro$11456$bP4ck
     (case-lambda
       ((g$stx$8665$bP4ck)
        ((case-lambda
           ((g$t$8666$bP4ck)
            ((case-lambda
               ((g$ls/false$8667$bP4ck)
                (if g$ls/false$8667$bP4ck
                  (apply
                    (case-lambda
                      ((g$who$8668$bP4ck
                         g$fmls$8669$bP4ck
                         g$b$8670$bP4ck
                         g$b*$8671$bP4ck)
                       (if (g$valid-bound-ids?$7711$bP4ck g$fmls$8669$bP4ck)
                         (g$bless$7947$bP4ck
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8668$bP4ck)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8669$bP4ck
                                 (cons g$b$8670$bP4ck g$b*$8671$bP4ck)))))
                         (g$invalid-fmls-error$7949$bP4ck
                           g$stx$8665$bP4ck
                           g$fmls$8669$bP4ck))))
                    g$ls/false$8667$bP4ck)
                  ((case-lambda
                     ((g$t$8672$bP4ck)
                      ((case-lambda
                         ((g$ls/false$8673$bP4ck)
                          (if g$ls/false$8673$bP4ck
                            (apply
                              (case-lambda
                                ((g$who$8674$bP4ck
                                   g$fmls$8675$bP4ck
                                   g$last$8676$bP4ck
                                   g$b$8677$bP4ck
                                   g$b*$8678$bP4ck)
                                 (if (g$valid-bound-ids?$7711$bP4ck
                                       (cons
                                         g$last$8676$bP4ck
                                         g$fmls$8675$bP4ck))
                                   (g$bless$7947$bP4ck
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8674$bP4ck)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8675$bP4ck
                                             g$last$8676$bP4ck)
                                           (cons
                                             g$b$8677$bP4ck
                                             g$b*$8678$bP4ck)))))
                                   (g$invalid-fmls-error$7949$bP4ck
                                     g$stx$8665$bP4ck
                                     (append
                                       g$fmls$8675$bP4ck
                                       g$last$8676$bP4ck)))))
                              g$ls/false$8673$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$8672$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$8672$bP4ck
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8666$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8666$bP4ck
               '(_ any each-any any . each-any)))))
         g$stx$8665$bP4ck))))
   (g$trace-define-macro$7954$bP4ck
     g$trace-define-macro$11457$bP4ck
     (case-lambda
       ((g$stx$8679$bP4ck)
        ((case-lambda
           ((g$t$8680$bP4ck)
            ((case-lambda
               ((g$ls/false$8681$bP4ck)
                (if g$ls/false$8681$bP4ck
                  (apply
                    (case-lambda
                      ((g$who$8682$bP4ck
                         g$fmls$8683$bP4ck
                         g$b$8684$bP4ck
                         g$b*$8685$bP4ck)
                       (if (g$valid-bound-ids?$7711$bP4ck g$fmls$8683$bP4ck)
                         (g$bless$7947$bP4ck
                           (list
                             'define
                             g$who$8682$bP4ck
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8682$bP4ck)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8683$bP4ck
                                   (cons g$b$8684$bP4ck g$b*$8685$bP4ck))))))
                         (g$invalid-fmls-error$7949$bP4ck
                           g$stx$8679$bP4ck
                           g$fmls$8683$bP4ck))))
                    g$ls/false$8681$bP4ck)
                  ((case-lambda
                     ((g$t$8686$bP4ck)
                      ((case-lambda
                         ((g$ls/false$8687$bP4ck)
                          (if g$ls/false$8687$bP4ck
                            (apply
                              (case-lambda
                                ((g$who$8688$bP4ck
                                   g$fmls$8689$bP4ck
                                   g$last$8690$bP4ck
                                   g$b$8691$bP4ck
                                   g$b*$8692$bP4ck)
                                 (if (g$valid-bound-ids?$7711$bP4ck
                                       (cons
                                         g$last$8690$bP4ck
                                         g$fmls$8689$bP4ck))
                                   (g$bless$7947$bP4ck
                                     (list
                                       'define
                                       g$who$8688$bP4ck
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8688$bP4ck)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8689$bP4ck
                                               g$last$8690$bP4ck)
                                             (cons
                                               g$b$8691$bP4ck
                                               g$b*$8692$bP4ck))))))
                                   (g$invalid-fmls-error$7949$bP4ck
                                     g$stx$8679$bP4ck
                                     (append
                                       g$fmls$8689$bP4ck
                                       g$last$8690$bP4ck)))))
                              g$ls/false$8687$bP4ck)
                            ((case-lambda
                               ((g$t$8693$bP4ck)
                                ((case-lambda
                                   ((g$ls/false$8694$bP4ck)
                                    (if g$ls/false$8694$bP4ck
                                      (apply
                                        (case-lambda
                                          ((g$who$8695$bP4ck g$expr$8696$bP4ck)
                                           (if (g$id?$7706$bP4ck
                                                 g$who$8695$bP4ck)
                                             (g$bless$7947$bP4ck
                                               (list
                                                 'define
                                                 g$who$8695$bP4ck
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8696$bP4ck))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8695$bP4ck)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$8096$bP4ck
                                               '#f
                                               '"invalid name"
                                               g$stx$8679$bP4ck))))
                                        g$ls/false$8694$bP4ck)
                                      (g$syntax-violation$8096$bP4ck
                                        '#f
                                        '"invalid syntax"
                                        g$t$8693$bP4ck))))
                                 (g$syntax-dispatch$7984$bP4ck
                                   g$t$8693$bP4ck
                                   '(_ any any)))))
                             g$t$8686$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$8686$bP4ck
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8680$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8680$bP4ck
               '(_ (any . each-any) any . each-any)))))
         g$stx$8679$bP4ck))))
   (g$trace-define-syntax-macro$7955$bP4ck
     g$trace-define-syntax-macro$11458$bP4ck
     (case-lambda
       ((g$stx$8697$bP4ck)
        ((case-lambda
           ((g$t$8698$bP4ck)
            ((case-lambda
               ((g$ls/false$8699$bP4ck)
                (if g$ls/false$8699$bP4ck
                  (apply
                    (case-lambda
                      ((g$who$8700$bP4ck g$expr$8701$bP4ck)
                       (if (g$id?$7706$bP4ck g$who$8700$bP4ck)
                         (g$bless$7947$bP4ck
                           (list
                             'define-syntax
                             g$who$8700$bP4ck
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8700$bP4ck)
                               g$expr$8701$bP4ck)))
                         (g$syntax-violation$8096$bP4ck
                           '#f
                           '"invalid name"
                           g$stx$8697$bP4ck))))
                    g$ls/false$8699$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8698$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8698$bP4ck '(_ any any)))))
         g$stx$8697$bP4ck))))
   (g$trace-let/rec-syntax$7956$bP4ck
     g$trace-let/rec-syntax$11459$bP4ck
     (case-lambda
       ((g$who$8702$bP4ck)
        (case-lambda
          ((g$stx$8703$bP4ck)
           ((case-lambda
              ((g$t$8704$bP4ck)
               ((case-lambda
                  ((g$ls/false$8705$bP4ck)
                   (if g$ls/false$8705$bP4ck
                     (apply
                       (case-lambda
                         ((g$lhs*$8706$bP4ck
                            g$rhs*$8707$bP4ck
                            g$b$8708$bP4ck
                            g$b*$8709$bP4ck)
                          (if (g$valid-bound-ids?$7711$bP4ck g$lhs*$8706$bP4ck)
                            ((case-lambda
                               ((g$rhs*$8710$bP4ck)
                                (g$bless$7947$bP4ck
                                  (cons
                                    g$who$8702$bP4ck
                                    (cons
                                      (g$map$5063$bP4ck
                                        list
                                        g$lhs*$8706$bP4ck
                                        g$rhs*$8710$bP4ck)
                                      (cons g$b$8708$bP4ck g$b*$8709$bP4ck))))))
                             (g$map$5063$bP4ck
                               (case-lambda
                                 ((g$lhs$8711$bP4ck g$rhs$8712$bP4ck)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$8711$bP4ck)
                                    g$rhs$8712$bP4ck)))
                               g$lhs*$8706$bP4ck
                               g$rhs*$8707$bP4ck))
                            (g$invalid-fmls-error$7949$bP4ck
                              g$stx$8703$bP4ck
                              g$lhs*$8706$bP4ck))))
                       g$ls/false$8705$bP4ck)
                     (g$syntax-violation$8096$bP4ck
                       '#f
                       '"invalid syntax"
                       g$t$8704$bP4ck))))
                (g$syntax-dispatch$7984$bP4ck
                  g$t$8704$bP4ck
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8703$bP4ck))))))
   (g$trace-let-syntax-macro$7957$bP4ck
     g$trace-let-syntax-macro$11460$bP4ck
     (g$trace-let/rec-syntax$7956$bP4ck 'let-syntax))
   (g$trace-letrec-syntax-macro$7958$bP4ck
     g$trace-letrec-syntax-macro$11461$bP4ck
     (g$trace-let/rec-syntax$7956$bP4ck 'letrec-syntax))
   (g$guard-macro$7959$bP4ck
     g$guard-macro$11462$bP4ck
     (case-lambda
       ((g$x$8713$bP4ck)
        (letrec* ((g$gen-clauses$8714$bP4ck
                    (case-lambda
                      ((g$con$8726$bP4ck
                         g$outerk$8727$bP4ck
                         g$clause*$8728$bP4ck)
                       (letrec* ((g$f$8729$bP4ck
                                   (case-lambda
                                     ((g$x$8757$bP4ck g$k$8758$bP4ck)
                                      ((case-lambda
                                         ((g$t$8759$bP4ck)
                                          ((case-lambda
                                             ((g$ls/false$8760$bP4ck)
                                              (if g$ls/false$8760$bP4ck
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8761$bP4ck
                                                       g$p$8762$bP4ck)
                                                     ((case-lambda
                                                        ((g$t$8763$bP4ck)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8763$bP4ck
                                                               g$e$8761$bP4ck))
                                                           (list
                                                             'if
                                                             g$t$8763$bP4ck
                                                             (list
                                                               g$p$8762$bP4ck
                                                               g$t$8763$bP4ck)
                                                             g$k$8758$bP4ck))))
                                                      (gensym))))
                                                  g$ls/false$8760$bP4ck)
                                                ((case-lambda
                                                   ((g$t$8764$bP4ck)
                                                    ((case-lambda
                                                       ((g$ls/false$8765$bP4ck)
                                                        (if g$ls/false$8765$bP4ck
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8766$bP4ck)
                                                               ((case-lambda
                                                                  ((g$t$8767$bP4ck)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8767$bP4ck
                                                                         g$e$8766$bP4ck))
                                                                     (list
                                                                       'if
                                                                       g$t$8767$bP4ck
                                                                       g$t$8767$bP4ck
                                                                       g$k$8758$bP4ck))))
                                                                (gensym))))
                                                            g$ls/false$8765$bP4ck)
                                                          ((case-lambda
                                                             ((g$t$8768$bP4ck)
                                                              ((case-lambda
                                                                 ((g$ls/false$8769$bP4ck)
                                                                  (if g$ls/false$8769$bP4ck
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8770$bP4ck
                                                                           g$v$8771$bP4ck
                                                                           g$v*$8772$bP4ck)
                                                                         (list
                                                                           'if
                                                                           g$e$8770$bP4ck
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8771$bP4ck
                                                                               g$v*$8772$bP4ck))
                                                                           g$k$8758$bP4ck)))
                                                                      g$ls/false$8769$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$t$8773$bP4ck)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8774$bP4ck)
                                                                            (if g$ls/false$8774$bP4ck
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$8096$bP4ck
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8757$bP4ck)))
                                                                                g$ls/false$8774$bP4ck)
                                                                              (g$syntax-violation$8096$bP4ck
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8773$bP4ck))))
                                                                         (g$syntax-dispatch$7984$bP4ck
                                                                           g$t$8773$bP4ck
                                                                           '_))))
                                                                     g$t$8768$bP4ck))))
                                                               (g$syntax-dispatch$7984$bP4ck
                                                                 g$t$8768$bP4ck
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8764$bP4ck))))
                                                     (g$syntax-dispatch$7984$bP4ck
                                                       g$t$8764$bP4ck
                                                       '(any)))))
                                                 g$t$8759$bP4ck))))
                                           (g$syntax-dispatch$7984$bP4ck
                                             g$t$8759$bP4ck
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8757$bP4ck))))
                                 (g$f*$8730$bP4ck
                                   (case-lambda
                                     ((g$x*$8737$bP4ck)
                                      ((case-lambda
                                         ((g$t$8738$bP4ck)
                                          ((case-lambda
                                             ((g$ls/false$8739$bP4ck)
                                              (if g$ls/false$8739$bP4ck
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8726$bP4ck)
                                                       '#t)))
                                                  g$ls/false$8739$bP4ck)
                                                ((case-lambda
                                                   ((g$t$8740$bP4ck)
                                                    ((case-lambda
                                                       ((g$ls/false$8741$bP4ck)
                                                        (if g$ls/false$8741$bP4ck
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8742$bP4ck
                                                                 g$e*$8743$bP4ck)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8742$bP4ck
                                                                     g$e*$8743$bP4ck))
                                                                 '#f)))
                                                            g$ls/false$8741$bP4ck)
                                                          ((case-lambda
                                                             ((g$t$8744$bP4ck)
                                                              ((case-lambda
                                                                 ((g$ls/false$8745$bP4ck)
                                                                  (if g$ls/false$8745$bP4ck
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8746$bP4ck
                                                                           g$cls*$8747$bP4ck)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8730$bP4ck
                                                                                g$cls*$8747$bP4ck)))
                                                                           (case-lambda
                                                                             ((g$e$8750$bP4ck
                                                                                g$g$8751$bP4ck)
                                                                              ((case-lambda
                                                                                 ((g$g$8752$bP4ck
                                                                                    g$e$8753$bP4ck)
                                                                                  (values
                                                                                    (g$f$8729$bP4ck
                                                                                      g$cls$8746$bP4ck
                                                                                      g$e$8753$bP4ck)
                                                                                    g$g$8752$bP4ck)))
                                                                               g$g$8751$bP4ck
                                                                               g$e$8750$bP4ck))))))
                                                                      g$ls/false$8745$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$t$8754$bP4ck)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8755$bP4ck)
                                                                            (if g$ls/false$8755$bP4ck
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8756$bP4ck)
                                                                                   (g$syntax-violation$8096$bP4ck
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8756$bP4ck)))
                                                                                g$ls/false$8755$bP4ck)
                                                                              (g$syntax-violation$8096$bP4ck
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8754$bP4ck))))
                                                                         (g$syntax-dispatch$7984$bP4ck
                                                                           g$t$8754$bP4ck
                                                                           'any))))
                                                                     g$t$8744$bP4ck))))
                                                               (g$syntax-dispatch$7984$bP4ck
                                                                 g$t$8744$bP4ck
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8740$bP4ck))))
                                                     (g$syntax-dispatch$7984$bP4ck
                                                       g$t$8740$bP4ck
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8738$bP4ck))))
                                           (g$syntax-dispatch$7984$bP4ck
                                             g$t$8738$bP4ck
                                             '()))))
                                       g$x*$8737$bP4ck)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8730$bP4ck g$clause*$8728$bP4ck)))
                           (case-lambda
                             ((g$code$8733$bP4ck g$raisek$8734$bP4ck)
                              ((case-lambda
                                 ((g$raisek$8735$bP4ck g$code$8736$bP4ck)
                                  (if g$raisek$8735$bP4ck
                                    (list g$outerk$8727$bP4ck g$code$8736$bP4ck)
                                    g$code$8736$bP4ck)))
                               g$raisek$8734$bP4ck
                               g$code$8733$bP4ck)))))))))
          ((case-lambda
             ((g$t$8715$bP4ck)
              ((case-lambda
                 ((g$ls/false$8716$bP4ck)
                  (if (if g$ls/false$8716$bP4ck
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8717$bP4ck
                                 g$clause*$8718$bP4ck
                                 g$b$8719$bP4ck
                                 g$b*$8720$bP4ck)
                               (g$id?$7706$bP4ck g$con$8717$bP4ck)))
                            g$ls/false$8716$bP4ck))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8721$bP4ck
                           g$clause*$8722$bP4ck
                           g$b$8723$bP4ck
                           g$b*$8724$bP4ck)
                         ((case-lambda
                            ((g$outerk$8725$bP4ck)
                             (g$bless$7947$bP4ck
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8725$bP4ck)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8721$bP4ck)
                                           (g$gen-clauses$8714$bP4ck
                                             g$con$8721$bP4ck
                                             g$outerk$8725$bP4ck
                                             g$clause*$8722$bP4ck))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8723$bP4ck
                                                 g$b*$8724$bP4ck))))))))))))
                          (gensym))))
                      g$ls/false$8716$bP4ck)
                    (g$syntax-violation$8096$bP4ck
                      '#f
                      '"invalid syntax"
                      g$t$8715$bP4ck))))
               (g$syntax-dispatch$7984$bP4ck
                 g$t$8715$bP4ck
                 '(_ (any . each-any) any . each-any)))))
           g$x$8713$bP4ck)))))
   (g$define-enumeration-macro$7960$bP4ck
     g$define-enumeration-macro$11463$bP4ck
     (case-lambda
       ((g$stx$8775$bP4ck)
        (letrec* ((g$set?$8776$bP4ck
                    (case-lambda
                      ((g$x$8789$bP4ck)
                       ((case-lambda
                          ((g$t$8790$bP4ck)
                           (if g$t$8790$bP4ck
                             g$t$8790$bP4ck
                             (begin
                               '#f
                               (if (not (g$memq$5055$bP4ck
                                          (car g$x$8789$bP4ck)
                                          (cdr g$x$8789$bP4ck)))
                                 (begin
                                   '#f
                                   (g$set?$8776$bP4ck (cdr g$x$8789$bP4ck)))
                                 '#f)))))
                        (null? g$x$8789$bP4ck)))))
                  (g$remove-dups$8777$bP4ck
                    (case-lambda
                      ((g$ls$8788$bP4ck)
                       (if (null? g$ls$8788$bP4ck)
                         '()
                         (cons
                           (car g$ls$8788$bP4ck)
                           (g$remove-dups$8777$bP4ck
                             (g$remq$5070$bP4ck
                               (car g$ls$8788$bP4ck)
                               (cdr g$ls$8788$bP4ck)))))))))
          ((case-lambda
             ((g$t$8778$bP4ck)
              ((case-lambda
                 ((g$ls/false$8779$bP4ck)
                  (if (if g$ls/false$8779$bP4ck
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8780$bP4ck
                                 g$id*$8781$bP4ck
                                 g$maker$8782$bP4ck)
                               (if (g$id?$7706$bP4ck g$name$8780$bP4ck)
                                 (if (g$id?$7706$bP4ck g$maker$8782$bP4ck)
                                   (begin
                                     '#f
                                     (g$for-all$5061$bP4ck
                                       g$id?$7706$bP4ck
                                       g$id*$8781$bP4ck))
                                   '#f)
                                 '#f)))
                            g$ls/false$8779$bP4ck))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8783$bP4ck g$id*$8784$bP4ck g$maker$8785$bP4ck)
                         ((case-lambda
                            ((g$name*$8786$bP4ck g$mk$8787$bP4ck)
                             (g$bless$7947$bP4ck
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8787$bP4ck
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8786$bP4ck))))
                                 (list
                                   'define-syntax
                                   g$name$8783$bP4ck
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8786$bP4ck))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8783$bP4ck)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8785$bP4ck
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8785$bP4ck)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8786$bP4ck))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8785$bP4ck)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8787$bP4ck
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8777$bP4ck
                            (g$syntax->datum$8099$bP4ck g$id*$8784$bP4ck))
                          (gensym))))
                      g$ls/false$8779$bP4ck)
                    (g$syntax-violation$8096$bP4ck
                      '#f
                      '"invalid syntax"
                      g$t$8778$bP4ck))))
               (g$syntax-dispatch$7984$bP4ck
                 g$t$8778$bP4ck
                 '(_ any each-any any)))))
           g$stx$8775$bP4ck)))))
   (g$time-macro$7961$bP4ck
     g$time-macro$11464$bP4ck
     (case-lambda
       ((g$stx$8791$bP4ck)
        ((case-lambda
           ((g$t$8792$bP4ck)
            ((case-lambda
               ((g$ls/false$8793$bP4ck)
                (if g$ls/false$8793$bP4ck
                  (apply
                    (case-lambda
                      ((g$expr$8794$bP4ck)
                       ((case-lambda
                          ((g$str$8795$bP4ck)
                           (g$bless$7947$bP4ck
                             (list
                               'time-it
                               g$str$8795$bP4ck
                               (list 'lambda '() g$expr$8794$bP4ck)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6336$bP4ck)))
                          (case-lambda
                            ((g$p$8798$bP4ck g$e$8799$bP4ck)
                             ((case-lambda
                                ((g$e$8800$bP4ck g$p$8801$bP4ck)
                                 (begin
                                   (write
                                     (g$syntax->datum$8099$bP4ck
                                       g$expr$8794$bP4ck)
                                     g$p$8801$bP4ck)
                                   (g$e$8800$bP4ck))))
                              g$e$8799$bP4ck
                              g$p$8798$bP4ck)))))))
                    g$ls/false$8793$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8792$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8792$bP4ck '(_ any)))))
         g$stx$8791$bP4ck))))
   (g$delay-macro$7962$bP4ck
     g$delay-macro$11465$bP4ck
     (case-lambda
       ((g$stx$8802$bP4ck)
        ((case-lambda
           ((g$t$8803$bP4ck)
            ((case-lambda
               ((g$ls/false$8804$bP4ck)
                (if g$ls/false$8804$bP4ck
                  (apply
                    (case-lambda
                      ((g$expr$8805$bP4ck)
                       (g$bless$7947$bP4ck
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8805$bP4ck)))))
                    g$ls/false$8804$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8803$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8803$bP4ck '(_ any)))))
         g$stx$8802$bP4ck))))
   (g$assert-macro$7963$bP4ck
     g$assert-macro$11466$bP4ck
     (case-lambda
       ((g$stx$8806$bP4ck)
        ((case-lambda
           ((g$t$8807$bP4ck)
            ((case-lambda
               ((g$ls/false$8808$bP4ck)
                (if g$ls/false$8808$bP4ck
                  (apply
                    (case-lambda
                      ((g$expr$8809$bP4ck)
                       ((case-lambda
                          ((g$pos$8810$bP4ck)
                           (g$bless$7947$bP4ck
                             (list
                               'unless
                               g$expr$8809$bP4ck
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8809$bP4ck)
                                 (list 'quote g$pos$8810$bP4ck))))))
                        ((case-lambda
                           ((g$t$8811$bP4ck)
                            (if g$t$8811$bP4ck
                              g$t$8811$bP4ck
                              (begin
                                '#f
                                (g$expression-position$8091$bP4ck
                                  g$expr$8809$bP4ck)))))
                         (g$expression-position$8091$bP4ck g$stx$8806$bP4ck)))))
                    g$ls/false$8808$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8807$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8807$bP4ck '(_ any)))))
         g$stx$8806$bP4ck))))
   (g$endianness-macro$7964$bP4ck
     g$endianness-macro$11467$bP4ck
     (case-lambda
       ((g$stx$8812$bP4ck)
        ((case-lambda
           ((g$t$8813$bP4ck)
            ((case-lambda
               ((g$ls/false$8814$bP4ck)
                (if g$ls/false$8814$bP4ck
                  (apply
                    (case-lambda
                      ((g$e$8815$bP4ck)
                       ((case-lambda
                          ((g$t$8816$bP4ck)
                           (if (g$memv$5056$bP4ck g$t$8816$bP4ck '(little))
                             (g$bless$7947$bP4ck ''little)
                             (if (g$memv$5056$bP4ck g$t$8816$bP4ck '(big))
                               (g$bless$7947$bP4ck ''big)
                               (g$syntax-violation$8096$bP4ck
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8812$bP4ck)))))
                        (g$syntax->datum$8099$bP4ck g$e$8815$bP4ck))))
                    g$ls/false$8814$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8813$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8813$bP4ck '(_ any)))))
         g$stx$8812$bP4ck))))
   (g$identifier-syntax-macro$7965$bP4ck
     g$identifier-syntax-macro$11468$bP4ck
     (case-lambda
       ((g$stx$8817$bP4ck)
        ((case-lambda
           ((g$t$8818$bP4ck)
            ((case-lambda
               ((g$ls/false$8819$bP4ck)
                (if g$ls/false$8819$bP4ck
                  (apply
                    (case-lambda
                      ((g$expr$8820$bP4ck)
                       (g$bless$7947$bP4ck
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8820$bP4ck))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8820$bP4ck)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8819$bP4ck)
                  ((case-lambda
                     ((g$t$8821$bP4ck)
                      ((case-lambda
                         ((g$ls/false$8822$bP4ck)
                          (if (if g$ls/false$8822$bP4ck
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8823$bP4ck
                                         g$expr1$8824$bP4ck
                                         g$id2$8825$bP4ck
                                         g$expr2$8826$bP4ck
                                         g$expr3$8827$bP4ck)
                                       (if (g$id?$7706$bP4ck g$id1$8823$bP4ck)
                                         (if (g$id?$7706$bP4ck g$id2$8825$bP4ck)
                                           (begin
                                             '#f
                                             (g$id?$7706$bP4ck
                                               g$expr2$8826$bP4ck))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8822$bP4ck))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8828$bP4ck
                                   g$expr1$8829$bP4ck
                                   g$id2$8830$bP4ck
                                   g$expr2$8831$bP4ck
                                   g$expr3$8832$bP4ck)
                                 (g$bless$7947$bP4ck
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8829$bP4ck))
                                         (list
                                           (list 'set! 'id g$expr2$8831$bP4ck)
                                           (list 'syntax g$expr3$8832$bP4ck))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8829$bP4ck
                                               '(e* ...))))))))))
                              g$ls/false$8822$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$8821$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$8821$bP4ck
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8818$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8818$bP4ck '(_ any)))))
         g$stx$8817$bP4ck))))
   (g$do-macro$7966$bP4ck
     g$do-macro$11469$bP4ck
     (case-lambda
       ((g$stx$8833$bP4ck)
        (letrec* ((g$bind$8834$bP4ck
                    (case-lambda
                      ((g$x$8846$bP4ck)
                       ((case-lambda
                          ((g$t$8847$bP4ck)
                           ((case-lambda
                              ((g$ls/false$8848$bP4ck)
                               (if g$ls/false$8848$bP4ck
                                 (apply
                                   (case-lambda
                                     ((g$x$8849$bP4ck g$init$8850$bP4ck)
                                      (list
                                        g$x$8849$bP4ck
                                        g$init$8850$bP4ck
                                        g$x$8849$bP4ck)))
                                   g$ls/false$8848$bP4ck)
                                 ((case-lambda
                                    ((g$t$8851$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$8852$bP4ck)
                                         (if g$ls/false$8852$bP4ck
                                           (apply
                                             (case-lambda
                                               ((g$x$8853$bP4ck
                                                  g$init$8854$bP4ck
                                                  g$step$8855$bP4ck)
                                                (list
                                                  g$x$8853$bP4ck
                                                  g$init$8854$bP4ck
                                                  g$step$8855$bP4ck)))
                                             g$ls/false$8852$bP4ck)
                                           ((case-lambda
                                              ((g$t$8856$bP4ck)
                                               ((case-lambda
                                                  ((g$ls/false$8857$bP4ck)
                                                   (if g$ls/false$8857$bP4ck
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$8096$bP4ck
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8833$bP4ck)))
                                                       g$ls/false$8857$bP4ck)
                                                     (g$syntax-violation$8096$bP4ck
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8856$bP4ck))))
                                                (g$syntax-dispatch$7984$bP4ck
                                                  g$t$8856$bP4ck
                                                  '_))))
                                            g$t$8851$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$8851$bP4ck
                                        '(any any any)))))
                                  g$t$8847$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$8847$bP4ck
                              '(any any)))))
                        g$x$8846$bP4ck)))))
          ((case-lambda
             ((g$t$8835$bP4ck)
              ((case-lambda
                 ((g$ls/false$8836$bP4ck)
                  (if g$ls/false$8836$bP4ck
                    (apply
                      (case-lambda
                        ((g$binding*$8837$bP4ck
                           g$test$8838$bP4ck
                           g$expr*$8839$bP4ck
                           g$command*$8840$bP4ck)
                         ((case-lambda
                            ((g$t$8841$bP4ck)
                             ((case-lambda
                                ((g$ls/false$8842$bP4ck)
                                 (if g$ls/false$8842$bP4ck
                                   (apply
                                     (case-lambda
                                       ((g$x*$8843$bP4ck
                                          g$init*$8844$bP4ck
                                          g$step*$8845$bP4ck)
                                        (if (g$valid-bound-ids?$7711$bP4ck
                                              g$x*$8843$bP4ck)
                                          (g$bless$7947$bP4ck
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8843$bP4ck
                                                    (list
                                                      'if
                                                      g$test$8838$bP4ck
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8839$bP4ck))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8840$bP4ck
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8845$bP4ck))))))))
                                              (cons 'loop g$init*$8844$bP4ck)))
                                          (g$syntax-violation$8096$bP4ck
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8833$bP4ck))))
                                     g$ls/false$8842$bP4ck)
                                   (g$syntax-violation$8096$bP4ck
                                     '#f
                                     '"invalid syntax"
                                     g$t$8841$bP4ck))))
                              (g$syntax-dispatch$7984$bP4ck
                                g$t$8841$bP4ck
                                '#(each (any any any))))))
                          (g$map$5063$bP4ck
                            g$bind$8834$bP4ck
                            g$binding*$8837$bP4ck))))
                      g$ls/false$8836$bP4ck)
                    (g$syntax-violation$8096$bP4ck
                      '#f
                      '"invalid syntax"
                      g$t$8835$bP4ck))))
               (g$syntax-dispatch$7984$bP4ck
                 g$t$8835$bP4ck
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8833$bP4ck)))))
   (g$let*-macro$7967$bP4ck
     g$let*-macro$11470$bP4ck
     (case-lambda
       ((g$stx$8858$bP4ck)
        ((case-lambda
           ((g$t$8859$bP4ck)
            ((case-lambda
               ((g$ls/false$8860$bP4ck)
                (if (if g$ls/false$8860$bP4ck
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8861$bP4ck
                               g$rhs*$8862$bP4ck
                               g$b$8863$bP4ck
                               g$b*$8864$bP4ck)
                             (g$for-all$5061$bP4ck
                               g$id?$7706$bP4ck
                               g$lhs*$8861$bP4ck)))
                          g$ls/false$8860$bP4ck))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8865$bP4ck
                         g$rhs*$8866$bP4ck
                         g$b$8867$bP4ck
                         g$b*$8868$bP4ck)
                       (g$bless$7947$bP4ck
                         ((letrec ((g$f$8869$bP4ck
                                     (case-lambda
                                       ((g$x*$8870$bP4ck)
                                        (if (null? g$x*$8870$bP4ck)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8867$bP4ck
                                                g$b*$8868$bP4ck)))
                                          (if (null? (cdr g$x*$8870$bP4ck))
                                            (cons
                                              'let
                                              (cons
                                                (list (car g$x*$8870$bP4ck))
                                                (cons
                                                  g$b$8867$bP4ck
                                                  g$b*$8868$bP4ck)))
                                            (list
                                              'let
                                              (list (car g$x*$8870$bP4ck))
                                              (g$f$8869$bP4ck
                                                (cdr g$x*$8870$bP4ck)))))))))
                            g$f$8869$bP4ck)
                          (g$map$5063$bP4ck
                            list
                            g$lhs*$8865$bP4ck
                            g$rhs*$8866$bP4ck)))))
                    g$ls/false$8860$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8859$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8859$bP4ck
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8858$bP4ck))))
   (g$or-macro$7968$bP4ck
     g$or-macro$11471$bP4ck
     (case-lambda
       ((g$stx$8871$bP4ck)
        ((case-lambda
           ((g$t$8872$bP4ck)
            ((case-lambda
               ((g$ls/false$8873$bP4ck)
                (if g$ls/false$8873$bP4ck
                  (apply (case-lambda (() '#f)) g$ls/false$8873$bP4ck)
                  ((case-lambda
                     ((g$t$8874$bP4ck)
                      ((case-lambda
                         ((g$ls/false$8875$bP4ck)
                          (if g$ls/false$8875$bP4ck
                            (apply
                              (case-lambda
                                ((g$e$8876$bP4ck g$e*$8877$bP4ck)
                                 (g$bless$7947$bP4ck
                                   ((letrec ((g$f$8878$bP4ck
                                               (case-lambda
                                                 ((g$e$8879$bP4ck
                                                    g$e*$8880$bP4ck)
                                                  (if (null? g$e*$8880$bP4ck)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8879$bP4ck)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8879$bP4ck))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8878$bP4ck
                                                          (car g$e*$8880$bP4ck)
                                                          (cdr g$e*$8880$bP4ck)))))))))
                                      g$f$8878$bP4ck)
                                    g$e$8876$bP4ck
                                    g$e*$8877$bP4ck))))
                              g$ls/false$8875$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$8874$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$8874$bP4ck
                         '(_ any . each-any)))))
                   g$t$8872$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8872$bP4ck '(_)))))
         g$stx$8871$bP4ck))))
   (g$and-macro$7969$bP4ck
     g$and-macro$11472$bP4ck
     (case-lambda
       ((g$stx$8881$bP4ck)
        ((case-lambda
           ((g$t$8882$bP4ck)
            ((case-lambda
               ((g$ls/false$8883$bP4ck)
                (if g$ls/false$8883$bP4ck
                  (apply (case-lambda (() '#t)) g$ls/false$8883$bP4ck)
                  ((case-lambda
                     ((g$t$8884$bP4ck)
                      ((case-lambda
                         ((g$ls/false$8885$bP4ck)
                          (if g$ls/false$8885$bP4ck
                            (apply
                              (case-lambda
                                ((g$e$8886$bP4ck g$e*$8887$bP4ck)
                                 (g$bless$7947$bP4ck
                                   ((letrec ((g$f$8888$bP4ck
                                               (case-lambda
                                                 ((g$e$8889$bP4ck
                                                    g$e*$8890$bP4ck)
                                                  (if (null? g$e*$8890$bP4ck)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8889$bP4ck)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8889$bP4ck
                                                        (cons
                                                          (g$f$8888$bP4ck
                                                            (car g$e*$8890$bP4ck)
                                                            (cdr g$e*$8890$bP4ck))
                                                          '(#f)))))))))
                                      g$f$8888$bP4ck)
                                    g$e$8886$bP4ck
                                    g$e*$8887$bP4ck))))
                              g$ls/false$8885$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$8884$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$8884$bP4ck
                         '(_ any . each-any)))))
                   g$t$8882$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8882$bP4ck '(_)))))
         g$stx$8881$bP4ck))))
   (g$cond-macro$7970$bP4ck
     g$cond-macro$11473$bP4ck
     (case-lambda
       ((g$stx$8891$bP4ck)
        ((case-lambda
           ((g$t$8892$bP4ck)
            ((case-lambda
               ((g$ls/false$8893$bP4ck)
                (if g$ls/false$8893$bP4ck
                  (apply
                    (case-lambda
                      ((g$cls$8894$bP4ck g$cls*$8895$bP4ck)
                       (g$bless$7947$bP4ck
                         ((letrec ((g$f$8896$bP4ck
                                     (case-lambda
                                       ((g$cls$8897$bP4ck g$cls*$8898$bP4ck)
                                        (if (null? g$cls*$8898$bP4ck)
                                          ((case-lambda
                                             ((g$t$8899$bP4ck)
                                              ((case-lambda
                                                 ((g$ls/false$8900$bP4ck)
                                                  (if g$ls/false$8900$bP4ck
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8901$bP4ck
                                                           g$e*$8902$bP4ck)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8901$bP4ck
                                                             g$e*$8902$bP4ck))))
                                                      g$ls/false$8900$bP4ck)
                                                    ((case-lambda
                                                       ((g$t$8903$bP4ck)
                                                        ((case-lambda
                                                           ((g$ls/false$8904$bP4ck)
                                                            (if g$ls/false$8904$bP4ck
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8905$bP4ck
                                                                     g$p$8906$bP4ck)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8905$bP4ck))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8906$bP4ck
                                                                         '(t))))))
                                                                g$ls/false$8904$bP4ck)
                                                              ((case-lambda
                                                                 ((g$t$8907$bP4ck)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8908$bP4ck)
                                                                      (if g$ls/false$8908$bP4ck
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8909$bP4ck)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8909$bP4ck
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8908$bP4ck)
                                                                        ((case-lambda
                                                                           ((g$t$8910$bP4ck)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8911$bP4ck)
                                                                                (if g$ls/false$8911$bP4ck
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8912$bP4ck
                                                                                         g$e*$8913$bP4ck)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8912$bP4ck
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8913$bP4ck))))
                                                                                    g$ls/false$8911$bP4ck)
                                                                                  ((case-lambda
                                                                                     ((g$t$8914$bP4ck)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8915$bP4ck)
                                                                                          (if g$ls/false$8915$bP4ck
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8096$bP4ck
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8891$bP4ck)))
                                                                                              g$ls/false$8915$bP4ck)
                                                                                            (g$syntax-violation$8096$bP4ck
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8914$bP4ck))))
                                                                                       (g$syntax-dispatch$7984$bP4ck
                                                                                         g$t$8914$bP4ck
                                                                                         '_))))
                                                                                   g$t$8910$bP4ck))))
                                                                             (g$syntax-dispatch$7984$bP4ck
                                                                               g$t$8910$bP4ck
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8907$bP4ck))))
                                                                   (g$syntax-dispatch$7984$bP4ck
                                                                     g$t$8907$bP4ck
                                                                     '(any)))))
                                                               g$t$8903$bP4ck))))
                                                         (g$syntax-dispatch$7984$bP4ck
                                                           g$t$8903$bP4ck
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8899$bP4ck))))
                                               (g$syntax-dispatch$7984$bP4ck
                                                 g$t$8899$bP4ck
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8897$bP4ck)
                                          ((case-lambda
                                             ((g$t$8916$bP4ck)
                                              ((case-lambda
                                                 ((g$ls/false$8917$bP4ck)
                                                  (if g$ls/false$8917$bP4ck
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8918$bP4ck
                                                           g$e*$8919$bP4ck)
                                                         (g$syntax-violation$8096$bP4ck
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8891$bP4ck)))
                                                      g$ls/false$8917$bP4ck)
                                                    ((case-lambda
                                                       ((g$t$8920$bP4ck)
                                                        ((case-lambda
                                                           ((g$ls/false$8921$bP4ck)
                                                            (if g$ls/false$8921$bP4ck
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8922$bP4ck
                                                                     g$p$8923$bP4ck)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8922$bP4ck))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8923$bP4ck
                                                                         '(t))
                                                                       (g$f$8896$bP4ck
                                                                         (car g$cls*$8898$bP4ck)
                                                                         (cdr g$cls*$8898$bP4ck))))))
                                                                g$ls/false$8921$bP4ck)
                                                              ((case-lambda
                                                                 ((g$t$8924$bP4ck)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8925$bP4ck)
                                                                      (if g$ls/false$8925$bP4ck
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8926$bP4ck)
                                                                             (list
                                                                               'or
                                                                               g$e$8926$bP4ck
                                                                               (g$f$8896$bP4ck
                                                                                 (car g$cls*$8898$bP4ck)
                                                                                 (cdr g$cls*$8898$bP4ck)))))
                                                                          g$ls/false$8925$bP4ck)
                                                                        ((case-lambda
                                                                           ((g$t$8927$bP4ck)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8928$bP4ck)
                                                                                (if g$ls/false$8928$bP4ck
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8929$bP4ck
                                                                                         g$e*$8930$bP4ck)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8929$bP4ck
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8930$bP4ck)
                                                                                         (g$f$8896$bP4ck
                                                                                           (car g$cls*$8898$bP4ck)
                                                                                           (cdr g$cls*$8898$bP4ck)))))
                                                                                    g$ls/false$8928$bP4ck)
                                                                                  ((case-lambda
                                                                                     ((g$t$8931$bP4ck)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8932$bP4ck)
                                                                                          (if g$ls/false$8932$bP4ck
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8096$bP4ck
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8891$bP4ck)))
                                                                                              g$ls/false$8932$bP4ck)
                                                                                            (g$syntax-violation$8096$bP4ck
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8931$bP4ck))))
                                                                                       (g$syntax-dispatch$7984$bP4ck
                                                                                         g$t$8931$bP4ck
                                                                                         '_))))
                                                                                   g$t$8927$bP4ck))))
                                                                             (g$syntax-dispatch$7984$bP4ck
                                                                               g$t$8927$bP4ck
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8924$bP4ck))))
                                                                   (g$syntax-dispatch$7984$bP4ck
                                                                     g$t$8924$bP4ck
                                                                     '(any)))))
                                                               g$t$8920$bP4ck))))
                                                         (g$syntax-dispatch$7984$bP4ck
                                                           g$t$8920$bP4ck
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8916$bP4ck))))
                                               (g$syntax-dispatch$7984$bP4ck
                                                 g$t$8916$bP4ck
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8897$bP4ck))))))
                            g$f$8896$bP4ck)
                          g$cls$8894$bP4ck
                          g$cls*$8895$bP4ck))))
                    g$ls/false$8893$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8892$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8892$bP4ck
               '(_ any . each-any)))))
         g$stx$8891$bP4ck))))
   (g$do-include$7971$bP4ck
     g$do-include$11474$bP4ck
     (case-lambda
       ((g$stx$8933$bP4ck g$id$8934$bP4ck g$filename$8935$bP4ck)
        ((case-lambda
           ((g$filename$8936$bP4ck)
            (begin
              (if (not (if (string? g$filename$8936$bP4ck)
                         (begin '#f (g$id?$7706$bP4ck g$id$8934$bP4ck))
                         '#f))
                (g$syntax-violation$8096$bP4ck
                  '#f
                  '"invalid syntax"
                  g$stx$8933$bP4ck)
                (void))
              (cons
                (g$bless$7947$bP4ck 'begin)
                (g$with-input-from-file$6385$bP4ck
                  g$filename$8936$bP4ck
                  (case-lambda
                    (()
                     ((letrec ((g$f$8937$bP4ck
                                 (case-lambda
                                   ((g$ls$8938$bP4ck)
                                    ((case-lambda
                                       ((g$x$8939$bP4ck)
                                        (if (eof-object? g$x$8939$bP4ck)
                                          (reverse g$ls$8938$bP4ck)
                                          (g$f$8937$bP4ck
                                            (cons
                                              (g$datum->stx$7689$bP4ck
                                                g$id$8934$bP4ck
                                                g$x$8939$bP4ck)
                                              g$ls$8938$bP4ck)))))
                                     (read-annotated))))))
                        g$f$8937$bP4ck)
                      '()))))))))
         (g$stx->datum$7717$bP4ck g$filename$8935$bP4ck)))))
   (g$include-macro$7972$bP4ck
     g$include-macro$11475$bP4ck
     (case-lambda
       ((g$e$8940$bP4ck)
        ((case-lambda
           ((g$t$8941$bP4ck)
            ((case-lambda
               ((g$ls/false$8942$bP4ck)
                (if g$ls/false$8942$bP4ck
                  (apply
                    (case-lambda
                      ((g$id$8943$bP4ck g$filename$8944$bP4ck)
                       (g$do-include$7971$bP4ck
                         g$e$8940$bP4ck
                         g$id$8943$bP4ck
                         g$filename$8944$bP4ck)))
                    g$ls/false$8942$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8941$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8941$bP4ck '(any any)))))
         g$e$8940$bP4ck))))
   (g$include-into-macro$7973$bP4ck
     g$include-into-macro$11476$bP4ck
     (case-lambda
       ((g$e$8945$bP4ck)
        ((case-lambda
           ((g$t$8946$bP4ck)
            ((case-lambda
               ((g$ls/false$8947$bP4ck)
                (if g$ls/false$8947$bP4ck
                  (apply
                    (case-lambda
                      ((g$id$8948$bP4ck g$filename$8949$bP4ck)
                       (g$do-include$7971$bP4ck
                         g$e$8945$bP4ck
                         g$id$8948$bP4ck
                         g$filename$8949$bP4ck)))
                    g$ls/false$8947$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8946$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$8946$bP4ck '(_ any any)))))
         g$e$8945$bP4ck))))
   (g$syntax-rules-macro$7974$bP4ck
     g$syntax-rules-macro$11477$bP4ck
     (case-lambda
       ((g$e$8950$bP4ck)
        ((case-lambda
           ((g$t$8951$bP4ck)
            ((case-lambda
               ((g$ls/false$8952$bP4ck)
                (if g$ls/false$8952$bP4ck
                  (apply
                    (case-lambda
                      ((g$lits$8953$bP4ck g$pat*$8954$bP4ck g$tmp*$8955$bP4ck)
                       (begin
                         (g$verify-literals$7987$bP4ck
                           g$lits$8953$bP4ck
                           g$e$8950$bP4ck)
                         (g$bless$7947$bP4ck
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8953$bP4ck
                                   (g$map$5063$bP4ck
                                     (case-lambda
                                       ((g$pat$8956$bP4ck g$tmp$8957$bP4ck)
                                        ((case-lambda
                                           ((g$t$8958$bP4ck)
                                            ((case-lambda
                                               ((g$ls/false$8959$bP4ck)
                                                (if g$ls/false$8959$bP4ck
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$8960$bP4ck)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$8960$bP4ck)
                                                         (list
                                                           'syntax
                                                           g$tmp$8957$bP4ck))))
                                                    g$ls/false$8959$bP4ck)
                                                  ((case-lambda
                                                     ((g$t$8961$bP4ck)
                                                      ((case-lambda
                                                         ((g$ls/false$8962$bP4ck)
                                                          (if g$ls/false$8962$bP4ck
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$8096$bP4ck
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$8950$bP4ck
                                                                   g$pat$8956$bP4ck)))
                                                              g$ls/false$8962$bP4ck)
                                                            (g$syntax-violation$8096$bP4ck
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$8961$bP4ck))))
                                                       (g$syntax-dispatch$7984$bP4ck
                                                         g$t$8961$bP4ck
                                                         '_))))
                                                   g$t$8958$bP4ck))))
                                             (g$syntax-dispatch$7984$bP4ck
                                               g$t$8958$bP4ck
                                               '(_ . any)))))
                                         g$pat$8956$bP4ck)))
                                     g$pat*$8954$bP4ck
                                     g$tmp*$8955$bP4ck)))))))))
                    g$ls/false$8952$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$8951$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$8951$bP4ck
               '(_ each-any . #(each (any any)))))))
         g$e$8950$bP4ck))))
   (g$quasiquote-macro$7975$bP4ck
     g$quasiquote-macro$11478$bP4ck
     ((case-lambda
        (()
         (letrec* ((g$datum$8963$bP4ck
                     (case-lambda
                       ((g$x$9094$bP4ck)
                        (list
                          (g$scheme-stx$7927$bP4ck 'quote)
                          (g$mkstx$7694$bP4ck g$x$9094$bP4ck '() '() '())))))
                   (g$quasicons*$8979$bP4ck
                     (case-lambda
                       ((g$x$9090$bP4ck g$y$9091$bP4ck)
                        ((letrec ((g$f$9092$bP4ck
                                    (case-lambda
                                      ((g$x$9093$bP4ck)
                                       (if (null? g$x$9093$bP4ck)
                                         g$y$9091$bP4ck
                                         (g$quasicons$8980$bP4ck
                                           (car g$x$9093$bP4ck)
                                           (g$f$9092$bP4ck
                                             (cdr g$x$9093$bP4ck))))))))
                           g$f$9092$bP4ck)
                         g$x$9090$bP4ck))))
                   (g$quasicons$8980$bP4ck
                     (case-lambda
                       ((g$x$9071$bP4ck g$y$9072$bP4ck)
                        ((case-lambda
                           ((g$t$9073$bP4ck)
                            ((case-lambda
                               ((g$ls/false$9074$bP4ck)
                                (if g$ls/false$9074$bP4ck
                                  (apply
                                    (case-lambda
                                      ((g$dy$9075$bP4ck)
                                       ((case-lambda
                                          ((g$t$9076$bP4ck)
                                           ((case-lambda
                                              ((g$ls/false$9077$bP4ck)
                                               (if g$ls/false$9077$bP4ck
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$9078$bP4ck)
                                                      (list
                                                        (g$scheme-stx$7927$bP4ck
                                                          'quote)
                                                        (cons
                                                          g$dx$9078$bP4ck
                                                          g$dy$9075$bP4ck))))
                                                   g$ls/false$9077$bP4ck)
                                                 ((case-lambda
                                                    ((g$t$9079$bP4ck)
                                                     ((case-lambda
                                                        ((g$ls/false$9080$bP4ck)
                                                         (if g$ls/false$9080$bP4ck
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$9081$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9082$bP4ck)
                                                                        (if g$ls/false$9082$bP4ck
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7927$bP4ck
                                                                                   'list)
                                                                                 g$x$9071$bP4ck)))
                                                                            g$ls/false$9082$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$t$9083$bP4ck)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9084$bP4ck)
                                                                                  (if g$ls/false$9084$bP4ck
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7927$bP4ck
                                                                                             'cons)
                                                                                           g$x$9071$bP4ck
                                                                                           g$y$9072$bP4ck)))
                                                                                      g$ls/false$9084$bP4ck)
                                                                                    (g$syntax-violation$8096$bP4ck
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9083$bP4ck))))
                                                                               (g$syntax-dispatch$7984$bP4ck
                                                                                 g$t$9083$bP4ck
                                                                                 '_))))
                                                                           g$t$9081$bP4ck))))
                                                                     (g$syntax-dispatch$7984$bP4ck
                                                                       g$t$9081$bP4ck
                                                                       '()))))
                                                                 g$dy$9075$bP4ck)))
                                                             g$ls/false$9080$bP4ck)
                                                           (g$syntax-violation$8096$bP4ck
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$9079$bP4ck))))
                                                      (g$syntax-dispatch$7984$bP4ck
                                                        g$t$9079$bP4ck
                                                        '_))))
                                                  g$t$9076$bP4ck))))
                                            (g$syntax-dispatch$7984$bP4ck
                                              g$t$9076$bP4ck
                                              '(#(scheme-id quote) any)))))
                                        g$x$9071$bP4ck)))
                                    g$ls/false$9074$bP4ck)
                                  ((case-lambda
                                     ((g$t$9085$bP4ck)
                                      ((case-lambda
                                         ((g$ls/false$9086$bP4ck)
                                          (if g$ls/false$9086$bP4ck
                                            (apply
                                              (case-lambda
                                                ((g$stuff$9087$bP4ck)
                                                 (g$cons*$5065$bP4ck
                                                   (g$scheme-stx$7927$bP4ck
                                                     'list)
                                                   g$x$9071$bP4ck
                                                   g$stuff$9087$bP4ck)))
                                              g$ls/false$9086$bP4ck)
                                            ((case-lambda
                                               ((g$t$9088$bP4ck)
                                                ((case-lambda
                                                   ((g$ls/false$9089$bP4ck)
                                                    (if g$ls/false$9089$bP4ck
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7927$bP4ck
                                                               'cons)
                                                             g$x$9071$bP4ck
                                                             g$y$9072$bP4ck)))
                                                        g$ls/false$9089$bP4ck)
                                                      (g$syntax-violation$8096$bP4ck
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$9088$bP4ck))))
                                                 (g$syntax-dispatch$7984$bP4ck
                                                   g$t$9088$bP4ck
                                                   '_))))
                                             g$t$9085$bP4ck))))
                                       (g$syntax-dispatch$7984$bP4ck
                                         g$t$9085$bP4ck
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$9073$bP4ck))))
                             (g$syntax-dispatch$7984$bP4ck
                               g$t$9073$bP4ck
                               '(#(scheme-id quote) any)))))
                         g$y$9072$bP4ck))))
                   (g$quasiappend$8981$bP4ck
                     (case-lambda
                       ((g$x$9058$bP4ck g$y$9059$bP4ck)
                        ((case-lambda
                           ((g$ls$9060$bP4ck)
                            (if (null? g$ls$9060$bP4ck)
                              (list (g$scheme-stx$7927$bP4ck 'quote) '())
                              (if (null? (cdr g$ls$9060$bP4ck))
                                (car g$ls$9060$bP4ck)
                                (g$cons*$5065$bP4ck
                                  (g$scheme-stx$7927$bP4ck 'append)
                                  g$ls$9060$bP4ck)))))
                         ((letrec ((g$f$9061$bP4ck
                                     (case-lambda
                                       ((g$x$9062$bP4ck)
                                        (if (null? g$x$9062$bP4ck)
                                          ((case-lambda
                                             ((g$t$9063$bP4ck)
                                              ((case-lambda
                                                 ((g$ls/false$9064$bP4ck)
                                                  (if g$ls/false$9064$bP4ck
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$9064$bP4ck)
                                                    ((case-lambda
                                                       ((g$t$9065$bP4ck)
                                                        ((case-lambda
                                                           ((g$ls/false$9066$bP4ck)
                                                            (if g$ls/false$9066$bP4ck
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$9059$bP4ck)))
                                                                g$ls/false$9066$bP4ck)
                                                              (g$syntax-violation$8096$bP4ck
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9065$bP4ck))))
                                                         (g$syntax-dispatch$7984$bP4ck
                                                           g$t$9065$bP4ck
                                                           '_))))
                                                     g$t$9063$bP4ck))))
                                               (g$syntax-dispatch$7984$bP4ck
                                                 g$t$9063$bP4ck
                                                 '(#(scheme-id quote) ())))))
                                           g$y$9059$bP4ck)
                                          ((case-lambda
                                             ((g$t$9067$bP4ck)
                                              ((case-lambda
                                                 ((g$ls/false$9068$bP4ck)
                                                  (if g$ls/false$9068$bP4ck
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$9061$bP4ck
                                                           (cdr g$x$9062$bP4ck))))
                                                      g$ls/false$9068$bP4ck)
                                                    ((case-lambda
                                                       ((g$t$9069$bP4ck)
                                                        ((case-lambda
                                                           ((g$ls/false$9070$bP4ck)
                                                            (if g$ls/false$9070$bP4ck
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$9062$bP4ck)
                                                                     (g$f$9061$bP4ck
                                                                       (cdr g$x$9062$bP4ck)))))
                                                                g$ls/false$9070$bP4ck)
                                                              (g$syntax-violation$8096$bP4ck
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9069$bP4ck))))
                                                         (g$syntax-dispatch$7984$bP4ck
                                                           g$t$9069$bP4ck
                                                           '_))))
                                                     g$t$9067$bP4ck))))
                                               (g$syntax-dispatch$7984$bP4ck
                                                 g$t$9067$bP4ck
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$9062$bP4ck)))))))
                            g$f$9061$bP4ck)
                          g$x$9058$bP4ck)))))
                   (g$quasivector$8982$bP4ck
                     (case-lambda
                       ((g$x$9033$bP4ck)
                        ((case-lambda
                           ((g$pat-x$9034$bP4ck)
                            ((case-lambda
                               ((g$t$9035$bP4ck)
                                ((case-lambda
                                   ((g$ls/false$9036$bP4ck)
                                    (if g$ls/false$9036$bP4ck
                                      (apply
                                        (case-lambda
                                          ((g$x*$9037$bP4ck)
                                           (list
                                             (g$scheme-stx$7927$bP4ck 'quote)
                                             (list->vector g$x*$9037$bP4ck))))
                                        g$ls/false$9036$bP4ck)
                                      ((case-lambda
                                         ((g$t$9038$bP4ck)
                                          ((case-lambda
                                             ((g$ls/false$9039$bP4ck)
                                              (if g$ls/false$9039$bP4ck
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$9040$bP4ck
                                                                 (case-lambda
                                                                   ((g$x$9041$bP4ck
                                                                      g$k$9042$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$t$9043$bP4ck)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9044$bP4ck)
                                                                            (if g$ls/false$9044$bP4ck
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$9045$bP4ck)
                                                                                   (g$k$9042$bP4ck
                                                                                     (g$map$5063$bP4ck
                                                                                       (case-lambda
                                                                                         ((g$x$9046$bP4ck)
                                                                                          (list
                                                                                            (g$scheme-stx$7927$bP4ck
                                                                                              'quote)
                                                                                            g$x$9046$bP4ck)))
                                                                                       g$x*$9045$bP4ck))))
                                                                                g$ls/false$9044$bP4ck)
                                                                              ((case-lambda
                                                                                 ((g$t$9047$bP4ck)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9048$bP4ck)
                                                                                      (if g$ls/false$9048$bP4ck
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$9049$bP4ck)
                                                                                             (g$k$9042$bP4ck
                                                                                               g$x*$9049$bP4ck)))
                                                                                          g$ls/false$9048$bP4ck)
                                                                                        ((case-lambda
                                                                                           ((g$t$9050$bP4ck)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9051$bP4ck)
                                                                                                (if g$ls/false$9051$bP4ck
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$9052$bP4ck
                                                                                                         g$y$9053$bP4ck)
                                                                                                       (g$f$9040$bP4ck
                                                                                                         g$y$9053$bP4ck
                                                                                                         (case-lambda
                                                                                                           ((g$ls$9054$bP4ck)
                                                                                                            (g$k$9042$bP4ck
                                                                                                              (cons
                                                                                                                g$x$9052$bP4ck
                                                                                                                g$ls$9054$bP4ck)))))))
                                                                                                    g$ls/false$9051$bP4ck)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9055$bP4ck)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9056$bP4ck)
                                                                                                          (if g$ls/false$9056$bP4ck
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7927$bP4ck
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$9034$bP4ck)))
                                                                                                              g$ls/false$9056$bP4ck)
                                                                                                            (g$syntax-violation$8096$bP4ck
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9055$bP4ck))))
                                                                                                       (g$syntax-dispatch$7984$bP4ck
                                                                                                         g$t$9055$bP4ck
                                                                                                         '_))))
                                                                                                   g$t$9050$bP4ck))))
                                                                                             (g$syntax-dispatch$7984$bP4ck
                                                                                               g$t$9050$bP4ck
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$9047$bP4ck))))
                                                                                   (g$syntax-dispatch$7984$bP4ck
                                                                                     g$t$9047$bP4ck
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$9043$bP4ck))))
                                                                         (g$syntax-dispatch$7984$bP4ck
                                                                           g$t$9043$bP4ck
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$9041$bP4ck)))))
                                                        g$f$9040$bP4ck)
                                                      g$x$9033$bP4ck
                                                      (case-lambda
                                                        ((g$ls$9057$bP4ck)
                                                         (g$cons*$5065$bP4ck
                                                           (g$scheme-stx$7927$bP4ck
                                                             'vector)
                                                           g$ls$9057$bP4ck))))))
                                                  g$ls/false$9039$bP4ck)
                                                (g$syntax-violation$8096$bP4ck
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$9038$bP4ck))))
                                           (g$syntax-dispatch$7984$bP4ck
                                             g$t$9038$bP4ck
                                             '_))))
                                       g$t$9035$bP4ck))))
                                 (g$syntax-dispatch$7984$bP4ck
                                   g$t$9035$bP4ck
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$9034$bP4ck)))
                         g$x$9033$bP4ck))))
                   (g$vquasi$8983$bP4ck
                     (case-lambda
                       ((g$p$9016$bP4ck g$lev$9017$bP4ck)
                        ((case-lambda
                           ((g$t$9018$bP4ck)
                            ((case-lambda
                               ((g$ls/false$9019$bP4ck)
                                (if g$ls/false$9019$bP4ck
                                  (apply
                                    (case-lambda
                                      ((g$p$9020$bP4ck g$q$9021$bP4ck)
                                       ((case-lambda
                                          ((g$t$9022$bP4ck)
                                           ((case-lambda
                                              ((g$ls/false$9023$bP4ck)
                                               (if g$ls/false$9023$bP4ck
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9024$bP4ck)
                                                      (if (= g$lev$9017$bP4ck
                                                             '0)
                                                        (g$quasicons*$8979$bP4ck
                                                          g$p$9024$bP4ck
                                                          (g$vquasi$8983$bP4ck
                                                            g$q$9021$bP4ck
                                                            g$lev$9017$bP4ck))
                                                        (g$quasicons$8980$bP4ck
                                                          (g$quasicons$8980$bP4ck
                                                            (g$datum$8963$bP4ck
                                                              'unquote)
                                                            (g$quasi$8984$bP4ck
                                                              g$p$9024$bP4ck
                                                              (- g$lev$9017$bP4ck
                                                                 '1)))
                                                          (g$vquasi$8983$bP4ck
                                                            g$q$9021$bP4ck
                                                            g$lev$9017$bP4ck)))))
                                                   g$ls/false$9023$bP4ck)
                                                 ((case-lambda
                                                    ((g$t$9025$bP4ck)
                                                     ((case-lambda
                                                        ((g$ls/false$9026$bP4ck)
                                                         (if g$ls/false$9026$bP4ck
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$9027$bP4ck)
                                                                (if (= g$lev$9017$bP4ck
                                                                       '0)
                                                                  (g$quasiappend$8981$bP4ck
                                                                    g$p$9027$bP4ck
                                                                    (g$vquasi$8983$bP4ck
                                                                      g$q$9021$bP4ck
                                                                      g$lev$9017$bP4ck))
                                                                  (g$quasicons$8980$bP4ck
                                                                    (g$quasicons$8980$bP4ck
                                                                      (g$datum$8963$bP4ck
                                                                        'unquote-splicing)
                                                                      (g$quasi$8984$bP4ck
                                                                        g$p$9027$bP4ck
                                                                        (- g$lev$9017$bP4ck
                                                                           '1)))
                                                                    (g$vquasi$8983$bP4ck
                                                                      g$q$9021$bP4ck
                                                                      g$lev$9017$bP4ck)))))
                                                             g$ls/false$9026$bP4ck)
                                                           ((case-lambda
                                                              ((g$t$9028$bP4ck)
                                                               ((case-lambda
                                                                  ((g$ls/false$9029$bP4ck)
                                                                   (if g$ls/false$9029$bP4ck
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$9030$bP4ck)
                                                                          (g$quasicons$8980$bP4ck
                                                                            (g$quasi$8984$bP4ck
                                                                              g$p$9030$bP4ck
                                                                              g$lev$9017$bP4ck)
                                                                            (g$vquasi$8983$bP4ck
                                                                              g$q$9021$bP4ck
                                                                              g$lev$9017$bP4ck))))
                                                                       g$ls/false$9029$bP4ck)
                                                                     (g$syntax-violation$8096$bP4ck
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$9028$bP4ck))))
                                                                (g$syntax-dispatch$7984$bP4ck
                                                                  g$t$9028$bP4ck
                                                                  'any))))
                                                            g$t$9025$bP4ck))))
                                                      (g$syntax-dispatch$7984$bP4ck
                                                        g$t$9025$bP4ck
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$9022$bP4ck))))
                                            (g$syntax-dispatch$7984$bP4ck
                                              g$t$9022$bP4ck
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$9020$bP4ck)))
                                    g$ls/false$9019$bP4ck)
                                  ((case-lambda
                                     ((g$t$9031$bP4ck)
                                      ((case-lambda
                                         ((g$ls/false$9032$bP4ck)
                                          (if g$ls/false$9032$bP4ck
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7927$bP4ck
                                                     'quote)
                                                   '())))
                                              g$ls/false$9032$bP4ck)
                                            (g$syntax-violation$8096$bP4ck
                                              '#f
                                              '"invalid syntax"
                                              g$t$9031$bP4ck))))
                                       (g$syntax-dispatch$7984$bP4ck
                                         g$t$9031$bP4ck
                                         '()))))
                                   g$t$9018$bP4ck))))
                             (g$syntax-dispatch$7984$bP4ck
                               g$t$9018$bP4ck
                               '(any . any)))))
                         g$p$9016$bP4ck))))
                   (g$quasi$8984$bP4ck
                     (case-lambda
                       ((g$p$8989$bP4ck g$lev$8990$bP4ck)
                        ((case-lambda
                           ((g$t$8991$bP4ck)
                            ((case-lambda
                               ((g$ls/false$8992$bP4ck)
                                (if g$ls/false$8992$bP4ck
                                  (apply
                                    (case-lambda
                                      ((g$p$8993$bP4ck)
                                       (if (= g$lev$8990$bP4ck '0)
                                         g$p$8993$bP4ck
                                         (g$quasicons$8980$bP4ck
                                           (g$datum$8963$bP4ck 'unquote)
                                           (g$quasi$8984$bP4ck
                                             (list g$p$8993$bP4ck)
                                             (- g$lev$8990$bP4ck '1))))))
                                    g$ls/false$8992$bP4ck)
                                  ((case-lambda
                                     ((g$t$8994$bP4ck)
                                      ((case-lambda
                                         ((g$ls/false$8995$bP4ck)
                                          (if g$ls/false$8995$bP4ck
                                            (apply
                                              (case-lambda
                                                ((g$p$8996$bP4ck g$q$8997$bP4ck)
                                                 (if (= g$lev$8990$bP4ck '0)
                                                   (g$quasicons*$8979$bP4ck
                                                     g$p$8996$bP4ck
                                                     (g$quasi$8984$bP4ck
                                                       g$q$8997$bP4ck
                                                       g$lev$8990$bP4ck))
                                                   (g$quasicons$8980$bP4ck
                                                     (g$quasicons$8980$bP4ck
                                                       (g$datum$8963$bP4ck
                                                         'unquote)
                                                       (g$quasi$8984$bP4ck
                                                         g$p$8996$bP4ck
                                                         (- g$lev$8990$bP4ck
                                                            '1)))
                                                     (g$quasi$8984$bP4ck
                                                       g$q$8997$bP4ck
                                                       g$lev$8990$bP4ck)))))
                                              g$ls/false$8995$bP4ck)
                                            ((case-lambda
                                               ((g$t$8998$bP4ck)
                                                ((case-lambda
                                                   ((g$ls/false$8999$bP4ck)
                                                    (if g$ls/false$8999$bP4ck
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$9000$bP4ck
                                                             g$q$9001$bP4ck)
                                                           (if (= g$lev$8990$bP4ck
                                                                  '0)
                                                             (g$quasiappend$8981$bP4ck
                                                               g$p$9000$bP4ck
                                                               (g$quasi$8984$bP4ck
                                                                 g$q$9001$bP4ck
                                                                 g$lev$8990$bP4ck))
                                                             (g$quasicons$8980$bP4ck
                                                               (g$quasicons$8980$bP4ck
                                                                 (g$datum$8963$bP4ck
                                                                   'unquote-splicing)
                                                                 (g$quasi$8984$bP4ck
                                                                   g$p$9000$bP4ck
                                                                   (- g$lev$8990$bP4ck
                                                                      '1)))
                                                               (g$quasi$8984$bP4ck
                                                                 g$q$9001$bP4ck
                                                                 g$lev$8990$bP4ck)))))
                                                        g$ls/false$8999$bP4ck)
                                                      ((case-lambda
                                                         ((g$t$9002$bP4ck)
                                                          ((case-lambda
                                                             ((g$ls/false$9003$bP4ck)
                                                              (if g$ls/false$9003$bP4ck
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$9004$bP4ck)
                                                                     (g$quasicons$8980$bP4ck
                                                                       (g$datum$8963$bP4ck
                                                                         'quasiquote)
                                                                       (g$quasi$8984$bP4ck
                                                                         (list
                                                                           g$p$9004$bP4ck)
                                                                         (+ g$lev$8990$bP4ck
                                                                            '1)))))
                                                                  g$ls/false$9003$bP4ck)
                                                                ((case-lambda
                                                                   ((g$t$9005$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9006$bP4ck)
                                                                        (if g$ls/false$9006$bP4ck
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9007$bP4ck
                                                                                 g$q$9008$bP4ck)
                                                                               (g$quasicons$8980$bP4ck
                                                                                 (g$quasi$8984$bP4ck
                                                                                   g$p$9007$bP4ck
                                                                                   g$lev$8990$bP4ck)
                                                                                 (g$quasi$8984$bP4ck
                                                                                   g$q$9008$bP4ck
                                                                                   g$lev$8990$bP4ck))))
                                                                            g$ls/false$9006$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$t$9009$bP4ck)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9010$bP4ck)
                                                                                  (if (if g$ls/false$9010$bP4ck
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$9011$bP4ck)
                                                                                               (not (g$stx?$7678$bP4ck
                                                                                                      g$x$9011$bP4ck))))
                                                                                            g$ls/false$9010$bP4ck))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$9012$bP4ck)
                                                                                         (g$quasivector$8982$bP4ck
                                                                                           (g$vquasi$8983$bP4ck
                                                                                             g$x$9012$bP4ck
                                                                                             g$lev$8990$bP4ck))))
                                                                                      g$ls/false$9010$bP4ck)
                                                                                    ((case-lambda
                                                                                       ((g$t$9013$bP4ck)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9014$bP4ck)
                                                                                            (if g$ls/false$9014$bP4ck
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9015$bP4ck)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7927$bP4ck
                                                                                                       'quote)
                                                                                                     g$p$9015$bP4ck)))
                                                                                                g$ls/false$9014$bP4ck)
                                                                                              (g$syntax-violation$8096$bP4ck
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9013$bP4ck))))
                                                                                         (g$syntax-dispatch$7984$bP4ck
                                                                                           g$t$9013$bP4ck
                                                                                           'any))))
                                                                                     g$t$9009$bP4ck))))
                                                                               (g$syntax-dispatch$7984$bP4ck
                                                                                 g$t$9009$bP4ck
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9005$bP4ck))))
                                                                     (g$syntax-dispatch$7984$bP4ck
                                                                       g$t$9005$bP4ck
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9002$bP4ck))))
                                                           (g$syntax-dispatch$7984$bP4ck
                                                             g$t$9002$bP4ck
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8998$bP4ck))))
                                                 (g$syntax-dispatch$7984$bP4ck
                                                   g$t$8998$bP4ck
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8994$bP4ck))))
                                       (g$syntax-dispatch$7984$bP4ck
                                         g$t$8994$bP4ck
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8991$bP4ck))))
                             (g$syntax-dispatch$7984$bP4ck
                               g$t$8991$bP4ck
                               '(#(scheme-id unquote) any)))))
                         g$p$8989$bP4ck)))))
           (case-lambda
             ((g$x$8985$bP4ck)
              ((case-lambda
                 ((g$t$8986$bP4ck)
                  ((case-lambda
                     ((g$ls/false$8987$bP4ck)
                      (if g$ls/false$8987$bP4ck
                        (apply
                          (case-lambda
                            ((g$e$8988$bP4ck)
                             (g$quasi$8984$bP4ck g$e$8988$bP4ck '0)))
                          g$ls/false$8987$bP4ck)
                        (g$syntax-violation$8096$bP4ck
                          '#f
                          '"invalid syntax"
                          g$t$8986$bP4ck))))
                   (g$syntax-dispatch$7984$bP4ck g$t$8986$bP4ck '(_ any)))))
               g$x$8985$bP4ck))))))))
   (g$quasisyntax-macro$7976$bP4ck
     g$quasisyntax-macro$11479$bP4ck
     ((case-lambda
        (()
         (letrec* ((g$quasi$9095$bP4ck
                     (case-lambda
                       ((g$p$9109$bP4ck g$lev$9110$bP4ck)
                        ((case-lambda
                           ((g$t$9111$bP4ck)
                            ((case-lambda
                               ((g$ls/false$9112$bP4ck)
                                (if g$ls/false$9112$bP4ck
                                  (apply
                                    (case-lambda
                                      ((g$p$9113$bP4ck)
                                       (if (= g$lev$9110$bP4ck '0)
                                         ((case-lambda
                                            ((g$g$9114$bP4ck)
                                             (values
                                               (list g$g$9114$bP4ck)
                                               (list g$p$9113$bP4ck)
                                               g$g$9114$bP4ck)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$9095$bP4ck
                                                g$p$9113$bP4ck
                                                (- g$lev$9110$bP4ck '1))))
                                           (case-lambda
                                             ((g$lhs*$9118$bP4ck
                                                g$rhs*$9119$bP4ck
                                                g$p$9120$bP4ck)
                                              ((case-lambda
                                                 ((g$p$9121$bP4ck
                                                    g$rhs*$9122$bP4ck
                                                    g$lhs*$9123$bP4ck)
                                                  (values
                                                    g$lhs*$9123$bP4ck
                                                    g$rhs*$9122$bP4ck
                                                    (list
                                                      'unsyntax
                                                      g$p$9121$bP4ck))))
                                               g$p$9120$bP4ck
                                               g$rhs*$9119$bP4ck
                                               g$lhs*$9118$bP4ck)))))))
                                    g$ls/false$9112$bP4ck)
                                  ((case-lambda
                                     ((g$t$9124$bP4ck)
                                      ((case-lambda
                                         ((g$ls/false$9125$bP4ck)
                                          (if (if g$ls/false$9125$bP4ck
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$9110$bP4ck '0)))
                                                    g$ls/false$9125$bP4ck))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$8096$bP4ck
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$9109$bP4ck)))
                                              g$ls/false$9125$bP4ck)
                                            ((case-lambda
                                               ((g$t$9126$bP4ck)
                                                ((case-lambda
                                                   ((g$ls/false$9127$bP4ck)
                                                    (if g$ls/false$9127$bP4ck
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$9128$bP4ck
                                                             g$q$9129$bP4ck)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$9095$bP4ck
                                                                  g$q$9129$bP4ck
                                                                  g$lev$9110$bP4ck)))
                                                             (case-lambda
                                                               ((g$lhs*$9133$bP4ck
                                                                  g$rhs*$9134$bP4ck
                                                                  g$q$9135$bP4ck)
                                                                ((case-lambda
                                                                   ((g$q$9136$bP4ck
                                                                      g$rhs*$9137$bP4ck
                                                                      g$lhs*$9138$bP4ck)
                                                                    (if (= g$lev$9110$bP4ck
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$9139$bP4ck)
                                                                          (values
                                                                            (append
                                                                              g$g*$9139$bP4ck
                                                                              g$lhs*$9138$bP4ck)
                                                                            (append
                                                                              g$p*$9128$bP4ck
                                                                              g$rhs*$9137$bP4ck)
                                                                            (append
                                                                              g$g*$9139$bP4ck
                                                                              g$q$9136$bP4ck))))
                                                                       (g$map$5063$bP4ck
                                                                         (case-lambda
                                                                           ((g$x$9140$bP4ck)
                                                                            (gensym)))
                                                                         g$p*$9128$bP4ck))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$9095$bP4ck
                                                                             g$p*$9128$bP4ck
                                                                             (- g$lev$9110$bP4ck
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9144$bP4ck
                                                                             g$rhs2*$9145$bP4ck
                                                                             g$p*$9146$bP4ck)
                                                                           ((case-lambda
                                                                              ((g$p*$9147$bP4ck
                                                                                 g$rhs2*$9148$bP4ck
                                                                                 g$lhs2*$9149$bP4ck)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9149$bP4ck
                                                                                   g$lhs*$9138$bP4ck)
                                                                                 (append
                                                                                   g$rhs2*$9148$bP4ck
                                                                                   g$rhs*$9137$bP4ck)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$9147$bP4ck)
                                                                                   g$q$9136$bP4ck))))
                                                                            g$p*$9146$bP4ck
                                                                            g$rhs2*$9145$bP4ck
                                                                            g$lhs2*$9144$bP4ck)))))))
                                                                 g$q$9135$bP4ck
                                                                 g$rhs*$9134$bP4ck
                                                                 g$lhs*$9133$bP4ck))))))
                                                        g$ls/false$9127$bP4ck)
                                                      ((case-lambda
                                                         ((g$t$9150$bP4ck)
                                                          ((case-lambda
                                                             ((g$ls/false$9151$bP4ck)
                                                              (if g$ls/false$9151$bP4ck
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$9152$bP4ck
                                                                       g$q$9153$bP4ck)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$9095$bP4ck
                                                                            g$q$9153$bP4ck
                                                                            g$lev$9110$bP4ck)))
                                                                       (case-lambda
                                                                         ((g$lhs*$9157$bP4ck
                                                                            g$rhs*$9158$bP4ck
                                                                            g$q$9159$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$q$9160$bP4ck
                                                                                g$rhs*$9161$bP4ck
                                                                                g$lhs*$9162$bP4ck)
                                                                              (if (= g$lev$9110$bP4ck
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$9163$bP4ck)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$5063$bP4ck
                                                                                          (case-lambda
                                                                                            ((g$g$9164$bP4ck)
                                                                                             (cons
                                                                                               g$g$9164$bP4ck
                                                                                               '(...))))
                                                                                          g$g*$9163$bP4ck)
                                                                                        g$lhs*$9162$bP4ck)
                                                                                      (append
                                                                                        g$p*$9152$bP4ck
                                                                                        g$rhs*$9161$bP4ck)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$5063$bP4ck
                                                                                            (case-lambda
                                                                                              ((g$g$9165$bP4ck)
                                                                                               (cons
                                                                                                 g$g$9165$bP4ck
                                                                                                 '(...))))
                                                                                            g$g*$9163$bP4ck))
                                                                                        g$q$9160$bP4ck))))
                                                                                 (g$map$5063$bP4ck
                                                                                   (case-lambda
                                                                                     ((g$x$9166$bP4ck)
                                                                                      (gensym)))
                                                                                   g$p*$9152$bP4ck))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$9095$bP4ck
                                                                                       g$p*$9152$bP4ck
                                                                                       (- g$lev$9110$bP4ck
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$9170$bP4ck
                                                                                       g$rhs2*$9171$bP4ck
                                                                                       g$p*$9172$bP4ck)
                                                                                     ((case-lambda
                                                                                        ((g$p*$9173$bP4ck
                                                                                           g$rhs2*$9174$bP4ck
                                                                                           g$lhs2*$9175$bP4ck)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$9175$bP4ck
                                                                                             g$lhs*$9162$bP4ck)
                                                                                           (append
                                                                                             g$rhs2*$9174$bP4ck
                                                                                             g$rhs*$9161$bP4ck)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$9173$bP4ck)
                                                                                             g$q$9160$bP4ck))))
                                                                                      g$p*$9172$bP4ck
                                                                                      g$rhs2*$9171$bP4ck
                                                                                      g$lhs2*$9170$bP4ck)))))))
                                                                           g$q$9159$bP4ck
                                                                           g$rhs*$9158$bP4ck
                                                                           g$lhs*$9157$bP4ck))))))
                                                                  g$ls/false$9151$bP4ck)
                                                                ((case-lambda
                                                                   ((g$t$9176$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9177$bP4ck)
                                                                        (if (if g$ls/false$9177$bP4ck
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$9110$bP4ck
                                                                                        '0)))
                                                                                  g$ls/false$9177$bP4ck))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$8096$bP4ck
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$9109$bP4ck)))
                                                                            g$ls/false$9177$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$t$9178$bP4ck)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9179$bP4ck)
                                                                                  (if g$ls/false$9179$bP4ck
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9180$bP4ck)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$9095$bP4ck
                                                                                                g$p$9180$bP4ck
                                                                                                (+ g$lev$9110$bP4ck
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9184$bP4ck
                                                                                                g$rhs*$9185$bP4ck
                                                                                                g$p$9186$bP4ck)
                                                                                              ((case-lambda
                                                                                                 ((g$p$9187$bP4ck
                                                                                                    g$rhs*$9188$bP4ck
                                                                                                    g$lhs*$9189$bP4ck)
                                                                                                  (values
                                                                                                    g$lhs*$9189$bP4ck
                                                                                                    g$rhs*$9188$bP4ck
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$9187$bP4ck))))
                                                                                               g$p$9186$bP4ck
                                                                                               g$rhs*$9185$bP4ck
                                                                                               g$lhs*$9184$bP4ck))))))
                                                                                      g$ls/false$9179$bP4ck)
                                                                                    ((case-lambda
                                                                                       ((g$t$9190$bP4ck)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9191$bP4ck)
                                                                                            (if g$ls/false$9191$bP4ck
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9192$bP4ck
                                                                                                     g$q$9193$bP4ck)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$9095$bP4ck
                                                                                                          g$p$9192$bP4ck
                                                                                                          g$lev$9110$bP4ck)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9200$bP4ck
                                                                                                          g$rhs*$9201$bP4ck
                                                                                                          g$p$9202$bP4ck)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$9095$bP4ck
                                                                                                               g$q$9193$bP4ck
                                                                                                               g$lev$9110$bP4ck)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$9203$bP4ck
                                                                                                               g$rhs2*$9204$bP4ck
                                                                                                               g$q$9205$bP4ck)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$9206$bP4ck
                                                                                                                   g$rhs2*$9207$bP4ck
                                                                                                                   g$lhs2*$9208$bP4ck
                                                                                                                   g$p$9209$bP4ck
                                                                                                                   g$rhs*$9210$bP4ck
                                                                                                                   g$lhs*$9211$bP4ck)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$9208$bP4ck
                                                                                                                     g$lhs*$9211$bP4ck)
                                                                                                                   (append
                                                                                                                     g$rhs2*$9207$bP4ck
                                                                                                                     g$rhs*$9210$bP4ck)
                                                                                                                   (cons
                                                                                                                     g$p$9209$bP4ck
                                                                                                                     g$q$9206$bP4ck))))
                                                                                                              g$q$9205$bP4ck
                                                                                                              g$rhs2*$9204$bP4ck
                                                                                                              g$lhs2*$9203$bP4ck
                                                                                                              g$p$9202$bP4ck
                                                                                                              g$rhs*$9201$bP4ck
                                                                                                              g$lhs*$9200$bP4ck)))))))))
                                                                                                g$ls/false$9191$bP4ck)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9212$bP4ck)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9213$bP4ck)
                                                                                                      (if g$ls/false$9213$bP4ck
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$9214$bP4ck)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$9095$bP4ck
                                                                                                                    g$x*$9214$bP4ck
                                                                                                                    g$lev$9110$bP4ck)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$9218$bP4ck
                                                                                                                    g$rhs*$9219$bP4ck
                                                                                                                    g$x*$9220$bP4ck)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$9221$bP4ck
                                                                                                                        g$rhs*$9222$bP4ck
                                                                                                                        g$lhs*$9223$bP4ck)
                                                                                                                      (values
                                                                                                                        g$lhs*$9223$bP4ck
                                                                                                                        g$rhs*$9222$bP4ck
                                                                                                                        (list->vector
                                                                                                                          g$x*$9221$bP4ck))))
                                                                                                                   g$x*$9220$bP4ck
                                                                                                                   g$rhs*$9219$bP4ck
                                                                                                                   g$lhs*$9218$bP4ck))))))
                                                                                                          g$ls/false$9213$bP4ck)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9224$bP4ck)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9225$bP4ck)
                                                                                                                (if g$ls/false$9225$bP4ck
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$9109$bP4ck)))
                                                                                                                    g$ls/false$9225$bP4ck)
                                                                                                                  (g$syntax-violation$8096$bP4ck
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9224$bP4ck))))
                                                                                                             (g$syntax-dispatch$7984$bP4ck
                                                                                                               g$t$9224$bP4ck
                                                                                                               '_))))
                                                                                                         g$t$9212$bP4ck))))
                                                                                                   (g$syntax-dispatch$7984$bP4ck
                                                                                                     g$t$9212$bP4ck
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$9190$bP4ck))))
                                                                                         (g$syntax-dispatch$7984$bP4ck
                                                                                           g$t$9190$bP4ck
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$9178$bP4ck))))
                                                                               (g$syntax-dispatch$7984$bP4ck
                                                                                 g$t$9178$bP4ck
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$9176$bP4ck))))
                                                                     (g$syntax-dispatch$7984$bP4ck
                                                                       g$t$9176$bP4ck
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$9150$bP4ck))))
                                                           (g$syntax-dispatch$7984$bP4ck
                                                             g$t$9150$bP4ck
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$9126$bP4ck))))
                                                 (g$syntax-dispatch$7984$bP4ck
                                                   g$t$9126$bP4ck
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9124$bP4ck))))
                                       (g$syntax-dispatch$7984$bP4ck
                                         g$t$9124$bP4ck
                                         '#(scheme-id unsyntax)))))
                                   g$t$9111$bP4ck))))
                             (g$syntax-dispatch$7984$bP4ck
                               g$t$9111$bP4ck
                               '(#(scheme-id unsyntax) any)))))
                         g$p$9109$bP4ck)))))
           (case-lambda
             ((g$x$9096$bP4ck)
              ((case-lambda
                 ((g$t$9097$bP4ck)
                  ((case-lambda
                     ((g$ls/false$9098$bP4ck)
                      (if g$ls/false$9098$bP4ck
                        (apply
                          (case-lambda
                            ((g$e$9099$bP4ck)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$9095$bP4ck g$e$9099$bP4ck '0)))
                               (case-lambda
                                 ((g$lhs*$9103$bP4ck
                                    g$rhs*$9104$bP4ck
                                    g$v$9105$bP4ck)
                                  ((case-lambda
                                     ((g$v$9106$bP4ck
                                        g$rhs*$9107$bP4ck
                                        g$lhs*$9108$bP4ck)
                                      (g$bless$7947$bP4ck
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$9107$bP4ck)
                                          '()
                                          (list
                                            g$lhs*$9108$bP4ck
                                            (list 'syntax g$v$9106$bP4ck))))))
                                   g$v$9105$bP4ck
                                   g$rhs*$9104$bP4ck
                                   g$lhs*$9103$bP4ck))))))
                          g$ls/false$9098$bP4ck)
                        (g$syntax-violation$8096$bP4ck
                          '#f
                          '"invalid syntax"
                          g$t$9097$bP4ck))))
                   (g$syntax-dispatch$7984$bP4ck g$t$9097$bP4ck '(_ any)))))
               g$x$9096$bP4ck))))))))
   (g$define-struct-macro$7977$bP4ck
     g$define-struct-macro$11480$bP4ck
     (case-lambda
       ((g$stx$9226$bP4ck)
        (g$syntax-violation$8096$bP4ck
          '#f
          '"define-struct not supported"
          g$stx$9226$bP4ck))))
   (g$define-record-type-macro$7978$bP4ck
     g$define-record-type-macro$11481$bP4ck
     (case-lambda
       ((g$x$9227$bP4ck)
        (letrec* ((g$id$9228$bP4ck
                    (case-lambda
                      ((g$ctxt$9480$bP4ck . g$str*$9481$bP4ck)
                       (g$datum->syntax$8098$bP4ck
                         g$ctxt$9480$bP4ck
                         (string->symbol
                           (apply
                             string-append
                             (g$map$5063$bP4ck
                               (case-lambda
                                 ((g$x$9482$bP4ck)
                                  (if (symbol? g$x$9482$bP4ck)
                                    (symbol->string g$x$9482$bP4ck)
                                    (if (string? g$x$9482$bP4ck)
                                      g$x$9482$bP4ck
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$9481$bP4ck)))))))
                  (g$get-record-name$9229$bP4ck
                    (case-lambda
                      ((g$spec$9471$bP4ck)
                       ((case-lambda
                          ((g$t$9472$bP4ck)
                           ((case-lambda
                              ((g$ls/false$9473$bP4ck)
                               (if g$ls/false$9473$bP4ck
                                 (apply
                                   (case-lambda
                                     ((g$foo$9474$bP4ck
                                        g$make-foo$9475$bP4ck
                                        g$foo?$9476$bP4ck)
                                      g$foo$9474$bP4ck))
                                   g$ls/false$9473$bP4ck)
                                 ((case-lambda
                                    ((g$t$9477$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$9478$bP4ck)
                                         (if g$ls/false$9478$bP4ck
                                           (apply
                                             (case-lambda
                                               ((g$foo$9479$bP4ck)
                                                g$foo$9479$bP4ck))
                                             g$ls/false$9478$bP4ck)
                                           (g$syntax-violation$8096$bP4ck
                                             '#f
                                             '"invalid syntax"
                                             g$t$9477$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$9477$bP4ck
                                        'any))))
                                  g$t$9472$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$9472$bP4ck
                              '(any any any)))))
                        g$spec$9471$bP4ck))))
                  (g$get-record-constructor-name$9230$bP4ck
                    (case-lambda
                      ((g$spec$9461$bP4ck)
                       ((case-lambda
                          ((g$t$9462$bP4ck)
                           ((case-lambda
                              ((g$ls/false$9463$bP4ck)
                               (if g$ls/false$9463$bP4ck
                                 (apply
                                   (case-lambda
                                     ((g$foo$9464$bP4ck
                                        g$make-foo$9465$bP4ck
                                        g$foo?$9466$bP4ck)
                                      g$make-foo$9465$bP4ck))
                                   g$ls/false$9463$bP4ck)
                                 ((case-lambda
                                    ((g$t$9467$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$9468$bP4ck)
                                         (if (if g$ls/false$9468$bP4ck
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9469$bP4ck)
                                                      (g$id?$7706$bP4ck
                                                        g$foo$9469$bP4ck)))
                                                   g$ls/false$9468$bP4ck))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9470$bP4ck)
                                                (g$id$9228$bP4ck
                                                  g$foo$9470$bP4ck
                                                  '"make-"
                                                  (g$stx->datum$7717$bP4ck
                                                    g$foo$9470$bP4ck))))
                                             g$ls/false$9468$bP4ck)
                                           (g$syntax-violation$8096$bP4ck
                                             '#f
                                             '"invalid syntax"
                                             g$t$9467$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$9467$bP4ck
                                        'any))))
                                  g$t$9462$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$9462$bP4ck
                              '(any any any)))))
                        g$spec$9461$bP4ck))))
                  (g$get-record-predicate-name$9231$bP4ck
                    (case-lambda
                      ((g$spec$9451$bP4ck)
                       ((case-lambda
                          ((g$t$9452$bP4ck)
                           ((case-lambda
                              ((g$ls/false$9453$bP4ck)
                               (if g$ls/false$9453$bP4ck
                                 (apply
                                   (case-lambda
                                     ((g$foo$9454$bP4ck
                                        g$make-foo$9455$bP4ck
                                        g$foo?$9456$bP4ck)
                                      g$foo?$9456$bP4ck))
                                   g$ls/false$9453$bP4ck)
                                 ((case-lambda
                                    ((g$t$9457$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$9458$bP4ck)
                                         (if (if g$ls/false$9458$bP4ck
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9459$bP4ck)
                                                      (g$id?$7706$bP4ck
                                                        g$foo$9459$bP4ck)))
                                                   g$ls/false$9458$bP4ck))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9460$bP4ck)
                                                (g$id$9228$bP4ck
                                                  g$foo$9460$bP4ck
                                                  (g$stx->datum$7717$bP4ck
                                                    g$foo$9460$bP4ck)
                                                  '"?")))
                                             g$ls/false$9458$bP4ck)
                                           (g$syntax-violation$8096$bP4ck
                                             '#f
                                             '"invalid syntax"
                                             g$t$9457$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$9457$bP4ck
                                        'any))))
                                  g$t$9452$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$9452$bP4ck
                              '(any any any)))))
                        g$spec$9451$bP4ck))))
                  (g$get-clause$9232$bP4ck
                    (case-lambda
                      ((g$id$9442$bP4ck g$ls$9443$bP4ck)
                       ((case-lambda
                          ((g$t$9444$bP4ck)
                           ((case-lambda
                              ((g$ls/false$9445$bP4ck)
                               (if g$ls/false$9445$bP4ck
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9445$bP4ck)
                                 ((case-lambda
                                    ((g$t$9446$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$9447$bP4ck)
                                         (if g$ls/false$9447$bP4ck
                                           (apply
                                             (case-lambda
                                               ((g$x$9448$bP4ck
                                                  g$rest$9449$bP4ck
                                                  g$ls$9450$bP4ck)
                                                (if (g$free-id=?$7710$bP4ck
                                                      (g$bless$7947$bP4ck
                                                        g$id$9442$bP4ck)
                                                      g$x$9448$bP4ck)
                                                  (cons
                                                    g$x$9448$bP4ck
                                                    g$rest$9449$bP4ck)
                                                  (g$get-clause$9232$bP4ck
                                                    g$id$9442$bP4ck
                                                    g$ls$9450$bP4ck))))
                                             g$ls/false$9447$bP4ck)
                                           (g$syntax-violation$8096$bP4ck
                                             '#f
                                             '"invalid syntax"
                                             g$t$9446$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$9446$bP4ck
                                        '((any . any) . any)))))
                                  g$t$9444$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck g$t$9444$bP4ck '()))))
                        g$ls$9443$bP4ck))))
                  (g$foo-rtd-code$9233$bP4ck
                    (case-lambda
                      ((g$name$9401$bP4ck
                         g$clause*$9402$bP4ck
                         g$parent-rtd-code$9403$bP4ck)
                       (letrec* ((g$convert-field-spec*$9404$bP4ck
                                   (case-lambda
                                     ((g$ls$9429$bP4ck)
                                      (list->vector
                                        (g$map$5063$bP4ck
                                          (case-lambda
                                            ((g$x$9430$bP4ck)
                                             ((case-lambda
                                                ((g$t$9431$bP4ck)
                                                 ((case-lambda
                                                    ((g$ls/false$9432$bP4ck)
                                                     (if g$ls/false$9432$bP4ck
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$9433$bP4ck
                                                              g$rest$9434$bP4ck)
                                                            (list
                                                              'mutable
                                                              g$name$9433$bP4ck)))
                                                         g$ls/false$9432$bP4ck)
                                                       ((case-lambda
                                                          ((g$t$9435$bP4ck)
                                                           ((case-lambda
                                                              ((g$ls/false$9436$bP4ck)
                                                               (if g$ls/false$9436$bP4ck
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$9437$bP4ck
                                                                        g$rest$9438$bP4ck)
                                                                      (list
                                                                        'immutable
                                                                        g$name$9437$bP4ck)))
                                                                   g$ls/false$9436$bP4ck)
                                                                 ((case-lambda
                                                                    ((g$t$9439$bP4ck)
                                                                     ((case-lambda
                                                                        ((g$ls/false$9440$bP4ck)
                                                                         (if g$ls/false$9440$bP4ck
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$9441$bP4ck)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$9441$bP4ck)))
                                                                             g$ls/false$9440$bP4ck)
                                                                           (g$syntax-violation$8096$bP4ck
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$9439$bP4ck))))
                                                                      (g$syntax-dispatch$7984$bP4ck
                                                                        g$t$9439$bP4ck
                                                                        'any))))
                                                                  g$t$9435$bP4ck))))
                                                            (g$syntax-dispatch$7984$bP4ck
                                                              g$t$9435$bP4ck
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$9431$bP4ck))))
                                                  (g$syntax-dispatch$7984$bP4ck
                                                    g$t$9431$bP4ck
                                                    '(#(scheme-id mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$9430$bP4ck)))
                                          g$ls$9429$bP4ck))))))
                         ((case-lambda
                            ((g$uid-code$9405$bP4ck
                               g$sealed?$9406$bP4ck
                               g$opaque?$9407$bP4ck
                               g$fields$9408$bP4ck)
                             (g$bless$7947$bP4ck
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9401$bP4ck)
                                 g$parent-rtd-code$9403$bP4ck
                                 g$uid-code$9405$bP4ck
                                 g$sealed?$9406$bP4ck
                                 g$opaque?$9407$bP4ck
                                 g$fields$9408$bP4ck))))
                          ((case-lambda
                             ((g$t$9409$bP4ck)
                              ((case-lambda
                                 ((g$ls/false$9410$bP4ck)
                                  (if g$ls/false$9410$bP4ck
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9410$bP4ck)
                                    ((case-lambda
                                       ((g$t$9411$bP4ck)
                                        ((case-lambda
                                           ((g$ls/false$9412$bP4ck)
                                            (if g$ls/false$9412$bP4ck
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9413$bP4ck)
                                                   (list
                                                     'quote
                                                     g$uid$9413$bP4ck)))
                                                g$ls/false$9412$bP4ck)
                                              ((case-lambda
                                                 ((g$t$9414$bP4ck)
                                                  ((case-lambda
                                                     ((g$ls/false$9415$bP4ck)
                                                      (if g$ls/false$9415$bP4ck
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9415$bP4ck)
                                                        (g$syntax-violation$8096$bP4ck
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9414$bP4ck))))
                                                   (g$syntax-dispatch$7984$bP4ck
                                                     g$t$9414$bP4ck
                                                     '_))))
                                               g$t$9411$bP4ck))))
                                         (g$syntax-dispatch$7984$bP4ck
                                           g$t$9411$bP4ck
                                           '(_ any)))))
                                     g$t$9409$bP4ck))))
                               (g$syntax-dispatch$7984$bP4ck
                                 g$t$9409$bP4ck
                                 '(_)))))
                           (g$get-clause$9232$bP4ck
                             'nongenerative
                             g$clause*$9402$bP4ck))
                          ((case-lambda
                             ((g$t$9416$bP4ck)
                              ((case-lambda
                                 ((g$ls/false$9417$bP4ck)
                                  (if g$ls/false$9417$bP4ck
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9417$bP4ck)
                                    ((case-lambda
                                       ((g$t$9418$bP4ck)
                                        ((case-lambda
                                           ((g$ls/false$9419$bP4ck)
                                            (if g$ls/false$9419$bP4ck
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9419$bP4ck)
                                              (g$syntax-violation$8096$bP4ck
                                                '#f
                                                '"invalid syntax"
                                                g$t$9418$bP4ck))))
                                         (g$syntax-dispatch$7984$bP4ck
                                           g$t$9418$bP4ck
                                           '_))))
                                     g$t$9416$bP4ck))))
                               (g$syntax-dispatch$7984$bP4ck
                                 g$t$9416$bP4ck
                                 '(_ #(atom #t))))))
                           (g$get-clause$9232$bP4ck
                             'sealed
                             g$clause*$9402$bP4ck))
                          ((case-lambda
                             ((g$t$9420$bP4ck)
                              ((case-lambda
                                 ((g$ls/false$9421$bP4ck)
                                  (if g$ls/false$9421$bP4ck
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9421$bP4ck)
                                    ((case-lambda
                                       ((g$t$9422$bP4ck)
                                        ((case-lambda
                                           ((g$ls/false$9423$bP4ck)
                                            (if g$ls/false$9423$bP4ck
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9423$bP4ck)
                                              (g$syntax-violation$8096$bP4ck
                                                '#f
                                                '"invalid syntax"
                                                g$t$9422$bP4ck))))
                                         (g$syntax-dispatch$7984$bP4ck
                                           g$t$9422$bP4ck
                                           '_))))
                                     g$t$9420$bP4ck))))
                               (g$syntax-dispatch$7984$bP4ck
                                 g$t$9420$bP4ck
                                 '(_ #(atom #t))))))
                           (g$get-clause$9232$bP4ck
                             'opaque
                             g$clause*$9402$bP4ck))
                          ((case-lambda
                             ((g$t$9424$bP4ck)
                              ((case-lambda
                                 ((g$ls/false$9425$bP4ck)
                                  (if g$ls/false$9425$bP4ck
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9426$bP4ck)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9404$bP4ck
                                             g$field-spec*$9426$bP4ck))))
                                      g$ls/false$9425$bP4ck)
                                    ((case-lambda
                                       ((g$t$9427$bP4ck)
                                        ((case-lambda
                                           ((g$ls/false$9428$bP4ck)
                                            (if g$ls/false$9428$bP4ck
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9428$bP4ck)
                                              (g$syntax-violation$8096$bP4ck
                                                '#f
                                                '"invalid syntax"
                                                g$t$9427$bP4ck))))
                                         (g$syntax-dispatch$7984$bP4ck
                                           g$t$9427$bP4ck
                                           '_))))
                                     g$t$9424$bP4ck))))
                               (g$syntax-dispatch$7984$bP4ck
                                 g$t$9424$bP4ck
                                 '(_ . each-any)))))
                           (g$get-clause$9232$bP4ck
                             'fields
                             g$clause*$9402$bP4ck)))))))
                  (g$parent-rtd-code$9234$bP4ck
                    (case-lambda
                      ((g$clause*$9389$bP4ck)
                       ((case-lambda
                          ((g$t$9390$bP4ck)
                           ((case-lambda
                              ((g$ls/false$9391$bP4ck)
                               (if g$ls/false$9391$bP4ck
                                 (apply
                                   (case-lambda
                                     ((g$name$9392$bP4ck)
                                      (list
                                        'record-type-descriptor
                                        g$name$9392$bP4ck)))
                                   g$ls/false$9391$bP4ck)
                                 ((case-lambda
                                    ((g$t$9393$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$9394$bP4ck)
                                         (if g$ls/false$9394$bP4ck
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9395$bP4ck)
                                                    ((case-lambda
                                                       ((g$ls/false$9396$bP4ck)
                                                        (if g$ls/false$9396$bP4ck
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9397$bP4ck
                                                                 g$rcd$9398$bP4ck)
                                                               g$rtd$9397$bP4ck))
                                                            g$ls/false$9396$bP4ck)
                                                          ((case-lambda
                                                             ((g$t$9399$bP4ck)
                                                              ((case-lambda
                                                                 ((g$ls/false$9400$bP4ck)
                                                                  (if g$ls/false$9400$bP4ck
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9400$bP4ck)
                                                                    (g$syntax-violation$8096$bP4ck
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9399$bP4ck))))
                                                               (g$syntax-dispatch$7984$bP4ck
                                                                 g$t$9399$bP4ck
                                                                 '#(atom #f)))))
                                                           g$t$9395$bP4ck))))
                                                     (g$syntax-dispatch$7984$bP4ck
                                                       g$t$9395$bP4ck
                                                       '(_ any any)))))
                                                 (g$get-clause$9232$bP4ck
                                                   'parent-rtd
                                                   g$clause*$9389$bP4ck))))
                                             g$ls/false$9394$bP4ck)
                                           (g$syntax-violation$8096$bP4ck
                                             '#f
                                             '"invalid syntax"
                                             g$t$9393$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$9393$bP4ck
                                        '#(atom #f)))))
                                  g$t$9390$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$9390$bP4ck
                              '(_ any)))))
                        (g$get-clause$9232$bP4ck
                          'parent
                          g$clause*$9389$bP4ck)))))
                  (g$parent-rcd-code$9235$bP4ck
                    (case-lambda
                      ((g$clause*$9377$bP4ck)
                       ((case-lambda
                          ((g$t$9378$bP4ck)
                           ((case-lambda
                              ((g$ls/false$9379$bP4ck)
                               (if g$ls/false$9379$bP4ck
                                 (apply
                                   (case-lambda
                                     ((g$name$9380$bP4ck)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9380$bP4ck)))
                                   g$ls/false$9379$bP4ck)
                                 ((case-lambda
                                    ((g$t$9381$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$9382$bP4ck)
                                         (if g$ls/false$9382$bP4ck
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9383$bP4ck)
                                                    ((case-lambda
                                                       ((g$ls/false$9384$bP4ck)
                                                        (if g$ls/false$9384$bP4ck
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9385$bP4ck
                                                                 g$rcd$9386$bP4ck)
                                                               g$rcd$9386$bP4ck))
                                                            g$ls/false$9384$bP4ck)
                                                          ((case-lambda
                                                             ((g$t$9387$bP4ck)
                                                              ((case-lambda
                                                                 ((g$ls/false$9388$bP4ck)
                                                                  (if g$ls/false$9388$bP4ck
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9388$bP4ck)
                                                                    (g$syntax-violation$8096$bP4ck
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9387$bP4ck))))
                                                               (g$syntax-dispatch$7984$bP4ck
                                                                 g$t$9387$bP4ck
                                                                 '#(atom #f)))))
                                                           g$t$9383$bP4ck))))
                                                     (g$syntax-dispatch$7984$bP4ck
                                                       g$t$9383$bP4ck
                                                       '(_ any any)))))
                                                 (g$get-clause$9232$bP4ck
                                                   'parent-rtd
                                                   g$clause*$9377$bP4ck))))
                                             g$ls/false$9382$bP4ck)
                                           (g$syntax-violation$8096$bP4ck
                                             '#f
                                             '"invalid syntax"
                                             g$t$9381$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$9381$bP4ck
                                        '#(atom #f)))))
                                  g$t$9378$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$9378$bP4ck
                              '(_ any)))))
                        (g$get-clause$9232$bP4ck
                          'parent
                          g$clause*$9377$bP4ck)))))
                  (g$foo-rcd-code$9236$bP4ck
                    (case-lambda
                      ((g$clause*$9373$bP4ck
                         g$foo-rtd$9374$bP4ck
                         g$protocol$9375$bP4ck
                         g$parent-rcd-code$9376$bP4ck)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9374$bP4ck
                         g$parent-rcd-code$9376$bP4ck
                         g$protocol$9375$bP4ck))))
                  (g$get-protocol-code$9237$bP4ck
                    (case-lambda
                      ((g$clause*$9367$bP4ck)
                       ((case-lambda
                          ((g$t$9368$bP4ck)
                           ((case-lambda
                              ((g$ls/false$9369$bP4ck)
                               (if g$ls/false$9369$bP4ck
                                 (apply
                                   (case-lambda
                                     ((g$expr$9370$bP4ck) g$expr$9370$bP4ck))
                                   g$ls/false$9369$bP4ck)
                                 ((case-lambda
                                    ((g$t$9371$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$9372$bP4ck)
                                         (if g$ls/false$9372$bP4ck
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9372$bP4ck)
                                           (g$syntax-violation$8096$bP4ck
                                             '#f
                                             '"invalid syntax"
                                             g$t$9371$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$9371$bP4ck
                                        '_))))
                                  g$t$9368$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$9368$bP4ck
                              '(_ any)))))
                        (g$get-clause$9232$bP4ck
                          'protocol
                          g$clause*$9367$bP4ck)))))
                  (g$get-fields$9238$bP4ck
                    (case-lambda
                      ((g$clause*$9358$bP4ck)
                       ((case-lambda
                          ((g$t$9359$bP4ck)
                           ((case-lambda
                              ((g$ls/false$9360$bP4ck)
                               (if g$ls/false$9360$bP4ck
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9360$bP4ck)
                                 ((case-lambda
                                    ((g$t$9361$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$9362$bP4ck)
                                         (if g$ls/false$9362$bP4ck
                                           (apply
                                             (case-lambda
                                               ((g$f*$9363$bP4ck)
                                                g$f*$9363$bP4ck))
                                             g$ls/false$9362$bP4ck)
                                           ((case-lambda
                                              ((g$t$9364$bP4ck)
                                               ((case-lambda
                                                  ((g$ls/false$9365$bP4ck)
                                                   (if g$ls/false$9365$bP4ck
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9366$bP4ck)
                                                          (g$get-fields$9238$bP4ck
                                                            g$rest$9366$bP4ck)))
                                                       g$ls/false$9365$bP4ck)
                                                     (g$syntax-violation$8096$bP4ck
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9364$bP4ck))))
                                                (g$syntax-dispatch$7984$bP4ck
                                                  g$t$9364$bP4ck
                                                  '(_ . any)))))
                                            g$t$9361$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$9361$bP4ck
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9359$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck g$t$9359$bP4ck '()))))
                        g$clause*$9358$bP4ck))))
                  (g$get-mutator-indices$9239$bP4ck
                    (case-lambda
                      ((g$fields$9346$bP4ck)
                       ((letrec ((g$f$9347$bP4ck
                                   (case-lambda
                                     ((g$fields$9348$bP4ck g$i$9349$bP4ck)
                                      ((case-lambda
                                         ((g$t$9350$bP4ck)
                                          ((case-lambda
                                             ((g$ls/false$9351$bP4ck)
                                              (if g$ls/false$9351$bP4ck
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9351$bP4ck)
                                                ((case-lambda
                                                   ((g$t$9352$bP4ck)
                                                    ((case-lambda
                                                       ((g$ls/false$9353$bP4ck)
                                                        (if g$ls/false$9353$bP4ck
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9354$bP4ck)
                                                               (cons
                                                                 g$i$9349$bP4ck
                                                                 (g$f$9347$bP4ck
                                                                   g$rest$9354$bP4ck
                                                                   (+ g$i$9349$bP4ck
                                                                      '1)))))
                                                            g$ls/false$9353$bP4ck)
                                                          ((case-lambda
                                                             ((g$t$9355$bP4ck)
                                                              ((case-lambda
                                                                 ((g$ls/false$9356$bP4ck)
                                                                  (if g$ls/false$9356$bP4ck
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9357$bP4ck)
                                                                         (g$f$9347$bP4ck
                                                                           g$rest$9357$bP4ck
                                                                           (+ g$i$9349$bP4ck
                                                                              '1))))
                                                                      g$ls/false$9356$bP4ck)
                                                                    (g$syntax-violation$8096$bP4ck
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9355$bP4ck))))
                                                               (g$syntax-dispatch$7984$bP4ck
                                                                 g$t$9355$bP4ck
                                                                 '(_ . any)))))
                                                           g$t$9352$bP4ck))))
                                                     (g$syntax-dispatch$7984$bP4ck
                                                       g$t$9352$bP4ck
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9350$bP4ck))))
                                           (g$syntax-dispatch$7984$bP4ck
                                             g$t$9350$bP4ck
                                             '()))))
                                       g$fields$9348$bP4ck)))))
                          g$f$9347$bP4ck)
                        g$fields$9346$bP4ck
                        '0))))
                  (g$get-mutators$9240$bP4ck
                    (case-lambda
                      ((g$foo$9325$bP4ck g$fields$9326$bP4ck)
                       (letrec* ((g$gen-name$9327$bP4ck
                                   (case-lambda
                                     ((g$x$9345$bP4ck)
                                      (g$datum->syntax$8098$bP4ck
                                        g$foo$9325$bP4ck
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8099$bP4ck
                                                g$foo$9325$bP4ck))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8099$bP4ck
                                                g$x$9345$bP4ck))
                                            '"-set!")))))))
                         ((letrec ((g$f$9328$bP4ck
                                     (case-lambda
                                       ((g$fields$9329$bP4ck)
                                        ((case-lambda
                                           ((g$t$9330$bP4ck)
                                            ((case-lambda
                                               ((g$ls/false$9331$bP4ck)
                                                (if g$ls/false$9331$bP4ck
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9331$bP4ck)
                                                  ((case-lambda
                                                     ((g$t$9332$bP4ck)
                                                      ((case-lambda
                                                         ((g$ls/false$9333$bP4ck)
                                                          (if g$ls/false$9333$bP4ck
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9334$bP4ck
                                                                   g$accessor$9335$bP4ck
                                                                   g$mutator$9336$bP4ck
                                                                   g$rest$9337$bP4ck)
                                                                 (cons
                                                                   g$mutator$9336$bP4ck
                                                                   (g$f$9328$bP4ck
                                                                     g$rest$9337$bP4ck))))
                                                              g$ls/false$9333$bP4ck)
                                                            ((case-lambda
                                                               ((g$t$9338$bP4ck)
                                                                ((case-lambda
                                                                   ((g$ls/false$9339$bP4ck)
                                                                    (if g$ls/false$9339$bP4ck
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9340$bP4ck
                                                                             g$rest$9341$bP4ck)
                                                                           (cons
                                                                             (g$gen-name$9327$bP4ck
                                                                               g$name$9340$bP4ck)
                                                                             (g$f$9328$bP4ck
                                                                               g$rest$9341$bP4ck))))
                                                                        g$ls/false$9339$bP4ck)
                                                                      ((case-lambda
                                                                         ((g$t$9342$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9343$bP4ck)
                                                                              (if g$ls/false$9343$bP4ck
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9344$bP4ck)
                                                                                     (g$f$9328$bP4ck
                                                                                       g$rest$9344$bP4ck)))
                                                                                  g$ls/false$9343$bP4ck)
                                                                                (g$syntax-violation$8096$bP4ck
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9342$bP4ck))))
                                                                           (g$syntax-dispatch$7984$bP4ck
                                                                             g$t$9342$bP4ck
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9338$bP4ck))))
                                                                 (g$syntax-dispatch$7984$bP4ck
                                                                   g$t$9338$bP4ck
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9332$bP4ck))))
                                                       (g$syntax-dispatch$7984$bP4ck
                                                         g$t$9332$bP4ck
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9330$bP4ck))))
                                             (g$syntax-dispatch$7984$bP4ck
                                               g$t$9330$bP4ck
                                               '()))))
                                         g$fields$9329$bP4ck)))))
                            g$f$9328$bP4ck)
                          g$fields$9326$bP4ck)))))
                  (g$get-accessors$9241$bP4ck
                    (case-lambda
                      ((g$foo$9291$bP4ck g$fields$9292$bP4ck)
                       (letrec* ((g$gen-name$9293$bP4ck
                                   (case-lambda
                                     ((g$x$9324$bP4ck)
                                      (g$datum->syntax$8098$bP4ck
                                        g$foo$9291$bP4ck
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8099$bP4ck
                                                g$foo$9291$bP4ck))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8099$bP4ck
                                                g$x$9324$bP4ck)))))))))
                         (g$map$5063$bP4ck
                           (case-lambda
                             ((g$field$9294$bP4ck)
                              ((case-lambda
                                 ((g$t$9295$bP4ck)
                                  ((case-lambda
                                     ((g$ls/false$9296$bP4ck)
                                      (if (if g$ls/false$9296$bP4ck
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$9297$bP4ck
                                                     g$accessor$9298$bP4ck
                                                     g$mutator$9299$bP4ck)
                                                   (g$id?$7706$bP4ck
                                                     g$accessor$9298$bP4ck)))
                                                g$ls/false$9296$bP4ck))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$9300$bP4ck
                                               g$accessor$9301$bP4ck
                                               g$mutator$9302$bP4ck)
                                             g$accessor$9301$bP4ck))
                                          g$ls/false$9296$bP4ck)
                                        ((case-lambda
                                           ((g$t$9303$bP4ck)
                                            ((case-lambda
                                               ((g$ls/false$9304$bP4ck)
                                                (if (if g$ls/false$9304$bP4ck
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$9305$bP4ck
                                                               g$accessor$9306$bP4ck)
                                                             (g$id?$7706$bP4ck
                                                               g$accessor$9306$bP4ck)))
                                                          g$ls/false$9304$bP4ck))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$9307$bP4ck
                                                         g$accessor$9308$bP4ck)
                                                       g$accessor$9308$bP4ck))
                                                    g$ls/false$9304$bP4ck)
                                                  ((case-lambda
                                                     ((g$t$9309$bP4ck)
                                                      ((case-lambda
                                                         ((g$ls/false$9310$bP4ck)
                                                          (if (if g$ls/false$9310$bP4ck
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$9311$bP4ck)
                                                                       (g$id?$7706$bP4ck
                                                                         g$name$9311$bP4ck)))
                                                                    g$ls/false$9310$bP4ck))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9312$bP4ck)
                                                                 (g$gen-name$9293$bP4ck
                                                                   g$name$9312$bP4ck)))
                                                              g$ls/false$9310$bP4ck)
                                                            ((case-lambda
                                                               ((g$t$9313$bP4ck)
                                                                ((case-lambda
                                                                   ((g$ls/false$9314$bP4ck)
                                                                    (if (if g$ls/false$9314$bP4ck
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$9315$bP4ck)
                                                                                 (g$id?$7706$bP4ck
                                                                                   g$name$9315$bP4ck)))
                                                                              g$ls/false$9314$bP4ck))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9316$bP4ck)
                                                                           (g$gen-name$9293$bP4ck
                                                                             g$name$9316$bP4ck)))
                                                                        g$ls/false$9314$bP4ck)
                                                                      ((case-lambda
                                                                         ((g$t$9317$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9318$bP4ck)
                                                                              (if (if g$ls/false$9318$bP4ck
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$9319$bP4ck)
                                                                                           (g$id?$7706$bP4ck
                                                                                             g$name$9319$bP4ck)))
                                                                                        g$ls/false$9318$bP4ck))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$9320$bP4ck)
                                                                                     (g$gen-name$9293$bP4ck
                                                                                       g$name$9320$bP4ck)))
                                                                                  g$ls/false$9318$bP4ck)
                                                                                ((case-lambda
                                                                                   ((g$t$9321$bP4ck)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$9322$bP4ck)
                                                                                        (if g$ls/false$9322$bP4ck
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$9323$bP4ck)
                                                                                               (g$syntax-violation$8096$bP4ck
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$9294$bP4ck)))
                                                                                            g$ls/false$9322$bP4ck)
                                                                                          (g$syntax-violation$8096$bP4ck
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$9321$bP4ck))))
                                                                                     (g$syntax-dispatch$7984$bP4ck
                                                                                       g$t$9321$bP4ck
                                                                                       'any))))
                                                                                 g$t$9317$bP4ck))))
                                                                           (g$syntax-dispatch$7984$bP4ck
                                                                             g$t$9317$bP4ck
                                                                             'any))))
                                                                       g$t$9313$bP4ck))))
                                                                 (g$syntax-dispatch$7984$bP4ck
                                                                   g$t$9313$bP4ck
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$9309$bP4ck))))
                                                       (g$syntax-dispatch$7984$bP4ck
                                                         g$t$9309$bP4ck
                                                         '(#(scheme-id mutable)
                                                           any)))))
                                                   g$t$9303$bP4ck))))
                                             (g$syntax-dispatch$7984$bP4ck
                                               g$t$9303$bP4ck
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$9295$bP4ck))))
                                   (g$syntax-dispatch$7984$bP4ck
                                     g$t$9295$bP4ck
                                     '(#(scheme-id mutable) any any any)))))
                               g$field$9294$bP4ck)))
                           g$fields$9292$bP4ck)))))
                  (g$enumerate$9242$bP4ck
                    (case-lambda
                      ((g$ls$9287$bP4ck)
                       ((letrec ((g$f$9288$bP4ck
                                   (case-lambda
                                     ((g$ls$9289$bP4ck g$i$9290$bP4ck)
                                      (if (null? g$ls$9289$bP4ck)
                                        '()
                                        (cons
                                          g$i$9290$bP4ck
                                          (g$f$9288$bP4ck
                                            (cdr g$ls$9289$bP4ck)
                                            (+ g$i$9290$bP4ck '1))))))))
                          g$f$9288$bP4ck)
                        g$ls$9287$bP4ck
                        '0))))
                  (g$do-define-record$9243$bP4ck
                    (case-lambda
                      ((g$namespec$9267$bP4ck g$clause*$9268$bP4ck)
                       ((case-lambda
                          ((g$foo$9269$bP4ck)
                           ((case-lambda
                              ((g$foo-rtd$9270$bP4ck)
                               ((case-lambda
                                  ((g$foo-rcd$9271$bP4ck)
                                   ((case-lambda
                                      ((g$protocol$9272$bP4ck)
                                       ((case-lambda
                                          ((g$make-foo$9273$bP4ck)
                                           ((case-lambda
                                              ((g$fields$9274$bP4ck)
                                               ((case-lambda
                                                  ((g$idx*$9275$bP4ck)
                                                   ((case-lambda
                                                      ((g$foo-x*$9276$bP4ck)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9277$bP4ck)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9278$bP4ck)
                                                               ((case-lambda
                                                                  ((g$foo?$9279$bP4ck)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9280$bP4ck)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9281$bP4ck)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9282$bP4ck)
                                                                               (g$bless$7947$bP4ck
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$9270$bP4ck
                                                                                       g$foo-rtd-code$9280$bP4ck)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$9272$bP4ck
                                                                                         g$protocol-code$9282$bP4ck)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$9271$bP4ck
                                                                                           g$foo-rcd-code$9281$bP4ck)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$9269$bP4ck
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$9270$bP4ck)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$9271$bP4ck)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$9279$bP4ck
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$9270$bP4ck))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$9273$bP4ck
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$9271$bP4ck))
                                                                                               (append
                                                                                                 (g$map$5063$bP4ck
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$9283$bP4ck
                                                                                                        g$idx$9284$bP4ck)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$9283$bP4ck
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$9270$bP4ck
                                                                                                          g$idx$9284$bP4ck))))
                                                                                                   g$foo-x*$9276$bP4ck
                                                                                                   g$idx*$9275$bP4ck)
                                                                                                 (g$map$5063$bP4ck
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$9285$bP4ck
                                                                                                        g$idx$9286$bP4ck)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$9285$bP4ck
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$9270$bP4ck
                                                                                                          g$idx$9286$bP4ck))))
                                                                                                   g$set-foo-x!*$9277$bP4ck
                                                                                                   g$set-foo-idx*$9278$bP4ck))))))))))))
                                                                            (g$get-protocol-code$9237$bP4ck
                                                                              g$clause*$9268$bP4ck))))
                                                                        (g$foo-rcd-code$9236$bP4ck
                                                                          g$clause*$9268$bP4ck
                                                                          g$foo-rtd$9270$bP4ck
                                                                          g$protocol$9272$bP4ck
                                                                          (g$parent-rcd-code$9235$bP4ck
                                                                            g$clause*$9268$bP4ck)))))
                                                                    (g$foo-rtd-code$9233$bP4ck
                                                                      g$foo$9269$bP4ck
                                                                      g$clause*$9268$bP4ck
                                                                      (g$parent-rtd-code$9234$bP4ck
                                                                        g$clause*$9268$bP4ck)))))
                                                                (g$get-record-predicate-name$9231$bP4ck
                                                                  g$namespec$9267$bP4ck))))
                                                            (g$get-mutator-indices$9239$bP4ck
                                                              g$fields$9274$bP4ck))))
                                                        (g$get-mutators$9240$bP4ck
                                                          g$foo$9269$bP4ck
                                                          g$fields$9274$bP4ck))))
                                                    (g$get-accessors$9241$bP4ck
                                                      g$foo$9269$bP4ck
                                                      g$fields$9274$bP4ck))))
                                                (g$enumerate$9242$bP4ck
                                                  g$fields$9274$bP4ck))))
                                            (g$get-fields$9238$bP4ck
                                              g$clause*$9268$bP4ck))))
                                        (g$get-record-constructor-name$9230$bP4ck
                                          g$namespec$9267$bP4ck))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9229$bP4ck g$namespec$9267$bP4ck)))))
                  (g$verify-clauses$9244$bP4ck
                    (case-lambda
                      ((g$x$9249$bP4ck g$cls*$9250$bP4ck)
                       (letrec* ((g$valid-kwds$9251$bP4ck
                                   (g$map$5063$bP4ck
                                     g$bless$7947$bP4ck
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$9252$bP4ck
                                   (case-lambda
                                     ((g$x$9264$bP4ck g$ls$9265$bP4ck)
                                      (if (pair? g$ls$9265$bP4ck)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9266$bP4ck)
                                              (if g$t$9266$bP4ck
                                                g$t$9266$bP4ck
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9252$bP4ck
                                                    g$x$9264$bP4ck
                                                    (cdr g$ls$9265$bP4ck))))))
                                           (g$free-id=?$7710$bP4ck
                                             g$x$9264$bP4ck
                                             (car g$ls$9265$bP4ck))))
                                        '#f)))))
                         ((letrec ((g$f$9253$bP4ck
                                     (case-lambda
                                       ((g$cls*$9254$bP4ck g$seen*$9255$bP4ck)
                                        (if (not (null? g$cls*$9254$bP4ck))
                                          ((case-lambda
                                             ((g$t$9256$bP4ck)
                                              ((case-lambda
                                                 ((g$ls/false$9257$bP4ck)
                                                  (if g$ls/false$9257$bP4ck
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9258$bP4ck
                                                           g$rest$9259$bP4ck)
                                                         (if ((case-lambda
                                                                ((g$t$9260$bP4ck)
                                                                 (if g$t$9260$bP4ck
                                                                   g$t$9260$bP4ck
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9252$bP4ck
                                                                            g$kwd$9258$bP4ck
                                                                            g$valid-kwds$9251$bP4ck))))))
                                                              (not (g$id?$7706$bP4ck
                                                                     g$kwd$9258$bP4ck)))
                                                           (g$syntax-violation$8096$bP4ck
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9258$bP4ck)
                                                           (if (g$bound-id-member?$7713$bP4ck
                                                                 g$kwd$9258$bP4ck
                                                                 g$seen*$9255$bP4ck)
                                                             (g$syntax-violation$8096$bP4ck
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9249$bP4ck
                                                               g$kwd$9258$bP4ck)
                                                             (g$f$9253$bP4ck
                                                               (cdr g$cls*$9254$bP4ck)
                                                               (cons
                                                                 g$kwd$9258$bP4ck
                                                                 g$seen*$9255$bP4ck))))))
                                                      g$ls/false$9257$bP4ck)
                                                    ((case-lambda
                                                       ((g$t$9261$bP4ck)
                                                        ((case-lambda
                                                           ((g$ls/false$9262$bP4ck)
                                                            (if g$ls/false$9262$bP4ck
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9263$bP4ck)
                                                                   (g$syntax-violation$8096$bP4ck
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9263$bP4ck)))
                                                                g$ls/false$9262$bP4ck)
                                                              (g$syntax-violation$8096$bP4ck
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9261$bP4ck))))
                                                         (g$syntax-dispatch$7984$bP4ck
                                                           g$t$9261$bP4ck
                                                           'any))))
                                                     g$t$9256$bP4ck))))
                                               (g$syntax-dispatch$7984$bP4ck
                                                 g$t$9256$bP4ck
                                                 '(any . any)))))
                                           (car g$cls*$9254$bP4ck))
                                          (void))))))
                            g$f$9253$bP4ck)
                          g$cls*$9250$bP4ck
                          '()))))))
          ((case-lambda
             ((g$t$9245$bP4ck)
              ((case-lambda
                 ((g$ls/false$9246$bP4ck)
                  (if g$ls/false$9246$bP4ck
                    (apply
                      (case-lambda
                        ((g$namespec$9247$bP4ck g$clause*$9248$bP4ck)
                         (begin
                           (g$verify-clauses$9244$bP4ck
                             g$x$9227$bP4ck
                             g$clause*$9248$bP4ck)
                           (g$do-define-record$9243$bP4ck
                             g$namespec$9247$bP4ck
                             g$clause*$9248$bP4ck))))
                      g$ls/false$9246$bP4ck)
                    (g$syntax-violation$8096$bP4ck
                      '#f
                      '"invalid syntax"
                      g$t$9245$bP4ck))))
               (g$syntax-dispatch$7984$bP4ck
                 g$t$9245$bP4ck
                 '(_ any . each-any)))))
           g$x$9227$bP4ck)))))
   (g$define-condition-type-macro$7979$bP4ck
     g$define-condition-type-macro$11482$bP4ck
     (case-lambda
       ((g$x$9483$bP4ck)
        (letrec* ((g$mkname$9484$bP4ck
                    (case-lambda
                      ((g$name$9507$bP4ck g$suffix$9508$bP4ck)
                       (g$datum->syntax$8098$bP4ck
                         g$name$9507$bP4ck
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$8099$bP4ck g$name$9507$bP4ck))
                             g$suffix$9508$bP4ck)))))))
          ((case-lambda
             ((g$t$9485$bP4ck)
              ((case-lambda
                 ((g$ls/false$9486$bP4ck)
                  (if (if g$ls/false$9486$bP4ck
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9487$bP4ck
                                 g$name$9488$bP4ck
                                 g$super$9489$bP4ck
                                 g$constructor$9490$bP4ck
                                 g$predicate$9491$bP4ck
                                 g$field*$9492$bP4ck
                                 g$accessor*$9493$bP4ck)
                               (if (g$id?$7706$bP4ck g$name$9488$bP4ck)
                                 (if (g$id?$7706$bP4ck g$super$9489$bP4ck)
                                   (if (g$id?$7706$bP4ck
                                         g$constructor$9490$bP4ck)
                                     (if (g$id?$7706$bP4ck
                                           g$predicate$9491$bP4ck)
                                       (if (g$for-all$5061$bP4ck
                                             g$id?$7706$bP4ck
                                             g$field*$9492$bP4ck)
                                         (begin
                                           '#f
                                           (g$for-all$5061$bP4ck
                                             g$id?$7706$bP4ck
                                             g$accessor*$9493$bP4ck))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9486$bP4ck))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9494$bP4ck
                           g$name$9495$bP4ck
                           g$super$9496$bP4ck
                           g$constructor$9497$bP4ck
                           g$predicate$9498$bP4ck
                           g$field*$9499$bP4ck
                           g$accessor*$9500$bP4ck)
                         ((case-lambda
                            ((g$aux-accessor*$9501$bP4ck)
                             (g$bless$7947$bP4ck
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9495$bP4ck
                                         g$constructor$9497$bP4ck
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9496$bP4ck)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$5063$bP4ck
                                               (case-lambda
                                                 ((g$field$9502$bP4ck
                                                    g$aux$9503$bP4ck)
                                                  (list
                                                    'immutable
                                                    g$field$9502$bP4ck
                                                    g$aux$9503$bP4ck)))
                                               g$field*$9499$bP4ck
                                               g$aux-accessor*$9501$bP4ck))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9498$bP4ck
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9495$bP4ck)))
                                     (g$map$5063$bP4ck
                                       (case-lambda
                                         ((g$accessor$9504$bP4ck
                                            g$aux$9505$bP4ck)
                                          (list
                                            'define
                                            g$accessor$9504$bP4ck
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$9495$bP4ck)
                                              g$aux$9505$bP4ck))))
                                       g$accessor*$9500$bP4ck
                                       g$aux-accessor*$9501$bP4ck)))))))
                          (g$map$5063$bP4ck
                            (case-lambda ((g$x$9506$bP4ck) (gensym)))
                            g$accessor*$9500$bP4ck))))
                      g$ls/false$9486$bP4ck)
                    (g$syntax-violation$8096$bP4ck
                      '#f
                      '"invalid syntax"
                      g$t$9485$bP4ck))))
               (g$syntax-dispatch$7984$bP4ck
                 g$t$9485$bP4ck
                 '(any any any any any . #(each (any any)))))))
           g$x$9483$bP4ck)))))
   (g$incorrect-usage-macro$7980$bP4ck
     g$incorrect-usage-macro$11483$bP4ck
     (case-lambda
       ((g$e$9509$bP4ck)
        (g$syntax-violation$8096$bP4ck
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9509$bP4ck))))
   (g$parameterize-macro$7981$bP4ck
     g$parameterize-macro$11484$bP4ck
     (case-lambda
       ((g$e$9510$bP4ck)
        ((case-lambda
           ((g$t$9511$bP4ck)
            ((case-lambda
               ((g$ls/false$9512$bP4ck)
                (if g$ls/false$9512$bP4ck
                  (apply
                    (case-lambda
                      ((g$b$9513$bP4ck g$b*$9514$bP4ck)
                       (g$bless$7947$bP4ck
                         (cons
                           'let
                           (cons '() (cons g$b$9513$bP4ck g$b*$9514$bP4ck))))))
                    g$ls/false$9512$bP4ck)
                  ((case-lambda
                     ((g$t$9515$bP4ck)
                      ((case-lambda
                         ((g$ls/false$9516$bP4ck)
                          (if g$ls/false$9516$bP4ck
                            (apply
                              (case-lambda
                                ((g$olhs*$9517$bP4ck
                                   g$orhs*$9518$bP4ck
                                   g$b$9519$bP4ck
                                   g$b*$9520$bP4ck)
                                 ((case-lambda
                                    ((g$lhs*$9521$bP4ck g$rhs*$9522$bP4ck)
                                     (g$bless$7947$bP4ck
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9521$bP4ck
                                             g$rhs*$9522$bP4ck)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$5063$bP4ck
                                                       (case-lambda
                                                         ((g$lhs$9523$bP4ck
                                                            g$rhs$9524$bP4ck)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$9523$bP4ck)))
                                                            (list
                                                              g$lhs$9523$bP4ck
                                                              g$rhs$9524$bP4ck)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$9524$bP4ck
                                                                '(t))))))
                                                       g$lhs*$9521$bP4ck
                                                       g$rhs*$9522$bP4ck)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9519$bP4ck
                                                         g$b*$9520$bP4ck)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9517$bP4ck
                                           g$orhs*$9518$bP4ck)))))
                                  (g$generate-temporaries$8086$bP4ck
                                    g$olhs*$9517$bP4ck)
                                  (g$generate-temporaries$8086$bP4ck
                                    g$orhs*$9518$bP4ck))))
                              g$ls/false$9516$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$9515$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$9515$bP4ck
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9511$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$9511$bP4ck
               '(_ () any . each-any)))))
         g$e$9510$bP4ck))))
   (g$foreign-call-transformer$7982$bP4ck
     g$foreign-call-transformer$11485$bP4ck
     (case-lambda
       ((g$e$9525$bP4ck g$r$9526$bP4ck g$mr$9527$bP4ck)
        ((case-lambda
           ((g$t$9528$bP4ck)
            ((case-lambda
               ((g$ls/false$9529$bP4ck)
                (if g$ls/false$9529$bP4ck
                  (apply
                    (case-lambda
                      ((g$name$9530$bP4ck g$arg*$9531$bP4ck)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$8002$bP4ck
                             g$name$9530$bP4ck
                             g$r$9526$bP4ck
                             g$mr$9527$bP4ck)
                           (g$chi-expr*$8000$bP4ck
                             g$arg*$9531$bP4ck
                             g$r$9526$bP4ck
                             g$mr$9527$bP4ck)))))
                    g$ls/false$9529$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$9528$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$9528$bP4ck
               '(_ any . each-any)))))
         g$e$9525$bP4ck))))
   (g$convert-pattern$7983$bP4ck
     g$convert-pattern$11486$bP4ck
     (case-lambda
       ((g$pattern$9532$bP4ck g$keys$9533$bP4ck)
        (letrec* ((g$cvt*$9534$bP4ck
                    (case-lambda
                      ((g$p*$9614$bP4ck g$n$9615$bP4ck g$ids$9616$bP4ck)
                       (if (null? g$p*$9614$bP4ck)
                         (values '() g$ids$9616$bP4ck)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9534$bP4ck
                                (cdr g$p*$9614$bP4ck)
                                g$n$9615$bP4ck
                                g$ids$9616$bP4ck)))
                           (case-lambda
                             ((g$y$9619$bP4ck g$ids$9620$bP4ck)
                              ((case-lambda
                                 ((g$ids$9621$bP4ck g$y$9622$bP4ck)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9535$bP4ck
                                         (car g$p*$9614$bP4ck)
                                         g$n$9615$bP4ck
                                         g$ids$9621$bP4ck)))
                                    (case-lambda
                                      ((g$x$9625$bP4ck g$ids$9626$bP4ck)
                                       ((case-lambda
                                          ((g$ids$9627$bP4ck g$x$9628$bP4ck)
                                           (values
                                             (cons
                                               g$x$9628$bP4ck
                                               g$y$9622$bP4ck)
                                             g$ids$9627$bP4ck)))
                                        g$ids$9626$bP4ck
                                        g$x$9625$bP4ck))))))
                               g$ids$9620$bP4ck
                               g$y$9619$bP4ck))))))))
                  (g$cvt$9535$bP4ck
                    (case-lambda
                      ((g$p$9536$bP4ck g$n$9537$bP4ck g$ids$9538$bP4ck)
                       ((case-lambda
                          ((g$t$9539$bP4ck)
                           ((case-lambda
                              ((g$ls/false$9540$bP4ck)
                               (if (if g$ls/false$9540$bP4ck
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9541$bP4ck)
                                            (g$id?$7706$bP4ck g$id$9541$bP4ck)))
                                         g$ls/false$9540$bP4ck))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9542$bP4ck)
                                      (if (g$bound-id-member?$7713$bP4ck
                                            g$p$9536$bP4ck
                                            g$keys$9533$bP4ck)
                                        (values
                                          (vector 'free-id g$p$9536$bP4ck)
                                          g$ids$9538$bP4ck)
                                        (if (g$free-id=?$7710$bP4ck
                                              g$p$9536$bP4ck
                                              (g$scheme-stx$7927$bP4ck '_))
                                          (values '_ g$ids$9538$bP4ck)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9536$bP4ck
                                                g$n$9537$bP4ck)
                                              g$ids$9538$bP4ck))))))
                                   g$ls/false$9540$bP4ck)
                                 ((case-lambda
                                    ((g$t$9543$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$9544$bP4ck)
                                         (if (if g$ls/false$9544$bP4ck
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9545$bP4ck
                                                        g$dots$9546$bP4ck)
                                                      (g$ellipsis?$7985$bP4ck
                                                        g$dots$9546$bP4ck)))
                                                   g$ls/false$9544$bP4ck))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9547$bP4ck
                                                  g$dots$9548$bP4ck)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9535$bP4ck
                                                       g$p$9547$bP4ck
                                                       (+ g$n$9537$bP4ck '1)
                                                       g$ids$9538$bP4ck)))
                                                  (case-lambda
                                                    ((g$p$9551$bP4ck
                                                       g$ids$9552$bP4ck)
                                                     ((case-lambda
                                                        ((g$ids$9553$bP4ck
                                                           g$p$9554$bP4ck)
                                                         (values
                                                           (if (eq? g$p$9554$bP4ck
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9554$bP4ck))
                                                           g$ids$9553$bP4ck)))
                                                      g$ids$9552$bP4ck
                                                      g$p$9551$bP4ck))))))
                                             g$ls/false$9544$bP4ck)
                                           ((case-lambda
                                              ((g$t$9555$bP4ck)
                                               ((case-lambda
                                                  ((g$ls/false$9556$bP4ck)
                                                   (if (if g$ls/false$9556$bP4ck
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9557$bP4ck
                                                                  g$dots$9558$bP4ck
                                                                  g$ys$9559$bP4ck
                                                                  g$z$9560$bP4ck)
                                                                (g$ellipsis?$7985$bP4ck
                                                                  g$dots$9558$bP4ck)))
                                                             g$ls/false$9556$bP4ck))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9561$bP4ck
                                                            g$dots$9562$bP4ck
                                                            g$ys$9563$bP4ck
                                                            g$z$9564$bP4ck)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9535$bP4ck
                                                                 g$z$9564$bP4ck
                                                                 g$n$9537$bP4ck
                                                                 g$ids$9538$bP4ck)))
                                                            (case-lambda
                                                              ((g$z$9567$bP4ck
                                                                 g$ids$9568$bP4ck)
                                                               ((case-lambda
                                                                  ((g$ids$9569$bP4ck
                                                                     g$z$9570$bP4ck)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9534$bP4ck
                                                                          g$ys$9563$bP4ck
                                                                          g$n$9537$bP4ck
                                                                          g$ids$9569$bP4ck)))
                                                                     (case-lambda
                                                                       ((g$ys$9573$bP4ck
                                                                          g$ids$9574$bP4ck)
                                                                        ((case-lambda
                                                                           ((g$ids$9575$bP4ck
                                                                              g$ys$9576$bP4ck)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9535$bP4ck
                                                                                   g$x$9561$bP4ck
                                                                                   (+ g$n$9537$bP4ck
                                                                                      '1)
                                                                                   g$ids$9575$bP4ck)))
                                                                              (case-lambda
                                                                                ((g$x$9579$bP4ck
                                                                                   g$ids$9580$bP4ck)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9581$bP4ck
                                                                                       g$x$9582$bP4ck)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9582$bP4ck
                                                                                         (reverse
                                                                                           g$ys$9576$bP4ck)
                                                                                         g$z$9570$bP4ck)
                                                                                       g$ids$9581$bP4ck)))
                                                                                  g$ids$9580$bP4ck
                                                                                  g$x$9579$bP4ck))))))
                                                                         g$ids$9574$bP4ck
                                                                         g$ys$9573$bP4ck))))))
                                                                g$ids$9568$bP4ck
                                                                g$z$9567$bP4ck))))))
                                                       g$ls/false$9556$bP4ck)
                                                     ((case-lambda
                                                        ((g$t$9583$bP4ck)
                                                         ((case-lambda
                                                            ((g$ls/false$9584$bP4ck)
                                                             (if g$ls/false$9584$bP4ck
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9585$bP4ck
                                                                      g$y$9586$bP4ck)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9535$bP4ck
                                                                           g$y$9586$bP4ck
                                                                           g$n$9537$bP4ck
                                                                           g$ids$9538$bP4ck)))
                                                                      (case-lambda
                                                                        ((g$y$9589$bP4ck
                                                                           g$ids$9590$bP4ck)
                                                                         ((case-lambda
                                                                            ((g$ids$9591$bP4ck
                                                                               g$y$9592$bP4ck)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9535$bP4ck
                                                                                    g$x$9585$bP4ck
                                                                                    g$n$9537$bP4ck
                                                                                    g$ids$9591$bP4ck)))
                                                                               (case-lambda
                                                                                 ((g$x$9595$bP4ck
                                                                                    g$ids$9596$bP4ck)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9597$bP4ck
                                                                                        g$x$9598$bP4ck)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9598$bP4ck
                                                                                          g$y$9592$bP4ck)
                                                                                        g$ids$9597$bP4ck)))
                                                                                   g$ids$9596$bP4ck
                                                                                   g$x$9595$bP4ck))))))
                                                                          g$ids$9590$bP4ck
                                                                          g$y$9589$bP4ck))))))
                                                                 g$ls/false$9584$bP4ck)
                                                               ((case-lambda
                                                                  ((g$t$9599$bP4ck)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9600$bP4ck)
                                                                       (if g$ls/false$9600$bP4ck
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9538$bP4ck)))
                                                                           g$ls/false$9600$bP4ck)
                                                                         ((case-lambda
                                                                            ((g$t$9601$bP4ck)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9602$bP4ck)
                                                                                 (if (if g$ls/false$9602$bP4ck
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9603$bP4ck)
                                                                                              (not (g$stx?$7678$bP4ck
                                                                                                     g$p$9603$bP4ck))))
                                                                                           g$ls/false$9602$bP4ck))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9604$bP4ck)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9535$bP4ck
                                                                                               g$p$9604$bP4ck
                                                                                               g$n$9537$bP4ck
                                                                                               g$ids$9538$bP4ck)))
                                                                                          (case-lambda
                                                                                            ((g$p$9607$bP4ck
                                                                                               g$ids$9608$bP4ck)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9609$bP4ck
                                                                                                   g$p$9610$bP4ck)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9610$bP4ck)
                                                                                                   g$ids$9609$bP4ck)))
                                                                                              g$ids$9608$bP4ck
                                                                                              g$p$9607$bP4ck))))))
                                                                                     g$ls/false$9602$bP4ck)
                                                                                   ((case-lambda
                                                                                      ((g$t$9611$bP4ck)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9612$bP4ck)
                                                                                           (if g$ls/false$9612$bP4ck
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9613$bP4ck)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7717$bP4ck
                                                                                                        g$datum$9613$bP4ck))
                                                                                                    g$ids$9538$bP4ck)))
                                                                                               g$ls/false$9612$bP4ck)
                                                                                             (g$syntax-violation$8096$bP4ck
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9611$bP4ck))))
                                                                                        (g$syntax-dispatch$7984$bP4ck
                                                                                          g$t$9611$bP4ck
                                                                                          'any))))
                                                                                    g$t$9601$bP4ck))))
                                                                              (g$syntax-dispatch$7984$bP4ck
                                                                                g$t$9601$bP4ck
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9599$bP4ck))))
                                                                    (g$syntax-dispatch$7984$bP4ck
                                                                      g$t$9599$bP4ck
                                                                      '()))))
                                                                g$t$9583$bP4ck))))
                                                          (g$syntax-dispatch$7984$bP4ck
                                                            g$t$9583$bP4ck
                                                            '(any . any)))))
                                                      g$t$9555$bP4ck))))
                                                (g$syntax-dispatch$7984$bP4ck
                                                  g$t$9555$bP4ck
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9543$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$9543$bP4ck
                                        '(any any)))))
                                  g$t$9539$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$9539$bP4ck
                              'any))))
                        g$p$9536$bP4ck)))))
          (g$cvt$9535$bP4ck g$pattern$9532$bP4ck '0 '())))))
   (g$syntax-dispatch$7984$bP4ck
     g$syntax-dispatch$11487$bP4ck
     ((case-lambda
        (()
         (letrec* ((g$stx^$9629$bP4ck
                     (case-lambda
                       ((g$e$9739$bP4ck
                          g$m*$9740$bP4ck
                          g$s*$9741$bP4ck
                          g$ae*$9742$bP4ck)
                        (if (if (null? g$m*$9740$bP4ck)
                              (if (null? g$s*$9741$bP4ck)
                                (begin '#f (null? g$ae*$9742$bP4ck))
                                '#f)
                              '#f)
                          g$e$9739$bP4ck
                          (g$mkstx$7694$bP4ck
                            g$e$9739$bP4ck
                            g$m*$9740$bP4ck
                            g$s*$9741$bP4ck
                            g$ae*$9742$bP4ck)))))
                   (g$match-each$9630$bP4ck
                     (case-lambda
                       ((g$e$9723$bP4ck
                          g$p$9724$bP4ck
                          g$m*$9725$bP4ck
                          g$s*$9726$bP4ck
                          g$ae*$9727$bP4ck)
                        (if (pair? g$e$9723$bP4ck)
                          ((case-lambda
                             ((g$first$9728$bP4ck)
                              (if g$first$9728$bP4ck
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$9729$bP4ck)
                                      (if g$rest$9729$bP4ck
                                        (begin
                                          '#f
                                          (cons
                                            g$first$9728$bP4ck
                                            g$rest$9729$bP4ck))
                                        '#f)))
                                   (g$match-each$9630$bP4ck
                                     (cdr g$e$9723$bP4ck)
                                     g$p$9724$bP4ck
                                     g$m*$9725$bP4ck
                                     g$s*$9726$bP4ck
                                     g$ae*$9727$bP4ck)))
                                '#f)))
                           (g$match$9636$bP4ck
                             (car g$e$9723$bP4ck)
                             g$p$9724$bP4ck
                             g$m*$9725$bP4ck
                             g$s*$9726$bP4ck
                             g$ae*$9727$bP4ck
                             '()))
                          (if (null? g$e$9723$bP4ck)
                            '()
                            (if (g$stx?$7678$bP4ck g$e$9723$bP4ck)
                              (if (not (g$top-marked?$7644$bP4ck
                                         g$m*$9725$bP4ck))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$7693$bP4ck
                                         g$m*$9725$bP4ck
                                         g$s*$9726$bP4ck
                                         g$ae*$9727$bP4ck
                                         g$e$9723$bP4ck)))
                                    (case-lambda
                                      ((g$m*$9733$bP4ck
                                         g$s*$9734$bP4ck
                                         g$ae*$9735$bP4ck)
                                       ((case-lambda
                                          ((g$ae*$9736$bP4ck
                                             g$s*$9737$bP4ck
                                             g$m*$9738$bP4ck)
                                           (g$match-each$9630$bP4ck
                                             (g$stx-expr$7680$bP4ck
                                               g$e$9723$bP4ck)
                                             g$p$9724$bP4ck
                                             g$m*$9738$bP4ck
                                             g$s*$9737$bP4ck
                                             g$ae*$9736$bP4ck)))
                                        g$ae*$9735$bP4ck
                                        g$s*$9734$bP4ck
                                        g$m*$9733$bP4ck)))))
                                '#f)
                              (if (annotation? g$e$9723$bP4ck)
                                (g$match-each$9630$bP4ck
                                  (annotation-expression g$e$9723$bP4ck)
                                  g$p$9724$bP4ck
                                  g$m*$9725$bP4ck
                                  g$s*$9726$bP4ck
                                  g$ae*$9727$bP4ck)
                                '#f)))))))
                   (g$match-each+$9631$bP4ck
                     (case-lambda
                       ((g$e$9691$bP4ck
                          g$x-pat$9692$bP4ck
                          g$y-pat$9693$bP4ck
                          g$z-pat$9694$bP4ck
                          g$m*$9695$bP4ck
                          g$s*$9696$bP4ck
                          g$ae*$9697$bP4ck
                          g$r$9698$bP4ck)
                        ((letrec ((g$f$9699$bP4ck
                                    (case-lambda
                                      ((g$e$9700$bP4ck
                                         g$m*$9701$bP4ck
                                         g$s*$9702$bP4ck
                                         g$ae*$9703$bP4ck)
                                       (if (pair? g$e$9700$bP4ck)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$9699$bP4ck
                                                (cdr g$e$9700$bP4ck)
                                                g$m*$9701$bP4ck
                                                g$s*$9702$bP4ck
                                                g$ae*$9703$bP4ck)))
                                           (case-lambda
                                             ((g$xr*$9707$bP4ck
                                                g$y-pat$9708$bP4ck
                                                g$r$9709$bP4ck)
                                              ((case-lambda
                                                 ((g$r$9710$bP4ck
                                                    g$y-pat$9711$bP4ck
                                                    g$xr*$9712$bP4ck)
                                                  (if g$r$9710$bP4ck
                                                    (if (null?
                                                          g$y-pat$9711$bP4ck)
                                                      ((case-lambda
                                                         ((g$xr$9713$bP4ck)
                                                          (if g$xr$9713$bP4ck
                                                            (values
                                                              (cons
                                                                g$xr$9713$bP4ck
                                                                g$xr*$9712$bP4ck)
                                                              g$y-pat$9711$bP4ck
                                                              g$r$9710$bP4ck)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$9636$bP4ck
                                                         (car g$e$9700$bP4ck)
                                                         g$x-pat$9692$bP4ck
                                                         g$m*$9701$bP4ck
                                                         g$s*$9702$bP4ck
                                                         g$ae*$9703$bP4ck
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$9711$bP4ck)
                                                        (g$match$9636$bP4ck
                                                          (car g$e$9700$bP4ck)
                                                          (car g$y-pat$9711$bP4ck)
                                                          g$m*$9701$bP4ck
                                                          g$s*$9702$bP4ck
                                                          g$ae*$9703$bP4ck
                                                          g$r$9710$bP4ck)))
                                                    (values '#f '#f '#f))))
                                               g$r$9709$bP4ck
                                               g$y-pat$9708$bP4ck
                                               g$xr*$9707$bP4ck))))
                                         (if (g$stx?$7678$bP4ck g$e$9700$bP4ck)
                                           (if (g$top-marked?$7644$bP4ck
                                                 g$m*$9701$bP4ck)
                                             (values
                                               '()
                                               g$y-pat$9693$bP4ck
                                               (g$match$9636$bP4ck
                                                 g$e$9700$bP4ck
                                                 g$z-pat$9694$bP4ck
                                                 g$m*$9701$bP4ck
                                                 g$s*$9702$bP4ck
                                                 g$ae*$9703$bP4ck
                                                 g$r$9698$bP4ck))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$7693$bP4ck
                                                    g$m*$9701$bP4ck
                                                    g$s*$9702$bP4ck
                                                    g$ae*$9703$bP4ck
                                                    g$e$9700$bP4ck)))
                                               (case-lambda
                                                 ((g$m*$9717$bP4ck
                                                    g$s*$9718$bP4ck
                                                    g$ae*$9719$bP4ck)
                                                  ((case-lambda
                                                     ((g$ae*$9720$bP4ck
                                                        g$s*$9721$bP4ck
                                                        g$m*$9722$bP4ck)
                                                      (g$f$9699$bP4ck
                                                        (g$stx-expr$7680$bP4ck
                                                          g$e$9700$bP4ck)
                                                        g$m*$9722$bP4ck
                                                        g$s*$9721$bP4ck
                                                        g$ae*$9720$bP4ck)))
                                                   g$ae*$9719$bP4ck
                                                   g$s*$9718$bP4ck
                                                   g$m*$9717$bP4ck)))))
                                           (if (annotation? g$e$9700$bP4ck)
                                             (g$f$9699$bP4ck
                                               (annotation-expression
                                                 g$e$9700$bP4ck)
                                               g$m*$9701$bP4ck
                                               g$s*$9702$bP4ck
                                               g$ae*$9703$bP4ck)
                                             (values
                                               '()
                                               g$y-pat$9693$bP4ck
                                               (g$match$9636$bP4ck
                                                 g$e$9700$bP4ck
                                                 g$z-pat$9694$bP4ck
                                                 g$m*$9701$bP4ck
                                                 g$s*$9702$bP4ck
                                                 g$ae*$9703$bP4ck
                                                 g$r$9698$bP4ck)))))))))
                           g$f$9699$bP4ck)
                         g$e$9691$bP4ck
                         g$m*$9695$bP4ck
                         g$s*$9696$bP4ck
                         g$ae*$9697$bP4ck))))
                   (g$match-each-any$9632$bP4ck
                     (case-lambda
                       ((g$e$9677$bP4ck
                          g$m*$9678$bP4ck
                          g$s*$9679$bP4ck
                          g$ae*$9680$bP4ck)
                        (if (pair? g$e$9677$bP4ck)
                          ((case-lambda
                             ((g$l$9681$bP4ck)
                              (if g$l$9681$bP4ck
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$9629$bP4ck
                                      (car g$e$9677$bP4ck)
                                      g$m*$9678$bP4ck
                                      g$s*$9679$bP4ck
                                      g$ae*$9680$bP4ck)
                                    g$l$9681$bP4ck))
                                '#f)))
                           (g$match-each-any$9632$bP4ck
                             (cdr g$e$9677$bP4ck)
                             g$m*$9678$bP4ck
                             g$s*$9679$bP4ck
                             g$ae*$9680$bP4ck))
                          (if (null? g$e$9677$bP4ck)
                            '()
                            (if (g$stx?$7678$bP4ck g$e$9677$bP4ck)
                              (if (not (g$top-marked?$7644$bP4ck
                                         g$m*$9678$bP4ck))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$7693$bP4ck
                                         g$m*$9678$bP4ck
                                         g$s*$9679$bP4ck
                                         g$ae*$9680$bP4ck
                                         g$e$9677$bP4ck)))
                                    (case-lambda
                                      ((g$m*$9685$bP4ck
                                         g$s*$9686$bP4ck
                                         g$ae*$9687$bP4ck)
                                       ((case-lambda
                                          ((g$ae*$9688$bP4ck
                                             g$s*$9689$bP4ck
                                             g$m*$9690$bP4ck)
                                           (g$match-each-any$9632$bP4ck
                                             (g$stx-expr$7680$bP4ck
                                               g$e$9677$bP4ck)
                                             g$m*$9690$bP4ck
                                             g$s*$9689$bP4ck
                                             g$ae*$9688$bP4ck)))
                                        g$ae*$9687$bP4ck
                                        g$s*$9686$bP4ck
                                        g$m*$9685$bP4ck)))))
                                '#f)
                              (if (annotation? g$e$9677$bP4ck)
                                (g$match-each-any$9632$bP4ck
                                  (annotation-expression g$e$9677$bP4ck)
                                  g$m*$9678$bP4ck
                                  g$s*$9679$bP4ck
                                  g$ae*$9680$bP4ck)
                                '#f)))))))
                   (g$match-empty$9633$bP4ck
                     (case-lambda
                       ((g$p$9674$bP4ck g$r$9675$bP4ck)
                        (if (null? g$p$9674$bP4ck)
                          g$r$9675$bP4ck
                          (if (eq? g$p$9674$bP4ck '_)
                            g$r$9675$bP4ck
                            (if (eq? g$p$9674$bP4ck 'any)
                              (cons '() g$r$9675$bP4ck)
                              (if (pair? g$p$9674$bP4ck)
                                (g$match-empty$9633$bP4ck
                                  (car g$p$9674$bP4ck)
                                  (g$match-empty$9633$bP4ck
                                    (cdr g$p$9674$bP4ck)
                                    g$r$9675$bP4ck))
                                (if (eq? g$p$9674$bP4ck 'each-any)
                                  (cons '() g$r$9675$bP4ck)
                                  ((case-lambda
                                     ((g$t$9676$bP4ck)
                                      (if (g$memv$5056$bP4ck
                                            g$t$9676$bP4ck
                                            '(each))
                                        (g$match-empty$9633$bP4ck
                                          (vector-ref g$p$9674$bP4ck '1)
                                          g$r$9675$bP4ck)
                                        (if (g$memv$5056$bP4ck
                                              g$t$9676$bP4ck
                                              '(each+))
                                          (g$match-empty$9633$bP4ck
                                            (vector-ref g$p$9674$bP4ck '1)
                                            (g$match-empty$9633$bP4ck
                                              (reverse
                                                (vector-ref g$p$9674$bP4ck '2))
                                              (g$match-empty$9633$bP4ck
                                                (vector-ref g$p$9674$bP4ck '3)
                                                g$r$9675$bP4ck)))
                                          (if (g$memv$5056$bP4ck
                                                g$t$9676$bP4ck
                                                '(free-id atom))
                                            g$r$9675$bP4ck
                                            (if (g$memv$5056$bP4ck
                                                  g$t$9676$bP4ck
                                                  '(scheme-id atom))
                                              g$r$9675$bP4ck
                                              (if (g$memv$5056$bP4ck
                                                    g$t$9676$bP4ck
                                                    '(vector))
                                                (g$match-empty$9633$bP4ck
                                                  (vector-ref g$p$9674$bP4ck '1)
                                                  g$r$9675$bP4ck)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$9674$bP4ck))))))))
                                   (vector-ref g$p$9674$bP4ck '0))))))))))
                   (g$combine$9634$bP4ck
                     (case-lambda
                       ((g$r*$9672$bP4ck g$r$9673$bP4ck)
                        (if (null? (car g$r*$9672$bP4ck))
                          g$r$9673$bP4ck
                          (cons
                            (g$map$5063$bP4ck car g$r*$9672$bP4ck)
                            (g$combine$9634$bP4ck
                              (g$map$5063$bP4ck cdr g$r*$9672$bP4ck)
                              g$r$9673$bP4ck))))))
                   (g$match*$9635$bP4ck
                     (case-lambda
                       ((g$e$9654$bP4ck
                          g$p$9655$bP4ck
                          g$m*$9656$bP4ck
                          g$s*$9657$bP4ck
                          g$ae*$9658$bP4ck
                          g$r$9659$bP4ck)
                        (if (null? g$p$9655$bP4ck)
                          (if (null? g$e$9654$bP4ck)
                            (begin '#f g$r$9659$bP4ck)
                            '#f)
                          (if (pair? g$p$9655$bP4ck)
                            (if (pair? g$e$9654$bP4ck)
                              (begin
                                '#f
                                (g$match$9636$bP4ck
                                  (car g$e$9654$bP4ck)
                                  (car g$p$9655$bP4ck)
                                  g$m*$9656$bP4ck
                                  g$s*$9657$bP4ck
                                  g$ae*$9658$bP4ck
                                  (g$match$9636$bP4ck
                                    (cdr g$e$9654$bP4ck)
                                    (cdr g$p$9655$bP4ck)
                                    g$m*$9656$bP4ck
                                    g$s*$9657$bP4ck
                                    g$ae*$9658$bP4ck
                                    g$r$9659$bP4ck)))
                              '#f)
                            (if (eq? g$p$9655$bP4ck 'each-any)
                              ((case-lambda
                                 ((g$l$9660$bP4ck)
                                  (if g$l$9660$bP4ck
                                    (begin
                                      '#f
                                      (cons g$l$9660$bP4ck g$r$9659$bP4ck))
                                    '#f)))
                               (g$match-each-any$9632$bP4ck
                                 g$e$9654$bP4ck
                                 g$m*$9656$bP4ck
                                 g$s*$9657$bP4ck
                                 g$ae*$9658$bP4ck))
                              ((case-lambda
                                 ((g$t$9661$bP4ck)
                                  (if (g$memv$5056$bP4ck g$t$9661$bP4ck '(each))
                                    (if (null? g$e$9654$bP4ck)
                                      (g$match-empty$9633$bP4ck
                                        (vector-ref g$p$9655$bP4ck '1)
                                        g$r$9659$bP4ck)
                                      ((case-lambda
                                         ((g$r*$9662$bP4ck)
                                          (if g$r*$9662$bP4ck
                                            (begin
                                              '#f
                                              (g$combine$9634$bP4ck
                                                g$r*$9662$bP4ck
                                                g$r$9659$bP4ck))
                                            '#f)))
                                       (g$match-each$9630$bP4ck
                                         g$e$9654$bP4ck
                                         (vector-ref g$p$9655$bP4ck '1)
                                         g$m*$9656$bP4ck
                                         g$s*$9657$bP4ck
                                         g$ae*$9658$bP4ck)))
                                    (if (g$memv$5056$bP4ck
                                          g$t$9661$bP4ck
                                          '(free-id))
                                      (if (symbol? g$e$9654$bP4ck)
                                        (if (g$top-marked?$7644$bP4ck
                                              g$m*$9656$bP4ck)
                                          (if (g$free-id=?$7710$bP4ck
                                                (g$stx^$9629$bP4ck
                                                  g$e$9654$bP4ck
                                                  g$m*$9656$bP4ck
                                                  g$s*$9657$bP4ck
                                                  g$ae*$9658$bP4ck)
                                                (vector-ref g$p$9655$bP4ck '1))
                                            (begin '#f g$r$9659$bP4ck)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (g$memv$5056$bP4ck
                                            g$t$9661$bP4ck
                                            '(scheme-id))
                                        (if (symbol? g$e$9654$bP4ck)
                                          (if (g$top-marked?$7644$bP4ck
                                                g$m*$9656$bP4ck)
                                            (if (g$free-id=?$7710$bP4ck
                                                  (g$stx^$9629$bP4ck
                                                    g$e$9654$bP4ck
                                                    g$m*$9656$bP4ck
                                                    g$s*$9657$bP4ck
                                                    g$ae*$9658$bP4ck)
                                                  (g$scheme-stx$7927$bP4ck
                                                    (vector-ref
                                                      g$p$9655$bP4ck
                                                      '1)))
                                              (begin '#f g$r$9659$bP4ck)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (g$memv$5056$bP4ck
                                              g$t$9661$bP4ck
                                              '(each+))
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$9631$bP4ck
                                                 g$e$9654$bP4ck
                                                 (vector-ref g$p$9655$bP4ck '1)
                                                 (vector-ref g$p$9655$bP4ck '2)
                                                 (vector-ref g$p$9655$bP4ck '3)
                                                 g$m*$9656$bP4ck
                                                 g$s*$9657$bP4ck
                                                 g$ae*$9658$bP4ck
                                                 g$r$9659$bP4ck)))
                                            (case-lambda
                                              ((g$xr*$9666$bP4ck
                                                 g$y-pat$9667$bP4ck
                                                 g$r$9668$bP4ck)
                                               ((case-lambda
                                                  ((g$r$9669$bP4ck
                                                     g$y-pat$9670$bP4ck
                                                     g$xr*$9671$bP4ck)
                                                   (if g$r$9669$bP4ck
                                                     (if (null?
                                                           g$y-pat$9670$bP4ck)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$9671$bP4ck)
                                                           (g$match-empty$9633$bP4ck
                                                             (vector-ref
                                                               g$p$9655$bP4ck
                                                               '1)
                                                             g$r$9669$bP4ck)
                                                           (g$combine$9634$bP4ck
                                                             g$xr*$9671$bP4ck
                                                             g$r$9669$bP4ck)))
                                                       '#f)
                                                     '#f)))
                                                g$r$9668$bP4ck
                                                g$y-pat$9667$bP4ck
                                                g$xr*$9666$bP4ck))))
                                          (if (g$memv$5056$bP4ck
                                                g$t$9661$bP4ck
                                                '(atom))
                                            (if (equal?
                                                  (vector-ref g$p$9655$bP4ck '1)
                                                  (g$strip$7716$bP4ck
                                                    g$e$9654$bP4ck
                                                    g$m*$9656$bP4ck))
                                              (begin '#f g$r$9659$bP4ck)
                                              '#f)
                                            (if (g$memv$5056$bP4ck
                                                  g$t$9661$bP4ck
                                                  '(vector))
                                              (if (vector? g$e$9654$bP4ck)
                                                (begin
                                                  '#f
                                                  (g$match$9636$bP4ck
                                                    (vector->list
                                                      g$e$9654$bP4ck)
                                                    (vector-ref
                                                      g$p$9655$bP4ck
                                                      '1)
                                                    g$m*$9656$bP4ck
                                                    g$s*$9657$bP4ck
                                                    g$ae*$9658$bP4ck
                                                    g$r$9659$bP4ck))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$9655$bP4ck)))))))))
                               (vector-ref g$p$9655$bP4ck '0))))))))
                   (g$match$9636$bP4ck
                     (case-lambda
                       ((g$e$9639$bP4ck
                          g$p$9640$bP4ck
                          g$m*$9641$bP4ck
                          g$s*$9642$bP4ck
                          g$ae*$9643$bP4ck
                          g$r$9644$bP4ck)
                        (if (not g$r$9644$bP4ck)
                          '#f
                          (if (eq? g$p$9640$bP4ck '_)
                            g$r$9644$bP4ck
                            (if (eq? g$p$9640$bP4ck 'any)
                              (cons
                                (g$stx^$9629$bP4ck
                                  g$e$9639$bP4ck
                                  g$m*$9641$bP4ck
                                  g$s*$9642$bP4ck
                                  g$ae*$9643$bP4ck)
                                g$r$9644$bP4ck)
                              (if (g$stx?$7678$bP4ck g$e$9639$bP4ck)
                                (if (not (g$top-marked?$7644$bP4ck
                                           g$m*$9641$bP4ck))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$7693$bP4ck
                                           g$m*$9641$bP4ck
                                           g$s*$9642$bP4ck
                                           g$ae*$9643$bP4ck
                                           g$e$9639$bP4ck)))
                                      (case-lambda
                                        ((g$m*$9648$bP4ck
                                           g$s*$9649$bP4ck
                                           g$ae*$9650$bP4ck)
                                         ((case-lambda
                                            ((g$ae*$9651$bP4ck
                                               g$s*$9652$bP4ck
                                               g$m*$9653$bP4ck)
                                             (g$match$9636$bP4ck
                                               (g$stx-expr$7680$bP4ck
                                                 g$e$9639$bP4ck)
                                               g$p$9640$bP4ck
                                               g$m*$9653$bP4ck
                                               g$s*$9652$bP4ck
                                               g$ae*$9651$bP4ck
                                               g$r$9644$bP4ck)))
                                          g$ae*$9650$bP4ck
                                          g$s*$9649$bP4ck
                                          g$m*$9648$bP4ck)))))
                                  '#f)
                                (if (annotation? g$e$9639$bP4ck)
                                  (g$match$9636$bP4ck
                                    (annotation-expression g$e$9639$bP4ck)
                                    g$p$9640$bP4ck
                                    g$m*$9641$bP4ck
                                    g$s*$9642$bP4ck
                                    g$ae*$9643$bP4ck
                                    g$r$9644$bP4ck)
                                  (g$match*$9635$bP4ck
                                    g$e$9639$bP4ck
                                    g$p$9640$bP4ck
                                    g$m*$9641$bP4ck
                                    g$s*$9642$bP4ck
                                    g$ae*$9643$bP4ck
                                    g$r$9644$bP4ck))))))))))
           (case-lambda
             ((g$e$9637$bP4ck g$p$9638$bP4ck)
              (g$match$9636$bP4ck
                g$e$9637$bP4ck
                g$p$9638$bP4ck
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$7985$bP4ck
     g$ellipsis?$11488$bP4ck
     (case-lambda
       ((g$x$9743$bP4ck)
        (if (g$id?$7706$bP4ck g$x$9743$bP4ck)
          (begin
            '#f
            (g$free-id=?$7710$bP4ck
              g$x$9743$bP4ck
              (g$scheme-stx$7927$bP4ck '...)))
          '#f))))
   (g$underscore?$7986$bP4ck
     g$underscore?$11489$bP4ck
     (case-lambda
       ((g$x$9744$bP4ck)
        (if (g$id?$7706$bP4ck g$x$9744$bP4ck)
          (begin
            '#f
            (g$free-id=?$7710$bP4ck
              g$x$9744$bP4ck
              (g$scheme-stx$7927$bP4ck '_)))
          '#f))))
   (g$verify-literals$7987$bP4ck
     g$verify-literals$11490$bP4ck
     (case-lambda
       ((g$lits$9745$bP4ck g$expr$9746$bP4ck)
        (g$for-each$5064$bP4ck
          (case-lambda
            ((g$x$9747$bP4ck)
             (if ((case-lambda
                    ((g$t$9748$bP4ck)
                     (if g$t$9748$bP4ck
                       g$t$9748$bP4ck
                       ((case-lambda
                          ((g$t$9749$bP4ck)
                           (if g$t$9749$bP4ck
                             g$t$9749$bP4ck
                             (begin
                               '#f
                               (g$underscore?$7986$bP4ck g$x$9747$bP4ck)))))
                        (g$ellipsis?$7985$bP4ck g$x$9747$bP4ck)))))
                  (not (g$id?$7706$bP4ck g$x$9747$bP4ck)))
               (g$syntax-violation$8096$bP4ck
                 '#f
                 '"invalid literal"
                 g$expr$9746$bP4ck
                 g$x$9747$bP4ck)
               (void))))
          g$lits$9745$bP4ck))))
   (g$syntax-case-transformer$7988$bP4ck
     g$syntax-case-transformer$11491$bP4ck
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9750$bP4ck
                     (case-lambda
                       ((g$pvars$9807$bP4ck
                          g$expr$9808$bP4ck
                          g$y$9809$bP4ck
                          g$r$9810$bP4ck
                          g$mr$9811$bP4ck)
                        ((case-lambda
                           ((g$ids$9812$bP4ck g$levels$9813$bP4ck)
                            ((case-lambda
                               ((g$labels$9814$bP4ck g$new-vars$9815$bP4ck)
                                ((case-lambda
                                   ((g$body$9816$bP4ck)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7632$bP4ck
                                        '#f
                                        g$new-vars$9815$bP4ck
                                        g$body$9816$bP4ck)
                                      g$y$9809$bP4ck)))
                                 (g$chi-expr$8002$bP4ck
                                   (g$add-subst$7696$bP4ck
                                     (g$make-full-rib$7674$bP4ck
                                       g$ids$9812$bP4ck
                                       g$labels$9814$bP4ck)
                                     g$expr$9808$bP4ck)
                                   (append
                                     (g$map$5063$bP4ck
                                       (case-lambda
                                         ((g$label$9817$bP4ck
                                            g$var$9818$bP4ck
                                            g$level$9819$bP4ck)
                                          (cons
                                            g$label$9817$bP4ck
                                            (g$make-binding$7722$bP4ck
                                              'syntax
                                              (cons
                                                g$var$9818$bP4ck
                                                g$level$9819$bP4ck)))))
                                       g$labels$9814$bP4ck
                                       g$new-vars$9815$bP4ck
                                       (g$map$5063$bP4ck
                                         cdr
                                         g$pvars$9807$bP4ck))
                                     g$r$9810$bP4ck)
                                   g$mr$9811$bP4ck))))
                             (g$map$5063$bP4ck
                               g$gen-label$7647$bP4ck
                               g$ids$9812$bP4ck)
                             (g$map$5063$bP4ck
                               g$gen-lexical$7645$bP4ck
                               g$ids$9812$bP4ck))))
                         (g$map$5063$bP4ck car g$pvars$9807$bP4ck)
                         (g$map$5063$bP4ck cdr g$pvars$9807$bP4ck)))))
                   (g$invalid-ids-error$9751$bP4ck
                     (case-lambda
                       ((g$id*$9801$bP4ck g$e$9802$bP4ck g$class$9803$bP4ck)
                        ((letrec ((g$find$9804$bP4ck
                                    (case-lambda
                                      ((g$id*$9805$bP4ck g$ok*$9806$bP4ck)
                                       (if (null? g$id*$9805$bP4ck)
                                         (g$syntax-violation$8096$bP4ck
                                           '#f
                                           '"invalid syntax"
                                           g$e$9802$bP4ck)
                                         (if (g$id?$7706$bP4ck
                                               (car g$id*$9805$bP4ck))
                                           (if (g$bound-id-member?$7713$bP4ck
                                                 (car g$id*$9805$bP4ck)
                                                 g$ok*$9806$bP4ck)
                                             (g$syntax-error$8093$bP4ck
                                               (car g$id*$9805$bP4ck)
                                               '"duplicate "
                                               g$class$9803$bP4ck)
                                             (g$find$9804$bP4ck
                                               (cdr g$id*$9805$bP4ck)
                                               (cons
                                                 (car g$id*$9805$bP4ck)
                                                 g$ok*$9806$bP4ck)))
                                           (g$syntax-error$8093$bP4ck
                                             (car g$id*$9805$bP4ck)
                                             '"invalid "
                                             g$class$9803$bP4ck)))))))
                           g$find$9804$bP4ck)
                         g$id*$9801$bP4ck
                         '()))))
                   (g$gen-clause$9752$bP4ck
                     (case-lambda
                       ((g$x$9781$bP4ck
                          g$keys$9782$bP4ck
                          g$clauses$9783$bP4ck
                          g$r$9784$bP4ck
                          g$mr$9785$bP4ck
                          g$pat$9786$bP4ck
                          g$fender$9787$bP4ck
                          g$expr$9788$bP4ck)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7983$bP4ck
                               g$pat$9786$bP4ck
                               g$keys$9782$bP4ck)))
                          (case-lambda
                            ((g$p$9791$bP4ck g$pvars$9792$bP4ck)
                             ((case-lambda
                                ((g$pvars$9793$bP4ck g$p$9794$bP4ck)
                                 (if (not (g$distinct-bound-ids?$7712$bP4ck
                                            (g$map$5063$bP4ck
                                              car
                                              g$pvars$9793$bP4ck)))
                                   (g$invalid-ids-error$9751$bP4ck
                                     (g$map$5063$bP4ck car g$pvars$9793$bP4ck)
                                     g$pat$9786$bP4ck
                                     '"pattern variable")
                                   (if (not (g$for-all$5061$bP4ck
                                              (case-lambda
                                                ((g$x$9795$bP4ck)
                                                 (not (g$ellipsis?$7985$bP4ck
                                                        (car g$x$9795$bP4ck)))))
                                              g$pvars$9793$bP4ck))
                                     (g$syntax-violation$8096$bP4ck
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9786$bP4ck)
                                     ((case-lambda
                                        ((g$y$9796$bP4ck)
                                         ((case-lambda
                                            ((g$test$9797$bP4ck)
                                             ((case-lambda
                                                ((g$conseq$9798$bP4ck)
                                                 ((case-lambda
                                                    ((g$altern$9799$bP4ck)
                                                     (list
                                                       (g$build-lambda$7632$bP4ck
                                                         '#f
                                                         (list g$y$9796$bP4ck)
                                                         (list
                                                           'if
                                                           g$test$9797$bP4ck
                                                           g$conseq$9798$bP4ck
                                                           g$altern$9799$bP4ck))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9781$bP4ck
                                                         (list
                                                           'quote
                                                           g$p$9794$bP4ck)))))
                                                  (g$gen-syntax-case$9753$bP4ck
                                                    g$x$9781$bP4ck
                                                    g$keys$9782$bP4ck
                                                    g$clauses$9783$bP4ck
                                                    g$r$9784$bP4ck
                                                    g$mr$9785$bP4ck))))
                                              (g$build-dispatch-call$9750$bP4ck
                                                g$pvars$9793$bP4ck
                                                g$expr$9788$bP4ck
                                                g$y$9796$bP4ck
                                                g$r$9784$bP4ck
                                                g$mr$9785$bP4ck))))
                                          (if (eq? g$fender$9787$bP4ck '#t)
                                            g$y$9796$bP4ck
                                            ((case-lambda
                                               ((g$call$9800$bP4ck)
                                                (list
                                                  'if
                                                  g$y$9796$bP4ck
                                                  g$call$9800$bP4ck
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9750$bP4ck
                                               g$pvars$9793$bP4ck
                                               g$fender$9787$bP4ck
                                               g$y$9796$bP4ck
                                               g$r$9784$bP4ck
                                               g$mr$9785$bP4ck))))))
                                      (g$gen-lexical$7645$bP4ck 'tmp))))))
                              g$pvars$9792$bP4ck
                              g$p$9791$bP4ck)))))))
                   (g$gen-syntax-case$9753$bP4ck
                     (case-lambda
                       ((g$x$9764$bP4ck
                          g$keys$9765$bP4ck
                          g$clauses$9766$bP4ck
                          g$r$9767$bP4ck
                          g$mr$9768$bP4ck)
                        (if (null? g$clauses$9766$bP4ck)
                          (list '(primitive syntax-error) g$x$9764$bP4ck)
                          ((case-lambda
                             ((g$t$9769$bP4ck)
                              ((case-lambda
                                 ((g$ls/false$9770$bP4ck)
                                  (if g$ls/false$9770$bP4ck
                                    (apply
                                      (case-lambda
                                        ((g$pat$9771$bP4ck g$expr$9772$bP4ck)
                                         (if (if (g$id?$7706$bP4ck
                                                   g$pat$9771$bP4ck)
                                               (if (not (g$bound-id-member?$7713$bP4ck
                                                          g$pat$9771$bP4ck
                                                          g$keys$9765$bP4ck))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7985$bP4ck
                                                          g$pat$9771$bP4ck)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7710$bP4ck
                                                 g$pat$9771$bP4ck
                                                 (g$scheme-stx$7927$bP4ck '_))
                                             (g$chi-expr$8002$bP4ck
                                               g$expr$9772$bP4ck
                                               g$r$9767$bP4ck
                                               g$mr$9768$bP4ck)
                                             ((case-lambda
                                                ((g$lab$9773$bP4ck
                                                   g$lex$9774$bP4ck)
                                                 ((case-lambda
                                                    ((g$body$9775$bP4ck)
                                                     (list
                                                       (g$build-lambda$7632$bP4ck
                                                         '#f
                                                         (list g$lex$9774$bP4ck)
                                                         g$body$9775$bP4ck)
                                                       g$x$9764$bP4ck)))
                                                  (g$chi-expr$8002$bP4ck
                                                    (g$add-subst$7696$bP4ck
                                                      (g$make-full-rib$7674$bP4ck
                                                        (list g$pat$9771$bP4ck)
                                                        (list g$lab$9773$bP4ck))
                                                      g$expr$9772$bP4ck)
                                                    (cons
                                                      (cons
                                                        g$lab$9773$bP4ck
                                                        (g$make-binding$7722$bP4ck
                                                          'syntax
                                                          (cons
                                                            g$lex$9774$bP4ck
                                                            '0)))
                                                      g$r$9767$bP4ck)
                                                    g$mr$9768$bP4ck))))
                                              (g$gen-label$7647$bP4ck
                                                g$pat$9771$bP4ck)
                                              (g$gen-lexical$7645$bP4ck
                                                g$pat$9771$bP4ck)))
                                           (g$gen-clause$9752$bP4ck
                                             g$x$9764$bP4ck
                                             g$keys$9765$bP4ck
                                             (cdr g$clauses$9766$bP4ck)
                                             g$r$9767$bP4ck
                                             g$mr$9768$bP4ck
                                             g$pat$9771$bP4ck
                                             '#t
                                             g$expr$9772$bP4ck))))
                                      g$ls/false$9770$bP4ck)
                                    ((case-lambda
                                       ((g$t$9776$bP4ck)
                                        ((case-lambda
                                           ((g$ls/false$9777$bP4ck)
                                            (if g$ls/false$9777$bP4ck
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9778$bP4ck
                                                     g$fender$9779$bP4ck
                                                     g$expr$9780$bP4ck)
                                                   (g$gen-clause$9752$bP4ck
                                                     g$x$9764$bP4ck
                                                     g$keys$9765$bP4ck
                                                     (cdr g$clauses$9766$bP4ck)
                                                     g$r$9767$bP4ck
                                                     g$mr$9768$bP4ck
                                                     g$pat$9778$bP4ck
                                                     g$fender$9779$bP4ck
                                                     g$expr$9780$bP4ck)))
                                                g$ls/false$9777$bP4ck)
                                              (g$syntax-violation$8096$bP4ck
                                                '#f
                                                '"invalid syntax"
                                                g$t$9776$bP4ck))))
                                         (g$syntax-dispatch$7984$bP4ck
                                           g$t$9776$bP4ck
                                           '(any any any)))))
                                     g$t$9769$bP4ck))))
                               (g$syntax-dispatch$7984$bP4ck
                                 g$t$9769$bP4ck
                                 '(any any)))))
                           (car g$clauses$9766$bP4ck)))))))
           (case-lambda
             ((g$e$9754$bP4ck g$r$9755$bP4ck g$mr$9756$bP4ck)
              ((case-lambda
                 ((g$t$9757$bP4ck)
                  ((case-lambda
                     ((g$ls/false$9758$bP4ck)
                      (if g$ls/false$9758$bP4ck
                        (apply
                          (case-lambda
                            ((g$expr$9759$bP4ck
                               g$keys$9760$bP4ck
                               g$clauses$9761$bP4ck)
                             (begin
                               (g$verify-literals$7987$bP4ck
                                 g$keys$9760$bP4ck
                                 g$e$9754$bP4ck)
                               ((case-lambda
                                  ((g$x$9762$bP4ck)
                                   ((case-lambda
                                      ((g$body$9763$bP4ck)
                                       (list
                                         (g$build-lambda$7632$bP4ck
                                           '#f
                                           (list g$x$9762$bP4ck)
                                           g$body$9763$bP4ck)
                                         (g$chi-expr$8002$bP4ck
                                           g$expr$9759$bP4ck
                                           g$r$9755$bP4ck
                                           g$mr$9756$bP4ck))))
                                    (g$gen-syntax-case$9753$bP4ck
                                      g$x$9762$bP4ck
                                      g$keys$9760$bP4ck
                                      g$clauses$9761$bP4ck
                                      g$r$9755$bP4ck
                                      g$mr$9756$bP4ck))))
                                (g$gen-lexical$7645$bP4ck 'tmp)))))
                          g$ls/false$9758$bP4ck)
                        (g$syntax-violation$8096$bP4ck
                          '#f
                          '"invalid syntax"
                          g$t$9757$bP4ck))))
                   (g$syntax-dispatch$7984$bP4ck
                     g$t$9757$bP4ck
                     '(_ any each-any . each-any)))))
               g$e$9754$bP4ck))))))))
   (g$ellipsis-map$7989$bP4ck
     g$ellipsis-map$11492$bP4ck
     (case-lambda
       ((g$proc$9820$bP4ck g$ls$9821$bP4ck . g$ls*$9822$bP4ck)
        (letrec* ((g$who$9823$bP4ck '...))
          (begin
            (if (not (list? g$ls$9821$bP4ck))
              (assertion-violation
                g$who$9823$bP4ck
                '"not a list"
                g$ls$9821$bP4ck)
              (void))
            (if (not (null? g$ls*$9822$bP4ck))
              ((case-lambda
                 ((g$n$9824$bP4ck)
                  (g$for-each$5064$bP4ck
                    (case-lambda
                      ((g$x$9825$bP4ck)
                       (begin
                         (if (not (list? g$x$9825$bP4ck))
                           (assertion-violation
                             g$who$9823$bP4ck
                             '"not a list"
                             g$x$9825$bP4ck)
                           (void))
                         (if (not (= (length g$x$9825$bP4ck) g$n$9824$bP4ck))
                           (assertion-violation
                             g$who$9823$bP4ck
                             '"length mismatch"
                             g$ls$9821$bP4ck
                             g$x$9825$bP4ck)
                           (void)))))
                    g$ls*$9822$bP4ck)))
               (length g$ls$9821$bP4ck))
              (void))
            (apply
              g$map$5063$bP4ck
              g$proc$9820$bP4ck
              g$ls$9821$bP4ck
              g$ls*$9822$bP4ck))))))
   (g$syntax-transformer$7990$bP4ck
     g$syntax-transformer$11493$bP4ck
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9826$bP4ck
                     (case-lambda
                       ((g$src$9886$bP4ck
                          g$e$9887$bP4ck
                          g$r$9888$bP4ck
                          g$maps$9889$bP4ck
                          g$ellipsis?$9890$bP4ck
                          g$vec?$9891$bP4ck)
                        ((case-lambda
                           ((g$t$9892$bP4ck)
                            ((case-lambda
                               ((g$ls/false$9893$bP4ck)
                                (if (if g$ls/false$9893$bP4ck
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9894$bP4ck)
                                             (g$ellipsis?$9890$bP4ck
                                               g$dots$9894$bP4ck)))
                                          g$ls/false$9893$bP4ck))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9895$bP4ck)
                                       (g$syntax-violation$8096$bP4ck
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9886$bP4ck)))
                                    g$ls/false$9893$bP4ck)
                                  ((case-lambda
                                     ((g$t$9896$bP4ck)
                                      ((case-lambda
                                         ((g$ls/false$9897$bP4ck)
                                          (if (if g$ls/false$9897$bP4ck
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9898$bP4ck)
                                                       (g$id?$7706$bP4ck
                                                         g$id$9898$bP4ck)))
                                                    g$ls/false$9897$bP4ck))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9899$bP4ck)
                                                 ((case-lambda
                                                    ((g$label$9900$bP4ck)
                                                     ((case-lambda
                                                        ((g$b$9901$bP4ck)
                                                         (if (eq? (g$binding-type$7723$bP4ck
                                                                    g$b$9901$bP4ck)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$9904$bP4ck)
                                                                    (g$gen-ref$9827$bP4ck
                                                                      g$src$9886$bP4ck
                                                                      (car g$var.lev$9904$bP4ck)
                                                                      (cdr g$var.lev$9904$bP4ck)
                                                                      g$maps$9889$bP4ck)))
                                                                 (g$binding-value$7724$bP4ck
                                                                   g$b$9901$bP4ck))))
                                                             (case-lambda
                                                               ((g$var$9905$bP4ck
                                                                  g$maps$9906$bP4ck)
                                                                ((case-lambda
                                                                   ((g$maps$9907$bP4ck
                                                                      g$var$9908$bP4ck)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$9908$bP4ck)
                                                                      g$maps$9907$bP4ck)))
                                                                 g$maps$9906$bP4ck
                                                                 g$var$9905$bP4ck))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$9887$bP4ck)
                                                             g$maps$9889$bP4ck))))
                                                      (g$label->binding$7721$bP4ck
                                                        g$label$9900$bP4ck
                                                        g$r$9888$bP4ck))))
                                                  (g$id->label$7719$bP4ck
                                                    g$e$9887$bP4ck))))
                                              g$ls/false$9897$bP4ck)
                                            ((case-lambda
                                               ((g$t$9909$bP4ck)
                                                ((case-lambda
                                                   ((g$ls/false$9910$bP4ck)
                                                    (if (if g$ls/false$9910$bP4ck
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9911$bP4ck
                                                                   g$e$9912$bP4ck)
                                                                 (g$ellipsis?$9890$bP4ck
                                                                   g$dots$9911$bP4ck)))
                                                              g$ls/false$9910$bP4ck))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9913$bP4ck
                                                             g$e$9914$bP4ck)
                                                           (if g$vec?$9891$bP4ck
                                                             (g$syntax-violation$8096$bP4ck
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9886$bP4ck)
                                                             (g$gen-syntax$9826$bP4ck
                                                               g$src$9886$bP4ck
                                                               g$e$9914$bP4ck
                                                               g$r$9888$bP4ck
                                                               g$maps$9889$bP4ck
                                                               (case-lambda
                                                                 ((g$x$9915$bP4ck)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9910$bP4ck)
                                                      ((case-lambda
                                                         ((g$t$9916$bP4ck)
                                                          ((case-lambda
                                                             ((g$ls/false$9917$bP4ck)
                                                              (if (if g$ls/false$9917$bP4ck
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9918$bP4ck
                                                                             g$dots$9919$bP4ck
                                                                             g$y$9920$bP4ck)
                                                                           (g$ellipsis?$9890$bP4ck
                                                                             g$dots$9919$bP4ck)))
                                                                        g$ls/false$9917$bP4ck))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9921$bP4ck
                                                                       g$dots$9922$bP4ck
                                                                       g$y$9923$bP4ck)
                                                                     ((letrec ((g$f$9924$bP4ck
                                                                                 (case-lambda
                                                                                   ((g$y$9925$bP4ck
                                                                                      g$k$9926$bP4ck)
                                                                                    ((case-lambda
                                                                                       ((g$t$9927$bP4ck)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9928$bP4ck)
                                                                                            (if g$ls/false$9928$bP4ck
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9926$bP4ck
                                                                                                     g$maps$9889$bP4ck)))
                                                                                                g$ls/false$9928$bP4ck)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9929$bP4ck)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9930$bP4ck)
                                                                                                      (if (if g$ls/false$9930$bP4ck
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9931$bP4ck
                                                                                                                     g$y$9932$bP4ck)
                                                                                                                   (g$ellipsis?$9890$bP4ck
                                                                                                                     g$dots$9931$bP4ck)))
                                                                                                                g$ls/false$9930$bP4ck))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9933$bP4ck
                                                                                                               g$y$9934$bP4ck)
                                                                                                             (g$f$9924$bP4ck
                                                                                                               g$y$9934$bP4ck
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9935$bP4ck)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9926$bP4ck
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9935$bP4ck))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9938$bP4ck
                                                                                                                         g$maps$9939$bP4ck)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9940$bP4ck
                                                                                                                             g$x$9941$bP4ck)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9940$bP4ck))
                                                                                                                             (g$syntax-violation$8096$bP4ck
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9886$bP4ck)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9829$bP4ck
                                                                                                                                 g$x$9941$bP4ck
                                                                                                                                 (car g$maps$9940$bP4ck))
                                                                                                                               (cdr g$maps$9940$bP4ck)))))
                                                                                                                        g$maps$9939$bP4ck
                                                                                                                        g$x$9938$bP4ck)))))))))
                                                                                                          g$ls/false$9930$bP4ck)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9942$bP4ck)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9943$bP4ck)
                                                                                                                (if g$ls/false$9943$bP4ck
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9826$bP4ck
                                                                                                                              g$src$9886$bP4ck
                                                                                                                              g$y$9925$bP4ck
                                                                                                                              g$r$9888$bP4ck
                                                                                                                              g$maps$9889$bP4ck
                                                                                                                              g$ellipsis?$9890$bP4ck
                                                                                                                              g$vec?$9891$bP4ck)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9946$bP4ck
                                                                                                                              g$maps$9947$bP4ck)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9948$bP4ck
                                                                                                                                  g$y$9949$bP4ck)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9926$bP4ck
                                                                                                                                       g$maps$9948$bP4ck)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9952$bP4ck
                                                                                                                                       g$maps$9953$bP4ck)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9954$bP4ck
                                                                                                                                           g$x$9955$bP4ck)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9828$bP4ck
                                                                                                                                             g$x$9955$bP4ck
                                                                                                                                             g$y$9949$bP4ck)
                                                                                                                                           g$maps$9954$bP4ck)))
                                                                                                                                      g$maps$9953$bP4ck
                                                                                                                                      g$x$9952$bP4ck))))))
                                                                                                                             g$maps$9947$bP4ck
                                                                                                                             g$y$9946$bP4ck))))))
                                                                                                                    g$ls/false$9943$bP4ck)
                                                                                                                  (g$syntax-violation$8096$bP4ck
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9942$bP4ck))))
                                                                                                             (g$syntax-dispatch$7984$bP4ck
                                                                                                               g$t$9942$bP4ck
                                                                                                               '_))))
                                                                                                         g$t$9929$bP4ck))))
                                                                                                   (g$syntax-dispatch$7984$bP4ck
                                                                                                     g$t$9929$bP4ck
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9927$bP4ck))))
                                                                                         (g$syntax-dispatch$7984$bP4ck
                                                                                           g$t$9927$bP4ck
                                                                                           '()))))
                                                                                     g$y$9925$bP4ck)))))
                                                                        g$f$9924$bP4ck)
                                                                      g$y$9923$bP4ck
                                                                      (case-lambda
                                                                        ((g$maps$9956$bP4ck)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9826$bP4ck
                                                                                g$src$9886$bP4ck
                                                                                g$x$9921$bP4ck
                                                                                g$r$9888$bP4ck
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9956$bP4ck)
                                                                                g$ellipsis?$9890$bP4ck
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9959$bP4ck
                                                                                g$maps$9960$bP4ck)
                                                                              ((case-lambda
                                                                                 ((g$maps$9961$bP4ck
                                                                                    g$x$9962$bP4ck)
                                                                                  (if (null?
                                                                                        (car g$maps$9961$bP4ck))
                                                                                    (g$syntax-violation$8096$bP4ck
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9886$bP4ck)
                                                                                    (values
                                                                                      (g$gen-map$9830$bP4ck
                                                                                        g$x$9962$bP4ck
                                                                                        (car g$maps$9961$bP4ck))
                                                                                      (cdr g$maps$9961$bP4ck)))))
                                                                               g$maps$9960$bP4ck
                                                                               g$x$9959$bP4ck)))))))))
                                                                  g$ls/false$9917$bP4ck)
                                                                ((case-lambda
                                                                   ((g$t$9963$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9964$bP4ck)
                                                                        (if g$ls/false$9964$bP4ck
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9965$bP4ck
                                                                                 g$y$9966$bP4ck)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9826$bP4ck
                                                                                      g$src$9886$bP4ck
                                                                                      g$x$9965$bP4ck
                                                                                      g$r$9888$bP4ck
                                                                                      g$maps$9889$bP4ck
                                                                                      g$ellipsis?$9890$bP4ck
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9969$bP4ck
                                                                                      g$maps$9970$bP4ck)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9971$bP4ck
                                                                                          g$xnew$9972$bP4ck)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9826$bP4ck
                                                                                               g$src$9886$bP4ck
                                                                                               g$y$9966$bP4ck
                                                                                               g$r$9888$bP4ck
                                                                                               g$maps$9971$bP4ck
                                                                                               g$ellipsis?$9890$bP4ck
                                                                                               g$vec?$9891$bP4ck)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9975$bP4ck
                                                                                               g$maps$9976$bP4ck)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9977$bP4ck
                                                                                                   g$ynew$9978$bP4ck)
                                                                                                 (values
                                                                                                   (g$gen-cons$9831$bP4ck
                                                                                                     g$e$9887$bP4ck
                                                                                                     g$x$9965$bP4ck
                                                                                                     g$y$9966$bP4ck
                                                                                                     g$xnew$9972$bP4ck
                                                                                                     g$ynew$9978$bP4ck)
                                                                                                   g$maps$9977$bP4ck)))
                                                                                              g$maps$9976$bP4ck
                                                                                              g$ynew$9975$bP4ck))))))
                                                                                     g$maps$9970$bP4ck
                                                                                     g$xnew$9969$bP4ck))))))
                                                                            g$ls/false$9964$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$t$9979$bP4ck)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9980$bP4ck)
                                                                                  (if g$ls/false$9980$bP4ck
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9981$bP4ck)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9826$bP4ck
                                                                                                g$src$9886$bP4ck
                                                                                                g$ls$9981$bP4ck
                                                                                                g$r$9888$bP4ck
                                                                                                g$maps$9889$bP4ck
                                                                                                g$ellipsis?$9890$bP4ck
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9984$bP4ck
                                                                                                g$maps$9985$bP4ck)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9986$bP4ck
                                                                                                    g$lsnew$9987$bP4ck)
                                                                                                  (values
                                                                                                    (g$gen-vector$9832$bP4ck
                                                                                                      g$e$9887$bP4ck
                                                                                                      g$ls$9981$bP4ck
                                                                                                      g$lsnew$9987$bP4ck)
                                                                                                    g$maps$9986$bP4ck)))
                                                                                               g$maps$9985$bP4ck
                                                                                               g$lsnew$9984$bP4ck))))))
                                                                                      g$ls/false$9980$bP4ck)
                                                                                    ((case-lambda
                                                                                       ((g$t$9988$bP4ck)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9989$bP4ck)
                                                                                            (if g$ls/false$9989$bP4ck
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9887$bP4ck)
                                                                                                     g$maps$9889$bP4ck)))
                                                                                                g$ls/false$9989$bP4ck)
                                                                                              (g$syntax-violation$8096$bP4ck
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9988$bP4ck))))
                                                                                         (g$syntax-dispatch$7984$bP4ck
                                                                                           g$t$9988$bP4ck
                                                                                           '_))))
                                                                                     g$t$9979$bP4ck))))
                                                                               (g$syntax-dispatch$7984$bP4ck
                                                                                 g$t$9979$bP4ck
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9963$bP4ck))))
                                                                     (g$syntax-dispatch$7984$bP4ck
                                                                       g$t$9963$bP4ck
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9916$bP4ck))))
                                                           (g$syntax-dispatch$7984$bP4ck
                                                             g$t$9916$bP4ck
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9909$bP4ck))))
                                                 (g$syntax-dispatch$7984$bP4ck
                                                   g$t$9909$bP4ck
                                                   '(any any)))))
                                             g$t$9896$bP4ck))))
                                       (g$syntax-dispatch$7984$bP4ck
                                         g$t$9896$bP4ck
                                         'any))))
                                   g$t$9892$bP4ck))))
                             (g$syntax-dispatch$7984$bP4ck
                               g$t$9892$bP4ck
                               'any))))
                         g$e$9887$bP4ck))))
                   (g$gen-ref$9827$bP4ck
                     (case-lambda
                       ((g$src$9873$bP4ck
                          g$var$9874$bP4ck
                          g$level$9875$bP4ck
                          g$maps$9876$bP4ck)
                        (if (= g$level$9875$bP4ck '0)
                          (values g$var$9874$bP4ck g$maps$9876$bP4ck)
                          (if (null? g$maps$9876$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9873$bP4ck)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9827$bP4ck
                                   g$src$9873$bP4ck
                                   g$var$9874$bP4ck
                                   (- g$level$9875$bP4ck '1)
                                   (cdr g$maps$9876$bP4ck))))
                              (case-lambda
                                ((g$outer-var$9879$bP4ck
                                   g$outer-maps$9880$bP4ck)
                                 ((case-lambda
                                    ((g$outer-maps$9881$bP4ck
                                       g$outer-var$9882$bP4ck)
                                     ((case-lambda
                                        ((g$t$9883$bP4ck)
                                         (if g$t$9883$bP4ck
                                           ((case-lambda
                                              ((g$b$9884$bP4ck)
                                               (values
                                                 (cdr g$b$9884$bP4ck)
                                                 g$maps$9876$bP4ck)))
                                            g$t$9883$bP4ck)
                                           ((case-lambda
                                              ((g$inner-var$9885$bP4ck)
                                               (values
                                                 g$inner-var$9885$bP4ck
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9882$bP4ck
                                                       g$inner-var$9885$bP4ck)
                                                     (car g$maps$9876$bP4ck))
                                                   g$outer-maps$9881$bP4ck))))
                                            (g$gen-lexical$7645$bP4ck 'tmp)))))
                                      (g$assq$5051$bP4ck
                                        g$outer-var$9882$bP4ck
                                        (car g$maps$9876$bP4ck)))))
                                  g$outer-maps$9880$bP4ck
                                  g$outer-var$9879$bP4ck)))))))))
                   (g$gen-append$9828$bP4ck
                     (case-lambda
                       ((g$x$9871$bP4ck g$y$9872$bP4ck)
                        (if (equal? g$y$9872$bP4ck ''())
                          g$x$9871$bP4ck
                          (list 'append g$x$9871$bP4ck g$y$9872$bP4ck)))))
                   (g$gen-mappend$9829$bP4ck
                     (case-lambda
                       ((g$e$9869$bP4ck g$map-env$9870$bP4ck)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9830$bP4ck
                            g$e$9869$bP4ck
                            g$map-env$9870$bP4ck)))))
                   (g$gen-map$9830$bP4ck
                     (case-lambda
                       ((g$e$9860$bP4ck g$map-env$9861$bP4ck)
                        ((case-lambda
                           ((g$formals$9862$bP4ck g$actuals$9863$bP4ck)
                            (if (eq? (car g$e$9860$bP4ck) 'ref)
                              (car g$actuals$9863$bP4ck)
                              (if (g$for-all$5061$bP4ck
                                    (case-lambda
                                      ((g$x$9864$bP4ck)
                                       (if (eq? (car g$x$9864$bP4ck) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$5055$bP4ck
                                             (g$cadr$5264$bP4ck g$x$9864$bP4ck)
                                             g$formals$9862$bP4ck))
                                         '#f)))
                                    (cdr g$e$9860$bP4ck))
                                ((case-lambda
                                   ((g$args$9865$bP4ck)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9860$bP4ck))
                                        g$args$9865$bP4ck))))
                                 (g$map$5063$bP4ck
                                   ((case-lambda
                                      ((g$r$9866$bP4ck)
                                       (case-lambda
                                         ((g$x$9867$bP4ck)
                                          (cdr (g$assq$5051$bP4ck
                                                 (g$cadr$5264$bP4ck
                                                   g$x$9867$bP4ck)
                                                 g$r$9866$bP4ck))))))
                                    (g$map$5063$bP4ck
                                      cons
                                      g$formals$9862$bP4ck
                                      g$actuals$9863$bP4ck))
                                   (cdr g$e$9860$bP4ck)))
                                (g$cons*$5065$bP4ck
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9862$bP4ck
                                    g$e$9860$bP4ck)
                                  g$actuals$9863$bP4ck)))))
                         (g$map$5063$bP4ck cdr g$map-env$9861$bP4ck)
                         (g$map$5063$bP4ck
                           (case-lambda
                             ((g$x$9868$bP4ck)
                              (list 'ref (car g$x$9868$bP4ck))))
                           g$map-env$9861$bP4ck)))))
                   (g$gen-cons$9831$bP4ck
                     (case-lambda
                       ((g$e$9852$bP4ck
                          g$x$9853$bP4ck
                          g$y$9854$bP4ck
                          g$xnew$9855$bP4ck
                          g$ynew$9856$bP4ck)
                        ((case-lambda
                           ((g$t$9857$bP4ck)
                            (if (g$memv$5056$bP4ck g$t$9857$bP4ck '(quote))
                              (if (eq? (car g$xnew$9855$bP4ck) 'quote)
                                ((case-lambda
                                   ((g$xnew$9858$bP4ck g$ynew$9859$bP4ck)
                                    (if (if (eq? g$xnew$9858$bP4ck
                                                 g$x$9853$bP4ck)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9859$bP4ck
                                                 g$y$9854$bP4ck))
                                          '#f)
                                      (list 'quote g$e$9852$bP4ck)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9858$bP4ck
                                          g$ynew$9859$bP4ck)))))
                                 (g$cadr$5264$bP4ck g$xnew$9855$bP4ck)
                                 (g$cadr$5264$bP4ck g$ynew$9856$bP4ck))
                                (if (null?
                                      (g$cadr$5264$bP4ck g$ynew$9856$bP4ck))
                                  (list 'list g$xnew$9855$bP4ck)
                                  (list
                                    'cons
                                    g$xnew$9855$bP4ck
                                    g$ynew$9856$bP4ck)))
                              (if (g$memv$5056$bP4ck g$t$9857$bP4ck '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9855$bP4ck
                                    (cdr g$ynew$9856$bP4ck)))
                                (list
                                  'cons
                                  g$xnew$9855$bP4ck
                                  g$ynew$9856$bP4ck)))))
                         (car g$ynew$9856$bP4ck)))))
                   (g$gen-vector$9832$bP4ck
                     (case-lambda
                       ((g$e$9849$bP4ck g$ls$9850$bP4ck g$lsnew$9851$bP4ck)
                        (if (eq? (car g$lsnew$9851$bP4ck) 'quote)
                          (if (eq? (g$cadr$5264$bP4ck g$lsnew$9851$bP4ck)
                                   g$ls$9850$bP4ck)
                            (list 'quote g$e$9849$bP4ck)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5264$bP4ck g$lsnew$9851$bP4ck))))
                          (if (eq? (car g$lsnew$9851$bP4ck) 'list)
                            (cons 'vector (cdr g$lsnew$9851$bP4ck))
                            (list 'list->vector g$lsnew$9851$bP4ck))))))
                   (g$regen$9833$bP4ck
                     (case-lambda
                       ((g$x$9846$bP4ck)
                        ((case-lambda
                           ((g$t$9847$bP4ck)
                            (if (g$memv$5056$bP4ck g$t$9847$bP4ck '(ref))
                              (g$cadr$5264$bP4ck g$x$9846$bP4ck)
                              (if (g$memv$5056$bP4ck
                                    g$t$9847$bP4ck
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5264$bP4ck g$x$9846$bP4ck))
                                (if (g$memv$5056$bP4ck g$t$9847$bP4ck '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5264$bP4ck g$x$9846$bP4ck))
                                  (if (g$memv$5056$bP4ck
                                        g$t$9847$bP4ck
                                        '(lambda))
                                    (g$build-lambda$7632$bP4ck
                                      '#f
                                      (g$cadr$5264$bP4ck g$x$9846$bP4ck)
                                      (g$regen$9833$bP4ck
                                        (g$caddr$5270$bP4ck g$x$9846$bP4ck)))
                                    (if (g$memv$5056$bP4ck
                                          g$t$9847$bP4ck
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$9848$bP4ck)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9848$bP4ck)))
                                       (g$map$5063$bP4ck
                                         g$regen$9833$bP4ck
                                         (cdr g$x$9846$bP4ck)))
                                      (cons
                                        (list 'primitive (car g$x$9846$bP4ck))
                                        (g$map$5063$bP4ck
                                          g$regen$9833$bP4ck
                                          (cdr g$x$9846$bP4ck))))))))))
                         (car g$x$9846$bP4ck))))))
           (case-lambda
             ((g$e$9834$bP4ck g$r$9835$bP4ck g$mr$9836$bP4ck)
              ((case-lambda
                 ((g$t$9837$bP4ck)
                  ((case-lambda
                     ((g$ls/false$9838$bP4ck)
                      (if g$ls/false$9838$bP4ck
                        (apply
                          (case-lambda
                            ((g$x$9839$bP4ck)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9826$bP4ck
                                    g$e$9834$bP4ck
                                    g$x$9839$bP4ck
                                    g$r$9835$bP4ck
                                    '()
                                    g$ellipsis?$7985$bP4ck
                                    '#f)))
                               (case-lambda
                                 ((g$e$9842$bP4ck g$maps$9843$bP4ck)
                                  ((case-lambda
                                     ((g$maps$9844$bP4ck g$e$9845$bP4ck)
                                      (g$regen$9833$bP4ck g$e$9845$bP4ck)))
                                   g$maps$9843$bP4ck
                                   g$e$9842$bP4ck))))))
                          g$ls/false$9838$bP4ck)
                        (g$syntax-violation$8096$bP4ck
                          '#f
                          '"invalid syntax"
                          g$t$9837$bP4ck))))
                   (g$syntax-dispatch$7984$bP4ck g$t$9837$bP4ck '(_ any)))))
               g$e$9834$bP4ck))))))))
   (g$core-macro-transformer$7991$bP4ck
     g$core-macro-transformer$11494$bP4ck
     (case-lambda
       ((g$name$9990$bP4ck)
        ((case-lambda
           ((g$t$9991$bP4ck)
            (if (g$memv$5056$bP4ck g$t$9991$bP4ck '(quote))
              g$quote-transformer$7944$bP4ck
              (if (g$memv$5056$bP4ck g$t$9991$bP4ck '(lambda))
                g$lambda-transformer$7946$bP4ck
                (if (g$memv$5056$bP4ck g$t$9991$bP4ck '(case-lambda))
                  g$case-lambda-transformer$7945$bP4ck
                  (if (g$memv$5056$bP4ck g$t$9991$bP4ck '(letrec))
                    g$letrec-transformer$7934$bP4ck
                    (if (g$memv$5056$bP4ck g$t$9991$bP4ck '(letrec*))
                      g$letrec*-transformer$7935$bP4ck
                      (if (g$memv$5056$bP4ck g$t$9991$bP4ck '(if))
                        g$if-transformer$7942$bP4ck
                        (if (g$memv$5056$bP4ck g$t$9991$bP4ck '(foreign-call))
                          g$foreign-call-transformer$7982$bP4ck
                          (if (g$memv$5056$bP4ck g$t$9991$bP4ck '(syntax-case))
                            g$syntax-case-transformer$7988$bP4ck
                            (if (g$memv$5056$bP4ck g$t$9991$bP4ck '(syntax))
                              g$syntax-transformer$7990$bP4ck
                              (if (g$memv$5056$bP4ck
                                    g$t$9991$bP4ck
                                    '(type-descriptor))
                                g$type-descriptor-transformer$7937$bP4ck
                                (if (g$memv$5056$bP4ck
                                      g$t$9991$bP4ck
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7938$bP4ck
                                  (if (g$memv$5056$bP4ck
                                        g$t$9991$bP4ck
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7939$bP4ck
                                    (if (g$memv$5056$bP4ck
                                          g$t$9991$bP4ck
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7936$bP4ck
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9990$bP4ck))))))))))))))))
         g$name$9990$bP4ck))))
   (g$file-options-macro$7992$bP4ck
     g$file-options-macro$11495$bP4ck
     (case-lambda
       ((g$x$9992$bP4ck)
        (letrec* ((g$valid-option?$9993$bP4ck
                    (case-lambda
                      ((g$x$9998$bP4ck)
                       (if (g$id?$7706$bP4ck g$x$9998$bP4ck)
                         (begin
                           '#f
                           (g$memq$5055$bP4ck
                             (g$id->sym$7707$bP4ck g$x$9998$bP4ck)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9994$bP4ck)
              ((case-lambda
                 ((g$ls/false$9995$bP4ck)
                  (if (if g$ls/false$9995$bP4ck
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9996$bP4ck)
                               (if (g$for-all$5061$bP4ck
                                     g$valid-option?$9993$bP4ck
                                     g$opt*$9996$bP4ck)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6980$bP4ck
                                     (g$map$5063$bP4ck
                                       g$id->sym$7707$bP4ck
                                       g$opt*$9996$bP4ck)))
                                 '#f)))
                            g$ls/false$9995$bP4ck))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9997$bP4ck)
                         (g$bless$7947$bP4ck
                           (list
                             'quote
                             (g$file-options-spec$6980$bP4ck
                               (g$map$5063$bP4ck
                                 g$id->sym$7707$bP4ck
                                 g$opt*$9997$bP4ck))))))
                      g$ls/false$9995$bP4ck)
                    (g$syntax-violation$8096$bP4ck
                      '#f
                      '"invalid syntax"
                      g$t$9994$bP4ck))))
               (g$syntax-dispatch$7984$bP4ck g$t$9994$bP4ck '(_ . each-any)))))
           g$x$9992$bP4ck)))))
   (g$symbol-macro$7993$bP4ck
     g$symbol-macro$11496$bP4ck
     (case-lambda
       ((g$x$9999$bP4ck g$set$10000$bP4ck)
        ((case-lambda
           ((g$t$10001$bP4ck)
            ((case-lambda
               ((g$ls/false$10002$bP4ck)
                (if (if g$ls/false$10002$bP4ck
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$10003$bP4ck)
                             (if (g$id?$7706$bP4ck g$name$10003$bP4ck)
                               (begin
                                 '#f
                                 (g$memq$5055$bP4ck
                                   (g$id->sym$7707$bP4ck g$name$10003$bP4ck)
                                   g$set$10000$bP4ck))
                               '#f)))
                          g$ls/false$10002$bP4ck))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$10004$bP4ck)
                       (g$bless$7947$bP4ck (list 'quote g$name$10004$bP4ck))))
                    g$ls/false$10002$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$10001$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$10001$bP4ck '(_ any)))))
         g$x$9999$bP4ck))))
   (g$macro-transformer$7994$bP4ck
     g$macro-transformer$11497$bP4ck
     (case-lambda
       ((g$x$10005$bP4ck)
        (if (procedure? g$x$10005$bP4ck)
          g$x$10005$bP4ck
          (if (symbol? g$x$10005$bP4ck)
            ((case-lambda
               ((g$t$10006$bP4ck)
                (if (g$memv$5056$bP4ck g$t$10006$bP4ck '(define-record-type))
                  g$define-record-type-macro$7978$bP4ck
                  (if (g$memv$5056$bP4ck g$t$10006$bP4ck '(define-struct))
                    g$define-struct-macro$7977$bP4ck
                    (if (g$memv$5056$bP4ck g$t$10006$bP4ck '(include))
                      g$include-macro$7972$bP4ck
                      (if (g$memv$5056$bP4ck g$t$10006$bP4ck '(cond))
                        g$cond-macro$7970$bP4ck
                        (if (g$memv$5056$bP4ck g$t$10006$bP4ck '(let))
                          g$let-macro$7950$bP4ck
                          (if (g$memv$5056$bP4ck g$t$10006$bP4ck '(do))
                            g$do-macro$7966$bP4ck
                            (if (g$memv$5056$bP4ck g$t$10006$bP4ck '(or))
                              g$or-macro$7968$bP4ck
                              (if (g$memv$5056$bP4ck g$t$10006$bP4ck '(and))
                                g$and-macro$7969$bP4ck
                                (if (g$memv$5056$bP4ck g$t$10006$bP4ck '(let*))
                                  g$let*-macro$7967$bP4ck
                                  (if (g$memv$5056$bP4ck
                                        g$t$10006$bP4ck
                                        '(let-values))
                                    g$let-values-macro$7951$bP4ck
                                    (if (g$memv$5056$bP4ck
                                          g$t$10006$bP4ck
                                          '(let*-values))
                                      g$let*-values-macro$7952$bP4ck
                                      (if (g$memv$5056$bP4ck
                                            g$t$10006$bP4ck
                                            '(syntax-rules))
                                        g$syntax-rules-macro$7974$bP4ck
                                        (if (g$memv$5056$bP4ck
                                              g$t$10006$bP4ck
                                              '(quasiquote))
                                          g$quasiquote-macro$7975$bP4ck
                                          (if (g$memv$5056$bP4ck
                                                g$t$10006$bP4ck
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7976$bP4ck
                                            (if (g$memv$5056$bP4ck
                                                  g$t$10006$bP4ck
                                                  '(with-syntax))
                                              g$with-syntax-macro$7948$bP4ck
                                              (if (g$memv$5056$bP4ck
                                                    g$t$10006$bP4ck
                                                    '(when))
                                                g$when-macro$7940$bP4ck
                                                (if (g$memv$5056$bP4ck
                                                      g$t$10006$bP4ck
                                                      '(unless))
                                                  g$unless-macro$7941$bP4ck
                                                  (if (g$memv$5056$bP4ck
                                                        g$t$10006$bP4ck
                                                        '(case))
                                                    g$case-macro$7943$bP4ck
                                                    (if (g$memv$5056$bP4ck
                                                          g$t$10006$bP4ck
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7965$bP4ck
                                                      (if (g$memv$5056$bP4ck
                                                            g$t$10006$bP4ck
                                                            '(time))
                                                        g$time-macro$7961$bP4ck
                                                        (if (g$memv$5056$bP4ck
                                                              g$t$10006$bP4ck
                                                              '(delay))
                                                          g$delay-macro$7962$bP4ck
                                                          (if (g$memv$5056$bP4ck
                                                                g$t$10006$bP4ck
                                                                '(assert))
                                                            g$assert-macro$7963$bP4ck
                                                            (if (g$memv$5056$bP4ck
                                                                  g$t$10006$bP4ck
                                                                  '(endianness))
                                                              g$endianness-macro$7964$bP4ck
                                                              (if (g$memv$5056$bP4ck
                                                                    g$t$10006$bP4ck
                                                                    '(guard))
                                                                g$guard-macro$7959$bP4ck
                                                                (if (g$memv$5056$bP4ck
                                                                      g$t$10006$bP4ck
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7960$bP4ck
                                                                  (if (g$memv$5056$bP4ck
                                                                        g$t$10006$bP4ck
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7953$bP4ck
                                                                    (if (g$memv$5056$bP4ck
                                                                          g$t$10006$bP4ck
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7954$bP4ck
                                                                      (if (g$memv$5056$bP4ck
                                                                            g$t$10006$bP4ck
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7955$bP4ck
                                                                        (if (g$memv$5056$bP4ck
                                                                              g$t$10006$bP4ck
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7957$bP4ck
                                                                          (if (g$memv$5056$bP4ck
                                                                                g$t$10006$bP4ck
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7958$bP4ck
                                                                            (if (g$memv$5056$bP4ck
                                                                                  g$t$10006$bP4ck
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7979$bP4ck
                                                                              (if (g$memv$5056$bP4ck
                                                                                    g$t$10006$bP4ck
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7981$bP4ck
                                                                                (if (g$memv$5056$bP4ck
                                                                                      g$t$10006$bP4ck
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7973$bP4ck
                                                                                  (if (g$memv$5056$bP4ck
                                                                                        g$t$10006$bP4ck
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$10007$bP4ck)
                                                                                       (g$symbol-macro$7993$bP4ck
                                                                                         g$x$10007$bP4ck
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$5056$bP4ck
                                                                                          g$t$10006$bP4ck
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$10008$bP4ck)
                                                                                         (g$symbol-macro$7993$bP4ck
                                                                                           g$x$10008$bP4ck
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$5056$bP4ck
                                                                                            g$t$10006$bP4ck
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$10009$bP4ck)
                                                                                           (g$symbol-macro$7993$bP4ck
                                                                                             g$x$10009$bP4ck
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$5056$bP4ck
                                                                                              g$t$10006$bP4ck
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7992$bP4ck
                                                                                          (if (g$memv$5056$bP4ck
                                                                                                g$t$10006$bP4ck
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7980$bP4ck
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$10005$bP4ck)))))))))))))))))))))))))))))))))))))))))
             g$x$10005$bP4ck)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$10005$bP4ck))))))
   (g$local-macro-transformer$7995$bP4ck
     g$local-macro-transformer$11498$bP4ck
     (case-lambda ((g$x$10010$bP4ck) (car g$x$10010$bP4ck))))
   (g$do-macro-call$7996$bP4ck
     g$do-macro-call$11499$bP4ck
     (case-lambda
       ((g$transformer$10011$bP4ck g$expr$10012$bP4ck)
        ((case-lambda
           ((g$out$10013$bP4ck)
            (begin
              ((letrec ((g$f$10014$bP4ck
                          (case-lambda
                            ((g$x$10015$bP4ck)
                             (if (not (g$stx?$7678$bP4ck g$x$10015$bP4ck))
                               (if (pair? g$x$10015$bP4ck)
                                 (begin
                                   (g$f$10014$bP4ck (car g$x$10015$bP4ck))
                                   (g$f$10014$bP4ck (cdr g$x$10015$bP4ck)))
                                 (if (vector? g$x$10015$bP4ck)
                                   (vector-for-each
                                     g$f$10014$bP4ck
                                     g$x$10015$bP4ck)
                                   (if (symbol? g$x$10015$bP4ck)
                                     (g$syntax-violation$8096$bP4ck
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$10012$bP4ck
                                       g$x$10015$bP4ck)
                                     (void))))
                               (void))))))
                 g$f$10014$bP4ck)
               g$out$10013$bP4ck)
              (g$add-mark$7695$bP4ck
                (g$gen-mark$7690$bP4ck)
                g$out$10013$bP4ck
                g$expr$10012$bP4ck))))
         (g$transformer$10011$bP4ck
           (g$add-mark$7695$bP4ck
             g$anti-mark$7691$bP4ck
             g$expr$10012$bP4ck
             '#f))))))
   (g$chi-macro$7997$bP4ck
     g$chi-macro$11500$bP4ck
     (case-lambda
       ((g$p$10016$bP4ck g$e$10017$bP4ck)
        (g$do-macro-call$7996$bP4ck
          (g$macro-transformer$7994$bP4ck g$p$10016$bP4ck)
          g$e$10017$bP4ck))))
   (g$chi-local-macro$7998$bP4ck
     g$chi-local-macro$11501$bP4ck
     (case-lambda
       ((g$p$10018$bP4ck g$e$10019$bP4ck)
        (g$do-macro-call$7996$bP4ck
          (g$local-macro-transformer$7995$bP4ck g$p$10018$bP4ck)
          g$e$10019$bP4ck))))
   (g$chi-global-macro$7999$bP4ck
     g$chi-global-macro$11502$bP4ck
     (case-lambda
       ((g$p$10020$bP4ck g$e$10021$bP4ck)
        ((case-lambda
           ((g$lib$10022$bP4ck g$loc$10023$bP4ck)
            (begin
              (g$visit-library$7517$bP4ck g$lib$10022$bP4ck)
              ((case-lambda
                 ((g$x$10024$bP4ck)
                  ((case-lambda
                     ((g$transformer$10025$bP4ck)
                      (g$do-macro-call$7996$bP4ck
                        g$transformer$10025$bP4ck
                        g$e$10021$bP4ck)))
                   (if (procedure? g$x$10024$bP4ck)
                     g$x$10024$bP4ck
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$10024$bP4ck)))))
               (symbol-value g$loc$10023$bP4ck)))))
         (car g$p$10020$bP4ck)
         (cdr g$p$10020$bP4ck)))))
   (g$chi-expr*$8000$bP4ck
     g$chi-expr*$11503$bP4ck
     (case-lambda
       ((g$e*$10026$bP4ck g$r$10027$bP4ck g$mr$10028$bP4ck)
        (if (null? g$e*$10026$bP4ck)
          '()
          ((case-lambda
             ((g$e$10029$bP4ck)
              (cons
                g$e$10029$bP4ck
                (g$chi-expr*$8000$bP4ck
                  (cdr g$e*$10026$bP4ck)
                  g$r$10027$bP4ck
                  g$mr$10028$bP4ck))))
           (g$chi-expr$8002$bP4ck
             (car g$e*$10026$bP4ck)
             g$r$10027$bP4ck
             g$mr$10028$bP4ck))))))
   (g$chi-application$8001$bP4ck
     g$chi-application$11504$bP4ck
     (case-lambda
       ((g$e$10030$bP4ck g$r$10031$bP4ck g$mr$10032$bP4ck)
        ((case-lambda
           ((g$t$10033$bP4ck)
            ((case-lambda
               ((g$ls/false$10034$bP4ck)
                (if g$ls/false$10034$bP4ck
                  (apply
                    (case-lambda
                      ((g$rator$10035$bP4ck g$rands$10036$bP4ck)
                       ((case-lambda
                          ((g$rator$10037$bP4ck)
                           (cons
                             g$rator$10037$bP4ck
                             (g$chi-expr*$8000$bP4ck
                               g$rands$10036$bP4ck
                               g$r$10031$bP4ck
                               g$mr$10032$bP4ck))))
                        (g$chi-expr$8002$bP4ck
                          g$rator$10035$bP4ck
                          g$r$10031$bP4ck
                          g$mr$10032$bP4ck))))
                    g$ls/false$10034$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$10033$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$10033$bP4ck '(any . each-any)))))
         g$e$10030$bP4ck))))
   (g$chi-expr$8002$bP4ck
     g$chi-expr$11505$bP4ck
     (case-lambda
       ((g$e$10038$bP4ck g$r$10039$bP4ck g$mr$10040$bP4ck)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7726$bP4ck g$e$10038$bP4ck g$r$10039$bP4ck)))
          (case-lambda
            ((g$type$10044$bP4ck g$value$10045$bP4ck g$kwd$10046$bP4ck)
             ((case-lambda
                ((g$kwd$10047$bP4ck g$value$10048$bP4ck g$type$10049$bP4ck)
                 ((case-lambda
                    ((g$t$10050$bP4ck)
                     (if (g$memv$5056$bP4ck g$t$10050$bP4ck '(core-macro))
                       ((case-lambda
                          ((g$transformer$10051$bP4ck)
                           (g$transformer$10051$bP4ck
                             g$e$10038$bP4ck
                             g$r$10039$bP4ck
                             g$mr$10040$bP4ck)))
                        (g$core-macro-transformer$7991$bP4ck
                          g$value$10048$bP4ck))
                       (if (g$memv$5056$bP4ck g$t$10050$bP4ck '(global))
                         ((case-lambda
                            ((g$lib$10052$bP4ck)
                             ((case-lambda
                                ((g$loc$10053$bP4ck)
                                 (begin
                                   ((g$inv-collector$8036$bP4ck)
                                    g$lib$10052$bP4ck)
                                   g$loc$10053$bP4ck)))
                              (cdr g$value$10048$bP4ck))))
                          (car g$value$10048$bP4ck))
                         (if (g$memv$5056$bP4ck g$t$10050$bP4ck '(core-prim))
                           ((case-lambda
                              ((g$name$10054$bP4ck)
                               (list 'primitive g$name$10054$bP4ck)))
                            g$value$10048$bP4ck)
                           (if (g$memv$5056$bP4ck g$t$10050$bP4ck '(call))
                             (g$chi-application$8001$bP4ck
                               g$e$10038$bP4ck
                               g$r$10039$bP4ck
                               g$mr$10040$bP4ck)
                             (if (g$memv$5056$bP4ck g$t$10050$bP4ck '(lexical))
                               ((case-lambda
                                  ((g$lex$10055$bP4ck) g$lex$10055$bP4ck))
                                (g$lexical-var$7928$bP4ck g$value$10048$bP4ck))
                               (if (g$memv$5056$bP4ck
                                     g$t$10050$bP4ck
                                     '(global-macro global-macro!))
                                 (g$chi-expr$8002$bP4ck
                                   (g$chi-global-macro$7999$bP4ck
                                     g$value$10048$bP4ck
                                     g$e$10038$bP4ck)
                                   g$r$10039$bP4ck
                                   g$mr$10040$bP4ck)
                                 (if (g$memv$5056$bP4ck
                                       g$t$10050$bP4ck
                                       '(local-macro local-macro!))
                                   (g$chi-expr$8002$bP4ck
                                     (g$chi-local-macro$7998$bP4ck
                                       g$value$10048$bP4ck
                                       g$e$10038$bP4ck)
                                     g$r$10039$bP4ck
                                     g$mr$10040$bP4ck)
                                   (if (g$memv$5056$bP4ck
                                         g$t$10050$bP4ck
                                         '(macro macro!))
                                     (g$chi-expr$8002$bP4ck
                                       (g$chi-macro$7997$bP4ck
                                         g$value$10048$bP4ck
                                         g$e$10038$bP4ck)
                                       g$r$10039$bP4ck
                                       g$mr$10040$bP4ck)
                                     (if (g$memv$5056$bP4ck
                                           g$t$10050$bP4ck
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$10056$bP4ck)
                                           (list 'quote g$datum$10056$bP4ck)))
                                        g$value$10048$bP4ck)
                                       (if (g$memv$5056$bP4ck
                                             g$t$10050$bP4ck
                                             '(set!))
                                         (g$chi-set!$8003$bP4ck
                                           g$e$10038$bP4ck
                                           g$r$10039$bP4ck
                                           g$mr$10040$bP4ck)
                                         (if (g$memv$5056$bP4ck
                                               g$t$10050$bP4ck
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$10057$bP4ck)
                                               ((case-lambda
                                                  ((g$ls/false$10058$bP4ck)
                                                   (if g$ls/false$10058$bP4ck
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10059$bP4ck
                                                            g$x*$10060$bP4ck)
                                                          (g$build-sequence$7635$bP4ck
                                                            '#f
                                                            (g$chi-expr*$8000$bP4ck
                                                              (cons
                                                                g$x$10059$bP4ck
                                                                g$x*$10060$bP4ck)
                                                              g$r$10039$bP4ck
                                                              g$mr$10040$bP4ck))))
                                                       g$ls/false$10058$bP4ck)
                                                     (g$syntax-violation$8096$bP4ck
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10057$bP4ck))))
                                                (g$syntax-dispatch$7984$bP4ck
                                                  g$t$10057$bP4ck
                                                  '(_ any . each-any)))))
                                            g$e$10038$bP4ck)
                                           (if (g$memv$5056$bP4ck
                                                 g$t$10050$bP4ck
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$10061$bP4ck)
                                                 ((case-lambda
                                                    ((g$ls/false$10062$bP4ck)
                                                     (if (if g$ls/false$10062$bP4ck
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$10063$bP4ck
                                                                    g$xrhs*$10064$bP4ck
                                                                    g$xbody$10065$bP4ck
                                                                    g$xbody*$10066$bP4ck)
                                                                  (if (not (g$valid-bound-ids?$7711$bP4ck
                                                                             g$xlhs*$10063$bP4ck))
                                                                    (g$syntax-violation$8096$bP4ck
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$10038$bP4ck)
                                                                    (void))))
                                                               g$ls/false$10062$bP4ck))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$10067$bP4ck
                                                              g$xrhs*$10068$bP4ck
                                                              g$xbody$10069$bP4ck
                                                              g$xbody*$10070$bP4ck)
                                                            ((case-lambda
                                                               ((g$xlab*$10071$bP4ck)
                                                                ((case-lambda
                                                                   ((g$xrib$10072$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$xb*$10073$bP4ck)
                                                                        (g$build-sequence$7635$bP4ck
                                                                          '#f
                                                                          (g$chi-expr*$8000$bP4ck
                                                                            (g$map$5063$bP4ck
                                                                              (case-lambda
                                                                                ((g$x$10074$bP4ck)
                                                                                 (g$add-subst$7696$bP4ck
                                                                                   g$xrib$10072$bP4ck
                                                                                   g$x$10074$bP4ck)))
                                                                              (cons
                                                                                g$xbody$10069$bP4ck
                                                                                g$xbody*$10070$bP4ck))
                                                                            (append
                                                                              (g$map$5063$bP4ck
                                                                                cons
                                                                                g$xlab*$10071$bP4ck
                                                                                g$xb*$10073$bP4ck)
                                                                              g$r$10039$bP4ck)
                                                                            (append
                                                                              (g$map$5063$bP4ck
                                                                                cons
                                                                                g$xlab*$10071$bP4ck
                                                                                g$xb*$10073$bP4ck)
                                                                              g$mr$10040$bP4ck)))))
                                                                     (g$map$5063$bP4ck
                                                                       (case-lambda
                                                                         ((g$x$10075$bP4ck)
                                                                          (g$make-eval-transformer$7738$bP4ck
                                                                            (g$expand-transformer$8029$bP4ck
                                                                              (if (eq? g$type$10049$bP4ck
                                                                                       'let-syntax)
                                                                                g$x$10075$bP4ck
                                                                                (g$add-subst$7696$bP4ck
                                                                                  g$xrib$10072$bP4ck
                                                                                  g$x$10075$bP4ck))
                                                                              g$mr$10040$bP4ck))))
                                                                       g$xrhs*$10068$bP4ck))))
                                                                 (g$make-full-rib$7674$bP4ck
                                                                   g$xlhs*$10067$bP4ck
                                                                   g$xlab*$10071$bP4ck))))
                                                             (g$map$5063$bP4ck
                                                               g$gen-label$7647$bP4ck
                                                               g$xlhs*$10067$bP4ck))))
                                                         g$ls/false$10062$bP4ck)
                                                       (g$syntax-violation$8096$bP4ck
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$10061$bP4ck))))
                                                  (g$syntax-dispatch$7984$bP4ck
                                                    g$t$10061$bP4ck
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$10038$bP4ck)
                                             (if (g$memv$5056$bP4ck
                                                   g$t$10050$bP4ck
                                                   '(displaced-lexical))
                                               (g$syntax-violation$8096$bP4ck
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$10038$bP4ck)
                                               (if (g$memv$5056$bP4ck
                                                     g$t$10050$bP4ck
                                                     '(syntax))
                                                 (g$syntax-violation$8096$bP4ck
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$10038$bP4ck)
                                                 (if (g$memv$5056$bP4ck
                                                       g$t$10050$bP4ck
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$8096$bP4ck
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$10076$bP4ck)
                                                           (if (g$memv$5056$bP4ck
                                                                 g$t$10076$bP4ck
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$5056$bP4ck
                                                                   g$t$10076$bP4ck
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$5056$bP4ck
                                                                     g$t$10076$bP4ck
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$5056$bP4ck
                                                                       g$t$10076$bP4ck
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$5056$bP4ck
                                                                         g$t$10076$bP4ck
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$5056$bP4ck
                                                                           g$t$10076$bP4ck
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$10049$bP4ck)
                                                       '" was found where an expression was expected")
                                                     g$e$10038$bP4ck)
                                                   (if (g$memv$5056$bP4ck
                                                         g$t$10050$bP4ck
                                                         '(mutable))
                                                     (g$syntax-violation$8096$bP4ck
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$10038$bP4ck)
                                                     (g$syntax-violation$8096$bP4ck
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$10038$bP4ck)))))))))))))))))))
                  g$type$10049$bP4ck)))
              g$kwd$10046$bP4ck
              g$value$10045$bP4ck
              g$type$10044$bP4ck)))))))
   (g$chi-set!$8003$bP4ck
     g$chi-set!$11506$bP4ck
     (case-lambda
       ((g$e$10077$bP4ck g$r$10078$bP4ck g$mr$10079$bP4ck)
        ((case-lambda
           ((g$t$10080$bP4ck)
            ((case-lambda
               ((g$ls/false$10081$bP4ck)
                (if (if g$ls/false$10081$bP4ck
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$10082$bP4ck g$v$10083$bP4ck)
                             (g$id?$7706$bP4ck g$x$10082$bP4ck)))
                          g$ls/false$10081$bP4ck))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$10084$bP4ck g$v$10085$bP4ck)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7726$bP4ck
                              g$x$10084$bP4ck
                              g$r$10078$bP4ck)))
                         (case-lambda
                           ((g$type$10089$bP4ck
                              g$value$10090$bP4ck
                              g$kwd$10091$bP4ck)
                            ((case-lambda
                               ((g$kwd$10092$bP4ck
                                  g$value$10093$bP4ck
                                  g$type$10094$bP4ck)
                                ((case-lambda
                                   ((g$t$10095$bP4ck)
                                    (if (g$memv$5056$bP4ck
                                          g$t$10095$bP4ck
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7930$bP4ck
                                          g$value$10093$bP4ck
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7928$bP4ck
                                            g$value$10093$bP4ck)
                                          (g$chi-expr$8002$bP4ck
                                            g$v$10085$bP4ck
                                            g$r$10078$bP4ck
                                            g$mr$10079$bP4ck)))
                                      (if (g$memv$5056$bP4ck
                                            g$t$10095$bP4ck
                                            '(core-prim))
                                        (g$syntax-violation$8096$bP4ck
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$10077$bP4ck)
                                        (if (g$memv$5056$bP4ck
                                              g$t$10095$bP4ck
                                              '(global))
                                          (g$syntax-violation$8096$bP4ck
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$10077$bP4ck)
                                          (if (g$memv$5056$bP4ck
                                                g$t$10095$bP4ck
                                                '(global-macro!))
                                            (g$chi-expr$8002$bP4ck
                                              (g$chi-global-macro$7999$bP4ck
                                                g$value$10093$bP4ck
                                                g$e$10077$bP4ck)
                                              g$r$10078$bP4ck
                                              g$mr$10079$bP4ck)
                                            (if (g$memv$5056$bP4ck
                                                  g$t$10095$bP4ck
                                                  '(local-macro!))
                                              (g$chi-expr$8002$bP4ck
                                                (g$chi-local-macro$7998$bP4ck
                                                  g$value$10093$bP4ck
                                                  g$e$10077$bP4ck)
                                                g$r$10078$bP4ck
                                                g$mr$10079$bP4ck)
                                              (if (g$memv$5056$bP4ck
                                                    g$t$10095$bP4ck
                                                    '(mutable))
                                                (g$syntax-violation$8096$bP4ck
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$10077$bP4ck)
                                                (g$syntax-violation$8096$bP4ck
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$10077$bP4ck)))))))))
                                 g$type$10094$bP4ck)))
                             g$kwd$10091$bP4ck
                             g$value$10090$bP4ck
                             g$type$10089$bP4ck))))))
                    g$ls/false$10081$bP4ck)
                  (g$syntax-violation$8096$bP4ck
                    '#f
                    '"invalid syntax"
                    g$t$10080$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$10080$bP4ck '(_ any any)))))
         g$e$10077$bP4ck))))
   (g$verify-formals$8004$bP4ck
     g$verify-formals$11507$bP4ck
     (case-lambda
       ((g$fmls$10096$bP4ck g$stx$10097$bP4ck)
        ((case-lambda
           ((g$t$10098$bP4ck)
            ((case-lambda
               ((g$ls/false$10099$bP4ck)
                (if g$ls/false$10099$bP4ck
                  (apply
                    (case-lambda
                      ((g$x*$10100$bP4ck)
                       (if (not (g$valid-bound-ids?$7711$bP4ck
                                  g$x*$10100$bP4ck))
                         (g$invalid-fmls-error$7949$bP4ck
                           g$stx$10097$bP4ck
                           g$fmls$10096$bP4ck)
                         (void))))
                    g$ls/false$10099$bP4ck)
                  ((case-lambda
                     ((g$t$10101$bP4ck)
                      ((case-lambda
                         ((g$ls/false$10102$bP4ck)
                          (if g$ls/false$10102$bP4ck
                            (apply
                              (case-lambda
                                ((g$x*$10103$bP4ck g$x$10104$bP4ck)
                                 (if (not (g$valid-bound-ids?$7711$bP4ck
                                            (cons
                                              g$x$10104$bP4ck
                                              g$x*$10103$bP4ck)))
                                   (g$invalid-fmls-error$7949$bP4ck
                                     g$stx$10097$bP4ck
                                     g$fmls$10096$bP4ck)
                                   (void))))
                              g$ls/false$10102$bP4ck)
                            ((case-lambda
                               ((g$t$10105$bP4ck)
                                ((case-lambda
                                   ((g$ls/false$10106$bP4ck)
                                    (if g$ls/false$10106$bP4ck
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8096$bP4ck
                                             '#f
                                             '"invalid syntax"
                                             g$stx$10097$bP4ck)))
                                        g$ls/false$10106$bP4ck)
                                      (g$syntax-violation$8096$bP4ck
                                        '#f
                                        '"invalid syntax"
                                        g$t$10105$bP4ck))))
                                 (g$syntax-dispatch$7984$bP4ck
                                   g$t$10105$bP4ck
                                   '_))))
                             g$t$10101$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$10101$bP4ck
                         '#(each+ any () any)))))
                   g$t$10098$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$10098$bP4ck 'each-any))))
         g$fmls$10096$bP4ck))))
   (g$chi-lambda-clause$8005$bP4ck
     g$chi-lambda-clause$11508$bP4ck
     (case-lambda
       ((g$stx$10107$bP4ck
          g$fmls$10108$bP4ck
          g$body*$10109$bP4ck
          g$r$10110$bP4ck
          g$mr$10111$bP4ck)
        ((case-lambda
           ((g$t$10112$bP4ck)
            ((case-lambda
               ((g$ls/false$10113$bP4ck)
                (if g$ls/false$10113$bP4ck
                  (apply
                    (case-lambda
                      ((g$x*$10114$bP4ck)
                       (begin
                         (g$verify-formals$8004$bP4ck
                           g$fmls$10108$bP4ck
                           g$stx$10107$bP4ck)
                         ((case-lambda
                            ((g$lex*$10115$bP4ck g$lab*$10116$bP4ck)
                             (values
                               g$lex*$10115$bP4ck
                               (g$chi-internal$8013$bP4ck
                                 (g$add-subst$7696$bP4ck
                                   (g$make-full-rib$7674$bP4ck
                                     g$x*$10114$bP4ck
                                     g$lab*$10116$bP4ck)
                                   g$body*$10109$bP4ck)
                                 (g$add-lexicals$7932$bP4ck
                                   g$lab*$10116$bP4ck
                                   g$lex*$10115$bP4ck
                                   g$r$10110$bP4ck)
                                 g$mr$10111$bP4ck))))
                          (g$map$5063$bP4ck
                            g$gen-lexical$7645$bP4ck
                            g$x*$10114$bP4ck)
                          (g$map$5063$bP4ck
                            g$gen-label$7647$bP4ck
                            g$x*$10114$bP4ck)))))
                    g$ls/false$10113$bP4ck)
                  ((case-lambda
                     ((g$t$10117$bP4ck)
                      ((case-lambda
                         ((g$ls/false$10118$bP4ck)
                          (if g$ls/false$10118$bP4ck
                            (apply
                              (case-lambda
                                ((g$x*$10119$bP4ck g$x$10120$bP4ck)
                                 (begin
                                   (g$verify-formals$8004$bP4ck
                                     g$fmls$10108$bP4ck
                                     g$stx$10107$bP4ck)
                                   ((case-lambda
                                      ((g$lex*$10121$bP4ck
                                         g$lab*$10122$bP4ck
                                         g$lex$10123$bP4ck
                                         g$lab$10124$bP4ck)
                                       (values
                                         (append
                                           g$lex*$10121$bP4ck
                                           g$lex$10123$bP4ck)
                                         (g$chi-internal$8013$bP4ck
                                           (g$add-subst$7696$bP4ck
                                             (g$make-full-rib$7674$bP4ck
                                               (cons
                                                 g$x$10120$bP4ck
                                                 g$x*$10119$bP4ck)
                                               (cons
                                                 g$lab$10124$bP4ck
                                                 g$lab*$10122$bP4ck))
                                             g$body*$10109$bP4ck)
                                           (g$add-lexicals$7932$bP4ck
                                             (cons
                                               g$lab$10124$bP4ck
                                               g$lab*$10122$bP4ck)
                                             (cons
                                               g$lex$10123$bP4ck
                                               g$lex*$10121$bP4ck)
                                             g$r$10110$bP4ck)
                                           g$mr$10111$bP4ck))))
                                    (g$map$5063$bP4ck
                                      g$gen-lexical$7645$bP4ck
                                      g$x*$10119$bP4ck)
                                    (g$map$5063$bP4ck
                                      g$gen-label$7647$bP4ck
                                      g$x*$10119$bP4ck)
                                    (g$gen-lexical$7645$bP4ck g$x$10120$bP4ck)
                                    (g$gen-label$7647$bP4ck g$x$10120$bP4ck)))))
                              g$ls/false$10118$bP4ck)
                            ((case-lambda
                               ((g$t$10125$bP4ck)
                                ((case-lambda
                                   ((g$ls/false$10126$bP4ck)
                                    (if g$ls/false$10126$bP4ck
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8096$bP4ck
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$10108$bP4ck)))
                                        g$ls/false$10126$bP4ck)
                                      (g$syntax-violation$8096$bP4ck
                                        '#f
                                        '"invalid syntax"
                                        g$t$10125$bP4ck))))
                                 (g$syntax-dispatch$7984$bP4ck
                                   g$t$10125$bP4ck
                                   '_))))
                             g$t$10117$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$10117$bP4ck
                         '#(each+ any () any)))))
                   g$t$10112$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$10112$bP4ck 'each-any))))
         g$fmls$10108$bP4ck))))
   (g$chi-lambda-clause*$8006$bP4ck
     g$chi-lambda-clause*$11509$bP4ck
     (case-lambda
       ((g$stx$10127$bP4ck
          g$fmls*$10128$bP4ck
          g$body**$10129$bP4ck
          g$r$10130$bP4ck
          g$mr$10131$bP4ck)
        (if (null? g$fmls*$10128$bP4ck)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$8005$bP4ck
                 g$stx$10127$bP4ck
                 (car g$fmls*$10128$bP4ck)
                 (car g$body**$10129$bP4ck)
                 g$r$10130$bP4ck
                 g$mr$10131$bP4ck)))
            (case-lambda
              ((g$a$10134$bP4ck g$b$10135$bP4ck)
               ((case-lambda
                  ((g$b$10136$bP4ck g$a$10137$bP4ck)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$8006$bP4ck
                          g$stx$10127$bP4ck
                          (cdr g$fmls*$10128$bP4ck)
                          (cdr g$body**$10129$bP4ck)
                          g$r$10130$bP4ck
                          g$mr$10131$bP4ck)))
                     (case-lambda
                       ((g$a*$10140$bP4ck g$b*$10141$bP4ck)
                        ((case-lambda
                           ((g$b*$10142$bP4ck g$a*$10143$bP4ck)
                            (values
                              (cons g$a$10137$bP4ck g$a*$10143$bP4ck)
                              (cons g$b$10136$bP4ck g$b*$10142$bP4ck))))
                         g$b*$10141$bP4ck
                         g$a*$10140$bP4ck))))))
                g$b$10135$bP4ck
                g$a$10134$bP4ck))))))))
   (g$chi-defun$8007$bP4ck
     g$chi-defun$11510$bP4ck
     (case-lambda
       ((g$x$10144$bP4ck g$r$10145$bP4ck g$mr$10146$bP4ck)
        ((case-lambda
           ((g$fmls$10147$bP4ck g$body*$10148$bP4ck)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$8005$bP4ck
                   g$fmls$10147$bP4ck
                   g$fmls$10147$bP4ck
                   g$body*$10148$bP4ck
                   g$r$10145$bP4ck
                   g$mr$10146$bP4ck)))
              (case-lambda
                ((g$fmls$10151$bP4ck g$body$10152$bP4ck)
                 ((case-lambda
                    ((g$body$10153$bP4ck g$fmls$10154$bP4ck)
                     (g$build-lambda$7632$bP4ck
                       '#f
                       g$fmls$10154$bP4ck
                       g$body$10153$bP4ck)))
                  g$body$10152$bP4ck
                  g$fmls$10151$bP4ck))))))
         (car g$x$10144$bP4ck)
         (cdr g$x$10144$bP4ck)))))
   (g$chi-rhs$8008$bP4ck
     g$chi-rhs$11511$bP4ck
     (case-lambda
       ((g$rhs$10155$bP4ck g$r$10156$bP4ck g$mr$10157$bP4ck)
        ((case-lambda
           ((g$t$10158$bP4ck)
            (if (g$memv$5056$bP4ck g$t$10158$bP4ck '(defun))
              (g$chi-defun$8007$bP4ck
                (cdr g$rhs$10155$bP4ck)
                g$r$10156$bP4ck
                g$mr$10157$bP4ck)
              (if (g$memv$5056$bP4ck g$t$10158$bP4ck '(expr))
                ((case-lambda
                   ((g$expr$10159$bP4ck)
                    (g$chi-expr$8002$bP4ck
                      g$expr$10159$bP4ck
                      g$r$10156$bP4ck
                      g$mr$10157$bP4ck)))
                 (cdr g$rhs$10155$bP4ck))
                (if (g$memv$5056$bP4ck g$t$10158$bP4ck '(top-expr))
                  ((case-lambda
                     ((g$expr$10160$bP4ck)
                      (g$build-sequence$7635$bP4ck
                        '#f
                        (list
                          (g$chi-expr$8002$bP4ck
                            g$expr$10160$bP4ck
                            g$r$10156$bP4ck
                            g$mr$10157$bP4ck)
                          (g$build-void$7636$bP4ck)))))
                   (cdr g$rhs$10155$bP4ck))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10155$bP4ck))))))
         (car g$rhs$10155$bP4ck)))))
   (g$expand-interaction-rhs*/init*$8009$bP4ck
     g$expand-interaction-rhs*/init*$11512$bP4ck
     (case-lambda
       ((g$lhs*$10161$bP4ck
          g$rhs*$10162$bP4ck
          g$init*$10163$bP4ck
          g$r$10164$bP4ck
          g$mr$10165$bP4ck)
        ((letrec ((g$f$10166$bP4ck
                    (case-lambda
                      ((g$lhs*$10167$bP4ck g$rhs*$10168$bP4ck)
                       (if (null? g$lhs*$10167$bP4ck)
                         (g$map$5063$bP4ck
                           (case-lambda
                             ((g$x$10169$bP4ck)
                              (g$chi-expr$8002$bP4ck
                                g$x$10169$bP4ck
                                g$r$10164$bP4ck
                                g$mr$10165$bP4ck)))
                           g$init*$10163$bP4ck)
                         ((case-lambda
                            ((g$lhs$10170$bP4ck g$rhs$10171$bP4ck)
                             ((case-lambda
                                ((g$t$10172$bP4ck)
                                 (if (g$memv$5056$bP4ck
                                       g$t$10172$bP4ck
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$10173$bP4ck)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10170$bP4ck
                                           g$rhs$10173$bP4ck)
                                         (g$f$10166$bP4ck
                                           (cdr g$lhs*$10167$bP4ck)
                                           (cdr g$rhs*$10168$bP4ck)))))
                                    (g$chi-defun$8007$bP4ck
                                      (cdr g$rhs$10171$bP4ck)
                                      g$r$10164$bP4ck
                                      g$mr$10165$bP4ck))
                                   (if (g$memv$5056$bP4ck
                                         g$t$10172$bP4ck
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$10174$bP4ck)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10170$bP4ck
                                             g$rhs$10174$bP4ck)
                                           (g$f$10166$bP4ck
                                             (cdr g$lhs*$10167$bP4ck)
                                             (cdr g$rhs*$10168$bP4ck)))))
                                      (g$chi-expr$8002$bP4ck
                                        (cdr g$rhs$10171$bP4ck)
                                        g$r$10164$bP4ck
                                        g$mr$10165$bP4ck))
                                     (if (g$memv$5056$bP4ck
                                           g$t$10172$bP4ck
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$10175$bP4ck)
                                           (cons
                                             g$e$10175$bP4ck
                                             (g$f$10166$bP4ck
                                               (cdr g$lhs*$10167$bP4ck)
                                               (cdr g$rhs*$10168$bP4ck)))))
                                        (g$chi-expr$8002$bP4ck
                                          (cdr g$rhs$10171$bP4ck)
                                          g$r$10164$bP4ck
                                          g$mr$10165$bP4ck))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10171$bP4ck))))))
                              (car g$rhs$10171$bP4ck))))
                          (car g$lhs*$10167$bP4ck)
                          (car g$rhs*$10168$bP4ck)))))))
           g$f$10166$bP4ck)
         g$lhs*$10161$bP4ck
         g$rhs*$10162$bP4ck))))
   (g$chi-rhs*$8010$bP4ck
     g$chi-rhs*$11513$bP4ck
     (case-lambda
       ((g$rhs*$10176$bP4ck g$r$10177$bP4ck g$mr$10178$bP4ck)
        ((letrec ((g$f$10179$bP4ck
                    (case-lambda
                      ((g$ls$10180$bP4ck)
                       (if (null? g$ls$10180$bP4ck)
                         '()
                         ((case-lambda
                            ((g$a$10181$bP4ck)
                             (cons
                               g$a$10181$bP4ck
                               (g$f$10179$bP4ck (cdr g$ls$10180$bP4ck)))))
                          (g$chi-rhs$8008$bP4ck
                            (car g$ls$10180$bP4ck)
                            g$r$10177$bP4ck
                            g$mr$10178$bP4ck)))))))
           g$f$10179$bP4ck)
         g$rhs*$10176$bP4ck))))
   (g$find-bound=?$8011$bP4ck
     g$find-bound=?$11514$bP4ck
     (case-lambda
       ((g$x$10182$bP4ck g$lhs*$10183$bP4ck g$rhs*$10184$bP4ck)
        (if (null? g$lhs*$10183$bP4ck)
          '#f
          (if (g$bound-id=?$7709$bP4ck g$x$10182$bP4ck (car g$lhs*$10183$bP4ck))
            (car g$rhs*$10184$bP4ck)
            (g$find-bound=?$8011$bP4ck
              g$x$10182$bP4ck
              (cdr g$lhs*$10183$bP4ck)
              (cdr g$rhs*$10184$bP4ck)))))))
   (g$find-dups$8012$bP4ck
     g$find-dups$11515$bP4ck
     (case-lambda
       ((g$ls$10185$bP4ck)
        ((letrec ((g$f$10186$bP4ck
                    (case-lambda
                      ((g$ls$10187$bP4ck g$dups$10188$bP4ck)
                       (if (null? g$ls$10187$bP4ck)
                         g$dups$10188$bP4ck
                         ((case-lambda
                            ((g$t$10189$bP4ck)
                             (if g$t$10189$bP4ck
                               ((case-lambda
                                  ((g$x$10190$bP4ck)
                                   (g$f$10186$bP4ck
                                     (cdr g$ls$10187$bP4ck)
                                     (cons
                                       (list
                                         (car g$ls$10187$bP4ck)
                                         g$x$10190$bP4ck)
                                       g$dups$10188$bP4ck))))
                                g$t$10189$bP4ck)
                               (g$f$10186$bP4ck
                                 (cdr g$ls$10187$bP4ck)
                                 g$dups$10188$bP4ck))))
                          (g$find-bound=?$8011$bP4ck
                            (car g$ls$10187$bP4ck)
                            (cdr g$ls$10187$bP4ck)
                            (cdr g$ls$10187$bP4ck))))))))
           g$f$10186$bP4ck)
         g$ls$10185$bP4ck
         '()))))
   (g$chi-internal$8013$bP4ck
     g$chi-internal$11516$bP4ck
     (case-lambda
       ((g$e*$10191$bP4ck g$r$10192$bP4ck g$mr$10193$bP4ck)
        ((case-lambda
           ((g$rib$10194$bP4ck)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$8028$bP4ck
                   (g$map$5063$bP4ck
                     (case-lambda
                       ((g$x$10203$bP4ck)
                        (g$add-subst$7696$bP4ck
                          g$rib$10194$bP4ck
                          g$x$10203$bP4ck)))
                     (g$syntax->list$7705$bP4ck g$e*$10191$bP4ck))
                   g$r$10192$bP4ck
                   g$mr$10193$bP4ck
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$10194$bP4ck
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$10204$bP4ck
                   g$r$10205$bP4ck
                   g$mr$10206$bP4ck
                   g$lex*$10207$bP4ck
                   g$rhs*$10208$bP4ck
                   g$mod**$10209$bP4ck
                   g$kwd*$10210$bP4ck
                   g$_exp*$10211$bP4ck)
                 ((case-lambda
                    ((g$_exp*$10212$bP4ck
                       g$kwd*$10213$bP4ck
                       g$mod**$10214$bP4ck
                       g$rhs*$10215$bP4ck
                       g$lex*$10216$bP4ck
                       g$mr$10217$bP4ck
                       g$r$10218$bP4ck
                       g$e*$10219$bP4ck)
                     (begin
                       (if (null? g$e*$10219$bP4ck)
                         (g$syntax-violation$8096$bP4ck
                           '#f
                           '"no expression in body"
                           g$e*$10219$bP4ck)
                         (void))
                       ((case-lambda
                          ((g$init*$10220$bP4ck)
                           ((case-lambda
                              ((g$rhs*$10221$bP4ck)
                               (g$build-letrec*$7638$bP4ck
                                 '#f
                                 (reverse g$lex*$10216$bP4ck)
                                 (reverse g$rhs*$10221$bP4ck)
                                 (g$build-sequence$7635$bP4ck
                                   '#f
                                   g$init*$10220$bP4ck))))
                            (g$chi-rhs*$8010$bP4ck
                              g$rhs*$10215$bP4ck
                              g$r$10218$bP4ck
                              g$mr$10217$bP4ck))))
                        (g$chi-expr*$8000$bP4ck
                          (append
                            (apply append (reverse g$mod**$10214$bP4ck))
                            g$e*$10219$bP4ck)
                          g$r$10218$bP4ck
                          g$mr$10217$bP4ck)))))
                  g$_exp*$10211$bP4ck
                  g$kwd*$10210$bP4ck
                  g$mod**$10209$bP4ck
                  g$rhs*$10208$bP4ck
                  g$lex*$10207$bP4ck
                  g$mr$10206$bP4ck
                  g$r$10205$bP4ck
                  g$e*$10204$bP4ck))))))
         (g$make-empty-rib$7666$bP4ck)))))
   (g$parse-module$8014$bP4ck
     g$parse-module$11517$bP4ck
     (case-lambda
       ((g$e$10222$bP4ck)
        ((case-lambda
           ((g$t$10223$bP4ck)
            ((case-lambda
               ((g$ls/false$10224$bP4ck)
                (if g$ls/false$10224$bP4ck
                  (apply
                    (case-lambda
                      ((g$export*$10225$bP4ck g$b*$10226$bP4ck)
                       (begin
                         (if (not (g$for-all$5061$bP4ck
                                    g$id?$7706$bP4ck
                                    g$export*$10225$bP4ck))
                           (g$syntax-violation$8096$bP4ck
                             '#f
                             '"module exports must be identifiers"
                             g$e$10222$bP4ck)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$10225$bP4ck)
                           g$b*$10226$bP4ck))))
                    g$ls/false$10224$bP4ck)
                  ((case-lambda
                     ((g$t$10227$bP4ck)
                      ((case-lambda
                         ((g$ls/false$10228$bP4ck)
                          (if g$ls/false$10228$bP4ck
                            (apply
                              (case-lambda
                                ((g$name$10229$bP4ck
                                   g$export*$10230$bP4ck
                                   g$b*$10231$bP4ck)
                                 (begin
                                   (if (not (g$id?$7706$bP4ck
                                              g$name$10229$bP4ck))
                                     (g$syntax-violation$8096$bP4ck
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10222$bP4ck)
                                     (void))
                                   (if (not (g$for-all$5061$bP4ck
                                              g$id?$7706$bP4ck
                                              g$export*$10230$bP4ck))
                                     (g$syntax-violation$8096$bP4ck
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10222$bP4ck)
                                     (void))
                                   (values
                                     g$name$10229$bP4ck
                                     (list->vector g$export*$10230$bP4ck)
                                     g$b*$10231$bP4ck))))
                              g$ls/false$10228$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$10227$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$10227$bP4ck
                         '(_ any each-any . each-any)))))
                   g$t$10223$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$10223$bP4ck
               '(_ each-any . each-any)))))
         g$e$10222$bP4ck))))
   (g$9059$8015$bP4ck
     g$9059$11518$bP4ck
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9062$bP4ck
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$9061$8016$bP4ck g$9061$11519$bP4ck '#f)
   (g$9060$8017$bP4ck
     g$9060$11520$bP4ck
     (make-record-constructor-descriptor
       g$9059$8015$bP4ck
       '#f
       g$9061$8016$bP4ck))
   (g$module-interface?$8018$bP4ck
     g$module-interface?$11521$bP4ck
     (record-predicate g$9059$8015$bP4ck))
   (g$make-module-interface$8019$bP4ck
     g$make-module-interface$11522$bP4ck
     (record-constructor g$9060$8017$bP4ck))
   (g$module-interface-first-mark$8020$bP4ck
     g$module-interface-first-mark$11523$bP4ck
     (record-accessor g$9059$8015$bP4ck '0))
   (g$module-interface-exp-id-vec$8021$bP4ck
     g$module-interface-exp-id-vec$11524$bP4ck
     (record-accessor g$9059$8015$bP4ck '1))
   (g$module-interface-exp-lab-vec$8022$bP4ck
     g$module-interface-exp-lab-vec$11525$bP4ck
     (record-accessor g$9059$8015$bP4ck '2))
   (g$set-module-interface-first-mark!$8023$bP4ck
     g$set-module-interface-first-mark!$11526$bP4ck
     (record-mutator g$9059$8015$bP4ck '0))
   (g$set-module-interface-exp-id-vec!$8024$bP4ck
     g$set-module-interface-exp-id-vec!$11527$bP4ck
     (record-mutator g$9059$8015$bP4ck '1))
   (g$set-module-interface-exp-lab-vec!$8025$bP4ck
     g$set-module-interface-exp-lab-vec!$11528$bP4ck
     (record-mutator g$9059$8015$bP4ck '2))
   (g$module-interface-exp-id*$8026$bP4ck
     g$module-interface-exp-id*$11529$bP4ck
     (case-lambda
       ((g$iface$10232$bP4ck g$id$10233$bP4ck)
        (letrec* ((g$diff-marks$10234$bP4ck
                    (case-lambda
                      ((g$ls$10238$bP4ck g$x$10239$bP4ck)
                       (begin
                         (if (null? g$ls$10238$bP4ck)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10240$bP4ck)
                             (if (eq? g$a$10240$bP4ck g$x$10239$bP4ck)
                               '()
                               (cons
                                 g$a$10240$bP4ck
                                 (g$diff-marks$10234$bP4ck
                                   (cdr g$ls$10238$bP4ck)
                                   g$x$10239$bP4ck)))))
                          (car g$ls$10238$bP4ck)))))))
          ((case-lambda
             ((g$diff$10235$bP4ck g$id-vec$10236$bP4ck)
              (if (null? g$diff$10235$bP4ck)
                g$id-vec$10236$bP4ck
                (vector-map
                  (case-lambda
                    ((g$x$10237$bP4ck)
                     (g$make-stx$7679$bP4ck
                       (g$stx-expr$7680$bP4ck g$x$10237$bP4ck)
                       (append
                         g$diff$10235$bP4ck
                         (g$stx-mark*$7681$bP4ck g$x$10237$bP4ck))
                       '()
                       '())))
                  g$id-vec$10236$bP4ck))))
           (g$diff-marks$10234$bP4ck
             (g$stx-mark*$7681$bP4ck g$id$10233$bP4ck)
             (g$module-interface-first-mark$8020$bP4ck g$iface$10232$bP4ck))
           (g$module-interface-exp-id-vec$8021$bP4ck g$iface$10232$bP4ck))))))
   (g$chi-internal-module$8027$bP4ck
     g$chi-internal-module$11530$bP4ck
     (case-lambda
       ((g$e$10241$bP4ck
          g$r$10242$bP4ck
          g$mr$10243$bP4ck
          g$lex*$10244$bP4ck
          g$rhs*$10245$bP4ck
          g$mod**$10246$bP4ck
          g$kwd*$10247$bP4ck)
        (call-with-values
          (case-lambda (() (g$parse-module$8014$bP4ck g$e$10241$bP4ck)))
          (case-lambda
            ((g$name$10251$bP4ck g$exp-id*$10252$bP4ck g$e*$10253$bP4ck)
             ((case-lambda
                ((g$e*$10254$bP4ck g$exp-id*$10255$bP4ck g$name$10256$bP4ck)
                 ((case-lambda
                    ((g$rib$10257$bP4ck)
                     ((case-lambda
                        ((g$e*$10258$bP4ck)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$8028$bP4ck
                                g$e*$10258$bP4ck
                                g$r$10242$bP4ck
                                g$mr$10243$bP4ck
                                g$lex*$10244$bP4ck
                                g$rhs*$10245$bP4ck
                                g$mod**$10246$bP4ck
                                g$kwd*$10247$bP4ck
                                '()
                                g$rib$10257$bP4ck
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$10267$bP4ck
                                g$r$10268$bP4ck
                                g$mr$10269$bP4ck
                                g$lex*$10270$bP4ck
                                g$rhs*$10271$bP4ck
                                g$mod**$10272$bP4ck
                                g$kwd*$10273$bP4ck
                                g$_exp*$10274$bP4ck)
                              ((case-lambda
                                 ((g$_exp*$10275$bP4ck
                                    g$kwd*$10276$bP4ck
                                    g$mod**$10277$bP4ck
                                    g$rhs*$10278$bP4ck
                                    g$lex*$10279$bP4ck
                                    g$mr$10280$bP4ck
                                    g$r$10281$bP4ck
                                    g$e*$10282$bP4ck)
                                  ((case-lambda
                                     ((g$exp-lab*$10283$bP4ck
                                        g$mod**$10284$bP4ck)
                                      (if (not g$name$10256$bP4ck)
                                        (values
                                          g$lex*$10279$bP4ck
                                          g$rhs*$10278$bP4ck
                                          g$exp-id*$10255$bP4ck
                                          g$exp-lab*$10283$bP4ck
                                          g$r$10281$bP4ck
                                          g$mr$10280$bP4ck
                                          g$mod**$10284$bP4ck
                                          g$kwd*$10276$bP4ck)
                                        ((case-lambda
                                           ((g$lab$10285$bP4ck
                                              g$iface$10286$bP4ck)
                                            (values
                                              g$lex*$10279$bP4ck
                                              g$rhs*$10278$bP4ck
                                              (vector g$name$10256$bP4ck)
                                              (vector g$lab$10285$bP4ck)
                                              (cons
                                                (cons
                                                  g$lab$10285$bP4ck
                                                  (cons
                                                    '$module
                                                    g$iface$10286$bP4ck))
                                                g$r$10281$bP4ck)
                                              (cons
                                                (cons
                                                  g$lab$10285$bP4ck
                                                  (cons
                                                    '$module
                                                    g$iface$10286$bP4ck))
                                                g$mr$10280$bP4ck)
                                              g$mod**$10284$bP4ck
                                              g$kwd*$10276$bP4ck)))
                                         (g$gen-label$7647$bP4ck 'module)
                                         (g$make-module-interface$8019$bP4ck
                                           (car (g$stx-mark*$7681$bP4ck
                                                  g$name$10256$bP4ck))
                                           (vector-map
                                             (case-lambda
                                               ((g$x$10287$bP4ck)
                                                (g$make-stx$7679$bP4ck
                                                  (g$stx-expr$7680$bP4ck
                                                    g$x$10287$bP4ck)
                                                  (g$stx-mark*$7681$bP4ck
                                                    g$x$10287$bP4ck)
                                                  '()
                                                  '())))
                                             g$exp-id*$10255$bP4ck)
                                           g$exp-lab*$10283$bP4ck)))))
                                   (vector-map
                                     (case-lambda
                                       ((g$x$10288$bP4ck)
                                        ((case-lambda
                                           ((g$t$10289$bP4ck)
                                            (if g$t$10289$bP4ck
                                              g$t$10289$bP4ck
                                              (begin
                                                '#f
                                                (g$syntax-violation$8096$bP4ck
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$10288$bP4ck)))))
                                         (g$id->label$7719$bP4ck
                                           (g$make-stx$7679$bP4ck
                                             (g$id->sym$7707$bP4ck
                                               g$x$10288$bP4ck)
                                             (g$stx-mark*$7681$bP4ck
                                               g$x$10288$bP4ck)
                                             (list g$rib$10257$bP4ck)
                                             '())))))
                                     g$exp-id*$10255$bP4ck)
                                   (cons
                                     g$e*$10282$bP4ck
                                     g$mod**$10277$bP4ck))))
                               g$_exp*$10274$bP4ck
                               g$kwd*$10273$bP4ck
                               g$mod**$10272$bP4ck
                               g$rhs*$10271$bP4ck
                               g$lex*$10270$bP4ck
                               g$mr$10269$bP4ck
                               g$r$10268$bP4ck
                               g$e*$10267$bP4ck))))))
                      (g$map$5063$bP4ck
                        (case-lambda
                          ((g$x$10290$bP4ck)
                           (g$add-subst$7696$bP4ck
                             g$rib$10257$bP4ck
                             g$x$10290$bP4ck)))
                        (g$syntax->list$7705$bP4ck g$e*$10254$bP4ck)))))
                  (g$make-empty-rib$7666$bP4ck))))
              g$e*$10253$bP4ck
              g$exp-id*$10252$bP4ck
              g$name$10251$bP4ck)))))))
   (g$chi-body*$8028$bP4ck
     g$chi-body*$11531$bP4ck
     (case-lambda
       ((g$e*$10291$bP4ck
          g$r$10292$bP4ck
          g$mr$10293$bP4ck
          g$lex*$10294$bP4ck
          g$rhs*$10295$bP4ck
          g$mod**$10296$bP4ck
          g$kwd*$10297$bP4ck
          g$exp*$10298$bP4ck
          g$rib$10299$bP4ck
          g$mix?$10300$bP4ck
          g$sd?$10301$bP4ck)
        (if (null? g$e*$10291$bP4ck)
          (values
            g$e*$10291$bP4ck
            g$r$10292$bP4ck
            g$mr$10293$bP4ck
            g$lex*$10294$bP4ck
            g$rhs*$10295$bP4ck
            g$mod**$10296$bP4ck
            g$kwd*$10297$bP4ck
            g$exp*$10298$bP4ck)
          ((case-lambda
             ((g$e$10302$bP4ck)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7726$bP4ck g$e$10302$bP4ck g$r$10292$bP4ck)))
                (case-lambda
                  ((g$type$10306$bP4ck g$value$10307$bP4ck g$kwd$10308$bP4ck)
                   ((case-lambda
                      ((g$kwd$10309$bP4ck
                         g$value$10310$bP4ck
                         g$type$10311$bP4ck)
                       ((case-lambda
                          ((g$kwd*$10312$bP4ck)
                           ((case-lambda
                              ((g$t$10313$bP4ck)
                               (if (g$memv$5056$bP4ck g$t$10313$bP4ck '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7924$bP4ck
                                        g$e$10302$bP4ck)))
                                   (case-lambda
                                     ((g$id$10316$bP4ck g$rhs$10317$bP4ck)
                                      ((case-lambda
                                         ((g$rhs$10318$bP4ck g$id$10319$bP4ck)
                                          (begin
                                            (if (g$bound-id-member?$7713$bP4ck
                                                  g$id$10319$bP4ck
                                                  g$kwd*$10312$bP4ck)
                                              (g$syntax-violation$8096$bP4ck
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10302$bP4ck)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7649$bP4ck
                                                   g$id$10319$bP4ck
                                                   g$rib$10299$bP4ck
                                                   g$sd?$10301$bP4ck)))
                                              (case-lambda
                                                ((g$lab$10322$bP4ck
                                                   g$lex$10323$bP4ck)
                                                 ((case-lambda
                                                    ((g$lex$10324$bP4ck
                                                       g$lab$10325$bP4ck)
                                                     (begin
                                                       (g$extend-rib!$7669$bP4ck
                                                         g$rib$10299$bP4ck
                                                         g$id$10319$bP4ck
                                                         g$lab$10325$bP4ck
                                                         g$sd?$10301$bP4ck)
                                                       (g$chi-body*$8028$bP4ck
                                                         (cdr g$e*$10291$bP4ck)
                                                         (g$add-lexical$7931$bP4ck
                                                           g$lab$10325$bP4ck
                                                           g$lex$10324$bP4ck
                                                           g$r$10292$bP4ck)
                                                         g$mr$10293$bP4ck
                                                         (cons
                                                           g$lex$10324$bP4ck
                                                           g$lex*$10294$bP4ck)
                                                         (cons
                                                           g$rhs$10318$bP4ck
                                                           g$rhs*$10295$bP4ck)
                                                         g$mod**$10296$bP4ck
                                                         g$kwd*$10312$bP4ck
                                                         g$exp*$10298$bP4ck
                                                         g$rib$10299$bP4ck
                                                         g$mix?$10300$bP4ck
                                                         g$sd?$10301$bP4ck))))
                                                  g$lex$10323$bP4ck
                                                  g$lab$10322$bP4ck)))))))
                                       g$rhs$10317$bP4ck
                                       g$id$10316$bP4ck))))
                                 (if (g$memv$5056$bP4ck
                                       g$t$10313$bP4ck
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7925$bP4ck
                                          g$e$10302$bP4ck)))
                                     (case-lambda
                                       ((g$id$10328$bP4ck g$rhs$10329$bP4ck)
                                        ((case-lambda
                                           ((g$rhs$10330$bP4ck g$id$10331$bP4ck)
                                            (begin
                                              (if (g$bound-id-member?$7713$bP4ck
                                                    g$id$10331$bP4ck
                                                    g$kwd*$10312$bP4ck)
                                                (g$syntax-violation$8096$bP4ck
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10302$bP4ck)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10332$bP4ck)
                                                  ((case-lambda
                                                     ((g$expanded-rhs$10333$bP4ck)
                                                      (begin
                                                        (g$extend-rib!$7669$bP4ck
                                                          g$rib$10299$bP4ck
                                                          g$id$10331$bP4ck
                                                          g$lab$10332$bP4ck
                                                          g$sd?$10301$bP4ck)
                                                        ((case-lambda
                                                           ((g$b$10334$bP4ck)
                                                            (g$chi-body*$8028$bP4ck
                                                              (cdr g$e*$10291$bP4ck)
                                                              (cons
                                                                (cons
                                                                  g$lab$10332$bP4ck
                                                                  g$b$10334$bP4ck)
                                                                g$r$10292$bP4ck)
                                                              (cons
                                                                (cons
                                                                  g$lab$10332$bP4ck
                                                                  g$b$10334$bP4ck)
                                                                g$mr$10293$bP4ck)
                                                              g$lex*$10294$bP4ck
                                                              g$rhs*$10295$bP4ck
                                                              g$mod**$10296$bP4ck
                                                              g$kwd*$10312$bP4ck
                                                              g$exp*$10298$bP4ck
                                                              g$rib$10299$bP4ck
                                                              g$mix?$10300$bP4ck
                                                              g$sd?$10301$bP4ck)))
                                                         (g$make-eval-transformer$7738$bP4ck
                                                           g$expanded-rhs$10333$bP4ck)))))
                                                   (g$expand-transformer$8029$bP4ck
                                                     g$rhs$10330$bP4ck
                                                     g$mr$10293$bP4ck))))
                                               (g$gen-define-label$7650$bP4ck
                                                 g$id$10331$bP4ck
                                                 g$rib$10299$bP4ck
                                                 g$sd?$10301$bP4ck)))))
                                         g$rhs$10329$bP4ck
                                         g$id$10328$bP4ck))))
                                   (if (g$memv$5056$bP4ck
                                         g$t$10313$bP4ck
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10335$bP4ck)
                                         ((case-lambda
                                            ((g$ls/false$10336$bP4ck)
                                             (if (if g$ls/false$10336$bP4ck
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10337$bP4ck
                                                            g$xrhs*$10338$bP4ck
                                                            g$xbody*$10339$bP4ck)
                                                          (if (not (g$valid-bound-ids?$7711$bP4ck
                                                                     g$xlhs*$10337$bP4ck))
                                                            (g$syntax-violation$8096$bP4ck
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10302$bP4ck)
                                                            (void))))
                                                       g$ls/false$10336$bP4ck))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10340$bP4ck
                                                      g$xrhs*$10341$bP4ck
                                                      g$xbody*$10342$bP4ck)
                                                    ((case-lambda
                                                       ((g$xlab*$10343$bP4ck)
                                                        ((case-lambda
                                                           ((g$xrib$10344$bP4ck)
                                                            ((case-lambda
                                                               ((g$xb*$10345$bP4ck)
                                                                (g$chi-body*$8028$bP4ck
                                                                  (append
                                                                    (g$map$5063$bP4ck
                                                                      (case-lambda
                                                                        ((g$x$10346$bP4ck)
                                                                         (g$add-subst$7696$bP4ck
                                                                           g$xrib$10344$bP4ck
                                                                           g$x$10346$bP4ck)))
                                                                      g$xbody*$10342$bP4ck)
                                                                    (cdr g$e*$10291$bP4ck))
                                                                  (append
                                                                    (g$map$5063$bP4ck
                                                                      cons
                                                                      g$xlab*$10343$bP4ck
                                                                      g$xb*$10345$bP4ck)
                                                                    g$r$10292$bP4ck)
                                                                  (append
                                                                    (g$map$5063$bP4ck
                                                                      cons
                                                                      g$xlab*$10343$bP4ck
                                                                      g$xb*$10345$bP4ck)
                                                                    g$mr$10293$bP4ck)
                                                                  g$lex*$10294$bP4ck
                                                                  g$rhs*$10295$bP4ck
                                                                  g$mod**$10296$bP4ck
                                                                  g$kwd*$10312$bP4ck
                                                                  g$exp*$10298$bP4ck
                                                                  g$rib$10299$bP4ck
                                                                  g$mix?$10300$bP4ck
                                                                  g$sd?$10301$bP4ck)))
                                                             (g$map$5063$bP4ck
                                                               (case-lambda
                                                                 ((g$x$10347$bP4ck)
                                                                  (g$make-eval-transformer$7738$bP4ck
                                                                    (g$expand-transformer$8029$bP4ck
                                                                      (if (eq? g$type$10311$bP4ck
                                                                               'let-syntax)
                                                                        g$x$10347$bP4ck
                                                                        (g$add-subst$7696$bP4ck
                                                                          g$xrib$10344$bP4ck
                                                                          g$x$10347$bP4ck))
                                                                      g$mr$10293$bP4ck))))
                                                               g$xrhs*$10341$bP4ck))))
                                                         (g$make-full-rib$7674$bP4ck
                                                           g$xlhs*$10340$bP4ck
                                                           g$xlab*$10343$bP4ck))))
                                                     (g$map$5063$bP4ck
                                                       g$gen-label$7647$bP4ck
                                                       g$xlhs*$10340$bP4ck))))
                                                 g$ls/false$10336$bP4ck)
                                               (g$syntax-violation$8096$bP4ck
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10335$bP4ck))))
                                          (g$syntax-dispatch$7984$bP4ck
                                            g$t$10335$bP4ck
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10302$bP4ck)
                                     (if (g$memv$5056$bP4ck
                                           g$t$10313$bP4ck
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$10348$bP4ck)
                                           ((case-lambda
                                              ((g$ls/false$10349$bP4ck)
                                               (if g$ls/false$10349$bP4ck
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10350$bP4ck)
                                                      (g$chi-body*$8028$bP4ck
                                                        (append
                                                          g$x*$10350$bP4ck
                                                          (cdr g$e*$10291$bP4ck))
                                                        g$r$10292$bP4ck
                                                        g$mr$10293$bP4ck
                                                        g$lex*$10294$bP4ck
                                                        g$rhs*$10295$bP4ck
                                                        g$mod**$10296$bP4ck
                                                        g$kwd*$10312$bP4ck
                                                        g$exp*$10298$bP4ck
                                                        g$rib$10299$bP4ck
                                                        g$mix?$10300$bP4ck
                                                        g$sd?$10301$bP4ck)))
                                                   g$ls/false$10349$bP4ck)
                                                 (g$syntax-violation$8096$bP4ck
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10348$bP4ck))))
                                            (g$syntax-dispatch$7984$bP4ck
                                              g$t$10348$bP4ck
                                              '(_ . each-any)))))
                                        g$e$10302$bP4ck)
                                       (if (g$memv$5056$bP4ck
                                             g$t$10313$bP4ck
                                             '(global-macro global-macro!))
                                         (g$chi-body*$8028$bP4ck
                                           (cons
                                             (g$add-subst$7696$bP4ck
                                               g$rib$10299$bP4ck
                                               (g$chi-global-macro$7999$bP4ck
                                                 g$value$10310$bP4ck
                                                 g$e$10302$bP4ck))
                                             (cdr g$e*$10291$bP4ck))
                                           g$r$10292$bP4ck
                                           g$mr$10293$bP4ck
                                           g$lex*$10294$bP4ck
                                           g$rhs*$10295$bP4ck
                                           g$mod**$10296$bP4ck
                                           g$kwd*$10312$bP4ck
                                           g$exp*$10298$bP4ck
                                           g$rib$10299$bP4ck
                                           g$mix?$10300$bP4ck
                                           g$sd?$10301$bP4ck)
                                         (if (g$memv$5056$bP4ck
                                               g$t$10313$bP4ck
                                               '(local-macro local-macro!))
                                           (g$chi-body*$8028$bP4ck
                                             (cons
                                               (g$add-subst$7696$bP4ck
                                                 g$rib$10299$bP4ck
                                                 (g$chi-local-macro$7998$bP4ck
                                                   g$value$10310$bP4ck
                                                   g$e$10302$bP4ck))
                                               (cdr g$e*$10291$bP4ck))
                                             g$r$10292$bP4ck
                                             g$mr$10293$bP4ck
                                             g$lex*$10294$bP4ck
                                             g$rhs*$10295$bP4ck
                                             g$mod**$10296$bP4ck
                                             g$kwd*$10312$bP4ck
                                             g$exp*$10298$bP4ck
                                             g$rib$10299$bP4ck
                                             g$mix?$10300$bP4ck
                                             g$sd?$10301$bP4ck)
                                           (if (g$memv$5056$bP4ck
                                                 g$t$10313$bP4ck
                                                 '(macro macro!))
                                             (g$chi-body*$8028$bP4ck
                                               (cons
                                                 (g$add-subst$7696$bP4ck
                                                   g$rib$10299$bP4ck
                                                   (g$chi-macro$7997$bP4ck
                                                     g$value$10310$bP4ck
                                                     g$e$10302$bP4ck))
                                                 (cdr g$e*$10291$bP4ck))
                                               g$r$10292$bP4ck
                                               g$mr$10293$bP4ck
                                               g$lex*$10294$bP4ck
                                               g$rhs*$10295$bP4ck
                                               g$mod**$10296$bP4ck
                                               g$kwd*$10312$bP4ck
                                               g$exp*$10298$bP4ck
                                               g$rib$10299$bP4ck
                                               g$mix?$10300$bP4ck
                                               g$sd?$10301$bP4ck)
                                             (if (g$memv$5056$bP4ck
                                                   g$t$10313$bP4ck
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$8027$bP4ck
                                                      g$e$10302$bP4ck
                                                      g$r$10292$bP4ck
                                                      g$mr$10293$bP4ck
                                                      g$lex*$10294$bP4ck
                                                      g$rhs*$10295$bP4ck
                                                      g$mod**$10296$bP4ck
                                                      g$kwd*$10312$bP4ck)))
                                                 (case-lambda
                                                   ((g$lex*$10359$bP4ck
                                                      g$rhs*$10360$bP4ck
                                                      g$m-exp-id*$10361$bP4ck
                                                      g$m-exp-lab*$10362$bP4ck
                                                      g$r$10363$bP4ck
                                                      g$mr$10364$bP4ck
                                                      g$mod**$10365$bP4ck
                                                      g$kwd*$10366$bP4ck)
                                                    ((case-lambda
                                                       ((g$kwd*$10367$bP4ck
                                                          g$mod**$10368$bP4ck
                                                          g$mr$10369$bP4ck
                                                          g$r$10370$bP4ck
                                                          g$m-exp-lab*$10371$bP4ck
                                                          g$m-exp-id*$10372$bP4ck
                                                          g$rhs*$10373$bP4ck
                                                          g$lex*$10374$bP4ck)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$10375$bP4ck
                                                                 g$lab$10376$bP4ck)
                                                               (g$extend-rib!$7669$bP4ck
                                                                 g$rib$10299$bP4ck
                                                                 g$id$10375$bP4ck
                                                                 g$lab$10376$bP4ck
                                                                 g$sd?$10301$bP4ck)))
                                                            g$m-exp-id*$10372$bP4ck
                                                            g$m-exp-lab*$10371$bP4ck)
                                                          (g$chi-body*$8028$bP4ck
                                                            (cdr g$e*$10291$bP4ck)
                                                            g$r$10370$bP4ck
                                                            g$mr$10369$bP4ck
                                                            g$lex*$10374$bP4ck
                                                            g$rhs*$10373$bP4ck
                                                            g$mod**$10368$bP4ck
                                                            g$kwd*$10367$bP4ck
                                                            g$exp*$10298$bP4ck
                                                            g$rib$10299$bP4ck
                                                            g$mix?$10300$bP4ck
                                                            g$sd?$10301$bP4ck))))
                                                     g$kwd*$10366$bP4ck
                                                     g$mod**$10365$bP4ck
                                                     g$mr$10364$bP4ck
                                                     g$r$10363$bP4ck
                                                     g$m-exp-lab*$10362$bP4ck
                                                     g$m-exp-id*$10361$bP4ck
                                                     g$rhs*$10360$bP4ck
                                                     g$lex*$10359$bP4ck))))
                                               (if (g$memv$5056$bP4ck
                                                     g$t$10313$bP4ck
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$8080$bP4ck
                                                     (g$stx->datum$7717$bP4ck
                                                       g$e$10302$bP4ck))
                                                   (g$chi-body*$8028$bP4ck
                                                     (cdr g$e*$10291$bP4ck)
                                                     g$r$10292$bP4ck
                                                     g$mr$10293$bP4ck
                                                     g$lex*$10294$bP4ck
                                                     g$rhs*$10295$bP4ck
                                                     g$mod**$10296$bP4ck
                                                     g$kwd*$10312$bP4ck
                                                     g$exp*$10298$bP4ck
                                                     g$rib$10299$bP4ck
                                                     g$mix?$10300$bP4ck
                                                     g$sd?$10301$bP4ck))
                                                 (if (g$memv$5056$bP4ck
                                                       g$t$10313$bP4ck
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$10377$bP4ck)
                                                       ((case-lambda
                                                          ((g$ls/false$10378$bP4ck)
                                                           (if g$ls/false$10378$bP4ck
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$10379$bP4ck)
                                                                  (g$chi-body*$8028$bP4ck
                                                                    (cdr g$e*$10291$bP4ck)
                                                                    g$r$10292$bP4ck
                                                                    g$mr$10293$bP4ck
                                                                    g$lex*$10294$bP4ck
                                                                    g$rhs*$10295$bP4ck
                                                                    g$mod**$10296$bP4ck
                                                                    g$kwd*$10312$bP4ck
                                                                    (append
                                                                      g$exp-decl*$10379$bP4ck
                                                                      g$exp*$10298$bP4ck)
                                                                    g$rib$10299$bP4ck
                                                                    g$mix?$10300$bP4ck
                                                                    g$sd?$10301$bP4ck)))
                                                               g$ls/false$10378$bP4ck)
                                                             (g$syntax-violation$8096$bP4ck
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$10377$bP4ck))))
                                                        (g$syntax-dispatch$7984$bP4ck
                                                          g$t$10377$bP4ck
                                                          '(_ . each-any)))))
                                                    g$e$10302$bP4ck)
                                                   (if (g$memv$5056$bP4ck
                                                         g$t$10313$bP4ck
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10380$bP4ck
                                                                     (case-lambda
                                                                       ((g$e$10422$bP4ck)
                                                                        ((case-lambda
                                                                           ((g$t$10423$bP4ck)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10424$bP4ck)
                                                                                (if (if g$ls/false$10424$bP4ck
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10425$bP4ck)
                                                                                             (g$id?$7706$bP4ck
                                                                                               g$id$10425$bP4ck)))
                                                                                          g$ls/false$10424$bP4ck))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10426$bP4ck)
                                                                                       '#t))
                                                                                    g$ls/false$10424$bP4ck)
                                                                                  ((case-lambda
                                                                                     ((g$t$10427$bP4ck)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10428$bP4ck)
                                                                                          (if g$ls/false$10428$bP4ck
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10429$bP4ck)
                                                                                                 '#f))
                                                                                              g$ls/false$10428$bP4ck)
                                                                                            ((case-lambda
                                                                                               ((g$t$10430$bP4ck)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10431$bP4ck)
                                                                                                    (if g$ls/false$10431$bP4ck
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$8096$bP4ck
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10422$bP4ck)))
                                                                                                        g$ls/false$10431$bP4ck)
                                                                                                      (g$syntax-violation$8096$bP4ck
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10430$bP4ck))))
                                                                                                 (g$syntax-dispatch$7984$bP4ck
                                                                                                   g$t$10430$bP4ck
                                                                                                   '_))))
                                                                                             g$t$10427$bP4ck))))
                                                                                       (g$syntax-dispatch$7984$bP4ck
                                                                                         g$t$10427$bP4ck
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10423$bP4ck))))
                                                                             (g$syntax-dispatch$7984$bP4ck
                                                                               g$t$10423$bP4ck
                                                                               '(_ any)))))
                                                                         g$e$10422$bP4ck))))
                                                                   (g$module-import$10381$bP4ck
                                                                     (case-lambda
                                                                       ((g$e$10405$bP4ck
                                                                          g$r$10406$bP4ck)
                                                                        ((case-lambda
                                                                           ((g$t$10407$bP4ck)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10408$bP4ck)
                                                                                (if (if g$ls/false$10408$bP4ck
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10409$bP4ck)
                                                                                             (g$id?$7706$bP4ck
                                                                                               g$id$10409$bP4ck)))
                                                                                          g$ls/false$10408$bP4ck))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10410$bP4ck)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7726$bP4ck
                                                                                              g$id$10410$bP4ck
                                                                                              g$r$10406$bP4ck)))
                                                                                         (case-lambda
                                                                                           ((g$type$10414$bP4ck
                                                                                              g$value$10415$bP4ck
                                                                                              g$kwd$10416$bP4ck)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10417$bP4ck
                                                                                                  g$value$10418$bP4ck
                                                                                                  g$type$10419$bP4ck)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10420$bP4ck)
                                                                                                    (if (g$memv$5056$bP4ck
                                                                                                          g$t$10420$bP4ck
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10421$bP4ck)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$8026$bP4ck
                                                                                                              g$iface$10421$bP4ck
                                                                                                              g$id$10410$bP4ck)
                                                                                                            (g$module-interface-exp-lab-vec$8022$bP4ck
                                                                                                              g$iface$10421$bP4ck))))
                                                                                                       g$value$10418$bP4ck)
                                                                                                      (g$syntax-violation$8096$bP4ck
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10405$bP4ck))))
                                                                                                 g$type$10419$bP4ck)))
                                                                                             g$kwd$10416$bP4ck
                                                                                             g$value$10415$bP4ck
                                                                                             g$type$10414$bP4ck))))))
                                                                                    g$ls/false$10408$bP4ck)
                                                                                  (g$syntax-violation$8096$bP4ck
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10407$bP4ck))))
                                                                             (g$syntax-dispatch$7984$bP4ck
                                                                               g$t$10407$bP4ck
                                                                               '(_ any)))))
                                                                         g$e$10405$bP4ck))))
                                                                   (g$library-import$10382$bP4ck
                                                                     (case-lambda
                                                                       ((g$e$10391$bP4ck)
                                                                        ((case-lambda
                                                                           ((g$t$10392$bP4ck)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10393$bP4ck)
                                                                                (if g$ls/false$10393$bP4ck
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10394$bP4ck
                                                                                         g$imp*$10395$bP4ck)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$8033$bP4ck
                                                                                              (g$syntax->datum$8099$bP4ck
                                                                                                g$imp*$10395$bP4ck))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10398$bP4ck
                                                                                              g$subst-labels$10399$bP4ck)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10400$bP4ck
                                                                                                  g$subst-names$10401$bP4ck)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10402$bP4ck)
                                                                                                       (g$datum->stx$7689$bP4ck
                                                                                                         g$ctxt$10394$bP4ck
                                                                                                         g$name$10402$bP4ck)))
                                                                                                    g$subst-names$10401$bP4ck)
                                                                                                  g$subst-labels$10400$bP4ck)))
                                                                                             g$subst-labels$10399$bP4ck
                                                                                             g$subst-names$10398$bP4ck))))))
                                                                                    g$ls/false$10393$bP4ck)
                                                                                  ((case-lambda
                                                                                     ((g$t$10403$bP4ck)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10404$bP4ck)
                                                                                          (if g$ls/false$10404$bP4ck
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8096$bP4ck
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10391$bP4ck)))
                                                                                              g$ls/false$10404$bP4ck)
                                                                                            (g$syntax-violation$8096$bP4ck
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10403$bP4ck))))
                                                                                       (g$syntax-dispatch$7984$bP4ck
                                                                                         g$t$10403$bP4ck
                                                                                         '_))))
                                                                                   g$t$10392$bP4ck))))
                                                                             (g$syntax-dispatch$7984$bP4ck
                                                                               g$t$10392$bP4ck
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10391$bP4ck)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$10380$bP4ck
                                                                        g$e$10302$bP4ck)
                                                                    (g$module-import$10381$bP4ck
                                                                      g$e$10302$bP4ck
                                                                      g$r$10292$bP4ck)
                                                                    (g$library-import$10382$bP4ck
                                                                      g$e$10302$bP4ck))))
                                                               (case-lambda
                                                                 ((g$id*$10385$bP4ck
                                                                    g$lab*$10386$bP4ck)
                                                                  ((case-lambda
                                                                     ((g$lab*$10387$bP4ck
                                                                        g$id*$10388$bP4ck)
                                                                      (vector-for-each
                                                                        (case-lambda
                                                                          ((g$id$10389$bP4ck
                                                                             g$lab$10390$bP4ck)
                                                                           (g$extend-rib!$7669$bP4ck
                                                                             g$rib$10299$bP4ck
                                                                             g$id$10389$bP4ck
                                                                             g$lab$10390$bP4ck
                                                                             g$sd?$10301$bP4ck)))
                                                                        g$id*$10388$bP4ck
                                                                        g$lab*$10387$bP4ck)))
                                                                   g$lab*$10386$bP4ck
                                                                   g$id*$10385$bP4ck))))
                                                             (g$chi-body*$8028$bP4ck
                                                               (cdr g$e*$10291$bP4ck)
                                                               g$r$10292$bP4ck
                                                               g$mr$10293$bP4ck
                                                               g$lex*$10294$bP4ck
                                                               g$rhs*$10295$bP4ck
                                                               g$mod**$10296$bP4ck
                                                               g$kwd*$10312$bP4ck
                                                               g$exp*$10298$bP4ck
                                                               g$rib$10299$bP4ck
                                                               g$mix?$10300$bP4ck
                                                               g$sd?$10301$bP4ck))))))
                                                     (if g$mix?$10300$bP4ck
                                                       (g$chi-body*$8028$bP4ck
                                                         (cdr g$e*$10291$bP4ck)
                                                         g$r$10292$bP4ck
                                                         g$mr$10293$bP4ck
                                                         (cons
                                                           (g$gen-lexical$7645$bP4ck
                                                             'dummy)
                                                           g$lex*$10294$bP4ck)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$10302$bP4ck)
                                                           g$rhs*$10295$bP4ck)
                                                         g$mod**$10296$bP4ck
                                                         g$kwd*$10312$bP4ck
                                                         g$exp*$10298$bP4ck
                                                         g$rib$10299$bP4ck
                                                         '#t
                                                         g$sd?$10301$bP4ck)
                                                       (values
                                                         g$e*$10291$bP4ck
                                                         g$r$10292$bP4ck
                                                         g$mr$10293$bP4ck
                                                         g$lex*$10294$bP4ck
                                                         g$rhs*$10295$bP4ck
                                                         g$mod**$10296$bP4ck
                                                         g$kwd*$10312$bP4ck
                                                         g$exp*$10298$bP4ck)))))))))))))))
                            g$type$10311$bP4ck)))
                        (if (g$id?$7706$bP4ck g$kwd$10309$bP4ck)
                          (cons g$kwd$10309$bP4ck g$kwd*$10297$bP4ck)
                          g$kwd*$10297$bP4ck))))
                    g$kwd$10308$bP4ck
                    g$value$10307$bP4ck
                    g$type$10306$bP4ck))))))
           (car g$e*$10291$bP4ck))))))
   (g$expand-transformer$8029$bP4ck
     g$expand-transformer$11532$bP4ck
     (case-lambda
       ((g$expr$10432$bP4ck g$r$10433$bP4ck)
        ((case-lambda
           ((g$rtc$10434$bP4ck)
            ((case-lambda
               ((g$expanded-rhs$10435$bP4ck)
                (begin
                  (g$for-each$5064$bP4ck
                    ((case-lambda
                       ((g$mark-visit$10436$bP4ck)
                        (case-lambda
                          ((g$x$10437$bP4ck)
                           (begin
                             (g$invoke-library$7516$bP4ck g$x$10437$bP4ck)
                             (g$mark-visit$10436$bP4ck g$x$10437$bP4ck))))))
                     (g$vis-collector$8037$bP4ck))
                    (g$rtc$10434$bP4ck))
                  g$expanded-rhs$10435$bP4ck)))
             ((case-lambda
                ((g$inv-collector$10442$bP4ck
                   g$vis-collector$10443$bP4ck
                   g$inv-collector$10444$bP4ck
                   g$vis-collector$10445$bP4ck)
                 ((case-lambda
                    ((g$swap$10446$bP4ck)
                     (dynamic-wind
                       g$swap$10446$bP4ck
                       (case-lambda
                         (()
                          (g$chi-expr$8002$bP4ck
                            g$expr$10432$bP4ck
                            g$r$10433$bP4ck
                            g$r$10433$bP4ck)))
                       g$swap$10446$bP4ck)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10447$bP4ck)
                           (begin
                             (g$inv-collector$10442$bP4ck
                               g$inv-collector$10444$bP4ck)
                             (set! g$inv-collector$10444$bP4ck
                               g$t$10447$bP4ck))))
                        (g$inv-collector$10442$bP4ck))
                       ((case-lambda
                          ((g$t$10448$bP4ck)
                           (begin
                             (g$vis-collector$10443$bP4ck
                               g$vis-collector$10445$bP4ck)
                             (set! g$vis-collector$10445$bP4ck
                               g$t$10448$bP4ck))))
                        (g$vis-collector$10443$bP4ck))))))))
              g$inv-collector$8036$bP4ck
              g$vis-collector$8037$bP4ck
              g$rtc$10434$bP4ck
              (case-lambda ((g$x$10449$bP4ck) (values)))))))
         (g$make-collector$8035$bP4ck)))))
   (g$parse-exports$8030$bP4ck
     g$parse-exports$11533$bP4ck
     (case-lambda
       ((g$exp*$10450$bP4ck)
        ((letrec ((g$f$10451$bP4ck
                    (case-lambda
                      ((g$exp*$10452$bP4ck
                         g$int*$10453$bP4ck
                         g$ext*$10454$bP4ck)
                       (if (null? g$exp*$10452$bP4ck)
                         (begin
                           (if (not (g$valid-bound-ids?$7711$bP4ck
                                      g$ext*$10454$bP4ck))
                             (g$syntax-violation$8096$bP4ck
                               'export
                               '"invalid exports"
                               (g$find-dups$8012$bP4ck g$ext*$10454$bP4ck))
                             (void))
                           (values
                             (g$map$5063$bP4ck
                               g$syntax->datum$8099$bP4ck
                               g$ext*$10454$bP4ck)
                             g$int*$10453$bP4ck))
                         ((case-lambda
                            ((g$t$10455$bP4ck)
                             ((case-lambda
                                ((g$ls/false$10456$bP4ck)
                                 (if g$ls/false$10456$bP4ck
                                   (apply
                                     (case-lambda
                                       ((g$rename$10457$bP4ck
                                          g$i*$10458$bP4ck
                                          g$e*$10459$bP4ck)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$8099$bP4ck
                                                              g$rename$10457$bP4ck)
                                                            'rename)
                                                     (if (g$for-all$5061$bP4ck
                                                           g$id?$7706$bP4ck
                                                           g$i*$10458$bP4ck)
                                                       (begin
                                                         '#f
                                                         (g$for-all$5061$bP4ck
                                                           g$id?$7706$bP4ck
                                                           g$e*$10459$bP4ck))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$8096$bP4ck
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$10452$bP4ck))
                                            (void))
                                          (g$f$10451$bP4ck
                                            (cdr g$exp*$10452$bP4ck)
                                            (append
                                              g$i*$10458$bP4ck
                                              g$int*$10453$bP4ck)
                                            (append
                                              g$e*$10459$bP4ck
                                              g$ext*$10454$bP4ck)))))
                                     g$ls/false$10456$bP4ck)
                                   ((case-lambda
                                      ((g$t$10460$bP4ck)
                                       ((case-lambda
                                          ((g$ls/false$10461$bP4ck)
                                           (if g$ls/false$10461$bP4ck
                                             (apply
                                               (case-lambda
                                                 ((g$ie$10462$bP4ck)
                                                  (begin
                                                    (if (not (g$id?$7706$bP4ck
                                                               g$ie$10462$bP4ck))
                                                      (g$syntax-violation$8096$bP4ck
                                                        'export
                                                        '"invalid export"
                                                        g$ie$10462$bP4ck)
                                                      (void))
                                                    (g$f$10451$bP4ck
                                                      (cdr g$exp*$10452$bP4ck)
                                                      (cons
                                                        g$ie$10462$bP4ck
                                                        g$int*$10453$bP4ck)
                                                      (cons
                                                        g$ie$10462$bP4ck
                                                        g$ext*$10454$bP4ck)))))
                                               g$ls/false$10461$bP4ck)
                                             (g$syntax-violation$8096$bP4ck
                                               '#f
                                               '"invalid syntax"
                                               g$t$10460$bP4ck))))
                                        (g$syntax-dispatch$7984$bP4ck
                                          g$t$10460$bP4ck
                                          'any))))
                                    g$t$10455$bP4ck))))
                              (g$syntax-dispatch$7984$bP4ck
                                g$t$10455$bP4ck
                                '(any . #(each (any any)))))))
                          (car g$exp*$10452$bP4ck)))))))
           g$f$10451$bP4ck)
         g$exp*$10450$bP4ck
         '()
         '()))))
   (g$parse-library-name$8031$bP4ck
     g$parse-library-name$11534$bP4ck
     (case-lambda
       ((g$spec$10463$bP4ck)
        (letrec* ((g$parse$10464$bP4ck
                    (case-lambda
                      ((g$x$10471$bP4ck)
                       ((case-lambda
                          ((g$t$10472$bP4ck)
                           ((case-lambda
                              ((g$ls/false$10473$bP4ck)
                               (if (if g$ls/false$10473$bP4ck
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10474$bP4ck)
                                            (g$for-all$5061$bP4ck
                                              (case-lambda
                                                ((g$x$10475$bP4ck)
                                                 ((case-lambda
                                                    ((g$x$10476$bP4ck)
                                                     (if (integer?
                                                           g$x$10476$bP4ck)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10476$bP4ck))
                                                       '#f)))
                                                  (g$syntax->datum$8099$bP4ck
                                                    g$x$10475$bP4ck))))
                                              g$v*$10474$bP4ck)))
                                         g$ls/false$10473$bP4ck))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10477$bP4ck)
                                      (values
                                        '()
                                        (g$map$5063$bP4ck
                                          g$syntax->datum$8099$bP4ck
                                          g$v*$10477$bP4ck))))
                                   g$ls/false$10473$bP4ck)
                                 ((case-lambda
                                    ((g$t$10478$bP4ck)
                                     ((case-lambda
                                        ((g$ls/false$10479$bP4ck)
                                         (if (if g$ls/false$10479$bP4ck
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10480$bP4ck
                                                        g$rest$10481$bP4ck)
                                                      (symbol?
                                                        (g$syntax->datum$8099$bP4ck
                                                          g$x$10480$bP4ck))))
                                                   g$ls/false$10479$bP4ck))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10482$bP4ck
                                                  g$rest$10483$bP4ck)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10464$bP4ck
                                                       g$rest$10483$bP4ck)))
                                                  (case-lambda
                                                    ((g$x*$10486$bP4ck
                                                       g$v*$10487$bP4ck)
                                                     ((case-lambda
                                                        ((g$v*$10488$bP4ck
                                                           g$x*$10489$bP4ck)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$8099$bP4ck
                                                               g$x$10482$bP4ck)
                                                             g$x*$10489$bP4ck)
                                                           g$v*$10488$bP4ck)))
                                                      g$v*$10487$bP4ck
                                                      g$x*$10486$bP4ck))))))
                                             g$ls/false$10479$bP4ck)
                                           ((case-lambda
                                              ((g$t$10490$bP4ck)
                                               ((case-lambda
                                                  ((g$ls/false$10491$bP4ck)
                                                   (if g$ls/false$10491$bP4ck
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10491$bP4ck)
                                                     ((case-lambda
                                                        ((g$t$10492$bP4ck)
                                                         ((case-lambda
                                                            ((g$ls/false$10493$bP4ck)
                                                             (if g$ls/false$10493$bP4ck
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8096$bP4ck
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10463$bP4ck)))
                                                                 g$ls/false$10493$bP4ck)
                                                               (g$syntax-violation$8096$bP4ck
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10492$bP4ck))))
                                                          (g$syntax-dispatch$7984$bP4ck
                                                            g$t$10492$bP4ck
                                                            '_))))
                                                      g$t$10490$bP4ck))))
                                                (g$syntax-dispatch$7984$bP4ck
                                                  g$t$10490$bP4ck
                                                  '()))))
                                            g$t$10478$bP4ck))))
                                      (g$syntax-dispatch$7984$bP4ck
                                        g$t$10478$bP4ck
                                        '(any . any)))))
                                  g$t$10472$bP4ck))))
                            (g$syntax-dispatch$7984$bP4ck
                              g$t$10472$bP4ck
                              '(each-any)))))
                        g$x$10471$bP4ck)))))
          (call-with-values
            (case-lambda (() (g$parse$10464$bP4ck g$spec$10463$bP4ck)))
            (case-lambda
              ((g$name*$10467$bP4ck g$ver*$10468$bP4ck)
               ((case-lambda
                  ((g$ver*$10469$bP4ck g$name*$10470$bP4ck)
                   (begin
                     (if (null? g$name*$10470$bP4ck)
                       (g$syntax-violation$8096$bP4ck
                         '#f
                         '"empty library name"
                         g$spec$10463$bP4ck)
                       (void))
                     (values g$name*$10470$bP4ck g$ver*$10469$bP4ck))))
                g$ver*$10468$bP4ck
                g$name*$10467$bP4ck))))))))
   (g$parse-library$8032$bP4ck
     g$parse-library$11535$bP4ck
     (case-lambda
       ((g$e$10494$bP4ck)
        ((case-lambda
           ((g$t$10495$bP4ck)
            ((case-lambda
               ((g$ls/false$10496$bP4ck)
                (if (if g$ls/false$10496$bP4ck
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10497$bP4ck
                               g$name*$10498$bP4ck
                               g$export$10499$bP4ck
                               g$exp*$10500$bP4ck
                               g$import$10501$bP4ck
                               g$imp*$10502$bP4ck
                               g$b*$10503$bP4ck)
                             (if (eq? (g$syntax->datum$8099$bP4ck
                                        g$export$10499$bP4ck)
                                      'export)
                               (if (eq? (g$syntax->datum$8099$bP4ck
                                          g$import$10501$bP4ck)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$8099$bP4ck
                                          g$library$10497$bP4ck)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10496$bP4ck))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10504$bP4ck
                         g$name*$10505$bP4ck
                         g$export$10506$bP4ck
                         g$exp*$10507$bP4ck
                         g$import$10508$bP4ck
                         g$imp*$10509$bP4ck
                         g$b*$10510$bP4ck)
                       (values
                         g$name*$10505$bP4ck
                         g$exp*$10507$bP4ck
                         g$imp*$10509$bP4ck
                         g$b*$10510$bP4ck)))
                    g$ls/false$10496$bP4ck)
                  ((case-lambda
                     ((g$t$10511$bP4ck)
                      ((case-lambda
                         ((g$ls/false$10512$bP4ck)
                          (if g$ls/false$10512$bP4ck
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8096$bP4ck
                                   '#f
                                   '"malformed library"
                                   g$e$10494$bP4ck)))
                              g$ls/false$10512$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$10511$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck g$t$10511$bP4ck '_))))
                   g$t$10495$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$10495$bP4ck
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10494$bP4ck))))
   (g$parse-import-spec*$8033$bP4ck
     g$parse-import-spec*$11536$bP4ck
     ((case-lambda
        (()
         (letrec* ((g$idsyn?$10513$bP4ck
                     (case-lambda
                       ((g$x$10774$bP4ck)
                        (symbol?
                          (g$syntax->datum$8099$bP4ck g$x$10774$bP4ck)))))
                   (g$dup-error$10514$bP4ck
                     (case-lambda
                       ((g$name$10773$bP4ck)
                        (g$syntax-violation$8096$bP4ck
                          'import
                          '"two imports with different bindings"
                          g$name$10773$bP4ck))))
                   (g$merge-substs$10515$bP4ck
                     (case-lambda
                       ((g$s$10764$bP4ck g$subst$10765$bP4ck)
                        (letrec* ((g$insert-to-subst$10766$bP4ck
                                    (case-lambda
                                      ((g$a$10767$bP4ck g$subst$10768$bP4ck)
                                       ((case-lambda
                                          ((g$name$10769$bP4ck
                                             g$label$10770$bP4ck)
                                           ((case-lambda
                                              ((g$t$10771$bP4ck)
                                               (if g$t$10771$bP4ck
                                                 ((case-lambda
                                                    ((g$x$10772$bP4ck)
                                                     (if (eq? (cdr g$x$10772$bP4ck)
                                                              g$label$10770$bP4ck)
                                                       g$subst$10768$bP4ck
                                                       (g$dup-error$10514$bP4ck
                                                         g$name$10769$bP4ck))))
                                                  g$t$10771$bP4ck)
                                                 (cons
                                                   g$a$10767$bP4ck
                                                   g$subst$10768$bP4ck))))
                                            (g$assq$5051$bP4ck
                                              g$name$10769$bP4ck
                                              g$subst$10768$bP4ck))))
                                        (car g$a$10767$bP4ck)
                                        (cdr g$a$10767$bP4ck))))))
                          (if (null? g$s$10764$bP4ck)
                            g$subst$10765$bP4ck
                            (g$insert-to-subst$10766$bP4ck
                              (car g$s$10764$bP4ck)
                              (g$merge-substs$10515$bP4ck
                                (cdr g$s$10764$bP4ck)
                                g$subst$10765$bP4ck)))))))
                   (g$exclude*$10516$bP4ck
                     (case-lambda
                       ((g$sym*$10740$bP4ck g$subst$10741$bP4ck)
                        (letrec* ((g$exclude$10742$bP4ck
                                    (case-lambda
                                      ((g$sym$10755$bP4ck g$subst$10756$bP4ck)
                                       (if (null? g$subst$10756$bP4ck)
                                         (g$syntax-violation$8096$bP4ck
                                           'import
                                           '"cannot rename unbound identifier"
                                           g$sym$10755$bP4ck)
                                         (if (eq? g$sym$10755$bP4ck
                                                  (g$caar$5263$bP4ck
                                                    g$subst$10756$bP4ck))
                                           (values
                                             (g$cdar$5265$bP4ck
                                               g$subst$10756$bP4ck)
                                             (cdr g$subst$10756$bP4ck))
                                           ((case-lambda
                                              ((g$a$10757$bP4ck)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$exclude$10742$bP4ck
                                                      g$sym$10755$bP4ck
                                                      (cdr g$subst$10756$bP4ck))))
                                                 (case-lambda
                                                   ((g$old$10760$bP4ck
                                                      g$subst$10761$bP4ck)
                                                    ((case-lambda
                                                       ((g$subst$10762$bP4ck
                                                          g$old$10763$bP4ck)
                                                        (values
                                                          g$old$10763$bP4ck
                                                          (cons
                                                            g$a$10757$bP4ck
                                                            g$subst$10762$bP4ck))))
                                                     g$subst$10761$bP4ck
                                                     g$old$10760$bP4ck))))))
                                            (car g$subst$10756$bP4ck))))))))
                          (if (null? g$sym*$10740$bP4ck)
                            (values '() g$subst$10741$bP4ck)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$exclude$10742$bP4ck
                                   (car g$sym*$10740$bP4ck)
                                   g$subst$10741$bP4ck)))
                              (case-lambda
                                ((g$old$10745$bP4ck g$subst$10746$bP4ck)
                                 ((case-lambda
                                    ((g$subst$10747$bP4ck g$old$10748$bP4ck)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$exclude*$10516$bP4ck
                                            (cdr g$sym*$10740$bP4ck)
                                            g$subst$10747$bP4ck)))
                                       (case-lambda
                                         ((g$old*$10751$bP4ck
                                            g$subst$10752$bP4ck)
                                          ((case-lambda
                                             ((g$subst$10753$bP4ck
                                                g$old*$10754$bP4ck)
                                              (values
                                                (cons
                                                  g$old$10748$bP4ck
                                                  g$old*$10754$bP4ck)
                                                g$subst$10753$bP4ck)))
                                           g$subst$10752$bP4ck
                                           g$old*$10751$bP4ck))))))
                                  g$subst$10746$bP4ck
                                  g$old$10745$bP4ck)))))))))
                   (g$find*$10517$bP4ck
                     (case-lambda
                       ((g$sym*$10736$bP4ck g$subst$10737$bP4ck)
                        (g$map$5063$bP4ck
                          (case-lambda
                            ((g$x$10738$bP4ck)
                             ((case-lambda
                                ((g$t$10739$bP4ck)
                                 (if g$t$10739$bP4ck
                                   (cdr g$t$10739$bP4ck)
                                   (g$syntax-violation$8096$bP4ck
                                     'import
                                     '"cannot find identifier"
                                     g$x$10738$bP4ck))))
                              (g$assq$5051$bP4ck
                                g$x$10738$bP4ck
                                g$subst$10737$bP4ck))))
                          g$sym*$10736$bP4ck))))
                   (g$rem*$10518$bP4ck
                     (case-lambda
                       ((g$sym*$10732$bP4ck g$subst$10733$bP4ck)
                        ((letrec ((g$f$10734$bP4ck
                                    (case-lambda
                                      ((g$subst$10735$bP4ck)
                                       (if (null? g$subst$10735$bP4ck)
                                         '()
                                         (if (g$memq$5055$bP4ck
                                               (g$caar$5263$bP4ck
                                                 g$subst$10735$bP4ck)
                                               g$sym*$10732$bP4ck)
                                           (g$f$10734$bP4ck
                                             (cdr g$subst$10735$bP4ck))
                                           (cons
                                             (car g$subst$10735$bP4ck)
                                             (g$f$10734$bP4ck
                                               (cdr g$subst$10735$bP4ck)))))))))
                           g$f$10734$bP4ck)
                         g$subst$10733$bP4ck))))
                   (g$remove-dups$10519$bP4ck
                     (case-lambda
                       ((g$ls$10731$bP4ck)
                        (if (null? g$ls$10731$bP4ck)
                          '()
                          (if (g$memq$5055$bP4ck
                                (car g$ls$10731$bP4ck)
                                (cdr g$ls$10731$bP4ck))
                            (g$remove-dups$10519$bP4ck (cdr g$ls$10731$bP4ck))
                            (cons
                              (car g$ls$10731$bP4ck)
                              (g$remove-dups$10519$bP4ck
                                (cdr g$ls$10731$bP4ck))))))))
                   (g$parse-library-name$10520$bP4ck
                     (case-lambda
                       ((g$spec$10615$bP4ck)
                        (letrec* ((g$subversion?$10616$bP4ck
                                    (case-lambda
                                      ((g$x$10729$bP4ck)
                                       ((case-lambda
                                          ((g$x$10730$bP4ck)
                                           (if (integer? g$x$10730$bP4ck)
                                             (if (exact? g$x$10730$bP4ck)
                                               (begin
                                                 '#f
                                                 (>= g$x$10730$bP4ck '0))
                                               '#f)
                                             '#f)))
                                        (g$syntax->datum$8099$bP4ck
                                          g$x$10729$bP4ck)))))
                                  (g$subversion-pred$10617$bP4ck
                                    (case-lambda
                                      ((g$x*$10681$bP4ck)
                                       ((case-lambda
                                          ((g$t$10682$bP4ck)
                                           ((case-lambda
                                              ((g$ls/false$10683$bP4ck)
                                               (if (if g$ls/false$10683$bP4ck
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$n$10684$bP4ck)
                                                            (g$subversion?$10616$bP4ck
                                                              g$n$10684$bP4ck)))
                                                         g$ls/false$10683$bP4ck))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$n$10685$bP4ck)
                                                      (case-lambda
                                                        ((g$x$10686$bP4ck)
                                                         (= g$x$10686$bP4ck
                                                            (g$syntax->datum$8099$bP4ck
                                                              g$n$10685$bP4ck))))))
                                                   g$ls/false$10683$bP4ck)
                                                 ((case-lambda
                                                    ((g$t$10687$bP4ck)
                                                     ((case-lambda
                                                        ((g$ls/false$10688$bP4ck)
                                                         (if (if g$ls/false$10688$bP4ck
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$p?$10689$bP4ck
                                                                        g$sub*$10690$bP4ck)
                                                                      (eq? (g$syntax->datum$8099$bP4ck
                                                                             g$p?$10689$bP4ck)
                                                                           'and)))
                                                                   g$ls/false$10688$bP4ck))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$p?$10691$bP4ck
                                                                  g$sub*$10692$bP4ck)
                                                                ((case-lambda
                                                                   ((g$p*$10693$bP4ck)
                                                                    (case-lambda
                                                                      ((g$x$10694$bP4ck)
                                                                       (g$for-all$5061$bP4ck
                                                                         (case-lambda
                                                                           ((g$p$10695$bP4ck)
                                                                            (g$p$10695$bP4ck
                                                                              g$x$10694$bP4ck)))
                                                                         g$p*$10693$bP4ck)))))
                                                                 (g$map$5063$bP4ck
                                                                   g$subversion-pred$10617$bP4ck
                                                                   g$sub*$10692$bP4ck))))
                                                             g$ls/false$10688$bP4ck)
                                                           ((case-lambda
                                                              ((g$t$10696$bP4ck)
                                                               ((case-lambda
                                                                  ((g$ls/false$10697$bP4ck)
                                                                   (if (if g$ls/false$10697$bP4ck
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$p?$10698$bP4ck
                                                                                  g$sub*$10699$bP4ck)
                                                                                (eq? (g$syntax->datum$8099$bP4ck
                                                                                       g$p?$10698$bP4ck)
                                                                                     'or)))
                                                                             g$ls/false$10697$bP4ck))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p?$10700$bP4ck
                                                                            g$sub*$10701$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$p*$10702$bP4ck)
                                                                              (case-lambda
                                                                                ((g$x$10703$bP4ck)
                                                                                 (g$exists$5062$bP4ck
                                                                                   (case-lambda
                                                                                     ((g$p$10704$bP4ck)
                                                                                      (g$p$10704$bP4ck
                                                                                        g$x$10703$bP4ck)))
                                                                                   g$p*$10702$bP4ck)))))
                                                                           (g$map$5063$bP4ck
                                                                             g$subversion-pred$10617$bP4ck
                                                                             g$sub*$10701$bP4ck))))
                                                                       g$ls/false$10697$bP4ck)
                                                                     ((case-lambda
                                                                        ((g$t$10705$bP4ck)
                                                                         ((case-lambda
                                                                            ((g$ls/false$10706$bP4ck)
                                                                             (if (if g$ls/false$10706$bP4ck
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$p?$10707$bP4ck
                                                                                            g$sub$10708$bP4ck)
                                                                                          (eq? (g$syntax->datum$8099$bP4ck
                                                                                                 g$p?$10707$bP4ck)
                                                                                               'not)))
                                                                                       g$ls/false$10706$bP4ck))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$p?$10709$bP4ck
                                                                                      g$sub$10710$bP4ck)
                                                                                    ((case-lambda
                                                                                       ((g$p$10711$bP4ck)
                                                                                        (case-lambda
                                                                                          ((g$x$10712$bP4ck)
                                                                                           (not (g$p$10711$bP4ck
                                                                                                  g$x$10712$bP4ck))))))
                                                                                     (g$subversion-pred$10617$bP4ck
                                                                                       g$sub$10710$bP4ck))))
                                                                                 g$ls/false$10706$bP4ck)
                                                                               ((case-lambda
                                                                                  ((g$t$10713$bP4ck)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$10714$bP4ck)
                                                                                       (if (if g$ls/false$10714$bP4ck
                                                                                             (begin
                                                                                               '#f
                                                                                               (apply
                                                                                                 (case-lambda
                                                                                                   ((g$p?$10715$bP4ck
                                                                                                      g$n$10716$bP4ck)
                                                                                                    (if (eq? (g$syntax->datum$8099$bP4ck
                                                                                                               g$p?$10715$bP4ck)
                                                                                                             '<=)
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (g$subversion?$10616$bP4ck
                                                                                                          g$n$10716$bP4ck))
                                                                                                      '#f)))
                                                                                                 g$ls/false$10714$bP4ck))
                                                                                             '#f)
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p?$10717$bP4ck
                                                                                                g$n$10718$bP4ck)
                                                                                              (case-lambda
                                                                                                ((g$x$10719$bP4ck)
                                                                                                 (<= g$x$10719$bP4ck
                                                                                                     (g$syntax->datum$8099$bP4ck
                                                                                                       g$n$10718$bP4ck))))))
                                                                                           g$ls/false$10714$bP4ck)
                                                                                         ((case-lambda
                                                                                            ((g$t$10720$bP4ck)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$10721$bP4ck)
                                                                                                 (if (if g$ls/false$10721$bP4ck
                                                                                                       (begin
                                                                                                         '#f
                                                                                                         (apply
                                                                                                           (case-lambda
                                                                                                             ((g$p?$10722$bP4ck
                                                                                                                g$n$10723$bP4ck)
                                                                                                              (if (eq? (g$syntax->datum$8099$bP4ck
                                                                                                                         g$p?$10722$bP4ck)
                                                                                                                       '>=)
                                                                                                                (begin
                                                                                                                  '#f
                                                                                                                  (g$subversion?$10616$bP4ck
                                                                                                                    g$n$10723$bP4ck))
                                                                                                                '#f)))
                                                                                                           g$ls/false$10721$bP4ck))
                                                                                                       '#f)
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$p?$10724$bP4ck
                                                                                                          g$n$10725$bP4ck)
                                                                                                        (case-lambda
                                                                                                          ((g$x$10726$bP4ck)
                                                                                                           (>= g$x$10726$bP4ck
                                                                                                               (g$syntax->datum$8099$bP4ck
                                                                                                                 g$n$10725$bP4ck))))))
                                                                                                     g$ls/false$10721$bP4ck)
                                                                                                   ((case-lambda
                                                                                                      ((g$t$10727$bP4ck)
                                                                                                       ((case-lambda
                                                                                                          ((g$ls/false$10728$bP4ck)
                                                                                                           (if g$ls/false$10728$bP4ck
                                                                                                             (apply
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$syntax-violation$8096$bP4ck
                                                                                                                    'import
                                                                                                                    '"invalid sub-version spec"
                                                                                                                    g$spec$10615$bP4ck
                                                                                                                    g$x*$10681$bP4ck)))
                                                                                                               g$ls/false$10728$bP4ck)
                                                                                                             (g$syntax-violation$8096$bP4ck
                                                                                                               '#f
                                                                                                               '"invalid syntax"
                                                                                                               g$t$10727$bP4ck))))
                                                                                                        (g$syntax-dispatch$7984$bP4ck
                                                                                                          g$t$10727$bP4ck
                                                                                                          '_))))
                                                                                                    g$t$10720$bP4ck))))
                                                                                              (g$syntax-dispatch$7984$bP4ck
                                                                                                g$t$10720$bP4ck
                                                                                                '(any any)))))
                                                                                          g$t$10713$bP4ck))))
                                                                                    (g$syntax-dispatch$7984$bP4ck
                                                                                      g$t$10713$bP4ck
                                                                                      '(any any)))))
                                                                                g$t$10705$bP4ck))))
                                                                          (g$syntax-dispatch$7984$bP4ck
                                                                            g$t$10705$bP4ck
                                                                            '(any any)))))
                                                                      g$t$10696$bP4ck))))
                                                                (g$syntax-dispatch$7984$bP4ck
                                                                  g$t$10696$bP4ck
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10687$bP4ck))))
                                                      (g$syntax-dispatch$7984$bP4ck
                                                        g$t$10687$bP4ck
                                                        '(any . each-any)))))
                                                  g$t$10682$bP4ck))))
                                            (g$syntax-dispatch$7984$bP4ck
                                              g$t$10682$bP4ck
                                              'any))))
                                        g$x*$10681$bP4ck))))
                                  (g$version-pred$10618$bP4ck
                                    (case-lambda
                                      ((g$x*$10641$bP4ck)
                                       ((case-lambda
                                          ((g$t$10642$bP4ck)
                                           ((case-lambda
                                              ((g$ls/false$10643$bP4ck)
                                               (if g$ls/false$10643$bP4ck
                                                 (apply
                                                   (case-lambda
                                                     (()
                                                      (case-lambda
                                                        ((g$x$10644$bP4ck)
                                                         '#t))))
                                                   g$ls/false$10643$bP4ck)
                                                 ((case-lambda
                                                    ((g$t$10645$bP4ck)
                                                     ((case-lambda
                                                        ((g$ls/false$10646$bP4ck)
                                                         (if (if g$ls/false$10646$bP4ck
                                                               (begin
                                                                 '#f
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$c$10647$bP4ck
                                                                        g$ver*$10648$bP4ck)
                                                                      (eq? (g$syntax->datum$8099$bP4ck
                                                                             g$c$10647$bP4ck)
                                                                           'and)))
                                                                   g$ls/false$10646$bP4ck))
                                                               '#f)
                                                           (apply
                                                             (case-lambda
                                                               ((g$c$10649$bP4ck
                                                                  g$ver*$10650$bP4ck)
                                                                ((case-lambda
                                                                   ((g$p*$10651$bP4ck)
                                                                    (case-lambda
                                                                      ((g$x$10652$bP4ck)
                                                                       (g$for-all$5061$bP4ck
                                                                         (case-lambda
                                                                           ((g$p$10653$bP4ck)
                                                                            (g$p$10653$bP4ck
                                                                              g$x$10652$bP4ck)))
                                                                         g$p*$10651$bP4ck)))))
                                                                 (g$map$5063$bP4ck
                                                                   g$version-pred$10618$bP4ck
                                                                   g$ver*$10650$bP4ck))))
                                                             g$ls/false$10646$bP4ck)
                                                           ((case-lambda
                                                              ((g$t$10654$bP4ck)
                                                               ((case-lambda
                                                                  ((g$ls/false$10655$bP4ck)
                                                                   (if (if g$ls/false$10655$bP4ck
                                                                         (begin
                                                                           '#f
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$c$10656$bP4ck
                                                                                  g$ver*$10657$bP4ck)
                                                                                (eq? (g$syntax->datum$8099$bP4ck
                                                                                       g$c$10656$bP4ck)
                                                                                     'or)))
                                                                             g$ls/false$10655$bP4ck))
                                                                         '#f)
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$c$10658$bP4ck
                                                                            g$ver*$10659$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$p*$10660$bP4ck)
                                                                              (case-lambda
                                                                                ((g$x$10661$bP4ck)
                                                                                 (g$exists$5062$bP4ck
                                                                                   (case-lambda
                                                                                     ((g$p$10662$bP4ck)
                                                                                      (g$p$10662$bP4ck
                                                                                        g$x$10661$bP4ck)))
                                                                                   g$p*$10660$bP4ck)))))
                                                                           (g$map$5063$bP4ck
                                                                             g$version-pred$10618$bP4ck
                                                                             g$ver*$10659$bP4ck))))
                                                                       g$ls/false$10655$bP4ck)
                                                                     ((case-lambda
                                                                        ((g$t$10663$bP4ck)
                                                                         ((case-lambda
                                                                            ((g$ls/false$10664$bP4ck)
                                                                             (if (if g$ls/false$10664$bP4ck
                                                                                   (begin
                                                                                     '#f
                                                                                     (apply
                                                                                       (case-lambda
                                                                                         ((g$c$10665$bP4ck
                                                                                            g$ver$10666$bP4ck)
                                                                                          (eq? (g$syntax->datum$8099$bP4ck
                                                                                                 g$c$10665$bP4ck)
                                                                                               'not)))
                                                                                       g$ls/false$10664$bP4ck))
                                                                                   '#f)
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$c$10667$bP4ck
                                                                                      g$ver$10668$bP4ck)
                                                                                    ((case-lambda
                                                                                       ((g$p$10669$bP4ck)
                                                                                        (case-lambda
                                                                                          ((g$x$10670$bP4ck)
                                                                                           (not (g$p$10669$bP4ck
                                                                                                  g$x$10670$bP4ck))))))
                                                                                     (g$version-pred$10618$bP4ck
                                                                                       g$ver$10668$bP4ck))))
                                                                                 g$ls/false$10664$bP4ck)
                                                                               ((case-lambda
                                                                                  ((g$t$10671$bP4ck)
                                                                                   ((case-lambda
                                                                                      ((g$ls/false$10672$bP4ck)
                                                                                       (if g$ls/false$10672$bP4ck
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$sub*$10673$bP4ck)
                                                                                              ((case-lambda
                                                                                                 ((g$p*$10674$bP4ck)
                                                                                                  (case-lambda
                                                                                                    ((g$x$10675$bP4ck)
                                                                                                     ((letrec ((g$f$10676$bP4ck
                                                                                                                 (case-lambda
                                                                                                                   ((g$p*$10677$bP4ck
                                                                                                                      g$x$10678$bP4ck)
                                                                                                                    (if (null?
                                                                                                                          g$p*$10677$bP4ck)
                                                                                                                      '#t
                                                                                                                      (if (null?
                                                                                                                            g$x$10678$bP4ck)
                                                                                                                        '#f
                                                                                                                        (if ((car g$p*$10677$bP4ck)
                                                                                                                             (car g$x$10678$bP4ck))
                                                                                                                          (begin
                                                                                                                            '#f
                                                                                                                            (g$f$10676$bP4ck
                                                                                                                              (cdr g$p*$10677$bP4ck)
                                                                                                                              (cdr g$x$10678$bP4ck)))
                                                                                                                          '#f)))))))
                                                                                                        g$f$10676$bP4ck)
                                                                                                      g$p*$10674$bP4ck
                                                                                                      g$x$10675$bP4ck)))))
                                                                                               (g$map$5063$bP4ck
                                                                                                 g$subversion-pred$10617$bP4ck
                                                                                                 g$sub*$10673$bP4ck))))
                                                                                           g$ls/false$10672$bP4ck)
                                                                                         ((case-lambda
                                                                                            ((g$t$10679$bP4ck)
                                                                                             ((case-lambda
                                                                                                ((g$ls/false$10680$bP4ck)
                                                                                                 (if g$ls/false$10680$bP4ck
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$syntax-violation$8096$bP4ck
                                                                                                          'import
                                                                                                          '"invalid version spec"
                                                                                                          g$spec$10615$bP4ck
                                                                                                          g$x*$10641$bP4ck)))
                                                                                                     g$ls/false$10680$bP4ck)
                                                                                                   (g$syntax-violation$8096$bP4ck
                                                                                                     '#f
                                                                                                     '"invalid syntax"
                                                                                                     g$t$10679$bP4ck))))
                                                                                              (g$syntax-dispatch$7984$bP4ck
                                                                                                g$t$10679$bP4ck
                                                                                                '_))))
                                                                                          g$t$10671$bP4ck))))
                                                                                    (g$syntax-dispatch$7984$bP4ck
                                                                                      g$t$10671$bP4ck
                                                                                      'each-any))))
                                                                                g$t$10663$bP4ck))))
                                                                          (g$syntax-dispatch$7984$bP4ck
                                                                            g$t$10663$bP4ck
                                                                            '(any any)))))
                                                                      g$t$10654$bP4ck))))
                                                                (g$syntax-dispatch$7984$bP4ck
                                                                  g$t$10654$bP4ck
                                                                  '(any .
                                                                        each-any)))))
                                                            g$t$10645$bP4ck))))
                                                      (g$syntax-dispatch$7984$bP4ck
                                                        g$t$10645$bP4ck
                                                        '(any . each-any)))))
                                                  g$t$10642$bP4ck))))
                                            (g$syntax-dispatch$7984$bP4ck
                                              g$t$10642$bP4ck
                                              '()))))
                                        g$x*$10641$bP4ck)))))
                          ((letrec ((g$f$10619$bP4ck
                                      (case-lambda
                                        ((g$x$10620$bP4ck)
                                         ((case-lambda
                                            ((g$t$10621$bP4ck)
                                             ((case-lambda
                                                ((g$ls/false$10622$bP4ck)
                                                 (if g$ls/false$10622$bP4ck
                                                   (apply
                                                     (case-lambda
                                                       ((g$version-spec*$10623$bP4ck)
                                                        (values
                                                          '()
                                                          (g$version-pred$10618$bP4ck
                                                            g$version-spec*$10623$bP4ck))))
                                                     g$ls/false$10622$bP4ck)
                                                   ((case-lambda
                                                      ((g$t$10624$bP4ck)
                                                       ((case-lambda
                                                          ((g$ls/false$10625$bP4ck)
                                                           (if (if g$ls/false$10625$bP4ck
                                                                 (begin
                                                                   '#f
                                                                   (apply
                                                                     (case-lambda
                                                                       ((g$x$10626$bP4ck
                                                                          g$x*$10627$bP4ck)
                                                                        (g$idsyn?$10513$bP4ck
                                                                          g$x$10626$bP4ck)))
                                                                     g$ls/false$10625$bP4ck))
                                                                 '#f)
                                                             (apply
                                                               (case-lambda
                                                                 ((g$x$10628$bP4ck
                                                                    g$x*$10629$bP4ck)
                                                                  (call-with-values
                                                                    (case-lambda
                                                                      (()
                                                                       (g$f$10619$bP4ck
                                                                         g$x*$10629$bP4ck)))
                                                                    (case-lambda
                                                                      ((g$name$10632$bP4ck
                                                                         g$pred$10633$bP4ck)
                                                                       ((case-lambda
                                                                          ((g$pred$10634$bP4ck
                                                                             g$name$10635$bP4ck)
                                                                           (values
                                                                             (cons
                                                                               (g$syntax->datum$8099$bP4ck
                                                                                 g$x$10628$bP4ck)
                                                                               g$name$10635$bP4ck)
                                                                             g$pred$10634$bP4ck)))
                                                                        g$pred$10633$bP4ck
                                                                        g$name$10632$bP4ck))))))
                                                               g$ls/false$10625$bP4ck)
                                                             ((case-lambda
                                                                ((g$t$10636$bP4ck)
                                                                 ((case-lambda
                                                                    ((g$ls/false$10637$bP4ck)
                                                                     (if g$ls/false$10637$bP4ck
                                                                       (apply
                                                                         (case-lambda
                                                                           (()
                                                                            (values
                                                                              '()
                                                                              (case-lambda
                                                                                ((g$x$10638$bP4ck)
                                                                                 '#t)))))
                                                                         g$ls/false$10637$bP4ck)
                                                                       ((case-lambda
                                                                          ((g$t$10639$bP4ck)
                                                                           ((case-lambda
                                                                              ((g$ls/false$10640$bP4ck)
                                                                               (if g$ls/false$10640$bP4ck
                                                                                 (apply
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$syntax-violation$8096$bP4ck
                                                                                        '#f
                                                                                        '"invalid import spec"
                                                                                        g$spec$10615$bP4ck)))
                                                                                   g$ls/false$10640$bP4ck)
                                                                                 (g$syntax-violation$8096$bP4ck
                                                                                   '#f
                                                                                   '"invalid syntax"
                                                                                   g$t$10639$bP4ck))))
                                                                            (g$syntax-dispatch$7984$bP4ck
                                                                              g$t$10639$bP4ck
                                                                              '_))))
                                                                        g$t$10636$bP4ck))))
                                                                  (g$syntax-dispatch$7984$bP4ck
                                                                    g$t$10636$bP4ck
                                                                    '()))))
                                                              g$t$10624$bP4ck))))
                                                        (g$syntax-dispatch$7984$bP4ck
                                                          g$t$10624$bP4ck
                                                          '(any . any)))))
                                                    g$t$10621$bP4ck))))
                                              (g$syntax-dispatch$7984$bP4ck
                                                g$t$10621$bP4ck
                                                '(each-any)))))
                                          g$x$10620$bP4ck)))))
                             g$f$10619$bP4ck)
                           g$spec$10615$bP4ck)))))
                   (g$import-library$10521$bP4ck
                     (case-lambda
                       ((g$spec*$10607$bP4ck)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$parse-library-name$10520$bP4ck
                               g$spec*$10607$bP4ck)))
                          (case-lambda
                            ((g$name$10610$bP4ck g$pred$10611$bP4ck)
                             ((case-lambda
                                ((g$pred$10612$bP4ck g$name$10613$bP4ck)
                                 (begin
                                   (if (null? g$name$10613$bP4ck)
                                     (g$syntax-violation$8096$bP4ck
                                       'import
                                       '"empty library name"
                                       g$spec*$10607$bP4ck)
                                     (void))
                                   ((case-lambda
                                      ((g$lib$10614$bP4ck)
                                       (begin
                                         (if (not g$lib$10614$bP4ck)
                                           (g$syntax-violation$8096$bP4ck
                                             'import
                                             '"cannot find library with required name"
                                             g$name$10613$bP4ck)
                                           (void))
                                         (if (not (g$pred$10612$bP4ck
                                                    (g$library-version$7469$bP4ck
                                                      g$lib$10614$bP4ck)))
                                           (g$syntax-violation$8096$bP4ck
                                             'import
                                             '"library does not satisfy version specification"
                                             g$spec*$10607$bP4ck
                                             g$lib$10614$bP4ck)
                                           (void))
                                         ((g$imp-collector$8038$bP4ck)
                                          g$lib$10614$bP4ck)
                                         (g$library-subst$7473$bP4ck
                                           g$lib$10614$bP4ck))))
                                    (g$find-library-by-name$7509$bP4ck
                                      g$name$10613$bP4ck)))))
                              g$pred$10611$bP4ck
                              g$name$10610$bP4ck)))))))
                   (g$get-import$10522$bP4ck
                     (case-lambda
                       ((g$spec$10536$bP4ck)
                        ((case-lambda
                           ((g$t$10537$bP4ck)
                            ((case-lambda
                               ((g$ls/false$10538$bP4ck)
                                (if (if g$ls/false$10538$bP4ck
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$x$10539$bP4ck g$x*$10540$bP4ck)
                                             (not (g$memq$5055$bP4ck
                                                    (g$syntax->datum$8099$bP4ck
                                                      g$x$10539$bP4ck)
                                                    '(for rename
                                                          except
                                                          only
                                                          prefix
                                                          library)))))
                                          g$ls/false$10538$bP4ck))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$x$10541$bP4ck g$x*$10542$bP4ck)
                                       (g$import-library$10521$bP4ck
                                         (cons
                                           g$x$10541$bP4ck
                                           g$x*$10542$bP4ck))))
                                    g$ls/false$10538$bP4ck)
                                  ((case-lambda
                                     ((g$t$10543$bP4ck)
                                      ((case-lambda
                                         ((g$ls/false$10544$bP4ck)
                                          (if (if g$ls/false$10544$bP4ck
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$rename$10545$bP4ck
                                                         g$isp$10546$bP4ck
                                                         g$old*$10547$bP4ck
                                                         g$new*$10548$bP4ck)
                                                       (if (eq? (g$syntax->datum$8099$bP4ck
                                                                  g$rename$10545$bP4ck)
                                                                'rename)
                                                         (if (g$for-all$5061$bP4ck
                                                               g$idsyn?$10513$bP4ck
                                                               g$old*$10547$bP4ck)
                                                           (begin
                                                             '#f
                                                             (g$for-all$5061$bP4ck
                                                               g$idsyn?$10513$bP4ck
                                                               g$new*$10548$bP4ck))
                                                           '#f)
                                                         '#f)))
                                                    g$ls/false$10544$bP4ck))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$rename$10549$bP4ck
                                                   g$isp$10550$bP4ck
                                                   g$old*$10551$bP4ck
                                                   g$new*$10552$bP4ck)
                                                 ((case-lambda
                                                    ((g$subst$10553$bP4ck
                                                       g$old*$10554$bP4ck
                                                       g$new*$10555$bP4ck)
                                                     ((case-lambda
                                                        ((g$old-label*$10556$bP4ck)
                                                         ((case-lambda
                                                            ((g$subst$10557$bP4ck)
                                                             (g$merge-substs$10515$bP4ck
                                                               (g$map$5063$bP4ck
                                                                 cons
                                                                 g$new*$10555$bP4ck
                                                                 g$old-label*$10556$bP4ck)
                                                               g$subst$10557$bP4ck)))
                                                          (g$rem*$10518$bP4ck
                                                            g$old*$10554$bP4ck
                                                            g$subst$10553$bP4ck))))
                                                      (g$find*$10517$bP4ck
                                                        g$old*$10554$bP4ck
                                                        g$subst$10553$bP4ck))))
                                                  (g$get-import$10522$bP4ck
                                                    g$isp$10550$bP4ck)
                                                  (g$map$5063$bP4ck
                                                    g$syntax->datum$8099$bP4ck
                                                    g$old*$10551$bP4ck)
                                                  (g$map$5063$bP4ck
                                                    g$syntax->datum$8099$bP4ck
                                                    g$new*$10552$bP4ck))))
                                              g$ls/false$10544$bP4ck)
                                            ((case-lambda
                                               ((g$t$10558$bP4ck)
                                                ((case-lambda
                                                   ((g$ls/false$10559$bP4ck)
                                                    (if (if g$ls/false$10559$bP4ck
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$except$10560$bP4ck
                                                                   g$isp$10561$bP4ck
                                                                   g$sym*$10562$bP4ck)
                                                                 (if (eq? (g$syntax->datum$8099$bP4ck
                                                                            g$except$10560$bP4ck)
                                                                          'except)
                                                                   (begin
                                                                     '#f
                                                                     (g$for-all$5061$bP4ck
                                                                       g$idsyn?$10513$bP4ck
                                                                       g$sym*$10562$bP4ck))
                                                                   '#f)))
                                                              g$ls/false$10559$bP4ck))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$except$10563$bP4ck
                                                             g$isp$10564$bP4ck
                                                             g$sym*$10565$bP4ck)
                                                           ((case-lambda
                                                              ((g$subst$10566$bP4ck)
                                                               (g$rem*$10518$bP4ck
                                                                 (g$map$5063$bP4ck
                                                                   g$syntax->datum$8099$bP4ck
                                                                   g$sym*$10565$bP4ck)
                                                                 g$subst$10566$bP4ck)))
                                                            (g$get-import$10522$bP4ck
                                                              g$isp$10564$bP4ck))))
                                                        g$ls/false$10559$bP4ck)
                                                      ((case-lambda
                                                         ((g$t$10567$bP4ck)
                                                          ((case-lambda
                                                             ((g$ls/false$10568$bP4ck)
                                                              (if (if g$ls/false$10568$bP4ck
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$only$10569$bP4ck
                                                                             g$isp$10570$bP4ck
                                                                             g$sym*$10571$bP4ck)
                                                                           (if (eq? (g$syntax->datum$8099$bP4ck
                                                                                      g$only$10569$bP4ck)
                                                                                    'only)
                                                                             (begin
                                                                               '#f
                                                                               (g$for-all$5061$bP4ck
                                                                                 g$idsyn?$10513$bP4ck
                                                                                 g$sym*$10571$bP4ck))
                                                                             '#f)))
                                                                        g$ls/false$10568$bP4ck))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$only$10572$bP4ck
                                                                       g$isp$10573$bP4ck
                                                                       g$sym*$10574$bP4ck)
                                                                     ((case-lambda
                                                                        ((g$subst$10575$bP4ck
                                                                           g$sym*$10576$bP4ck)
                                                                         ((case-lambda
                                                                            ((g$sym*$10577$bP4ck)
                                                                             ((case-lambda
                                                                                ((g$lab*$10578$bP4ck)
                                                                                 (g$map$5063$bP4ck
                                                                                   cons
                                                                                   g$sym*$10577$bP4ck
                                                                                   g$lab*$10578$bP4ck)))
                                                                              (g$find*$10517$bP4ck
                                                                                g$sym*$10577$bP4ck
                                                                                g$subst$10575$bP4ck))))
                                                                          (g$remove-dups$10519$bP4ck
                                                                            g$sym*$10576$bP4ck))))
                                                                      (g$get-import$10522$bP4ck
                                                                        g$isp$10573$bP4ck)
                                                                      (g$map$5063$bP4ck
                                                                        g$syntax->datum$8099$bP4ck
                                                                        g$sym*$10574$bP4ck))))
                                                                  g$ls/false$10568$bP4ck)
                                                                ((case-lambda
                                                                   ((g$t$10579$bP4ck)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10580$bP4ck)
                                                                        (if (if g$ls/false$10580$bP4ck
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$prefix$10581$bP4ck
                                                                                       g$isp$10582$bP4ck
                                                                                       g$p$10583$bP4ck)
                                                                                     (if (eq? (g$syntax->datum$8099$bP4ck
                                                                                                g$prefix$10581$bP4ck)
                                                                                              'prefix)
                                                                                       (begin
                                                                                         '#f
                                                                                         (g$idsyn?$10513$bP4ck
                                                                                           g$p$10583$bP4ck))
                                                                                       '#f)))
                                                                                  g$ls/false$10580$bP4ck))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$prefix$10584$bP4ck
                                                                                 g$isp$10585$bP4ck
                                                                                 g$p$10586$bP4ck)
                                                                               ((case-lambda
                                                                                  ((g$subst$10587$bP4ck
                                                                                     g$prefix$10588$bP4ck)
                                                                                   (g$map$5063$bP4ck
                                                                                     (case-lambda
                                                                                       ((g$x$10589$bP4ck)
                                                                                        (cons
                                                                                          (string->symbol
                                                                                            (string-append
                                                                                              g$prefix$10588$bP4ck
                                                                                              (symbol->string
                                                                                                (car g$x$10589$bP4ck))))
                                                                                          (cdr g$x$10589$bP4ck))))
                                                                                     g$subst$10587$bP4ck)))
                                                                                (g$get-import$10522$bP4ck
                                                                                  g$isp$10585$bP4ck)
                                                                                (symbol->string
                                                                                  (g$syntax->datum$8099$bP4ck
                                                                                    g$p$10586$bP4ck)))))
                                                                            g$ls/false$10580$bP4ck)
                                                                          ((case-lambda
                                                                             ((g$t$10590$bP4ck)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10591$bP4ck)
                                                                                  (if (if g$ls/false$10591$bP4ck
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$library$10592$bP4ck
                                                                                                 g$spec*$10593$bP4ck)
                                                                                               (eq? (g$syntax->datum$8099$bP4ck
                                                                                                      g$library$10592$bP4ck)
                                                                                                    'library)))
                                                                                            g$ls/false$10591$bP4ck))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$library$10594$bP4ck
                                                                                           g$spec*$10595$bP4ck)
                                                                                         (g$import-library$10521$bP4ck
                                                                                           g$spec*$10595$bP4ck)))
                                                                                      g$ls/false$10591$bP4ck)
                                                                                    ((case-lambda
                                                                                       ((g$t$10596$bP4ck)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10597$bP4ck)
                                                                                            (if (if g$ls/false$10597$bP4ck
                                                                                                  (begin
                                                                                                    '#f
                                                                                                    (apply
                                                                                                      (case-lambda
                                                                                                        ((g$for$10598$bP4ck
                                                                                                           g$isp$10599$bP4ck
                                                                                                           g$rest$10600$bP4ck)
                                                                                                         (eq? (g$syntax->datum$8099$bP4ck
                                                                                                                g$for$10598$bP4ck)
                                                                                                              'for)))
                                                                                                      g$ls/false$10597$bP4ck))
                                                                                                  '#f)
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$for$10601$bP4ck
                                                                                                     g$isp$10602$bP4ck
                                                                                                     g$rest$10603$bP4ck)
                                                                                                   (g$get-import$10522$bP4ck
                                                                                                     g$isp$10602$bP4ck)))
                                                                                                g$ls/false$10597$bP4ck)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10604$bP4ck)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10605$bP4ck)
                                                                                                      (if g$ls/false$10605$bP4ck
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$spec$10606$bP4ck)
                                                                                                             (g$syntax-violation$8096$bP4ck
                                                                                                               'import
                                                                                                               '"invalid import spec"
                                                                                                               g$spec$10606$bP4ck)))
                                                                                                          g$ls/false$10605$bP4ck)
                                                                                                        (g$syntax-violation$8096$bP4ck
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$10604$bP4ck))))
                                                                                                   (g$syntax-dispatch$7984$bP4ck
                                                                                                     g$t$10604$bP4ck
                                                                                                     'any))))
                                                                                               g$t$10596$bP4ck))))
                                                                                         (g$syntax-dispatch$7984$bP4ck
                                                                                           g$t$10596$bP4ck
                                                                                           '(any any
                                                                                                 .
                                                                                                 any)))))
                                                                                     g$t$10590$bP4ck))))
                                                                               (g$syntax-dispatch$7984$bP4ck
                                                                                 g$t$10590$bP4ck
                                                                                 '(any each-any)))))
                                                                           g$t$10579$bP4ck))))
                                                                     (g$syntax-dispatch$7984$bP4ck
                                                                       g$t$10579$bP4ck
                                                                       '(any any
                                                                             any)))))
                                                                 g$t$10567$bP4ck))))
                                                           (g$syntax-dispatch$7984$bP4ck
                                                             g$t$10567$bP4ck
                                                             '(any any
                                                                   .
                                                                   each-any)))))
                                                       g$t$10558$bP4ck))))
                                                 (g$syntax-dispatch$7984$bP4ck
                                                   g$t$10558$bP4ck
                                                   '(any any . each-any)))))
                                             g$t$10543$bP4ck))))
                                       (g$syntax-dispatch$7984$bP4ck
                                         g$t$10543$bP4ck
                                         '(any any . #(each (any any)))))))
                                   g$t$10537$bP4ck))))
                             (g$syntax-dispatch$7984$bP4ck
                               g$t$10537$bP4ck
                               '(any . each-any)))))
                         g$spec$10536$bP4ck))))
                   (g$add-imports!$10523$bP4ck
                     (case-lambda
                       ((g$imp$10528$bP4ck g$h$10529$bP4ck)
                        ((case-lambda
                           ((g$subst$10530$bP4ck)
                            (g$for-each$5064$bP4ck
                              (case-lambda
                                ((g$x$10531$bP4ck)
                                 ((case-lambda
                                    ((g$name$10532$bP4ck g$label$10533$bP4ck)
                                     ((case-lambda
                                        ((g$t$10534$bP4ck)
                                         (if g$t$10534$bP4ck
                                           ((case-lambda
                                              ((g$l$10535$bP4ck)
                                               (if (not (eq? g$l$10535$bP4ck
                                                             g$label$10533$bP4ck))
                                                 (g$dup-error$10514$bP4ck
                                                   g$name$10532$bP4ck)
                                                 (void))))
                                            g$t$10534$bP4ck)
                                           (g$hashtable-set!$5542$bP4ck
                                             g$h$10529$bP4ck
                                             g$name$10532$bP4ck
                                             g$label$10533$bP4ck))))
                                      (g$hashtable-ref$5541$bP4ck
                                        g$h$10529$bP4ck
                                        g$name$10532$bP4ck
                                        '#f))))
                                  (car g$x$10531$bP4ck)
                                  (cdr g$x$10531$bP4ck))))
                              g$subst$10530$bP4ck)))
                         (g$get-import$10522$bP4ck g$imp$10528$bP4ck))))))
           (case-lambda
             ((g$imp*$10524$bP4ck)
              ((letrec ((g$f$10525$bP4ck
                          (case-lambda
                            ((g$imp*$10526$bP4ck g$h$10527$bP4ck)
                             (if (null? g$imp*$10526$bP4ck)
                               (hashtable-entries g$h$10527$bP4ck)
                               (begin
                                 (g$add-imports!$10523$bP4ck
                                   (car g$imp*$10526$bP4ck)
                                   g$h$10527$bP4ck)
                                 (g$f$10525$bP4ck
                                   (cdr g$imp*$10526$bP4ck)
                                   g$h$10527$bP4ck)))))))
                 g$f$10525$bP4ck)
               g$imp*$10524$bP4ck
               (g$make-eq-hashtable$5538$bP4ck)))))))))
   (g$make-top-rib$8034$bP4ck
     g$make-top-rib$11537$bP4ck
     (case-lambda
       ((g$names$10775$bP4ck g$labels$10776$bP4ck)
        ((case-lambda
           ((g$rib$10777$bP4ck)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10778$bP4ck g$label$10779$bP4ck)
                   (begin
                     (if (not (symbol? g$name$10778$bP4ck))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10778$bP4ck)
                       (void))
                     (g$extend-rib/nc!$7670$bP4ck
                       g$rib$10777$bP4ck
                       (g$make-stx$7679$bP4ck
                         g$name$10778$bP4ck
                         g$top-mark*$7643$bP4ck
                         '()
                         '())
                       g$label$10779$bP4ck))))
                g$names$10775$bP4ck
                g$labels$10776$bP4ck)
              g$rib$10777$bP4ck)))
         (g$make-cache-rib$7667$bP4ck)))))
   (g$make-collector$8035$bP4ck
     g$make-collector$11538$bP4ck
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10780$bP4ck)
            (case-lambda
              (() g$ls$10780$bP4ck)
              ((g$x$10781$bP4ck)
               (set! g$ls$10780$bP4ck
                 (g$set-cons$7640$bP4ck g$x$10781$bP4ck g$ls$10780$bP4ck))))))
         '()))))
   (g$inv-collector$8036$bP4ck
     g$inv-collector$11539$bP4ck
     (g$make-parameter$6978$bP4ck
       (case-lambda
         (g$args$10782$bP4ck
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10783$bP4ck)
          (begin
            (if (not (procedure? g$x$10783$bP4ck))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10783$bP4ck)
              (void))
            g$x$10783$bP4ck)))))
   (g$vis-collector$8037$bP4ck
     g$vis-collector$11540$bP4ck
     (g$make-parameter$6978$bP4ck
       (case-lambda
         (g$args$10784$bP4ck
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10785$bP4ck)
          (begin
            (if (not (procedure? g$x$10785$bP4ck))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10785$bP4ck)
              (void))
            g$x$10785$bP4ck)))))
   (g$imp-collector$8038$bP4ck
     g$imp-collector$11541$bP4ck
     (g$make-parameter$6978$bP4ck
       (case-lambda
         (g$args$10786$bP4ck
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10787$bP4ck)
          (begin
            (if (not (procedure? g$x$10787$bP4ck))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10787$bP4ck)
              (void))
            g$x$10787$bP4ck)))))
   (g$chi-library-internal$8039$bP4ck
     g$chi-library-internal$11542$bP4ck
     (case-lambda
       ((g$e*$10788$bP4ck g$rib$10789$bP4ck g$mix?$10790$bP4ck)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8028$bP4ck
               g$e*$10788$bP4ck
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10789$bP4ck
               g$mix?$10790$bP4ck
               '#t)))
          (case-lambda
            ((g$e*$10799$bP4ck
               g$r$10800$bP4ck
               g$mr$10801$bP4ck
               g$lex*$10802$bP4ck
               g$rhs*$10803$bP4ck
               g$mod**$10804$bP4ck
               g$_kwd*$10805$bP4ck
               g$exp*$10806$bP4ck)
             ((case-lambda
                ((g$exp*$10807$bP4ck
                   g$_kwd*$10808$bP4ck
                   g$mod**$10809$bP4ck
                   g$rhs*$10810$bP4ck
                   g$lex*$10811$bP4ck
                   g$mr$10812$bP4ck
                   g$r$10813$bP4ck
                   g$e*$10814$bP4ck)
                 (values
                   (append
                     (apply append (reverse g$mod**$10809$bP4ck))
                     g$e*$10814$bP4ck)
                   g$r$10813$bP4ck
                   g$mr$10812$bP4ck
                   (reverse g$lex*$10811$bP4ck)
                   (reverse g$rhs*$10810$bP4ck)
                   g$exp*$10807$bP4ck)))
              g$exp*$10806$bP4ck
              g$_kwd*$10805$bP4ck
              g$mod**$10804$bP4ck
              g$rhs*$10803$bP4ck
              g$lex*$10802$bP4ck
              g$mr$10801$bP4ck
              g$r$10800$bP4ck
              g$e*$10799$bP4ck)))))))
   (g$chi-interaction-expr$8040$bP4ck
     g$chi-interaction-expr$11543$bP4ck
     (case-lambda
       ((g$e$10815$bP4ck g$rib$10816$bP4ck g$r$10817$bP4ck)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8028$bP4ck
               (list g$e$10815$bP4ck)
               g$r$10817$bP4ck
               g$r$10817$bP4ck
               '()
               '()
               '()
               '()
               '()
               g$rib$10816$bP4ck
               '#t
               '#f)))
          (case-lambda
            ((g$e*$10826$bP4ck
               g$r$10827$bP4ck
               g$mr$10828$bP4ck
               g$lex*$10829$bP4ck
               g$rhs*$10830$bP4ck
               g$mod**$10831$bP4ck
               g$_kwd*$10832$bP4ck
               g$_exp*$10833$bP4ck)
             ((case-lambda
                ((g$_exp*$10834$bP4ck
                   g$_kwd*$10835$bP4ck
                   g$mod**$10836$bP4ck
                   g$rhs*$10837$bP4ck
                   g$lex*$10838$bP4ck
                   g$mr$10839$bP4ck
                   g$r$10840$bP4ck
                   g$e*$10841$bP4ck)
                 ((case-lambda
                    ((g$e*$10842$bP4ck)
                     ((case-lambda
                        ((g$e$10843$bP4ck)
                         (values g$e$10843$bP4ck g$r$10840$bP4ck)))
                      (if (null? g$e*$10842$bP4ck)
                        (g$build-void$7636$bP4ck)
                        (if (null? (cdr g$e*$10842$bP4ck))
                          (car g$e*$10842$bP4ck)
                          (g$build-sequence$7635$bP4ck
                            '#f
                            g$e*$10842$bP4ck))))))
                  (g$expand-interaction-rhs*/init*$8009$bP4ck
                    (reverse g$lex*$10838$bP4ck)
                    (reverse g$rhs*$10837$bP4ck)
                    (append
                      (apply append (reverse g$mod**$10836$bP4ck))
                      g$e*$10841$bP4ck)
                    g$r$10840$bP4ck
                    g$mr$10839$bP4ck))))
              g$_exp*$10833$bP4ck
              g$_kwd*$10832$bP4ck
              g$mod**$10831$bP4ck
              g$rhs*$10830$bP4ck
              g$lex*$10829$bP4ck
              g$mr$10828$bP4ck
              g$r$10827$bP4ck
              g$e*$10826$bP4ck)))))))
   (g$library-body-expander$8041$bP4ck
     g$library-body-expander$11544$bP4ck
     (case-lambda
       ((g$name$10844$bP4ck
          g$main-exp*$10845$bP4ck
          g$imp*$10846$bP4ck
          g$b*$10847$bP4ck
          g$mix?$10848$bP4ck)
        (letrec* ((g$itc$10849$bP4ck (g$make-collector$8035$bP4ck)))
          ((case-lambda
             ((g$imp-collector$10854$bP4ck
                g$top-level-context$10855$bP4ck
                g$imp-collector$10856$bP4ck
                g$top-level-context$10857$bP4ck)
              ((case-lambda
                 ((g$swap$10858$bP4ck)
                  (dynamic-wind
                    g$swap$10858$bP4ck
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$8033$bP4ck
                              g$imp*$10846$bP4ck)))
                         (case-lambda
                           ((g$subst-names$10861$bP4ck
                              g$subst-labels$10862$bP4ck)
                            ((case-lambda
                               ((g$subst-labels$10863$bP4ck
                                  g$subst-names$10864$bP4ck)
                                ((case-lambda
                                   ((g$rib$10865$bP4ck)
                                    (letrec* ((g$wrap$10866$bP4ck
                                                (case-lambda
                                                  ((g$x$10928$bP4ck)
                                                   (g$make-stx$7679$bP4ck
                                                     g$x$10928$bP4ck
                                                     g$top-mark*$7643$bP4ck
                                                     (list g$rib$10865$bP4ck)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$10867$bP4ck
                                            g$main-exp*$10868$bP4ck
                                            g$rtc$10869$bP4ck
                                            g$vtc$10870$bP4ck)
                                          ((case-lambda
                                             ((g$inv-collector$10875$bP4ck
                                                g$vis-collector$10876$bP4ck
                                                g$inv-collector$10877$bP4ck
                                                g$vis-collector$10878$bP4ck)
                                              ((case-lambda
                                                 ((g$swap$10879$bP4ck)
                                                  (dynamic-wind
                                                    g$swap$10879$bP4ck
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$8039$bP4ck
                                                              g$b*$10867$bP4ck
                                                              g$rib$10865$bP4ck
                                                              g$mix?$10848$bP4ck)))
                                                         (case-lambda
                                                           ((g$init*$10886$bP4ck
                                                              g$r$10887$bP4ck
                                                              g$mr$10888$bP4ck
                                                              g$lex*$10889$bP4ck
                                                              g$rhs*$10890$bP4ck
                                                              g$internal-exp*$10891$bP4ck)
                                                            ((case-lambda
                                                               ((g$internal-exp*$10892$bP4ck
                                                                  g$rhs*$10893$bP4ck
                                                                  g$lex*$10894$bP4ck
                                                                  g$mr$10895$bP4ck
                                                                  g$r$10896$bP4ck
                                                                  g$init*$10897$bP4ck)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$8030$bP4ck
                                                                       (append
                                                                         g$main-exp*$10868$bP4ck
                                                                         g$internal-exp*$10892$bP4ck))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$10900$bP4ck
                                                                       g$exp-id*$10901$bP4ck)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$10902$bP4ck
                                                                           g$exp-name*$10903$bP4ck)
                                                                         (begin
                                                                           (g$seal-rib!$7672$bP4ck
                                                                             g$rib$10865$bP4ck)
                                                                           ((case-lambda
                                                                              ((g$init*$10904$bP4ck)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$10905$bP4ck)
                                                                                   (begin
                                                                                     (g$unseal-rib!$7673$bP4ck
                                                                                       g$rib$10865$bP4ck)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$10906$bP4ck
                                                                                           g$export-subst$10907$bP4ck)
                                                                                         (letrec* ((g$errstr$10908$bP4ck
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$8085$bP4ck
                                                                                                  g$lex*$10894$bP4ck
                                                                                                  g$loc*$10906$bP4ck
                                                                                                  g$r$10896$bP4ck)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$10912$bP4ck
                                                                                                  g$global*$10913$bP4ck
                                                                                                  g$macro*$10914$bP4ck)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$10915$bP4ck
                                                                                                      g$global*$10916$bP4ck
                                                                                                      g$export-env$10917$bP4ck)
                                                                                                    (begin
                                                                                                      (g$for-each$5064$bP4ck
                                                                                                        (case-lambda
                                                                                                          ((g$s$10918$bP4ck)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$10919$bP4ck
                                                                                                                 g$label$10920$bP4ck)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$10921$bP4ck)
                                                                                                                   (if g$p$10921$bP4ck
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$10922$bP4ck)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$10923$bP4ck)
                                                                                                                             (if (eq? g$type$10923$bP4ck
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$8096$bP4ck
                                                                                                                                 'export
                                                                                                                                 g$errstr$10908$bP4ck
                                                                                                                                 g$name$10919$bP4ck)
                                                                                                                               (void))))
                                                                                                                          (car g$b$10922$bP4ck))))
                                                                                                                      (cdr g$p$10921$bP4ck))
                                                                                                                     (void))))
                                                                                                                (g$assq$5051$bP4ck
                                                                                                                  g$label$10920$bP4ck
                                                                                                                  g$export-env$10917$bP4ck))))
                                                                                                            (car g$s$10918$bP4ck)
                                                                                                            (cdr g$s$10918$bP4ck))))
                                                                                                        g$export-subst$10907$bP4ck)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$10924$bP4ck
                                                                                                            g$invoke-definitions$10925$bP4ck)
                                                                                                          (values
                                                                                                            (g$itc$10849$bP4ck)
                                                                                                            (g$rtc$10869$bP4ck)
                                                                                                            (g$vtc$10870$bP4ck)
                                                                                                            (g$build-sequence$7635$bP4ck
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$10925$bP4ck
                                                                                                                (list
                                                                                                                  g$invoke-body$10924$bP4ck)))
                                                                                                            g$macro*$10915$bP4ck
                                                                                                            g$export-subst$10907$bP4ck
                                                                                                            g$export-env$10917$bP4ck)))
                                                                                                       (g$build-library-letrec*$7639$bP4ck
                                                                                                         '#f
                                                                                                         g$name$10844$bP4ck
                                                                                                         g$lex*$10894$bP4ck
                                                                                                         g$loc*$10906$bP4ck
                                                                                                         g$rhs*$10905$bP4ck
                                                                                                         (if (null?
                                                                                                               g$init*$10904$bP4ck)
                                                                                                           (g$build-void$7636$bP4ck)
                                                                                                           (g$build-sequence$7635$bP4ck
                                                                                                             '#f
                                                                                                             g$init*$10904$bP4ck)))
                                                                                                       (g$map$5063$bP4ck
                                                                                                         g$build-global-define$7631$bP4ck
                                                                                                         (g$map$5063$bP4ck
                                                                                                           cdr
                                                                                                           g$global*$10916$bP4ck))))))
                                                                                                 g$macro*$10914$bP4ck
                                                                                                 g$global*$10913$bP4ck
                                                                                                 g$export-env$10912$bP4ck)))))))
                                                                                      (g$map$5063$bP4ck
                                                                                        g$gen-global$7646$bP4ck
                                                                                        g$lex*$10894$bP4ck)
                                                                                      (g$make-export-subst$8084$bP4ck
                                                                                        g$exp-name*$10903$bP4ck
                                                                                        g$exp-id*$10902$bP4ck)))))
                                                                                (g$chi-rhs*$8010$bP4ck
                                                                                  g$rhs*$10893$bP4ck
                                                                                  g$r$10896$bP4ck
                                                                                  g$mr$10895$bP4ck))))
                                                                            (g$chi-expr*$8000$bP4ck
                                                                              g$init*$10897$bP4ck
                                                                              g$r$10896$bP4ck
                                                                              g$mr$10895$bP4ck)))))
                                                                      g$exp-id*$10901$bP4ck
                                                                      g$exp-name*$10900$bP4ck))))))
                                                             g$internal-exp*$10891$bP4ck
                                                             g$rhs*$10890$bP4ck
                                                             g$lex*$10889$bP4ck
                                                             g$mr$10888$bP4ck
                                                             g$r$10887$bP4ck
                                                             g$init*$10886$bP4ck))))))
                                                    g$swap$10879$bP4ck)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$10926$bP4ck)
                                                        (begin
                                                          (g$inv-collector$10875$bP4ck
                                                            g$inv-collector$10877$bP4ck)
                                                          (set! g$inv-collector$10877$bP4ck
                                                            g$t$10926$bP4ck))))
                                                     (g$inv-collector$10875$bP4ck))
                                                    ((case-lambda
                                                       ((g$t$10927$bP4ck)
                                                        (begin
                                                          (g$vis-collector$10876$bP4ck
                                                            g$vis-collector$10878$bP4ck)
                                                          (set! g$vis-collector$10878$bP4ck
                                                            g$t$10927$bP4ck))))
                                                     (g$vis-collector$10876$bP4ck))))))))
                                           g$inv-collector$8036$bP4ck
                                           g$vis-collector$8037$bP4ck
                                           g$rtc$10869$bP4ck
                                           g$vtc$10870$bP4ck)))
                                       (g$map$5063$bP4ck
                                         g$wrap$10866$bP4ck
                                         g$b*$10847$bP4ck)
                                       (g$map$5063$bP4ck
                                         g$wrap$10866$bP4ck
                                         g$main-exp*$10845$bP4ck)
                                       (g$make-collector$8035$bP4ck)
                                       (g$make-collector$8035$bP4ck)))))
                                 (g$make-top-rib$8034$bP4ck
                                   g$subst-names$10864$bP4ck
                                   g$subst-labels$10863$bP4ck))))
                             g$subst-labels$10862$bP4ck
                             g$subst-names$10861$bP4ck))))))
                    g$swap$10858$bP4ck)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10929$bP4ck)
                        (begin
                          (g$imp-collector$10854$bP4ck
                            g$imp-collector$10856$bP4ck)
                          (set! g$imp-collector$10856$bP4ck g$t$10929$bP4ck))))
                     (g$imp-collector$10854$bP4ck))
                    ((case-lambda
                       ((g$t$10930$bP4ck)
                        (begin
                          (g$top-level-context$10855$bP4ck
                            g$top-level-context$10857$bP4ck)
                          (set! g$top-level-context$10857$bP4ck
                            g$t$10930$bP4ck))))
                     (g$top-level-context$10855$bP4ck))))))))
           g$imp-collector$8038$bP4ck
           g$top-level-context$8104$bP4ck
           g$itc$10849$bP4ck
           '#f)))))
   (g$core-library-expander$8042$bP4ck
     g$core-library-expander$11545$bP4ck
     (case-lambda
       ((g$e$10931$bP4ck g$verify-name$10932$bP4ck)
        (call-with-values
          (case-lambda (() (g$parse-library$8032$bP4ck g$e$10931$bP4ck)))
          (case-lambda
            ((g$name*$10937$bP4ck
               g$exp*$10938$bP4ck
               g$imp*$10939$bP4ck
               g$b*$10940$bP4ck)
             ((case-lambda
                ((g$b*$10941$bP4ck
                   g$imp*$10942$bP4ck
                   g$exp*$10943$bP4ck
                   g$name*$10944$bP4ck)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$8031$bP4ck g$name*$10944$bP4ck)))
                   (case-lambda
                     ((g$name$10947$bP4ck g$ver$10948$bP4ck)
                      ((case-lambda
                         ((g$ver$10949$bP4ck g$name$10950$bP4ck)
                          (begin
                            (g$verify-name$10932$bP4ck g$name$10950$bP4ck)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$8041$bP4ck
                                   g$name$10950$bP4ck
                                   g$exp*$10943$bP4ck
                                   g$imp*$10942$bP4ck
                                   g$b*$10941$bP4ck
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10958$bP4ck
                                   g$invoke-req*$10959$bP4ck
                                   g$visit-req*$10960$bP4ck
                                   g$invoke-code$10961$bP4ck
                                   g$visit-code$10962$bP4ck
                                   g$export-subst$10963$bP4ck
                                   g$export-env$10964$bP4ck)
                                 ((case-lambda
                                    ((g$export-env$10965$bP4ck
                                       g$export-subst$10966$bP4ck
                                       g$visit-code$10967$bP4ck
                                       g$invoke-code$10968$bP4ck
                                       g$visit-req*$10969$bP4ck
                                       g$invoke-req*$10970$bP4ck
                                       g$imp*$10971$bP4ck)
                                     (values
                                       g$name$10950$bP4ck
                                       g$ver$10949$bP4ck
                                       g$imp*$10971$bP4ck
                                       g$invoke-req*$10970$bP4ck
                                       g$visit-req*$10969$bP4ck
                                       g$invoke-code$10968$bP4ck
                                       g$visit-code$10967$bP4ck
                                       g$export-subst$10966$bP4ck
                                       g$export-env$10965$bP4ck)))
                                  g$export-env$10964$bP4ck
                                  g$export-subst$10963$bP4ck
                                  g$visit-code$10962$bP4ck
                                  g$invoke-code$10961$bP4ck
                                  g$visit-req*$10960$bP4ck
                                  g$invoke-req*$10959$bP4ck
                                  g$imp*$10958$bP4ck)))))))
                       g$ver$10948$bP4ck
                       g$name$10947$bP4ck))))))
              g$b*$10940$bP4ck
              g$imp*$10939$bP4ck
              g$exp*$10938$bP4ck
              g$name*$10937$bP4ck)))))))
   (g$parse-top-level-program$8043$bP4ck
     g$parse-top-level-program$11546$bP4ck
     (case-lambda
       ((g$e*$10972$bP4ck)
        ((case-lambda
           ((g$t$10973$bP4ck)
            ((case-lambda
               ((g$ls/false$10974$bP4ck)
                (if (if g$ls/false$10974$bP4ck
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10975$bP4ck
                               g$imp*$10976$bP4ck
                               g$b*$10977$bP4ck)
                             (eq? (g$syntax->datum$8099$bP4ck
                                    g$import$10975$bP4ck)
                                  'import)))
                          g$ls/false$10974$bP4ck))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10978$bP4ck
                         g$imp*$10979$bP4ck
                         g$b*$10980$bP4ck)
                       (values g$imp*$10979$bP4ck g$b*$10980$bP4ck)))
                    g$ls/false$10974$bP4ck)
                  ((case-lambda
                     ((g$t$10981$bP4ck)
                      ((case-lambda
                         ((g$ls/false$10982$bP4ck)
                          (if (if g$ls/false$10982$bP4ck
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10983$bP4ck
                                         g$x$10984$bP4ck
                                         g$y$10985$bP4ck)
                                       (eq? (g$syntax->datum$8099$bP4ck
                                              g$import$10983$bP4ck)
                                            'import)))
                                    g$ls/false$10982$bP4ck))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10986$bP4ck
                                   g$x$10987$bP4ck
                                   g$y$10988$bP4ck)
                                 (g$syntax-violation$8096$bP4ck
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7703$bP4ck g$e*$10972$bP4ck))))
                              g$ls/false$10982$bP4ck)
                            ((case-lambda
                               ((g$t$10989$bP4ck)
                                ((case-lambda
                                   ((g$ls/false$10990$bP4ck)
                                    (if g$ls/false$10990$bP4ck
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10990$bP4ck)
                                      (g$syntax-violation$8096$bP4ck
                                        '#f
                                        '"invalid syntax"
                                        g$t$10989$bP4ck))))
                                 (g$syntax-dispatch$7984$bP4ck
                                   g$t$10989$bP4ck
                                   '_))))
                             g$t$10981$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck
                         g$t$10981$bP4ck
                         '((any . any) . any)))))
                   g$t$10973$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck
               g$t$10973$bP4ck
               '((any . each-any) . each-any)))))
         g$e*$10972$bP4ck))))
   (g$top-level-expander$8044$bP4ck
     g$top-level-expander$11547$bP4ck
     (case-lambda
       ((g$e*$10991$bP4ck)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$8043$bP4ck g$e*$10991$bP4ck)))
          (case-lambda
            ((g$imp*$10994$bP4ck g$b*$10995$bP4ck)
             ((case-lambda
                ((g$b*$10996$bP4ck g$imp*$10997$bP4ck)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$8041$bP4ck
                        '()
                        '()
                        g$imp*$10997$bP4ck
                        g$b*$10996$bP4ck
                        '#t)))
                   (case-lambda
                     ((g$imp*$11005$bP4ck
                        g$invoke-req*$11006$bP4ck
                        g$visit-req*$11007$bP4ck
                        g$invoke-code$11008$bP4ck
                        g$visit-code$11009$bP4ck
                        g$export-subst$11010$bP4ck
                        g$export-env$11011$bP4ck)
                      ((case-lambda
                         ((g$export-env$11012$bP4ck
                            g$export-subst$11013$bP4ck
                            g$visit-code$11014$bP4ck
                            g$invoke-code$11015$bP4ck
                            g$visit-req*$11016$bP4ck
                            g$invoke-req*$11017$bP4ck
                            g$imp*$11018$bP4ck)
                          (values
                            g$invoke-req*$11017$bP4ck
                            g$invoke-code$11015$bP4ck)))
                       g$export-env$11011$bP4ck
                       g$export-subst$11010$bP4ck
                       g$visit-code$11009$bP4ck
                       g$invoke-code$11008$bP4ck
                       g$visit-req*$11007$bP4ck
                       g$invoke-req*$11006$bP4ck
                       g$imp*$11005$bP4ck))))))
              g$b*$10995$bP4ck
              g$imp*$10994$bP4ck)))))))
   (g$9096$8045$bP4ck
     g$9096$11548$bP4ck
     (make-record-type-descriptor
       'env
       '#f
       'g$9099$bP4ck
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9098$8046$bP4ck g$9098$11549$bP4ck '#f)
   (g$9097$8047$bP4ck
     g$9097$11550$bP4ck
     (make-record-constructor-descriptor
       g$9096$8045$bP4ck
       '#f
       g$9098$8046$bP4ck))
   (g$env?$8048$bP4ck
     g$env?$11551$bP4ck
     (record-predicate g$9096$8045$bP4ck))
   (g$make-env$8049$bP4ck
     g$make-env$11552$bP4ck
     (record-constructor g$9097$8047$bP4ck))
   (g$env-names$8050$bP4ck
     g$env-names$11553$bP4ck
     (record-accessor g$9096$8045$bP4ck '0))
   (g$env-labels$8051$bP4ck
     g$env-labels$11554$bP4ck
     (record-accessor g$9096$8045$bP4ck '1))
   (g$env-itc$8052$bP4ck
     g$env-itc$11555$bP4ck
     (record-accessor g$9096$8045$bP4ck '2))
   (g$set-env-names!$8053$bP4ck
     g$set-env-names!$11556$bP4ck
     (record-mutator g$9096$8045$bP4ck '0))
   (g$set-env-labels!$8054$bP4ck
     g$set-env-labels!$11557$bP4ck
     (record-mutator g$9096$8045$bP4ck '1))
   (g$set-env-itc!$8055$bP4ck
     g$set-env-itc!$11558$bP4ck
     (record-mutator g$9096$8045$bP4ck '2))
   (g$rp$8056$bP4ck
     g$rp$11559$bP4ck
     (make-record-printer
       'env
       (case-lambda
         ((g$x$11019$bP4ck g$p$11020$bP4ck g$wr$11021$bP4ck)
          (display '"#<environment>" g$p$11020$bP4ck)))))
   (g$9115$8057$bP4ck
     g$9115$11560$bP4ck
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9118$bP4ck
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9117$8058$bP4ck g$9117$11561$bP4ck '#f)
   (g$9116$8059$bP4ck
     g$9116$11562$bP4ck
     (make-record-constructor-descriptor
       g$9115$8057$bP4ck
       '#f
       g$9117$8058$bP4ck))
   (g$interaction-env?$8060$bP4ck
     g$interaction-env?$11563$bP4ck
     (record-predicate g$9115$8057$bP4ck))
   (g$make-interaction-env$8061$bP4ck
     g$make-interaction-env$11564$bP4ck
     (record-constructor g$9116$8059$bP4ck))
   (g$interaction-env-rib$8062$bP4ck
     g$interaction-env-rib$11565$bP4ck
     (record-accessor g$9115$8057$bP4ck '0))
   (g$interaction-env-r$8063$bP4ck
     g$interaction-env-r$11566$bP4ck
     (record-accessor g$9115$8057$bP4ck '1))
   (g$interaction-env-locs$8064$bP4ck
     g$interaction-env-locs$11567$bP4ck
     (record-accessor g$9115$8057$bP4ck '2))
   (g$set-interaction-env-rib!$8065$bP4ck
     g$set-interaction-env-rib!$11568$bP4ck
     (record-mutator g$9115$8057$bP4ck '0))
   (g$set-interaction-env-r!$8066$bP4ck
     g$set-interaction-env-r!$11569$bP4ck
     (record-mutator g$9115$8057$bP4ck '1))
   (g$set-interaction-env-locs!$8067$bP4ck
     g$set-interaction-env-locs!$11570$bP4ck
     (record-mutator g$9115$8057$bP4ck '2))
   (g$rp$8068$bP4ck
     g$rp$11571$bP4ck
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$11022$bP4ck g$p$11023$bP4ck g$wr$11024$bP4ck)
          (display '"#<environment>" g$p$11023$bP4ck)))))
   (g$interaction-environment-symbols$8069$bP4ck
     g$interaction-environment-symbols$11572$bP4ck
     (case-lambda
       (()
        (g$environment-symbols$8073$bP4ck
          (g$interaction-environment$8103$bP4ck)))))
   (g$environment-bindings$8070$bP4ck
     g$environment-bindings$11573$bP4ck
     (case-lambda
       ((g$e$11025$bP4ck)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$11026$bP4ck g$label$11027$bP4ck)
               (g$parse-binding$8071$bP4ck
                 (cons
                   g$name$11026$bP4ck
                   (g$imported-label->binding$7515$bP4ck
                     g$label$11027$bP4ck)))))
            (g$env-names$8050$bP4ck g$e$11025$bP4ck)
            (g$env-labels$8051$bP4ck g$e$11025$bP4ck))))))
   (g$parse-binding$8071$bP4ck
     g$parse-binding$11574$bP4ck
     (case-lambda
       ((g$b$11028$bP4ck)
        (cons
          (car g$b$11028$bP4ck)
          ((case-lambda
             ((g$t$11029$bP4ck)
              (if (g$memv$5056$bP4ck g$t$11029$bP4ck '(core-prim global))
                'procedure
                (if (g$memv$5056$bP4ck
                      g$t$11029$bP4ck
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$5056$bP4ck g$t$11029$bP4ck '($core-rtd))
                    'record
                    (if (eq? (car g$b$11028$bP4ck)
                             (g$cadr$5264$bP4ck g$b$11028$bP4ck))
                      'syntax
                      'unknown))))))
           (g$cadr$5264$bP4ck g$b$11028$bP4ck))))))
   (g$environment?$8072$bP4ck
     g$environment?$11575$bP4ck
     (case-lambda
       ((g$x$11030$bP4ck)
        ((case-lambda
           ((g$t$11031$bP4ck)
            (if g$t$11031$bP4ck
              g$t$11031$bP4ck
              (begin '#f (g$interaction-env?$8060$bP4ck g$x$11030$bP4ck)))))
         (g$env?$8048$bP4ck g$x$11030$bP4ck)))))
   (g$environment-symbols$8073$bP4ck
     g$environment-symbols$11576$bP4ck
     (case-lambda
       ((g$x$11032$bP4ck)
        (if (g$env?$8048$bP4ck g$x$11032$bP4ck)
          (vector->list (g$env-names$8050$bP4ck g$x$11032$bP4ck))
          (if (g$interaction-env?$8060$bP4ck g$x$11032$bP4ck)
            (g$map$5063$bP4ck
              values
              (g$rib-sym*$7656$bP4ck
                (g$interaction-env-rib$8062$bP4ck g$x$11032$bP4ck)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$11032$bP4ck))))))
   (g$environment$8074$bP4ck
     g$environment$11577$bP4ck
     (case-lambda
       (g$imp*$11033$bP4ck
        ((case-lambda
           ((g$itc$11034$bP4ck)
            ((case-lambda
               ((g$imp-collector$11037$bP4ck g$imp-collector$11038$bP4ck)
                ((case-lambda
                   ((g$swap$11039$bP4ck)
                    (dynamic-wind
                      g$swap$11039$bP4ck
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$8033$bP4ck
                                g$imp*$11033$bP4ck)))
                           (case-lambda
                             ((g$subst-names$11042$bP4ck
                                g$subst-labels$11043$bP4ck)
                              ((case-lambda
                                 ((g$subst-labels$11044$bP4ck
                                    g$subst-names$11045$bP4ck)
                                  (g$make-env$8049$bP4ck
                                    g$subst-names$11045$bP4ck
                                    g$subst-labels$11044$bP4ck
                                    g$itc$11034$bP4ck)))
                               g$subst-labels$11043$bP4ck
                               g$subst-names$11042$bP4ck))))))
                      g$swap$11039$bP4ck)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$11046$bP4ck)
                        (begin
                          (g$imp-collector$11037$bP4ck
                            g$imp-collector$11038$bP4ck)
                          (set! g$imp-collector$11038$bP4ck g$t$11046$bP4ck))))
                     (g$imp-collector$11037$bP4ck)))))))
             g$imp-collector$8038$bP4ck
             g$itc$11034$bP4ck)))
         (g$make-collector$8035$bP4ck)))))
   (g$null-environment$8075$bP4ck
     g$null-environment$11578$bP4ck
     (case-lambda
       ((g$n$11047$bP4ck)
        (begin
          (if (not (eqv? g$n$11047$bP4ck '5))
            (assertion-violation 'null-environment '"not 5" g$n$11047$bP4ck)
            (void))
          (g$environment$8074$bP4ck '(psyntax null-environment-5))))))
   (g$scheme-report-environment$8076$bP4ck
     g$scheme-report-environment$11579$bP4ck
     (case-lambda
       ((g$n$11048$bP4ck)
        (begin
          (if (not (eqv? g$n$11048$bP4ck '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$11048$bP4ck)
            (void))
          (g$environment$8074$bP4ck '(psyntax scheme-report-environment-5))))))
   (g$expand$8077$bP4ck
     g$expand$11580$bP4ck
     (case-lambda
       ((g$x$11049$bP4ck g$env$11050$bP4ck)
        (if (g$env?$8048$bP4ck g$env$11050$bP4ck)
          ((case-lambda
             ((g$rib$11051$bP4ck)
              ((case-lambda
                 ((g$x$11052$bP4ck
                    g$itc$11053$bP4ck
                    g$rtc$11054$bP4ck
                    g$vtc$11055$bP4ck)
                  ((case-lambda
                     ((g$x$11056$bP4ck)
                      (begin
                        (g$seal-rib!$7672$bP4ck g$rib$11051$bP4ck)
                        (values g$x$11056$bP4ck (g$rtc$11054$bP4ck)))))
                   ((case-lambda
                      ((g$top-level-context$11065$bP4ck
                         g$inv-collector$11066$bP4ck
                         g$vis-collector$11067$bP4ck
                         g$imp-collector$11068$bP4ck
                         g$top-level-context$11069$bP4ck
                         g$inv-collector$11070$bP4ck
                         g$vis-collector$11071$bP4ck
                         g$imp-collector$11072$bP4ck)
                       ((case-lambda
                          ((g$swap$11073$bP4ck)
                           (dynamic-wind
                             g$swap$11073$bP4ck
                             (case-lambda
                               (()
                                (g$chi-expr$8002$bP4ck
                                  g$x$11052$bP4ck
                                  '()
                                  '())))
                             g$swap$11073$bP4ck)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$11074$bP4ck)
                                 (begin
                                   (g$top-level-context$11065$bP4ck
                                     g$top-level-context$11069$bP4ck)
                                   (set! g$top-level-context$11069$bP4ck
                                     g$t$11074$bP4ck))))
                              (g$top-level-context$11065$bP4ck))
                             ((case-lambda
                                ((g$t$11075$bP4ck)
                                 (begin
                                   (g$inv-collector$11066$bP4ck
                                     g$inv-collector$11070$bP4ck)
                                   (set! g$inv-collector$11070$bP4ck
                                     g$t$11075$bP4ck))))
                              (g$inv-collector$11066$bP4ck))
                             ((case-lambda
                                ((g$t$11076$bP4ck)
                                 (begin
                                   (g$vis-collector$11067$bP4ck
                                     g$vis-collector$11071$bP4ck)
                                   (set! g$vis-collector$11071$bP4ck
                                     g$t$11076$bP4ck))))
                              (g$vis-collector$11067$bP4ck))
                             ((case-lambda
                                ((g$t$11077$bP4ck)
                                 (begin
                                   (g$imp-collector$11068$bP4ck
                                     g$imp-collector$11072$bP4ck)
                                   (set! g$imp-collector$11072$bP4ck
                                     g$t$11077$bP4ck))))
                              (g$imp-collector$11068$bP4ck))))))))
                    g$top-level-context$8104$bP4ck
                    g$inv-collector$8036$bP4ck
                    g$vis-collector$8037$bP4ck
                    g$imp-collector$8038$bP4ck
                    '#f
                    g$rtc$11054$bP4ck
                    g$vtc$11055$bP4ck
                    g$itc$11053$bP4ck))))
               (g$make-stx$7679$bP4ck
                 g$x$11049$bP4ck
                 g$top-mark*$7643$bP4ck
                 (list g$rib$11051$bP4ck)
                 '())
               (g$env-itc$8052$bP4ck g$env$11050$bP4ck)
               (g$make-collector$8035$bP4ck)
               (g$make-collector$8035$bP4ck))))
           (g$make-top-rib$8034$bP4ck
             (g$env-names$8050$bP4ck g$env$11050$bP4ck)
             (g$env-labels$8051$bP4ck g$env$11050$bP4ck)))
          (if (g$interaction-env?$8060$bP4ck g$env$11050$bP4ck)
            ((case-lambda
               ((g$rib$11078$bP4ck g$r$11079$bP4ck g$rtc$11080$bP4ck)
                ((case-lambda
                   ((g$x$11081$bP4ck)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$11092$bP4ck
                               g$inv-collector$11093$bP4ck
                               g$vis-collector$11094$bP4ck
                               g$imp-collector$11095$bP4ck
                               g$top-level-context$11096$bP4ck
                               g$inv-collector$11097$bP4ck
                               g$vis-collector$11098$bP4ck
                               g$imp-collector$11099$bP4ck)
                             ((case-lambda
                                ((g$swap$11100$bP4ck)
                                 (dynamic-wind
                                   g$swap$11100$bP4ck
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$8040$bP4ck
                                        g$x$11081$bP4ck
                                        g$rib$11078$bP4ck
                                        g$r$11079$bP4ck)))
                                   g$swap$11100$bP4ck)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$11101$bP4ck)
                                       (begin
                                         (g$top-level-context$11092$bP4ck
                                           g$top-level-context$11096$bP4ck)
                                         (set! g$top-level-context$11096$bP4ck
                                           g$t$11101$bP4ck))))
                                    (g$top-level-context$11092$bP4ck))
                                   ((case-lambda
                                      ((g$t$11102$bP4ck)
                                       (begin
                                         (g$inv-collector$11093$bP4ck
                                           g$inv-collector$11097$bP4ck)
                                         (set! g$inv-collector$11097$bP4ck
                                           g$t$11102$bP4ck))))
                                    (g$inv-collector$11093$bP4ck))
                                   ((case-lambda
                                      ((g$t$11103$bP4ck)
                                       (begin
                                         (g$vis-collector$11094$bP4ck
                                           g$vis-collector$11098$bP4ck)
                                         (set! g$vis-collector$11098$bP4ck
                                           g$t$11103$bP4ck))))
                                    (g$vis-collector$11094$bP4ck))
                                   ((case-lambda
                                      ((g$t$11104$bP4ck)
                                       (begin
                                         (g$imp-collector$11095$bP4ck
                                           g$imp-collector$11099$bP4ck)
                                         (set! g$imp-collector$11099$bP4ck
                                           g$t$11104$bP4ck))))
                                    (g$imp-collector$11095$bP4ck))))))))
                          g$top-level-context$8104$bP4ck
                          g$inv-collector$8036$bP4ck
                          g$vis-collector$8037$bP4ck
                          g$imp-collector$8038$bP4ck
                          g$env$11050$bP4ck
                          g$rtc$11080$bP4ck
                          (g$make-collector$8035$bP4ck)
                          (g$make-collector$8035$bP4ck))))
                      (case-lambda
                        ((g$e$11105$bP4ck g$r^$11106$bP4ck)
                         ((case-lambda
                            ((g$r^$11107$bP4ck g$e$11108$bP4ck)
                             (begin
                               (g$set-interaction-env-r!$8066$bP4ck
                                 g$env$11050$bP4ck
                                 g$r^$11107$bP4ck)
                               (values g$e$11108$bP4ck (g$rtc$11080$bP4ck)))))
                          g$r^$11106$bP4ck
                          g$e$11105$bP4ck))))))
                 (g$make-stx$7679$bP4ck
                   g$x$11049$bP4ck
                   g$top-mark*$7643$bP4ck
                   (list g$rib$11078$bP4ck)
                   '()))))
             (g$interaction-env-rib$8062$bP4ck g$env$11050$bP4ck)
             (g$interaction-env-r$8063$bP4ck g$env$11050$bP4ck)
             (g$make-collector$8035$bP4ck))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$11050$bP4ck))))))
   (g$eval$8078$bP4ck
     g$eval$11581$bP4ck
     (case-lambda
       ((g$x$11109$bP4ck g$env$11110$bP4ck)
        (begin
          (if (not (g$environment?$8072$bP4ck g$env$11110$bP4ck))
            (error 'eval '"not an environment" g$env$11110$bP4ck)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8077$bP4ck g$x$11109$bP4ck g$env$11110$bP4ck)))
            (case-lambda
              ((g$x$11113$bP4ck g$invoke-req*$11114$bP4ck)
               ((case-lambda
                  ((g$invoke-req*$11115$bP4ck g$x$11116$bP4ck)
                   (begin
                     (g$for-each$5064$bP4ck
                       g$invoke-library$7516$bP4ck
                       g$invoke-req*$11115$bP4ck)
                     (eval-core
                       (g$expanded->core$7224$bP4ck g$x$11116$bP4ck)))))
                g$invoke-req*$11114$bP4ck
                g$x$11113$bP4ck))))))))
   (g$expand->core$8079$bP4ck
     g$expand->core$11582$bP4ck
     (case-lambda
       ((g$x$11117$bP4ck g$env$11118$bP4ck)
        (begin
          (if (not (g$environment?$8072$bP4ck g$env$11118$bP4ck))
            (error 'eval '"not an environment" g$env$11118$bP4ck)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8077$bP4ck g$x$11117$bP4ck g$env$11118$bP4ck)))
            (case-lambda
              ((g$x$11121$bP4ck g$invoke-req*$11122$bP4ck)
               ((case-lambda
                  ((g$invoke-req*$11123$bP4ck g$x$11124$bP4ck)
                   (begin
                     (g$for-each$5064$bP4ck
                       g$invoke-library$7516$bP4ck
                       g$invoke-req*$11123$bP4ck)
                     (g$expanded->core$7224$bP4ck g$x$11124$bP4ck))))
                g$invoke-req*$11122$bP4ck
                g$x$11121$bP4ck))))))))
   (g$library-expander$8080$bP4ck
     g$library-expander$11583$bP4ck
     (case-lambda
       ((g$x$11125$bP4ck g$filename$11126$bP4ck g$verify-name$11127$bP4ck)
        (letrec* ((g$build-visit-code$11128$bP4ck
                    (case-lambda
                      ((g$macro*$11171$bP4ck)
                       (if (null? g$macro*$11171$bP4ck)
                         (g$build-void$7636$bP4ck)
                         (g$build-sequence$7635$bP4ck
                           '#f
                           (g$map$5063$bP4ck
                             (case-lambda
                               ((g$x$11172$bP4ck)
                                ((case-lambda
                                   ((g$loc$11173$bP4ck g$src$11174$bP4ck)
                                    (list
                                      'set!
                                      g$loc$11173$bP4ck
                                      g$src$11174$bP4ck)))
                                 (car g$x$11172$bP4ck)
                                 (g$cddr$5266$bP4ck g$x$11172$bP4ck))))
                             g$macro*$11171$bP4ck))))))
                  (g$visit!$11129$bP4ck
                    (case-lambda
                      ((g$macro*$11167$bP4ck)
                       (g$for-each$5064$bP4ck
                         (case-lambda
                           ((g$x$11168$bP4ck)
                            ((case-lambda
                               ((g$loc$11169$bP4ck g$proc$11170$bP4ck)
                                (set-symbol-value!
                                  g$loc$11169$bP4ck
                                  g$proc$11170$bP4ck)))
                             (car g$x$11168$bP4ck)
                             (g$cadr$5264$bP4ck g$x$11168$bP4ck))))
                         g$macro*$11167$bP4ck)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$8042$bP4ck
                 g$x$11125$bP4ck
                 g$verify-name$11127$bP4ck)))
            (case-lambda
              ((g$name$11139$bP4ck
                 g$ver$11140$bP4ck
                 g$imp*$11141$bP4ck
                 g$inv*$11142$bP4ck
                 g$vis*$11143$bP4ck
                 g$invoke-code$11144$bP4ck
                 g$macro*$11145$bP4ck
                 g$export-subst$11146$bP4ck
                 g$export-env$11147$bP4ck)
               ((case-lambda
                  ((g$export-env$11148$bP4ck
                     g$export-subst$11149$bP4ck
                     g$macro*$11150$bP4ck
                     g$invoke-code$11151$bP4ck
                     g$vis*$11152$bP4ck
                     g$inv*$11153$bP4ck
                     g$imp*$11154$bP4ck
                     g$ver$11155$bP4ck
                     g$name$11156$bP4ck)
                   ((case-lambda
                      ((g$id$11157$bP4ck
                         g$name$11158$bP4ck
                         g$ver$11159$bP4ck
                         g$imp*$11160$bP4ck
                         g$vis*$11161$bP4ck
                         g$inv*$11162$bP4ck
                         g$visit-proc$11163$bP4ck
                         g$invoke-proc$11164$bP4ck
                         g$visit-code$11165$bP4ck
                         g$invoke-code$11166$bP4ck)
                       (begin
                         (g$install-library$7514$bP4ck
                           g$id$11157$bP4ck
                           g$name$11158$bP4ck
                           g$ver$11159$bP4ck
                           g$imp*$11160$bP4ck
                           g$vis*$11161$bP4ck
                           g$inv*$11162$bP4ck
                           g$export-subst$11149$bP4ck
                           g$export-env$11148$bP4ck
                           g$visit-proc$11163$bP4ck
                           g$invoke-proc$11164$bP4ck
                           g$visit-code$11165$bP4ck
                           g$invoke-code$11166$bP4ck
                           '#t
                           g$filename$11126$bP4ck)
                         (values
                           g$id$11157$bP4ck
                           g$name$11158$bP4ck
                           g$ver$11159$bP4ck
                           g$imp*$11160$bP4ck
                           g$vis*$11161$bP4ck
                           g$inv*$11162$bP4ck
                           g$invoke-code$11166$bP4ck
                           g$visit-code$11165$bP4ck
                           g$export-subst$11149$bP4ck
                           g$export-env$11148$bP4ck))))
                    (gensym)
                    g$name$11156$bP4ck
                    g$ver$11155$bP4ck
                    (g$map$5063$bP4ck
                      g$library-spec$7520$bP4ck
                      g$imp*$11154$bP4ck)
                    (g$map$5063$bP4ck
                      g$library-spec$7520$bP4ck
                      g$vis*$11152$bP4ck)
                    (g$map$5063$bP4ck
                      g$library-spec$7520$bP4ck
                      g$inv*$11153$bP4ck)
                    (case-lambda
                      (() (g$visit!$11129$bP4ck g$macro*$11150$bP4ck)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7224$bP4ck
                           g$invoke-code$11151$bP4ck))))
                    (g$build-visit-code$11128$bP4ck g$macro*$11150$bP4ck)
                    g$invoke-code$11151$bP4ck)))
                g$export-env$11147$bP4ck
                g$export-subst$11146$bP4ck
                g$macro*$11145$bP4ck
                g$invoke-code$11144$bP4ck
                g$vis*$11143$bP4ck
                g$inv*$11142$bP4ck
                g$imp*$11141$bP4ck
                g$ver$11140$bP4ck
                g$name$11139$bP4ck))))))
       ((g$x$11175$bP4ck g$filename$11176$bP4ck)
        (g$library-expander$8080$bP4ck
          g$x$11175$bP4ck
          g$filename$11176$bP4ck
          (case-lambda ((g$x$11177$bP4ck) (values)))))
       ((g$x$11178$bP4ck)
        (g$library-expander$8080$bP4ck
          g$x$11178$bP4ck
          '#f
          (case-lambda ((g$x$11179$bP4ck) (values)))))))
   (g$boot-library-expand$8081$bP4ck
     g$boot-library-expand$11584$bP4ck
     (case-lambda
       ((g$x$11180$bP4ck)
        (call-with-values
          (case-lambda (() (g$library-expander$8080$bP4ck g$x$11180$bP4ck)))
          (case-lambda
            ((g$id$11191$bP4ck
               g$name$11192$bP4ck
               g$ver$11193$bP4ck
               g$imp*$11194$bP4ck
               g$vis*$11195$bP4ck
               g$inv*$11196$bP4ck
               g$invoke-code$11197$bP4ck
               g$visit-code$11198$bP4ck
               g$export-subst$11199$bP4ck
               g$export-env$11200$bP4ck)
             ((case-lambda
                ((g$export-env$11201$bP4ck
                   g$export-subst$11202$bP4ck
                   g$visit-code$11203$bP4ck
                   g$invoke-code$11204$bP4ck
                   g$inv*$11205$bP4ck
                   g$vis*$11206$bP4ck
                   g$imp*$11207$bP4ck
                   g$ver$11208$bP4ck
                   g$name$11209$bP4ck
                   g$id$11210$bP4ck)
                 (values
                   g$name$11209$bP4ck
                   g$invoke-code$11204$bP4ck
                   g$export-subst$11202$bP4ck
                   g$export-env$11201$bP4ck)))
              g$export-env$11200$bP4ck
              g$export-subst$11199$bP4ck
              g$visit-code$11198$bP4ck
              g$invoke-code$11197$bP4ck
              g$inv*$11196$bP4ck
              g$vis*$11195$bP4ck
              g$imp*$11194$bP4ck
              g$ver$11193$bP4ck
              g$name$11192$bP4ck
              g$id$11191$bP4ck)))))))
   (g$rev-map-append$8082$bP4ck
     g$rev-map-append$11585$bP4ck
     (case-lambda
       ((g$f$11211$bP4ck g$ls$11212$bP4ck g$ac$11213$bP4ck)
        (if (null? g$ls$11212$bP4ck)
          g$ac$11213$bP4ck
          (g$rev-map-append$8082$bP4ck
            g$f$11211$bP4ck
            (cdr g$ls$11212$bP4ck)
            (cons
              (g$f$11211$bP4ck (car g$ls$11212$bP4ck))
              g$ac$11213$bP4ck))))))
   (g$build-exports$8083$bP4ck
     g$build-exports$11586$bP4ck
     (case-lambda
       ((g$lex*+loc*$11214$bP4ck g$init*$11215$bP4ck)
        (g$build-sequence$7635$bP4ck
          '#f
          (cons
            (g$build-void$7636$bP4ck)
            (g$rev-map-append$8082$bP4ck
              (case-lambda
                ((g$x$11216$bP4ck)
                 (list 'set! (cdr g$x$11216$bP4ck) (car g$x$11216$bP4ck))))
              g$lex*+loc*$11214$bP4ck
              g$init*$11215$bP4ck))))))
   (g$make-export-subst$8084$bP4ck
     g$make-export-subst$11587$bP4ck
     (case-lambda
       ((g$name*$11217$bP4ck g$id*$11218$bP4ck)
        (g$map$5063$bP4ck
          (case-lambda
            ((g$name$11219$bP4ck g$id$11220$bP4ck)
             ((case-lambda
                ((g$label$11221$bP4ck)
                 (begin
                   (if (not g$label$11221$bP4ck)
                     (g$syntax-violation$8096$bP4ck
                       '#f
                       '"cannot export unbound identifier"
                       g$id$11220$bP4ck)
                     (void))
                   (cons g$name$11219$bP4ck g$label$11221$bP4ck))))
              (g$id->label$7719$bP4ck g$id$11220$bP4ck))))
          g$name*$11217$bP4ck
          g$id*$11218$bP4ck))))
   (g$make-export-env/macros$8085$bP4ck
     g$make-export-env/macros$11588$bP4ck
     (case-lambda
       ((g$lex*$11222$bP4ck g$loc*$11223$bP4ck g$r$11224$bP4ck)
        (letrec* ((g$lookup$11225$bP4ck
                    (case-lambda
                      ((g$x$11240$bP4ck)
                       ((letrec ((g$f$11241$bP4ck
                                   (case-lambda
                                     ((g$x$11242$bP4ck
                                        g$lex*$11243$bP4ck
                                        g$loc*$11244$bP4ck)
                                      (if (pair? g$lex*$11243$bP4ck)
                                        (if (eq? g$x$11242$bP4ck
                                                 (car g$lex*$11243$bP4ck))
                                          (car g$loc*$11244$bP4ck)
                                          (g$f$11241$bP4ck
                                            g$x$11242$bP4ck
                                            (cdr g$lex*$11243$bP4ck)
                                            (cdr g$loc*$11244$bP4ck)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11241$bP4ck)
                        g$x$11240$bP4ck
                        g$lex*$11222$bP4ck
                        g$loc*$11223$bP4ck)))))
          ((letrec ((g$f$11226$bP4ck
                      (case-lambda
                        ((g$r$11227$bP4ck
                           g$env$11228$bP4ck
                           g$global*$11229$bP4ck
                           g$macro*$11230$bP4ck)
                         (if (null? g$r$11227$bP4ck)
                           (values
                             g$env$11228$bP4ck
                             g$global*$11229$bP4ck
                             g$macro*$11230$bP4ck)
                           ((case-lambda
                              ((g$x$11231$bP4ck)
                               ((case-lambda
                                  ((g$label$11232$bP4ck g$b$11233$bP4ck)
                                   ((case-lambda
                                      ((g$t$11234$bP4ck)
                                       (if (g$memv$5056$bP4ck
                                             g$t$11234$bP4ck
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$11235$bP4ck)
                                             ((case-lambda
                                                ((g$loc$11236$bP4ck
                                                   g$type$11237$bP4ck)
                                                 (g$f$11226$bP4ck
                                                   (cdr g$r$11227$bP4ck)
                                                   (cons
                                                     (g$cons*$5065$bP4ck
                                                       g$label$11232$bP4ck
                                                       g$type$11237$bP4ck
                                                       g$loc$11236$bP4ck)
                                                     g$env$11228$bP4ck)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7928$bP4ck
                                                         g$v$11235$bP4ck)
                                                       g$loc$11236$bP4ck)
                                                     g$global*$11229$bP4ck)
                                                   g$macro*$11230$bP4ck)))
                                              (g$lookup$11225$bP4ck
                                                (g$lexical-var$7928$bP4ck
                                                  g$v$11235$bP4ck))
                                              (if (g$lexical-mutable?$7929$bP4ck
                                                    g$v$11235$bP4ck)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7724$bP4ck
                                            g$b$11233$bP4ck))
                                         (if (g$memv$5056$bP4ck
                                               g$t$11234$bP4ck
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$11238$bP4ck)
                                               (g$f$11226$bP4ck
                                                 (cdr g$r$11227$bP4ck)
                                                 (cons
                                                   (g$cons*$5065$bP4ck
                                                     g$label$11232$bP4ck
                                                     'global-macro
                                                     g$loc$11238$bP4ck)
                                                   g$env$11228$bP4ck)
                                                 g$global*$11229$bP4ck
                                                 (cons
                                                   (cons
                                                     g$loc$11238$bP4ck
                                                     (g$binding-value$7724$bP4ck
                                                       g$b$11233$bP4ck))
                                                   g$macro*$11230$bP4ck))))
                                            (gensym))
                                           (if (g$memv$5056$bP4ck
                                                 g$t$11234$bP4ck
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$11239$bP4ck)
                                                 (g$f$11226$bP4ck
                                                   (cdr g$r$11227$bP4ck)
                                                   (cons
                                                     (g$cons*$5065$bP4ck
                                                       g$label$11232$bP4ck
                                                       'global-macro!
                                                       g$loc$11239$bP4ck)
                                                     g$env$11228$bP4ck)
                                                   g$global*$11229$bP4ck
                                                   (cons
                                                     (cons
                                                       g$loc$11239$bP4ck
                                                       (g$binding-value$7724$bP4ck
                                                         g$b$11233$bP4ck))
                                                     g$macro*$11230$bP4ck))))
                                              (gensym))
                                             (if (g$memv$5056$bP4ck
                                                   g$t$11234$bP4ck
                                                   '($rtd $module))
                                               (g$f$11226$bP4ck
                                                 (cdr g$r$11227$bP4ck)
                                                 (cons
                                                   g$x$11231$bP4ck
                                                   g$env$11228$bP4ck)
                                                 g$global*$11229$bP4ck
                                                 g$macro*$11230$bP4ck)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7723$bP4ck
                                                   g$b$11233$bP4ck)
                                                 (g$binding-value$7724$bP4ck
                                                   g$b$11233$bP4ck))))))))
                                    (g$binding-type$7723$bP4ck
                                      g$b$11233$bP4ck))))
                                (car g$x$11231$bP4ck)
                                (cdr g$x$11231$bP4ck))))
                            (car g$r$11227$bP4ck)))))))
             g$f$11226$bP4ck)
           g$r$11224$bP4ck
           '()
           '()
           '())))))
   (g$generate-temporaries$8086$bP4ck
     g$generate-temporaries$11589$bP4ck
     (case-lambda
       ((g$ls$11245$bP4ck)
        ((case-lambda
           ((g$t$11246$bP4ck)
            ((case-lambda
               ((g$ls/false$11247$bP4ck)
                (if g$ls/false$11247$bP4ck
                  (apply
                    (case-lambda
                      ((g$ls$11248$bP4ck)
                       (g$map$5063$bP4ck
                         (case-lambda
                           ((g$x$11249$bP4ck)
                            (g$make-stx$7679$bP4ck
                              ((case-lambda
                                 ((g$x$11250$bP4ck)
                                  (if ((case-lambda
                                         ((g$t$11251$bP4ck)
                                          (if g$t$11251$bP4ck
                                            g$t$11251$bP4ck
                                            (begin
                                              '#f
                                              (string? g$x$11250$bP4ck)))))
                                       (symbol? g$x$11250$bP4ck))
                                    (gensym g$x$11250$bP4ck)
                                    (gensym 't))))
                               (g$syntax->datum$8099$bP4ck g$x$11249$bP4ck))
                              g$top-mark*$7643$bP4ck
                              '()
                              '())))
                         g$ls$11248$bP4ck)))
                    g$ls/false$11247$bP4ck)
                  ((case-lambda
                     ((g$t$11252$bP4ck)
                      ((case-lambda
                         ((g$ls/false$11253$bP4ck)
                          (if g$ls/false$11253$bP4ck
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11253$bP4ck)
                            (g$syntax-violation$8096$bP4ck
                              '#f
                              '"invalid syntax"
                              g$t$11252$bP4ck))))
                       (g$syntax-dispatch$7984$bP4ck g$t$11252$bP4ck '_))))
                   g$t$11246$bP4ck))))
             (g$syntax-dispatch$7984$bP4ck g$t$11246$bP4ck 'each-any))))
         g$ls$11245$bP4ck))))
   (g$free-identifier=?$8087$bP4ck
     g$free-identifier=?$11590$bP4ck
     (case-lambda
       ((g$x$11254$bP4ck g$y$11255$bP4ck)
        (if (g$id?$7706$bP4ck g$x$11254$bP4ck)
          (if (g$id?$7706$bP4ck g$y$11255$bP4ck)
            (g$free-id=?$7710$bP4ck g$x$11254$bP4ck g$y$11255$bP4ck)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11255$bP4ck))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11254$bP4ck)))))
   (g$bound-identifier=?$8088$bP4ck
     g$bound-identifier=?$11591$bP4ck
     (case-lambda
       ((g$x$11256$bP4ck g$y$11257$bP4ck)
        (if (g$id?$7706$bP4ck g$x$11256$bP4ck)
          (if (g$id?$7706$bP4ck g$y$11257$bP4ck)
            (g$bound-id=?$7709$bP4ck g$x$11256$bP4ck g$y$11257$bP4ck)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11257$bP4ck))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11256$bP4ck)))))
   (g$make-source-condition$8089$bP4ck
     g$make-source-condition$11592$bP4ck
     (case-lambda
       ((g$x$11258$bP4ck)
        (letrec* ((g$12051$11259$bP4ck
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$12054$bP4ck
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12053$11260$bP4ck '#f)
                  (g$12052$11261$bP4ck
                    (make-record-constructor-descriptor
                      g$12051$11259$bP4ck
                      &condition-rcd
                      g$12053$11260$bP4ck))
                  (g$12050$11262$bP4ck (record-predicate g$12051$11259$bP4ck))
                  (g$make-source-condition$11263$bP4ck
                    (record-constructor g$12052$11261$bP4ck))
                  (g$12048$11264$bP4ck (record-accessor g$12051$11259$bP4ck '0))
                  (g$12049$11265$bP4ck (record-accessor g$12051$11259$bP4ck '1))
                  (g$source-condition?$11266$bP4ck
                    (condition-predicate g$12051$11259$bP4ck))
                  (g$source-filename$11267$bP4ck
                    (condition-accessor
                      g$12051$11259$bP4ck
                      g$12048$11264$bP4ck))
                  (g$source-character$11268$bP4ck
                    (condition-accessor
                      g$12051$11259$bP4ck
                      g$12049$11265$bP4ck)))
          (if (pair? g$x$11258$bP4ck)
            (g$make-source-condition$11263$bP4ck
              (car g$x$11258$bP4ck)
              (cdr g$x$11258$bP4ck))
            (condition))))))
   (g$extract-position-condition$8090$bP4ck
     g$extract-position-condition$11593$bP4ck
     (case-lambda
       ((g$x$11269$bP4ck)
        (g$make-source-condition$8089$bP4ck
          (g$expression-position$8091$bP4ck g$x$11269$bP4ck)))))
   (g$expression-position$8091$bP4ck
     g$expression-position$11594$bP4ck
     (case-lambda
       ((g$x$11270$bP4ck)
        (if (g$stx?$7678$bP4ck g$x$11270$bP4ck)
          (begin
            '#f
            ((case-lambda
               ((g$x$11271$bP4ck)
                (if (annotation? g$x$11271$bP4ck)
                  (begin '#f (annotation-source g$x$11271$bP4ck))
                  '#f)))
             (g$stx-expr$7680$bP4ck g$x$11270$bP4ck)))
          '#f))))
   (g$assertion-error$8092$bP4ck
     g$assertion-error$11595$bP4ck
     (case-lambda
       ((g$expr$11272$bP4ck g$pos$11273$bP4ck)
        (raise
          (condition
            (g$make-assertion-violation$5837$bP4ck)
            (g$make-who-condition$5851$bP4ck 'assert)
            (g$make-message-condition$5805$bP4ck '"assertion failed")
            (g$make-irritants-condition$5843$bP4ck (list g$expr$11272$bP4ck))
            (g$make-source-condition$8089$bP4ck g$pos$11273$bP4ck))))))
   (g$syntax-error$8093$bP4ck
     g$syntax-error$11596$bP4ck
     (case-lambda
       ((g$x$11274$bP4ck . g$args$11275$bP4ck)
        (begin
          (if (not (g$for-all$5061$bP4ck string? g$args$11275$bP4ck))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11275$bP4ck)
            (void))
          (raise
            (condition
              (g$make-message-condition$5805$bP4ck
                (if (null? g$args$11275$bP4ck)
                  '"invalid syntax"
                  (apply string-append g$args$11275$bP4ck)))
              (g$make-syntax-violation$5877$bP4ck
                (g$syntax->datum$8099$bP4ck g$x$11274$bP4ck)
                '#f)
              (g$extract-position-condition$8090$bP4ck g$x$11274$bP4ck)
              (g$extract-trace$8094$bP4ck g$x$11274$bP4ck)))))))
   (g$extract-trace$8094$bP4ck
     g$extract-trace$11597$bP4ck
     (case-lambda
       ((g$x$11276$bP4ck)
        (letrec* ((g$12078$11277$bP4ck
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$12081$bP4ck
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12080$11278$bP4ck '#f)
                  (g$12079$11279$bP4ck
                    (make-record-constructor-descriptor
                      g$12078$11277$bP4ck
                      &condition-rcd
                      g$12080$11278$bP4ck))
                  (g$12077$11280$bP4ck (record-predicate g$12078$11277$bP4ck))
                  (g$make-trace$11281$bP4ck
                    (record-constructor g$12079$11279$bP4ck))
                  (g$12076$11282$bP4ck (record-accessor g$12078$11277$bP4ck '0))
                  (g$trace?$11283$bP4ck
                    (condition-predicate g$12078$11277$bP4ck))
                  (g$trace-form$11284$bP4ck
                    (condition-accessor
                      g$12078$11277$bP4ck
                      g$12076$11282$bP4ck)))
          ((letrec ((g$f$11285$bP4ck
                      (case-lambda
                        ((g$x$11286$bP4ck)
                         (if (g$stx?$7678$bP4ck g$x$11286$bP4ck)
                           (apply
                             condition
                             (g$make-trace$11281$bP4ck g$x$11286$bP4ck)
                             (g$map$5063$bP4ck
                               g$f$11285$bP4ck
                               (g$stx-ae*$7683$bP4ck g$x$11286$bP4ck)))
                           (if (annotation? g$x$11286$bP4ck)
                             (g$make-trace$11281$bP4ck
                               (g$make-stx$7679$bP4ck
                                 g$x$11286$bP4ck
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11285$bP4ck)
           g$x$11276$bP4ck)))))
   (g$syntax-violation*$8095$bP4ck
     g$syntax-violation*$11598$bP4ck
     (case-lambda
       ((g$who$11287$bP4ck
          g$msg$11288$bP4ck
          g$form$11289$bP4ck
          g$condition-object$11290$bP4ck)
        (begin
          (if (not (string? g$msg$11288$bP4ck))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11288$bP4ck)
            (void))
          ((case-lambda
             ((g$who$11291$bP4ck)
              (raise
                (condition
                  (if g$who$11291$bP4ck
                    (g$make-who-condition$5851$bP4ck g$who$11291$bP4ck)
                    (condition))
                  (g$make-message-condition$5805$bP4ck g$msg$11288$bP4ck)
                  g$condition-object$11290$bP4ck
                  (g$extract-position-condition$8090$bP4ck g$form$11289$bP4ck)
                  (g$extract-trace$8094$bP4ck g$form$11289$bP4ck)))))
           (if ((case-lambda
                  ((g$t$11292$bP4ck)
                   (if g$t$11292$bP4ck
                     g$t$11292$bP4ck
                     (begin '#f (symbol? g$who$11287$bP4ck)))))
                (string? g$who$11287$bP4ck))
             g$who$11287$bP4ck
             (if (not g$who$11287$bP4ck)
               ((case-lambda
                  ((g$t$11293$bP4ck)
                   ((case-lambda
                      ((g$ls/false$11294$bP4ck)
                       (if (if g$ls/false$11294$bP4ck
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11295$bP4ck)
                                    (g$id?$7706$bP4ck g$id$11295$bP4ck)))
                                 g$ls/false$11294$bP4ck))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11296$bP4ck)
                              (g$syntax->datum$8099$bP4ck g$id$11296$bP4ck)))
                           g$ls/false$11294$bP4ck)
                         ((case-lambda
                            ((g$t$11297$bP4ck)
                             ((case-lambda
                                ((g$ls/false$11298$bP4ck)
                                 (if (if g$ls/false$11298$bP4ck
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11299$bP4ck
                                                g$rest$11300$bP4ck)
                                              (g$id?$7706$bP4ck
                                                g$id$11299$bP4ck)))
                                           g$ls/false$11298$bP4ck))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11301$bP4ck g$rest$11302$bP4ck)
                                        (g$syntax->datum$8099$bP4ck
                                          g$id$11301$bP4ck)))
                                     g$ls/false$11298$bP4ck)
                                   ((case-lambda
                                      ((g$t$11303$bP4ck)
                                       ((case-lambda
                                          ((g$ls/false$11304$bP4ck)
                                           (if g$ls/false$11304$bP4ck
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11304$bP4ck)
                                             (g$syntax-violation$8096$bP4ck
                                               '#f
                                               '"invalid syntax"
                                               g$t$11303$bP4ck))))
                                        (g$syntax-dispatch$7984$bP4ck
                                          g$t$11303$bP4ck
                                          '_))))
                                    g$t$11297$bP4ck))))
                              (g$syntax-dispatch$7984$bP4ck
                                g$t$11297$bP4ck
                                '(any . any)))))
                          g$t$11293$bP4ck))))
                    (g$syntax-dispatch$7984$bP4ck g$t$11293$bP4ck 'any))))
                g$form$11289$bP4ck)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11287$bP4ck))))))))
   (g$syntax-violation$8096$bP4ck
     g$syntax-violation$11599$bP4ck
     (case-lambda
       ((g$who$11305$bP4ck g$msg$11306$bP4ck g$form$11307$bP4ck)
        (g$syntax-violation$8096$bP4ck
          g$who$11305$bP4ck
          g$msg$11306$bP4ck
          g$form$11307$bP4ck
          '#f))
       ((g$who$11308$bP4ck
          g$msg$11309$bP4ck
          g$form$11310$bP4ck
          g$subform$11311$bP4ck)
        (g$syntax-violation*$8095$bP4ck
          g$who$11308$bP4ck
          g$msg$11309$bP4ck
          g$form$11310$bP4ck
          (g$make-syntax-violation$5877$bP4ck
            (g$syntax->datum$8099$bP4ck g$form$11310$bP4ck)
            (g$syntax->datum$8099$bP4ck g$subform$11311$bP4ck))))))
   (g$identifier?$8097$bP4ck
     g$identifier?$11600$bP4ck
     (case-lambda ((g$x$11312$bP4ck) (g$id?$7706$bP4ck g$x$11312$bP4ck))))
   (g$datum->syntax$8098$bP4ck
     g$datum->syntax$11601$bP4ck
     (case-lambda
       ((g$id$11313$bP4ck g$datum$11314$bP4ck)
        (if (g$id?$7706$bP4ck g$id$11313$bP4ck)
          (g$datum->stx$7689$bP4ck g$id$11313$bP4ck g$datum$11314$bP4ck)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11313$bP4ck)))))
   (g$syntax->datum$8099$bP4ck
     g$syntax->datum$11602$bP4ck
     (case-lambda
       ((g$x$11315$bP4ck) (g$stx->datum$7717$bP4ck g$x$11315$bP4ck))))
   (g$compile-r6rs-top-level$8100$bP4ck
     g$compile-r6rs-top-level$11603$bP4ck
     (case-lambda
       ((g$x*$11316$bP4ck)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8044$bP4ck g$x*$11316$bP4ck)))
          (case-lambda
            ((g$lib*$11319$bP4ck g$invoke-code$11320$bP4ck)
             ((case-lambda
                ((g$invoke-code$11321$bP4ck g$lib*$11322$bP4ck)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$5064$bP4ck
                        g$invoke-library$7516$bP4ck
                        g$lib*$11322$bP4ck)
                      (eval-core
                        (g$expanded->core$7224$bP4ck
                          g$invoke-code$11321$bP4ck)))))))
              g$invoke-code$11320$bP4ck
              g$lib*$11319$bP4ck)))))))
   (g$pre-compile-r6rs-top-level$8101$bP4ck
     g$pre-compile-r6rs-top-level$11604$bP4ck
     (case-lambda
       ((g$x*$11323$bP4ck)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8044$bP4ck g$x*$11323$bP4ck)))
          (case-lambda
            ((g$lib*$11326$bP4ck g$invoke-code$11327$bP4ck)
             ((case-lambda
                ((g$invoke-code$11328$bP4ck g$lib*$11329$bP4ck)
                 (begin
                   (g$for-each$5064$bP4ck
                     g$invoke-library$7516$bP4ck
                     g$lib*$11329$bP4ck)
                   (compile-core
                     (g$expanded->core$7224$bP4ck g$invoke-code$11328$bP4ck)))))
              g$invoke-code$11327$bP4ck
              g$lib*$11326$bP4ck)))))))
   (g$new-interaction-environment$8102$bP4ck
     g$new-interaction-environment$11605$bP4ck
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$11330$bP4ck g$rib$11331$bP4ck)
            (begin
              ((case-lambda
                 ((g$subst$11332$bP4ck)
                  (begin
                    (g$set-rib-sym*!$7661$bP4ck
                      g$rib$11331$bP4ck
                      (g$map$5063$bP4ck car g$subst$11332$bP4ck))
                    (g$set-rib-mark**!$7662$bP4ck
                      g$rib$11331$bP4ck
                      (g$map$5063$bP4ck
                        (case-lambda ((g$x$11333$bP4ck) g$top-mark*$7643$bP4ck))
                        g$subst$11332$bP4ck))
                    (g$set-rib-label*!$7663$bP4ck
                      g$rib$11331$bP4ck
                      (g$map$5063$bP4ck cdr g$subst$11332$bP4ck)))))
               (g$library-subst$7473$bP4ck g$lib$11330$bP4ck))
              (g$make-interaction-env$8061$bP4ck g$rib$11331$bP4ck '() '()))))
         (g$find-library-by-name$7509$bP4ck '(ironscheme))
         (g$make-empty-rib$7666$bP4ck)))))
   (g$interaction-environment$8103$bP4ck
     g$interaction-environment$11606$bP4ck
     ((case-lambda
        ((g$e$11334$bP4ck)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11335$bP4ck)
                (if g$t$11335$bP4ck
                  g$t$11335$bP4ck
                  (begin
                    '#f
                    (begin
                      (set! g$e$11334$bP4ck
                        (g$new-interaction-environment$8102$bP4ck))
                      g$e$11334$bP4ck)))))
             g$e$11334$bP4ck)))))
      '#f))
   (g$top-level-context$8104$bP4ck
     g$top-level-context$11607$bP4ck
     (g$make-parameter$6978$bP4ck '#f)))
  (g$current-library-expander$7506$bP4ck g$library-expander$8080$bP4ck))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7221$bP4ck
      (case-lambda
        ((g$x$11660$bP4ck)
         ((case-lambda
            ((g$t$11661$bP4ck) (if g$t$11661$bP4ck (cdr g$t$11661$bP4ck) '#f)))
          (g$assq$5051$bP4ck
            g$x$11660$bP4ck
            '((ellipsis-map . g$ellipsis-map$11492$bP4ck)
              (make-list . g$make-list$5046$bP4ck)
              (last-pair . g$last-pair$5045$bP4ck)
              (ironscheme-build . g$ironscheme-build$11653$bP4ck)
              (syntax-error . g$syntax-error$11596$bP4ck)
              (syntax-dispatch . g$syntax-dispatch$11487$bP4ck)
              (compile-system-libraries
                .
                g$compile-system-libraries$11655$bP4ck)
              (compile->closure . g$compile->closure$11657$bP4ck)
              (compile . g$compile$11656$bP4ck)
              (load . g$load$11652$bP4ck)
              (interaction-environment . g$interaction-environment$11606$bP4ck)
              (string-ci>? . g$string-ci>?$6027$bP4ck)
              (string-ci>=? . g$string-ci>=?$6029$bP4ck)
              (string-ci=? . g$string-ci=?$6025$bP4ck)
              (string-ci<? . g$string-ci<?$6026$bP4ck)
              (string-ci<=? . g$string-ci<=?$6028$bP4ck)
              (char-ci>? . g$char-ci>?$6032$bP4ck)
              (char-ci>=? . g$char-ci>=?$6034$bP4ck)
              (char-ci=? . g$char-ci=?$6030$bP4ck)
              (char-ci<? . g$char-ci<?$6031$bP4ck)
              (char-ci<=? . g$char-ci<=?$6033$bP4ck)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11425$bP4ck)
              (variable-transformer? . g$variable-transformer?$11424$bP4ck)
              (make-variable-transformer
                .
                g$make-variable-transformer$11423$bP4ck)
              (identifier? . g$identifier?$11600$bP4ck)
              (generate-temporaries . g$generate-temporaries$11589$bP4ck)
              (free-identifier=? . g$free-identifier=?$11590$bP4ck)
              (syntax->datum . g$syntax->datum$11602$bP4ck)
              (datum->syntax . g$datum->syntax$11601$bP4ck)
              (bound-identifier=? . g$bound-identifier=?$11591$bP4ck)
              (delete-file . g$delete-file$5557$bP4ck)
              (file-exists? . g$file-exists?$5556$bP4ck)
              (list-sort . g$list-sort$5952$bP4ck)
              (make-eqv-hashtable . g$make-eqv-hashtable$5539$bP4ck)
              (make-eq-hashtable . g$make-eq-hashtable$5538$bP4ck)
              (hashtable-update! . g$hashtable-update!$5545$bP4ck)
              (hashtable-size . g$hashtable-size$5540$bP4ck)
              (hashtable-set! . g$hashtable-set!$5542$bP4ck)
              (hashtable-ref . g$hashtable-ref$5541$bP4ck)
              (hashtable-delete! . g$hashtable-delete!$5543$bP4ck)
              (hashtable-contains? . g$hashtable-contains?$5544$bP4ck)
              (hashtable-clear! . g$hashtable-clear!$5546$bP4ck)
              (call-with-output-file . g$call-with-output-file$6388$bP4ck)
              (call-with-input-file . g$call-with-input-file$6387$bP4ck)
              (write-char . g$write-char$6384$bP4ck)
              (with-output-to-file . g$with-output-to-file$6386$bP4ck)
              (with-input-from-file . g$with-input-from-file$6385$bP4ck)
              (read-char . g$read-char$6383$bP4ck)
              (peek-char . g$peek-char$6382$bP4ck)
              (newline . g$newline$6389$bP4ck)
              (port? . g$port?$6337$bP4ck)
              (open-string-output-port . g$open-string-output-port$6336$bP4ck)
              (make-i/o-write-error . g$make-i/o-write-error$6252$bP4ck)
              (make-i/o-read-error . g$make-i/o-read-error$6246$bP4ck)
              (make-i/o-port-error . g$make-i/o-port-error$6298$bP4ck)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6258$bP4ck)
              (make-i/o-filename-error . g$make-i/o-filename-error$6266$bP4ck)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6274$bP4ck)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6280$bP4ck)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6292$bP4ck)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6286$bP4ck)
              (make-i/o-error . g$make-i/o-error$6240$bP4ck)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6312$bP4ck)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6306$bP4ck)
              (i/o-write-error? . g$i/o-write-error?$6253$bP4ck)
              (i/o-read-error? . g$i/o-read-error?$6247$bP4ck)
              (i/o-port-error? . g$i/o-port-error?$6300$bP4ck)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6260$bP4ck)
              (i/o-error-position . g$i/o-error-position$6261$bP4ck)
              (i/o-filename-error? . g$i/o-filename-error?$6268$bP4ck)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6275$bP4ck)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6281$bP4ck)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6293$bP4ck)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6287$bP4ck)
              (i/o-error? . g$i/o-error?$6241$bP4ck)
              (i/o-error-port . g$i/o-error-port$6301$bP4ck)
              (i/o-error-filename . g$i/o-error-filename$6269$bP4ck)
              (i/o-encoding-error? . g$i/o-encoding-error?$6314$bP4ck)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6315$bP4ck)
              (i/o-decoding-error? . g$i/o-decoding-error?$6307$bP4ck)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$6338$bP4ck)
              (call-with-port . g$call-with-port$6339$bP4ck)
              (scheme-report-environment
                .
                g$scheme-report-environment$11579$bP4ck)
              (quotient . g$quotient$5919$bP4ck)
              (null-environment . g$null-environment$11578$bP4ck)
              (remainder . g$remainder$5920$bP4ck)
              (modulo . g$modulo$5921$bP4ck)
              (inexact->exact . g$inexact->exact$5916$bP4ck)
              (force . g$force$5923$bP4ck)
              (exact->inexact . g$exact->inexact$5917$bP4ck)
              (command-line . g$command-line$11649$bP4ck)
              (remove . g$remove$5068$bP4ck)
              (remv . g$remv$5069$bP4ck)
              (remp . g$remp$5049$bP4ck)
              (remq . g$remq$5070$bP4ck)
              (partition . g$partition$5048$bP4ck)
              (memv . g$memv$5056$bP4ck)
              (memq . g$memq$5055$bP4ck)
              (memp . g$memp$5058$bP4ck)
              (member . g$member$5057$bP4ck)
              (exists . g$exists$5062$bP4ck)
              (for-all . g$for-all$5061$bP4ck)
              (fold-right . g$fold-right$5067$bP4ck)
              (fold-left . g$fold-left$5066$bP4ck)
              (find . g$find$5047$bP4ck)
              (filter . g$filter$5050$bP4ck)
              (cons* . g$cons*$5065$bP4ck)
              (assv . g$assv$5052$bP4ck)
              (assq . g$assq$5051$bP4ck)
              (assp . g$assp$5054$bP4ck)
              (assoc . g$assoc$5053$bP4ck)
              (eval . g$eval$11581$bP4ck)
              (environment . g$environment$11577$bP4ck)
              (make-enumeration . g$make-enumeration$6521$bP4ck)
              (enum-set=? . g$enum-set=?$6528$bP4ck)
              (enum-set-universe . g$enum-set-universe$6522$bP4ck)
              (enum-set-union . g$enum-set-union$6529$bP4ck)
              (enum-set-subset? . g$enum-set-subset?$6527$bP4ck)
              (enum-set-projection . g$enum-set-projection$6533$bP4ck)
              (enum-set-member? . g$enum-set-member?$6526$bP4ck)
              (enum-set-intersection . g$enum-set-intersection$6530$bP4ck)
              (enum-set-indexer . g$enum-set-indexer$6523$bP4ck)
              (enum-set-difference . g$enum-set-difference$6531$bP4ck)
              (enum-set-constructor . g$enum-set-constructor$6524$bP4ck)
              (enum-set-complement . g$enum-set-complement$6532$bP4ck)
              (enum-set->list . g$enum-set->list$6525$bP4ck)
              (who-condition? . g$who-condition?$5853$bP4ck)
              (warning? . g$warning?$5814$bP4ck)
              (violation? . g$violation?$5832$bP4ck)
              (undefined-violation? . g$undefined-violation?$5888$bP4ck)
              (syntax-violation? . g$syntax-violation?$5880$bP4ck)
              (syntax-violation-subform . g$syntax-violation-subform$5882$bP4ck)
              (syntax-violation-form . g$syntax-violation-form$5881$bP4ck)
              (syntax-violation . g$syntax-violation$11599$bP4ck)
              (serious-condition? . g$serious-condition?$5820$bP4ck)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5860$bP4ck)
              (message-condition? . g$message-condition?$5807$bP4ck)
              (make-who-condition . g$make-who-condition$5851$bP4ck)
              (make-warning . g$make-warning$5813$bP4ck)
              (make-violation . g$make-violation$5831$bP4ck)
              (make-undefined-violation . g$make-undefined-violation$5887$bP4ck)
              (make-syntax-violation . g$make-syntax-violation$5877$bP4ck)
              (make-serious-condition . g$make-serious-condition$5819$bP4ck)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5859$bP4ck)
              (make-message-condition . g$make-message-condition$5805$bP4ck)
              (make-lexical-violation . g$make-lexical-violation$5871$bP4ck)
              (make-irritants-condition . g$make-irritants-condition$5843$bP4ck)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5865$bP4ck)
              (make-error . g$make-error$5825$bP4ck)
              (make-assertion-violation . g$make-assertion-violation$5837$bP4ck)
              (lexical-violation? . g$lexical-violation?$5872$bP4ck)
              (irritants-condition? . g$irritants-condition?$5845$bP4ck)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5866$bP4ck)
              (error? . g$error?$5826$bP4ck)
              (condition-who . g$condition-who$5854$bP4ck)
              (condition-message . g$condition-message$5808$bP4ck)
              (condition-irritants . g$condition-irritants$5846$bP4ck)
              (assertion-violation? . g$assertion-violation?$5838$bP4ck)
              (native-endianness . g$native-endianness$5670$bP4ck)
              (bytevector-u64-set! . g$bytevector-u64-set!$5691$bP4ck)
              (bytevector-u64-ref . g$bytevector-u64-ref$5687$bP4ck)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5693$bP4ck)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5689$bP4ck)
              (bytevector-u32-set! . g$bytevector-u32-set!$5683$bP4ck)
              (bytevector-u32-ref . g$bytevector-u32-ref$5679$bP4ck)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5685$bP4ck)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5681$bP4ck)
              (bytevector-u16-set! . g$bytevector-u16-set!$5675$bP4ck)
              (bytevector-u16-ref . g$bytevector-u16-ref$5671$bP4ck)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5677$bP4ck)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5673$bP4ck)
              (bytevector-s64-set! . g$bytevector-s64-set!$5692$bP4ck)
              (bytevector-s64-ref . g$bytevector-s64-ref$5688$bP4ck)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5694$bP4ck)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5690$bP4ck)
              (bytevector-s32-set! . g$bytevector-s32-set!$5684$bP4ck)
              (bytevector-s32-ref . g$bytevector-s32-ref$5680$bP4ck)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5686$bP4ck)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5682$bP4ck)
              (bytevector-s16-set! . g$bytevector-s16-set!$5676$bP4ck)
              (bytevector-s16-ref . g$bytevector-s16-ref$5672$bP4ck)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5678$bP4ck)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5674$bP4ck)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5697$bP4ck)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5695$bP4ck)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5698$bP4ck)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5696$bP4ck)
              (no-nans-violation? . g$no-nans-violation?$6155$bP4ck)
              (no-infinities-violation? . g$no-infinities-violation?$6149$bP4ck)
              (make-no-nans-violation . g$make-no-nans-violation$6154$bP4ck)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6148$bP4ck)
              (fxrotate-bit-field . g$fxrotate-bit-field$6131$bP4ck)
              (fxif . g$fxif$6125$bP4ck)
              (fxcopy-bit-field . g$fxcopy-bit-field$6128$bP4ck)
              (fxcopy-bit . g$fxcopy-bit$6126$bP4ck)
              (fxbit-field . g$fxbit-field$6127$bP4ck)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6130$bP4ck)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6129$bP4ck)
              (fx-/carry . g$fx-/carry$6123$bP4ck)
              (fx+/carry . g$fx+/carry$6124$bP4ck)
              (fx*/carry . g$fx*/carry$6122$bP4ck)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6072$bP4ck)
              (bitwise-if . g$bitwise-if$6066$bP4ck)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6069$bP4ck)
              (bitwise-copy-bit . g$bitwise-copy-bit$6067$bP4ck)
              (bitwise-bit-field . g$bitwise-bit-field$6068$bP4ck)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6071$bP4ck)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6070$bP4ck)
              (zero? . g$zero?$5293$bP4ck)
              (symbol=? . g$symbol=?$5305$bP4ck)
              (string>? . g$string>?$5302$bP4ck)
              (string>=? . g$string>=?$5304$bP4ck)
              (string=? . g$string=?$5300$bP4ck)
              (string<? . g$string<?$5301$bP4ck)
              (string<=? . g$string<=?$5303$bP4ck)
              (rationalize . g$rationalize$5312$bP4ck)
              (positive? . g$positive?$5291$bP4ck)
              (odd? . g$odd?$5295$bP4ck)
              (negative? . g$negative?$5292$bP4ck)
              (min . g$min$5297$bP4ck)
              (max . g$max$5296$bP4ck)
              (map . g$map$5063$bP4ck)
              (list-tail . g$list-tail$5043$bP4ck)
              (list-ref . g$list-ref$5044$bP4ck)
              (lcm . g$lcm$5299$bP4ck)
              (gcd . g$gcd$5298$bP4ck)
              (for-each . g$for-each$5064$bP4ck)
              (even? . g$even?$5294$bP4ck)
              (char>? . g$char>?$5309$bP4ck)
              (char>=? . g$char>=?$5311$bP4ck)
              (char=? . g$char=?$5307$bP4ck)
              (char<? . g$char<?$5308$bP4ck)
              (char<=? . g$char<=?$5310$bP4ck)
              (cddddr . g$cddddr$5290$bP4ck)
              (cdddar . g$cdddar$5289$bP4ck)
              (cddadr . g$cddadr$5288$bP4ck)
              (cddaar . g$cddaar$5287$bP4ck)
              (cdaddr . g$cdaddr$5286$bP4ck)
              (cdadar . g$cdadar$5285$bP4ck)
              (cdaadr . g$cdaadr$5284$bP4ck)
              (cdaaar . g$cdaaar$5283$bP4ck)
              (cadddr . g$cadddr$5282$bP4ck)
              (caddar . g$caddar$5281$bP4ck)
              (cadadr . g$cadadr$5280$bP4ck)
              (cadaar . g$cadaar$5279$bP4ck)
              (caaddr . g$caaddr$5278$bP4ck)
              (caadar . g$caadar$5277$bP4ck)
              (caaadr . g$caaadr$5276$bP4ck)
              (caaaar . g$caaaar$5275$bP4ck)
              (cdddr . g$cdddr$5274$bP4ck)
              (cddar . g$cddar$5273$bP4ck)
              (cdadr . g$cdadr$5272$bP4ck)
              (cdaar . g$cdaar$5271$bP4ck)
              (caddr . g$caddr$5270$bP4ck)
              (cadar . g$cadar$5269$bP4ck)
              (caadr . g$caadr$5268$bP4ck)
              (caaar . g$caaar$5267$bP4ck)
              (cddr . g$cddr$5266$bP4ck)
              (cdar . g$cdar$5265$bP4ck)
              (cadr . g$cadr$5264$bP4ck)
              (caar . g$caar$5263$bP4ck)
              (boolean=? . g$boolean=?$5306$bP4ck)
              (enum-set? . g$enum?$6502$bP4ck)
              (make-promise . g$make-promise$5922$bP4ck)
              (load/args . g$load/args$11651$bP4ck)
              (printf . g$printf$6557$bP4ck)
              (fprintf . g$fprintf$6558$bP4ck)
              (format . g$format$6559$bP4ck)
              (trace-printer . g$trace-printer$11648$bP4ck)
              (make-traced-macro . g$make-traced-macro$6563$bP4ck)
              (assertion-error . g$assertion-error$11595$bP4ck)
              (make-parameter . g$make-parameter$6978$bP4ck)
              (environment-bindings . g$environment-bindings$11573$bP4ck)
              (environment-symbols . g$environment-symbols$11576$bP4ck)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11572$bP4ck)
              (library-path . g$library-path$7498$bP4ck)
              (expand->core . g$expand->core$11582$bP4ck)
              (expand . g$expand$11580$bP4ck)
              (convert->cps . g$convert->cps$6878$bP4ck)
              (parse->cps . g$parse->cps$6877$bP4ck)))))))
    (g$install-library$7514$bP4ck
      'g$12772$bP4ck
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12709$bP4ck)
        (cosh . g$12708$bP4ck)
        (sinh . g$12707$bP4ck)
        (make-guid . g$12706$bP4ck)
        (unspecified? . g$12705$bP4ck)
        (make-list . g$5855$bP4ck)
        (last-pair . g$5854$bP4ck)
        (load-r5rs . g$12704$bP4ck)
        (license . g$12703$bP4ck)
        (stacktrace . g$12702$bP4ck)
        (ironscheme-build . g$12149$bP4ck)
        (set-symbol-value! . g$12689$bP4ck)
        (symbol-value . g$12688$bP4ck)
        (ungensym . g$12687$bP4ck)
        (gensym . g$12686$bP4ck)
        (void . g$12685$bP4ck)
        (compile-system-libraries . g$12151$bP4ck)
        (compile->closure . g$12153$bP4ck)
        (compile . g$12152$bP4ck)
        (load . g$12148$bP4ck)
        (interaction-environment . g$9168$bP4ck)
        (string-upcase . g$12681$bP4ck)
        (string-titlecase . g$12680$bP4ck)
        (string-normalize-nfkd . g$12679$bP4ck)
        (string-normalize-nfkc . g$12678$bP4ck)
        (string-normalize-nfd . g$12677$bP4ck)
        (string-normalize-nfc . g$12676$bP4ck)
        (string-foldcase . g$12675$bP4ck)
        (string-downcase . g$12674$bP4ck)
        (string-ci>? . g$6994$bP4ck)
        (string-ci>=? . g$6996$bP4ck)
        (string-ci=? . g$6992$bP4ck)
        (string-ci<? . g$6993$bP4ck)
        (string-ci<=? . g$6995$bP4ck)
        (char-whitespace? . g$12673$bP4ck)
        (char-upper-case? . g$12672$bP4ck)
        (char-title-case? . g$12671$bP4ck)
        (char-numeric? . g$12670$bP4ck)
        (char-lower-case? . g$12669$bP4ck)
        (char-general-category . g$12668$bP4ck)
        (char-upcase . g$12667$bP4ck)
        (char-titlecase . g$12666$bP4ck)
        (char-foldcase . g$12665$bP4ck)
        (char-downcase . g$12664$bP4ck)
        (char-ci>? . g$7033$bP4ck)
        (char-ci>=? . g$7035$bP4ck)
        (char-ci=? . g$7031$bP4ck)
        (char-ci<? . g$7032$bP4ck)
        (char-ci<=? . g$7034$bP4ck)
        (char-alphabetic? . g$12663$bP4ck)
        (make-variable-transformer . g$8763$bP4ck)
        (identifier? . g$9162$bP4ck)
        (generate-temporaries . g$9151$bP4ck)
        (free-identifier=? . g$9152$bP4ck)
        (syntax->datum . g$9164$bP4ck)
        (datum->syntax . g$9163$bP4ck)
        (bound-identifier=? . g$9153$bP4ck)
        (record-type-descriptor? . g$12662$bP4ck)
        (record-predicate . g$12661$bP4ck)
        (record-mutator . g$12660$bP4ck)
        (record-constructor . g$12659$bP4ck)
        (record-accessor . g$12658$bP4ck)
        (make-record-type-descriptor . g$12657$bP4ck)
        (make-record-constructor-descriptor . g$12656$bP4ck)
        (record? . g$12655$bP4ck)
        (record-type-uid . g$12654$bP4ck)
        (record-type-sealed? . g$12653$bP4ck)
        (record-type-parent . g$12652$bP4ck)
        (record-type-opaque? . g$12651$bP4ck)
        (record-type-name . g$12650$bP4ck)
        (record-type-generative? . g$12649$bP4ck)
        (record-type-field-names . g$12648$bP4ck)
        (record-rtd . g$12647$bP4ck)
        (record-field-mutable? . g$12646$bP4ck)
        (delete-file . g$6568$bP4ck)
        (file-exists? . g$6567$bP4ck)
        (vector-sort! . g$12645$bP4ck)
        (vector-sort . g$12644$bP4ck)
        (list-sort . g$6934$bP4ck)
        (symbol-hash . g$12643$bP4ck)
        (string-ci-hash . g$12642$bP4ck)
        (string-hash . g$12641$bP4ck)
        (equal-hash . g$12640$bP4ck)
        (hashtable-equivalence-function . g$12639$bP4ck)
        (make-hashtable . g$12638$bP4ck)
        (hashtable-hash-function . g$12637$bP4ck)
        (make-eqv-hashtable . g$6536$bP4ck)
        (make-eq-hashtable . g$6535$bP4ck)
        (hashtable? . g$12636$bP4ck)
        (hashtable-update! . g$6542$bP4ck)
        (hashtable-size . g$6537$bP4ck)
        (hashtable-set! . g$6539$bP4ck)
        (hashtable-ref . g$6538$bP4ck)
        (hashtable-mutable? . g$12635$bP4ck)
        (hashtable-keys . g$12634$bP4ck)
        (hashtable-entries . g$12633$bP4ck)
        (hashtable-delete! . g$6540$bP4ck)
        (hashtable-copy . g$12632$bP4ck)
        (hashtable-contains? . g$6541$bP4ck)
        (hashtable-clear! . g$6543$bP4ck)
        (call-with-output-file . g$7419$bP4ck)
        (call-with-input-file . g$7418$bP4ck)
        (write-char . g$7400$bP4ck)
        (write . g$12631$bP4ck)
        (with-output-to-file . g$7417$bP4ck)
        (with-input-from-file . g$7416$bP4ck)
        (read-char . g$7399$bP4ck)
        (read . g$12630$bP4ck)
        (peek-char . g$7398$bP4ck)
        (open-output-file . g$12629$bP4ck)
        (open-input-file . g$12628$bP4ck)
        (newline . g$7420$bP4ck)
        (display . g$12627$bP4ck)
        (close-output-port . g$12626$bP4ck)
        (close-input-port . g$12625$bP4ck)
        (eof-object? . g$12624$bP4ck)
        (eof-object . g$12623$bP4ck)
        (current-error-port . g$12622$bP4ck)
        (current-output-port . g$12621$bP4ck)
        (current-input-port . g$12620$bP4ck)
        (output-port? . g$12619$bP4ck)
        (input-port? . g$12618$bP4ck)
        (utf-8-codec . g$12617$bP4ck)
        (utf-16-codec . g$12616$bP4ck)
        (transcoder-error-handling-mode . g$12615$bP4ck)
        (transcoder-eol-style . g$12614$bP4ck)
        (transcoder-codec . g$12613$bP4ck)
        (transcoded-port . g$12612$bP4ck)
        (textual-port? . g$12611$bP4ck)
        (string->bytevector . g$12610$bP4ck)
        (standard-output-port . g$12609$bP4ck)
        (standard-input-port . g$12608$bP4ck)
        (standard-error-port . g$12607$bP4ck)
        (set-port-position! . g$12606$bP4ck)
        (put-u8 . g$12605$bP4ck)
        (put-string . g$12604$bP4ck)
        (put-datum . g$12603$bP4ck)
        (put-char . g$12602$bP4ck)
        (put-bytevector . g$12601$bP4ck)
        (port? . g$7385$bP4ck)
        (port-transcoder . g$12600$bP4ck)
        (port-position . g$12599$bP4ck)
        (port-has-set-port-position!? . g$12598$bP4ck)
        (port-has-port-position? . g$12597$bP4ck)
        (port-eof? . g$12596$bP4ck)
        (output-port-buffer-mode . g$12595$bP4ck)
        (open-string-output-port . g$7384$bP4ck)
        (open-string-input-port . g$12594$bP4ck)
        (open-file-output-port . g$12593$bP4ck)
        (open-file-input/output-port . g$12592$bP4ck)
        (open-file-input-port . g$12591$bP4ck)
        (open-bytevector-output-port . g$12590$bP4ck)
        (open-bytevector-input-port . g$12589$bP4ck)
        (native-transcoder . g$12588$bP4ck)
        (native-eol-style . g$12587$bP4ck)
        (make-transcoder . g$12586$bP4ck)
        (latin-1-codec . g$12585$bP4ck)
        (make-i/o-write-error . g$7240$bP4ck)
        (make-i/o-read-error . g$7226$bP4ck)
        (make-i/o-port-error . g$7345$bP4ck)
        (make-i/o-invalid-position-error . g$7255$bP4ck)
        (make-i/o-filename-error . g$7272$bP4ck)
        (make-i/o-file-protection-error . g$7288$bP4ck)
        (make-i/o-file-is-read-only-error . g$7302$bP4ck)
        (make-i/o-file-does-not-exist-error . g$7330$bP4ck)
        (make-i/o-file-already-exists-error . g$7316$bP4ck)
        (make-i/o-error . g$7212$bP4ck)
        (make-i/o-encoding-error . g$7376$bP4ck)
        (make-i/o-decoding-error . g$7361$bP4ck)
        (make-custom-textual-output-port . g$12584$bP4ck)
        (make-custom-textual-input/output-port . g$12583$bP4ck)
        (make-custom-textual-input-port . g$12582$bP4ck)
        (make-custom-binary-output-port . g$12581$bP4ck)
        (make-custom-binary-input/output-port . g$12580$bP4ck)
        (make-custom-binary-input-port . g$12579$bP4ck)
        (make-bytevector . g$12578$bP4ck)
        (lookahead-u8 . g$12577$bP4ck)
        (lookahead-char . g$12576$bP4ck)
        (i/o-write-error? . g$7241$bP4ck)
        (i/o-read-error? . g$7227$bP4ck)
        (i/o-port-error? . g$7347$bP4ck)
        (i/o-invalid-position-error? . g$7257$bP4ck)
        (i/o-error-position . g$7258$bP4ck)
        (i/o-filename-error? . g$7274$bP4ck)
        (i/o-file-protection-error? . g$7289$bP4ck)
        (i/o-file-is-read-only-error? . g$7303$bP4ck)
        (i/o-file-does-not-exist-error? . g$7331$bP4ck)
        (i/o-file-already-exists-error? . g$7317$bP4ck)
        (i/o-error? . g$7213$bP4ck)
        (i/o-error-port . g$7348$bP4ck)
        (i/o-error-filename . g$7275$bP4ck)
        (i/o-encoding-error? . g$7378$bP4ck)
        (i/o-encoding-error-char . g$7379$bP4ck)
        (i/o-decoding-error? . g$7362$bP4ck)
        (get-u8 . g$12575$bP4ck)
        (get-string-n! . g$12574$bP4ck)
        (get-string-n . g$12573$bP4ck)
        (get-string-all . g$12572$bP4ck)
        (get-line . g$12571$bP4ck)
        (get-datum . g$12570$bP4ck)
        (get-char . g$12569$bP4ck)
        (get-bytevector-some . g$12568$bP4ck)
        (get-bytevector-n! . g$12567$bP4ck)
        (get-bytevector-n . g$12566$bP4ck)
        (get-bytevector-all . g$12565$bP4ck)
        (flush-output-port . g$12564$bP4ck)
        (close-port . g$12563$bP4ck)
        (call-with-string-output-port . g$7386$bP4ck)
        (call-with-port . g$7387$bP4ck)
        (call-with-bytevector-output-port . g$12562$bP4ck)
        (bytevector->string . g$12561$bP4ck)
        (buffer-mode? . g$12560$bP4ck)
        (binary-port? . g$12559$bP4ck)
        (scheme-report-environment . g$9141$bP4ck)
        (quotient . g$6913$bP4ck)
        (null-environment . g$9140$bP4ck)
        (remainder . g$6914$bP4ck)
        (modulo . g$6915$bP4ck)
        (inexact->exact . g$6910$bP4ck)
        (force . g$6917$bP4ck)
        (exact->inexact . g$6911$bP4ck)
        (exit . g$12558$bP4ck)
        (command-line . g$12145$bP4ck)
        (string-fill! . g$12557$bP4ck)
        (string-set! . g$12556$bP4ck)
        (set-cdr! . g$12555$bP4ck)
        (set-car! . g$12554$bP4ck)
        (remove . g$5877$bP4ck)
        (remv . g$5878$bP4ck)
        (remp . g$5858$bP4ck)
        (remq . g$5879$bP4ck)
        (partition . g$5857$bP4ck)
        (memv . g$5865$bP4ck)
        (memq . g$5864$bP4ck)
        (memp . g$5867$bP4ck)
        (member . g$5866$bP4ck)
        (exists . g$5871$bP4ck)
        (for-all . g$5870$bP4ck)
        (fold-right . g$5876$bP4ck)
        (fold-left . g$5875$bP4ck)
        (find . g$5856$bP4ck)
        (filter . g$5859$bP4ck)
        (cons* . g$5874$bP4ck)
        (assv . g$5861$bP4ck)
        (assq . g$5860$bP4ck)
        (assp . g$5863$bP4ck)
        (assoc . g$5862$bP4ck)
        (with-exception-handler . g$12553$bP4ck)
        (raise-continuable . g$12552$bP4ck)
        (raise . g$12551$bP4ck)
        (eval . g$9143$bP4ck)
        (environment . g$9139$bP4ck)
        (make-enumeration . g$7484$bP4ck)
        (enum-set=? . g$7491$bP4ck)
        (enum-set-universe . g$7485$bP4ck)
        (enum-set-union . g$7492$bP4ck)
        (enum-set-subset? . g$7490$bP4ck)
        (enum-set-projection . g$7496$bP4ck)
        (enum-set-member? . g$7489$bP4ck)
        (enum-set-intersection . g$7493$bP4ck)
        (enum-set-indexer . g$7486$bP4ck)
        (enum-set-difference . g$7494$bP4ck)
        (enum-set-constructor . g$7487$bP4ck)
        (enum-set-complement . g$7495$bP4ck)
        (enum-set->list . g$7488$bP4ck)
        (who-condition? . g$6822$bP4ck)
        (warning? . g$6733$bP4ck)
        (violation? . g$6775$bP4ck)
        (undefined-violation? . g$6899$bP4ck)
        (syntax-violation? . g$6883$bP4ck)
        (syntax-violation-subform . g$6885$bP4ck)
        (syntax-violation-form . g$6884$bP4ck)
        (syntax-violation . g$9161$bP4ck)
        (simple-conditions . g$12550$bP4ck)
        (serious-condition? . g$6747$bP4ck)
        (non-continuable-violation? . g$6837$bP4ck)
        (message-condition? . g$6718$bP4ck)
        (make-who-condition . g$6820$bP4ck)
        (make-warning . g$6732$bP4ck)
        (make-violation . g$6774$bP4ck)
        (make-undefined-violation . g$6898$bP4ck)
        (make-syntax-violation . g$6880$bP4ck)
        (make-serious-condition . g$6746$bP4ck)
        (make-non-continuable-violation . g$6836$bP4ck)
        (make-message-condition . g$6716$bP4ck)
        (make-lexical-violation . g$6864$bP4ck)
        (make-irritants-condition . g$6803$bP4ck)
        (make-implementation-restriction-violation . g$6850$bP4ck)
        (make-error . g$6760$bP4ck)
        (make-assertion-violation . g$6788$bP4ck)
        (lexical-violation? . g$6865$bP4ck)
        (irritants-condition? . g$6805$bP4ck)
        (implementation-restriction-violation? . g$6851$bP4ck)
        (error? . g$6761$bP4ck)
        (condition-who . g$6823$bP4ck)
        (condition-predicate . g$12549$bP4ck)
        (condition-message . g$6719$bP4ck)
        (condition-irritants . g$6806$bP4ck)
        (condition-accessor . g$12548$bP4ck)
        (condition . g$12547$bP4ck)
        (assertion-violation? . g$6789$bP4ck)
        (condition? . g$12546$bP4ck)
        (utf32->string . g$12545$bP4ck)
        (utf16->string . g$12544$bP4ck)
        (utf8->string . g$12543$bP4ck)
        (uint-list->bytevector . g$12542$bP4ck)
        (u8-list->bytevector . g$12541$bP4ck)
        (string->utf8 . g$12540$bP4ck)
        (string->utf32 . g$12539$bP4ck)
        (string->utf16 . g$12538$bP4ck)
        (sint-list->bytevector . g$12537$bP4ck)
        (native-endianness . g$6574$bP4ck)
        (bytevector? . g$12536$bP4ck)
        (bytevector=? . g$12535$bP4ck)
        (bytevector-uint-set! . g$12534$bP4ck)
        (bytevector-uint-ref . g$12533$bP4ck)
        (bytevector-u8-set! . g$12532$bP4ck)
        (bytevector-u8-ref . g$12531$bP4ck)
        (bytevector-u64-set! . g$6595$bP4ck)
        (bytevector-u64-ref . g$6591$bP4ck)
        (bytevector-u64-native-set! . g$6597$bP4ck)
        (bytevector-u64-native-ref . g$6593$bP4ck)
        (bytevector-u32-set! . g$6587$bP4ck)
        (bytevector-u32-ref . g$6583$bP4ck)
        (bytevector-u32-native-set! . g$6589$bP4ck)
        (bytevector-u32-native-ref . g$6585$bP4ck)
        (bytevector-u16-set! . g$6579$bP4ck)
        (bytevector-u16-ref . g$6575$bP4ck)
        (bytevector-u16-native-set! . g$6581$bP4ck)
        (bytevector-u16-native-ref . g$6577$bP4ck)
        (bytevector-sint-set! . g$12530$bP4ck)
        (bytevector-sint-ref . g$12529$bP4ck)
        (bytevector-s8-set! . g$12528$bP4ck)
        (bytevector-s8-ref . g$12527$bP4ck)
        (bytevector-s64-set! . g$6596$bP4ck)
        (bytevector-s64-ref . g$6592$bP4ck)
        (bytevector-s64-native-set! . g$6598$bP4ck)
        (bytevector-s64-native-ref . g$6594$bP4ck)
        (bytevector-s32-set! . g$6588$bP4ck)
        (bytevector-s32-ref . g$6584$bP4ck)
        (bytevector-s32-native-set! . g$6590$bP4ck)
        (bytevector-s32-native-ref . g$6586$bP4ck)
        (bytevector-s16-set! . g$6580$bP4ck)
        (bytevector-s16-ref . g$6576$bP4ck)
        (bytevector-s16-native-set! . g$6582$bP4ck)
        (bytevector-s16-native-ref . g$6578$bP4ck)
        (bytevector-length . g$12526$bP4ck)
        (bytevector-ieee-single-set! . g$12525$bP4ck)
        (bytevector-ieee-single-ref . g$12524$bP4ck)
        (bytevector-ieee-single-native-set! . g$6601$bP4ck)
        (bytevector-ieee-single-native-ref . g$6599$bP4ck)
        (bytevector-ieee-double-set! . g$12523$bP4ck)
        (bytevector-ieee-double-ref . g$12522$bP4ck)
        (bytevector-ieee-double-native-set! . g$6602$bP4ck)
        (bytevector-ieee-double-native-ref . g$6600$bP4ck)
        (bytevector-fill! . g$12521$bP4ck)
        (bytevector-copy! . g$12520$bP4ck)
        (bytevector-copy . g$12519$bP4ck)
        (bytevector->uint-list . g$12518$bP4ck)
        (bytevector->u8-list . g$12517$bP4ck)
        (bytevector->sint-list . g$12516$bP4ck)
        (no-nans-violation? . g$7198$bP4ck)
        (no-infinities-violation? . g$7184$bP4ck)
        (make-no-nans-violation . g$7197$bP4ck)
        (make-no-infinities-violation . g$7183$bP4ck)
        (real->flonum . g$12515$bP4ck)
        (flzero? . g$12514$bP4ck)
        (fltruncate . g$12513$bP4ck)
        (fltan . g$12512$bP4ck)
        (flsqrt . g$12511$bP4ck)
        (flsin . g$12510$bP4ck)
        (flround . g$12509$bP4ck)
        (flpositive? . g$12508$bP4ck)
        (flonum? . g$12507$bP4ck)
        (flodd? . g$12506$bP4ck)
        (flnumerator . g$12505$bP4ck)
        (flnegative? . g$12504$bP4ck)
        (flnan? . g$12503$bP4ck)
        (flmod0 . g$12502$bP4ck)
        (flmod . g$12501$bP4ck)
        (flmin . g$12500$bP4ck)
        (flmax . g$12499$bP4ck)
        (fllog . g$12498$bP4ck)
        (flinteger? . g$12497$bP4ck)
        (flinfinite? . g$12496$bP4ck)
        (flfloor . g$12495$bP4ck)
        (flfinite? . g$12494$bP4ck)
        (flexpt . g$12493$bP4ck)
        (flexp . g$12492$bP4ck)
        (fleven? . g$12491$bP4ck)
        (fldiv0-and-mod0 . g$12490$bP4ck)
        (fldiv0 . g$12489$bP4ck)
        (fldiv-and-mod . g$12488$bP4ck)
        (fldiv . g$12487$bP4ck)
        (fldenominator . g$12486$bP4ck)
        (flcos . g$12485$bP4ck)
        (flceiling . g$12484$bP4ck)
        (flatan . g$12483$bP4ck)
        (flasin . g$12482$bP4ck)
        (flacos . g$12481$bP4ck)
        (flabs . g$12480$bP4ck)
        (fl>? . g$12479$bP4ck)
        (fl>=? . g$12478$bP4ck)
        (fl=? . g$12477$bP4ck)
        (fl<? . g$12476$bP4ck)
        (fl<=? . g$12475$bP4ck)
        (fl/ . g$12474$bP4ck)
        (fl- . g$12473$bP4ck)
        (fl+ . g$12472$bP4ck)
        (fl* . g$12471$bP4ck)
        (fixnum->flonum . g$12470$bP4ck)
        (fxzero? . g$12469$bP4ck)
        (fxxor . g$12468$bP4ck)
        (fxrotate-bit-field . g$7130$bP4ck)
        (fxreverse-bit-field . g$12467$bP4ck)
        (fxpositive? . g$12466$bP4ck)
        (fxodd? . g$12465$bP4ck)
        (fxnot . g$12464$bP4ck)
        (fxnegative? . g$12463$bP4ck)
        (fxmod0 . g$12462$bP4ck)
        (fxmod . g$12461$bP4ck)
        (fxmin . g$12460$bP4ck)
        (fxmax . g$12459$bP4ck)
        (fxlength . g$12458$bP4ck)
        (fxior . g$12457$bP4ck)
        (fxif . g$7124$bP4ck)
        (fxfirst-bit-set . g$12456$bP4ck)
        (fxeven? . g$12455$bP4ck)
        (fxdiv0-and-mod0 . g$12454$bP4ck)
        (fxdiv0 . g$12453$bP4ck)
        (fxdiv-and-mod . g$12452$bP4ck)
        (fxdiv . g$12451$bP4ck)
        (fxcopy-bit-field . g$7127$bP4ck)
        (fxcopy-bit . g$7125$bP4ck)
        (fxbit-set? . g$12450$bP4ck)
        (fxbit-field . g$7126$bP4ck)
        (fxbit-count . g$12449$bP4ck)
        (fxarithmetic-shift-right . g$7129$bP4ck)
        (fxarithmetic-shift-left . g$7128$bP4ck)
        (fxarithmetic-shift . g$12448$bP4ck)
        (fxand . g$12447$bP4ck)
        (fx>? . g$12446$bP4ck)
        (fx>=? . g$12445$bP4ck)
        (fx=? . g$12444$bP4ck)
        (fx<? . g$12443$bP4ck)
        (fx<=? . g$12442$bP4ck)
        (fx-/carry . g$7122$bP4ck)
        (fx- . g$12441$bP4ck)
        (fx+/carry . g$7123$bP4ck)
        (fx+ . g$12440$bP4ck)
        (fx*/carry . g$7121$bP4ck)
        (fx* . g$12439$bP4ck)
        (greatest-fixnum . g$12438$bP4ck)
        (least-fixnum . g$12437$bP4ck)
        (fixnum-width . g$12436$bP4ck)
        (fixnum? . g$12435$bP4ck)
        (bitwise-rotate-bit-field . g$7095$bP4ck)
        (bitwise-reverse-bit-field . g$12434$bP4ck)
        (bitwise-length . g$12433$bP4ck)
        (bitwise-if . g$7089$bP4ck)
        (bitwise-first-bit-set . g$12432$bP4ck)
        (bitwise-copy-bit-field . g$7092$bP4ck)
        (bitwise-copy-bit . g$7090$bP4ck)
        (bitwise-bit-set? . g$12431$bP4ck)
        (bitwise-bit-field . g$7091$bP4ck)
        (bitwise-bit-count . g$12430$bP4ck)
        (bitwise-xor . g$12429$bP4ck)
        (bitwise-ior . g$12428$bP4ck)
        (bitwise-and . g$12427$bP4ck)
        (bitwise-not . g$12426$bP4ck)
        (bitwise-arithmetic-shift-right . g$7094$bP4ck)
        (bitwise-arithmetic-shift-left . g$7093$bP4ck)
        (bitwise-arithmetic-shift . g$12425$bP4ck)
        (zero? . g$6020$bP4ck)
        (vector? . g$12424$bP4ck)
        (vector-set! . g$12423$bP4ck)
        (vector-ref . g$12422$bP4ck)
        (vector-map . g$12421$bP4ck)
        (vector-length . g$12420$bP4ck)
        (vector-for-each . g$12419$bP4ck)
        (vector-fill! . g$12418$bP4ck)
        (vector->list . g$12417$bP4ck)
        (vector . g$12416$bP4ck)
        (values . g$12415$bP4ck)
        (truncate . g$12414$bP4ck)
        (tan . g$12413$bP4ck)
        (symbol? . g$12412$bP4ck)
        (symbol=? . g$6066$bP4ck)
        (symbol->string . g$12411$bP4ck)
        (substring . g$12410$bP4ck)
        (string? . g$12409$bP4ck)
        (string>? . g$6063$bP4ck)
        (string>=? . g$6065$bP4ck)
        (string=? . g$6061$bP4ck)
        (string<? . g$6062$bP4ck)
        (string<=? . g$6064$bP4ck)
        (string-ref . g$12408$bP4ck)
        (string-length . g$12407$bP4ck)
        (string-for-each . g$12406$bP4ck)
        (string-copy . g$12405$bP4ck)
        (string-append . g$12404$bP4ck)
        (string->symbol . g$12403$bP4ck)
        (string->number . g$12402$bP4ck)
        (string->list . g$12401$bP4ck)
        (string . g$12400$bP4ck)
        (sqrt . g$12399$bP4ck)
        (sin . g$12398$bP4ck)
        (round . g$12397$bP4ck)
        (reverse . g$12396$bP4ck)
        (real? . g$12395$bP4ck)
        (real-valued? . g$12394$bP4ck)
        (real-part . g$12393$bP4ck)
        (rationalize . g$6107$bP4ck)
        (rational? . g$12392$bP4ck)
        (rational-valued? . g$12391$bP4ck)
        (procedure? . g$12390$bP4ck)
        (positive? . g$6018$bP4ck)
        (pair? . g$12389$bP4ck)
        (odd? . g$6022$bP4ck)
        (numerator . g$12388$bP4ck)
        (number? . g$12387$bP4ck)
        (number->string . g$12386$bP4ck)
        (null? . g$12385$bP4ck)
        (not . g$12384$bP4ck)
        (negative? . g$6019$bP4ck)
        (nan? . g$12383$bP4ck)
        (min . g$6024$bP4ck)
        (max . g$6023$bP4ck)
        (map . g$5872$bP4ck)
        (make-vector . g$12382$bP4ck)
        (make-string . g$12381$bP4ck)
        (make-rectangular . g$12380$bP4ck)
        (make-polar . g$12379$bP4ck)
        (magnitude . g$12378$bP4ck)
        (log . g$12377$bP4ck)
        (list? . g$12376$bP4ck)
        (list-tail . g$5852$bP4ck)
        (list-ref . g$5853$bP4ck)
        (list->vector . g$12375$bP4ck)
        (list->string . g$12374$bP4ck)
        (list . g$12373$bP4ck)
        (length . g$12372$bP4ck)
        (lcm . g$6026$bP4ck)
        (integer? . g$12371$bP4ck)
        (integer-valued? . g$12370$bP4ck)
        (integer->char . g$12369$bP4ck)
        (infinite? . g$12368$bP4ck)
        (inexact? . g$12367$bP4ck)
        (inexact . g$12366$bP4ck)
        (imag-part . g$12365$bP4ck)
        (gcd . g$6025$bP4ck)
        (for-each . g$5873$bP4ck)
        (floor . g$12364$bP4ck)
        (finite? . g$12363$bP4ck)
        (expt . g$12362$bP4ck)
        (exp . g$12361$bP4ck)
        (exact? . g$12360$bP4ck)
        (exact-integer-sqrt . g$12359$bP4ck)
        (exact . g$12358$bP4ck)
        (even? . g$6021$bP4ck)
        (error . g$12357$bP4ck)
        (eqv? . g$12356$bP4ck)
        (equal? . g$12355$bP4ck)
        (eq? . g$12354$bP4ck)
        (dynamic-wind . g$12353$bP4ck)
        (div0-and-mod0 . g$12352$bP4ck)
        (mod0 . g$12351$bP4ck)
        (div0 . g$12350$bP4ck)
        (div-and-mod . g$12349$bP4ck)
        (mod . g$12348$bP4ck)
        (div . g$12347$bP4ck)
        (denominator . g$12346$bP4ck)
        (cos . g$12345$bP4ck)
        (cons . g$12344$bP4ck)
        (complex? . g$12343$bP4ck)
        (char? . g$12342$bP4ck)
        (char>? . g$6104$bP4ck)
        (char>=? . g$6106$bP4ck)
        (char=? . g$6102$bP4ck)
        (char<? . g$6103$bP4ck)
        (char<=? . g$6105$bP4ck)
        (char->integer . g$12341$bP4ck)
        (ceiling . g$12340$bP4ck)
        (call-with-values . g$12339$bP4ck)
        (call/cc . g$12338$bP4ck)
        (call-with-current-continuation . g$12337$bP4ck)
        (cddddr . g$6017$bP4ck)
        (cdddar . g$6016$bP4ck)
        (cddadr . g$6015$bP4ck)
        (cddaar . g$6014$bP4ck)
        (cdaddr . g$6013$bP4ck)
        (cdadar . g$6012$bP4ck)
        (cdaadr . g$6011$bP4ck)
        (cdaaar . g$6010$bP4ck)
        (cadddr . g$6009$bP4ck)
        (caddar . g$6008$bP4ck)
        (cadadr . g$6007$bP4ck)
        (cadaar . g$6006$bP4ck)
        (caaddr . g$6005$bP4ck)
        (caadar . g$6004$bP4ck)
        (caaadr . g$6003$bP4ck)
        (caaaar . g$6002$bP4ck)
        (cdddr . g$6001$bP4ck)
        (cddar . g$6000$bP4ck)
        (cdadr . g$5999$bP4ck)
        (cdaar . g$5998$bP4ck)
        (caddr . g$5997$bP4ck)
        (cadar . g$5996$bP4ck)
        (caadr . g$5995$bP4ck)
        (caaar . g$5994$bP4ck)
        (cddr . g$5993$bP4ck)
        (cdar . g$5992$bP4ck)
        (cadr . g$5991$bP4ck)
        (caar . g$5990$bP4ck)
        (cdr . g$12336$bP4ck)
        (car . g$12335$bP4ck)
        (boolean? . g$12334$bP4ck)
        (boolean=? . g$6067$bP4ck)
        (atan . g$12333$bP4ck)
        (assertion-violation . g$12332$bP4ck)
        (asin . g$12331$bP4ck)
        (apply . g$12330$bP4ck)
        (append . g$12329$bP4ck)
        (angle . g$12328$bP4ck)
        (acos . g$12327$bP4ck)
        (abs . g$12326$bP4ck)
        (/ . g$12325$bP4ck)
        (* . g$12324$bP4ck)
        (- . g$12323$bP4ck)
        (+ . g$12322$bP4ck)
        (>= . g$12321$bP4ck)
        (> . g$12320$bP4ck)
        (= . g$12319$bP4ck)
        (<= . g$12318$bP4ck)
        (< . g$12317$bP4ck)
        (deserialize-port . g$12313$bP4ck)
        (serialize-port . g$12312$bP4ck)
        (enum-set? . g$7459$bP4ck)
        (load/args . g$12147$bP4ck)
        (printf . g$7570$bP4ck)
        (fprintf . g$7571$bP4ck)
        (format . g$7572$bP4ck)
        (procedure-form . g$12311$bP4ck)
        (procedure-environment . g$12310$bP4ck)
        (procedure-name . g$12309$bP4ck)
        (procedure-arity . g$12308$bP4ck)
        (gc-collect . g$12307$bP4ck)
        (clr-type? . g$12306$bP4ck)
        (get-clr-type . g$12305$bP4ck)
        (vector-append . g$12303$bP4ck)
        (vector-filter . g$12302$bP4ck)
        (vector-reverse! . g$12301$bP4ck)
        (vector-contains? . g$12300$bP4ck)
        (vector-index-of . g$12299$bP4ck)
        (vector-copy . g$12298$bP4ck)
        (vector-binary-search . g$12297$bP4ck)
        (string-ci-compare . g$12296$bP4ck)
        (string-compare . g$12295$bP4ck)
        (string-format . g$12294$bP4ck)
        (trace-printer . g$12144$bP4ck)
        (time-it . g$12292$bP4ck)
        (make-parameter . g$7862$bP4ck)
        (open-tcp-input/output-port . g$12289$bP4ck)
        (hashtable-for-each . g$12288$bP4ck)
        (hashtable-map . g$12287$bP4ck)
        (environment-bindings . g$9135$bP4ck)
        (environment-symbols . g$9138$bP4ck)
        (interaction-environment-symbols . g$9134$bP4ck)
        (optimization-level . g$12286$bP4ck)
        (library-path . g$8317$bP4ck)
        (expand->core . g$9144$bP4ck)
        (expand . g$9142$bP4ck)
        (convert->cps . g$7648$bP4ck)
        (parse->cps . g$7647$bP4ck)
        (&no-nans . g$12285$bP4ck)
        (&no-infinities . g$12284$bP4ck)
        (&i/o-encoding . g$12283$bP4ck)
        (&i/o-decoding . g$12282$bP4ck)
        (&i/o-port . g$12281$bP4ck)
        (&i/o-file-does-not-exist . g$12280$bP4ck)
        (&i/o-file-already-exists . g$12279$bP4ck)
        (&i/o-file-is-read-only . g$12278$bP4ck)
        (&i/o-file-protection . g$12277$bP4ck)
        (&i/o-filename . g$12276$bP4ck)
        (&i/o-invalid-position . g$12275$bP4ck)
        (&i/o-write . g$12274$bP4ck)
        (&i/o-read . g$12273$bP4ck)
        (&i/o . g$12272$bP4ck)
        (&non-continuable . g$12271$bP4ck)
        (&undefined . g$12270$bP4ck)
        (&syntax . g$12269$bP4ck)
        (&lexical . g$12268$bP4ck)
        (&implementation-restriction . g$12267$bP4ck)
        (&who . g$12266$bP4ck)
        (&irritants . g$12265$bP4ck)
        (&assertion . g$12264$bP4ck)
        (&violation . g$12263$bP4ck)
        (&error . g$12262$bP4ck)
        (&serious . g$12261$bP4ck)
        (&warning . g$12260$bP4ck)
        (&message . g$12259$bP4ck)
        (&condition . g$12258$bP4ck)
        (define-condition-type . g$12257$bP4ck)
        (define-enumeration . g$12256$bP4ck)
        (define-record-type . g$12255$bP4ck)
        (parent-rtd . g$12254$bP4ck)
        (nongenerative . g$12253$bP4ck)
        (opaque . g$12252$bP4ck)
        (sealed . g$12251$bP4ck)
        (protocol . g$12250$bP4ck)
        (parent . g$12249$bP4ck)
        (immutable . g$12248$bP4ck)
        (mutable . g$12247$bP4ck)
        (fields . g$12246$bP4ck)
        (error-handling-mode . g$12245$bP4ck)
        (file-options . g$12244$bP4ck)
        (buffer-mode . g$12243$bP4ck)
        (eol-style . g$12242$bP4ck)
        (guard . g$12241$bP4ck)
        (trace-letrec-syntax . g$12240$bP4ck)
        (trace-let-syntax . g$12239$bP4ck)
        (trace-define-syntax . g$12238$bP4ck)
        (trace-define . g$12237$bP4ck)
        (trace-lambda . g$12236$bP4ck)
        (unsyntax-splicing . g$12235$bP4ck)
        (unsyntax . g$12234$bP4ck)
        (unquote-splicing . g$12233$bP4ck)
        (unquote . g$12232$bP4ck)
        (_ . g$12231$bP4ck)
        (else . g$12230$bP4ck)
        (=> . g$12229$bP4ck)
        (... . g$12228$bP4ck)
        (assert . g$12227$bP4ck)
        (endianness . g$12226$bP4ck)
        (delay . g$12225$bP4ck)
        (time . g$12224$bP4ck)
        (or . g$12223$bP4ck)
        (and . g$12222$bP4ck)
        (do . g$12221$bP4ck)
        (cond . g$12220$bP4ck)
        (let* . g$12219$bP4ck)
        (let . g$12218$bP4ck)
        (identifier-syntax . g$12217$bP4ck)
        (with-syntax . g$12216$bP4ck)
        (quasisyntax . g$12215$bP4ck)
        (quasiquote . g$12214$bP4ck)
        (syntax-rules . g$12213$bP4ck)
        (include-into . g$12212$bP4ck)
        (include . g$12211$bP4ck)
        (let-values . g$12209$bP4ck)
        (let*-values . g$12208$bP4ck)
        (record-constructor-descriptor . g$12207$bP4ck)
        (record-type-descriptor . g$12206$bP4ck)
        (fluid-let-syntax . g$12205$bP4ck)
        (case . g$12204$bP4ck)
        (parameterize . g$12203$bP4ck)
        (unless . g$12202$bP4ck)
        (when . g$12201$bP4ck)
        (if . g$12200$bP4ck)
        (letrec* . g$12199$bP4ck)
        (letrec . g$12198$bP4ck)
        (case-lambda . g$12196$bP4ck)
        (lambda . g$12195$bP4ck)
        (syntax . g$12194$bP4ck)
        (syntax-case . g$12193$bP4ck)
        (quote . g$12192$bP4ck)
        (letrec-syntax . g$12190$bP4ck)
        (let-syntax . g$12189$bP4ck)
        (set! . g$12188$bP4ck)
        (export . g$12187$bP4ck)
        (import . g$12186$bP4ck)
        (library . g$12185$bP4ck)
        (begin . g$12184$bP4ck)
        (module . g$12183$bP4ck)
        (define-syntax . g$12182$bP4ck)
        (define . g$12181$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12773$bP4ck
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12290$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7514$bP4ck
      'g$12774$bP4ck
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12714$bP4ck)
        (annotation-source . g$12713$bP4ck)
        (annotation-expression . g$12712$bP4ck)
        (annotation? . g$12711$bP4ck)
        (read-annotated . g$12710$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7514$bP4ck
      'g$12775$bP4ck
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12684$bP4ck)
        (serialize-library . g$12683$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7514$bP4ck
      'g$12776$bP4ck
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8765$bP4ck)
        (variable-transformer? . g$8764$bP4ck)
        (eqv-hash . g$12315$bP4ck)
        (reverse! . g$12314$bP4ck)
        (make-promise . g$6916$bP4ck)
        (format . g$7572$bP4ck)
        (get-command-line . g$12304$bP4ck)
        (make-traced-procedure . g$12293$bP4ck)
        (make-traced-macro . g$7592$bP4ck)
        (assertion-error . g$9157$bP4ck)
        (library-locator . g$12291$bP4ck)
        (get-library-paths . g$12290$bP4ck)
        (library-path . g$8317$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7514$bP4ck
      'g$12777$bP4ck
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12316$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12778$bP4ck
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12701$bP4ck)
        (clr-field-set!-internal . g$12700$bP4ck)
        (clr-field-get-internal . g$12699$bP4ck)
        (clr-cast-internal . g$12698$bP4ck)
        (clr-call-internal . g$12697$bP4ck)
        (clr-new-internal . g$12696$bP4ck)
        (clr-new-array-internal . g$12695$bP4ck)
        (clr-is-internal . g$12694$bP4ck)
        (clr-reference-internal . g$12693$bP4ck)
        (clr-using-internal . g$12692$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12779$bP4ck
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12233$bP4ck)
        (unquote . g$12232$bP4ck)
        (else . g$12230$bP4ck)
        (=> . g$12229$bP4ck)
        (delay . g$12225$bP4ck)
        (or . g$12223$bP4ck)
        (and . g$12222$bP4ck)
        (do . g$12221$bP4ck)
        (cond . g$12220$bP4ck)
        (let* . g$12219$bP4ck)
        (let . g$12218$bP4ck)
        (quasiquote . g$12214$bP4ck)
        (syntax-rules . g$12213$bP4ck)
        (case . g$12204$bP4ck)
        (if . g$12200$bP4ck)
        (letrec . g$12198$bP4ck)
        (lambda . g$12195$bP4ck)
        (quote . g$12192$bP4ck)
        (letrec-syntax . g$12190$bP4ck)
        (let-syntax . g$12189$bP4ck)
        (set! . g$12188$bP4ck)
        (begin . g$12184$bP4ck)
        (define-syntax . g$12182$bP4ck)
        (define . g$12181$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7514$bP4ck
      'g$12780$bP4ck
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$9168$bP4ck)
        (char-ready? . g$12682$bP4ck)
        (string-ci>? . g$6994$bP4ck)
        (string-ci>=? . g$6996$bP4ck)
        (string-ci=? . g$6992$bP4ck)
        (string-ci<? . g$6993$bP4ck)
        (string-ci<=? . g$6995$bP4ck)
        (char-whitespace? . g$12673$bP4ck)
        (char-upper-case? . g$12672$bP4ck)
        (char-numeric? . g$12670$bP4ck)
        (char-lower-case? . g$12669$bP4ck)
        (char-upcase . g$12667$bP4ck)
        (char-downcase . g$12664$bP4ck)
        (char-ci>? . g$7033$bP4ck)
        (char-ci>=? . g$7035$bP4ck)
        (char-ci=? . g$7031$bP4ck)
        (char-ci<? . g$7032$bP4ck)
        (char-ci<=? . g$7034$bP4ck)
        (char-alphabetic? . g$12663$bP4ck)
        (call-with-output-file . g$7419$bP4ck)
        (call-with-input-file . g$7418$bP4ck)
        (write-char . g$7400$bP4ck)
        (write . g$12631$bP4ck)
        (with-output-to-file . g$7417$bP4ck)
        (with-input-from-file . g$7416$bP4ck)
        (read-char . g$7399$bP4ck)
        (read . g$12630$bP4ck)
        (peek-char . g$7398$bP4ck)
        (open-output-file . g$12629$bP4ck)
        (open-input-file . g$12628$bP4ck)
        (newline . g$7420$bP4ck)
        (display . g$12627$bP4ck)
        (close-output-port . g$12626$bP4ck)
        (close-input-port . g$12625$bP4ck)
        (eof-object? . g$12624$bP4ck)
        (eof-object . g$12623$bP4ck)
        (current-error-port . g$12622$bP4ck)
        (current-output-port . g$12621$bP4ck)
        (current-input-port . g$12620$bP4ck)
        (output-port? . g$12619$bP4ck)
        (input-port? . g$12618$bP4ck)
        (scheme-report-environment . g$9141$bP4ck)
        (quotient . g$6913$bP4ck)
        (null-environment . g$9140$bP4ck)
        (remainder . g$6914$bP4ck)
        (modulo . g$6915$bP4ck)
        (inexact->exact . g$6910$bP4ck)
        (force . g$6917$bP4ck)
        (exact->inexact . g$6911$bP4ck)
        (string-fill! . g$12557$bP4ck)
        (string-set! . g$12556$bP4ck)
        (set-cdr! . g$12555$bP4ck)
        (set-car! . g$12554$bP4ck)
        (memv . g$5865$bP4ck)
        (memq . g$5864$bP4ck)
        (member . g$5866$bP4ck)
        (assv . g$5861$bP4ck)
        (assq . g$5860$bP4ck)
        (assoc . g$5862$bP4ck)
        (eval . g$9143$bP4ck)
        (zero? . g$6020$bP4ck)
        (vector? . g$12424$bP4ck)
        (vector-set! . g$12423$bP4ck)
        (vector-ref . g$12422$bP4ck)
        (vector-length . g$12420$bP4ck)
        (vector-fill! . g$12418$bP4ck)
        (vector->list . g$12417$bP4ck)
        (vector . g$12416$bP4ck)
        (values . g$12415$bP4ck)
        (truncate . g$12414$bP4ck)
        (tan . g$12413$bP4ck)
        (symbol? . g$12412$bP4ck)
        (symbol->string . g$12411$bP4ck)
        (substring . g$12410$bP4ck)
        (string? . g$12409$bP4ck)
        (string>? . g$6063$bP4ck)
        (string>=? . g$6065$bP4ck)
        (string=? . g$6061$bP4ck)
        (string<? . g$6062$bP4ck)
        (string<=? . g$6064$bP4ck)
        (string-ref . g$12408$bP4ck)
        (string-length . g$12407$bP4ck)
        (string-copy . g$12405$bP4ck)
        (string-append . g$12404$bP4ck)
        (string->symbol . g$12403$bP4ck)
        (string->number . g$12402$bP4ck)
        (string->list . g$12401$bP4ck)
        (string . g$12400$bP4ck)
        (sqrt . g$12399$bP4ck)
        (sin . g$12398$bP4ck)
        (round . g$12397$bP4ck)
        (reverse . g$12396$bP4ck)
        (real? . g$12395$bP4ck)
        (real-part . g$12393$bP4ck)
        (rationalize . g$6107$bP4ck)
        (rational? . g$12392$bP4ck)
        (procedure? . g$12390$bP4ck)
        (positive? . g$6018$bP4ck)
        (pair? . g$12389$bP4ck)
        (odd? . g$6022$bP4ck)
        (numerator . g$12388$bP4ck)
        (number? . g$12387$bP4ck)
        (number->string . g$12386$bP4ck)
        (null? . g$12385$bP4ck)
        (not . g$12384$bP4ck)
        (negative? . g$6019$bP4ck)
        (min . g$6024$bP4ck)
        (max . g$6023$bP4ck)
        (map . g$5872$bP4ck)
        (make-vector . g$12382$bP4ck)
        (make-string . g$12381$bP4ck)
        (make-rectangular . g$12380$bP4ck)
        (make-polar . g$12379$bP4ck)
        (magnitude . g$12378$bP4ck)
        (log . g$12377$bP4ck)
        (list? . g$12376$bP4ck)
        (list-tail . g$5852$bP4ck)
        (list-ref . g$5853$bP4ck)
        (list->vector . g$12375$bP4ck)
        (list->string . g$12374$bP4ck)
        (list . g$12373$bP4ck)
        (length . g$12372$bP4ck)
        (lcm . g$6026$bP4ck)
        (integer? . g$12371$bP4ck)
        (integer->char . g$12369$bP4ck)
        (inexact? . g$12367$bP4ck)
        (imag-part . g$12365$bP4ck)
        (gcd . g$6025$bP4ck)
        (for-each . g$5873$bP4ck)
        (floor . g$12364$bP4ck)
        (expt . g$12362$bP4ck)
        (exp . g$12361$bP4ck)
        (exact? . g$12360$bP4ck)
        (even? . g$6021$bP4ck)
        (eqv? . g$12356$bP4ck)
        (equal? . g$12355$bP4ck)
        (eq? . g$12354$bP4ck)
        (dynamic-wind . g$12353$bP4ck)
        (denominator . g$12346$bP4ck)
        (cos . g$12345$bP4ck)
        (cons . g$12344$bP4ck)
        (complex? . g$12343$bP4ck)
        (char? . g$12342$bP4ck)
        (char>? . g$6104$bP4ck)
        (char>=? . g$6106$bP4ck)
        (char=? . g$6102$bP4ck)
        (char<? . g$6103$bP4ck)
        (char<=? . g$6105$bP4ck)
        (char->integer . g$12341$bP4ck)
        (ceiling . g$12340$bP4ck)
        (call-with-values . g$12339$bP4ck)
        (call-with-current-continuation . g$12337$bP4ck)
        (cddddr . g$6017$bP4ck)
        (cdddar . g$6016$bP4ck)
        (cddadr . g$6015$bP4ck)
        (cddaar . g$6014$bP4ck)
        (cdaddr . g$6013$bP4ck)
        (cdadar . g$6012$bP4ck)
        (cdaadr . g$6011$bP4ck)
        (cdaaar . g$6010$bP4ck)
        (cadddr . g$6009$bP4ck)
        (caddar . g$6008$bP4ck)
        (cadadr . g$6007$bP4ck)
        (cadaar . g$6006$bP4ck)
        (caaddr . g$6005$bP4ck)
        (caadar . g$6004$bP4ck)
        (caaadr . g$6003$bP4ck)
        (caaaar . g$6002$bP4ck)
        (cdddr . g$6001$bP4ck)
        (cddar . g$6000$bP4ck)
        (cdadr . g$5999$bP4ck)
        (cdaar . g$5998$bP4ck)
        (caddr . g$5997$bP4ck)
        (cadar . g$5996$bP4ck)
        (caadr . g$5995$bP4ck)
        (caaar . g$5994$bP4ck)
        (cddr . g$5993$bP4ck)
        (cdar . g$5992$bP4ck)
        (cadr . g$5991$bP4ck)
        (caar . g$5990$bP4ck)
        (cdr . g$12336$bP4ck)
        (car . g$12335$bP4ck)
        (boolean? . g$12334$bP4ck)
        (atan . g$12333$bP4ck)
        (asin . g$12331$bP4ck)
        (apply . g$12330$bP4ck)
        (append . g$12329$bP4ck)
        (angle . g$12328$bP4ck)
        (acos . g$12327$bP4ck)
        (abs . g$12326$bP4ck)
        (/ . g$12325$bP4ck)
        (* . g$12324$bP4ck)
        (- . g$12323$bP4ck)
        (+ . g$12322$bP4ck)
        (>= . g$12321$bP4ck)
        (> . g$12320$bP4ck)
        (= . g$12319$bP4ck)
        (<= . g$12318$bP4ck)
        (< . g$12317$bP4ck)
        (unquote-splicing . g$12233$bP4ck)
        (unquote . g$12232$bP4ck)
        (else . g$12230$bP4ck)
        (=> . g$12229$bP4ck)
        (... . g$12228$bP4ck)
        (delay . g$12225$bP4ck)
        (or . g$12223$bP4ck)
        (and . g$12222$bP4ck)
        (do . g$12221$bP4ck)
        (cond . g$12220$bP4ck)
        (let* . g$12219$bP4ck)
        (let . g$12218$bP4ck)
        (quasiquote . g$12214$bP4ck)
        (syntax-rules . g$12213$bP4ck)
        (case . g$12204$bP4ck)
        (if . g$12200$bP4ck)
        (letrec . g$12198$bP4ck)
        (lambda . g$12195$bP4ck)
        (quote . g$12192$bP4ck)
        (letrec-syntax . g$12190$bP4ck)
        (let-syntax . g$12189$bP4ck)
        (set! . g$12188$bP4ck)
        (begin . g$12184$bP4ck)
        (define-syntax . g$12182$bP4ck)
        (define . g$12181$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7514$bP4ck
      'g$12781$bP4ck
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12681$bP4ck)
        (string-titlecase . g$12680$bP4ck)
        (string-normalize-nfkd . g$12679$bP4ck)
        (string-normalize-nfkc . g$12678$bP4ck)
        (string-normalize-nfd . g$12677$bP4ck)
        (string-normalize-nfc . g$12676$bP4ck)
        (string-foldcase . g$12675$bP4ck)
        (string-downcase . g$12674$bP4ck)
        (string-ci>? . g$6994$bP4ck)
        (string-ci>=? . g$6996$bP4ck)
        (string-ci=? . g$6992$bP4ck)
        (string-ci<? . g$6993$bP4ck)
        (string-ci<=? . g$6995$bP4ck)
        (char-whitespace? . g$12673$bP4ck)
        (char-upper-case? . g$12672$bP4ck)
        (char-title-case? . g$12671$bP4ck)
        (char-numeric? . g$12670$bP4ck)
        (char-lower-case? . g$12669$bP4ck)
        (char-general-category . g$12668$bP4ck)
        (char-upcase . g$12667$bP4ck)
        (char-titlecase . g$12666$bP4ck)
        (char-foldcase . g$12665$bP4ck)
        (char-downcase . g$12664$bP4ck)
        (char-ci>? . g$7033$bP4ck)
        (char-ci>=? . g$7035$bP4ck)
        (char-ci=? . g$7031$bP4ck)
        (char-ci<? . g$7032$bP4ck)
        (char-ci<=? . g$7034$bP4ck)
        (char-alphabetic? . g$12663$bP4ck)
        (make-variable-transformer . g$8763$bP4ck)
        (identifier? . g$9162$bP4ck)
        (generate-temporaries . g$9151$bP4ck)
        (free-identifier=? . g$9152$bP4ck)
        (syntax->datum . g$9164$bP4ck)
        (datum->syntax . g$9163$bP4ck)
        (bound-identifier=? . g$9153$bP4ck)
        (record-type-descriptor? . g$12662$bP4ck)
        (record-predicate . g$12661$bP4ck)
        (record-mutator . g$12660$bP4ck)
        (record-constructor . g$12659$bP4ck)
        (record-accessor . g$12658$bP4ck)
        (make-record-type-descriptor . g$12657$bP4ck)
        (make-record-constructor-descriptor . g$12656$bP4ck)
        (record? . g$12655$bP4ck)
        (record-type-uid . g$12654$bP4ck)
        (record-type-sealed? . g$12653$bP4ck)
        (record-type-parent . g$12652$bP4ck)
        (record-type-opaque? . g$12651$bP4ck)
        (record-type-name . g$12650$bP4ck)
        (record-type-generative? . g$12649$bP4ck)
        (record-type-field-names . g$12648$bP4ck)
        (record-rtd . g$12647$bP4ck)
        (record-field-mutable? . g$12646$bP4ck)
        (delete-file . g$6568$bP4ck)
        (file-exists? . g$6567$bP4ck)
        (vector-sort! . g$12645$bP4ck)
        (vector-sort . g$12644$bP4ck)
        (list-sort . g$6934$bP4ck)
        (symbol-hash . g$12643$bP4ck)
        (string-ci-hash . g$12642$bP4ck)
        (string-hash . g$12641$bP4ck)
        (equal-hash . g$12640$bP4ck)
        (hashtable-equivalence-function . g$12639$bP4ck)
        (make-hashtable . g$12638$bP4ck)
        (hashtable-hash-function . g$12637$bP4ck)
        (make-eqv-hashtable . g$6536$bP4ck)
        (make-eq-hashtable . g$6535$bP4ck)
        (hashtable? . g$12636$bP4ck)
        (hashtable-update! . g$6542$bP4ck)
        (hashtable-size . g$6537$bP4ck)
        (hashtable-set! . g$6539$bP4ck)
        (hashtable-ref . g$6538$bP4ck)
        (hashtable-mutable? . g$12635$bP4ck)
        (hashtable-keys . g$12634$bP4ck)
        (hashtable-entries . g$12633$bP4ck)
        (hashtable-delete! . g$6540$bP4ck)
        (hashtable-copy . g$12632$bP4ck)
        (hashtable-contains? . g$6541$bP4ck)
        (hashtable-clear! . g$6543$bP4ck)
        (call-with-output-file . g$7419$bP4ck)
        (call-with-input-file . g$7418$bP4ck)
        (write-char . g$7400$bP4ck)
        (write . g$12631$bP4ck)
        (with-output-to-file . g$7417$bP4ck)
        (with-input-from-file . g$7416$bP4ck)
        (read-char . g$7399$bP4ck)
        (read . g$12630$bP4ck)
        (peek-char . g$7398$bP4ck)
        (open-output-file . g$12629$bP4ck)
        (open-input-file . g$12628$bP4ck)
        (newline . g$7420$bP4ck)
        (display . g$12627$bP4ck)
        (close-output-port . g$12626$bP4ck)
        (close-input-port . g$12625$bP4ck)
        (eof-object? . g$12624$bP4ck)
        (eof-object . g$12623$bP4ck)
        (current-error-port . g$12622$bP4ck)
        (current-output-port . g$12621$bP4ck)
        (current-input-port . g$12620$bP4ck)
        (output-port? . g$12619$bP4ck)
        (input-port? . g$12618$bP4ck)
        (utf-8-codec . g$12617$bP4ck)
        (utf-16-codec . g$12616$bP4ck)
        (transcoder-error-handling-mode . g$12615$bP4ck)
        (transcoder-eol-style . g$12614$bP4ck)
        (transcoder-codec . g$12613$bP4ck)
        (transcoded-port . g$12612$bP4ck)
        (textual-port? . g$12611$bP4ck)
        (string->bytevector . g$12610$bP4ck)
        (standard-output-port . g$12609$bP4ck)
        (standard-input-port . g$12608$bP4ck)
        (standard-error-port . g$12607$bP4ck)
        (set-port-position! . g$12606$bP4ck)
        (put-u8 . g$12605$bP4ck)
        (put-string . g$12604$bP4ck)
        (put-datum . g$12603$bP4ck)
        (put-char . g$12602$bP4ck)
        (put-bytevector . g$12601$bP4ck)
        (port? . g$7385$bP4ck)
        (port-transcoder . g$12600$bP4ck)
        (port-position . g$12599$bP4ck)
        (port-has-set-port-position!? . g$12598$bP4ck)
        (port-has-port-position? . g$12597$bP4ck)
        (port-eof? . g$12596$bP4ck)
        (output-port-buffer-mode . g$12595$bP4ck)
        (open-string-output-port . g$7384$bP4ck)
        (open-string-input-port . g$12594$bP4ck)
        (open-file-output-port . g$12593$bP4ck)
        (open-file-input/output-port . g$12592$bP4ck)
        (open-file-input-port . g$12591$bP4ck)
        (open-bytevector-output-port . g$12590$bP4ck)
        (open-bytevector-input-port . g$12589$bP4ck)
        (native-transcoder . g$12588$bP4ck)
        (native-eol-style . g$12587$bP4ck)
        (make-transcoder . g$12586$bP4ck)
        (latin-1-codec . g$12585$bP4ck)
        (make-i/o-write-error . g$7240$bP4ck)
        (make-i/o-read-error . g$7226$bP4ck)
        (make-i/o-port-error . g$7345$bP4ck)
        (make-i/o-invalid-position-error . g$7255$bP4ck)
        (make-i/o-filename-error . g$7272$bP4ck)
        (make-i/o-file-protection-error . g$7288$bP4ck)
        (make-i/o-file-is-read-only-error . g$7302$bP4ck)
        (make-i/o-file-does-not-exist-error . g$7330$bP4ck)
        (make-i/o-file-already-exists-error . g$7316$bP4ck)
        (make-i/o-error . g$7212$bP4ck)
        (make-i/o-encoding-error . g$7376$bP4ck)
        (make-i/o-decoding-error . g$7361$bP4ck)
        (make-custom-textual-output-port . g$12584$bP4ck)
        (make-custom-textual-input/output-port . g$12583$bP4ck)
        (make-custom-textual-input-port . g$12582$bP4ck)
        (make-custom-binary-output-port . g$12581$bP4ck)
        (make-custom-binary-input/output-port . g$12580$bP4ck)
        (make-custom-binary-input-port . g$12579$bP4ck)
        (make-bytevector . g$12578$bP4ck)
        (lookahead-u8 . g$12577$bP4ck)
        (lookahead-char . g$12576$bP4ck)
        (i/o-write-error? . g$7241$bP4ck)
        (i/o-read-error? . g$7227$bP4ck)
        (i/o-port-error? . g$7347$bP4ck)
        (i/o-invalid-position-error? . g$7257$bP4ck)
        (i/o-error-position . g$7258$bP4ck)
        (i/o-filename-error? . g$7274$bP4ck)
        (i/o-file-protection-error? . g$7289$bP4ck)
        (i/o-file-is-read-only-error? . g$7303$bP4ck)
        (i/o-file-does-not-exist-error? . g$7331$bP4ck)
        (i/o-file-already-exists-error? . g$7317$bP4ck)
        (i/o-error? . g$7213$bP4ck)
        (i/o-error-port . g$7348$bP4ck)
        (i/o-error-filename . g$7275$bP4ck)
        (i/o-encoding-error? . g$7378$bP4ck)
        (i/o-encoding-error-char . g$7379$bP4ck)
        (i/o-decoding-error? . g$7362$bP4ck)
        (get-u8 . g$12575$bP4ck)
        (get-string-n! . g$12574$bP4ck)
        (get-string-n . g$12573$bP4ck)
        (get-string-all . g$12572$bP4ck)
        (get-line . g$12571$bP4ck)
        (get-datum . g$12570$bP4ck)
        (get-char . g$12569$bP4ck)
        (get-bytevector-some . g$12568$bP4ck)
        (get-bytevector-n! . g$12567$bP4ck)
        (get-bytevector-n . g$12566$bP4ck)
        (get-bytevector-all . g$12565$bP4ck)
        (flush-output-port . g$12564$bP4ck)
        (close-port . g$12563$bP4ck)
        (call-with-string-output-port . g$7386$bP4ck)
        (call-with-port . g$7387$bP4ck)
        (call-with-bytevector-output-port . g$12562$bP4ck)
        (bytevector->string . g$12561$bP4ck)
        (buffer-mode? . g$12560$bP4ck)
        (binary-port? . g$12559$bP4ck)
        (exit . g$12558$bP4ck)
        (command-line . g$12145$bP4ck)
        (remove . g$5877$bP4ck)
        (remv . g$5878$bP4ck)
        (remp . g$5858$bP4ck)
        (remq . g$5879$bP4ck)
        (partition . g$5857$bP4ck)
        (memv . g$5865$bP4ck)
        (memq . g$5864$bP4ck)
        (memp . g$5867$bP4ck)
        (member . g$5866$bP4ck)
        (exists . g$5871$bP4ck)
        (for-all . g$5870$bP4ck)
        (fold-right . g$5876$bP4ck)
        (fold-left . g$5875$bP4ck)
        (find . g$5856$bP4ck)
        (filter . g$5859$bP4ck)
        (cons* . g$5874$bP4ck)
        (assv . g$5861$bP4ck)
        (assq . g$5860$bP4ck)
        (assp . g$5863$bP4ck)
        (assoc . g$5862$bP4ck)
        (with-exception-handler . g$12553$bP4ck)
        (raise-continuable . g$12552$bP4ck)
        (raise . g$12551$bP4ck)
        (make-enumeration . g$7484$bP4ck)
        (enum-set=? . g$7491$bP4ck)
        (enum-set-universe . g$7485$bP4ck)
        (enum-set-union . g$7492$bP4ck)
        (enum-set-subset? . g$7490$bP4ck)
        (enum-set-projection . g$7496$bP4ck)
        (enum-set-member? . g$7489$bP4ck)
        (enum-set-intersection . g$7493$bP4ck)
        (enum-set-indexer . g$7486$bP4ck)
        (enum-set-difference . g$7494$bP4ck)
        (enum-set-constructor . g$7487$bP4ck)
        (enum-set-complement . g$7495$bP4ck)
        (enum-set->list . g$7488$bP4ck)
        (who-condition? . g$6822$bP4ck)
        (warning? . g$6733$bP4ck)
        (violation? . g$6775$bP4ck)
        (undefined-violation? . g$6899$bP4ck)
        (syntax-violation? . g$6883$bP4ck)
        (syntax-violation-subform . g$6885$bP4ck)
        (syntax-violation-form . g$6884$bP4ck)
        (syntax-violation . g$9161$bP4ck)
        (simple-conditions . g$12550$bP4ck)
        (serious-condition? . g$6747$bP4ck)
        (non-continuable-violation? . g$6837$bP4ck)
        (message-condition? . g$6718$bP4ck)
        (make-who-condition . g$6820$bP4ck)
        (make-warning . g$6732$bP4ck)
        (make-violation . g$6774$bP4ck)
        (make-undefined-violation . g$6898$bP4ck)
        (make-syntax-violation . g$6880$bP4ck)
        (make-serious-condition . g$6746$bP4ck)
        (make-non-continuable-violation . g$6836$bP4ck)
        (make-message-condition . g$6716$bP4ck)
        (make-lexical-violation . g$6864$bP4ck)
        (make-irritants-condition . g$6803$bP4ck)
        (make-implementation-restriction-violation . g$6850$bP4ck)
        (make-error . g$6760$bP4ck)
        (make-assertion-violation . g$6788$bP4ck)
        (lexical-violation? . g$6865$bP4ck)
        (irritants-condition? . g$6805$bP4ck)
        (implementation-restriction-violation? . g$6851$bP4ck)
        (error? . g$6761$bP4ck)
        (condition-who . g$6823$bP4ck)
        (condition-predicate . g$12549$bP4ck)
        (condition-message . g$6719$bP4ck)
        (condition-irritants . g$6806$bP4ck)
        (condition-accessor . g$12548$bP4ck)
        (condition . g$12547$bP4ck)
        (assertion-violation? . g$6789$bP4ck)
        (condition? . g$12546$bP4ck)
        (utf32->string . g$12545$bP4ck)
        (utf16->string . g$12544$bP4ck)
        (utf8->string . g$12543$bP4ck)
        (uint-list->bytevector . g$12542$bP4ck)
        (u8-list->bytevector . g$12541$bP4ck)
        (string->utf8 . g$12540$bP4ck)
        (string->utf32 . g$12539$bP4ck)
        (string->utf16 . g$12538$bP4ck)
        (sint-list->bytevector . g$12537$bP4ck)
        (native-endianness . g$6574$bP4ck)
        (bytevector? . g$12536$bP4ck)
        (bytevector=? . g$12535$bP4ck)
        (bytevector-uint-set! . g$12534$bP4ck)
        (bytevector-uint-ref . g$12533$bP4ck)
        (bytevector-u8-set! . g$12532$bP4ck)
        (bytevector-u8-ref . g$12531$bP4ck)
        (bytevector-u64-set! . g$6595$bP4ck)
        (bytevector-u64-ref . g$6591$bP4ck)
        (bytevector-u64-native-set! . g$6597$bP4ck)
        (bytevector-u64-native-ref . g$6593$bP4ck)
        (bytevector-u32-set! . g$6587$bP4ck)
        (bytevector-u32-ref . g$6583$bP4ck)
        (bytevector-u32-native-set! . g$6589$bP4ck)
        (bytevector-u32-native-ref . g$6585$bP4ck)
        (bytevector-u16-set! . g$6579$bP4ck)
        (bytevector-u16-ref . g$6575$bP4ck)
        (bytevector-u16-native-set! . g$6581$bP4ck)
        (bytevector-u16-native-ref . g$6577$bP4ck)
        (bytevector-sint-set! . g$12530$bP4ck)
        (bytevector-sint-ref . g$12529$bP4ck)
        (bytevector-s8-set! . g$12528$bP4ck)
        (bytevector-s8-ref . g$12527$bP4ck)
        (bytevector-s64-set! . g$6596$bP4ck)
        (bytevector-s64-ref . g$6592$bP4ck)
        (bytevector-s64-native-set! . g$6598$bP4ck)
        (bytevector-s64-native-ref . g$6594$bP4ck)
        (bytevector-s32-set! . g$6588$bP4ck)
        (bytevector-s32-ref . g$6584$bP4ck)
        (bytevector-s32-native-set! . g$6590$bP4ck)
        (bytevector-s32-native-ref . g$6586$bP4ck)
        (bytevector-s16-set! . g$6580$bP4ck)
        (bytevector-s16-ref . g$6576$bP4ck)
        (bytevector-s16-native-set! . g$6582$bP4ck)
        (bytevector-s16-native-ref . g$6578$bP4ck)
        (bytevector-length . g$12526$bP4ck)
        (bytevector-ieee-single-set! . g$12525$bP4ck)
        (bytevector-ieee-single-ref . g$12524$bP4ck)
        (bytevector-ieee-single-native-set! . g$6601$bP4ck)
        (bytevector-ieee-single-native-ref . g$6599$bP4ck)
        (bytevector-ieee-double-set! . g$12523$bP4ck)
        (bytevector-ieee-double-ref . g$12522$bP4ck)
        (bytevector-ieee-double-native-set! . g$6602$bP4ck)
        (bytevector-ieee-double-native-ref . g$6600$bP4ck)
        (bytevector-fill! . g$12521$bP4ck)
        (bytevector-copy! . g$12520$bP4ck)
        (bytevector-copy . g$12519$bP4ck)
        (bytevector->uint-list . g$12518$bP4ck)
        (bytevector->u8-list . g$12517$bP4ck)
        (bytevector->sint-list . g$12516$bP4ck)
        (no-nans-violation? . g$7198$bP4ck)
        (no-infinities-violation? . g$7184$bP4ck)
        (make-no-nans-violation . g$7197$bP4ck)
        (make-no-infinities-violation . g$7183$bP4ck)
        (real->flonum . g$12515$bP4ck)
        (flzero? . g$12514$bP4ck)
        (fltruncate . g$12513$bP4ck)
        (fltan . g$12512$bP4ck)
        (flsqrt . g$12511$bP4ck)
        (flsin . g$12510$bP4ck)
        (flround . g$12509$bP4ck)
        (flpositive? . g$12508$bP4ck)
        (flonum? . g$12507$bP4ck)
        (flodd? . g$12506$bP4ck)
        (flnumerator . g$12505$bP4ck)
        (flnegative? . g$12504$bP4ck)
        (flnan? . g$12503$bP4ck)
        (flmod0 . g$12502$bP4ck)
        (flmod . g$12501$bP4ck)
        (flmin . g$12500$bP4ck)
        (flmax . g$12499$bP4ck)
        (fllog . g$12498$bP4ck)
        (flinteger? . g$12497$bP4ck)
        (flinfinite? . g$12496$bP4ck)
        (flfloor . g$12495$bP4ck)
        (flfinite? . g$12494$bP4ck)
        (flexpt . g$12493$bP4ck)
        (flexp . g$12492$bP4ck)
        (fleven? . g$12491$bP4ck)
        (fldiv0-and-mod0 . g$12490$bP4ck)
        (fldiv0 . g$12489$bP4ck)
        (fldiv-and-mod . g$12488$bP4ck)
        (fldiv . g$12487$bP4ck)
        (fldenominator . g$12486$bP4ck)
        (flcos . g$12485$bP4ck)
        (flceiling . g$12484$bP4ck)
        (flatan . g$12483$bP4ck)
        (flasin . g$12482$bP4ck)
        (flacos . g$12481$bP4ck)
        (flabs . g$12480$bP4ck)
        (fl>? . g$12479$bP4ck)
        (fl>=? . g$12478$bP4ck)
        (fl=? . g$12477$bP4ck)
        (fl<? . g$12476$bP4ck)
        (fl<=? . g$12475$bP4ck)
        (fl/ . g$12474$bP4ck)
        (fl- . g$12473$bP4ck)
        (fl+ . g$12472$bP4ck)
        (fl* . g$12471$bP4ck)
        (fixnum->flonum . g$12470$bP4ck)
        (fxzero? . g$12469$bP4ck)
        (fxxor . g$12468$bP4ck)
        (fxrotate-bit-field . g$7130$bP4ck)
        (fxreverse-bit-field . g$12467$bP4ck)
        (fxpositive? . g$12466$bP4ck)
        (fxodd? . g$12465$bP4ck)
        (fxnot . g$12464$bP4ck)
        (fxnegative? . g$12463$bP4ck)
        (fxmod0 . g$12462$bP4ck)
        (fxmod . g$12461$bP4ck)
        (fxmin . g$12460$bP4ck)
        (fxmax . g$12459$bP4ck)
        (fxlength . g$12458$bP4ck)
        (fxior . g$12457$bP4ck)
        (fxif . g$7124$bP4ck)
        (fxfirst-bit-set . g$12456$bP4ck)
        (fxeven? . g$12455$bP4ck)
        (fxdiv0-and-mod0 . g$12454$bP4ck)
        (fxdiv0 . g$12453$bP4ck)
        (fxdiv-and-mod . g$12452$bP4ck)
        (fxdiv . g$12451$bP4ck)
        (fxcopy-bit-field . g$7127$bP4ck)
        (fxcopy-bit . g$7125$bP4ck)
        (fxbit-set? . g$12450$bP4ck)
        (fxbit-field . g$7126$bP4ck)
        (fxbit-count . g$12449$bP4ck)
        (fxarithmetic-shift-right . g$7129$bP4ck)
        (fxarithmetic-shift-left . g$7128$bP4ck)
        (fxarithmetic-shift . g$12448$bP4ck)
        (fxand . g$12447$bP4ck)
        (fx>? . g$12446$bP4ck)
        (fx>=? . g$12445$bP4ck)
        (fx=? . g$12444$bP4ck)
        (fx<? . g$12443$bP4ck)
        (fx<=? . g$12442$bP4ck)
        (fx-/carry . g$7122$bP4ck)
        (fx- . g$12441$bP4ck)
        (fx+/carry . g$7123$bP4ck)
        (fx+ . g$12440$bP4ck)
        (fx*/carry . g$7121$bP4ck)
        (fx* . g$12439$bP4ck)
        (greatest-fixnum . g$12438$bP4ck)
        (least-fixnum . g$12437$bP4ck)
        (fixnum-width . g$12436$bP4ck)
        (fixnum? . g$12435$bP4ck)
        (bitwise-rotate-bit-field . g$7095$bP4ck)
        (bitwise-reverse-bit-field . g$12434$bP4ck)
        (bitwise-length . g$12433$bP4ck)
        (bitwise-if . g$7089$bP4ck)
        (bitwise-first-bit-set . g$12432$bP4ck)
        (bitwise-copy-bit-field . g$7092$bP4ck)
        (bitwise-copy-bit . g$7090$bP4ck)
        (bitwise-bit-set? . g$12431$bP4ck)
        (bitwise-bit-field . g$7091$bP4ck)
        (bitwise-bit-count . g$12430$bP4ck)
        (bitwise-xor . g$12429$bP4ck)
        (bitwise-ior . g$12428$bP4ck)
        (bitwise-and . g$12427$bP4ck)
        (bitwise-not . g$12426$bP4ck)
        (bitwise-arithmetic-shift-right . g$7094$bP4ck)
        (bitwise-arithmetic-shift-left . g$7093$bP4ck)
        (bitwise-arithmetic-shift . g$12425$bP4ck)
        (zero? . g$6020$bP4ck)
        (vector? . g$12424$bP4ck)
        (vector-set! . g$12423$bP4ck)
        (vector-ref . g$12422$bP4ck)
        (vector-map . g$12421$bP4ck)
        (vector-length . g$12420$bP4ck)
        (vector-for-each . g$12419$bP4ck)
        (vector-fill! . g$12418$bP4ck)
        (vector->list . g$12417$bP4ck)
        (vector . g$12416$bP4ck)
        (values . g$12415$bP4ck)
        (truncate . g$12414$bP4ck)
        (tan . g$12413$bP4ck)
        (symbol? . g$12412$bP4ck)
        (symbol=? . g$6066$bP4ck)
        (symbol->string . g$12411$bP4ck)
        (substring . g$12410$bP4ck)
        (string? . g$12409$bP4ck)
        (string>? . g$6063$bP4ck)
        (string>=? . g$6065$bP4ck)
        (string=? . g$6061$bP4ck)
        (string<? . g$6062$bP4ck)
        (string<=? . g$6064$bP4ck)
        (string-ref . g$12408$bP4ck)
        (string-length . g$12407$bP4ck)
        (string-for-each . g$12406$bP4ck)
        (string-copy . g$12405$bP4ck)
        (string-append . g$12404$bP4ck)
        (string->symbol . g$12403$bP4ck)
        (string->number . g$12402$bP4ck)
        (string->list . g$12401$bP4ck)
        (string . g$12400$bP4ck)
        (sqrt . g$12399$bP4ck)
        (sin . g$12398$bP4ck)
        (round . g$12397$bP4ck)
        (reverse . g$12396$bP4ck)
        (real? . g$12395$bP4ck)
        (real-valued? . g$12394$bP4ck)
        (real-part . g$12393$bP4ck)
        (rationalize . g$6107$bP4ck)
        (rational? . g$12392$bP4ck)
        (rational-valued? . g$12391$bP4ck)
        (procedure? . g$12390$bP4ck)
        (positive? . g$6018$bP4ck)
        (pair? . g$12389$bP4ck)
        (odd? . g$6022$bP4ck)
        (numerator . g$12388$bP4ck)
        (number? . g$12387$bP4ck)
        (number->string . g$12386$bP4ck)
        (null? . g$12385$bP4ck)
        (not . g$12384$bP4ck)
        (negative? . g$6019$bP4ck)
        (nan? . g$12383$bP4ck)
        (min . g$6024$bP4ck)
        (max . g$6023$bP4ck)
        (map . g$5872$bP4ck)
        (make-vector . g$12382$bP4ck)
        (make-string . g$12381$bP4ck)
        (make-rectangular . g$12380$bP4ck)
        (make-polar . g$12379$bP4ck)
        (magnitude . g$12378$bP4ck)
        (log . g$12377$bP4ck)
        (list? . g$12376$bP4ck)
        (list-tail . g$5852$bP4ck)
        (list-ref . g$5853$bP4ck)
        (list->vector . g$12375$bP4ck)
        (list->string . g$12374$bP4ck)
        (list . g$12373$bP4ck)
        (length . g$12372$bP4ck)
        (lcm . g$6026$bP4ck)
        (integer? . g$12371$bP4ck)
        (integer-valued? . g$12370$bP4ck)
        (integer->char . g$12369$bP4ck)
        (infinite? . g$12368$bP4ck)
        (inexact? . g$12367$bP4ck)
        (inexact . g$12366$bP4ck)
        (imag-part . g$12365$bP4ck)
        (gcd . g$6025$bP4ck)
        (for-each . g$5873$bP4ck)
        (floor . g$12364$bP4ck)
        (finite? . g$12363$bP4ck)
        (expt . g$12362$bP4ck)
        (exp . g$12361$bP4ck)
        (exact? . g$12360$bP4ck)
        (exact-integer-sqrt . g$12359$bP4ck)
        (exact . g$12358$bP4ck)
        (even? . g$6021$bP4ck)
        (error . g$12357$bP4ck)
        (eqv? . g$12356$bP4ck)
        (equal? . g$12355$bP4ck)
        (eq? . g$12354$bP4ck)
        (dynamic-wind . g$12353$bP4ck)
        (div0-and-mod0 . g$12352$bP4ck)
        (mod0 . g$12351$bP4ck)
        (div0 . g$12350$bP4ck)
        (div-and-mod . g$12349$bP4ck)
        (mod . g$12348$bP4ck)
        (div . g$12347$bP4ck)
        (denominator . g$12346$bP4ck)
        (cos . g$12345$bP4ck)
        (cons . g$12344$bP4ck)
        (complex? . g$12343$bP4ck)
        (char? . g$12342$bP4ck)
        (char>? . g$6104$bP4ck)
        (char>=? . g$6106$bP4ck)
        (char=? . g$6102$bP4ck)
        (char<? . g$6103$bP4ck)
        (char<=? . g$6105$bP4ck)
        (char->integer . g$12341$bP4ck)
        (ceiling . g$12340$bP4ck)
        (call-with-values . g$12339$bP4ck)
        (call/cc . g$12338$bP4ck)
        (call-with-current-continuation . g$12337$bP4ck)
        (cddddr . g$6017$bP4ck)
        (cdddar . g$6016$bP4ck)
        (cddadr . g$6015$bP4ck)
        (cddaar . g$6014$bP4ck)
        (cdaddr . g$6013$bP4ck)
        (cdadar . g$6012$bP4ck)
        (cdaadr . g$6011$bP4ck)
        (cdaaar . g$6010$bP4ck)
        (cadddr . g$6009$bP4ck)
        (caddar . g$6008$bP4ck)
        (cadadr . g$6007$bP4ck)
        (cadaar . g$6006$bP4ck)
        (caaddr . g$6005$bP4ck)
        (caadar . g$6004$bP4ck)
        (caaadr . g$6003$bP4ck)
        (caaaar . g$6002$bP4ck)
        (cdddr . g$6001$bP4ck)
        (cddar . g$6000$bP4ck)
        (cdadr . g$5999$bP4ck)
        (cdaar . g$5998$bP4ck)
        (caddr . g$5997$bP4ck)
        (cadar . g$5996$bP4ck)
        (caadr . g$5995$bP4ck)
        (caaar . g$5994$bP4ck)
        (cddr . g$5993$bP4ck)
        (cdar . g$5992$bP4ck)
        (cadr . g$5991$bP4ck)
        (caar . g$5990$bP4ck)
        (cdr . g$12336$bP4ck)
        (car . g$12335$bP4ck)
        (boolean? . g$12334$bP4ck)
        (boolean=? . g$6067$bP4ck)
        (atan . g$12333$bP4ck)
        (assertion-violation . g$12332$bP4ck)
        (asin . g$12331$bP4ck)
        (apply . g$12330$bP4ck)
        (append . g$12329$bP4ck)
        (angle . g$12328$bP4ck)
        (acos . g$12327$bP4ck)
        (abs . g$12326$bP4ck)
        (/ . g$12325$bP4ck)
        (* . g$12324$bP4ck)
        (- . g$12323$bP4ck)
        (+ . g$12322$bP4ck)
        (>= . g$12321$bP4ck)
        (> . g$12320$bP4ck)
        (= . g$12319$bP4ck)
        (<= . g$12318$bP4ck)
        (< . g$12317$bP4ck)
        (&no-nans . g$12285$bP4ck)
        (&no-infinities . g$12284$bP4ck)
        (&i/o-encoding . g$12283$bP4ck)
        (&i/o-decoding . g$12282$bP4ck)
        (&i/o-port . g$12281$bP4ck)
        (&i/o-file-does-not-exist . g$12280$bP4ck)
        (&i/o-file-already-exists . g$12279$bP4ck)
        (&i/o-file-is-read-only . g$12278$bP4ck)
        (&i/o-file-protection . g$12277$bP4ck)
        (&i/o-filename . g$12276$bP4ck)
        (&i/o-invalid-position . g$12275$bP4ck)
        (&i/o-write . g$12274$bP4ck)
        (&i/o-read . g$12273$bP4ck)
        (&i/o . g$12272$bP4ck)
        (&non-continuable . g$12271$bP4ck)
        (&undefined . g$12270$bP4ck)
        (&syntax . g$12269$bP4ck)
        (&lexical . g$12268$bP4ck)
        (&implementation-restriction . g$12267$bP4ck)
        (&who . g$12266$bP4ck)
        (&irritants . g$12265$bP4ck)
        (&assertion . g$12264$bP4ck)
        (&violation . g$12263$bP4ck)
        (&error . g$12262$bP4ck)
        (&serious . g$12261$bP4ck)
        (&warning . g$12260$bP4ck)
        (&message . g$12259$bP4ck)
        (&condition . g$12258$bP4ck)
        (define-condition-type . g$12257$bP4ck)
        (define-enumeration . g$12256$bP4ck)
        (define-record-type . g$12255$bP4ck)
        (parent-rtd . g$12254$bP4ck)
        (nongenerative . g$12253$bP4ck)
        (opaque . g$12252$bP4ck)
        (sealed . g$12251$bP4ck)
        (protocol . g$12250$bP4ck)
        (parent . g$12249$bP4ck)
        (immutable . g$12248$bP4ck)
        (mutable . g$12247$bP4ck)
        (fields . g$12246$bP4ck)
        (error-handling-mode . g$12245$bP4ck)
        (file-options . g$12244$bP4ck)
        (buffer-mode . g$12243$bP4ck)
        (eol-style . g$12242$bP4ck)
        (guard . g$12241$bP4ck)
        (unsyntax-splicing . g$12235$bP4ck)
        (unsyntax . g$12234$bP4ck)
        (unquote-splicing . g$12233$bP4ck)
        (unquote . g$12232$bP4ck)
        (_ . g$12231$bP4ck)
        (else . g$12230$bP4ck)
        (=> . g$12229$bP4ck)
        (... . g$12228$bP4ck)
        (assert . g$12227$bP4ck)
        (endianness . g$12226$bP4ck)
        (or . g$12223$bP4ck)
        (and . g$12222$bP4ck)
        (do . g$12221$bP4ck)
        (cond . g$12220$bP4ck)
        (let* . g$12219$bP4ck)
        (let . g$12218$bP4ck)
        (identifier-syntax . g$12217$bP4ck)
        (with-syntax . g$12216$bP4ck)
        (quasisyntax . g$12215$bP4ck)
        (quasiquote . g$12214$bP4ck)
        (syntax-rules . g$12213$bP4ck)
        (let-values . g$12209$bP4ck)
        (let*-values . g$12208$bP4ck)
        (record-constructor-descriptor . g$12207$bP4ck)
        (record-type-descriptor . g$12206$bP4ck)
        (case . g$12204$bP4ck)
        (unless . g$12202$bP4ck)
        (when . g$12201$bP4ck)
        (if . g$12200$bP4ck)
        (letrec* . g$12199$bP4ck)
        (letrec . g$12198$bP4ck)
        (case-lambda . g$12196$bP4ck)
        (lambda . g$12195$bP4ck)
        (syntax . g$12194$bP4ck)
        (syntax-case . g$12193$bP4ck)
        (quote . g$12192$bP4ck)
        (letrec-syntax . g$12190$bP4ck)
        (let-syntax . g$12189$bP4ck)
        (set! . g$12188$bP4ck)
        (begin . g$12184$bP4ck)
        (define-syntax . g$12182$bP4ck)
        (define . g$12181$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12782$bP4ck
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$9168$bP4ck)
        (scheme-report-environment . g$9141$bP4ck)
        (quotient . g$6913$bP4ck)
        (null-environment . g$9140$bP4ck)
        (remainder . g$6914$bP4ck)
        (modulo . g$6915$bP4ck)
        (inexact->exact . g$6910$bP4ck)
        (force . g$6917$bP4ck)
        (exact->inexact . g$6911$bP4ck)
        (delay . g$12225$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12783$bP4ck
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$12221$bP4ck)
        (unless . g$12202$bP4ck)
        (when . g$12201$bP4ck)
        (case-lambda . g$12196$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12784$bP4ck
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9143$bP4ck) (environment . g$9139$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12785$bP4ck
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12555$bP4ck) (set-car! . g$12554$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12786$bP4ck
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12557$bP4ck) (string-set! . g$12556$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12787$bP4ck
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12558$bP4ck) (command-line . g$12145$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12788$bP4ck
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8763$bP4ck)
        (identifier? . g$9162$bP4ck)
        (generate-temporaries . g$9151$bP4ck)
        (free-identifier=? . g$9152$bP4ck)
        (syntax->datum . g$9164$bP4ck)
        (datum->syntax . g$9163$bP4ck)
        (bound-identifier=? . g$9153$bP4ck)
        (syntax-violation . g$9161$bP4ck)
        (unsyntax-splicing . g$12235$bP4ck)
        (unsyntax . g$12234$bP4ck)
        (_ . g$12231$bP4ck)
        (... . g$12228$bP4ck)
        (with-syntax . g$12216$bP4ck)
        (quasisyntax . g$12215$bP4ck)
        (syntax . g$12194$bP4ck)
        (syntax-case . g$12193$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12789$bP4ck
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6568$bP4ck)
        (file-exists? . g$6567$bP4ck)
        (make-i/o-write-error . g$7240$bP4ck)
        (make-i/o-read-error . g$7226$bP4ck)
        (make-i/o-port-error . g$7345$bP4ck)
        (make-i/o-invalid-position-error . g$7255$bP4ck)
        (make-i/o-filename-error . g$7272$bP4ck)
        (make-i/o-file-protection-error . g$7288$bP4ck)
        (make-i/o-file-is-read-only-error . g$7302$bP4ck)
        (make-i/o-file-does-not-exist-error . g$7330$bP4ck)
        (make-i/o-file-already-exists-error . g$7316$bP4ck)
        (make-i/o-error . g$7212$bP4ck)
        (i/o-write-error? . g$7241$bP4ck)
        (i/o-read-error? . g$7227$bP4ck)
        (i/o-port-error? . g$7347$bP4ck)
        (i/o-invalid-position-error? . g$7257$bP4ck)
        (i/o-error-position . g$7258$bP4ck)
        (i/o-filename-error? . g$7274$bP4ck)
        (i/o-file-protection-error? . g$7289$bP4ck)
        (i/o-file-is-read-only-error? . g$7303$bP4ck)
        (i/o-file-does-not-exist-error? . g$7331$bP4ck)
        (i/o-file-already-exists-error? . g$7317$bP4ck)
        (i/o-error? . g$7213$bP4ck)
        (i/o-error-port . g$7348$bP4ck)
        (i/o-error-filename . g$7275$bP4ck)
        (&i/o-port . g$12281$bP4ck)
        (&i/o-file-does-not-exist . g$12280$bP4ck)
        (&i/o-file-already-exists . g$12279$bP4ck)
        (&i/o-file-is-read-only . g$12278$bP4ck)
        (&i/o-file-protection . g$12277$bP4ck)
        (&i/o-filename . g$12276$bP4ck)
        (&i/o-invalid-position . g$12275$bP4ck)
        (&i/o-write . g$12274$bP4ck)
        (&i/o-read . g$12273$bP4ck)
        (&i/o . g$12272$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12790$bP4ck
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12645$bP4ck)
        (vector-sort . g$12644$bP4ck)
        (list-sort . g$6934$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12791$bP4ck
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$6020$bP4ck)
        (vector? . g$12424$bP4ck)
        (vector-set! . g$12423$bP4ck)
        (vector-ref . g$12422$bP4ck)
        (vector-map . g$12421$bP4ck)
        (vector-length . g$12420$bP4ck)
        (vector-for-each . g$12419$bP4ck)
        (vector-fill! . g$12418$bP4ck)
        (vector->list . g$12417$bP4ck)
        (vector . g$12416$bP4ck)
        (values . g$12415$bP4ck)
        (truncate . g$12414$bP4ck)
        (tan . g$12413$bP4ck)
        (symbol? . g$12412$bP4ck)
        (symbol=? . g$6066$bP4ck)
        (symbol->string . g$12411$bP4ck)
        (substring . g$12410$bP4ck)
        (string? . g$12409$bP4ck)
        (string>? . g$6063$bP4ck)
        (string>=? . g$6065$bP4ck)
        (string=? . g$6061$bP4ck)
        (string<? . g$6062$bP4ck)
        (string<=? . g$6064$bP4ck)
        (string-ref . g$12408$bP4ck)
        (string-length . g$12407$bP4ck)
        (string-for-each . g$12406$bP4ck)
        (string-copy . g$12405$bP4ck)
        (string-append . g$12404$bP4ck)
        (string->symbol . g$12403$bP4ck)
        (string->number . g$12402$bP4ck)
        (string->list . g$12401$bP4ck)
        (string . g$12400$bP4ck)
        (sqrt . g$12399$bP4ck)
        (sin . g$12398$bP4ck)
        (round . g$12397$bP4ck)
        (reverse . g$12396$bP4ck)
        (real? . g$12395$bP4ck)
        (real-valued? . g$12394$bP4ck)
        (real-part . g$12393$bP4ck)
        (rationalize . g$6107$bP4ck)
        (rational? . g$12392$bP4ck)
        (rational-valued? . g$12391$bP4ck)
        (procedure? . g$12390$bP4ck)
        (positive? . g$6018$bP4ck)
        (pair? . g$12389$bP4ck)
        (odd? . g$6022$bP4ck)
        (numerator . g$12388$bP4ck)
        (number? . g$12387$bP4ck)
        (number->string . g$12386$bP4ck)
        (null? . g$12385$bP4ck)
        (not . g$12384$bP4ck)
        (negative? . g$6019$bP4ck)
        (nan? . g$12383$bP4ck)
        (min . g$6024$bP4ck)
        (max . g$6023$bP4ck)
        (map . g$5872$bP4ck)
        (make-vector . g$12382$bP4ck)
        (make-string . g$12381$bP4ck)
        (make-rectangular . g$12380$bP4ck)
        (make-polar . g$12379$bP4ck)
        (magnitude . g$12378$bP4ck)
        (log . g$12377$bP4ck)
        (list? . g$12376$bP4ck)
        (list-tail . g$5852$bP4ck)
        (list-ref . g$5853$bP4ck)
        (list->vector . g$12375$bP4ck)
        (list->string . g$12374$bP4ck)
        (list . g$12373$bP4ck)
        (length . g$12372$bP4ck)
        (lcm . g$6026$bP4ck)
        (integer? . g$12371$bP4ck)
        (integer-valued? . g$12370$bP4ck)
        (integer->char . g$12369$bP4ck)
        (infinite? . g$12368$bP4ck)
        (inexact? . g$12367$bP4ck)
        (inexact . g$12366$bP4ck)
        (imag-part . g$12365$bP4ck)
        (gcd . g$6025$bP4ck)
        (for-each . g$5873$bP4ck)
        (floor . g$12364$bP4ck)
        (finite? . g$12363$bP4ck)
        (expt . g$12362$bP4ck)
        (exp . g$12361$bP4ck)
        (exact? . g$12360$bP4ck)
        (exact-integer-sqrt . g$12359$bP4ck)
        (exact . g$12358$bP4ck)
        (even? . g$6021$bP4ck)
        (error . g$12357$bP4ck)
        (eqv? . g$12356$bP4ck)
        (equal? . g$12355$bP4ck)
        (eq? . g$12354$bP4ck)
        (dynamic-wind . g$12353$bP4ck)
        (div0-and-mod0 . g$12352$bP4ck)
        (mod0 . g$12351$bP4ck)
        (div0 . g$12350$bP4ck)
        (div-and-mod . g$12349$bP4ck)
        (mod . g$12348$bP4ck)
        (div . g$12347$bP4ck)
        (denominator . g$12346$bP4ck)
        (cos . g$12345$bP4ck)
        (cons . g$12344$bP4ck)
        (complex? . g$12343$bP4ck)
        (char? . g$12342$bP4ck)
        (char>? . g$6104$bP4ck)
        (char>=? . g$6106$bP4ck)
        (char=? . g$6102$bP4ck)
        (char<? . g$6103$bP4ck)
        (char<=? . g$6105$bP4ck)
        (char->integer . g$12341$bP4ck)
        (ceiling . g$12340$bP4ck)
        (call-with-values . g$12339$bP4ck)
        (call/cc . g$12338$bP4ck)
        (call-with-current-continuation . g$12337$bP4ck)
        (cddddr . g$6017$bP4ck)
        (cdddar . g$6016$bP4ck)
        (cddadr . g$6015$bP4ck)
        (cddaar . g$6014$bP4ck)
        (cdaddr . g$6013$bP4ck)
        (cdadar . g$6012$bP4ck)
        (cdaadr . g$6011$bP4ck)
        (cdaaar . g$6010$bP4ck)
        (cadddr . g$6009$bP4ck)
        (caddar . g$6008$bP4ck)
        (cadadr . g$6007$bP4ck)
        (cadaar . g$6006$bP4ck)
        (caaddr . g$6005$bP4ck)
        (caadar . g$6004$bP4ck)
        (caaadr . g$6003$bP4ck)
        (caaaar . g$6002$bP4ck)
        (cdddr . g$6001$bP4ck)
        (cddar . g$6000$bP4ck)
        (cdadr . g$5999$bP4ck)
        (cdaar . g$5998$bP4ck)
        (caddr . g$5997$bP4ck)
        (cadar . g$5996$bP4ck)
        (caadr . g$5995$bP4ck)
        (caaar . g$5994$bP4ck)
        (cddr . g$5993$bP4ck)
        (cdar . g$5992$bP4ck)
        (cadr . g$5991$bP4ck)
        (caar . g$5990$bP4ck)
        (cdr . g$12336$bP4ck)
        (car . g$12335$bP4ck)
        (boolean? . g$12334$bP4ck)
        (boolean=? . g$6067$bP4ck)
        (atan . g$12333$bP4ck)
        (assertion-violation . g$12332$bP4ck)
        (asin . g$12331$bP4ck)
        (apply . g$12330$bP4ck)
        (append . g$12329$bP4ck)
        (angle . g$12328$bP4ck)
        (acos . g$12327$bP4ck)
        (abs . g$12326$bP4ck)
        (/ . g$12325$bP4ck)
        (* . g$12324$bP4ck)
        (- . g$12323$bP4ck)
        (+ . g$12322$bP4ck)
        (>= . g$12321$bP4ck)
        (> . g$12320$bP4ck)
        (= . g$12319$bP4ck)
        (<= . g$12318$bP4ck)
        (< . g$12317$bP4ck)
        (unquote-splicing . g$12233$bP4ck)
        (unquote . g$12232$bP4ck)
        (_ . g$12231$bP4ck)
        (else . g$12230$bP4ck)
        (=> . g$12229$bP4ck)
        (... . g$12228$bP4ck)
        (assert . g$12227$bP4ck)
        (or . g$12223$bP4ck)
        (and . g$12222$bP4ck)
        (cond . g$12220$bP4ck)
        (let* . g$12219$bP4ck)
        (let . g$12218$bP4ck)
        (identifier-syntax . g$12217$bP4ck)
        (quasiquote . g$12214$bP4ck)
        (syntax-rules . g$12213$bP4ck)
        (let-values . g$12209$bP4ck)
        (let*-values . g$12208$bP4ck)
        (case . g$12204$bP4ck)
        (if . g$12200$bP4ck)
        (letrec* . g$12199$bP4ck)
        (letrec . g$12198$bP4ck)
        (lambda . g$12195$bP4ck)
        (quote . g$12192$bP4ck)
        (letrec-syntax . g$12190$bP4ck)
        (let-syntax . g$12189$bP4ck)
        (set! . g$12188$bP4ck)
        (begin . g$12184$bP4ck)
        (define-syntax . g$12182$bP4ck)
        (define . g$12181$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12792$bP4ck
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5877$bP4ck)
        (remv . g$5878$bP4ck)
        (remp . g$5858$bP4ck)
        (remq . g$5879$bP4ck)
        (partition . g$5857$bP4ck)
        (memv . g$5865$bP4ck)
        (memq . g$5864$bP4ck)
        (memp . g$5867$bP4ck)
        (member . g$5866$bP4ck)
        (exists . g$5871$bP4ck)
        (for-all . g$5870$bP4ck)
        (fold-right . g$5876$bP4ck)
        (fold-left . g$5875$bP4ck)
        (find . g$5856$bP4ck)
        (filter . g$5859$bP4ck)
        (cons* . g$5874$bP4ck)
        (assv . g$5861$bP4ck)
        (assq . g$5860$bP4ck)
        (assp . g$5863$bP4ck)
        (assoc . g$5862$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12793$bP4ck
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7419$bP4ck)
        (call-with-input-file . g$7418$bP4ck)
        (write-char . g$7400$bP4ck)
        (write . g$12631$bP4ck)
        (with-output-to-file . g$7417$bP4ck)
        (with-input-from-file . g$7416$bP4ck)
        (read-char . g$7399$bP4ck)
        (read . g$12630$bP4ck)
        (peek-char . g$7398$bP4ck)
        (open-output-file . g$12629$bP4ck)
        (open-input-file . g$12628$bP4ck)
        (newline . g$7420$bP4ck)
        (display . g$12627$bP4ck)
        (close-output-port . g$12626$bP4ck)
        (close-input-port . g$12625$bP4ck)
        (eof-object? . g$12624$bP4ck)
        (eof-object . g$12623$bP4ck)
        (current-error-port . g$12622$bP4ck)
        (current-output-port . g$12621$bP4ck)
        (current-input-port . g$12620$bP4ck)
        (output-port? . g$12619$bP4ck)
        (input-port? . g$12618$bP4ck)
        (make-i/o-write-error . g$7240$bP4ck)
        (make-i/o-read-error . g$7226$bP4ck)
        (make-i/o-port-error . g$7345$bP4ck)
        (make-i/o-invalid-position-error . g$7255$bP4ck)
        (make-i/o-filename-error . g$7272$bP4ck)
        (make-i/o-file-protection-error . g$7288$bP4ck)
        (make-i/o-file-is-read-only-error . g$7302$bP4ck)
        (make-i/o-file-does-not-exist-error . g$7330$bP4ck)
        (make-i/o-file-already-exists-error . g$7316$bP4ck)
        (make-i/o-error . g$7212$bP4ck)
        (i/o-write-error? . g$7241$bP4ck)
        (i/o-read-error? . g$7227$bP4ck)
        (i/o-port-error? . g$7347$bP4ck)
        (i/o-invalid-position-error? . g$7257$bP4ck)
        (i/o-error-position . g$7258$bP4ck)
        (i/o-filename-error? . g$7274$bP4ck)
        (i/o-file-protection-error? . g$7289$bP4ck)
        (i/o-file-is-read-only-error? . g$7303$bP4ck)
        (i/o-file-does-not-exist-error? . g$7331$bP4ck)
        (i/o-file-already-exists-error? . g$7317$bP4ck)
        (i/o-error? . g$7213$bP4ck)
        (i/o-error-port . g$7348$bP4ck)
        (i/o-error-filename . g$7275$bP4ck)
        (&i/o-port . g$12281$bP4ck)
        (&i/o-file-does-not-exist . g$12280$bP4ck)
        (&i/o-file-already-exists . g$12279$bP4ck)
        (&i/o-file-is-read-only . g$12278$bP4ck)
        (&i/o-file-protection . g$12277$bP4ck)
        (&i/o-filename . g$12276$bP4ck)
        (&i/o-invalid-position . g$12275$bP4ck)
        (&i/o-write . g$12274$bP4ck)
        (&i/o-read . g$12273$bP4ck)
        (&i/o . g$12272$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12794$bP4ck
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12578$bP4ck)
        (utf32->string . g$12545$bP4ck)
        (utf16->string . g$12544$bP4ck)
        (utf8->string . g$12543$bP4ck)
        (uint-list->bytevector . g$12542$bP4ck)
        (u8-list->bytevector . g$12541$bP4ck)
        (string->utf8 . g$12540$bP4ck)
        (string->utf32 . g$12539$bP4ck)
        (string->utf16 . g$12538$bP4ck)
        (sint-list->bytevector . g$12537$bP4ck)
        (native-endianness . g$6574$bP4ck)
        (bytevector? . g$12536$bP4ck)
        (bytevector=? . g$12535$bP4ck)
        (bytevector-uint-set! . g$12534$bP4ck)
        (bytevector-uint-ref . g$12533$bP4ck)
        (bytevector-u8-set! . g$12532$bP4ck)
        (bytevector-u8-ref . g$12531$bP4ck)
        (bytevector-u64-set! . g$6595$bP4ck)
        (bytevector-u64-ref . g$6591$bP4ck)
        (bytevector-u64-native-set! . g$6597$bP4ck)
        (bytevector-u64-native-ref . g$6593$bP4ck)
        (bytevector-u32-set! . g$6587$bP4ck)
        (bytevector-u32-ref . g$6583$bP4ck)
        (bytevector-u32-native-set! . g$6589$bP4ck)
        (bytevector-u32-native-ref . g$6585$bP4ck)
        (bytevector-u16-set! . g$6579$bP4ck)
        (bytevector-u16-ref . g$6575$bP4ck)
        (bytevector-u16-native-set! . g$6581$bP4ck)
        (bytevector-u16-native-ref . g$6577$bP4ck)
        (bytevector-sint-set! . g$12530$bP4ck)
        (bytevector-sint-ref . g$12529$bP4ck)
        (bytevector-s8-set! . g$12528$bP4ck)
        (bytevector-s8-ref . g$12527$bP4ck)
        (bytevector-s64-set! . g$6596$bP4ck)
        (bytevector-s64-ref . g$6592$bP4ck)
        (bytevector-s64-native-set! . g$6598$bP4ck)
        (bytevector-s64-native-ref . g$6594$bP4ck)
        (bytevector-s32-set! . g$6588$bP4ck)
        (bytevector-s32-ref . g$6584$bP4ck)
        (bytevector-s32-native-set! . g$6590$bP4ck)
        (bytevector-s32-native-ref . g$6586$bP4ck)
        (bytevector-s16-set! . g$6580$bP4ck)
        (bytevector-s16-ref . g$6576$bP4ck)
        (bytevector-s16-native-set! . g$6582$bP4ck)
        (bytevector-s16-native-ref . g$6578$bP4ck)
        (bytevector-length . g$12526$bP4ck)
        (bytevector-ieee-single-set! . g$12525$bP4ck)
        (bytevector-ieee-single-ref . g$12524$bP4ck)
        (bytevector-ieee-single-native-set! . g$6601$bP4ck)
        (bytevector-ieee-single-native-ref . g$6599$bP4ck)
        (bytevector-ieee-double-set! . g$12523$bP4ck)
        (bytevector-ieee-double-ref . g$12522$bP4ck)
        (bytevector-ieee-double-native-set! . g$6602$bP4ck)
        (bytevector-ieee-double-native-ref . g$6600$bP4ck)
        (bytevector-fill! . g$12521$bP4ck)
        (bytevector-copy! . g$12520$bP4ck)
        (bytevector-copy . g$12519$bP4ck)
        (bytevector->uint-list . g$12518$bP4ck)
        (bytevector->u8-list . g$12517$bP4ck)
        (bytevector->sint-list . g$12516$bP4ck)
        (endianness . g$12226$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12795$bP4ck
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12681$bP4ck)
        (string-titlecase . g$12680$bP4ck)
        (string-normalize-nfkd . g$12679$bP4ck)
        (string-normalize-nfkc . g$12678$bP4ck)
        (string-normalize-nfd . g$12677$bP4ck)
        (string-normalize-nfc . g$12676$bP4ck)
        (string-foldcase . g$12675$bP4ck)
        (string-downcase . g$12674$bP4ck)
        (string-ci>? . g$6994$bP4ck)
        (string-ci>=? . g$6996$bP4ck)
        (string-ci=? . g$6992$bP4ck)
        (string-ci<? . g$6993$bP4ck)
        (string-ci<=? . g$6995$bP4ck)
        (char-whitespace? . g$12673$bP4ck)
        (char-upper-case? . g$12672$bP4ck)
        (char-title-case? . g$12671$bP4ck)
        (char-numeric? . g$12670$bP4ck)
        (char-lower-case? . g$12669$bP4ck)
        (char-general-category . g$12668$bP4ck)
        (char-upcase . g$12667$bP4ck)
        (char-titlecase . g$12666$bP4ck)
        (char-foldcase . g$12665$bP4ck)
        (char-downcase . g$12664$bP4ck)
        (char-ci>? . g$7033$bP4ck)
        (char-ci>=? . g$7035$bP4ck)
        (char-ci=? . g$7031$bP4ck)
        (char-ci<? . g$7032$bP4ck)
        (char-ci<=? . g$7034$bP4ck)
        (char-alphabetic? . g$12663$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12796$bP4ck
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12553$bP4ck)
        (raise-continuable . g$12552$bP4ck)
        (raise . g$12551$bP4ck)
        (guard . g$12241$bP4ck)
        (else . g$12230$bP4ck)
        (=> . g$12229$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12797$bP4ck
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7095$bP4ck)
        (bitwise-reverse-bit-field . g$12434$bP4ck)
        (bitwise-length . g$12433$bP4ck)
        (bitwise-if . g$7089$bP4ck)
        (bitwise-first-bit-set . g$12432$bP4ck)
        (bitwise-copy-bit-field . g$7092$bP4ck)
        (bitwise-copy-bit . g$7090$bP4ck)
        (bitwise-bit-set? . g$12431$bP4ck)
        (bitwise-bit-field . g$7091$bP4ck)
        (bitwise-bit-count . g$12430$bP4ck)
        (bitwise-xor . g$12429$bP4ck)
        (bitwise-ior . g$12428$bP4ck)
        (bitwise-and . g$12427$bP4ck)
        (bitwise-not . g$12426$bP4ck)
        (bitwise-arithmetic-shift-right . g$7094$bP4ck)
        (bitwise-arithmetic-shift-left . g$7093$bP4ck)
        (bitwise-arithmetic-shift . g$12425$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12798$bP4ck
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12469$bP4ck)
        (fxxor . g$12468$bP4ck)
        (fxrotate-bit-field . g$7130$bP4ck)
        (fxreverse-bit-field . g$12467$bP4ck)
        (fxpositive? . g$12466$bP4ck)
        (fxodd? . g$12465$bP4ck)
        (fxnot . g$12464$bP4ck)
        (fxnegative? . g$12463$bP4ck)
        (fxmod0 . g$12462$bP4ck)
        (fxmod . g$12461$bP4ck)
        (fxmin . g$12460$bP4ck)
        (fxmax . g$12459$bP4ck)
        (fxlength . g$12458$bP4ck)
        (fxior . g$12457$bP4ck)
        (fxif . g$7124$bP4ck)
        (fxfirst-bit-set . g$12456$bP4ck)
        (fxeven? . g$12455$bP4ck)
        (fxdiv0-and-mod0 . g$12454$bP4ck)
        (fxdiv0 . g$12453$bP4ck)
        (fxdiv-and-mod . g$12452$bP4ck)
        (fxdiv . g$12451$bP4ck)
        (fxcopy-bit-field . g$7127$bP4ck)
        (fxcopy-bit . g$7125$bP4ck)
        (fxbit-set? . g$12450$bP4ck)
        (fxbit-field . g$7126$bP4ck)
        (fxbit-count . g$12449$bP4ck)
        (fxarithmetic-shift-right . g$7129$bP4ck)
        (fxarithmetic-shift-left . g$7128$bP4ck)
        (fxarithmetic-shift . g$12448$bP4ck)
        (fxand . g$12447$bP4ck)
        (fx>? . g$12446$bP4ck)
        (fx>=? . g$12445$bP4ck)
        (fx=? . g$12444$bP4ck)
        (fx<? . g$12443$bP4ck)
        (fx<=? . g$12442$bP4ck)
        (fx-/carry . g$7122$bP4ck)
        (fx- . g$12441$bP4ck)
        (fx+/carry . g$7123$bP4ck)
        (fx+ . g$12440$bP4ck)
        (fx*/carry . g$7121$bP4ck)
        (fx* . g$12439$bP4ck)
        (greatest-fixnum . g$12438$bP4ck)
        (least-fixnum . g$12437$bP4ck)
        (fixnum-width . g$12436$bP4ck)
        (fixnum? . g$12435$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12799$bP4ck
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7198$bP4ck)
        (no-infinities-violation? . g$7184$bP4ck)
        (make-no-nans-violation . g$7197$bP4ck)
        (make-no-infinities-violation . g$7183$bP4ck)
        (real->flonum . g$12515$bP4ck)
        (flzero? . g$12514$bP4ck)
        (fltruncate . g$12513$bP4ck)
        (fltan . g$12512$bP4ck)
        (flsqrt . g$12511$bP4ck)
        (flsin . g$12510$bP4ck)
        (flround . g$12509$bP4ck)
        (flpositive? . g$12508$bP4ck)
        (flonum? . g$12507$bP4ck)
        (flodd? . g$12506$bP4ck)
        (flnumerator . g$12505$bP4ck)
        (flnegative? . g$12504$bP4ck)
        (flnan? . g$12503$bP4ck)
        (flmod0 . g$12502$bP4ck)
        (flmod . g$12501$bP4ck)
        (flmin . g$12500$bP4ck)
        (flmax . g$12499$bP4ck)
        (fllog . g$12498$bP4ck)
        (flinteger? . g$12497$bP4ck)
        (flinfinite? . g$12496$bP4ck)
        (flfloor . g$12495$bP4ck)
        (flfinite? . g$12494$bP4ck)
        (flexpt . g$12493$bP4ck)
        (flexp . g$12492$bP4ck)
        (fleven? . g$12491$bP4ck)
        (fldiv0-and-mod0 . g$12490$bP4ck)
        (fldiv0 . g$12489$bP4ck)
        (fldiv-and-mod . g$12488$bP4ck)
        (fldiv . g$12487$bP4ck)
        (fldenominator . g$12486$bP4ck)
        (flcos . g$12485$bP4ck)
        (flceiling . g$12484$bP4ck)
        (flatan . g$12483$bP4ck)
        (flasin . g$12482$bP4ck)
        (flacos . g$12481$bP4ck)
        (flabs . g$12480$bP4ck)
        (fl>? . g$12479$bP4ck)
        (fl>=? . g$12478$bP4ck)
        (fl=? . g$12477$bP4ck)
        (fl<? . g$12476$bP4ck)
        (fl<=? . g$12475$bP4ck)
        (fl/ . g$12474$bP4ck)
        (fl- . g$12473$bP4ck)
        (fl+ . g$12472$bP4ck)
        (fl* . g$12471$bP4ck)
        (fixnum->flonum . g$12470$bP4ck)
        (&no-nans . g$12285$bP4ck)
        (&no-infinities . g$12284$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12800$bP4ck
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12643$bP4ck)
        (string-ci-hash . g$12642$bP4ck)
        (string-hash . g$12641$bP4ck)
        (equal-hash . g$12640$bP4ck)
        (hashtable-equivalence-function . g$12639$bP4ck)
        (make-hashtable . g$12638$bP4ck)
        (hashtable-hash-function . g$12637$bP4ck)
        (make-eqv-hashtable . g$6536$bP4ck)
        (make-eq-hashtable . g$6535$bP4ck)
        (hashtable? . g$12636$bP4ck)
        (hashtable-update! . g$6542$bP4ck)
        (hashtable-size . g$6537$bP4ck)
        (hashtable-set! . g$6539$bP4ck)
        (hashtable-ref . g$6538$bP4ck)
        (hashtable-mutable? . g$12635$bP4ck)
        (hashtable-keys . g$12634$bP4ck)
        (hashtable-entries . g$12633$bP4ck)
        (hashtable-delete! . g$6540$bP4ck)
        (hashtable-copy . g$12632$bP4ck)
        (hashtable-contains? . g$6541$bP4ck)
        (hashtable-clear! . g$6543$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12801$bP4ck
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12624$bP4ck)
        (eof-object . g$12623$bP4ck)
        (current-error-port . g$12622$bP4ck)
        (current-output-port . g$12621$bP4ck)
        (current-input-port . g$12620$bP4ck)
        (output-port? . g$12619$bP4ck)
        (input-port? . g$12618$bP4ck)
        (utf-8-codec . g$12617$bP4ck)
        (utf-16-codec . g$12616$bP4ck)
        (transcoder-error-handling-mode . g$12615$bP4ck)
        (transcoder-eol-style . g$12614$bP4ck)
        (transcoder-codec . g$12613$bP4ck)
        (transcoded-port . g$12612$bP4ck)
        (textual-port? . g$12611$bP4ck)
        (string->bytevector . g$12610$bP4ck)
        (standard-output-port . g$12609$bP4ck)
        (standard-input-port . g$12608$bP4ck)
        (standard-error-port . g$12607$bP4ck)
        (set-port-position! . g$12606$bP4ck)
        (put-u8 . g$12605$bP4ck)
        (put-string . g$12604$bP4ck)
        (put-datum . g$12603$bP4ck)
        (put-char . g$12602$bP4ck)
        (put-bytevector . g$12601$bP4ck)
        (port? . g$7385$bP4ck)
        (port-transcoder . g$12600$bP4ck)
        (port-position . g$12599$bP4ck)
        (port-has-set-port-position!? . g$12598$bP4ck)
        (port-has-port-position? . g$12597$bP4ck)
        (port-eof? . g$12596$bP4ck)
        (output-port-buffer-mode . g$12595$bP4ck)
        (open-string-output-port . g$7384$bP4ck)
        (open-string-input-port . g$12594$bP4ck)
        (open-file-output-port . g$12593$bP4ck)
        (open-file-input/output-port . g$12592$bP4ck)
        (open-file-input-port . g$12591$bP4ck)
        (open-bytevector-output-port . g$12590$bP4ck)
        (open-bytevector-input-port . g$12589$bP4ck)
        (native-transcoder . g$12588$bP4ck)
        (native-eol-style . g$12587$bP4ck)
        (make-transcoder . g$12586$bP4ck)
        (latin-1-codec . g$12585$bP4ck)
        (make-i/o-write-error . g$7240$bP4ck)
        (make-i/o-read-error . g$7226$bP4ck)
        (make-i/o-port-error . g$7345$bP4ck)
        (make-i/o-invalid-position-error . g$7255$bP4ck)
        (make-i/o-filename-error . g$7272$bP4ck)
        (make-i/o-file-protection-error . g$7288$bP4ck)
        (make-i/o-file-is-read-only-error . g$7302$bP4ck)
        (make-i/o-file-does-not-exist-error . g$7330$bP4ck)
        (make-i/o-file-already-exists-error . g$7316$bP4ck)
        (make-i/o-error . g$7212$bP4ck)
        (make-i/o-encoding-error . g$7376$bP4ck)
        (make-i/o-decoding-error . g$7361$bP4ck)
        (make-custom-textual-output-port . g$12584$bP4ck)
        (make-custom-textual-input/output-port . g$12583$bP4ck)
        (make-custom-textual-input-port . g$12582$bP4ck)
        (make-custom-binary-output-port . g$12581$bP4ck)
        (make-custom-binary-input/output-port . g$12580$bP4ck)
        (make-custom-binary-input-port . g$12579$bP4ck)
        (lookahead-u8 . g$12577$bP4ck)
        (lookahead-char . g$12576$bP4ck)
        (i/o-write-error? . g$7241$bP4ck)
        (i/o-read-error? . g$7227$bP4ck)
        (i/o-port-error? . g$7347$bP4ck)
        (i/o-invalid-position-error? . g$7257$bP4ck)
        (i/o-error-position . g$7258$bP4ck)
        (i/o-filename-error? . g$7274$bP4ck)
        (i/o-file-protection-error? . g$7289$bP4ck)
        (i/o-file-is-read-only-error? . g$7303$bP4ck)
        (i/o-file-does-not-exist-error? . g$7331$bP4ck)
        (i/o-file-already-exists-error? . g$7317$bP4ck)
        (i/o-error? . g$7213$bP4ck)
        (i/o-error-port . g$7348$bP4ck)
        (i/o-error-filename . g$7275$bP4ck)
        (i/o-encoding-error? . g$7378$bP4ck)
        (i/o-encoding-error-char . g$7379$bP4ck)
        (i/o-decoding-error? . g$7362$bP4ck)
        (get-u8 . g$12575$bP4ck)
        (get-string-n! . g$12574$bP4ck)
        (get-string-n . g$12573$bP4ck)
        (get-string-all . g$12572$bP4ck)
        (get-line . g$12571$bP4ck)
        (get-datum . g$12570$bP4ck)
        (get-char . g$12569$bP4ck)
        (get-bytevector-some . g$12568$bP4ck)
        (get-bytevector-n! . g$12567$bP4ck)
        (get-bytevector-n . g$12566$bP4ck)
        (get-bytevector-all . g$12565$bP4ck)
        (flush-output-port . g$12564$bP4ck)
        (close-port . g$12563$bP4ck)
        (call-with-string-output-port . g$7386$bP4ck)
        (call-with-port . g$7387$bP4ck)
        (call-with-bytevector-output-port . g$12562$bP4ck)
        (bytevector->string . g$12561$bP4ck)
        (buffer-mode? . g$12560$bP4ck)
        (binary-port? . g$12559$bP4ck)
        (&i/o-encoding . g$12283$bP4ck)
        (&i/o-decoding . g$12282$bP4ck)
        (&i/o-port . g$12281$bP4ck)
        (&i/o-file-does-not-exist . g$12280$bP4ck)
        (&i/o-file-already-exists . g$12279$bP4ck)
        (&i/o-file-is-read-only . g$12278$bP4ck)
        (&i/o-file-protection . g$12277$bP4ck)
        (&i/o-filename . g$12276$bP4ck)
        (&i/o-invalid-position . g$12275$bP4ck)
        (&i/o-write . g$12274$bP4ck)
        (&i/o-read . g$12273$bP4ck)
        (&i/o . g$12272$bP4ck)
        (error-handling-mode . g$12245$bP4ck)
        (file-options . g$12244$bP4ck)
        (buffer-mode . g$12243$bP4ck)
        (eol-style . g$12242$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12802$bP4ck
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7484$bP4ck)
        (enum-set=? . g$7491$bP4ck)
        (enum-set-universe . g$7485$bP4ck)
        (enum-set-union . g$7492$bP4ck)
        (enum-set-subset? . g$7490$bP4ck)
        (enum-set-projection . g$7496$bP4ck)
        (enum-set-member? . g$7489$bP4ck)
        (enum-set-intersection . g$7493$bP4ck)
        (enum-set-indexer . g$7486$bP4ck)
        (enum-set-difference . g$7494$bP4ck)
        (enum-set-constructor . g$7487$bP4ck)
        (enum-set-complement . g$7495$bP4ck)
        (enum-set->list . g$7488$bP4ck)
        (define-enumeration . g$12256$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12803$bP4ck
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6822$bP4ck)
        (warning? . g$6733$bP4ck)
        (violation? . g$6775$bP4ck)
        (undefined-violation? . g$6899$bP4ck)
        (syntax-violation? . g$6883$bP4ck)
        (syntax-violation-subform . g$6885$bP4ck)
        (syntax-violation-form . g$6884$bP4ck)
        (syntax-violation . g$9161$bP4ck)
        (simple-conditions . g$12550$bP4ck)
        (serious-condition? . g$6747$bP4ck)
        (non-continuable-violation? . g$6837$bP4ck)
        (message-condition? . g$6718$bP4ck)
        (make-who-condition . g$6820$bP4ck)
        (make-warning . g$6732$bP4ck)
        (make-violation . g$6774$bP4ck)
        (make-undefined-violation . g$6898$bP4ck)
        (make-syntax-violation . g$6880$bP4ck)
        (make-serious-condition . g$6746$bP4ck)
        (make-non-continuable-violation . g$6836$bP4ck)
        (make-message-condition . g$6716$bP4ck)
        (make-lexical-violation . g$6864$bP4ck)
        (make-irritants-condition . g$6803$bP4ck)
        (make-implementation-restriction-violation . g$6850$bP4ck)
        (make-error . g$6760$bP4ck)
        (make-assertion-violation . g$6788$bP4ck)
        (lexical-violation? . g$6865$bP4ck)
        (irritants-condition? . g$6805$bP4ck)
        (implementation-restriction-violation? . g$6851$bP4ck)
        (error? . g$6761$bP4ck)
        (condition-who . g$6823$bP4ck)
        (condition-predicate . g$12549$bP4ck)
        (condition-message . g$6719$bP4ck)
        (condition-irritants . g$6806$bP4ck)
        (condition-accessor . g$12548$bP4ck)
        (condition . g$12547$bP4ck)
        (assertion-violation? . g$6789$bP4ck)
        (condition? . g$12546$bP4ck)
        (&non-continuable . g$12271$bP4ck)
        (&undefined . g$12270$bP4ck)
        (&syntax . g$12269$bP4ck)
        (&lexical . g$12268$bP4ck)
        (&implementation-restriction . g$12267$bP4ck)
        (&who . g$12266$bP4ck)
        (&irritants . g$12265$bP4ck)
        (&assertion . g$12264$bP4ck)
        (&violation . g$12263$bP4ck)
        (&error . g$12262$bP4ck)
        (&serious . g$12261$bP4ck)
        (&warning . g$12260$bP4ck)
        (&message . g$12259$bP4ck)
        (&condition . g$12258$bP4ck)
        (define-condition-type . g$12257$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12804$bP4ck
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12655$bP4ck)
        (record-type-uid . g$12654$bP4ck)
        (record-type-sealed? . g$12653$bP4ck)
        (record-type-parent . g$12652$bP4ck)
        (record-type-opaque? . g$12651$bP4ck)
        (record-type-name . g$12650$bP4ck)
        (record-type-generative? . g$12649$bP4ck)
        (record-type-field-names . g$12648$bP4ck)
        (record-rtd . g$12647$bP4ck)
        (record-field-mutable? . g$12646$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12805$bP4ck
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12662$bP4ck)
        (record-predicate . g$12661$bP4ck)
        (record-mutator . g$12660$bP4ck)
        (record-constructor . g$12659$bP4ck)
        (record-accessor . g$12658$bP4ck)
        (make-record-type-descriptor . g$12657$bP4ck)
        (make-record-constructor-descriptor . g$12656$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12806$bP4ck
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12255$bP4ck)
        (parent-rtd . g$12254$bP4ck)
        (nongenerative . g$12253$bP4ck)
        (opaque . g$12252$bP4ck)
        (sealed . g$12251$bP4ck)
        (protocol . g$12250$bP4ck)
        (parent . g$12249$bP4ck)
        (immutable . g$12248$bP4ck)
        (mutable . g$12247$bP4ck)
        (fields . g$12246$bP4ck)
        (record-constructor-descriptor . g$12207$bP4ck)
        (record-type-descriptor . g$12206$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7514$bP4ck
      'g$12807$bP4ck
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9033$bP4ck)
        (&no-nans-rcd . g$12771$bP4ck)
        (&no-nans-rtd . g$12770$bP4ck)
        (&no-infinities-rcd . g$12769$bP4ck)
        (&no-infinities-rtd . g$12768$bP4ck)
        (&i/o-encoding-rcd . g$12767$bP4ck)
        (&i/o-encoding-rtd . g$12766$bP4ck)
        (&i/o-decoding-rcd . g$12765$bP4ck)
        (&i/o-decoding-rtd . g$12764$bP4ck)
        (&i/o-port-rcd . g$12763$bP4ck)
        (&i/o-port-rtd . g$12762$bP4ck)
        (&i/o-file-does-not-exist-rcd . g$12761$bP4ck)
        (&i/o-file-does-not-exist-rtd . g$12760$bP4ck)
        (&i/o-file-already-exists-rcd . g$12759$bP4ck)
        (&i/o-file-already-exists-rtd . g$12758$bP4ck)
        (&i/o-file-is-read-only-rcd . g$12757$bP4ck)
        (&i/o-file-is-read-only-rtd . g$12756$bP4ck)
        (&i/o-file-protection-rcd . g$12755$bP4ck)
        (&i/o-file-protection-rtd . g$12754$bP4ck)
        (&i/o-filename-rcd . g$12753$bP4ck)
        (&i/o-filename-rtd . g$12752$bP4ck)
        (&i/o-invalid-position-rcd . g$12751$bP4ck)
        (&i/o-invalid-position-rtd . g$12750$bP4ck)
        (&i/o-write-rcd . g$12749$bP4ck)
        (&i/o-write-rtd . g$12748$bP4ck)
        (&i/o-read-rcd . g$12747$bP4ck)
        (&i/o-read-rtd . g$12746$bP4ck)
        (&i/o-rcd . g$12745$bP4ck)
        (&i/o-rtd . g$12744$bP4ck)
        (&undefined-rcd . g$12743$bP4ck)
        (&undefined-rtd . g$12742$bP4ck)
        (&syntax-rcd . g$12741$bP4ck)
        (&syntax-rtd . g$12740$bP4ck)
        (&lexical-rcd . g$12739$bP4ck)
        (&lexical-rtd . g$12738$bP4ck)
        (&implementation-restriction-rcd . g$12737$bP4ck)
        (&implementation-restriction-rtd . g$12736$bP4ck)
        (&non-continuable-rcd . g$12735$bP4ck)
        (&non-continuable-rtd . g$12734$bP4ck)
        (&who-rcd . g$12733$bP4ck)
        (&who-rtd . g$12732$bP4ck)
        (&irritants-rcd . g$12731$bP4ck)
        (&irritants-rtd . g$12730$bP4ck)
        (&assertion-rcd . g$12729$bP4ck)
        (&assertion-rtd . g$12728$bP4ck)
        (&violation-rcd . g$12727$bP4ck)
        (&violation-rtd . g$12726$bP4ck)
        (&error-rcd . g$12725$bP4ck)
        (&error-rtd . g$12724$bP4ck)
        (&serious-rcd . g$12723$bP4ck)
        (&serious-rtd . g$12722$bP4ck)
        (&warning-rcd . g$12721$bP4ck)
        (&warning-rtd . g$12720$bP4ck)
        (&message-rcd . g$12719$bP4ck)
        (&message-rtd . g$12718$bP4ck)
        (&condition-rcd . g$12717$bP4ck)
        (&condition-rtd . g$12716$bP4ck)
        (library-letrec* . g$12715$bP4ck)
        (annotation-stripped . g$12714$bP4ck)
        (annotation-source . g$12713$bP4ck)
        (annotation-expression . g$12712$bP4ck)
        (annotation? . g$12711$bP4ck)
        (read-annotated . g$12710$bP4ck)
        (tanh . g$12709$bP4ck)
        (cosh . g$12708$bP4ck)
        (sinh . g$12707$bP4ck)
        (make-guid . g$12706$bP4ck)
        (unspecified? . g$12705$bP4ck)
        (make-list . g$5855$bP4ck)
        (last-pair . g$5854$bP4ck)
        (load-r5rs . g$12704$bP4ck)
        (license . g$12703$bP4ck)
        (stacktrace . g$12702$bP4ck)
        (ironscheme-build . g$12149$bP4ck)
        (define-clr-class-internal . g$12701$bP4ck)
        (clr-field-set!-internal . g$12700$bP4ck)
        (clr-field-get-internal . g$12699$bP4ck)
        (clr-cast-internal . g$12698$bP4ck)
        (clr-call-internal . g$12697$bP4ck)
        (clr-new-internal . g$12696$bP4ck)
        (clr-new-array-internal . g$12695$bP4ck)
        (clr-is-internal . g$12694$bP4ck)
        (clr-reference-internal . g$12693$bP4ck)
        (clr-using-internal . g$12692$bP4ck)
        (syntax-error . g$9158$bP4ck)
        (syntax-dispatch . g$9028$bP4ck)
        (compile-core . g$12691$bP4ck)
        (eval-core . g$12690$bP4ck)
        (set-symbol-value! . g$12689$bP4ck)
        (symbol-value . g$12688$bP4ck)
        (ungensym . g$12687$bP4ck)
        (gensym . g$12686$bP4ck)
        (void . g$12685$bP4ck)
        (load-serialized-library . g$12684$bP4ck)
        (serialize-library . g$12683$bP4ck)
        (compile-system-libraries . g$12151$bP4ck)
        (compile->closure . g$12153$bP4ck)
        (compile . g$12152$bP4ck)
        (load . g$12148$bP4ck)
        (interaction-environment . g$9168$bP4ck)
        (char-ready? . g$12682$bP4ck)
        (string-upcase . g$12681$bP4ck)
        (string-titlecase . g$12680$bP4ck)
        (string-normalize-nfkd . g$12679$bP4ck)
        (string-normalize-nfkc . g$12678$bP4ck)
        (string-normalize-nfd . g$12677$bP4ck)
        (string-normalize-nfc . g$12676$bP4ck)
        (string-foldcase . g$12675$bP4ck)
        (string-downcase . g$12674$bP4ck)
        (string-ci>? . g$6994$bP4ck)
        (string-ci>=? . g$6996$bP4ck)
        (string-ci=? . g$6992$bP4ck)
        (string-ci<? . g$6993$bP4ck)
        (string-ci<=? . g$6995$bP4ck)
        (char-whitespace? . g$12673$bP4ck)
        (char-upper-case? . g$12672$bP4ck)
        (char-title-case? . g$12671$bP4ck)
        (char-numeric? . g$12670$bP4ck)
        (char-lower-case? . g$12669$bP4ck)
        (char-general-category . g$12668$bP4ck)
        (char-upcase . g$12667$bP4ck)
        (char-titlecase . g$12666$bP4ck)
        (char-foldcase . g$12665$bP4ck)
        (char-downcase . g$12664$bP4ck)
        (char-ci>? . g$7033$bP4ck)
        (char-ci>=? . g$7035$bP4ck)
        (char-ci=? . g$7031$bP4ck)
        (char-ci<? . g$7032$bP4ck)
        (char-ci<=? . g$7034$bP4ck)
        (char-alphabetic? . g$12663$bP4ck)
        (variable-transformer-procedure . g$8765$bP4ck)
        (variable-transformer? . g$8764$bP4ck)
        (make-variable-transformer . g$8763$bP4ck)
        (identifier? . g$9162$bP4ck)
        (generate-temporaries . g$9151$bP4ck)
        (free-identifier=? . g$9152$bP4ck)
        (syntax->datum . g$9164$bP4ck)
        (datum->syntax . g$9163$bP4ck)
        (bound-identifier=? . g$9153$bP4ck)
        (record-type-descriptor? . g$12662$bP4ck)
        (record-predicate . g$12661$bP4ck)
        (record-mutator . g$12660$bP4ck)
        (record-constructor . g$12659$bP4ck)
        (record-accessor . g$12658$bP4ck)
        (make-record-type-descriptor . g$12657$bP4ck)
        (make-record-constructor-descriptor . g$12656$bP4ck)
        (record? . g$12655$bP4ck)
        (record-type-uid . g$12654$bP4ck)
        (record-type-sealed? . g$12653$bP4ck)
        (record-type-parent . g$12652$bP4ck)
        (record-type-opaque? . g$12651$bP4ck)
        (record-type-name . g$12650$bP4ck)
        (record-type-generative? . g$12649$bP4ck)
        (record-type-field-names . g$12648$bP4ck)
        (record-rtd . g$12647$bP4ck)
        (record-field-mutable? . g$12646$bP4ck)
        (delete-file . g$6568$bP4ck)
        (file-exists? . g$6567$bP4ck)
        (vector-sort! . g$12645$bP4ck)
        (vector-sort . g$12644$bP4ck)
        (list-sort . g$6934$bP4ck)
        (symbol-hash . g$12643$bP4ck)
        (string-ci-hash . g$12642$bP4ck)
        (string-hash . g$12641$bP4ck)
        (equal-hash . g$12640$bP4ck)
        (hashtable-equivalence-function . g$12639$bP4ck)
        (make-hashtable . g$12638$bP4ck)
        (hashtable-hash-function . g$12637$bP4ck)
        (make-eqv-hashtable . g$6536$bP4ck)
        (make-eq-hashtable . g$6535$bP4ck)
        (hashtable? . g$12636$bP4ck)
        (hashtable-update! . g$6542$bP4ck)
        (hashtable-size . g$6537$bP4ck)
        (hashtable-set! . g$6539$bP4ck)
        (hashtable-ref . g$6538$bP4ck)
        (hashtable-mutable? . g$12635$bP4ck)
        (hashtable-keys . g$12634$bP4ck)
        (hashtable-entries . g$12633$bP4ck)
        (hashtable-delete! . g$6540$bP4ck)
        (hashtable-copy . g$12632$bP4ck)
        (hashtable-contains? . g$6541$bP4ck)
        (hashtable-clear! . g$6543$bP4ck)
        (call-with-output-file . g$7419$bP4ck)
        (call-with-input-file . g$7418$bP4ck)
        (write-char . g$7400$bP4ck)
        (write . g$12631$bP4ck)
        (with-output-to-file . g$7417$bP4ck)
        (with-input-from-file . g$7416$bP4ck)
        (read-char . g$7399$bP4ck)
        (read . g$12630$bP4ck)
        (peek-char . g$7398$bP4ck)
        (open-output-file . g$12629$bP4ck)
        (open-input-file . g$12628$bP4ck)
        (newline . g$7420$bP4ck)
        (display . g$12627$bP4ck)
        (close-output-port . g$12626$bP4ck)
        (close-input-port . g$12625$bP4ck)
        (eof-object? . g$12624$bP4ck)
        (eof-object . g$12623$bP4ck)
        (current-error-port . g$12622$bP4ck)
        (current-output-port . g$12621$bP4ck)
        (current-input-port . g$12620$bP4ck)
        (output-port? . g$12619$bP4ck)
        (input-port? . g$12618$bP4ck)
        (utf-8-codec . g$12617$bP4ck)
        (utf-16-codec . g$12616$bP4ck)
        (transcoder-error-handling-mode . g$12615$bP4ck)
        (transcoder-eol-style . g$12614$bP4ck)
        (transcoder-codec . g$12613$bP4ck)
        (transcoded-port . g$12612$bP4ck)
        (textual-port? . g$12611$bP4ck)
        (string->bytevector . g$12610$bP4ck)
        (standard-output-port . g$12609$bP4ck)
        (standard-input-port . g$12608$bP4ck)
        (standard-error-port . g$12607$bP4ck)
        (set-port-position! . g$12606$bP4ck)
        (put-u8 . g$12605$bP4ck)
        (put-string . g$12604$bP4ck)
        (put-datum . g$12603$bP4ck)
        (put-char . g$12602$bP4ck)
        (put-bytevector . g$12601$bP4ck)
        (port? . g$7385$bP4ck)
        (port-transcoder . g$12600$bP4ck)
        (port-position . g$12599$bP4ck)
        (port-has-set-port-position!? . g$12598$bP4ck)
        (port-has-port-position? . g$12597$bP4ck)
        (port-eof? . g$12596$bP4ck)
        (output-port-buffer-mode . g$12595$bP4ck)
        (open-string-output-port . g$7384$bP4ck)
        (open-string-input-port . g$12594$bP4ck)
        (open-file-output-port . g$12593$bP4ck)
        (open-file-input/output-port . g$12592$bP4ck)
        (open-file-input-port . g$12591$bP4ck)
        (open-bytevector-output-port . g$12590$bP4ck)
        (open-bytevector-input-port . g$12589$bP4ck)
        (native-transcoder . g$12588$bP4ck)
        (native-eol-style . g$12587$bP4ck)
        (make-transcoder . g$12586$bP4ck)
        (latin-1-codec . g$12585$bP4ck)
        (make-i/o-write-error . g$7240$bP4ck)
        (make-i/o-read-error . g$7226$bP4ck)
        (make-i/o-port-error . g$7345$bP4ck)
        (make-i/o-invalid-position-error . g$7255$bP4ck)
        (make-i/o-filename-error . g$7272$bP4ck)
        (make-i/o-file-protection-error . g$7288$bP4ck)
        (make-i/o-file-is-read-only-error . g$7302$bP4ck)
        (make-i/o-file-does-not-exist-error . g$7330$bP4ck)
        (make-i/o-file-already-exists-error . g$7316$bP4ck)
        (make-i/o-error . g$7212$bP4ck)
        (make-i/o-encoding-error . g$7376$bP4ck)
        (make-i/o-decoding-error . g$7361$bP4ck)
        (make-custom-textual-output-port . g$12584$bP4ck)
        (make-custom-textual-input/output-port . g$12583$bP4ck)
        (make-custom-textual-input-port . g$12582$bP4ck)
        (make-custom-binary-output-port . g$12581$bP4ck)
        (make-custom-binary-input/output-port . g$12580$bP4ck)
        (make-custom-binary-input-port . g$12579$bP4ck)
        (make-bytevector . g$12578$bP4ck)
        (lookahead-u8 . g$12577$bP4ck)
        (lookahead-char . g$12576$bP4ck)
        (i/o-write-error? . g$7241$bP4ck)
        (i/o-read-error? . g$7227$bP4ck)
        (i/o-port-error? . g$7347$bP4ck)
        (i/o-invalid-position-error? . g$7257$bP4ck)
        (i/o-error-position . g$7258$bP4ck)
        (i/o-filename-error? . g$7274$bP4ck)
        (i/o-file-protection-error? . g$7289$bP4ck)
        (i/o-file-is-read-only-error? . g$7303$bP4ck)
        (i/o-file-does-not-exist-error? . g$7331$bP4ck)
        (i/o-file-already-exists-error? . g$7317$bP4ck)
        (i/o-error? . g$7213$bP4ck)
        (i/o-error-port . g$7348$bP4ck)
        (i/o-error-filename . g$7275$bP4ck)
        (i/o-encoding-error? . g$7378$bP4ck)
        (i/o-encoding-error-char . g$7379$bP4ck)
        (i/o-decoding-error? . g$7362$bP4ck)
        (get-u8 . g$12575$bP4ck)
        (get-string-n! . g$12574$bP4ck)
        (get-string-n . g$12573$bP4ck)
        (get-string-all . g$12572$bP4ck)
        (get-line . g$12571$bP4ck)
        (get-datum . g$12570$bP4ck)
        (get-char . g$12569$bP4ck)
        (get-bytevector-some . g$12568$bP4ck)
        (get-bytevector-n! . g$12567$bP4ck)
        (get-bytevector-n . g$12566$bP4ck)
        (get-bytevector-all . g$12565$bP4ck)
        (flush-output-port . g$12564$bP4ck)
        (close-port . g$12563$bP4ck)
        (call-with-string-output-port . g$7386$bP4ck)
        (call-with-port . g$7387$bP4ck)
        (call-with-bytevector-output-port . g$12562$bP4ck)
        (bytevector->string . g$12561$bP4ck)
        (buffer-mode? . g$12560$bP4ck)
        (binary-port? . g$12559$bP4ck)
        (scheme-report-environment . g$9141$bP4ck)
        (quotient . g$6913$bP4ck)
        (null-environment . g$9140$bP4ck)
        (remainder . g$6914$bP4ck)
        (modulo . g$6915$bP4ck)
        (inexact->exact . g$6910$bP4ck)
        (force . g$6917$bP4ck)
        (exact->inexact . g$6911$bP4ck)
        (exit . g$12558$bP4ck)
        (command-line . g$12145$bP4ck)
        (string-fill! . g$12557$bP4ck)
        (string-set! . g$12556$bP4ck)
        (set-cdr! . g$12555$bP4ck)
        (set-car! . g$12554$bP4ck)
        (remove . g$5877$bP4ck)
        (remv . g$5878$bP4ck)
        (remp . g$5858$bP4ck)
        (remq . g$5879$bP4ck)
        (partition . g$5857$bP4ck)
        (memv . g$5865$bP4ck)
        (memq . g$5864$bP4ck)
        (memp . g$5867$bP4ck)
        (member . g$5866$bP4ck)
        (exists . g$5871$bP4ck)
        (for-all . g$5870$bP4ck)
        (fold-right . g$5876$bP4ck)
        (fold-left . g$5875$bP4ck)
        (find . g$5856$bP4ck)
        (filter . g$5859$bP4ck)
        (cons* . g$5874$bP4ck)
        (assv . g$5861$bP4ck)
        (assq . g$5860$bP4ck)
        (assp . g$5863$bP4ck)
        (assoc . g$5862$bP4ck)
        (with-exception-handler . g$12553$bP4ck)
        (raise-continuable . g$12552$bP4ck)
        (raise . g$12551$bP4ck)
        (eval . g$9143$bP4ck)
        (environment . g$9139$bP4ck)
        (make-enumeration . g$7484$bP4ck)
        (enum-set=? . g$7491$bP4ck)
        (enum-set-universe . g$7485$bP4ck)
        (enum-set-union . g$7492$bP4ck)
        (enum-set-subset? . g$7490$bP4ck)
        (enum-set-projection . g$7496$bP4ck)
        (enum-set-member? . g$7489$bP4ck)
        (enum-set-intersection . g$7493$bP4ck)
        (enum-set-indexer . g$7486$bP4ck)
        (enum-set-difference . g$7494$bP4ck)
        (enum-set-constructor . g$7487$bP4ck)
        (enum-set-complement . g$7495$bP4ck)
        (enum-set->list . g$7488$bP4ck)
        (who-condition? . g$6822$bP4ck)
        (warning? . g$6733$bP4ck)
        (violation? . g$6775$bP4ck)
        (undefined-violation? . g$6899$bP4ck)
        (syntax-violation? . g$6883$bP4ck)
        (syntax-violation-subform . g$6885$bP4ck)
        (syntax-violation-form . g$6884$bP4ck)
        (syntax-violation . g$9161$bP4ck)
        (simple-conditions . g$12550$bP4ck)
        (serious-condition? . g$6747$bP4ck)
        (non-continuable-violation? . g$6837$bP4ck)
        (message-condition? . g$6718$bP4ck)
        (make-who-condition . g$6820$bP4ck)
        (make-warning . g$6732$bP4ck)
        (make-violation . g$6774$bP4ck)
        (make-undefined-violation . g$6898$bP4ck)
        (make-syntax-violation . g$6880$bP4ck)
        (make-serious-condition . g$6746$bP4ck)
        (make-non-continuable-violation . g$6836$bP4ck)
        (make-message-condition . g$6716$bP4ck)
        (make-lexical-violation . g$6864$bP4ck)
        (make-irritants-condition . g$6803$bP4ck)
        (make-implementation-restriction-violation . g$6850$bP4ck)
        (make-error . g$6760$bP4ck)
        (make-assertion-violation . g$6788$bP4ck)
        (lexical-violation? . g$6865$bP4ck)
        (irritants-condition? . g$6805$bP4ck)
        (implementation-restriction-violation? . g$6851$bP4ck)
        (error? . g$6761$bP4ck)
        (condition-who . g$6823$bP4ck)
        (condition-predicate . g$12549$bP4ck)
        (condition-message . g$6719$bP4ck)
        (condition-irritants . g$6806$bP4ck)
        (condition-accessor . g$12548$bP4ck)
        (condition . g$12547$bP4ck)
        (assertion-violation? . g$6789$bP4ck)
        (condition? . g$12546$bP4ck)
        (utf32->string . g$12545$bP4ck)
        (utf16->string . g$12544$bP4ck)
        (utf8->string . g$12543$bP4ck)
        (uint-list->bytevector . g$12542$bP4ck)
        (u8-list->bytevector . g$12541$bP4ck)
        (string->utf8 . g$12540$bP4ck)
        (string->utf32 . g$12539$bP4ck)
        (string->utf16 . g$12538$bP4ck)
        (sint-list->bytevector . g$12537$bP4ck)
        (native-endianness . g$6574$bP4ck)
        (bytevector? . g$12536$bP4ck)
        (bytevector=? . g$12535$bP4ck)
        (bytevector-uint-set! . g$12534$bP4ck)
        (bytevector-uint-ref . g$12533$bP4ck)
        (bytevector-u8-set! . g$12532$bP4ck)
        (bytevector-u8-ref . g$12531$bP4ck)
        (bytevector-u64-set! . g$6595$bP4ck)
        (bytevector-u64-ref . g$6591$bP4ck)
        (bytevector-u64-native-set! . g$6597$bP4ck)
        (bytevector-u64-native-ref . g$6593$bP4ck)
        (bytevector-u32-set! . g$6587$bP4ck)
        (bytevector-u32-ref . g$6583$bP4ck)
        (bytevector-u32-native-set! . g$6589$bP4ck)
        (bytevector-u32-native-ref . g$6585$bP4ck)
        (bytevector-u16-set! . g$6579$bP4ck)
        (bytevector-u16-ref . g$6575$bP4ck)
        (bytevector-u16-native-set! . g$6581$bP4ck)
        (bytevector-u16-native-ref . g$6577$bP4ck)
        (bytevector-sint-set! . g$12530$bP4ck)
        (bytevector-sint-ref . g$12529$bP4ck)
        (bytevector-s8-set! . g$12528$bP4ck)
        (bytevector-s8-ref . g$12527$bP4ck)
        (bytevector-s64-set! . g$6596$bP4ck)
        (bytevector-s64-ref . g$6592$bP4ck)
        (bytevector-s64-native-set! . g$6598$bP4ck)
        (bytevector-s64-native-ref . g$6594$bP4ck)
        (bytevector-s32-set! . g$6588$bP4ck)
        (bytevector-s32-ref . g$6584$bP4ck)
        (bytevector-s32-native-set! . g$6590$bP4ck)
        (bytevector-s32-native-ref . g$6586$bP4ck)
        (bytevector-s16-set! . g$6580$bP4ck)
        (bytevector-s16-ref . g$6576$bP4ck)
        (bytevector-s16-native-set! . g$6582$bP4ck)
        (bytevector-s16-native-ref . g$6578$bP4ck)
        (bytevector-length . g$12526$bP4ck)
        (bytevector-ieee-single-set! . g$12525$bP4ck)
        (bytevector-ieee-single-ref . g$12524$bP4ck)
        (bytevector-ieee-single-native-set! . g$6601$bP4ck)
        (bytevector-ieee-single-native-ref . g$6599$bP4ck)
        (bytevector-ieee-double-set! . g$12523$bP4ck)
        (bytevector-ieee-double-ref . g$12522$bP4ck)
        (bytevector-ieee-double-native-set! . g$6602$bP4ck)
        (bytevector-ieee-double-native-ref . g$6600$bP4ck)
        (bytevector-fill! . g$12521$bP4ck)
        (bytevector-copy! . g$12520$bP4ck)
        (bytevector-copy . g$12519$bP4ck)
        (bytevector->uint-list . g$12518$bP4ck)
        (bytevector->u8-list . g$12517$bP4ck)
        (bytevector->sint-list . g$12516$bP4ck)
        (no-nans-violation? . g$7198$bP4ck)
        (no-infinities-violation? . g$7184$bP4ck)
        (make-no-nans-violation . g$7197$bP4ck)
        (make-no-infinities-violation . g$7183$bP4ck)
        (real->flonum . g$12515$bP4ck)
        (flzero? . g$12514$bP4ck)
        (fltruncate . g$12513$bP4ck)
        (fltan . g$12512$bP4ck)
        (flsqrt . g$12511$bP4ck)
        (flsin . g$12510$bP4ck)
        (flround . g$12509$bP4ck)
        (flpositive? . g$12508$bP4ck)
        (flonum? . g$12507$bP4ck)
        (flodd? . g$12506$bP4ck)
        (flnumerator . g$12505$bP4ck)
        (flnegative? . g$12504$bP4ck)
        (flnan? . g$12503$bP4ck)
        (flmod0 . g$12502$bP4ck)
        (flmod . g$12501$bP4ck)
        (flmin . g$12500$bP4ck)
        (flmax . g$12499$bP4ck)
        (fllog . g$12498$bP4ck)
        (flinteger? . g$12497$bP4ck)
        (flinfinite? . g$12496$bP4ck)
        (flfloor . g$12495$bP4ck)
        (flfinite? . g$12494$bP4ck)
        (flexpt . g$12493$bP4ck)
        (flexp . g$12492$bP4ck)
        (fleven? . g$12491$bP4ck)
        (fldiv0-and-mod0 . g$12490$bP4ck)
        (fldiv0 . g$12489$bP4ck)
        (fldiv-and-mod . g$12488$bP4ck)
        (fldiv . g$12487$bP4ck)
        (fldenominator . g$12486$bP4ck)
        (flcos . g$12485$bP4ck)
        (flceiling . g$12484$bP4ck)
        (flatan . g$12483$bP4ck)
        (flasin . g$12482$bP4ck)
        (flacos . g$12481$bP4ck)
        (flabs . g$12480$bP4ck)
        (fl>? . g$12479$bP4ck)
        (fl>=? . g$12478$bP4ck)
        (fl=? . g$12477$bP4ck)
        (fl<? . g$12476$bP4ck)
        (fl<=? . g$12475$bP4ck)
        (fl/ . g$12474$bP4ck)
        (fl- . g$12473$bP4ck)
        (fl+ . g$12472$bP4ck)
        (fl* . g$12471$bP4ck)
        (fixnum->flonum . g$12470$bP4ck)
        (fxzero? . g$12469$bP4ck)
        (fxxor . g$12468$bP4ck)
        (fxrotate-bit-field . g$7130$bP4ck)
        (fxreverse-bit-field . g$12467$bP4ck)
        (fxpositive? . g$12466$bP4ck)
        (fxodd? . g$12465$bP4ck)
        (fxnot . g$12464$bP4ck)
        (fxnegative? . g$12463$bP4ck)
        (fxmod0 . g$12462$bP4ck)
        (fxmod . g$12461$bP4ck)
        (fxmin . g$12460$bP4ck)
        (fxmax . g$12459$bP4ck)
        (fxlength . g$12458$bP4ck)
        (fxior . g$12457$bP4ck)
        (fxif . g$7124$bP4ck)
        (fxfirst-bit-set . g$12456$bP4ck)
        (fxeven? . g$12455$bP4ck)
        (fxdiv0-and-mod0 . g$12454$bP4ck)
        (fxdiv0 . g$12453$bP4ck)
        (fxdiv-and-mod . g$12452$bP4ck)
        (fxdiv . g$12451$bP4ck)
        (fxcopy-bit-field . g$7127$bP4ck)
        (fxcopy-bit . g$7125$bP4ck)
        (fxbit-set? . g$12450$bP4ck)
        (fxbit-field . g$7126$bP4ck)
        (fxbit-count . g$12449$bP4ck)
        (fxarithmetic-shift-right . g$7129$bP4ck)
        (fxarithmetic-shift-left . g$7128$bP4ck)
        (fxarithmetic-shift . g$12448$bP4ck)
        (fxand . g$12447$bP4ck)
        (fx>? . g$12446$bP4ck)
        (fx>=? . g$12445$bP4ck)
        (fx=? . g$12444$bP4ck)
        (fx<? . g$12443$bP4ck)
        (fx<=? . g$12442$bP4ck)
        (fx-/carry . g$7122$bP4ck)
        (fx- . g$12441$bP4ck)
        (fx+/carry . g$7123$bP4ck)
        (fx+ . g$12440$bP4ck)
        (fx*/carry . g$7121$bP4ck)
        (fx* . g$12439$bP4ck)
        (greatest-fixnum . g$12438$bP4ck)
        (least-fixnum . g$12437$bP4ck)
        (fixnum-width . g$12436$bP4ck)
        (fixnum? . g$12435$bP4ck)
        (bitwise-rotate-bit-field . g$7095$bP4ck)
        (bitwise-reverse-bit-field . g$12434$bP4ck)
        (bitwise-length . g$12433$bP4ck)
        (bitwise-if . g$7089$bP4ck)
        (bitwise-first-bit-set . g$12432$bP4ck)
        (bitwise-copy-bit-field . g$7092$bP4ck)
        (bitwise-copy-bit . g$7090$bP4ck)
        (bitwise-bit-set? . g$12431$bP4ck)
        (bitwise-bit-field . g$7091$bP4ck)
        (bitwise-bit-count . g$12430$bP4ck)
        (bitwise-xor . g$12429$bP4ck)
        (bitwise-ior . g$12428$bP4ck)
        (bitwise-and . g$12427$bP4ck)
        (bitwise-not . g$12426$bP4ck)
        (bitwise-arithmetic-shift-right . g$7094$bP4ck)
        (bitwise-arithmetic-shift-left . g$7093$bP4ck)
        (bitwise-arithmetic-shift . g$12425$bP4ck)
        (zero? . g$6020$bP4ck)
        (vector? . g$12424$bP4ck)
        (vector-set! . g$12423$bP4ck)
        (vector-ref . g$12422$bP4ck)
        (vector-map . g$12421$bP4ck)
        (vector-length . g$12420$bP4ck)
        (vector-for-each . g$12419$bP4ck)
        (vector-fill! . g$12418$bP4ck)
        (vector->list . g$12417$bP4ck)
        (vector . g$12416$bP4ck)
        (values . g$12415$bP4ck)
        (truncate . g$12414$bP4ck)
        (tan . g$12413$bP4ck)
        (symbol? . g$12412$bP4ck)
        (symbol=? . g$6066$bP4ck)
        (symbol->string . g$12411$bP4ck)
        (substring . g$12410$bP4ck)
        (string? . g$12409$bP4ck)
        (string>? . g$6063$bP4ck)
        (string>=? . g$6065$bP4ck)
        (string=? . g$6061$bP4ck)
        (string<? . g$6062$bP4ck)
        (string<=? . g$6064$bP4ck)
        (string-ref . g$12408$bP4ck)
        (string-length . g$12407$bP4ck)
        (string-for-each . g$12406$bP4ck)
        (string-copy . g$12405$bP4ck)
        (string-append . g$12404$bP4ck)
        (string->symbol . g$12403$bP4ck)
        (string->number . g$12402$bP4ck)
        (string->list . g$12401$bP4ck)
        (string . g$12400$bP4ck)
        (sqrt . g$12399$bP4ck)
        (sin . g$12398$bP4ck)
        (round . g$12397$bP4ck)
        (reverse . g$12396$bP4ck)
        (real? . g$12395$bP4ck)
        (real-valued? . g$12394$bP4ck)
        (real-part . g$12393$bP4ck)
        (rationalize . g$6107$bP4ck)
        (rational? . g$12392$bP4ck)
        (rational-valued? . g$12391$bP4ck)
        (procedure? . g$12390$bP4ck)
        (positive? . g$6018$bP4ck)
        (pair? . g$12389$bP4ck)
        (odd? . g$6022$bP4ck)
        (numerator . g$12388$bP4ck)
        (number? . g$12387$bP4ck)
        (number->string . g$12386$bP4ck)
        (null? . g$12385$bP4ck)
        (not . g$12384$bP4ck)
        (negative? . g$6019$bP4ck)
        (nan? . g$12383$bP4ck)
        (min . g$6024$bP4ck)
        (max . g$6023$bP4ck)
        (map . g$5872$bP4ck)
        (make-vector . g$12382$bP4ck)
        (make-string . g$12381$bP4ck)
        (make-rectangular . g$12380$bP4ck)
        (make-polar . g$12379$bP4ck)
        (magnitude . g$12378$bP4ck)
        (log . g$12377$bP4ck)
        (list? . g$12376$bP4ck)
        (list-tail . g$5852$bP4ck)
        (list-ref . g$5853$bP4ck)
        (list->vector . g$12375$bP4ck)
        (list->string . g$12374$bP4ck)
        (list . g$12373$bP4ck)
        (length . g$12372$bP4ck)
        (lcm . g$6026$bP4ck)
        (integer? . g$12371$bP4ck)
        (integer-valued? . g$12370$bP4ck)
        (integer->char . g$12369$bP4ck)
        (infinite? . g$12368$bP4ck)
        (inexact? . g$12367$bP4ck)
        (inexact . g$12366$bP4ck)
        (imag-part . g$12365$bP4ck)
        (gcd . g$6025$bP4ck)
        (for-each . g$5873$bP4ck)
        (floor . g$12364$bP4ck)
        (finite? . g$12363$bP4ck)
        (expt . g$12362$bP4ck)
        (exp . g$12361$bP4ck)
        (exact? . g$12360$bP4ck)
        (exact-integer-sqrt . g$12359$bP4ck)
        (exact . g$12358$bP4ck)
        (even? . g$6021$bP4ck)
        (error . g$12357$bP4ck)
        (eqv? . g$12356$bP4ck)
        (equal? . g$12355$bP4ck)
        (eq? . g$12354$bP4ck)
        (dynamic-wind . g$12353$bP4ck)
        (div0-and-mod0 . g$12352$bP4ck)
        (mod0 . g$12351$bP4ck)
        (div0 . g$12350$bP4ck)
        (div-and-mod . g$12349$bP4ck)
        (mod . g$12348$bP4ck)
        (div . g$12347$bP4ck)
        (denominator . g$12346$bP4ck)
        (cos . g$12345$bP4ck)
        (cons . g$12344$bP4ck)
        (complex? . g$12343$bP4ck)
        (char? . g$12342$bP4ck)
        (char>? . g$6104$bP4ck)
        (char>=? . g$6106$bP4ck)
        (char=? . g$6102$bP4ck)
        (char<? . g$6103$bP4ck)
        (char<=? . g$6105$bP4ck)
        (char->integer . g$12341$bP4ck)
        (ceiling . g$12340$bP4ck)
        (call-with-values . g$12339$bP4ck)
        (call/cc . g$12338$bP4ck)
        (call-with-current-continuation . g$12337$bP4ck)
        (cddddr . g$6017$bP4ck)
        (cdddar . g$6016$bP4ck)
        (cddadr . g$6015$bP4ck)
        (cddaar . g$6014$bP4ck)
        (cdaddr . g$6013$bP4ck)
        (cdadar . g$6012$bP4ck)
        (cdaadr . g$6011$bP4ck)
        (cdaaar . g$6010$bP4ck)
        (cadddr . g$6009$bP4ck)
        (caddar . g$6008$bP4ck)
        (cadadr . g$6007$bP4ck)
        (cadaar . g$6006$bP4ck)
        (caaddr . g$6005$bP4ck)
        (caadar . g$6004$bP4ck)
        (caaadr . g$6003$bP4ck)
        (caaaar . g$6002$bP4ck)
        (cdddr . g$6001$bP4ck)
        (cddar . g$6000$bP4ck)
        (cdadr . g$5999$bP4ck)
        (cdaar . g$5998$bP4ck)
        (caddr . g$5997$bP4ck)
        (cadar . g$5996$bP4ck)
        (caadr . g$5995$bP4ck)
        (caaar . g$5994$bP4ck)
        (cddr . g$5993$bP4ck)
        (cdar . g$5992$bP4ck)
        (cadr . g$5991$bP4ck)
        (caar . g$5990$bP4ck)
        (cdr . g$12336$bP4ck)
        (car . g$12335$bP4ck)
        (boolean? . g$12334$bP4ck)
        (boolean=? . g$6067$bP4ck)
        (atan . g$12333$bP4ck)
        (assertion-violation . g$12332$bP4ck)
        (asin . g$12331$bP4ck)
        (apply . g$12330$bP4ck)
        (append . g$12329$bP4ck)
        (angle . g$12328$bP4ck)
        (acos . g$12327$bP4ck)
        (abs . g$12326$bP4ck)
        (/ . g$12325$bP4ck)
        (* . g$12324$bP4ck)
        (- . g$12323$bP4ck)
        (+ . g$12322$bP4ck)
        (>= . g$12321$bP4ck)
        (> . g$12320$bP4ck)
        (= . g$12319$bP4ck)
        (<= . g$12318$bP4ck)
        (< . g$12317$bP4ck)
        (make-record-printer . g$12316$bP4ck)
        (eqv-hash . g$12315$bP4ck)
        (reverse! . g$12314$bP4ck)
        (deserialize-port . g$12313$bP4ck)
        (serialize-port . g$12312$bP4ck)
        (enum-set? . g$7459$bP4ck)
        (make-promise . g$6916$bP4ck)
        (load/args . g$12147$bP4ck)
        (printf . g$7570$bP4ck)
        (fprintf . g$7571$bP4ck)
        (format . g$7572$bP4ck)
        (procedure-form . g$12311$bP4ck)
        (procedure-environment . g$12310$bP4ck)
        (procedure-name . g$12309$bP4ck)
        (procedure-arity . g$12308$bP4ck)
        (gc-collect . g$12307$bP4ck)
        (clr-type? . g$12306$bP4ck)
        (get-clr-type . g$12305$bP4ck)
        (get-command-line . g$12304$bP4ck)
        (vector-append . g$12303$bP4ck)
        (vector-filter . g$12302$bP4ck)
        (vector-reverse! . g$12301$bP4ck)
        (vector-contains? . g$12300$bP4ck)
        (vector-index-of . g$12299$bP4ck)
        (vector-copy . g$12298$bP4ck)
        (vector-binary-search . g$12297$bP4ck)
        (string-ci-compare . g$12296$bP4ck)
        (string-compare . g$12295$bP4ck)
        (string-format . g$12294$bP4ck)
        (trace-printer . g$12144$bP4ck)
        (make-traced-procedure . g$12293$bP4ck)
        (make-traced-macro . g$7592$bP4ck)
        (assertion-error . g$9157$bP4ck)
        (time-it . g$12292$bP4ck)
        (make-parameter . g$7862$bP4ck)
        (library-locator . g$12291$bP4ck)
        (get-library-paths . g$12290$bP4ck)
        (open-tcp-input/output-port . g$12289$bP4ck)
        (hashtable-for-each . g$12288$bP4ck)
        (hashtable-map . g$12287$bP4ck)
        (environment-bindings . g$9135$bP4ck)
        (environment-symbols . g$9138$bP4ck)
        (interaction-environment-symbols . g$9134$bP4ck)
        (optimization-level . g$12286$bP4ck)
        (library-path . g$8317$bP4ck)
        (expand->core . g$9144$bP4ck)
        (expand . g$9142$bP4ck)
        (convert->cps . g$7648$bP4ck)
        (parse->cps . g$7647$bP4ck)
        (&no-nans . g$12285$bP4ck)
        (&no-infinities . g$12284$bP4ck)
        (&i/o-encoding . g$12283$bP4ck)
        (&i/o-decoding . g$12282$bP4ck)
        (&i/o-port . g$12281$bP4ck)
        (&i/o-file-does-not-exist . g$12280$bP4ck)
        (&i/o-file-already-exists . g$12279$bP4ck)
        (&i/o-file-is-read-only . g$12278$bP4ck)
        (&i/o-file-protection . g$12277$bP4ck)
        (&i/o-filename . g$12276$bP4ck)
        (&i/o-invalid-position . g$12275$bP4ck)
        (&i/o-write . g$12274$bP4ck)
        (&i/o-read . g$12273$bP4ck)
        (&i/o . g$12272$bP4ck)
        (&non-continuable . g$12271$bP4ck)
        (&undefined . g$12270$bP4ck)
        (&syntax . g$12269$bP4ck)
        (&lexical . g$12268$bP4ck)
        (&implementation-restriction . g$12267$bP4ck)
        (&who . g$12266$bP4ck)
        (&irritants . g$12265$bP4ck)
        (&assertion . g$12264$bP4ck)
        (&violation . g$12263$bP4ck)
        (&error . g$12262$bP4ck)
        (&serious . g$12261$bP4ck)
        (&warning . g$12260$bP4ck)
        (&message . g$12259$bP4ck)
        (&condition . g$12258$bP4ck)
        (define-condition-type . g$12257$bP4ck)
        (define-enumeration . g$12256$bP4ck)
        (define-record-type . g$12255$bP4ck)
        (parent-rtd . g$12254$bP4ck)
        (nongenerative . g$12253$bP4ck)
        (opaque . g$12252$bP4ck)
        (sealed . g$12251$bP4ck)
        (protocol . g$12250$bP4ck)
        (parent . g$12249$bP4ck)
        (immutable . g$12248$bP4ck)
        (mutable . g$12247$bP4ck)
        (fields . g$12246$bP4ck)
        (error-handling-mode . g$12245$bP4ck)
        (file-options . g$12244$bP4ck)
        (buffer-mode . g$12243$bP4ck)
        (eol-style . g$12242$bP4ck)
        (guard . g$12241$bP4ck)
        (trace-letrec-syntax . g$12240$bP4ck)
        (trace-let-syntax . g$12239$bP4ck)
        (trace-define-syntax . g$12238$bP4ck)
        (trace-define . g$12237$bP4ck)
        (trace-lambda . g$12236$bP4ck)
        (unsyntax-splicing . g$12235$bP4ck)
        (unsyntax . g$12234$bP4ck)
        (unquote-splicing . g$12233$bP4ck)
        (unquote . g$12232$bP4ck)
        (_ . g$12231$bP4ck)
        (else . g$12230$bP4ck)
        (=> . g$12229$bP4ck)
        (... . g$12228$bP4ck)
        (assert . g$12227$bP4ck)
        (endianness . g$12226$bP4ck)
        (delay . g$12225$bP4ck)
        (time . g$12224$bP4ck)
        (or . g$12223$bP4ck)
        (and . g$12222$bP4ck)
        (do . g$12221$bP4ck)
        (cond . g$12220$bP4ck)
        (let* . g$12219$bP4ck)
        (let . g$12218$bP4ck)
        (identifier-syntax . g$12217$bP4ck)
        (with-syntax . g$12216$bP4ck)
        (quasisyntax . g$12215$bP4ck)
        (quasiquote . g$12214$bP4ck)
        (syntax-rules . g$12213$bP4ck)
        (include-into . g$12212$bP4ck)
        (include . g$12211$bP4ck)
        (define-struct . g$12210$bP4ck)
        (let-values . g$12209$bP4ck)
        (let*-values . g$12208$bP4ck)
        (record-constructor-descriptor . g$12207$bP4ck)
        (record-type-descriptor . g$12206$bP4ck)
        (fluid-let-syntax . g$12205$bP4ck)
        (case . g$12204$bP4ck)
        (parameterize . g$12203$bP4ck)
        (unless . g$12202$bP4ck)
        (when . g$12201$bP4ck)
        (if . g$12200$bP4ck)
        (letrec* . g$12199$bP4ck)
        (letrec . g$12198$bP4ck)
        (type-descriptor . g$12197$bP4ck)
        (case-lambda . g$12196$bP4ck)
        (lambda . g$12195$bP4ck)
        (syntax . g$12194$bP4ck)
        (syntax-case . g$12193$bP4ck)
        (quote . g$12192$bP4ck)
        (foreign-call . g$12191$bP4ck)
        (letrec-syntax . g$12190$bP4ck)
        (let-syntax . g$12189$bP4ck)
        (set! . g$12188$bP4ck)
        (export . g$12187$bP4ck)
        (import . g$12186$bP4ck)
        (library . g$12185$bP4ck)
        (begin . g$12184$bP4ck)
        (module . g$12183$bP4ck)
        (define-syntax . g$12182$bP4ck)
        (define . g$12181$bP4ck))
      '((g$9033$bP4ck core-prim . ellipsis-map)
        (g$12771$bP4ck core-prim . &no-nans-rcd)
        (g$12770$bP4ck core-prim . &no-nans-rtd)
        (g$12769$bP4ck core-prim . &no-infinities-rcd)
        (g$12768$bP4ck core-prim . &no-infinities-rtd)
        (g$12767$bP4ck core-prim . &i/o-encoding-rcd)
        (g$12766$bP4ck core-prim . &i/o-encoding-rtd)
        (g$12765$bP4ck core-prim . &i/o-decoding-rcd)
        (g$12764$bP4ck core-prim . &i/o-decoding-rtd)
        (g$12763$bP4ck core-prim . &i/o-port-rcd)
        (g$12762$bP4ck core-prim . &i/o-port-rtd)
        (g$12761$bP4ck core-prim . &i/o-file-does-not-exist-rcd)
        (g$12760$bP4ck core-prim . &i/o-file-does-not-exist-rtd)
        (g$12759$bP4ck core-prim . &i/o-file-already-exists-rcd)
        (g$12758$bP4ck core-prim . &i/o-file-already-exists-rtd)
        (g$12757$bP4ck core-prim . &i/o-file-is-read-only-rcd)
        (g$12756$bP4ck core-prim . &i/o-file-is-read-only-rtd)
        (g$12755$bP4ck core-prim . &i/o-file-protection-rcd)
        (g$12754$bP4ck core-prim . &i/o-file-protection-rtd)
        (g$12753$bP4ck core-prim . &i/o-filename-rcd)
        (g$12752$bP4ck core-prim . &i/o-filename-rtd)
        (g$12751$bP4ck core-prim . &i/o-invalid-position-rcd)
        (g$12750$bP4ck core-prim . &i/o-invalid-position-rtd)
        (g$12749$bP4ck core-prim . &i/o-write-rcd)
        (g$12748$bP4ck core-prim . &i/o-write-rtd)
        (g$12747$bP4ck core-prim . &i/o-read-rcd)
        (g$12746$bP4ck core-prim . &i/o-read-rtd)
        (g$12745$bP4ck core-prim . &i/o-rcd)
        (g$12744$bP4ck core-prim . &i/o-rtd)
        (g$12743$bP4ck core-prim . &undefined-rcd)
        (g$12742$bP4ck core-prim . &undefined-rtd)
        (g$12741$bP4ck core-prim . &syntax-rcd)
        (g$12740$bP4ck core-prim . &syntax-rtd)
        (g$12739$bP4ck core-prim . &lexical-rcd)
        (g$12738$bP4ck core-prim . &lexical-rtd)
        (g$12737$bP4ck core-prim . &implementation-restriction-rcd)
        (g$12736$bP4ck core-prim . &implementation-restriction-rtd)
        (g$12735$bP4ck core-prim . &non-continuable-rcd)
        (g$12734$bP4ck core-prim . &non-continuable-rtd)
        (g$12733$bP4ck core-prim . &who-rcd)
        (g$12732$bP4ck core-prim . &who-rtd)
        (g$12731$bP4ck core-prim . &irritants-rcd)
        (g$12730$bP4ck core-prim . &irritants-rtd)
        (g$12729$bP4ck core-prim . &assertion-rcd)
        (g$12728$bP4ck core-prim . &assertion-rtd)
        (g$12727$bP4ck core-prim . &violation-rcd)
        (g$12726$bP4ck core-prim . &violation-rtd)
        (g$12725$bP4ck core-prim . &error-rcd)
        (g$12724$bP4ck core-prim . &error-rtd)
        (g$12723$bP4ck core-prim . &serious-rcd)
        (g$12722$bP4ck core-prim . &serious-rtd)
        (g$12721$bP4ck core-prim . &warning-rcd)
        (g$12720$bP4ck core-prim . &warning-rtd)
        (g$12719$bP4ck core-prim . &message-rcd)
        (g$12718$bP4ck core-prim . &message-rtd)
        (g$12717$bP4ck core-prim . &condition-rcd)
        (g$12716$bP4ck core-prim . &condition-rtd)
        (g$12715$bP4ck core-prim . library-letrec*)
        (g$12714$bP4ck core-prim . annotation-stripped)
        (g$12713$bP4ck core-prim . annotation-source)
        (g$12712$bP4ck core-prim . annotation-expression)
        (g$12711$bP4ck core-prim . annotation?)
        (g$12710$bP4ck core-prim . read-annotated)
        (g$12709$bP4ck core-prim . tanh)
        (g$12708$bP4ck core-prim . cosh)
        (g$12707$bP4ck core-prim . sinh)
        (g$12706$bP4ck core-prim . make-guid)
        (g$12705$bP4ck core-prim . unspecified?)
        (g$5855$bP4ck core-prim . make-list)
        (g$5854$bP4ck core-prim . last-pair)
        (g$12704$bP4ck core-prim . load-r5rs)
        (g$12703$bP4ck core-prim . license)
        (g$12702$bP4ck core-prim . stacktrace)
        (g$12149$bP4ck core-prim . ironscheme-build)
        (g$12701$bP4ck core-prim . define-clr-class-internal)
        (g$12700$bP4ck core-prim . clr-field-set!-internal)
        (g$12699$bP4ck core-prim . clr-field-get-internal)
        (g$12698$bP4ck core-prim . clr-cast-internal)
        (g$12697$bP4ck core-prim . clr-call-internal)
        (g$12696$bP4ck core-prim . clr-new-internal)
        (g$12695$bP4ck core-prim . clr-new-array-internal)
        (g$12694$bP4ck core-prim . clr-is-internal)
        (g$12693$bP4ck core-prim . clr-reference-internal)
        (g$12692$bP4ck core-prim . clr-using-internal)
        (g$9158$bP4ck core-prim . syntax-error)
        (g$9028$bP4ck core-prim . syntax-dispatch)
        (g$12691$bP4ck core-prim . compile-core)
        (g$12690$bP4ck core-prim . eval-core)
        (g$12689$bP4ck core-prim . set-symbol-value!)
        (g$12688$bP4ck core-prim . symbol-value)
        (g$12687$bP4ck core-prim . ungensym)
        (g$12686$bP4ck core-prim . gensym)
        (g$12685$bP4ck core-prim . void)
        (g$12684$bP4ck core-prim . load-serialized-library)
        (g$12683$bP4ck core-prim . serialize-library)
        (g$12151$bP4ck core-prim . compile-system-libraries)
        (g$12153$bP4ck core-prim . compile->closure)
        (g$12152$bP4ck core-prim . compile)
        (g$12148$bP4ck core-prim . load)
        (g$9168$bP4ck core-prim . interaction-environment)
        (g$12682$bP4ck core-prim . char-ready?)
        (g$12681$bP4ck core-prim . string-upcase)
        (g$12680$bP4ck core-prim . string-titlecase)
        (g$12679$bP4ck core-prim . string-normalize-nfkd)
        (g$12678$bP4ck core-prim . string-normalize-nfkc)
        (g$12677$bP4ck core-prim . string-normalize-nfd)
        (g$12676$bP4ck core-prim . string-normalize-nfc)
        (g$12675$bP4ck core-prim . string-foldcase)
        (g$12674$bP4ck core-prim . string-downcase)
        (g$6994$bP4ck core-prim . string-ci>?)
        (g$6996$bP4ck core-prim . string-ci>=?)
        (g$6992$bP4ck core-prim . string-ci=?)
        (g$6993$bP4ck core-prim . string-ci<?)
        (g$6995$bP4ck core-prim . string-ci<=?)
        (g$12673$bP4ck core-prim . char-whitespace?)
        (g$12672$bP4ck core-prim . char-upper-case?)
        (g$12671$bP4ck core-prim . char-title-case?)
        (g$12670$bP4ck core-prim . char-numeric?)
        (g$12669$bP4ck core-prim . char-lower-case?)
        (g$12668$bP4ck core-prim . char-general-category)
        (g$12667$bP4ck core-prim . char-upcase)
        (g$12666$bP4ck core-prim . char-titlecase)
        (g$12665$bP4ck core-prim . char-foldcase)
        (g$12664$bP4ck core-prim . char-downcase)
        (g$7033$bP4ck core-prim . char-ci>?)
        (g$7035$bP4ck core-prim . char-ci>=?)
        (g$7031$bP4ck core-prim . char-ci=?)
        (g$7032$bP4ck core-prim . char-ci<?)
        (g$7034$bP4ck core-prim . char-ci<=?)
        (g$12663$bP4ck core-prim . char-alphabetic?)
        (g$8765$bP4ck core-prim . variable-transformer-procedure)
        (g$8764$bP4ck core-prim . variable-transformer?)
        (g$8763$bP4ck core-prim . make-variable-transformer)
        (g$9162$bP4ck core-prim . identifier?)
        (g$9151$bP4ck core-prim . generate-temporaries)
        (g$9152$bP4ck core-prim . free-identifier=?)
        (g$9164$bP4ck core-prim . syntax->datum)
        (g$9163$bP4ck core-prim . datum->syntax)
        (g$9153$bP4ck core-prim . bound-identifier=?)
        (g$12662$bP4ck core-prim . record-type-descriptor?)
        (g$12661$bP4ck core-prim . record-predicate)
        (g$12660$bP4ck core-prim . record-mutator)
        (g$12659$bP4ck core-prim . record-constructor)
        (g$12658$bP4ck core-prim . record-accessor)
        (g$12657$bP4ck core-prim . make-record-type-descriptor)
        (g$12656$bP4ck core-prim . make-record-constructor-descriptor)
        (g$12655$bP4ck core-prim . record?)
        (g$12654$bP4ck core-prim . record-type-uid)
        (g$12653$bP4ck core-prim . record-type-sealed?)
        (g$12652$bP4ck core-prim . record-type-parent)
        (g$12651$bP4ck core-prim . record-type-opaque?)
        (g$12650$bP4ck core-prim . record-type-name)
        (g$12649$bP4ck core-prim . record-type-generative?)
        (g$12648$bP4ck core-prim . record-type-field-names)
        (g$12647$bP4ck core-prim . record-rtd)
        (g$12646$bP4ck core-prim . record-field-mutable?)
        (g$6568$bP4ck core-prim . delete-file)
        (g$6567$bP4ck core-prim . file-exists?)
        (g$12645$bP4ck core-prim . vector-sort!)
        (g$12644$bP4ck core-prim . vector-sort)
        (g$6934$bP4ck core-prim . list-sort)
        (g$12643$bP4ck core-prim . symbol-hash)
        (g$12642$bP4ck core-prim . string-ci-hash)
        (g$12641$bP4ck core-prim . string-hash)
        (g$12640$bP4ck core-prim . equal-hash)
        (g$12639$bP4ck core-prim . hashtable-equivalence-function)
        (g$12638$bP4ck core-prim . make-hashtable)
        (g$12637$bP4ck core-prim . hashtable-hash-function)
        (g$6536$bP4ck core-prim . make-eqv-hashtable)
        (g$6535$bP4ck core-prim . make-eq-hashtable)
        (g$12636$bP4ck core-prim . hashtable?)
        (g$6542$bP4ck core-prim . hashtable-update!)
        (g$6537$bP4ck core-prim . hashtable-size)
        (g$6539$bP4ck core-prim . hashtable-set!)
        (g$6538$bP4ck core-prim . hashtable-ref)
        (g$12635$bP4ck core-prim . hashtable-mutable?)
        (g$12634$bP4ck core-prim . hashtable-keys)
        (g$12633$bP4ck core-prim . hashtable-entries)
        (g$6540$bP4ck core-prim . hashtable-delete!)
        (g$12632$bP4ck core-prim . hashtable-copy)
        (g$6541$bP4ck core-prim . hashtable-contains?)
        (g$6543$bP4ck core-prim . hashtable-clear!)
        (g$7419$bP4ck core-prim . call-with-output-file)
        (g$7418$bP4ck core-prim . call-with-input-file)
        (g$7400$bP4ck core-prim . write-char)
        (g$12631$bP4ck core-prim . write)
        (g$7417$bP4ck core-prim . with-output-to-file)
        (g$7416$bP4ck core-prim . with-input-from-file)
        (g$7399$bP4ck core-prim . read-char)
        (g$12630$bP4ck core-prim . read)
        (g$7398$bP4ck core-prim . peek-char)
        (g$12629$bP4ck core-prim . open-output-file)
        (g$12628$bP4ck core-prim . open-input-file)
        (g$7420$bP4ck core-prim . newline)
        (g$12627$bP4ck core-prim . display)
        (g$12626$bP4ck core-prim . close-output-port)
        (g$12625$bP4ck core-prim . close-input-port)
        (g$12624$bP4ck core-prim . eof-object?)
        (g$12623$bP4ck core-prim . eof-object)
        (g$12622$bP4ck core-prim . current-error-port)
        (g$12621$bP4ck core-prim . current-output-port)
        (g$12620$bP4ck core-prim . current-input-port)
        (g$12619$bP4ck core-prim . output-port?)
        (g$12618$bP4ck core-prim . input-port?)
        (g$12617$bP4ck core-prim . utf-8-codec)
        (g$12616$bP4ck core-prim . utf-16-codec)
        (g$12615$bP4ck core-prim . transcoder-error-handling-mode)
        (g$12614$bP4ck core-prim . transcoder-eol-style)
        (g$12613$bP4ck core-prim . transcoder-codec)
        (g$12612$bP4ck core-prim . transcoded-port)
        (g$12611$bP4ck core-prim . textual-port?)
        (g$12610$bP4ck core-prim . string->bytevector)
        (g$12609$bP4ck core-prim . standard-output-port)
        (g$12608$bP4ck core-prim . standard-input-port)
        (g$12607$bP4ck core-prim . standard-error-port)
        (g$12606$bP4ck core-prim . set-port-position!)
        (g$12605$bP4ck core-prim . put-u8)
        (g$12604$bP4ck core-prim . put-string)
        (g$12603$bP4ck core-prim . put-datum)
        (g$12602$bP4ck core-prim . put-char)
        (g$12601$bP4ck core-prim . put-bytevector)
        (g$7385$bP4ck core-prim . port?)
        (g$12600$bP4ck core-prim . port-transcoder)
        (g$12599$bP4ck core-prim . port-position)
        (g$12598$bP4ck core-prim . port-has-set-port-position!?)
        (g$12597$bP4ck core-prim . port-has-port-position?)
        (g$12596$bP4ck core-prim . port-eof?)
        (g$12595$bP4ck core-prim . output-port-buffer-mode)
        (g$7384$bP4ck core-prim . open-string-output-port)
        (g$12594$bP4ck core-prim . open-string-input-port)
        (g$12593$bP4ck core-prim . open-file-output-port)
        (g$12592$bP4ck core-prim . open-file-input/output-port)
        (g$12591$bP4ck core-prim . open-file-input-port)
        (g$12590$bP4ck core-prim . open-bytevector-output-port)
        (g$12589$bP4ck core-prim . open-bytevector-input-port)
        (g$12588$bP4ck core-prim . native-transcoder)
        (g$12587$bP4ck core-prim . native-eol-style)
        (g$12586$bP4ck core-prim . make-transcoder)
        (g$12585$bP4ck core-prim . latin-1-codec)
        (g$7240$bP4ck core-prim . make-i/o-write-error)
        (g$7226$bP4ck core-prim . make-i/o-read-error)
        (g$7345$bP4ck core-prim . make-i/o-port-error)
        (g$7255$bP4ck core-prim . make-i/o-invalid-position-error)
        (g$7272$bP4ck core-prim . make-i/o-filename-error)
        (g$7288$bP4ck core-prim . make-i/o-file-protection-error)
        (g$7302$bP4ck core-prim . make-i/o-file-is-read-only-error)
        (g$7330$bP4ck core-prim . make-i/o-file-does-not-exist-error)
        (g$7316$bP4ck core-prim . make-i/o-file-already-exists-error)
        (g$7212$bP4ck core-prim . make-i/o-error)
        (g$7376$bP4ck core-prim . make-i/o-encoding-error)
        (g$7361$bP4ck core-prim . make-i/o-decoding-error)
        (g$12584$bP4ck core-prim . make-custom-textual-output-port)
        (g$12583$bP4ck core-prim . make-custom-textual-input/output-port)
        (g$12582$bP4ck core-prim . make-custom-textual-input-port)
        (g$12581$bP4ck core-prim . make-custom-binary-output-port)
        (g$12580$bP4ck core-prim . make-custom-binary-input/output-port)
        (g$12579$bP4ck core-prim . make-custom-binary-input-port)
        (g$12578$bP4ck core-prim . make-bytevector)
        (g$12577$bP4ck core-prim . lookahead-u8)
        (g$12576$bP4ck core-prim . lookahead-char)
        (g$7241$bP4ck core-prim . i/o-write-error?)
        (g$7227$bP4ck core-prim . i/o-read-error?)
        (g$7347$bP4ck core-prim . i/o-port-error?)
        (g$7257$bP4ck core-prim . i/o-invalid-position-error?)
        (g$7258$bP4ck core-prim . i/o-error-position)
        (g$7274$bP4ck core-prim . i/o-filename-error?)
        (g$7289$bP4ck core-prim . i/o-file-protection-error?)
        (g$7303$bP4ck core-prim . i/o-file-is-read-only-error?)
        (g$7331$bP4ck core-prim . i/o-file-does-not-exist-error?)
        (g$7317$bP4ck core-prim . i/o-file-already-exists-error?)
        (g$7213$bP4ck core-prim . i/o-error?)
        (g$7348$bP4ck core-prim . i/o-error-port)
        (g$7275$bP4ck core-prim . i/o-error-filename)
        (g$7378$bP4ck core-prim . i/o-encoding-error?)
        (g$7379$bP4ck core-prim . i/o-encoding-error-char)
        (g$7362$bP4ck core-prim . i/o-decoding-error?)
        (g$12575$bP4ck core-prim . get-u8)
        (g$12574$bP4ck core-prim . get-string-n!)
        (g$12573$bP4ck core-prim . get-string-n)
        (g$12572$bP4ck core-prim . get-string-all)
        (g$12571$bP4ck core-prim . get-line)
        (g$12570$bP4ck core-prim . get-datum)
        (g$12569$bP4ck core-prim . get-char)
        (g$12568$bP4ck core-prim . get-bytevector-some)
        (g$12567$bP4ck core-prim . get-bytevector-n!)
        (g$12566$bP4ck core-prim . get-bytevector-n)
        (g$12565$bP4ck core-prim . get-bytevector-all)
        (g$12564$bP4ck core-prim . flush-output-port)
        (g$12563$bP4ck core-prim . close-port)
        (g$7386$bP4ck core-prim . call-with-string-output-port)
        (g$7387$bP4ck core-prim . call-with-port)
        (g$12562$bP4ck core-prim . call-with-bytevector-output-port)
        (g$12561$bP4ck core-prim . bytevector->string)
        (g$12560$bP4ck core-prim . buffer-mode?)
        (g$12559$bP4ck core-prim . binary-port?)
        (g$9141$bP4ck core-prim . scheme-report-environment)
        (g$6913$bP4ck core-prim . quotient)
        (g$9140$bP4ck core-prim . null-environment)
        (g$6914$bP4ck core-prim . remainder)
        (g$6915$bP4ck core-prim . modulo)
        (g$6910$bP4ck core-prim . inexact->exact)
        (g$6917$bP4ck core-prim . force)
        (g$6911$bP4ck core-prim . exact->inexact)
        (g$12558$bP4ck core-prim . exit)
        (g$12145$bP4ck core-prim . command-line)
        (g$12557$bP4ck core-prim . string-fill!)
        (g$12556$bP4ck core-prim . string-set!)
        (g$12555$bP4ck core-prim . set-cdr!)
        (g$12554$bP4ck core-prim . set-car!)
        (g$5877$bP4ck core-prim . remove)
        (g$5878$bP4ck core-prim . remv)
        (g$5858$bP4ck core-prim . remp)
        (g$5879$bP4ck core-prim . remq)
        (g$5857$bP4ck core-prim . partition)
        (g$5865$bP4ck core-prim . memv)
        (g$5864$bP4ck core-prim . memq)
        (g$5867$bP4ck core-prim . memp)
        (g$5866$bP4ck core-prim . member)
        (g$5871$bP4ck core-prim . exists)
        (g$5870$bP4ck core-prim . for-all)
        (g$5876$bP4ck core-prim . fold-right)
        (g$5875$bP4ck core-prim . fold-left)
        (g$5856$bP4ck core-prim . find)
        (g$5859$bP4ck core-prim . filter)
        (g$5874$bP4ck core-prim . cons*)
        (g$5861$bP4ck core-prim . assv)
        (g$5860$bP4ck core-prim . assq)
        (g$5863$bP4ck core-prim . assp)
        (g$5862$bP4ck core-prim . assoc)
        (g$12553$bP4ck core-prim . with-exception-handler)
        (g$12552$bP4ck core-prim . raise-continuable)
        (g$12551$bP4ck core-prim . raise)
        (g$9143$bP4ck core-prim . eval)
        (g$9139$bP4ck core-prim . environment)
        (g$7484$bP4ck core-prim . make-enumeration)
        (g$7491$bP4ck core-prim . enum-set=?)
        (g$7485$bP4ck core-prim . enum-set-universe)
        (g$7492$bP4ck core-prim . enum-set-union)
        (g$7490$bP4ck core-prim . enum-set-subset?)
        (g$7496$bP4ck core-prim . enum-set-projection)
        (g$7489$bP4ck core-prim . enum-set-member?)
        (g$7493$bP4ck core-prim . enum-set-intersection)
        (g$7486$bP4ck core-prim . enum-set-indexer)
        (g$7494$bP4ck core-prim . enum-set-difference)
        (g$7487$bP4ck core-prim . enum-set-constructor)
        (g$7495$bP4ck core-prim . enum-set-complement)
        (g$7488$bP4ck core-prim . enum-set->list)
        (g$6822$bP4ck core-prim . who-condition?)
        (g$6733$bP4ck core-prim . warning?)
        (g$6775$bP4ck core-prim . violation?)
        (g$6899$bP4ck core-prim . undefined-violation?)
        (g$6883$bP4ck core-prim . syntax-violation?)
        (g$6885$bP4ck core-prim . syntax-violation-subform)
        (g$6884$bP4ck core-prim . syntax-violation-form)
        (g$9161$bP4ck core-prim . syntax-violation)
        (g$12550$bP4ck core-prim . simple-conditions)
        (g$6747$bP4ck core-prim . serious-condition?)
        (g$6837$bP4ck core-prim . non-continuable-violation?)
        (g$6718$bP4ck core-prim . message-condition?)
        (g$6820$bP4ck core-prim . make-who-condition)
        (g$6732$bP4ck core-prim . make-warning)
        (g$6774$bP4ck core-prim . make-violation)
        (g$6898$bP4ck core-prim . make-undefined-violation)
        (g$6880$bP4ck core-prim . make-syntax-violation)
        (g$6746$bP4ck core-prim . make-serious-condition)
        (g$6836$bP4ck core-prim . make-non-continuable-violation)
        (g$6716$bP4ck core-prim . make-message-condition)
        (g$6864$bP4ck core-prim . make-lexical-violation)
        (g$6803$bP4ck core-prim . make-irritants-condition)
        (g$6850$bP4ck core-prim . make-implementation-restriction-violation)
        (g$6760$bP4ck core-prim . make-error)
        (g$6788$bP4ck core-prim . make-assertion-violation)
        (g$6865$bP4ck core-prim . lexical-violation?)
        (g$6805$bP4ck core-prim . irritants-condition?)
        (g$6851$bP4ck core-prim . implementation-restriction-violation?)
        (g$6761$bP4ck core-prim . error?)
        (g$6823$bP4ck core-prim . condition-who)
        (g$12549$bP4ck core-prim . condition-predicate)
        (g$6719$bP4ck core-prim . condition-message)
        (g$6806$bP4ck core-prim . condition-irritants)
        (g$12548$bP4ck core-prim . condition-accessor)
        (g$12547$bP4ck core-prim . condition)
        (g$6789$bP4ck core-prim . assertion-violation?)
        (g$12546$bP4ck core-prim . condition?)
        (g$12545$bP4ck core-prim . utf32->string)
        (g$12544$bP4ck core-prim . utf16->string)
        (g$12543$bP4ck core-prim . utf8->string)
        (g$12542$bP4ck core-prim . uint-list->bytevector)
        (g$12541$bP4ck core-prim . u8-list->bytevector)
        (g$12540$bP4ck core-prim . string->utf8)
        (g$12539$bP4ck core-prim . string->utf32)
        (g$12538$bP4ck core-prim . string->utf16)
        (g$12537$bP4ck core-prim . sint-list->bytevector)
        (g$6574$bP4ck core-prim . native-endianness)
        (g$12536$bP4ck core-prim . bytevector?)
        (g$12535$bP4ck core-prim . bytevector=?)
        (g$12534$bP4ck core-prim . bytevector-uint-set!)
        (g$12533$bP4ck core-prim . bytevector-uint-ref)
        (g$12532$bP4ck core-prim . bytevector-u8-set!)
        (g$12531$bP4ck core-prim . bytevector-u8-ref)
        (g$6595$bP4ck core-prim . bytevector-u64-set!)
        (g$6591$bP4ck core-prim . bytevector-u64-ref)
        (g$6597$bP4ck core-prim . bytevector-u64-native-set!)
        (g$6593$bP4ck core-prim . bytevector-u64-native-ref)
        (g$6587$bP4ck core-prim . bytevector-u32-set!)
        (g$6583$bP4ck core-prim . bytevector-u32-ref)
        (g$6589$bP4ck core-prim . bytevector-u32-native-set!)
        (g$6585$bP4ck core-prim . bytevector-u32-native-ref)
        (g$6579$bP4ck core-prim . bytevector-u16-set!)
        (g$6575$bP4ck core-prim . bytevector-u16-ref)
        (g$6581$bP4ck core-prim . bytevector-u16-native-set!)
        (g$6577$bP4ck core-prim . bytevector-u16-native-ref)
        (g$12530$bP4ck core-prim . bytevector-sint-set!)
        (g$12529$bP4ck core-prim . bytevector-sint-ref)
        (g$12528$bP4ck core-prim . bytevector-s8-set!)
        (g$12527$bP4ck core-prim . bytevector-s8-ref)
        (g$6596$bP4ck core-prim . bytevector-s64-set!)
        (g$6592$bP4ck core-prim . bytevector-s64-ref)
        (g$6598$bP4ck core-prim . bytevector-s64-native-set!)
        (g$6594$bP4ck core-prim . bytevector-s64-native-ref)
        (g$6588$bP4ck core-prim . bytevector-s32-set!)
        (g$6584$bP4ck core-prim . bytevector-s32-ref)
        (g$6590$bP4ck core-prim . bytevector-s32-native-set!)
        (g$6586$bP4ck core-prim . bytevector-s32-native-ref)
        (g$6580$bP4ck core-prim . bytevector-s16-set!)
        (g$6576$bP4ck core-prim . bytevector-s16-ref)
        (g$6582$bP4ck core-prim . bytevector-s16-native-set!)
        (g$6578$bP4ck core-prim . bytevector-s16-native-ref)
        (g$12526$bP4ck core-prim . bytevector-length)
        (g$12525$bP4ck core-prim . bytevector-ieee-single-set!)
        (g$12524$bP4ck core-prim . bytevector-ieee-single-ref)
        (g$6601$bP4ck core-prim . bytevector-ieee-single-native-set!)
        (g$6599$bP4ck core-prim . bytevector-ieee-single-native-ref)
        (g$12523$bP4ck core-prim . bytevector-ieee-double-set!)
        (g$12522$bP4ck core-prim . bytevector-ieee-double-ref)
        (g$6602$bP4ck core-prim . bytevector-ieee-double-native-set!)
        (g$6600$bP4ck core-prim . bytevector-ieee-double-native-ref)
        (g$12521$bP4ck core-prim . bytevector-fill!)
        (g$12520$bP4ck core-prim . bytevector-copy!)
        (g$12519$bP4ck core-prim . bytevector-copy)
        (g$12518$bP4ck core-prim . bytevector->uint-list)
        (g$12517$bP4ck core-prim . bytevector->u8-list)
        (g$12516$bP4ck core-prim . bytevector->sint-list)
        (g$7198$bP4ck core-prim . no-nans-violation?)
        (g$7184$bP4ck core-prim . no-infinities-violation?)
        (g$7197$bP4ck core-prim . make-no-nans-violation)
        (g$7183$bP4ck core-prim . make-no-infinities-violation)
        (g$12515$bP4ck core-prim . real->flonum)
        (g$12514$bP4ck core-prim . flzero?)
        (g$12513$bP4ck core-prim . fltruncate)
        (g$12512$bP4ck core-prim . fltan)
        (g$12511$bP4ck core-prim . flsqrt)
        (g$12510$bP4ck core-prim . flsin)
        (g$12509$bP4ck core-prim . flround)
        (g$12508$bP4ck core-prim . flpositive?)
        (g$12507$bP4ck core-prim . flonum?)
        (g$12506$bP4ck core-prim . flodd?)
        (g$12505$bP4ck core-prim . flnumerator)
        (g$12504$bP4ck core-prim . flnegative?)
        (g$12503$bP4ck core-prim . flnan?)
        (g$12502$bP4ck core-prim . flmod0)
        (g$12501$bP4ck core-prim . flmod)
        (g$12500$bP4ck core-prim . flmin)
        (g$12499$bP4ck core-prim . flmax)
        (g$12498$bP4ck core-prim . fllog)
        (g$12497$bP4ck core-prim . flinteger?)
        (g$12496$bP4ck core-prim . flinfinite?)
        (g$12495$bP4ck core-prim . flfloor)
        (g$12494$bP4ck core-prim . flfinite?)
        (g$12493$bP4ck core-prim . flexpt)
        (g$12492$bP4ck core-prim . flexp)
        (g$12491$bP4ck core-prim . fleven?)
        (g$12490$bP4ck core-prim . fldiv0-and-mod0)
        (g$12489$bP4ck core-prim . fldiv0)
        (g$12488$bP4ck core-prim . fldiv-and-mod)
        (g$12487$bP4ck core-prim . fldiv)
        (g$12486$bP4ck core-prim . fldenominator)
        (g$12485$bP4ck core-prim . flcos)
        (g$12484$bP4ck core-prim . flceiling)
        (g$12483$bP4ck core-prim . flatan)
        (g$12482$bP4ck core-prim . flasin)
        (g$12481$bP4ck core-prim . flacos)
        (g$12480$bP4ck core-prim . flabs)
        (g$12479$bP4ck core-prim . fl>?)
        (g$12478$bP4ck core-prim . fl>=?)
        (g$12477$bP4ck core-prim . fl=?)
        (g$12476$bP4ck core-prim . fl<?)
        (g$12475$bP4ck core-prim . fl<=?)
        (g$12474$bP4ck core-prim . fl/)
        (g$12473$bP4ck core-prim . fl-)
        (g$12472$bP4ck core-prim . fl+)
        (g$12471$bP4ck core-prim . fl*)
        (g$12470$bP4ck core-prim . fixnum->flonum)
        (g$12469$bP4ck core-prim . fxzero?)
        (g$12468$bP4ck core-prim . fxxor)
        (g$7130$bP4ck core-prim . fxrotate-bit-field)
        (g$12467$bP4ck core-prim . fxreverse-bit-field)
        (g$12466$bP4ck core-prim . fxpositive?)
        (g$12465$bP4ck core-prim . fxodd?)
        (g$12464$bP4ck core-prim . fxnot)
        (g$12463$bP4ck core-prim . fxnegative?)
        (g$12462$bP4ck core-prim . fxmod0)
        (g$12461$bP4ck core-prim . fxmod)
        (g$12460$bP4ck core-prim . fxmin)
        (g$12459$bP4ck core-prim . fxmax)
        (g$12458$bP4ck core-prim . fxlength)
        (g$12457$bP4ck core-prim . fxior)
        (g$7124$bP4ck core-prim . fxif)
        (g$12456$bP4ck core-prim . fxfirst-bit-set)
        (g$12455$bP4ck core-prim . fxeven?)
        (g$12454$bP4ck core-prim . fxdiv0-and-mod0)
        (g$12453$bP4ck core-prim . fxdiv0)
        (g$12452$bP4ck core-prim . fxdiv-and-mod)
        (g$12451$bP4ck core-prim . fxdiv)
        (g$7127$bP4ck core-prim . fxcopy-bit-field)
        (g$7125$bP4ck core-prim . fxcopy-bit)
        (g$12450$bP4ck core-prim . fxbit-set?)
        (g$7126$bP4ck core-prim . fxbit-field)
        (g$12449$bP4ck core-prim . fxbit-count)
        (g$7129$bP4ck core-prim . fxarithmetic-shift-right)
        (g$7128$bP4ck core-prim . fxarithmetic-shift-left)
        (g$12448$bP4ck core-prim . fxarithmetic-shift)
        (g$12447$bP4ck core-prim . fxand)
        (g$12446$bP4ck core-prim . fx>?)
        (g$12445$bP4ck core-prim . fx>=?)
        (g$12444$bP4ck core-prim . fx=?)
        (g$12443$bP4ck core-prim . fx<?)
        (g$12442$bP4ck core-prim . fx<=?)
        (g$7122$bP4ck core-prim . fx-/carry)
        (g$12441$bP4ck core-prim . fx-)
        (g$7123$bP4ck core-prim . fx+/carry)
        (g$12440$bP4ck core-prim . fx+)
        (g$7121$bP4ck core-prim . fx*/carry)
        (g$12439$bP4ck core-prim . fx*)
        (g$12438$bP4ck core-prim . greatest-fixnum)
        (g$12437$bP4ck core-prim . least-fixnum)
        (g$12436$bP4ck core-prim . fixnum-width)
        (g$12435$bP4ck core-prim . fixnum?)
        (g$7095$bP4ck core-prim . bitwise-rotate-bit-field)
        (g$12434$bP4ck core-prim . bitwise-reverse-bit-field)
        (g$12433$bP4ck core-prim . bitwise-length)
        (g$7089$bP4ck core-prim . bitwise-if)
        (g$12432$bP4ck core-prim . bitwise-first-bit-set)
        (g$7092$bP4ck core-prim . bitwise-copy-bit-field)
        (g$7090$bP4ck core-prim . bitwise-copy-bit)
        (g$12431$bP4ck core-prim . bitwise-bit-set?)
        (g$7091$bP4ck core-prim . bitwise-bit-field)
        (g$12430$bP4ck core-prim . bitwise-bit-count)
        (g$12429$bP4ck core-prim . bitwise-xor)
        (g$12428$bP4ck core-prim . bitwise-ior)
        (g$12427$bP4ck core-prim . bitwise-and)
        (g$12426$bP4ck core-prim . bitwise-not)
        (g$7094$bP4ck core-prim . bitwise-arithmetic-shift-right)
        (g$7093$bP4ck core-prim . bitwise-arithmetic-shift-left)
        (g$12425$bP4ck core-prim . bitwise-arithmetic-shift)
        (g$6020$bP4ck core-prim . zero?)
        (g$12424$bP4ck core-prim . vector?)
        (g$12423$bP4ck core-prim . vector-set!)
        (g$12422$bP4ck core-prim . vector-ref)
        (g$12421$bP4ck core-prim . vector-map)
        (g$12420$bP4ck core-prim . vector-length)
        (g$12419$bP4ck core-prim . vector-for-each)
        (g$12418$bP4ck core-prim . vector-fill!)
        (g$12417$bP4ck core-prim . vector->list)
        (g$12416$bP4ck core-prim . vector)
        (g$12415$bP4ck core-prim . values)
        (g$12414$bP4ck core-prim . truncate)
        (g$12413$bP4ck core-prim . tan)
        (g$12412$bP4ck core-prim . symbol?)
        (g$6066$bP4ck core-prim . symbol=?)
        (g$12411$bP4ck core-prim . symbol->string)
        (g$12410$bP4ck core-prim . substring)
        (g$12409$bP4ck core-prim . string?)
        (g$6063$bP4ck core-prim . string>?)
        (g$6065$bP4ck core-prim . string>=?)
        (g$6061$bP4ck core-prim . string=?)
        (g$6062$bP4ck core-prim . string<?)
        (g$6064$bP4ck core-prim . string<=?)
        (g$12408$bP4ck core-prim . string-ref)
        (g$12407$bP4ck core-prim . string-length)
        (g$12406$bP4ck core-prim . string-for-each)
        (g$12405$bP4ck core-prim . string-copy)
        (g$12404$bP4ck core-prim . string-append)
        (g$12403$bP4ck core-prim . string->symbol)
        (g$12402$bP4ck core-prim . string->number)
        (g$12401$bP4ck core-prim . string->list)
        (g$12400$bP4ck core-prim . string)
        (g$12399$bP4ck core-prim . sqrt)
        (g$12398$bP4ck core-prim . sin)
        (g$12397$bP4ck core-prim . round)
        (g$12396$bP4ck core-prim . reverse)
        (g$12395$bP4ck core-prim . real?)
        (g$12394$bP4ck core-prim . real-valued?)
        (g$12393$bP4ck core-prim . real-part)
        (g$6107$bP4ck core-prim . rationalize)
        (g$12392$bP4ck core-prim . rational?)
        (g$12391$bP4ck core-prim . rational-valued?)
        (g$12390$bP4ck core-prim . procedure?)
        (g$6018$bP4ck core-prim . positive?)
        (g$12389$bP4ck core-prim . pair?)
        (g$6022$bP4ck core-prim . odd?)
        (g$12388$bP4ck core-prim . numerator)
        (g$12387$bP4ck core-prim . number?)
        (g$12386$bP4ck core-prim . number->string)
        (g$12385$bP4ck core-prim . null?)
        (g$12384$bP4ck core-prim . not)
        (g$6019$bP4ck core-prim . negative?)
        (g$12383$bP4ck core-prim . nan?)
        (g$6024$bP4ck core-prim . min)
        (g$6023$bP4ck core-prim . max)
        (g$5872$bP4ck core-prim . map)
        (g$12382$bP4ck core-prim . make-vector)
        (g$12381$bP4ck core-prim . make-string)
        (g$12380$bP4ck core-prim . make-rectangular)
        (g$12379$bP4ck core-prim . make-polar)
        (g$12378$bP4ck core-prim . magnitude)
        (g$12377$bP4ck core-prim . log)
        (g$12376$bP4ck core-prim . list?)
        (g$5852$bP4ck core-prim . list-tail)
        (g$5853$bP4ck core-prim . list-ref)
        (g$12375$bP4ck core-prim . list->vector)
        (g$12374$bP4ck core-prim . list->string)
        (g$12373$bP4ck core-prim . list)
        (g$12372$bP4ck core-prim . length)
        (g$6026$bP4ck core-prim . lcm)
        (g$12371$bP4ck core-prim . integer?)
        (g$12370$bP4ck core-prim . integer-valued?)
        (g$12369$bP4ck core-prim . integer->char)
        (g$12368$bP4ck core-prim . infinite?)
        (g$12367$bP4ck core-prim . inexact?)
        (g$12366$bP4ck core-prim . inexact)
        (g$12365$bP4ck core-prim . imag-part)
        (g$6025$bP4ck core-prim . gcd)
        (g$5873$bP4ck core-prim . for-each)
        (g$12364$bP4ck core-prim . floor)
        (g$12363$bP4ck core-prim . finite?)
        (g$12362$bP4ck core-prim . expt)
        (g$12361$bP4ck core-prim . exp)
        (g$12360$bP4ck core-prim . exact?)
        (g$12359$bP4ck core-prim . exact-integer-sqrt)
        (g$12358$bP4ck core-prim . exact)
        (g$6021$bP4ck core-prim . even?)
        (g$12357$bP4ck core-prim . error)
        (g$12356$bP4ck core-prim . eqv?)
        (g$12355$bP4ck core-prim . equal?)
        (g$12354$bP4ck core-prim . eq?)
        (g$12353$bP4ck core-prim . dynamic-wind)
        (g$12352$bP4ck core-prim . div0-and-mod0)
        (g$12351$bP4ck core-prim . mod0)
        (g$12350$bP4ck core-prim . div0)
        (g$12349$bP4ck core-prim . div-and-mod)
        (g$12348$bP4ck core-prim . mod)
        (g$12347$bP4ck core-prim . div)
        (g$12346$bP4ck core-prim . denominator)
        (g$12345$bP4ck core-prim . cos)
        (g$12344$bP4ck core-prim . cons)
        (g$12343$bP4ck core-prim . complex?)
        (g$12342$bP4ck core-prim . char?)
        (g$6104$bP4ck core-prim . char>?)
        (g$6106$bP4ck core-prim . char>=?)
        (g$6102$bP4ck core-prim . char=?)
        (g$6103$bP4ck core-prim . char<?)
        (g$6105$bP4ck core-prim . char<=?)
        (g$12341$bP4ck core-prim . char->integer)
        (g$12340$bP4ck core-prim . ceiling)
        (g$12339$bP4ck core-prim . call-with-values)
        (g$12338$bP4ck core-prim . call/cc)
        (g$12337$bP4ck core-prim . call-with-current-continuation)
        (g$6017$bP4ck core-prim . cddddr)
        (g$6016$bP4ck core-prim . cdddar)
        (g$6015$bP4ck core-prim . cddadr)
        (g$6014$bP4ck core-prim . cddaar)
        (g$6013$bP4ck core-prim . cdaddr)
        (g$6012$bP4ck core-prim . cdadar)
        (g$6011$bP4ck core-prim . cdaadr)
        (g$6010$bP4ck core-prim . cdaaar)
        (g$6009$bP4ck core-prim . cadddr)
        (g$6008$bP4ck core-prim . caddar)
        (g$6007$bP4ck core-prim . cadadr)
        (g$6006$bP4ck core-prim . cadaar)
        (g$6005$bP4ck core-prim . caaddr)
        (g$6004$bP4ck core-prim . caadar)
        (g$6003$bP4ck core-prim . caaadr)
        (g$6002$bP4ck core-prim . caaaar)
        (g$6001$bP4ck core-prim . cdddr)
        (g$6000$bP4ck core-prim . cddar)
        (g$5999$bP4ck core-prim . cdadr)
        (g$5998$bP4ck core-prim . cdaar)
        (g$5997$bP4ck core-prim . caddr)
        (g$5996$bP4ck core-prim . cadar)
        (g$5995$bP4ck core-prim . caadr)
        (g$5994$bP4ck core-prim . caaar)
        (g$5993$bP4ck core-prim . cddr)
        (g$5992$bP4ck core-prim . cdar)
        (g$5991$bP4ck core-prim . cadr)
        (g$5990$bP4ck core-prim . caar)
        (g$12336$bP4ck core-prim . cdr)
        (g$12335$bP4ck core-prim . car)
        (g$12334$bP4ck core-prim . boolean?)
        (g$6067$bP4ck core-prim . boolean=?)
        (g$12333$bP4ck core-prim . atan)
        (g$12332$bP4ck core-prim . assertion-violation)
        (g$12331$bP4ck core-prim . asin)
        (g$12330$bP4ck core-prim . apply)
        (g$12329$bP4ck core-prim . append)
        (g$12328$bP4ck core-prim . angle)
        (g$12327$bP4ck core-prim . acos)
        (g$12326$bP4ck core-prim . abs)
        (g$12325$bP4ck core-prim . /)
        (g$12324$bP4ck core-prim . *)
        (g$12323$bP4ck core-prim . -)
        (g$12322$bP4ck core-prim . +)
        (g$12321$bP4ck core-prim . >=)
        (g$12320$bP4ck core-prim . >)
        (g$12319$bP4ck core-prim . =)
        (g$12318$bP4ck core-prim . <=)
        (g$12317$bP4ck core-prim . <)
        (g$12316$bP4ck core-prim . make-record-printer)
        (g$12315$bP4ck core-prim . eqv-hash)
        (g$12314$bP4ck core-prim . reverse!)
        (g$12313$bP4ck core-prim . deserialize-port)
        (g$12312$bP4ck core-prim . serialize-port)
        (g$7459$bP4ck core-prim . enum-set?)
        (g$6916$bP4ck core-prim . make-promise)
        (g$12147$bP4ck core-prim . load/args)
        (g$7570$bP4ck core-prim . printf)
        (g$7571$bP4ck core-prim . fprintf)
        (g$7572$bP4ck core-prim . format)
        (g$12311$bP4ck core-prim . procedure-form)
        (g$12310$bP4ck core-prim . procedure-environment)
        (g$12309$bP4ck core-prim . procedure-name)
        (g$12308$bP4ck core-prim . procedure-arity)
        (g$12307$bP4ck core-prim . gc-collect)
        (g$12306$bP4ck core-prim . clr-type?)
        (g$12305$bP4ck core-prim . get-clr-type)
        (g$12304$bP4ck core-prim . get-command-line)
        (g$12303$bP4ck core-prim . vector-append)
        (g$12302$bP4ck core-prim . vector-filter)
        (g$12301$bP4ck core-prim . vector-reverse!)
        (g$12300$bP4ck core-prim . vector-contains?)
        (g$12299$bP4ck core-prim . vector-index-of)
        (g$12298$bP4ck core-prim . vector-copy)
        (g$12297$bP4ck core-prim . vector-binary-search)
        (g$12296$bP4ck core-prim . string-ci-compare)
        (g$12295$bP4ck core-prim . string-compare)
        (g$12294$bP4ck core-prim . string-format)
        (g$12144$bP4ck core-prim . trace-printer)
        (g$12293$bP4ck core-prim . make-traced-procedure)
        (g$7592$bP4ck core-prim . make-traced-macro)
        (g$9157$bP4ck core-prim . assertion-error)
        (g$12292$bP4ck core-prim . time-it)
        (g$7862$bP4ck core-prim . make-parameter)
        (g$12291$bP4ck core-prim . library-locator)
        (g$12290$bP4ck core-prim . get-library-paths)
        (g$12289$bP4ck core-prim . open-tcp-input/output-port)
        (g$12288$bP4ck core-prim . hashtable-for-each)
        (g$12287$bP4ck core-prim . hashtable-map)
        (g$9135$bP4ck core-prim . environment-bindings)
        (g$9138$bP4ck core-prim . environment-symbols)
        (g$9134$bP4ck core-prim . interaction-environment-symbols)
        (g$12286$bP4ck core-prim . optimization-level)
        (g$8317$bP4ck core-prim . library-path)
        (g$9144$bP4ck core-prim . expand->core)
        (g$9142$bP4ck core-prim . expand)
        (g$7648$bP4ck core-prim . convert->cps)
        (g$7647$bP4ck core-prim . parse->cps)
        (g$12285$bP4ck $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12284$bP4ck $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12283$bP4ck $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12282$bP4ck $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12281$bP4ck $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12280$bP4ck
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12279$bP4ck
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12278$bP4ck
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12277$bP4ck
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12276$bP4ck $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12275$bP4ck
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12274$bP4ck $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12273$bP4ck $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12272$bP4ck $core-rtd &i/o-rtd &i/o-rcd)
        (g$12271$bP4ck $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12270$bP4ck $core-rtd &undefined-rtd &undefined-rcd)
        (g$12269$bP4ck $core-rtd &syntax-rtd &syntax-rcd)
        (g$12268$bP4ck $core-rtd &lexical-rtd &lexical-rcd)
        (g$12267$bP4ck
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12266$bP4ck $core-rtd &who-rtd &who-rcd)
        (g$12265$bP4ck $core-rtd &irritants-rtd &irritants-rcd)
        (g$12264$bP4ck $core-rtd &assertion-rtd &assertion-rcd)
        (g$12263$bP4ck $core-rtd &violation-rtd &violation-rcd)
        (g$12262$bP4ck $core-rtd &error-rtd &error-rcd)
        (g$12261$bP4ck $core-rtd &serious-rtd &serious-rcd)
        (g$12260$bP4ck $core-rtd &warning-rtd &warning-rcd)
        (g$12259$bP4ck $core-rtd &message-rtd &message-rcd)
        (g$12258$bP4ck $core-rtd &condition-rtd &condition-rcd)
        (g$12257$bP4ck macro . define-condition-type)
        (g$12256$bP4ck macro . define-enumeration)
        (g$12255$bP4ck macro . define-record-type)
        (g$12254$bP4ck macro . parent-rtd)
        (g$12253$bP4ck macro . nongenerative)
        (g$12252$bP4ck macro . opaque)
        (g$12251$bP4ck macro . sealed)
        (g$12250$bP4ck macro . protocol)
        (g$12249$bP4ck macro . parent)
        (g$12248$bP4ck macro . immutable)
        (g$12247$bP4ck macro . mutable)
        (g$12246$bP4ck macro . fields)
        (g$12245$bP4ck macro . error-handling-mode)
        (g$12244$bP4ck macro . file-options)
        (g$12243$bP4ck macro . buffer-mode)
        (g$12242$bP4ck macro . eol-style)
        (g$12241$bP4ck macro . guard)
        (g$12240$bP4ck macro . trace-letrec-syntax)
        (g$12239$bP4ck macro . trace-let-syntax)
        (g$12238$bP4ck macro . trace-define-syntax)
        (g$12237$bP4ck macro . trace-define)
        (g$12236$bP4ck macro . trace-lambda)
        (g$12235$bP4ck macro . unsyntax-splicing)
        (g$12234$bP4ck macro . unsyntax)
        (g$12233$bP4ck macro . unquote-splicing)
        (g$12232$bP4ck macro . unquote)
        (g$12231$bP4ck macro . _)
        (g$12230$bP4ck macro . else)
        (g$12229$bP4ck macro . =>)
        (g$12228$bP4ck macro . ...)
        (g$12227$bP4ck macro . assert)
        (g$12226$bP4ck macro . endianness)
        (g$12225$bP4ck macro . delay)
        (g$12224$bP4ck macro . time)
        (g$12223$bP4ck macro . or)
        (g$12222$bP4ck macro . and)
        (g$12221$bP4ck macro . do)
        (g$12220$bP4ck macro . cond)
        (g$12219$bP4ck macro . let*)
        (g$12218$bP4ck macro . let)
        (g$12217$bP4ck macro . identifier-syntax)
        (g$12216$bP4ck macro . with-syntax)
        (g$12215$bP4ck macro . quasisyntax)
        (g$12214$bP4ck macro . quasiquote)
        (g$12213$bP4ck macro . syntax-rules)
        (g$12212$bP4ck macro . include-into)
        (g$12211$bP4ck macro . include)
        (g$12210$bP4ck macro . define-struct)
        (g$12209$bP4ck macro . let-values)
        (g$12208$bP4ck macro . let*-values)
        (g$12207$bP4ck core-macro . record-constructor-descriptor)
        (g$12206$bP4ck core-macro . record-type-descriptor)
        (g$12205$bP4ck core-macro . fluid-let-syntax)
        (g$12204$bP4ck macro . case)
        (g$12203$bP4ck macro . parameterize)
        (g$12202$bP4ck macro . unless)
        (g$12201$bP4ck macro . when)
        (g$12200$bP4ck core-macro . if)
        (g$12199$bP4ck core-macro . letrec*)
        (g$12198$bP4ck core-macro . letrec)
        (g$12197$bP4ck core-macro . type-descriptor)
        (g$12196$bP4ck core-macro . case-lambda)
        (g$12195$bP4ck core-macro . lambda)
        (g$12194$bP4ck core-macro . syntax)
        (g$12193$bP4ck core-macro . syntax-case)
        (g$12192$bP4ck core-macro . quote)
        (g$12191$bP4ck core-macro . foreign-call)
        (g$12190$bP4ck letrec-syntax)
        (g$12189$bP4ck let-syntax)
        (g$12188$bP4ck set!)
        (g$12187$bP4ck export)
        (g$12186$bP4ck import)
        (g$12185$bP4ck library)
        (g$12184$bP4ck begin)
        (g$12183$bP4ck module)
        (g$12182$bP4ck define-syntax)
        (g$12181$bP4ck define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7514$bP4ck
      'g$12808$bP4ck
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12691$bP4ck)
        (eval-core . g$12690$bP4ck)
        (set-symbol-value! . g$12689$bP4ck)
        (symbol-value . g$12688$bP4ck)
        (gensym . g$12686$bP4ck)
        (void . g$12685$bP4ck))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11608$bP4ck
     g$trace-printer$11648$bP4ck
     (g$make-parameter$6978$bP4ck write))
   (g$command-line$11609$bP4ck
     g$command-line$11649$bP4ck
     (g$make-parameter$6978$bP4ck (get-command-line)))
   (g$local-library-path$11610$bP4ck
     g$local-library-path$11650$bP4ck
     (case-lambda
       ((g$filename$11621$bP4ck)
        (cons
          (g$get-directory-name$5558$bP4ck g$filename$11621$bP4ck)
          (g$library-path$7498$bP4ck)))))
   (g$load/args$11611$bP4ck
     g$load/args$11651$bP4ck
     (case-lambda
       ((g$filename$11622$bP4ck . g$args$11623$bP4ck)
        (begin
          (apply
            g$load-r6rs-top-level$11618$bP4ck
            g$filename$11622$bP4ck
            'load
            g$args$11623$bP4ck)
          (void)))))
   (g$load$11612$bP4ck
     g$load$11652$bP4ck
     (case-lambda
       ((g$filename$11624$bP4ck)
        (begin
          (apply
            g$load-r6rs-top-level$11618$bP4ck
            g$filename$11624$bP4ck
            'load
            (cdr (g$command-line$11609$bP4ck)))
          (void)))))
   (g$ironscheme-build$11613$bP4ck
     g$ironscheme-build$11653$bP4ck
     (case-lambda (() (g$load$11612$bP4ck '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11614$bP4ck
     g$eval-top-level$11654$bP4ck
     (case-lambda
       ((g$x$11625$bP4ck)
        (g$eval$11581$bP4ck
          g$x$11625$bP4ck
          (g$interaction-environment$11606$bP4ck)))))
   (g$compile-system-libraries$11615$bP4ck
     g$compile-system-libraries$11655$bP4ck
     (case-lambda
       (()
        (g$eval-top-level$11614$bP4ck
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11616$bP4ck
     g$compile$11656$bP4ck
     (case-lambda
       ((g$filename$11626$bP4ck)
        (g$load-r6rs-top-level$11618$bP4ck g$filename$11626$bP4ck 'compile))))
   (g$compile->closure$11617$bP4ck
     g$compile->closure$11657$bP4ck
     (case-lambda
       ((g$filename$11627$bP4ck)
        (g$load-r6rs-top-level$11618$bP4ck g$filename$11627$bP4ck 'closure))))
   (g$load-r6rs-top-level$11618$bP4ck
     g$load-r6rs-top-level$11658$bP4ck
     (case-lambda
       ((g$filename$11628$bP4ck g$how$11629$bP4ck . g$args$11630$bP4ck)
        ((case-lambda
           ((g$library-path$11633$bP4ck g$library-path$11634$bP4ck)
            ((case-lambda
               ((g$swap$11635$bP4ck)
                (dynamic-wind
                  g$swap$11635$bP4ck
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11636$bP4ck)
                         ((case-lambda
                            ((g$t$11637$bP4ck)
                             (if (g$memv$5056$bP4ck g$t$11637$bP4ck '(closure))
                               (g$pre-compile-r6rs-top-level$11604$bP4ck
                                 g$x*$11636$bP4ck)
                               (if (g$memv$5056$bP4ck g$t$11637$bP4ck '(load))
                                 ((case-lambda
                                    ((g$command-line$11640$bP4ck
                                       g$command-line$11641$bP4ck)
                                     ((case-lambda
                                        ((g$swap$11642$bP4ck)
                                         (dynamic-wind
                                           g$swap$11642$bP4ck
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11603$bP4ck
                                                 g$x*$11636$bP4ck))))
                                           g$swap$11642$bP4ck)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11643$bP4ck)
                                             (begin
                                               (g$command-line$11640$bP4ck
                                                 g$command-line$11641$bP4ck)
                                               (set! g$command-line$11641$bP4ck
                                                 g$t$11643$bP4ck))))
                                          (g$command-line$11640$bP4ck)))))))
                                  g$command-line$11609$bP4ck
                                  (cons
                                    g$filename$11628$bP4ck
                                    (g$map$5063$bP4ck
                                      (case-lambda
                                        ((g$x$11644$bP4ck)
                                         (g$format$6559$bP4ck
                                           '"~a"
                                           g$x$11644$bP4ck)))
                                      g$args$11630$bP4ck)))
                                 (if (g$memv$5056$bP4ck
                                       g$t$11637$bP4ck
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11603$bP4ck
                                       g$x*$11636$bP4ck)
                                     (g$serialize-all$7502$bP4ck
                                       serialize-library
                                       g$compile-core-expr$7225$bP4ck))
                                   (if '#f '#f (void)))))))
                          g$how$11629$bP4ck)))
                      (g$with-input-from-file$6385$bP4ck
                        g$filename$11628$bP4ck
                        (case-lambda
                          (()
                           ((letrec ((g$f$11645$bP4ck
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11646$bP4ck)
                                              (if (eof-object? g$x$11646$bP4ck)
                                                '()
                                                (cons
                                                  g$x$11646$bP4ck
                                                  (g$f$11645$bP4ck)))))
                                           (read-annotated))))))
                              g$f$11645$bP4ck))))))))
                  g$swap$11635$bP4ck)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11647$bP4ck)
                    (begin
                      (g$library-path$11633$bP4ck g$library-path$11634$bP4ck)
                      (set! g$library-path$11634$bP4ck g$t$11647$bP4ck))))
                 (g$library-path$11633$bP4ck)))))))
         g$library-path$7498$bP4ck
         (g$local-library-path$11610$bP4ck g$filename$11628$bP4ck)))))
   (g$fo$11619$bP4ck
     g$fo$11659$bP4ck
     (g$make-enumeration$6521$bP4ck '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7503$bP4ck
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11620$bP4ck)
         (if (g$serious-condition?$5820$bP4ck g$ex$11620$bP4ck)
           (raise g$ex$11620$bP4ck)
           (begin (display g$ex$11620$bP4ck) (g$newline$6389$bP4ck))))))
    (set-symbol-value! 'load g$load$11612$bP4ck)
    (set-symbol-value! 'compile g$compile$11616$bP4ck)
    (set-symbol-value! 'compile->closure g$compile->closure$11617$bP4ck)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11614$bP4ck)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11572$bP4ck)
    (set-symbol-value! 'expanded2core g$expanded->core$7224$bP4ck)
    (set-symbol-value! 'trace-printer g$trace-printer$11608$bP4ck)
    (set-symbol-value! 'convert->cps g$convert->cps$6878$bP4ck)
    (g$file-options-constructor$6979$bP4ck
      (g$enum-set-constructor$6524$bP4ck g$fo$11619$bP4ck))
    (g$library-path$7498$bP4ck (get-library-paths))))

