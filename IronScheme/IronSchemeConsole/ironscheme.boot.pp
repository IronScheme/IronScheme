;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* ((g$caar$7472$1HvE18 g$caar$7544$1HvE18 (case-lambda ((g$x$7503$1HvE18) (car (car g$x$7503$1HvE18))))) (g$cadr$7473$1HvE18 g$cadr$7545$1HvE18 (case-lambda ((g$x$7504$1HvE18) (car (cdr g$x$7504$1HvE18))))) (g$cdar$7474$1HvE18 g$cdar$7546$1HvE18 (case-lambda ((g$x$7505$1HvE18) (cdr (car g$x$7505$1HvE18))))) (g$cddr$7475$1HvE18 g$cddr$7547$1HvE18 (case-lambda ((g$x$7506$1HvE18) (cdr (cdr g$x$7506$1HvE18))))) (g$caaar$7476$1HvE18 g$caaar$7548$1HvE18 (case-lambda ((g$x$7507$1HvE18) (g$caar$7472$1HvE18 (car g$x$7507$1HvE18))))) (g$caadr$7477$1HvE18 g$caadr$7549$1HvE18 (case-lambda ((g$x$7508$1HvE18) (g$caar$7472$1HvE18 (cdr g$x$7508$1HvE18))))) (g$cadar$7478$1HvE18 g$cadar$7550$1HvE18 (case-lambda ((g$x$7509$1HvE18) (g$cadr$7473$1HvE18 (car g$x$7509$1HvE18))))) (g$caddr$7479$1HvE18 g$caddr$7551$1HvE18 (case-lambda ((g$x$7510$1HvE18) (g$cadr$7473$1HvE18 (cdr g$x$7510$1HvE18))))) (g$cdaar$7480$1HvE18 g$cdaar$7552$1HvE18 (case-lambda ((g$x$7511$1HvE18) (g$cdar$7474$1HvE18 (car g$x$7511$1HvE18))))) (g$cdadr$7481$1HvE18 g$cdadr$7553$1HvE18 (case-lambda ((g$x$7512$1HvE18) (g$cdar$7474$1HvE18 (cdr g$x$7512$1HvE18))))) (g$cddar$7482$1HvE18 g$cddar$7554$1HvE18 (case-lambda ((g$x$7513$1HvE18) (g$cddr$7475$1HvE18 (car g$x$7513$1HvE18))))) (g$cdddr$7483$1HvE18 g$cdddr$7555$1HvE18 (case-lambda ((g$x$7514$1HvE18) (g$cddr$7475$1HvE18 (cdr g$x$7514$1HvE18))))) (g$caaaar$7484$1HvE18 g$caaaar$7556$1HvE18 (case-lambda ((g$x$7515$1HvE18) (g$caaar$7476$1HvE18 (car g$x$7515$1HvE18))))) (g$caaadr$7485$1HvE18 g$caaadr$7557$1HvE18 (case-lambda ((g$x$7516$1HvE18) (g$caaar$7476$1HvE18 (cdr g$x$7516$1HvE18))))) (g$caadar$7486$1HvE18 g$caadar$7558$1HvE18 (case-lambda ((g$x$7517$1HvE18) (g$caadr$7477$1HvE18 (car g$x$7517$1HvE18))))) (g$caaddr$7487$1HvE18 g$caaddr$7559$1HvE18 (case-lambda ((g$x$7518$1HvE18) (g$caadr$7477$1HvE18 (cdr g$x$7518$1HvE18))))) (g$cadaar$7488$1HvE18 g$cadaar$7560$1HvE18 (case-lambda ((g$x$7519$1HvE18) (g$cadar$7478$1HvE18 (car g$x$7519$1HvE18))))) (g$cadadr$7489$1HvE18 g$cadadr$7561$1HvE18 (case-lambda ((g$x$7520$1HvE18) (g$cadar$7478$1HvE18 (cdr g$x$7520$1HvE18))))) (g$caddar$7490$1HvE18 g$caddar$7562$1HvE18 (case-lambda ((g$x$7521$1HvE18) (g$caddr$7479$1HvE18 (car g$x$7521$1HvE18))))) (g$cadddr$7491$1HvE18 g$cadddr$7563$1HvE18 (case-lambda ((g$x$7522$1HvE18) (g$caddr$7479$1HvE18 (cdr g$x$7522$1HvE18))))) (g$cdaaar$7492$1HvE18 g$cdaaar$7564$1HvE18 (case-lambda ((g$x$7523$1HvE18) (g$cdaar$7480$1HvE18 (car g$x$7523$1HvE18))))) (g$cdaadr$7493$1HvE18 g$cdaadr$7565$1HvE18 (case-lambda ((g$x$7524$1HvE18) (g$cdaar$7480$1HvE18 (cdr g$x$7524$1HvE18))))) (g$cdadar$7494$1HvE18 g$cdadar$7566$1HvE18 (case-lambda ((g$x$7525$1HvE18) (g$cdadr$7481$1HvE18 (car g$x$7525$1HvE18))))) (g$cdaddr$7495$1HvE18 g$cdaddr$7567$1HvE18 (case-lambda ((g$x$7526$1HvE18) (g$cdadr$7481$1HvE18 (cdr g$x$7526$1HvE18))))) (g$cddaar$7496$1HvE18 g$cddaar$7568$1HvE18 (case-lambda ((g$x$7527$1HvE18) (g$cddar$7482$1HvE18 (car g$x$7527$1HvE18))))) (g$cddadr$7497$1HvE18 g$cddadr$7569$1HvE18 (case-lambda ((g$x$7528$1HvE18) (g$cddar$7482$1HvE18 (cdr g$x$7528$1HvE18))))) (g$cdddar$7498$1HvE18 g$cdddar$7570$1HvE18 (case-lambda ((g$x$7529$1HvE18) (g$cdddr$7483$1HvE18 (car g$x$7529$1HvE18))))) (g$cddddr$7499$1HvE18 g$cddddr$7571$1HvE18 (case-lambda ((g$x$7530$1HvE18) (g$cdddr$7483$1HvE18 (cdr g$x$7530$1HvE18))))) (g$rationalize$7500$1HvE18 g$rationalize$7572$1HvE18 (case-lambda ((g$x$7531$1HvE18 g$e$7532$1HvE18) (apply / (g$find-ratio$7501$1HvE18 g$x$7531$1HvE18 g$e$7532$1HvE18))))) (g$find-ratio$7501$1HvE18 g$find-ratio$7573$1HvE18 (case-lambda ((g$x$7533$1HvE18 g$e$7534$1HvE18) (g$find-ratio-between$7502$1HvE18 (- g$x$7533$1HvE18 g$e$7534$1HvE18) (+ g$x$7533$1HvE18 g$e$7534$1HvE18))))) (g$find-ratio-between$7502$1HvE18 g$find-ratio-between$7574$1HvE18 (case-lambda ((g$x$7535$1HvE18 g$y$7536$1HvE18) (letrec* ((g$sr$7537$1HvE18 (case-lambda ((g$x$7539$1HvE18 g$y$7540$1HvE18) ((case-lambda ((g$fx$7541$1HvE18 g$fy$7542$1HvE18) (if (>= g$fx$7541$1HvE18 g$x$7539$1HvE18) (list g$fx$7541$1HvE18 '1) (if (= g$fx$7541$1HvE18 g$fy$7542$1HvE18) ((case-lambda ((g$rat$7543$1HvE18) (list (+ (g$cadr$7473$1HvE18 g$rat$7543$1HvE18) (* g$fx$7541$1HvE18 (car g$rat$7543$1HvE18))) (car g$rat$7543$1HvE18)))) (g$sr$7537$1HvE18 (/ (- g$y$7540$1HvE18 g$fy$7542$1HvE18)) (/ (- g$x$7539$1HvE18 g$fx$7541$1HvE18)))) (list (+ '1 g$fx$7541$1HvE18) '1))))) (exact (floor g$x$7539$1HvE18)) (exact (floor g$y$7540$1HvE18))))))) (if (< g$y$7536$1HvE18 g$x$7535$1HvE18) (g$find-ratio-between$7502$1HvE18 g$y$7536$1HvE18 g$x$7535$1HvE18) (if (>= g$x$7535$1HvE18 g$y$7536$1HvE18) (list g$x$7535$1HvE18 '1) (if (positive? g$x$7535$1HvE18) (g$sr$7537$1HvE18 g$x$7535$1HvE18 g$y$7536$1HvE18) (if (negative? g$y$7536$1HvE18) ((case-lambda ((g$rat$7538$1HvE18) (list (- (car g$rat$7538$1HvE18)) (g$cadr$7473$1HvE18 g$rat$7538$1HvE18)))) (g$sr$7537$1HvE18 (- g$y$7536$1HvE18) (- g$x$7535$1HvE18))) '(0 1)))))))))) (void))
(library-letrec* ((g$using$7770$1HvE18 g$using$7807$1HvE18 (clr-using-internal 'system)) (g$using$7772$1HvE18 g$using$7808$1HvE18 (clr-using-internal 'system.collections)) (g$make-eq-hashtable$7773$1HvE18 g$make-eq-hashtable$7809$1HvE18 (case-lambda (() (clr-new-internal 'hashtable)) ((g$k$7786$1HvE18) (clr-new-internal 'hashtable (clr-cast-internal 'int32 g$k$7786$1HvE18))))) (g$make-eqv-hashtable$7774$1HvE18 g$make-eqv-hashtable$7810$1HvE18 (case-lambda (() (clr-new-internal 'hashtable)) ((g$k$7787$1HvE18) (clr-new-internal 'hashtable (clr-cast-internal 'int32 g$k$7787$1HvE18))))) (g$hashtable-size$7775$1HvE18 g$hashtable-size$7811$1HvE18 (case-lambda ((g$ht$7788$1HvE18) (clr-call-internal 'hashtable 'get_count g$ht$7788$1HvE18)))) (g$hashtable-ref$7776$1HvE18 g$hashtable-ref$7812$1HvE18 (case-lambda ((g$ht$7789$1HvE18 g$key$7790$1HvE18 g$default$7791$1HvE18) (letrec* ((g$r$7792$1HvE18 (clr-call-internal 'hashtable 'get_item g$ht$7789$1HvE18 g$key$7790$1HvE18))) (if (not (null? g$r$7792$1HvE18)) g$r$7792$1HvE18 g$default$7791$1HvE18))))) (g$hashtable-set!$7777$1HvE18 g$hashtable-set!$7813$1HvE18 (case-lambda ((g$ht$7793$1HvE18 g$key$7794$1HvE18 g$obj$7795$1HvE18) (clr-call-internal 'hashtable 'set_item g$ht$7793$1HvE18 g$key$7794$1HvE18 g$obj$7795$1HvE18)))) (g$hashtable-delete!$7778$1HvE18 g$hashtable-delete!$7814$1HvE18 (case-lambda ((g$ht$7796$1HvE18 g$key$7797$1HvE18) (clr-call-internal 'hashtable 'remove g$ht$7796$1HvE18 g$key$7797$1HvE18)))) (g$hashtable-contains?$7779$1HvE18 g$hashtable-contains?$7815$1HvE18 (case-lambda ((g$ht$7798$1HvE18 g$key$7799$1HvE18) (clr-call-internal 'hashtable 'containskey g$ht$7798$1HvE18 g$key$7799$1HvE18)))) (g$hashtable-update!$7780$1HvE18 g$hashtable-update!$7816$1HvE18 (case-lambda ((g$ht$7800$1HvE18 g$key$7801$1HvE18 g$proc$7802$1HvE18 g$default$7803$1HvE18) (g$hashtable-set!$7777$1HvE18 g$ht$7800$1HvE18 g$key$7801$1HvE18 (g$proc$7802$1HvE18 (g$hashtable-ref$7776$1HvE18 g$ht$7800$1HvE18 g$key$7801$1HvE18 g$default$7803$1HvE18)))))) (g$hashtable-clear!$7781$1HvE18 g$hashtable-clear!$7817$1HvE18 (case-lambda ((g$ht$7804$1HvE18) (clr-call-internal 'hashtable 'clear g$ht$7804$1HvE18)) ((g$ht$7805$1HvE18 g$k$7806$1HvE18) (clr-call-internal 'hashtable 'clear g$ht$7805$1HvE18)))) (g$hashtable-equivalence-function$7782$1HvE18 g$hashtable-equivalence-function$7818$1HvE18 '#f) (g$hashtable-hash-function$7783$1HvE18 g$hashtable-hash-function$7819$1HvE18 '#f) (g$clear-usings$7785$1HvE18 g$clear-usings$7820$1HvE18 (clr-clear-usings-internal))) (void))
(library-letrec* ((g$using$7822$1HvE18 g$using$7888$1HvE18 (clr-using-internal 'system.io)) (g$file-exists?$7823$1HvE18 g$file-exists?$7889$1HvE18 (case-lambda ((g$fn$7851$1HvE18) (clr-call-internal 'file 'exists '() g$fn$7851$1HvE18)))) (g$delete-file$7824$1HvE18 g$delete-file$7890$1HvE18 (case-lambda ((g$fn$7852$1HvE18) (clr-call-internal 'file 'delete '() g$fn$7852$1HvE18)))) (g$file-copy$7825$1HvE18 g$file-copy$7891$1HvE18 (case-lambda ((g$from$7853$1HvE18 g$to$7854$1HvE18) (g$file-copy$7825$1HvE18 g$from$7853$1HvE18 g$to$7854$1HvE18 '#f)) ((g$from$7855$1HvE18 g$to$7856$1HvE18 g$overwrite?$7857$1HvE18) (clr-call-internal 'file 'copy '() g$from$7855$1HvE18 g$to$7856$1HvE18 g$overwrite?$7857$1HvE18)))) (g$file-move$7826$1HvE18 g$file-move$7892$1HvE18 (case-lambda ((g$from$7858$1HvE18 g$to$7859$1HvE18) (clr-call-internal 'file 'move '() g$from$7858$1HvE18 g$to$7859$1HvE18)))) (g$file-create-time$7827$1HvE18 g$file-create-time$7893$1HvE18 (case-lambda ((g$fn$7860$1HvE18) (clr-call-internal 'file 'getcreationtime '() g$fn$7860$1HvE18)))) (g$file-access-time$7828$1HvE18 g$file-access-time$7894$1HvE18 (case-lambda ((g$fn$7861$1HvE18) (clr-call-internal 'file 'getlastaccesstime '() g$fn$7861$1HvE18)))) (g$file-modified-time$7829$1HvE18 g$file-modified-time$7895$1HvE18 (case-lambda ((g$fn$7862$1HvE18) (clr-call-internal 'file 'getlastwritetime '() g$fn$7862$1HvE18)))) (g$directory-exists?$7830$1HvE18 g$directory-exists?$7896$1HvE18 (case-lambda ((g$fn$7863$1HvE18) (clr-call-internal 'directory 'exists '() g$fn$7863$1HvE18)))) (g$delete-directory$7831$1HvE18 g$delete-directory$7897$1HvE18 (case-lambda ((g$dir$7864$1HvE18) (g$delete-directory$7831$1HvE18 g$dir$7864$1HvE18 '#f)) ((g$dir$7865$1HvE18 g$recursive?$7866$1HvE18) (clr-call-internal 'directory 'delete '() g$dir$7865$1HvE18 g$recursive?$7866$1HvE18)))) (g$directory-move$7832$1HvE18 g$directory-move$7898$1HvE18 (case-lambda ((g$from$7867$1HvE18 g$to$7868$1HvE18) (clr-call-internal 'directory 'move '() g$from$7867$1HvE18 g$to$7868$1HvE18)))) (g$create-directory$7833$1HvE18 g$create-directory$7899$1HvE18 (case-lambda ((g$name$7869$1HvE18) (clr-call-internal 'directory 'createdirectory '() g$name$7869$1HvE18)))) (g$get-files$7834$1HvE18 g$get-files$7900$1HvE18 (case-lambda ((g$dir$7870$1HvE18) (g$get-files$7834$1HvE18 g$dir$7870$1HvE18 '"*")) ((g$dir$7871$1HvE18 g$pattern$7872$1HvE18) (clr-call-internal 'directory 'getfiles '() g$dir$7871$1HvE18 g$pattern$7872$1HvE18)))) (g$get-directories$7835$1HvE18 g$get-directories$7901$1HvE18 (case-lambda ((g$dir$7873$1HvE18) (g$get-directories$7835$1HvE18 g$dir$7873$1HvE18 '"*")) ((g$dir$7874$1HvE18 g$pattern$7875$1HvE18) (clr-call-internal 'directory 'getdirectories '() g$dir$7874$1HvE18 g$pattern$7875$1HvE18)))) (g$change-extension$7836$1HvE18 g$change-extension$7902$1HvE18 (case-lambda ((g$path$7876$1HvE18 g$extension$7877$1HvE18) (clr-call-internal 'path 'changeextension '() g$path$7876$1HvE18 g$extension$7877$1HvE18)))) (g$path-combine$7837$1HvE18 g$path-combine$7903$1HvE18 (case-lambda ((g$path1$7878$1HvE18 g$path2$7879$1HvE18) (clr-call-internal 'path 'combine '() g$path1$7878$1HvE18 g$path2$7879$1HvE18)))) (g$get-directory-name$7838$1HvE18 g$get-directory-name$7904$1HvE18 (case-lambda ((g$path$7880$1HvE18) (clr-call-internal 'path 'getdirectoryname '() g$path$7880$1HvE18)))) (g$get-extension$7839$1HvE18 g$get-extension$7905$1HvE18 (case-lambda ((g$path$7881$1HvE18) (clr-call-internal 'path 'getextension '() g$path$7881$1HvE18)))) (g$get-filename$7840$1HvE18 g$get-filename$7906$1HvE18 (case-lambda ((g$path$7882$1HvE18) (clr-call-internal 'path 'getfilename '() g$path$7882$1HvE18)))) (g$get-filename-without-extension$7841$1HvE18 g$get-filename-without-extension$7907$1HvE18 (case-lambda ((g$path$7883$1HvE18) (clr-call-internal 'path 'getfilenamewithoutextension '() g$path$7883$1HvE18)))) (g$get-full-path$7842$1HvE18 g$get-full-path$7908$1HvE18 (case-lambda ((g$path$7884$1HvE18) (clr-call-internal 'path 'getfullpath '() g$path$7884$1HvE18)))) (g$get-path-root$7843$1HvE18 g$get-path-root$7909$1HvE18 (case-lambda ((g$path$7885$1HvE18) (clr-call-internal 'path 'getpathroot '() g$path$7885$1HvE18)))) (g$get-random-filename$7844$1HvE18 g$get-random-filename$7910$1HvE18 (case-lambda (() (clr-call-internal 'path 'getrandomfilename '())))) (g$get-temp-filename$7845$1HvE18 g$get-temp-filename$7911$1HvE18 (case-lambda (() (clr-call-internal 'path 'gettempfilename '())))) (g$get-temp-path$7846$1HvE18 g$get-temp-path$7912$1HvE18 (case-lambda (() (clr-call-internal 'path 'gettemppath '())))) (g$path-rooted?$7847$1HvE18 g$path-rooted?$7913$1HvE18 (case-lambda ((g$path$7886$1HvE18) (clr-call-internal 'path 'ispathrooted '() g$path$7886$1HvE18)))) (g$path-has-extension?$7848$1HvE18 g$path-has-extension?$7914$1HvE18 (case-lambda ((g$path$7887$1HvE18) (clr-call-internal 'path 'hasextension '() g$path$7887$1HvE18)))) (g$clear-usings$7850$1HvE18 g$clear-usings$7915$1HvE18 (clr-clear-usings-internal))) (void))
(library-letrec* ((g$all-empty?$7916$1HvE18 g$all-empty?$7963$1HvE18 (case-lambda ((g$ls$7926$1HvE18) ((case-lambda ((g$t$7927$1HvE18) (if g$t$7927$1HvE18 g$t$7927$1HvE18 (begin '#f (if (null? (car g$ls$7926$1HvE18)) (begin '#f (g$all-empty?$7916$1HvE18 (cdr g$ls$7926$1HvE18))) '#f))))) (null? g$ls$7926$1HvE18))))) (g$split$7917$1HvE18 g$split$7964$1HvE18 (case-lambda ((g$ls$7928$1HvE18) (if (null? g$ls$7928$1HvE18) (values '() '()) (call-with-values (case-lambda (() (g$split$7917$1HvE18 (cdr g$ls$7928$1HvE18)))) (case-lambda ((g$cars$7929$1HvE18 g$cdrs$7930$1HvE18) ((case-lambda ((g$a$7931$1HvE18) (values (cons (car g$a$7931$1HvE18) g$cars$7929$1HvE18) (cons (cdr g$a$7931$1HvE18) g$cdrs$7930$1HvE18)))) (car g$ls$7928$1HvE18))))))))) (g$for-all$7918$1HvE18 g$for-all$7965$1HvE18 (case-lambda ((g$f$7932$1HvE18 . g$args$7933$1HvE18) (if (g$all-empty?$7916$1HvE18 g$args$7933$1HvE18) '#t (call-with-values (case-lambda (() (g$split$7917$1HvE18 g$args$7933$1HvE18))) (case-lambda ((g$cars$7934$1HvE18 g$cdrs$7935$1HvE18) (if (apply g$f$7932$1HvE18 g$cars$7934$1HvE18) (begin '#f (apply g$for-all$7918$1HvE18 g$f$7932$1HvE18 g$cdrs$7935$1HvE18)) '#f)))))))) (g$exists$7919$1HvE18 g$exists$7966$1HvE18 (case-lambda ((g$f$7936$1HvE18 . g$args$7937$1HvE18) (if (g$all-empty?$7916$1HvE18 g$args$7937$1HvE18) '#f (call-with-values (case-lambda (() (g$split$7917$1HvE18 g$args$7937$1HvE18))) (case-lambda ((g$cars$7938$1HvE18 g$cdrs$7939$1HvE18) ((case-lambda ((g$t$7940$1HvE18) (if g$t$7940$1HvE18 g$t$7940$1HvE18 (begin '#f (apply g$exists$7919$1HvE18 g$f$7936$1HvE18 g$cdrs$7939$1HvE18))))) (apply g$f$7936$1HvE18 g$cars$7938$1HvE18))))))))) (g$cons*$7920$1HvE18 g$cons*$7967$1HvE18 (case-lambda ((g$a$7941$1HvE18 . g$rest$7942$1HvE18) ((letrec ((g$f$7943$1HvE18 (case-lambda ((g$a$7944$1HvE18 g$rest$7945$1HvE18) (if (null? g$rest$7945$1HvE18) g$a$7944$1HvE18 (cons g$a$7944$1HvE18 (g$f$7943$1HvE18 (car g$rest$7945$1HvE18) (cdr g$rest$7945$1HvE18)))))))) g$f$7943$1HvE18) g$a$7941$1HvE18 g$rest$7942$1HvE18)))) (g$fold-left$7921$1HvE18 g$fold-left$7968$1HvE18 (case-lambda ((g$combine$7946$1HvE18 g$nil$7947$1HvE18 g$list1$7948$1HvE18 . g$lists$7949$1HvE18) (if (null? g$list1$7948$1HvE18) g$nil$7947$1HvE18 (apply g$fold-left$7921$1HvE18 (g$cons*$7920$1HvE18 g$combine$7946$1HvE18 (apply g$combine$7946$1HvE18 (g$cons*$7920$1HvE18 g$nil$7947$1HvE18 (car g$list1$7948$1HvE18) (map car g$lists$7949$1HvE18))) (cdr g$list1$7948$1HvE18) (map cdr g$lists$7949$1HvE18))))))) (g$fold-right$7922$1HvE18 g$fold-right$7969$1HvE18 (case-lambda ((g$combine$7950$1HvE18 g$nil$7951$1HvE18 g$list1$7952$1HvE18 . g$lists$7953$1HvE18) (if (null? g$list1$7952$1HvE18) g$nil$7951$1HvE18 (apply g$combine$7950$1HvE18 (append (list (car g$list1$7952$1HvE18)) (map car g$lists$7953$1HvE18) (list (apply g$fold-right$7922$1HvE18 (g$cons*$7920$1HvE18 g$combine$7950$1HvE18 g$nil$7951$1HvE18 (cdr g$list1$7952$1HvE18) (map cdr g$lists$7953$1HvE18)))))))))) (g$remove$7923$1HvE18 g$remove$7970$1HvE18 (case-lambda ((g$obj$7954$1HvE18 g$list$7955$1HvE18) (remp (case-lambda ((g$x$7956$1HvE18) (equal? g$obj$7954$1HvE18 g$x$7956$1HvE18))) g$list$7955$1HvE18)))) (g$remv$7924$1HvE18 g$remv$7971$1HvE18 (case-lambda ((g$obj$7957$1HvE18 g$list$7958$1HvE18) (remp (case-lambda ((g$x$7959$1HvE18) (eqv? g$obj$7957$1HvE18 g$x$7959$1HvE18))) g$list$7958$1HvE18)))) (g$remq$7925$1HvE18 g$remq$7972$1HvE18 (case-lambda ((g$obj$7960$1HvE18 g$list$7961$1HvE18) (remp (case-lambda ((g$x$7962$1HvE18) (eq? g$obj$7960$1HvE18 g$x$7962$1HvE18))) g$list$7961$1HvE18))))) (void))
(library-letrec* ((g$native-endianness$7973$1HvE18 g$native-endianness$8084$1HvE18 (case-lambda (() 'little))) (g$bytevector-u16-ref$7974$1HvE18 g$bytevector-u16-ref$8085$1HvE18 (case-lambda ((g$bytevector$8002$1HvE18 g$k$8003$1HvE18 g$endianness$8004$1HvE18) (bytevector-uint-ref g$bytevector$8002$1HvE18 g$k$8003$1HvE18 g$endianness$8004$1HvE18 '2)))) (g$bytevector-s16-ref$7975$1HvE18 g$bytevector-s16-ref$8086$1HvE18 (case-lambda ((g$bytevector$8005$1HvE18 g$k$8006$1HvE18 g$endianness$8007$1HvE18) (bytevector-sint-ref g$bytevector$8005$1HvE18 g$k$8006$1HvE18 g$endianness$8007$1HvE18 '2)))) (g$bytevector-u16-native-ref$7976$1HvE18 g$bytevector-u16-native-ref$8087$1HvE18 (case-lambda ((g$bytevector$8008$1HvE18 g$k$8009$1HvE18) (bytevector-uint-ref g$bytevector$8008$1HvE18 g$k$8009$1HvE18 (g$native-endianness$7973$1HvE18) '2)))) (g$bytevector-s16-native-ref$7977$1HvE18 g$bytevector-s16-native-ref$8088$1HvE18 (case-lambda ((g$bytevector$8010$1HvE18 g$k$8011$1HvE18) (bytevector-sint-ref g$bytevector$8010$1HvE18 g$k$8011$1HvE18 (g$native-endianness$7973$1HvE18) '2)))) (g$bytevector-u16-set!$7978$1HvE18 g$bytevector-u16-set!$8089$1HvE18 (case-lambda ((g$bytevector$8012$1HvE18 g$k$8013$1HvE18 g$n$8014$1HvE18 g$endianness$8015$1HvE18) (bytevector-uint-ref g$bytevector$8012$1HvE18 g$k$8013$1HvE18 g$endianness$8015$1HvE18 '2)))) (g$bytevector-s16-set!$7979$1HvE18 g$bytevector-s16-set!$8090$1HvE18 (case-lambda ((g$bytevector$8016$1HvE18 g$k$8017$1HvE18 g$n$8018$1HvE18 g$endianness$8019$1HvE18) (bytevector-sint-ref g$bytevector$8016$1HvE18 g$k$8017$1HvE18 g$endianness$8019$1HvE18 '2)))) (g$bytevector-u16-native-set!$7980$1HvE18 g$bytevector-u16-native-set!$8091$1HvE18 (case-lambda ((g$bytevector$8020$1HvE18 g$k$8021$1HvE18 g$n$8022$1HvE18) (bytevector-uint-ref g$bytevector$8020$1HvE18 g$k$8021$1HvE18 (g$native-endianness$7973$1HvE18) '2)))) (g$bytevector-s16-native-set!$7981$1HvE18 g$bytevector-s16-native-set!$8092$1HvE18 (case-lambda ((g$bytevector$8023$1HvE18 g$k$8024$1HvE18 g$n$8025$1HvE18) (bytevector-sint-ref g$bytevector$8023$1HvE18 g$k$8024$1HvE18 (g$native-endianness$7973$1HvE18) '2)))) (g$bytevector-u32-ref$7982$1HvE18 g$bytevector-u32-ref$8093$1HvE18 (case-lambda ((g$bytevector$8026$1HvE18 g$k$8027$1HvE18 g$endianness$8028$1HvE18) (bytevector-uint-ref g$bytevector$8026$1HvE18 g$k$8027$1HvE18 g$endianness$8028$1HvE18 '4)))) (g$bytevector-s32-ref$7983$1HvE18 g$bytevector-s32-ref$8094$1HvE18 (case-lambda ((g$bytevector$8029$1HvE18 g$k$8030$1HvE18 g$endianness$8031$1HvE18) (bytevector-sint-ref g$bytevector$8029$1HvE18 g$k$8030$1HvE18 g$endianness$8031$1HvE18 '4)))) (g$bytevector-u32-native-ref$7984$1HvE18 g$bytevector-u32-native-ref$8095$1HvE18 (case-lambda ((g$bytevector$8032$1HvE18 g$k$8033$1HvE18) (bytevector-uint-ref g$bytevector$8032$1HvE18 g$k$8033$1HvE18 (g$native-endianness$7973$1HvE18) '4)))) (g$bytevector-s32-native-ref$7985$1HvE18 g$bytevector-s32-native-ref$8096$1HvE18 (case-lambda ((g$bytevector$8034$1HvE18 g$k$8035$1HvE18) (bytevector-sint-ref g$bytevector$8034$1HvE18 g$k$8035$1HvE18 (g$native-endianness$7973$1HvE18) '4)))) (g$bytevector-u32-set!$7986$1HvE18 g$bytevector-u32-set!$8097$1HvE18 (case-lambda ((g$bytevector$8036$1HvE18 g$k$8037$1HvE18 g$n$8038$1HvE18 g$endianness$8039$1HvE18) (bytevector-uint-ref g$bytevector$8036$1HvE18 g$k$8037$1HvE18 g$endianness$8039$1HvE18 '4)))) (g$bytevector-s32-set!$7987$1HvE18 g$bytevector-s32-set!$8098$1HvE18 (case-lambda ((g$bytevector$8040$1HvE18 g$k$8041$1HvE18 g$n$8042$1HvE18 g$endianness$8043$1HvE18) (bytevector-sint-ref g$bytevector$8040$1HvE18 g$k$8041$1HvE18 g$endianness$8043$1HvE18 '4)))) (g$bytevector-u32-native-set!$7988$1HvE18 g$bytevector-u32-native-set!$8099$1HvE18 (case-lambda ((g$bytevector$8044$1HvE18 g$k$8045$1HvE18 g$n$8046$1HvE18) (bytevector-uint-ref g$bytevector$8044$1HvE18 g$k$8045$1HvE18 (g$native-endianness$7973$1HvE18) '4)))) (g$bytevector-s32-native-set!$7989$1HvE18 g$bytevector-s32-native-set!$8100$1HvE18 (case-lambda ((g$bytevector$8047$1HvE18 g$k$8048$1HvE18 g$n$8049$1HvE18) (bytevector-sint-ref g$bytevector$8047$1HvE18 g$k$8048$1HvE18 (g$native-endianness$7973$1HvE18) '4)))) (g$bytevector-u64-ref$7990$1HvE18 g$bytevector-u64-ref$8101$1HvE18 (case-lambda ((g$bytevector$8050$1HvE18 g$k$8051$1HvE18 g$endianness$8052$1HvE18) (bytevector-uint-ref g$bytevector$8050$1HvE18 g$k$8051$1HvE18 g$endianness$8052$1HvE18 '8)))) (g$bytevector-s64-ref$7991$1HvE18 g$bytevector-s64-ref$8102$1HvE18 (case-lambda ((g$bytevector$8053$1HvE18 g$k$8054$1HvE18 g$endianness$8055$1HvE18) (bytevector-sint-ref g$bytevector$8053$1HvE18 g$k$8054$1HvE18 g$endianness$8055$1HvE18 '8)))) (g$bytevector-u64-native-ref$7992$1HvE18 g$bytevector-u64-native-ref$8103$1HvE18 (case-lambda ((g$bytevector$8056$1HvE18 g$k$8057$1HvE18) (bytevector-uint-ref g$bytevector$8056$1HvE18 g$k$8057$1HvE18 (g$native-endianness$7973$1HvE18) '8)))) (g$bytevector-s64-native-ref$7993$1HvE18 g$bytevector-s64-native-ref$8104$1HvE18 (case-lambda ((g$bytevector$8058$1HvE18 g$k$8059$1HvE18) (bytevector-sint-ref g$bytevector$8058$1HvE18 g$k$8059$1HvE18 (g$native-endianness$7973$1HvE18) '8)))) (g$bytevector-u64-set!$7994$1HvE18 g$bytevector-u64-set!$8105$1HvE18 (case-lambda ((g$bytevector$8060$1HvE18 g$k$8061$1HvE18 g$n$8062$1HvE18 g$endianness$8063$1HvE18) (bytevector-uint-ref g$bytevector$8060$1HvE18 g$k$8061$1HvE18 g$endianness$8063$1HvE18 '8)))) (g$bytevector-s64-set!$7995$1HvE18 g$bytevector-s64-set!$8106$1HvE18 (case-lambda ((g$bytevector$8064$1HvE18 g$k$8065$1HvE18 g$n$8066$1HvE18 g$endianness$8067$1HvE18) (bytevector-sint-ref g$bytevector$8064$1HvE18 g$k$8065$1HvE18 g$endianness$8067$1HvE18 '8)))) (g$bytevector-u64-native-set!$7996$1HvE18 g$bytevector-u64-native-set!$8107$1HvE18 (case-lambda ((g$bytevector$8068$1HvE18 g$k$8069$1HvE18 g$n$8070$1HvE18) (bytevector-uint-ref g$bytevector$8068$1HvE18 g$k$8069$1HvE18 (g$native-endianness$7973$1HvE18) '8)))) (g$bytevector-s64-native-set!$7997$1HvE18 g$bytevector-s64-native-set!$8108$1HvE18 (case-lambda ((g$bytevector$8071$1HvE18 g$k$8072$1HvE18 g$n$8073$1HvE18) (bytevector-sint-ref g$bytevector$8071$1HvE18 g$k$8072$1HvE18 (g$native-endianness$7973$1HvE18) '8)))) (g$bytevector-ieee-single-native-ref$7998$1HvE18 g$bytevector-ieee-single-native-ref$8109$1HvE18 (case-lambda ((g$bytevector$8074$1HvE18 g$k$8075$1HvE18) (bytevector-ieee-single-ref g$bytevector$8074$1HvE18 g$k$8075$1HvE18 (g$native-endianness$7973$1HvE18))))) (g$bytevector-ieee-double-native-ref$7999$1HvE18 g$bytevector-ieee-double-native-ref$8110$1HvE18 (case-lambda ((g$bytevector$8076$1HvE18 g$k$8077$1HvE18) (bytevector-ieee-double-ref g$bytevector$8076$1HvE18 g$k$8077$1HvE18 (g$native-endianness$7973$1HvE18))))) (g$bytevector-ieee-single-native-set!$8000$1HvE18 g$bytevector-ieee-single-native-set!$8111$1HvE18 (case-lambda ((g$bytevector$8078$1HvE18 g$k$8079$1HvE18 g$x$8080$1HvE18) (bytevector-ieee-single-set! g$bytevector$8078$1HvE18 g$k$8079$1HvE18 g$x$8080$1HvE18 (g$native-endianness$7973$1HvE18))))) (g$bytevector-ieee-double-native-set!$8001$1HvE18 g$bytevector-ieee-double-native-set!$8112$1HvE18 (case-lambda ((g$bytevector$8081$1HvE18 g$k$8082$1HvE18 g$x$8083$1HvE18) (bytevector-ieee-double-set! g$bytevector$8081$1HvE18 g$k$8082$1HvE18 g$x$8083$1HvE18 (g$native-endianness$7973$1HvE18)))))) (void))
(library-letrec* () (void))
(library-letrec* () (void))
(library-letrec* () (void))
(library-letrec* () (void))
(library-letrec* ((g$8683$8113$1HvE18 g$8683$8208$1HvE18 (make-record-type-descriptor '&condition '#f 'g$8686$1HvE18 '#f '#f '#())) (g$8685$8114$1HvE18 g$8685$8209$1HvE18 '#f) (g$8684$8115$1HvE18 g$8684$8210$1HvE18 (make-record-constructor-descriptor g$8683$8113$1HvE18 '#f g$8685$8114$1HvE18)) (g$&condition?$8116$1HvE18 g$&condition?$8211$1HvE18 (record-predicate g$8683$8113$1HvE18)) (g$make-&condition$8117$1HvE18 g$make-&condition$8212$1HvE18 (record-constructor g$8684$8115$1HvE18)) (g$&condition-rtd$8118$1HvE18 g$&condition-rtd$8213$1HvE18 g$8683$8113$1HvE18) (g$&condition-rcd$8119$1HvE18 g$&condition-rcd$8214$1HvE18 g$8684$8115$1HvE18) (g$8699$8120$1HvE18 g$8699$8215$1HvE18 (make-record-type-descriptor '&message g$8683$8113$1HvE18 'g$8702$1HvE18 '#f '#f '#((immutable message)))) (g$8701$8121$1HvE18 g$8701$8216$1HvE18 '#f) (g$8700$8122$1HvE18 g$8700$8217$1HvE18 (make-record-constructor-descriptor g$8699$8120$1HvE18 g$8684$8115$1HvE18 g$8701$8121$1HvE18)) (g$8698$8123$1HvE18 g$8698$8218$1HvE18 (record-predicate g$8699$8120$1HvE18)) (g$make-message-condition$8124$1HvE18 g$make-message-condition$8219$1HvE18 (record-constructor g$8700$8122$1HvE18)) (g$8697$8125$1HvE18 g$8697$8220$1HvE18 (record-accessor g$8699$8120$1HvE18 '0)) (g$message-condition?$8126$1HvE18 g$message-condition?$8221$1HvE18 (condition-predicate g$8699$8120$1HvE18)) (g$condition-message$8127$1HvE18 g$condition-message$8222$1HvE18 (condition-accessor g$8699$8120$1HvE18 g$8697$8125$1HvE18)) (g$8715$8128$1HvE18 g$8715$8223$1HvE18 (make-record-type-descriptor '&warning g$8683$8113$1HvE18 'g$8718$1HvE18 '#f '#f '#())) (g$8717$8129$1HvE18 g$8717$8224$1HvE18 '#f) (g$8716$8130$1HvE18 g$8716$8225$1HvE18 (make-record-constructor-descriptor g$8715$8128$1HvE18 g$8684$8115$1HvE18 g$8717$8129$1HvE18)) (g$8714$8131$1HvE18 g$8714$8226$1HvE18 (record-predicate g$8715$8128$1HvE18)) (g$make-warning$8132$1HvE18 g$make-warning$8227$1HvE18 (record-constructor g$8716$8130$1HvE18)) (g$warning?$8133$1HvE18 g$warning?$8228$1HvE18 (condition-predicate g$8715$8128$1HvE18)) (g$8729$8134$1HvE18 g$8729$8229$1HvE18 (make-record-type-descriptor '&serious g$8683$8113$1HvE18 'g$8732$1HvE18 '#f '#f '#())) (g$8731$8135$1HvE18 g$8731$8230$1HvE18 '#f) (g$8730$8136$1HvE18 g$8730$8231$1HvE18 (make-record-constructor-descriptor g$8729$8134$1HvE18 g$8684$8115$1HvE18 g$8731$8135$1HvE18)) (g$8728$8137$1HvE18 g$8728$8232$1HvE18 (record-predicate g$8729$8134$1HvE18)) (g$make-serious-condition$8138$1HvE18 g$make-serious-condition$8233$1HvE18 (record-constructor g$8730$8136$1HvE18)) (g$serious-condition?$8139$1HvE18 g$serious-condition?$8234$1HvE18 (condition-predicate g$8729$8134$1HvE18)) (g$8743$8140$1HvE18 g$8743$8235$1HvE18 (make-record-type-descriptor '&error g$8729$8134$1HvE18 'g$8746$1HvE18 '#f '#f '#())) (g$8745$8141$1HvE18 g$8745$8236$1HvE18 '#f) (g$8744$8142$1HvE18 g$8744$8237$1HvE18 (make-record-constructor-descriptor g$8743$8140$1HvE18 g$8730$8136$1HvE18 g$8745$8141$1HvE18)) (g$8742$8143$1HvE18 g$8742$8238$1HvE18 (record-predicate g$8743$8140$1HvE18)) (g$make-error$8144$1HvE18 g$make-error$8239$1HvE18 (record-constructor g$8744$8142$1HvE18)) (g$error?$8145$1HvE18 g$error?$8240$1HvE18 (condition-predicate g$8743$8140$1HvE18)) (g$8757$8146$1HvE18 g$8757$8241$1HvE18 (make-record-type-descriptor '&violation g$8729$8134$1HvE18 'g$8760$1HvE18 '#f '#f '#())) (g$8759$8147$1HvE18 g$8759$8242$1HvE18 '#f) (g$8758$8148$1HvE18 g$8758$8243$1HvE18 (make-record-constructor-descriptor g$8757$8146$1HvE18 g$8730$8136$1HvE18 g$8759$8147$1HvE18)) (g$8756$8149$1HvE18 g$8756$8244$1HvE18 (record-predicate g$8757$8146$1HvE18)) (g$make-violation$8150$1HvE18 g$make-violation$8245$1HvE18 (record-constructor g$8758$8148$1HvE18)) (g$violation?$8151$1HvE18 g$violation?$8246$1HvE18 (condition-predicate g$8757$8146$1HvE18)) (g$8771$8152$1HvE18 g$8771$8247$1HvE18 (make-record-type-descriptor '&assertion g$8757$8146$1HvE18 'g$8774$1HvE18 '#f '#f '#())) (g$8773$8153$1HvE18 g$8773$8248$1HvE18 '#f) (g$8772$8154$1HvE18 g$8772$8249$1HvE18 (make-record-constructor-descriptor g$8771$8152$1HvE18 g$8758$8148$1HvE18 g$8773$8153$1HvE18)) (g$8770$8155$1HvE18 g$8770$8250$1HvE18 (record-predicate g$8771$8152$1HvE18)) (g$make-assertion-violation$8156$1HvE18 g$make-assertion-violation$8251$1HvE18 (record-constructor g$8772$8154$1HvE18)) (g$assertion-violation?$8157$1HvE18 g$assertion-violation?$8252$1HvE18 (condition-predicate g$8771$8152$1HvE18)) (g$8786$8158$1HvE18 g$8786$8253$1HvE18 (make-record-type-descriptor '&irritants g$8683$8113$1HvE18 'g$8789$1HvE18 '#f '#f '#((immutable irritants)))) (g$8788$8159$1HvE18 g$8788$8254$1HvE18 '#f) (g$8787$8160$1HvE18 g$8787$8255$1HvE18 (make-record-constructor-descriptor g$8786$8158$1HvE18 g$8684$8115$1HvE18 g$8788$8159$1HvE18)) (g$8785$8161$1HvE18 g$8785$8256$1HvE18 (record-predicate g$8786$8158$1HvE18)) (g$make-irritants-condition$8162$1HvE18 g$make-irritants-condition$8257$1HvE18 (record-constructor g$8787$8160$1HvE18)) (g$8784$8163$1HvE18 g$8784$8258$1HvE18 (record-accessor g$8786$8158$1HvE18 '0)) (g$irritants-condition?$8164$1HvE18 g$irritants-condition?$8259$1HvE18 (condition-predicate g$8786$8158$1HvE18)) (g$condition-irritants$8165$1HvE18 g$condition-irritants$8260$1HvE18 (condition-accessor g$8786$8158$1HvE18 g$8784$8163$1HvE18)) (g$8803$8166$1HvE18 g$8803$8261$1HvE18 (make-record-type-descriptor '&who g$8683$8113$1HvE18 'g$8806$1HvE18 '#f '#f '#((immutable who)))) (g$8805$8167$1HvE18 g$8805$8262$1HvE18 '#f) (g$8804$8168$1HvE18 g$8804$8263$1HvE18 (make-record-constructor-descriptor g$8803$8166$1HvE18 g$8684$8115$1HvE18 g$8805$8167$1HvE18)) (g$8802$8169$1HvE18 g$8802$8264$1HvE18 (record-predicate g$8803$8166$1HvE18)) (g$make-who-condition$8170$1HvE18 g$make-who-condition$8265$1HvE18 (record-constructor g$8804$8168$1HvE18)) (g$8801$8171$1HvE18 g$8801$8266$1HvE18 (record-accessor g$8803$8166$1HvE18 '0)) (g$who-condition?$8172$1HvE18 g$who-condition?$8267$1HvE18 (condition-predicate g$8803$8166$1HvE18)) (g$condition-who$8173$1HvE18 g$condition-who$8268$1HvE18 (condition-accessor g$8803$8166$1HvE18 g$8801$8171$1HvE18)) (g$8819$8174$1HvE18 g$8819$8269$1HvE18 (make-record-type-descriptor '&non-continuable g$8757$8146$1HvE18 'g$8822$1HvE18 '#f '#f '#())) (g$8821$8175$1HvE18 g$8821$8270$1HvE18 '#f) (g$8820$8176$1HvE18 g$8820$8271$1HvE18 (make-record-constructor-descriptor g$8819$8174$1HvE18 g$8758$8148$1HvE18 g$8821$8175$1HvE18)) (g$8818$8177$1HvE18 g$8818$8272$1HvE18 (record-predicate g$8819$8174$1HvE18)) (g$make-non-continuable-violation$8178$1HvE18 g$make-non-continuable-violation$8273$1HvE18 (record-constructor g$8820$8176$1HvE18)) (g$non-continuable-violation?$8179$1HvE18 g$non-continuable-violation?$8274$1HvE18 (condition-predicate g$8819$8174$1HvE18)) (g$8833$8180$1HvE18 g$8833$8275$1HvE18 (make-record-type-descriptor '&implementation-restriction g$8757$8146$1HvE18 'g$8836$1HvE18 '#f '#f '#())) (g$8835$8181$1HvE18 g$8835$8276$1HvE18 '#f) (g$8834$8182$1HvE18 g$8834$8277$1HvE18 (make-record-constructor-descriptor g$8833$8180$1HvE18 g$8758$8148$1HvE18 g$8835$8181$1HvE18)) (g$8832$8183$1HvE18 g$8832$8278$1HvE18 (record-predicate g$8833$8180$1HvE18)) (g$make-implementation-restriction-violation$8184$1HvE18 g$make-implementation-restriction-violation$8279$1HvE18 (record-constructor g$8834$8182$1HvE18)) (g$implementation-restriction-violation?$8185$1HvE18 g$implementation-restriction-violation?$8280$1HvE18 (condition-predicate g$8833$8180$1HvE18)) (g$8847$8186$1HvE18 g$8847$8281$1HvE18 (make-record-type-descriptor '&lexical g$8757$8146$1HvE18 'g$8850$1HvE18 '#f '#f '#())) (g$8849$8187$1HvE18 g$8849$8282$1HvE18 '#f) (g$8848$8188$1HvE18 g$8848$8283$1HvE18 (make-record-constructor-descriptor g$8847$8186$1HvE18 g$8758$8148$1HvE18 g$8849$8187$1HvE18)) (g$8846$8189$1HvE18 g$8846$8284$1HvE18 (record-predicate g$8847$8186$1HvE18)) (g$make-lexical-violation$8190$1HvE18 g$make-lexical-violation$8285$1HvE18 (record-constructor g$8848$8188$1HvE18)) (g$lexical-violation?$8191$1HvE18 g$lexical-violation?$8286$1HvE18 (condition-predicate g$8847$8186$1HvE18)) (g$8863$8192$1HvE18 g$8863$8287$1HvE18 (make-record-type-descriptor '&syntax g$8757$8146$1HvE18 'g$8866$1HvE18 '#f '#f '#((immutable form) (immutable subform)))) (g$8865$8193$1HvE18 g$8865$8288$1HvE18 '#f) (g$8864$8194$1HvE18 g$8864$8289$1HvE18 (make-record-constructor-descriptor g$8863$8192$1HvE18 g$8758$8148$1HvE18 g$8865$8193$1HvE18)) (g$8862$8195$1HvE18 g$8862$8290$1HvE18 (record-predicate g$8863$8192$1HvE18)) (g$make-syntax-violation$8196$1HvE18 g$make-syntax-violation$8291$1HvE18 (record-constructor g$8864$8194$1HvE18)) (g$8860$8197$1HvE18 g$8860$8292$1HvE18 (record-accessor g$8863$8192$1HvE18 '0)) (g$8861$8198$1HvE18 g$8861$8293$1HvE18 (record-accessor g$8863$8192$1HvE18 '1)) (g$syntax-violation?$8199$1HvE18 g$syntax-violation?$8294$1HvE18 (condition-predicate g$8863$8192$1HvE18)) (g$syntax-violation-form$8200$1HvE18 g$syntax-violation-form$8295$1HvE18 (condition-accessor g$8863$8192$1HvE18 g$8860$8197$1HvE18)) (g$syntax-violation-subform$8201$1HvE18 g$syntax-violation-subform$8296$1HvE18 (condition-accessor g$8863$8192$1HvE18 g$8861$8198$1HvE18)) (g$8881$8202$1HvE18 g$8881$8297$1HvE18 (make-record-type-descriptor '&undefined g$8757$8146$1HvE18 'g$8884$1HvE18 '#f '#f '#())) (g$8883$8203$1HvE18 g$8883$8298$1HvE18 '#f) (g$8882$8204$1HvE18 g$8882$8299$1HvE18 (make-record-constructor-descriptor g$8881$8202$1HvE18 g$8758$8148$1HvE18 g$8883$8203$1HvE18)) (g$8880$8205$1HvE18 g$8880$8300$1HvE18 (record-predicate g$8881$8202$1HvE18)) (g$make-undefined-violation$8206$1HvE18 g$make-undefined-violation$8301$1HvE18 (record-constructor g$8882$8204$1HvE18)) (g$undefined-violation?$8207$1HvE18 g$undefined-violation?$8302$1HvE18 (condition-predicate g$8881$8202$1HvE18))) (void))
(library-letrec* () (void))
(library-letrec* () (void))
(library-letrec* () (void))
(library-letrec* ((g$sign$8303$1HvE18 g$sign$8314$1HvE18 (case-lambda ((g$n$8307$1HvE18) (if (> g$n$8307$1HvE18 '0) '1 (if (< g$n$8307$1HvE18 '0) '-1 '0))))) (g$quotient$8304$1HvE18 g$quotient$8315$1HvE18 (case-lambda ((g$n1$8308$1HvE18 g$n2$8309$1HvE18) (* (g$sign$8303$1HvE18 g$n1$8308$1HvE18) (g$sign$8303$1HvE18 g$n2$8309$1HvE18) (div (abs g$n1$8308$1HvE18) (abs g$n2$8309$1HvE18)))))) (g$remainder$8305$1HvE18 g$remainder$8316$1HvE18 (case-lambda ((g$n1$8310$1HvE18 g$n2$8311$1HvE18) (* (g$sign$8303$1HvE18 g$n1$8310$1HvE18) (mod (abs g$n1$8310$1HvE18) (abs g$n2$8311$1HvE18)))))) (g$modulo$8306$1HvE18 g$modulo$8317$1HvE18 (case-lambda ((g$n1$8312$1HvE18 g$n2$8313$1HvE18) (* (g$sign$8303$1HvE18 g$n2$8313$1HvE18) (mod (* (g$sign$8303$1HvE18 g$n2$8313$1HvE18) g$n1$8312$1HvE18) (abs g$n2$8313$1HvE18))))))) (void))
(library-letrec* ((g$split$8318$1HvE18 g$split$8344$1HvE18 (case-lambda ((g$ls$8321$1HvE18) ((letrec ((g$loop$8322$1HvE18 (case-lambda ((g$rest$8323$1HvE18 g$left$8324$1HvE18 g$right$8325$1HvE18) (if (null? g$rest$8323$1HvE18) (cons g$left$8324$1HvE18 g$right$8325$1HvE18) (if (null? (cdr g$rest$8323$1HvE18)) (cons (cons (car g$rest$8323$1HvE18) g$left$8324$1HvE18) g$right$8325$1HvE18) (g$loop$8322$1HvE18 (g$cddr$7547$1HvE18 g$rest$8323$1HvE18) (cons (car g$rest$8323$1HvE18) g$left$8324$1HvE18) (cons (g$cadr$7545$1HvE18 g$rest$8323$1HvE18) g$right$8325$1HvE18)))))))) g$loop$8322$1HvE18) g$ls$8321$1HvE18 '() '())))) (g$reverse-it$8319$1HvE18 g$reverse-it$8345$1HvE18 (case-lambda ((g$head$8326$1HvE18 g$tail$8327$1HvE18) (if (null? g$head$8326$1HvE18) g$tail$8327$1HvE18 ((case-lambda ((g$hd$8328$1HvE18 g$tl$8329$1HvE18) (g$reverse-it$8319$1HvE18 g$tl$8329$1HvE18 (cons g$hd$8328$1HvE18 g$tail$8327$1HvE18)))) (car g$head$8326$1HvE18) (cdr g$head$8326$1HvE18)))))) (g$list-sort$8320$1HvE18 g$list-sort$8346$1HvE18 (case-lambda ((g$precedes?$8330$1HvE18 g$ls$8331$1HvE18) ((case-lambda ((g$merge$8332$1HvE18) ((case-lambda (() (if (null? g$ls$8331$1HvE18) '() ((letrec ((g$helper$8333$1HvE18 (case-lambda ((g$piece$8334$1HvE18) (if (null? (cdr g$piece$8334$1HvE18)) g$piece$8334$1HvE18 ((case-lambda ((g$parts$8335$1HvE18) (g$merge$8332$1HvE18 (g$helper$8333$1HvE18 (car g$parts$8335$1HvE18)) (g$helper$8333$1HvE18 (cdr g$parts$8335$1HvE18))))) (g$split$8318$1HvE18 g$piece$8334$1HvE18))))))) g$helper$8333$1HvE18) g$ls$8331$1HvE18))))))) (case-lambda ((g$list-1$8336$1HvE18 g$list-2$8337$1HvE18) ((letrec ((g$loop$8338$1HvE18 (case-lambda ((g$source-1$8339$1HvE18 g$source-2$8340$1HvE18 g$so-far$8341$1HvE18) (if (null? g$source-1$8339$1HvE18) (g$reverse-it$8319$1HvE18 g$so-far$8341$1HvE18 g$source-2$8340$1HvE18) (if (null? g$source-2$8340$1HvE18) (g$reverse-it$8319$1HvE18 g$so-far$8341$1HvE18 g$source-1$8339$1HvE18) ((case-lambda ((g$car-1$8342$1HvE18 g$car-2$8343$1HvE18) (if (g$precedes?$8330$1HvE18 g$car-2$8343$1HvE18 g$car-1$8342$1HvE18) (g$loop$8338$1HvE18 g$source-1$8339$1HvE18 (cdr g$source-2$8340$1HvE18) (cons g$car-2$8343$1HvE18 g$so-far$8341$1HvE18)) (g$loop$8338$1HvE18 g$source-2$8340$1HvE18 (cdr g$source-1$8339$1HvE18) (cons g$car-1$8342$1HvE18 g$so-far$8341$1HvE18))))) (car g$source-1$8339$1HvE18) (car g$source-2$8340$1HvE18)))))))) g$loop$8338$1HvE18) g$list-1$8336$1HvE18 g$list-2$8337$1HvE18 '())))))))) (void))
(library-letrec* () (void))
(library-letrec* () (void))
(library-letrec* ((g$bitwise-if$8384$1HvE18 g$bitwise-if$8435$1HvE18 (case-lambda ((g$ei1$8392$1HvE18 g$ei2$8393$1HvE18 g$ei3$8394$1HvE18) (bitwise-ior (bitwise-and g$ei1$8392$1HvE18 g$ei2$8393$1HvE18) (bitwise-and (bitwise-not g$ei1$8392$1HvE18) g$ei3$8394$1HvE18))))) (g$bitwise-copy-bit$8385$1HvE18 g$bitwise-copy-bit$8436$1HvE18 (case-lambda ((g$ei1$8395$1HvE18 g$ei2$8396$1HvE18 g$ei3$8397$1HvE18) ((case-lambda ((g$mask$8398$1HvE18) ((case-lambda (() (g$bitwise-if$8384$1HvE18 g$mask$8398$1HvE18 (g$bitwise-arithmetic-shift-left$8388$1HvE18 g$ei3$8397$1HvE18 g$ei2$8396$1HvE18) g$ei1$8395$1HvE18)))))) (g$bitwise-arithmetic-shift-left$8388$1HvE18 '1 g$ei2$8396$1HvE18))))) (g$bitwise-bit-field$8386$1HvE18 g$bitwise-bit-field$8437$1HvE18 (case-lambda ((g$ei1$8399$1HvE18 g$ei2$8400$1HvE18 g$ei3$8401$1HvE18) ((case-lambda ((g$mask$8402$1HvE18) (g$bitwise-arithmetic-shift-right$8389$1HvE18 (bitwise-and g$ei1$8399$1HvE18 g$mask$8402$1HvE18) g$ei2$8400$1HvE18))) (bitwise-not (g$bitwise-arithmetic-shift-left$8388$1HvE18 '-1 g$ei3$8401$1HvE18)))))) (g$bitwise-copy-bit-field$8387$1HvE18 g$bitwise-copy-bit-field$8438$1HvE18 (case-lambda ((g$ei1$8403$1HvE18 g$ei2$8404$1HvE18 g$ei3$8405$1HvE18 g$ei4$8406$1HvE18) ((case-lambda ((g$to$8407$1HvE18) ((case-lambda ((g$start$8408$1HvE18) ((case-lambda ((g$end$8409$1HvE18) ((case-lambda ((g$from$8410$1HvE18) ((case-lambda ((g$mask1$8411$1HvE18) ((case-lambda ((g$mask2$8412$1HvE18) ((case-lambda ((g$mask$8413$1HvE18) ((case-lambda (() (g$bitwise-if$8384$1HvE18 g$mask$8413$1HvE18 (g$bitwise-arithmetic-shift-left$8388$1HvE18 g$from$8410$1HvE18 g$start$8408$1HvE18) g$to$8407$1HvE18)))))) (bitwise-and g$mask1$8411$1HvE18 g$mask2$8412$1HvE18)))) (bitwise-not (g$bitwise-arithmetic-shift-left$8388$1HvE18 '-1 g$end$8409$1HvE18))))) (g$bitwise-arithmetic-shift-left$8388$1HvE18 '-1 g$start$8408$1HvE18)))) g$ei4$8406$1HvE18))) g$ei3$8405$1HvE18))) g$ei2$8404$1HvE18))) g$ei1$8403$1HvE18)))) (g$bitwise-arithmetic-shift-left$8388$1HvE18 g$bitwise-arithmetic-shift-left$8439$1HvE18 (case-lambda ((g$ei1$8414$1HvE18 g$ei2$8415$1HvE18) (bitwise-arithmetic-shift g$ei1$8414$1HvE18 g$ei2$8415$1HvE18)))) (g$bitwise-arithmetic-shift-right$8389$1HvE18 g$bitwise-arithmetic-shift-right$8440$1HvE18 (case-lambda ((g$ei1$8416$1HvE18 g$ei2$8417$1HvE18) (bitwise-arithmetic-shift g$ei1$8416$1HvE18 (- g$ei2$8417$1HvE18))))) (g$bitwise-rotate-bit-field$8390$1HvE18 g$bitwise-rotate-bit-field$8441$1HvE18 (case-lambda ((g$ei1$8418$1HvE18 g$ei2$8419$1HvE18 g$ei3$8420$1HvE18 g$ei4$8421$1HvE18) ((case-lambda ((g$n$8422$1HvE18) ((case-lambda ((g$start$8423$1HvE18) ((case-lambda ((g$end$8424$1HvE18) ((case-lambda ((g$count$8425$1HvE18) ((case-lambda ((g$width$8426$1HvE18) ((case-lambda (() (if (positive? g$width$8426$1HvE18) ((case-lambda ((g$count$8427$1HvE18) ((case-lambda ((g$field0$8428$1HvE18) ((case-lambda ((g$field1$8429$1HvE18) ((case-lambda ((g$field2$8430$1HvE18) ((case-lambda ((g$field$8431$1HvE18) ((case-lambda (() (g$bitwise-copy-bit-field$8387$1HvE18 g$n$8422$1HvE18 g$start$8423$1HvE18 g$end$8424$1HvE18 g$field$8431$1HvE18)))))) (bitwise-ior g$field1$8429$1HvE18 g$field2$8430$1HvE18)))) (g$bitwise-arithmetic-shift-right$8389$1HvE18 g$field0$8428$1HvE18 (- g$width$8426$1HvE18 g$count$8427$1HvE18))))) (g$bitwise-arithmetic-shift-left$8388$1HvE18 g$field0$8428$1HvE18 g$count$8427$1HvE18)))) (g$bitwise-bit-field$8386$1HvE18 g$n$8422$1HvE18 g$start$8423$1HvE18 g$end$8424$1HvE18)))) (mod g$count$8425$1HvE18 g$width$8426$1HvE18)) g$n$8422$1HvE18)))))) (- g$end$8424$1HvE18 g$start$8423$1HvE18)))) g$ei4$8421$1HvE18))) g$ei3$8420$1HvE18))) g$ei2$8419$1HvE18))) g$ei1$8418$1HvE18)))) (g$bitwise-reverse-bit-field$8391$1HvE18 g$bitwise-reverse-bit-field$8442$1HvE18 (case-lambda ((g$ei1$8432$1HvE18 g$ei2$8433$1HvE18 g$ei3$8434$1HvE18) 'TODO)))) (void))
(library-letrec* ((g$fxif$8443$1HvE18 g$fxif$8490$1HvE18 (case-lambda ((g$fx1$8450$1HvE18 g$fx2$8451$1HvE18 g$fx3$8452$1HvE18) (fxior (fxand g$fx1$8450$1HvE18 g$fx2$8451$1HvE18) (fxand (fxnot g$fx1$8450$1HvE18) g$fx3$8452$1HvE18))))) (g$fxcopy-bit$8444$1HvE18 g$fxcopy-bit$8491$1HvE18 (case-lambda ((g$fx1$8453$1HvE18 g$fx2$8454$1HvE18 g$fx3$8455$1HvE18) ((case-lambda ((g$mask$8456$1HvE18) ((case-lambda (() (g$fxif$8443$1HvE18 g$mask$8456$1HvE18 (g$fxarithmetic-shift-left$8447$1HvE18 g$fx3$8455$1HvE18 g$fx2$8454$1HvE18) g$fx1$8453$1HvE18)))))) (g$fxarithmetic-shift-left$8447$1HvE18 '1 g$fx2$8454$1HvE18))))) (g$fxbit-field$8445$1HvE18 g$fxbit-field$8492$1HvE18 (case-lambda ((g$fx1$8457$1HvE18 g$fx2$8458$1HvE18 g$fx3$8459$1HvE18) ((case-lambda ((g$mask$8460$1HvE18) ((case-lambda (() (g$fxarithmetic-shift-right$8448$1HvE18 (fxand g$fx1$8457$1HvE18 g$mask$8460$1HvE18) g$fx2$8458$1HvE18)))))) (fxnot (g$fxarithmetic-shift-left$8447$1HvE18 '-1 g$fx3$8459$1HvE18)))))) (g$fxcopy-bit-field$8446$1HvE18 g$fxcopy-bit-field$8493$1HvE18 (case-lambda ((g$fx1$8461$1HvE18 g$fx2$8462$1HvE18 g$fx3$8463$1HvE18 g$fx4$8464$1HvE18) ((case-lambda ((g$to$8465$1HvE18) ((case-lambda ((g$start$8466$1HvE18) ((case-lambda ((g$end$8467$1HvE18) ((case-lambda ((g$from$8468$1HvE18) ((case-lambda ((g$mask1$8469$1HvE18) ((case-lambda ((g$mask2$8470$1HvE18) ((case-lambda ((g$mask$8471$1HvE18) ((case-lambda (() (g$fxif$8443$1HvE18 g$mask$8471$1HvE18 (g$fxarithmetic-shift-left$8447$1HvE18 g$from$8468$1HvE18 g$start$8466$1HvE18) g$to$8465$1HvE18)))))) (fxand g$mask1$8469$1HvE18 g$mask2$8470$1HvE18)))) (fxnot (g$fxarithmetic-shift-left$8447$1HvE18 '-1 g$end$8467$1HvE18))))) (g$fxarithmetic-shift-left$8447$1HvE18 '-1 g$start$8466$1HvE18)))) g$fx4$8464$1HvE18))) g$fx3$8463$1HvE18))) g$fx2$8462$1HvE18))) g$fx1$8461$1HvE18)))) (g$fxarithmetic-shift-left$8447$1HvE18 g$fxarithmetic-shift-left$8494$1HvE18 (case-lambda ((g$fx1$8472$1HvE18 g$fx2$8473$1HvE18) (fxarithmetic-shift g$fx1$8472$1HvE18 g$fx2$8473$1HvE18)))) (g$fxarithmetic-shift-right$8448$1HvE18 g$fxarithmetic-shift-right$8495$1HvE18 (case-lambda ((g$fx1$8474$1HvE18 g$fx2$8475$1HvE18) (fxarithmetic-shift g$fx1$8474$1HvE18 (- g$fx2$8475$1HvE18))))) (g$fxrotate-bit-field$8449$1HvE18 g$fxrotate-bit-field$8496$1HvE18 (case-lambda ((g$fx1$8476$1HvE18 g$fx2$8477$1HvE18 g$fx3$8478$1HvE18 g$fx4$8479$1HvE18) ((case-lambda ((g$n$8480$1HvE18) ((case-lambda ((g$start$8481$1HvE18) ((case-lambda ((g$end$8482$1HvE18) ((case-lambda ((g$count$8483$1HvE18) ((case-lambda ((g$width$8484$1HvE18) ((case-lambda (() (if (positive? g$width$8484$1HvE18) ((case-lambda ((g$count$8485$1HvE18) ((case-lambda ((g$field0$8486$1HvE18) ((case-lambda ((g$field1$8487$1HvE18) ((case-lambda ((g$field2$8488$1HvE18) ((case-lambda ((g$field$8489$1HvE18) ((case-lambda (() (g$fxcopy-bit-field$8446$1HvE18 g$n$8480$1HvE18 g$start$8481$1HvE18 g$end$8482$1HvE18 g$field$8489$1HvE18)))))) (fxior g$field1$8487$1HvE18 g$field2$8488$1HvE18)))) (g$fxarithmetic-shift-right$8448$1HvE18 g$field0$8486$1HvE18 (- g$width$8484$1HvE18 g$count$8485$1HvE18))))) (g$fxarithmetic-shift-left$8447$1HvE18 g$field0$8486$1HvE18 g$count$8485$1HvE18)))) (g$fxbit-field$8445$1HvE18 g$n$8480$1HvE18 g$start$8481$1HvE18 g$end$8482$1HvE18)))) (mod g$count$8483$1HvE18 g$width$8484$1HvE18)) g$n$8480$1HvE18)))))) (- g$end$8482$1HvE18 g$start$8481$1HvE18)))) g$fx4$8479$1HvE18))) g$fx3$8478$1HvE18))) g$fx2$8477$1HvE18))) g$fx1$8476$1HvE18))))) (void))
(library-letrec* ((g$9092$8497$1HvE18 g$9092$8509$1HvE18 (make-record-type-descriptor '&no-infinities &implementation-restriction-rtd 'g$9095$1HvE18 '#f '#f '#())) (g$9094$8498$1HvE18 g$9094$8510$1HvE18 '#f) (g$9093$8499$1HvE18 g$9093$8511$1HvE18 (make-record-constructor-descriptor g$9092$8497$1HvE18 &implementation-restriction-rcd g$9094$8498$1HvE18)) (g$9091$8500$1HvE18 g$9091$8512$1HvE18 (record-predicate g$9092$8497$1HvE18)) (g$make-no-infinities-violation$8501$1HvE18 g$make-no-infinities-violation$8513$1HvE18 (record-constructor g$9093$8499$1HvE18)) (g$no-infinities-violation?$8502$1HvE18 g$no-infinities-violation?$8514$1HvE18 (condition-predicate g$9092$8497$1HvE18)) (g$9106$8503$1HvE18 g$9106$8515$1HvE18 (make-record-type-descriptor '&no-nans &implementation-restriction-rtd 'g$9109$1HvE18 '#f '#f '#())) (g$9108$8504$1HvE18 g$9108$8516$1HvE18 '#f) (g$9107$8505$1HvE18 g$9107$8517$1HvE18 (make-record-constructor-descriptor g$9106$8503$1HvE18 &implementation-restriction-rcd g$9108$8504$1HvE18)) (g$9105$8506$1HvE18 g$9105$8518$1HvE18 (record-predicate g$9106$8503$1HvE18)) (g$make-no-nans-violation$8507$1HvE18 g$make-no-nans-violation$8519$1HvE18 (record-constructor g$9107$8505$1HvE18)) (g$no-nans-violation?$8508$1HvE18 g$no-nans-violation?$8520$1HvE18 (condition-predicate g$9106$8503$1HvE18))) (void))
(library-letrec* ((g$9121$8521$1HvE18 g$9121$8601$1HvE18 (make-record-type-descriptor '&i/o &error-rtd 'g$9124$1HvE18 '#f '#f '#())) (g$9123$8522$1HvE18 g$9123$8602$1HvE18 '#f) (g$9122$8523$1HvE18 g$9122$8603$1HvE18 (make-record-constructor-descriptor g$9121$8521$1HvE18 &error-rcd g$9123$8522$1HvE18)) (g$9120$8524$1HvE18 g$9120$8604$1HvE18 (record-predicate g$9121$8521$1HvE18)) (g$make-i/o-error$8525$1HvE18 g$make-i/o-error$8605$1HvE18 (record-constructor g$9122$8523$1HvE18)) (g$i/o-error?$8526$1HvE18 g$i/o-error?$8606$1HvE18 (condition-predicate g$9121$8521$1HvE18)) (g$9135$8527$1HvE18 g$9135$8607$1HvE18 (make-record-type-descriptor '&i/o-read g$9121$8521$1HvE18 'g$9138$1HvE18 '#f '#f '#())) (g$9137$8528$1HvE18 g$9137$8608$1HvE18 '#f) (g$9136$8529$1HvE18 g$9136$8609$1HvE18 (make-record-constructor-descriptor g$9135$8527$1HvE18 g$9122$8523$1HvE18 g$9137$8528$1HvE18)) (g$9134$8530$1HvE18 g$9134$8610$1HvE18 (record-predicate g$9135$8527$1HvE18)) (g$make-i/o-read-error$8531$1HvE18 g$make-i/o-read-error$8611$1HvE18 (record-constructor g$9136$8529$1HvE18)) (g$i/o-read-error?$8532$1HvE18 g$i/o-read-error?$8612$1HvE18 (condition-predicate g$9135$8527$1HvE18)) (g$9149$8533$1HvE18 g$9149$8613$1HvE18 (make-record-type-descriptor '&i/o-write g$9121$8521$1HvE18 'g$9152$1HvE18 '#f '#f '#())) (g$9151$8534$1HvE18 g$9151$8614$1HvE18 '#f) (g$9150$8535$1HvE18 g$9150$8615$1HvE18 (make-record-constructor-descriptor g$9149$8533$1HvE18 g$9122$8523$1HvE18 g$9151$8534$1HvE18)) (g$9148$8536$1HvE18 g$9148$8616$1HvE18 (record-predicate g$9149$8533$1HvE18)) (g$make-i/o-write-error$8537$1HvE18 g$make-i/o-write-error$8617$1HvE18 (record-constructor g$9150$8535$1HvE18)) (g$i/o-write-error?$8538$1HvE18 g$i/o-write-error?$8618$1HvE18 (condition-predicate g$9149$8533$1HvE18)) (g$9164$8539$1HvE18 g$9164$8619$1HvE18 (make-record-type-descriptor '&i/o-invalid-position g$9121$8521$1HvE18 'g$9167$1HvE18 '#f '#f '#((immutable position)))) (g$9166$8540$1HvE18 g$9166$8620$1HvE18 '#f) (g$9165$8541$1HvE18 g$9165$8621$1HvE18 (make-record-constructor-descriptor g$9164$8539$1HvE18 g$9122$8523$1HvE18 g$9166$8540$1HvE18)) (g$9163$8542$1HvE18 g$9163$8622$1HvE18 (record-predicate g$9164$8539$1HvE18)) (g$make-i/o-invalid-position-error$8543$1HvE18 g$make-i/o-invalid-position-error$8623$1HvE18 (record-constructor g$9165$8541$1HvE18)) (g$9162$8544$1HvE18 g$9162$8624$1HvE18 (record-accessor g$9164$8539$1HvE18 '0)) (g$i/o-invalid-position-error?$8545$1HvE18 g$i/o-invalid-position-error?$8625$1HvE18 (condition-predicate g$9164$8539$1HvE18)) (g$i/o-error-position$8546$1HvE18 g$i/o-error-position$8626$1HvE18 (condition-accessor g$9164$8539$1HvE18 g$9162$8544$1HvE18)) (g$9181$8547$1HvE18 g$9181$8627$1HvE18 (make-record-type-descriptor '&i/o-filename g$9121$8521$1HvE18 'g$9184$1HvE18 '#f '#f '#((immutable filename)))) (g$9183$8548$1HvE18 g$9183$8628$1HvE18 '#f) (g$9182$8549$1HvE18 g$9182$8629$1HvE18 (make-record-constructor-descriptor g$9181$8547$1HvE18 g$9122$8523$1HvE18 g$9183$8548$1HvE18)) (g$9180$8550$1HvE18 g$9180$8630$1HvE18 (record-predicate g$9181$8547$1HvE18)) (g$make-i/o-filename-error$8551$1HvE18 g$make-i/o-filename-error$8631$1HvE18 (record-constructor g$9182$8549$1HvE18)) (g$9179$8552$1HvE18 g$9179$8632$1HvE18 (record-accessor g$9181$8547$1HvE18 '0)) (g$i/o-filename-error?$8553$1HvE18 g$i/o-filename-error?$8633$1HvE18 (condition-predicate g$9181$8547$1HvE18)) (g$i/o-error-filename$8554$1HvE18 g$i/o-error-filename$8634$1HvE18 (condition-accessor g$9181$8547$1HvE18 g$9179$8552$1HvE18)) (g$9197$8555$1HvE18 g$9197$8635$1HvE18 (make-record-type-descriptor '&i/o-file-protection g$9121$8521$1HvE18 'g$9200$1HvE18 '#f '#f '#())) (g$9199$8556$1HvE18 g$9199$8636$1HvE18 '#f) (g$9198$8557$1HvE18 g$9198$8637$1HvE18 (make-record-constructor-descriptor g$9197$8555$1HvE18 g$9122$8523$1HvE18 g$9199$8556$1HvE18)) (g$9196$8558$1HvE18 g$9196$8638$1HvE18 (record-predicate g$9197$8555$1HvE18)) (g$make-i/o-file-protection-error$8559$1HvE18 g$make-i/o-file-protection-error$8639$1HvE18 (record-constructor g$9198$8557$1HvE18)) (g$i/o-file-protection-error?$8560$1HvE18 g$i/o-file-protection-error?$8640$1HvE18 (condition-predicate g$9197$8555$1HvE18)) (g$9211$8561$1HvE18 g$9211$8641$1HvE18 (make-record-type-descriptor '&i/o-file-is-read-only g$9197$8555$1HvE18 'g$9214$1HvE18 '#f '#f '#())) (g$9213$8562$1HvE18 g$9213$8642$1HvE18 '#f) (g$9212$8563$1HvE18 g$9212$8643$1HvE18 (make-record-constructor-descriptor g$9211$8561$1HvE18 g$9198$8557$1HvE18 g$9213$8562$1HvE18)) (g$9210$8564$1HvE18 g$9210$8644$1HvE18 (record-predicate g$9211$8561$1HvE18)) (g$make-i/o-file-is-read-only-error$8565$1HvE18 g$make-i/o-file-is-read-only-error$8645$1HvE18 (record-constructor g$9212$8563$1HvE18)) (g$i/o-file-is-read-only-error?$8566$1HvE18 g$i/o-file-is-read-only-error?$8646$1HvE18 (condition-predicate g$9211$8561$1HvE18)) (g$9225$8567$1HvE18 g$9225$8647$1HvE18 (make-record-type-descriptor '&i/o-file-already-exists g$9181$8547$1HvE18 'g$9228$1HvE18 '#f '#f '#())) (g$9227$8568$1HvE18 g$9227$8648$1HvE18 '#f) (g$9226$8569$1HvE18 g$9226$8649$1HvE18 (make-record-constructor-descriptor g$9225$8567$1HvE18 g$9182$8549$1HvE18 g$9227$8568$1HvE18)) (g$9224$8570$1HvE18 g$9224$8650$1HvE18 (record-predicate g$9225$8567$1HvE18)) (g$make-i/o-file-already-exists-error$8571$1HvE18 g$make-i/o-file-already-exists-error$8651$1HvE18 (record-constructor g$9226$8569$1HvE18)) (g$i/o-file-already-exists-error?$8572$1HvE18 g$i/o-file-already-exists-error?$8652$1HvE18 (condition-predicate g$9225$8567$1HvE18)) (g$9239$8573$1HvE18 g$9239$8653$1HvE18 (make-record-type-descriptor '&i/o-file-does-not-exist g$9181$8547$1HvE18 'g$9242$1HvE18 '#f '#f '#())) (g$9241$8574$1HvE18 g$9241$8654$1HvE18 '#f) (g$9240$8575$1HvE18 g$9240$8655$1HvE18 (make-record-constructor-descriptor g$9239$8573$1HvE18 g$9182$8549$1HvE18 g$9241$8574$1HvE18)) (g$9238$8576$1HvE18 g$9238$8656$1HvE18 (record-predicate g$9239$8573$1HvE18)) (g$make-i/o-file-does-not-exist-error$8577$1HvE18 g$make-i/o-file-does-not-exist-error$8657$1HvE18 (record-constructor g$9240$8575$1HvE18)) (g$i/o-file-does-not-exist-error?$8578$1HvE18 g$i/o-file-does-not-exist-error?$8658$1HvE18 (condition-predicate g$9239$8573$1HvE18)) (g$9254$8579$1HvE18 g$9254$8659$1HvE18 (make-record-type-descriptor '&i/o-port g$9121$8521$1HvE18 'g$9257$1HvE18 '#f '#f '#((immutable port)))) (g$9256$8580$1HvE18 g$9256$8660$1HvE18 '#f) (g$9255$8581$1HvE18 g$9255$8661$1HvE18 (make-record-constructor-descriptor g$9254$8579$1HvE18 g$9122$8523$1HvE18 g$9256$8580$1HvE18)) (g$9253$8582$1HvE18 g$9253$8662$1HvE18 (record-predicate g$9254$8579$1HvE18)) (g$make-i/o-port-error$8583$1HvE18 g$make-i/o-port-error$8663$1HvE18 (record-constructor g$9255$8581$1HvE18)) (g$9252$8584$1HvE18 g$9252$8664$1HvE18 (record-accessor g$9254$8579$1HvE18 '0)) (g$i/o-port-error?$8585$1HvE18 g$i/o-port-error?$8665$1HvE18 (condition-predicate g$9254$8579$1HvE18)) (g$i/o-error-port$8586$1HvE18 g$i/o-error-port$8666$1HvE18 (condition-accessor g$9254$8579$1HvE18 g$9252$8584$1HvE18)) (g$9270$8587$1HvE18 g$9270$8667$1HvE18 (make-record-type-descriptor '&i/o-decoding g$9254$8579$1HvE18 'g$9273$1HvE18 '#f '#f '#())) (g$9272$8588$1HvE18 g$9272$8668$1HvE18 '#f) (g$9271$8589$1HvE18 g$9271$8669$1HvE18 (make-record-constructor-descriptor g$9270$8587$1HvE18 g$9255$8581$1HvE18 g$9272$8588$1HvE18)) (g$9269$8590$1HvE18 g$9269$8670$1HvE18 (record-predicate g$9270$8587$1HvE18)) (g$make-i/o-decoding-error$8591$1HvE18 g$make-i/o-decoding-error$8671$1HvE18 (record-constructor g$9271$8589$1HvE18)) (g$i/o-decoding-error?$8592$1HvE18 g$i/o-decoding-error?$8672$1HvE18 (condition-predicate g$9270$8587$1HvE18)) (g$9285$8593$1HvE18 g$9285$8673$1HvE18 (make-record-type-descriptor '&i/o-encoding g$9254$8579$1HvE18 'g$9288$1HvE18 '#f '#f '#((immutable char)))) (g$9287$8594$1HvE18 g$9287$8674$1HvE18 '#f) (g$9286$8595$1HvE18 g$9286$8675$1HvE18 (make-record-constructor-descriptor g$9285$8593$1HvE18 g$9255$8581$1HvE18 g$9287$8594$1HvE18)) (g$9284$8596$1HvE18 g$9284$8676$1HvE18 (record-predicate g$9285$8593$1HvE18)) (g$make-i/o-encoding-error$8597$1HvE18 g$make-i/o-encoding-error$8677$1HvE18 (record-constructor g$9286$8595$1HvE18)) (g$9283$8598$1HvE18 g$9283$8678$1HvE18 (record-accessor g$9285$8593$1HvE18 '0)) (g$i/o-encoding-error?$8599$1HvE18 g$i/o-encoding-error?$8679$1HvE18 (condition-predicate g$9285$8593$1HvE18)) (g$i/o-encoding-error-char$8600$1HvE18 g$i/o-encoding-error-char$8680$1HvE18 (condition-accessor g$9285$8593$1HvE18 g$9283$8598$1HvE18))) (void))
(library-letrec* ((g$get-output-string$8681$1HvE18 g$get-output-string$8686$1HvE18 (case-lambda ((g$port$8684$1HvE18) (clr-call-internal 'system.io.stringwriter 'tostring g$port$8684$1HvE18)))) (g$open-output-string$8682$1HvE18 g$open-output-string$8687$1HvE18 (case-lambda (() (clr-new-internal 'system.io.stringwriter)))) (g$open-string-output-port$8683$1HvE18 g$open-string-output-port$8688$1HvE18 (case-lambda (() ((case-lambda ((g$p$8685$1HvE18) (values g$p$8685$1HvE18 (case-lambda (() (g$get-output-string$8681$1HvE18 g$p$8685$1HvE18)))))) (g$open-output-string$8682$1HvE18)))))) (void))
(library-letrec* () (void))
(library-letrec* () (void))
(library-letrec* () (void))
(library-letrec* () (void))
(library-letrec* ((g$dofmt$8689$1HvE18 g$dofmt$8711$1HvE18 (case-lambda ((g$p$8693$1HvE18 g$cntl$8694$1HvE18 g$args$8695$1HvE18) ((case-lambda ((g$nmax$8696$1HvE18) ((letrec ((g$loop$8697$1HvE18 (case-lambda ((g$n$8698$1HvE18 g$a$8699$1HvE18) (if (<= g$n$8698$1HvE18 g$nmax$8696$1HvE18) ((case-lambda ((g$c$8700$1HvE18) (if (if (char=? g$c$8700$1HvE18 '#\~) (begin '#f (< g$n$8698$1HvE18 g$nmax$8696$1HvE18)) '#f) ((case-lambda ((g$t$8701$1HvE18) (if (memv g$t$8701$1HvE18 '(#\a)) (begin (display (car g$a$8699$1HvE18) g$p$8693$1HvE18) (g$loop$8697$1HvE18 (+ g$n$8698$1HvE18 '2) (cdr g$a$8699$1HvE18))) (if (memv g$t$8701$1HvE18 '(#\s)) (begin (write (car g$a$8699$1HvE18) g$p$8693$1HvE18) (g$loop$8697$1HvE18 (+ g$n$8698$1HvE18 '2) (cdr g$a$8699$1HvE18))) (if (memv g$t$8701$1HvE18 '(#\b)) (begin (write (number->string (car g$a$8699$1HvE18) '2) g$p$8693$1HvE18) (g$loop$8697$1HvE18 (+ g$n$8698$1HvE18 '2) (cdr g$a$8699$1HvE18))) (if (memv g$t$8701$1HvE18 '(#\o)) (begin (write (number->string (car g$a$8699$1HvE18) '8) g$p$8693$1HvE18) (g$loop$8697$1HvE18 (+ g$n$8698$1HvE18 '2) (cdr g$a$8699$1HvE18))) (if (memv g$t$8701$1HvE18 '(#\x)) (begin (write (number->string (car g$a$8699$1HvE18) '16) g$p$8693$1HvE18) (g$loop$8697$1HvE18 (+ g$n$8698$1HvE18 '2) (cdr g$a$8699$1HvE18))) (if (memv g$t$8701$1HvE18 '(#\d)) (begin (write (number->string (car g$a$8699$1HvE18) '10) g$p$8693$1HvE18) (g$loop$8697$1HvE18 (+ g$n$8698$1HvE18 '2) (cdr g$a$8699$1HvE18))) (if (memv g$t$8701$1HvE18 '(#\~)) (begin (write-char '#\~ g$p$8693$1HvE18) (g$loop$8697$1HvE18 (+ g$n$8698$1HvE18 '2) g$a$8699$1HvE18)) (begin (write-char g$c$8700$1HvE18 g$p$8693$1HvE18) (g$loop$8697$1HvE18 (+ g$n$8698$1HvE18 '1) g$a$8699$1HvE18))))))))))) (string-ref g$cntl$8694$1HvE18 (+ g$n$8698$1HvE18 '1))) (begin (write-char g$c$8700$1HvE18 g$p$8693$1HvE18) (g$loop$8697$1HvE18 (+ g$n$8698$1HvE18 '1) g$a$8699$1HvE18))))) (string-ref g$cntl$8694$1HvE18 g$n$8698$1HvE18)) (void)))))) g$loop$8697$1HvE18) '0 g$args$8695$1HvE18))) (- (string-length g$cntl$8694$1HvE18) '1))))) (g$printf$8690$1HvE18 g$printf$8712$1HvE18 (case-lambda ((g$control$8702$1HvE18 . g$args$8703$1HvE18) (g$dofmt$8689$1HvE18 (current-output-port) g$control$8702$1HvE18 g$args$8703$1HvE18)))) (g$fprintf$8691$1HvE18 g$fprintf$8713$1HvE18 (case-lambda ((g$p$8704$1HvE18 g$control$8705$1HvE18 . g$args$8706$1HvE18) (g$dofmt$8689$1HvE18 g$p$8704$1HvE18 g$control$8705$1HvE18 g$args$8706$1HvE18)))) (g$format$8692$1HvE18 g$format$8714$1HvE18 (case-lambda ((g$control$8707$1HvE18 . g$args$8708$1HvE18) (call-with-values g$open-string-output-port$8688$1HvE18 (case-lambda ((g$p$8709$1HvE18 g$c$8710$1HvE18) (begin (g$dofmt$8689$1HvE18 g$p$8709$1HvE18 g$control$8707$1HvE18 g$args$8708$1HvE18) (g$c$8710$1HvE18))))))))) (void))
(library-letrec* ((g$load-precompiled-library$8715$1HvE18 g$load-precompiled-library$8794$1HvE18 (case-lambda ((g$filename$8785$1HvE18 g$sk$8786$1HvE18) '#f))) (g$make-parameter$8716$1HvE18 g$make-parameter$8795$1HvE18 (case-lambda ((g$x$8787$1HvE18) (g$make-parameter$8716$1HvE18 g$x$8787$1HvE18 (case-lambda ((g$x$8788$1HvE18) g$x$8788$1HvE18)))) ((g$x$8789$1HvE18 g$fender$8790$1HvE18) (begin (if (procedure? g$fender$8790$1HvE18) (void) (assertion-violation 'assert '"assertion failed" '(procedure? fender))) ((case-lambda ((g$x$8791$1HvE18) (case-lambda (() g$x$8791$1HvE18) ((g$v$8792$1HvE18) (set! g$x$8791$1HvE18 (g$fender$8790$1HvE18 g$v$8792$1HvE18)))))) (g$fender$8790$1HvE18 g$x$8789$1HvE18)))))) (g$file-options-spec$8784$1HvE18 g$file-options-spec$8796$1HvE18 (case-lambda ((g$x$8793$1HvE18) g$x$8793$1HvE18)))) (void))
(library-letrec* ((g$current-primitive-locations$8797$1HvE18 g$current-primitive-locations$8836$1HvE18 (g$make-parameter$8795$1HvE18 (case-lambda ((g$x$8804$1HvE18) '#f)) (case-lambda ((g$p$8805$1HvE18) (begin (if (procedure? g$p$8805$1HvE18) (void) (assertion-violation 'assert '"assertion failed" '(procedure? p))) g$p$8805$1HvE18))))) (g$mutable?$8798$1HvE18 g$mutable?$8837$1HvE18 (case-lambda ((g$x$8806$1HvE18) (letrec* ((g$simple?$8807$1HvE18 (case-lambda ((g$x$8808$1HvE18) ((case-lambda ((g$t$8809$1HvE18) (if g$t$8809$1HvE18 g$t$8809$1HvE18 ((case-lambda ((g$t$8810$1HvE18) (if g$t$8810$1HvE18 g$t$8810$1HvE18 ((case-lambda ((g$t$8811$1HvE18) (if g$t$8811$1HvE18 g$t$8811$1HvE18 ((case-lambda ((g$t$8812$1HvE18) (if g$t$8812$1HvE18 g$t$8812$1HvE18 ((case-lambda ((g$t$8813$1HvE18) (if g$t$8813$1HvE18 g$t$8813$1HvE18 ((case-lambda ((g$t$8814$1HvE18) (if g$t$8814$1HvE18 g$t$8814$1HvE18 (begin '#f (number? g$x$8808$1HvE18))))) (bytevector? g$x$8808$1HvE18))))) (string? g$x$8808$1HvE18))))) (boolean? g$x$8808$1HvE18))))) (symbol? g$x$8808$1HvE18))))) (char? g$x$8808$1HvE18))))) (null? g$x$8808$1HvE18)))))) (not (g$simple?$8807$1HvE18 g$x$8806$1HvE18)))))) (g$rewriter$8799$1HvE18 g$rewriter$8838$1HvE18 (case-lambda ((g$quote-hack?$8815$1HvE18) (letrec* ((g$f$8816$1HvE18 (case-lambda ((g$x$8817$1HvE18) (if (pair? g$x$8817$1HvE18) ((case-lambda ((g$t$8818$1HvE18) (if (memv g$t$8818$1HvE18 '(quote)) (if (if g$quote-hack?$8815$1HvE18 (begin '#f (g$mutable?$8798$1HvE18 (g$cadr$7545$1HvE18 g$x$8817$1HvE18))) '#f) ((case-lambda ((g$g$8831$1HvE18) (begin (set-symbol-value! g$g$8831$1HvE18 (g$cadr$7545$1HvE18 g$x$8817$1HvE18)) g$g$8831$1HvE18))) (gensym)) g$x$8817$1HvE18) (if (memv g$t$8818$1HvE18 '(case-lambda)) (cons 'case-lambda (map (case-lambda ((g$x$8830$1HvE18) (cons (car g$x$8830$1HvE18) (map g$f$8816$1HvE18 (cdr g$x$8830$1HvE18))))) (cdr g$x$8817$1HvE18))) (if (memv g$t$8818$1HvE18 '(lambda)) (g$cons*$7967$1HvE18 'lambda (g$cadr$7545$1HvE18 g$x$8817$1HvE18) (map g$f$8816$1HvE18 (g$cddr$7547$1HvE18 g$x$8817$1HvE18))) (if (memv g$t$8818$1HvE18 '(letrec)) ((case-lambda ((g$bindings$8826$1HvE18 g$body*$8827$1HvE18) ((case-lambda ((g$lhs*$8828$1HvE18 g$rhs*$8829$1HvE18) (g$cons*$7967$1HvE18 'letrec (map list g$lhs*$8828$1HvE18 (map g$f$8816$1HvE18 g$rhs*$8829$1HvE18)) (map g$f$8816$1HvE18 g$body*$8827$1HvE18)))) (map car g$bindings$8826$1HvE18) (map g$cadr$7545$1HvE18 g$bindings$8826$1HvE18)))) (g$cadr$7545$1HvE18 g$x$8817$1HvE18) (g$cddr$7547$1HvE18 g$x$8817$1HvE18)) (if (memv g$t$8818$1HvE18 '(letrec*)) ((case-lambda ((g$bindings$8822$1HvE18 g$body*$8823$1HvE18) ((case-lambda ((g$lhs*$8824$1HvE18 g$rhs*$8825$1HvE18) (g$cons*$7967$1HvE18 'letrec* (map list g$lhs*$8824$1HvE18 (map g$f$8816$1HvE18 g$rhs*$8825$1HvE18)) (map g$f$8816$1HvE18 g$body*$8823$1HvE18)))) (map car g$bindings$8822$1HvE18) (map g$cadr$7545$1HvE18 g$bindings$8822$1HvE18)))) (g$cadr$7545$1HvE18 g$x$8817$1HvE18) (g$cddr$7547$1HvE18 g$x$8817$1HvE18)) (if (memv g$t$8818$1HvE18 '(begin)) (cons 'begin (map g$f$8816$1HvE18 (cdr g$x$8817$1HvE18))) (if (memv g$t$8818$1HvE18 '(set!)) (list 'set! (g$cadr$7545$1HvE18 g$x$8817$1HvE18) (g$f$8816$1HvE18 (g$caddr$7551$1HvE18 g$x$8817$1HvE18))) (if (memv g$t$8818$1HvE18 '(primitive)) ((case-lambda ((g$op$8819$1HvE18) ((case-lambda ((g$t$8820$1HvE18) (if g$t$8820$1HvE18 ((case-lambda ((g$loc$8821$1HvE18) g$loc$8821$1HvE18)) g$t$8820$1HvE18) g$op$8819$1HvE18))) ((g$current-primitive-locations$8797$1HvE18) g$op$8819$1HvE18)))) (g$cadr$7545$1HvE18 g$x$8817$1HvE18)) (if (memv g$t$8818$1HvE18 '(define)) g$x$8817$1HvE18 (if (list? g$x$8817$1HvE18) (map g$f$8816$1HvE18 g$x$8817$1HvE18) (error 'rewrite '"invalid form ~s ~s" g$x$8817$1HvE18 (list? g$x$8817$1HvE18)))))))))))))) (car g$x$8817$1HvE18)) g$x$8817$1HvE18))))) g$f$8816$1HvE18)))) (g$need-quote-hack?$8800$1HvE18 g$need-quote-hack?$8839$1HvE18 '#t) (g$expanded->core$8801$1HvE18 g$expanded->core$8840$1HvE18 (case-lambda ((g$x$8832$1HvE18) ((g$rewriter$8799$1HvE18 g$need-quote-hack?$8800$1HvE18) g$x$8832$1HvE18)))) (g$compile-core-expr$8802$1HvE18 g$compile-core-expr$8841$1HvE18 (case-lambda ((g$x$8833$1HvE18) ((g$rewriter$8799$1HvE18 '#f) g$x$8833$1HvE18)))) (g$compile-core-expr-to-port$8803$1HvE18 g$compile-core-expr-to-port$8842$1HvE18 (case-lambda ((g$x$8834$1HvE18 g$p$8835$1HvE18) (write ((g$rewriter$8799$1HvE18 '#f) g$x$8834$1HvE18) g$p$8835$1HvE18))))) (void))
(library-letrec* () (void))
(library-letrec* ((g$make-collection$8875$1HvE18 g$make-collection$9072$1HvE18 (case-lambda (() ((case-lambda ((g$set$8936$1HvE18) (letrec* ((g$set-cons$8937$1HvE18 (case-lambda ((g$x$8939$1HvE18 g$ls$8940$1HvE18) (if (memq g$x$8939$1HvE18 g$ls$8940$1HvE18) g$ls$8940$1HvE18 (cons g$x$8939$1HvE18 g$ls$8940$1HvE18)))))) (case-lambda (() g$set$8936$1HvE18) ((g$x$8938$1HvE18) (set! g$set$8936$1HvE18 (g$set-cons$8937$1HvE18 g$x$8938$1HvE18 g$set$8936$1HvE18))))))) '())))) (g$current-library-collection$8876$1HvE18 g$current-library-collection$9073$1HvE18 (g$make-parameter$8795$1HvE18 (g$make-collection$8875$1HvE18) (case-lambda ((g$x$8941$1HvE18) (begin (if (procedure? g$x$8941$1HvE18) (void) (assertion-violation 'current-library-collection '"not a procedure" g$x$8941$1HvE18)) g$x$8941$1HvE18))))) (g$9516$8877$1HvE18 g$9516$9074$1HvE18 (make-record-type-descriptor 'library '#f 'g$9519$1HvE18 '#t '#t '#((mutable id) (mutable name) (mutable version) (mutable imp*) (mutable vis*) (mutable inv*) (mutable subst) (mutable env) (mutable visit-state) (mutable invoke-state) (mutable visit-code) (mutable invoke-code) (mutable visible?) (mutable source-file-name)))) (g$9518$8878$1HvE18 g$9518$9075$1HvE18 '#f) (g$9517$8879$1HvE18 g$9517$9076$1HvE18 (make-record-constructor-descriptor g$9516$8877$1HvE18 '#f g$9518$8878$1HvE18)) (g$library?$8880$1HvE18 g$library?$9077$1HvE18 (record-predicate g$9516$8877$1HvE18)) (g$make-library$8881$1HvE18 g$make-library$9078$1HvE18 (record-constructor g$9517$8879$1HvE18)) (g$library-id$8882$1HvE18 g$library-id$9079$1HvE18 (record-accessor g$9516$8877$1HvE18 '0)) (g$library-name$8883$1HvE18 g$library-name$9080$1HvE18 (record-accessor g$9516$8877$1HvE18 '1)) (g$library-version$8884$1HvE18 g$library-version$9081$1HvE18 (record-accessor g$9516$8877$1HvE18 '2)) (g$library-imp*$8885$1HvE18 g$library-imp*$9082$1HvE18 (record-accessor g$9516$8877$1HvE18 '3)) (g$library-vis*$8886$1HvE18 g$library-vis*$9083$1HvE18 (record-accessor g$9516$8877$1HvE18 '4)) (g$library-inv*$8887$1HvE18 g$library-inv*$9084$1HvE18 (record-accessor g$9516$8877$1HvE18 '5)) (g$library-subst$8888$1HvE18 g$library-subst$9085$1HvE18 (record-accessor g$9516$8877$1HvE18 '6)) (g$library-env$8889$1HvE18 g$library-env$9086$1HvE18 (record-accessor g$9516$8877$1HvE18 '7)) (g$library-visit-state$8890$1HvE18 g$library-visit-state$9087$1HvE18 (record-accessor g$9516$8877$1HvE18 '8)) (g$library-invoke-state$8891$1HvE18 g$library-invoke-state$9088$1HvE18 (record-accessor g$9516$8877$1HvE18 '9)) (g$library-visit-code$8892$1HvE18 g$library-visit-code$9089$1HvE18 (record-accessor g$9516$8877$1HvE18 '10)) (g$library-invoke-code$8893$1HvE18 g$library-invoke-code$9090$1HvE18 (record-accessor g$9516$8877$1HvE18 '11)) (g$library-visible?$8894$1HvE18 g$library-visible?$9091$1HvE18 (record-accessor g$9516$8877$1HvE18 '12)) (g$library-source-file-name$8895$1HvE18 g$library-source-file-name$9092$1HvE18 (record-accessor g$9516$8877$1HvE18 '13)) (g$set-library-id!$8896$1HvE18 g$set-library-id!$9093$1HvE18 (record-mutator g$9516$8877$1HvE18 '0)) (g$set-library-name!$8897$1HvE18 g$set-library-name!$9094$1HvE18 (record-mutator g$9516$8877$1HvE18 '1)) (g$set-library-version!$8898$1HvE18 g$set-library-version!$9095$1HvE18 (record-mutator g$9516$8877$1HvE18 '2)) (g$set-library-imp*!$8899$1HvE18 g$set-library-imp*!$9096$1HvE18 (record-mutator g$9516$8877$1HvE18 '3)) (g$set-library-vis*!$8900$1HvE18 g$set-library-vis*!$9097$1HvE18 (record-mutator g$9516$8877$1HvE18 '4)) (g$set-library-inv*!$8901$1HvE18 g$set-library-inv*!$9098$1HvE18 (record-mutator g$9516$8877$1HvE18 '5)) (g$set-library-subst!$8902$1HvE18 g$set-library-subst!$9099$1HvE18 (record-mutator g$9516$8877$1HvE18 '6)) (g$set-library-env!$8903$1HvE18 g$set-library-env!$9100$1HvE18 (record-mutator g$9516$8877$1HvE18 '7)) (g$set-library-visit-state!$8904$1HvE18 g$set-library-visit-state!$9101$1HvE18 (record-mutator g$9516$8877$1HvE18 '8)) (g$set-library-invoke-state!$8905$1HvE18 g$set-library-invoke-state!$9102$1HvE18 (record-mutator g$9516$8877$1HvE18 '9)) (g$set-library-visit-code!$8906$1HvE18 g$set-library-visit-code!$9103$1HvE18 (record-mutator g$9516$8877$1HvE18 '10)) (g$set-library-invoke-code!$8907$1HvE18 g$set-library-invoke-code!$9104$1HvE18 (record-mutator g$9516$8877$1HvE18 '11)) (g$set-library-visible?!$8908$1HvE18 g$set-library-visible?!$9105$1HvE18 (record-mutator g$9516$8877$1HvE18 '12)) (g$set-library-source-file-name!$8909$1HvE18 g$set-library-source-file-name!$9106$1HvE18 (record-mutator g$9516$8877$1HvE18 '13)) (g$rp$8910$1HvE18 g$rp$9107$1HvE18 (make-record-printer 'library (case-lambda ((g$x$8942$1HvE18 g$p$8943$1HvE18) (begin (if (g$library?$8880$1HvE18 g$x$8942$1HvE18) (void) (assertion-violation 'record-type-printer '"not a library")) (display (g$format$8714$1HvE18 '"#<library ~s>" (if (null? (g$library-version$8884$1HvE18 g$x$8942$1HvE18)) (g$library-name$8883$1HvE18 g$x$8942$1HvE18) (append (g$library-name$8883$1HvE18 g$x$8942$1HvE18) (list (g$library-version$8884$1HvE18 g$x$8942$1HvE18))))) g$p$8943$1HvE18)))))) (g$find-dependencies$8911$1HvE18 g$find-dependencies$9108$1HvE18 (case-lambda ((g$ls$8944$1HvE18) (if (null? g$ls$8944$1HvE18) '() (assertion-violation 'find-dependencies '"cannot handle deps yet"))))) (g$find-library-by$8912$1HvE18 g$find-library-by$9109$1HvE18 (case-lambda ((g$pred$8945$1HvE18) ((letrec ((g$f$8946$1HvE18 (case-lambda ((g$ls$8947$1HvE18) (if (null? g$ls$8947$1HvE18) '#f (if (g$pred$8945$1HvE18 (car g$ls$8947$1HvE18)) (car g$ls$8947$1HvE18) (g$f$8946$1HvE18 (cdr g$ls$8947$1HvE18)))))))) g$f$8946$1HvE18) ((g$current-library-collection$8876$1HvE18)))))) (g$library-path$8913$1HvE18 g$library-path$9110$1HvE18 (g$make-parameter$8795$1HvE18 '(".") (case-lambda ((g$x$8948$1HvE18) (if (if (list? g$x$8948$1HvE18) (begin '#f (g$for-all$7965$1HvE18 string? g$x$8948$1HvE18)) '#f) (map (case-lambda ((g$x$8949$1HvE18) g$x$8949$1HvE18)) g$x$8948$1HvE18) (assertion-violation 'library-path '"not a list of strings" g$x$8948$1HvE18)))))) (g$library-extensions$8914$1HvE18 g$library-extensions$9111$1HvE18 (g$make-parameter$8795$1HvE18 '(".sls" ".ss" ".scm") (case-lambda ((g$x$8950$1HvE18) (if (if (list? g$x$8950$1HvE18) (begin '#f (g$for-all$7965$1HvE18 string? g$x$8950$1HvE18)) '#f) (map (case-lambda ((g$x$8951$1HvE18) g$x$8951$1HvE18)) g$x$8950$1HvE18) (assertion-violation 'library-extensions '"not a list of strings" g$x$8950$1HvE18)))))) (g$library-name->file-name$8915$1HvE18 g$library-name->file-name$9112$1HvE18 (case-lambda ((g$x$8952$1HvE18) (call-with-values (case-lambda (() (g$open-string-output-port$8688$1HvE18))) (case-lambda ((g$p$8955$1HvE18 g$extract$8956$1HvE18) ((case-lambda ((g$extract$8957$1HvE18 g$p$8958$1HvE18) (letrec* ((g$display-hex$8959$1HvE18 (case-lambda ((g$n$8967$1HvE18) (if (<= '0 g$n$8967$1HvE18 '9) (display g$n$8967$1HvE18 g$p$8958$1HvE18) (display (integer->char (+ (char->integer '#\A) (- g$n$8967$1HvE18 '10))) g$p$8958$1HvE18)))))) (begin ((letrec ((g$f$8960$1HvE18 (case-lambda ((g$ls$8961$1HvE18) (if (null? g$ls$8961$1HvE18) (void) (begin (display '"/" g$p$8958$1HvE18) (for-each (case-lambda ((g$c$8962$1HvE18) (if ((case-lambda ((g$t$8963$1HvE18) (if g$t$8963$1HvE18 g$t$8963$1HvE18 ((case-lambda ((g$t$8964$1HvE18) (if g$t$8964$1HvE18 g$t$8964$1HvE18 ((case-lambda ((g$t$8965$1HvE18) (if g$t$8965$1HvE18 g$t$8965$1HvE18 (begin '#f (memv g$c$8962$1HvE18 '(#\- #\. #\_ #\~)))))) (char<=? '#\0 g$c$8962$1HvE18 '#\9))))) (char<=? '#\A g$c$8962$1HvE18 '#\Z))))) (char<=? '#\a g$c$8962$1HvE18 '#\z)) (display g$c$8962$1HvE18 g$p$8958$1HvE18) (begin (display '"%" g$p$8958$1HvE18) ((case-lambda ((g$n$8966$1HvE18) (begin (g$display-hex$8959$1HvE18 (g$quotient$8315$1HvE18 g$n$8966$1HvE18 '16)) (g$display-hex$8959$1HvE18 (g$remainder$8316$1HvE18 g$n$8966$1HvE18 '16))))) (char->integer g$c$8962$1HvE18)))))) (string->list (symbol->string (car g$ls$8961$1HvE18)))) (g$f$8960$1HvE18 (cdr g$ls$8961$1HvE18)))))))) g$f$8960$1HvE18) g$x$8952$1HvE18) (g$extract$8957$1HvE18))))) g$extract$8956$1HvE18 g$p$8955$1HvE18))))))) (g$file-locator$8916$1HvE18 g$file-locator$9113$1HvE18 (g$make-parameter$8795$1HvE18 (case-lambda ((g$x$8968$1HvE18) ((case-lambda ((g$str$8969$1HvE18) ((letrec ((g$f$8970$1HvE18 (case-lambda ((g$ls$8971$1HvE18 g$exts$8972$1HvE18 g$failed-list$8973$1HvE18) (if (null? g$ls$8971$1HvE18) ((case-lambda (() (letrec* ((g$9621$8974$1HvE18 (make-record-type-descriptor '&library-resolution &condition-rtd 'g$9624$1HvE18 '#f '#f '#((immutable library) (immutable files)))) (g$9623$8975$1HvE18 '#f) (g$9622$8976$1HvE18 (make-record-constructor-descriptor g$9621$8974$1HvE18 &condition-rcd g$9623$8975$1HvE18)) (g$9620$8977$1HvE18 (record-predicate g$9621$8974$1HvE18)) (g$make-library-resolution-condition$8978$1HvE18 (record-constructor g$9622$8976$1HvE18)) (g$9618$8979$1HvE18 (record-accessor g$9621$8974$1HvE18 '0)) (g$9619$8980$1HvE18 (record-accessor g$9621$8974$1HvE18 '1)) (g$library-resolution-condition?$8981$1HvE18 (condition-predicate g$9621$8974$1HvE18)) (g$condition-library$8982$1HvE18 (condition-accessor g$9621$8974$1HvE18 g$9618$8979$1HvE18)) (g$condition-files$8983$1HvE18 (condition-accessor g$9621$8974$1HvE18 g$9619$8980$1HvE18))) (raise (condition (g$make-error$8239$1HvE18) (g$make-who-condition$8265$1HvE18 'expander) (g$make-message-condition$8219$1HvE18 '"cannot locate library in library-path") (g$make-library-resolution-condition$8978$1HvE18 g$x$8968$1HvE18 (reverse g$failed-list$8973$1HvE18)))))))) (if (null? g$exts$8972$1HvE18) (g$f$8970$1HvE18 (cdr g$ls$8971$1HvE18) (g$library-extensions$8914$1HvE18) g$failed-list$8973$1HvE18) ((case-lambda ((g$name$8984$1HvE18) (if (g$file-exists?$7889$1HvE18 g$name$8984$1HvE18) g$name$8984$1HvE18 (g$f$8970$1HvE18 g$ls$8971$1HvE18 (cdr g$exts$8972$1HvE18) (cons g$name$8984$1HvE18 g$failed-list$8973$1HvE18))))) (string-append (car g$ls$8971$1HvE18) g$str$8969$1HvE18 (car g$exts$8972$1HvE18))))))))) g$f$8970$1HvE18) (g$library-path$8913$1HvE18) (g$library-extensions$8914$1HvE18) '()))) (g$library-name->file-name$8915$1HvE18 g$x$8968$1HvE18)))) (case-lambda ((g$f$8985$1HvE18) (if (procedure? g$f$8985$1HvE18) g$f$8985$1HvE18 (assertion-violation 'file-locator '"not a procedure" g$f$8985$1HvE18)))))) (g$serialize-all$8917$1HvE18 g$serialize-all$9114$1HvE18 (case-lambda ((g$serialize$8986$1HvE18 g$compile$8987$1HvE18) (letrec* ((g$library-desc$8988$1HvE18 (case-lambda ((g$x$8990$1HvE18) (list (g$library-id$8882$1HvE18 g$x$8990$1HvE18) (g$library-name$8883$1HvE18 g$x$8990$1HvE18)))))) (for-each (case-lambda ((g$x$8989$1HvE18) (if (g$library-source-file-name$8895$1HvE18 g$x$8989$1HvE18) (g$serialize$8986$1HvE18 (g$library-source-file-name$8895$1HvE18 g$x$8989$1HvE18) (list (g$library-id$8882$1HvE18 g$x$8989$1HvE18) (g$library-name$8883$1HvE18 g$x$8989$1HvE18) (g$library-version$8884$1HvE18 g$x$8989$1HvE18) (map g$library-desc$8988$1HvE18 (g$library-imp*$8885$1HvE18 g$x$8989$1HvE18)) (map g$library-desc$8988$1HvE18 (g$library-vis*$8886$1HvE18 g$x$8989$1HvE18)) (map g$library-desc$8988$1HvE18 (g$library-inv*$8887$1HvE18 g$x$8989$1HvE18)) (g$library-subst$8888$1HvE18 g$x$8989$1HvE18) (g$library-env$8889$1HvE18 g$x$8989$1HvE18) (g$compile$8987$1HvE18 (g$library-visit-code$8892$1HvE18 g$x$8989$1HvE18)) (g$compile$8987$1HvE18 (g$library-invoke-code$8893$1HvE18 g$x$8989$1HvE18)) (g$library-visible?$8894$1HvE18 g$x$8989$1HvE18))) (void)))) ((g$current-library-collection$8876$1HvE18))))))) (g$current-precompiled-library-loader$8918$1HvE18 g$current-precompiled-library-loader$9115$1HvE18 (g$make-parameter$8795$1HvE18 (case-lambda ((g$filename$8991$1HvE18 g$sk$8992$1HvE18) '#f)))) (g$try-load-from-file$8919$1HvE18 g$try-load-from-file$9116$1HvE18 (case-lambda ((g$filename$8993$1HvE18) ((g$current-precompiled-library-loader$8918$1HvE18) g$filename$8993$1HvE18 (case-lambda ((g$id$8994$1HvE18 g$name$8995$1HvE18 g$ver$8996$1HvE18 g$imp*$8997$1HvE18 g$vis*$8998$1HvE18 g$inv*$8999$1HvE18 g$exp-subst$9000$1HvE18 g$exp-env$9001$1HvE18 g$visit-proc$9002$1HvE18 g$invoke-proc$9003$1HvE18 g$visible?$9004$1HvE18) ((letrec ((g$f$9005$1HvE18 (case-lambda ((g$deps$9006$1HvE18) (if (null? g$deps$9006$1HvE18) (begin (g$install-library$8929$1HvE18 g$id$8994$1HvE18 g$name$8995$1HvE18 g$ver$8996$1HvE18 g$imp*$8997$1HvE18 g$vis*$8998$1HvE18 g$inv*$8999$1HvE18 g$exp-subst$9000$1HvE18 g$exp-env$9001$1HvE18 g$visit-proc$9002$1HvE18 g$invoke-proc$9003$1HvE18 '#f '#f g$visible?$9004$1HvE18 '#f) '#t) ((case-lambda ((g$d$9007$1HvE18) ((case-lambda ((g$label$9008$1HvE18 g$dname$9009$1HvE18) ((case-lambda ((g$l$9010$1HvE18) (if (if (g$library?$8880$1HvE18 g$l$9010$1HvE18) (begin '#f (eq? g$label$9008$1HvE18 (g$library-id$8882$1HvE18 g$l$9010$1HvE18))) '#f) (g$f$9005$1HvE18 (cdr g$deps$9006$1HvE18)) (begin (g$fprintf$8713$1HvE18 (current-error-port) '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from \\\\n                           source.\\n" g$name$8995$1HvE18 g$dname$9009$1HvE18 g$filename$8993$1HvE18) '#f)))) (g$find-library-by-name$8924$1HvE18 g$dname$9009$1HvE18)))) (car g$d$9007$1HvE18) (g$cadr$7545$1HvE18 g$d$9007$1HvE18)))) (car g$deps$9006$1HvE18))))))) g$f$9005$1HvE18) (append g$imp*$8997$1HvE18 g$vis*$8998$1HvE18 g$inv*$8999$1HvE18))) (g$others$9011$1HvE18 '#f)))))) (g$library-loader$8920$1HvE18 g$library-loader$9117$1HvE18 (g$make-parameter$8795$1HvE18 (case-lambda ((g$x$9012$1HvE18) ((case-lambda ((g$file-name$9013$1HvE18) (if (not g$file-name$9013$1HvE18) (assertion-violation '#f '"cannot file library" g$x$9012$1HvE18) ((case-lambda ((g$t$9014$1HvE18) (if g$t$9014$1HvE18 g$t$9014$1HvE18 (begin '#f ((g$current-library-expander$8921$1HvE18) (with-input-from-file g$file-name$9013$1HvE18 read-annotated) g$file-name$9013$1HvE18))))) (g$try-load-from-file$8919$1HvE18 g$file-name$9013$1HvE18))))) ((g$file-locator$8916$1HvE18) g$x$9012$1HvE18)))) (case-lambda ((g$f$9015$1HvE18) (if (procedure? g$f$9015$1HvE18) g$f$9015$1HvE18 (assertion-violation 'library-locator '"not a procedure" g$f$9015$1HvE18)))))) (g$current-library-expander$8921$1HvE18 g$current-library-expander$9118$1HvE18 (g$make-parameter$8795$1HvE18 (case-lambda ((g$x$9016$1HvE18) (assertion-violation 'library-expander '"not initialized"))) (case-lambda ((g$f$9017$1HvE18) (if (procedure? g$f$9017$1HvE18) g$f$9017$1HvE18 (assertion-violation 'library-expander '"not a procedure" g$f$9017$1HvE18)))))) (g$external-pending-libraries$8922$1HvE18 g$external-pending-libraries$9119$1HvE18 (g$make-parameter$8795$1HvE18 '())) (g$find-external-library$8923$1HvE18 g$find-external-library$9120$1HvE18 (case-lambda ((g$name$9018$1HvE18) (begin (if (member g$name$9018$1HvE18 (g$external-pending-libraries$8922$1HvE18)) (assertion-violation '#f '"circular attempt to import library was detected" g$name$9018$1HvE18) (void)) ((case-lambda ((g$external-pending-libraries$9021$1HvE18 g$external-pending-libraries$9022$1HvE18) ((case-lambda ((g$swap$9023$1HvE18) (dynamic-wind g$swap$9023$1HvE18 (case-lambda (() (begin ((g$library-loader$8920$1HvE18) g$name$9018$1HvE18) ((case-lambda ((g$t$9024$1HvE18) (if g$t$9024$1HvE18 g$t$9024$1HvE18 (begin '#f (assertion-violation '#f '"handling external library did not yield the correct library" g$name$9018$1HvE18))))) (g$find-library-by$8912$1HvE18 (case-lambda ((g$x$9025$1HvE18) (equal? (g$library-name$8883$1HvE18 g$x$9025$1HvE18) g$name$9018$1HvE18)))))))) g$swap$9023$1HvE18))) (case-lambda (() ((case-lambda ((g$t$9026$1HvE18) (begin (g$external-pending-libraries$9021$1HvE18 g$external-pending-libraries$9022$1HvE18) (set! g$external-pending-libraries$9022$1HvE18 g$t$9026$1HvE18)))) (g$external-pending-libraries$9021$1HvE18))))))) g$external-pending-libraries$8922$1HvE18 (cons g$name$9018$1HvE18 (g$external-pending-libraries$8922$1HvE18))))))) (g$find-library-by-name$8924$1HvE18 g$find-library-by-name$9121$1HvE18 (case-lambda ((g$name$9027$1HvE18) ((case-lambda ((g$t$9028$1HvE18) (if g$t$9028$1HvE18 g$t$9028$1HvE18 (begin '#f (g$find-external-library$8923$1HvE18 g$name$9027$1HvE18))))) (g$find-library-by$8912$1HvE18 (case-lambda ((g$x$9029$1HvE18) (equal? (g$library-name$8883$1HvE18 g$x$9029$1HvE18) g$name$9027$1HvE18)))))))) (g$library-exists?$8925$1HvE18 g$library-exists?$9122$1HvE18 (case-lambda ((g$name$9030$1HvE18) (if (g$find-library-by$8912$1HvE18 (case-lambda ((g$x$9031$1HvE18) (equal? (g$library-name$8883$1HvE18 g$x$9031$1HvE18) g$name$9030$1HvE18)))) (begin '#f '#t) '#f)))) (g$find-library-by-spec/die$8926$1HvE18 g$find-library-by-spec/die$9123$1HvE18 (case-lambda ((g$spec$9032$1HvE18) ((case-lambda ((g$id$9033$1HvE18) ((case-lambda ((g$t$9034$1HvE18) (if g$t$9034$1HvE18 g$t$9034$1HvE18 (begin '#f (assertion-violation '#f '"cannot find library with required spec" g$spec$9032$1HvE18))))) (g$find-library-by$8912$1HvE18 (case-lambda ((g$x$9035$1HvE18) (eq? g$id$9033$1HvE18 (g$library-id$8882$1HvE18 g$x$9035$1HvE18)))))))) (car g$spec$9032$1HvE18))))) (g$label->binding-table$8927$1HvE18 g$label->binding-table$9124$1HvE18 (g$make-eq-hashtable$7809$1HvE18)) (g$install-library-record$8928$1HvE18 g$install-library-record$9125$1HvE18 (case-lambda ((g$lib$9036$1HvE18) (begin ((case-lambda ((g$exp-env$9037$1HvE18) (for-each (case-lambda ((g$x$9038$1HvE18) ((case-lambda ((g$label$9039$1HvE18 g$binding$9040$1HvE18) ((case-lambda ((g$binding$9041$1HvE18) (g$hashtable-set!$7813$1HvE18 g$label->binding-table$8927$1HvE18 g$label$9039$1HvE18 g$binding$9041$1HvE18))) ((case-lambda ((g$t$9042$1HvE18) (if (memv g$t$9042$1HvE18 '(global)) (cons 'global (cons g$lib$9036$1HvE18 (cdr g$binding$9040$1HvE18))) (if (memv g$t$9042$1HvE18 '(global-macro)) (cons 'global-macro (cons g$lib$9036$1HvE18 (cdr g$binding$9040$1HvE18))) (if (memv g$t$9042$1HvE18 '(global-macro!)) (cons 'global-macro! (cons g$lib$9036$1HvE18 (cdr g$binding$9040$1HvE18))) g$binding$9040$1HvE18))))) (car g$binding$9040$1HvE18))))) (car g$x$9038$1HvE18) (cdr g$x$9038$1HvE18)))) g$exp-env$9037$1HvE18))) (g$library-env$8889$1HvE18 g$lib$9036$1HvE18)) ((g$current-library-collection$8876$1HvE18) g$lib$9036$1HvE18))))) (g$install-library$8929$1HvE18 g$install-library$9126$1HvE18 (case-lambda ((g$id$9043$1HvE18 g$name$9044$1HvE18 g$ver$9045$1HvE18 g$imp*$9046$1HvE18 g$vis*$9047$1HvE18 g$inv*$9048$1HvE18 g$exp-subst$9049$1HvE18 g$exp-env$9050$1HvE18 g$visit-proc$9051$1HvE18 g$invoke-proc$9052$1HvE18 g$visit-code$9053$1HvE18 g$invoke-code$9054$1HvE18 g$visible?$9055$1HvE18 g$source-file-name$9056$1HvE18) ((case-lambda ((g$imp-lib*$9057$1HvE18 g$vis-lib*$9058$1HvE18 g$inv-lib*$9059$1HvE18) (begin (if (if (symbol? g$id$9043$1HvE18) (if (list? g$name$9044$1HvE18) (begin '#f (list? g$ver$9045$1HvE18)) '#f) '#f) (void) (assertion-violation 'install-library '"invalid spec with id/name/ver" g$id$9043$1HvE18 g$name$9044$1HvE18 g$ver$9045$1HvE18)) (if (g$library-exists?$8925$1HvE18 g$name$9044$1HvE18) (assertion-violation 'install-library '"library is already installed" g$name$9044$1HvE18) (void)) ((case-lambda ((g$lib$9060$1HvE18) (g$install-library-record$8928$1HvE18 g$lib$9060$1HvE18))) (g$make-library$8881$1HvE18 g$id$9043$1HvE18 g$name$9044$1HvE18 g$ver$9045$1HvE18 g$imp-lib*$9057$1HvE18 g$vis-lib*$9058$1HvE18 g$inv-lib*$9059$1HvE18 g$exp-subst$9049$1HvE18 g$exp-env$9050$1HvE18 g$visit-proc$9051$1HvE18 g$invoke-proc$9052$1HvE18 g$visit-code$9053$1HvE18 g$invoke-code$9054$1HvE18 g$visible?$9055$1HvE18 g$source-file-name$9056$1HvE18))))) (map g$find-library-by-spec/die$8926$1HvE18 g$imp*$9046$1HvE18) (map g$find-library-by-spec/die$8926$1HvE18 g$vis*$9047$1HvE18) (map g$find-library-by-spec/die$8926$1HvE18 g$inv*$9048$1HvE18))))) (g$imported-label->binding$8930$1HvE18 g$imported-label->binding$9127$1HvE18 (case-lambda ((g$lab$9061$1HvE18) (g$hashtable-ref$7812$1HvE18 g$label->binding-table$8927$1HvE18 g$lab$9061$1HvE18 '#f)))) (g$invoke-library$8931$1HvE18 g$invoke-library$9128$1HvE18 (case-lambda ((g$lib$9062$1HvE18) ((case-lambda ((g$invoke$9063$1HvE18) (if (procedure? g$invoke$9063$1HvE18) (begin (g$set-library-invoke-state!$8905$1HvE18 g$lib$9062$1HvE18 (case-lambda (() (assertion-violation 'invoke '"circularity detected" g$lib$9062$1HvE18)))) (for-each g$invoke-library$8931$1HvE18 (g$library-inv*$8887$1HvE18 g$lib$9062$1HvE18)) (g$set-library-invoke-state!$8905$1HvE18 g$lib$9062$1HvE18 (case-lambda (() (assertion-violation 'invoke '"first invoke did not return" g$lib$9062$1HvE18)))) (g$invoke$9063$1HvE18) (g$set-library-invoke-state!$8905$1HvE18 g$lib$9062$1HvE18 '#t)) (void)))) (g$library-invoke-state$8891$1HvE18 g$lib$9062$1HvE18))))) (g$visit-library$8932$1HvE18 g$visit-library$9129$1HvE18 (case-lambda ((g$lib$9064$1HvE18) ((case-lambda ((g$visit$9065$1HvE18) (if (procedure? g$visit$9065$1HvE18) (begin (g$set-library-visit-state!$8904$1HvE18 g$lib$9064$1HvE18 (case-lambda (() (assertion-violation 'visit '"circularity detected" g$lib$9064$1HvE18)))) (for-each g$invoke-library$8931$1HvE18 (g$library-vis*$8886$1HvE18 g$lib$9064$1HvE18)) (g$set-library-visit-state!$8904$1HvE18 g$lib$9064$1HvE18 (case-lambda (() (assertion-violation 'invoke '"first visit did not return" g$lib$9064$1HvE18)))) (g$visit$9065$1HvE18) (g$set-library-visit-state!$8904$1HvE18 g$lib$9064$1HvE18 '#t)) (void)))) (g$library-visit-state$8890$1HvE18 g$lib$9064$1HvE18))))) (g$invoke-library-by-spec$8933$1HvE18 g$invoke-library-by-spec$9130$1HvE18 (case-lambda ((g$spec$9066$1HvE18) (g$invoke-library$8931$1HvE18 (g$find-library-by-spec/die$8926$1HvE18 g$spec$9066$1HvE18))))) (g$installed-libraries$8934$1HvE18 g$installed-libraries$9131$1HvE18 (case-lambda ((g$all?$9067$1HvE18) ((letrec ((g$f$9068$1HvE18 (case-lambda ((g$ls$9069$1HvE18) (if (null? g$ls$9069$1HvE18) '() (if ((case-lambda ((g$t$9070$1HvE18) (if g$t$9070$1HvE18 g$t$9070$1HvE18 (begin '#f (g$library-visible?$8894$1HvE18 (car g$ls$9069$1HvE18)))))) g$all?$9067$1HvE18) (cons (car g$ls$9069$1HvE18) (g$f$9068$1HvE18 (cdr g$ls$9069$1HvE18))) (g$f$9068$1HvE18 (cdr g$ls$9069$1HvE18)))))))) g$f$9068$1HvE18) ((g$current-library-collection$8876$1HvE18)))) (() (g$installed-libraries$8934$1HvE18 '#f)))) (g$library-spec$8935$1HvE18 g$library-spec$9132$1HvE18 (case-lambda ((g$x$9071$1HvE18) (begin (if (g$library?$8880$1HvE18 g$x$9071$1HvE18) (void) (assertion-violation 'library-spec '"not a library" g$x$9071$1HvE18)) (list (g$library-id$8882$1HvE18 g$x$9071$1HvE18) (g$library-name$8883$1HvE18 g$x$9071$1HvE18) (g$library-version$8884$1HvE18 g$x$9071$1HvE18))))))) (void))
(library-letrec* ((g$build-global-define$9133$1HvE18 g$build-global-define$9242$1HvE18 (case-lambda ((g$x$9214$1HvE18) (g$build-void$9210$1HvE18)))) (g$build-lambda$9182$1HvE18 g$build-lambda$9243$1HvE18 (case-lambda ((g$ae$9215$1HvE18 g$vars$9216$1HvE18 g$exp$9217$1HvE18) (list 'case-lambda (list g$vars$9216$1HvE18 g$exp$9217$1HvE18))))) (g$build-case-lambda$9183$1HvE18 g$build-case-lambda$9244$1HvE18 (case-lambda ((g$ae$9218$1HvE18 g$vars*$9219$1HvE18 g$exp*$9220$1HvE18) (cons 'case-lambda (map list g$vars*$9219$1HvE18 g$exp*$9220$1HvE18))))) (g$build-let$9184$1HvE18 g$build-let$9245$1HvE18 (case-lambda ((g$ae$9221$1HvE18 g$lhs*$9222$1HvE18 g$rhs*$9223$1HvE18 g$body$9224$1HvE18) (cons (g$build-lambda$9182$1HvE18 g$ae$9221$1HvE18 g$lhs*$9222$1HvE18 g$body$9224$1HvE18) g$rhs*$9223$1HvE18)))) (g$build-sequence$9209$1HvE18 g$build-sequence$9246$1HvE18 (case-lambda ((g$ae$9225$1HvE18 g$exps$9226$1HvE18) ((letrec ((g$loop$9227$1HvE18 (case-lambda ((g$exps$9228$1HvE18) (if (null? (cdr g$exps$9228$1HvE18)) (car g$exps$9228$1HvE18) (if (equal? (car g$exps$9228$1HvE18) (g$build-void$9210$1HvE18)) (g$loop$9227$1HvE18 (cdr g$exps$9228$1HvE18)) (cons 'begin g$exps$9228$1HvE18))))))) g$loop$9227$1HvE18) g$exps$9226$1HvE18)))) (g$build-void$9210$1HvE18 g$build-void$9247$1HvE18 (case-lambda (() '((primitive void))))) (g$build-letrec$9211$1HvE18 g$build-letrec$9248$1HvE18 (case-lambda ((g$ae$9229$1HvE18 g$vars$9230$1HvE18 g$val-exps$9231$1HvE18 g$body-exp$9232$1HvE18) (if (null? g$vars$9230$1HvE18) g$body-exp$9232$1HvE18 (list 'letrec (map list g$vars$9230$1HvE18 g$val-exps$9231$1HvE18) g$body-exp$9232$1HvE18))))) (g$build-letrec*$9212$1HvE18 g$build-letrec*$9249$1HvE18 (case-lambda ((g$ae$9233$1HvE18 g$vars$9234$1HvE18 g$val-exps$9235$1HvE18 g$body-exp$9236$1HvE18) (if (null? g$vars$9234$1HvE18) g$body-exp$9236$1HvE18 (list 'letrec* (map list g$vars$9234$1HvE18 g$val-exps$9235$1HvE18) g$body-exp$9236$1HvE18))))) (g$build-library-letrec*$9213$1HvE18 g$build-library-letrec*$9250$1HvE18 (case-lambda ((g$ae$9237$1HvE18 g$vars$9238$1HvE18 g$locs$9239$1HvE18 g$val-exps$9240$1HvE18 g$body-exp$9241$1HvE18) (list 'library-letrec* (map list g$vars$9238$1HvE18 g$locs$9239$1HvE18 g$val-exps$9240$1HvE18) g$body-exp$9241$1HvE18))))) (void))
(library-letrec* ((g$set-cons$9251$1HvE18 g$set-cons$15556$1HvE18 (case-lambda ((g$x$9702$1HvE18 g$ls$9703$1HvE18) (if (memq g$x$9702$1HvE18 g$ls$9703$1HvE18) g$ls$9703$1HvE18 (cons g$x$9702$1HvE18 g$ls$9703$1HvE18))))) (g$set-union$9252$1HvE18 g$set-union$15557$1HvE18 (case-lambda ((g$ls1$9704$1HvE18 g$ls2$9705$1HvE18) (if (null? g$ls1$9704$1HvE18) g$ls2$9705$1HvE18 (if (memq (car g$ls1$9704$1HvE18) g$ls2$9705$1HvE18) (g$set-union$9252$1HvE18 (cdr g$ls1$9704$1HvE18) g$ls2$9705$1HvE18) (cons (car g$ls1$9704$1HvE18) (g$set-union$9252$1HvE18 (cdr g$ls1$9704$1HvE18) g$ls2$9705$1HvE18))))))) (g$top-mark*$9254$1HvE18 g$top-mark*$15558$1HvE18 '(top)) (g$top-marked?$9255$1HvE18 g$top-marked?$15559$1HvE18 (case-lambda ((g$m*$9706$1HvE18) (memq 'top g$m*$9706$1HvE18)))) (g$gen-lexical$9256$1HvE18 g$gen-lexical$15560$1HvE18 (case-lambda ((g$sym$9707$1HvE18) (if (symbol? g$sym$9707$1HvE18) (gensym g$sym$9707$1HvE18) (if (g$stx?$9284$1HvE18 g$sym$9707$1HvE18) (g$gen-lexical$9256$1HvE18 (g$id->sym$9313$1HvE18 g$sym$9707$1HvE18)) (assertion-violation 'gen-lexical '"BUG: invalid arg" g$sym$9707$1HvE18)))))) (g$gen-global$9257$1HvE18 g$gen-global$15561$1HvE18 (case-lambda ((g$x$9708$1HvE18) (g$gen-lexical$9256$1HvE18 g$x$9708$1HvE18)))) (g$gen-label$9258$1HvE18 g$gen-label$15562$1HvE18 (case-lambda ((g$_$9709$1HvE18) (gensym)))) (g$gen-top-level-label$9259$1HvE18 g$gen-top-level-label$15563$1HvE18 (case-lambda ((g$id$9710$1HvE18 g$rib$9711$1HvE18) (letrec* ((g$find$9712$1HvE18 (case-lambda ((g$sym$9718$1HvE18 g$mark*$9719$1HvE18 g$sym*$9720$1HvE18 g$mark**$9721$1HvE18 g$label*$9722$1HvE18) (if (pair? g$sym*$9720$1HvE18) (begin '#f (if (if (eq? g$sym$9718$1HvE18 (car g$sym*$9720$1HvE18)) (begin '#f (g$same-marks?$9314$1HvE18 g$mark*$9719$1HvE18 (car g$mark**$9721$1HvE18))) '#f) (car g$label*$9722$1HvE18) (g$find$9712$1HvE18 g$sym$9718$1HvE18 g$mark*$9719$1HvE18 (cdr g$sym*$9720$1HvE18) (cdr g$mark**$9721$1HvE18) (cdr g$label*$9722$1HvE18)))) '#f))))) ((case-lambda ((g$sym$9713$1HvE18 g$mark*$9714$1HvE18) ((case-lambda ((g$sym*$9715$1HvE18) ((case-lambda ((g$t$9716$1HvE18) (if g$t$9716$1HvE18 ((case-lambda ((g$label$9717$1HvE18) (if (g$imported-label->binding$9127$1HvE18 g$label$9717$1HvE18) (gensym) g$label$9717$1HvE18))) g$t$9716$1HvE18) (gensym)))) (if (memq g$sym$9713$1HvE18 (g$rib-sym*$9267$1HvE18 g$rib$9711$1HvE18)) (begin '#f (g$find$9712$1HvE18 g$sym$9713$1HvE18 g$mark*$9714$1HvE18 g$sym*$9715$1HvE18 (g$rib-mark**$9268$1HvE18 g$rib$9711$1HvE18) (g$rib-label*$9269$1HvE18 g$rib$9711$1HvE18))) '#f)))) (g$rib-sym*$9267$1HvE18 g$rib$9711$1HvE18)))) (g$id->sym$9313$1HvE18 g$id$9710$1HvE18) (g$stx-mark*$9287$1HvE18 g$id$9710$1HvE18)))))) (g$gen-define-label+loc$9260$1HvE18 g$gen-define-label+loc$15564$1HvE18 (case-lambda ((g$id$9723$1HvE18 g$rib$9724$1HvE18) ((case-lambda ((g$t$9725$1HvE18) (if g$t$9725$1HvE18 ((case-lambda ((g$env$9726$1HvE18) ((case-lambda ((g$label$9727$1HvE18 g$locs$9728$1HvE18) (values g$label$9727$1HvE18 ((case-lambda ((g$t$9729$1HvE18) (if g$t$9729$1HvE18 (cdr g$t$9729$1HvE18) ((case-lambda ((g$loc$9730$1HvE18) (begin (g$set-interaction-env-locs!$9672$1HvE18 g$env$9726$1HvE18 (cons (cons g$label$9727$1HvE18 g$loc$9730$1HvE18) g$locs$9728$1HvE18)) g$loc$9730$1HvE18))) (g$gen-lexical$9256$1HvE18 g$id$9723$1HvE18))))) (assq g$label$9727$1HvE18 g$locs$9728$1HvE18))))) (g$gen-top-level-label$9259$1HvE18 g$id$9723$1HvE18 g$rib$9724$1HvE18) (g$interaction-env-locs$9669$1HvE18 g$env$9726$1HvE18)))) g$t$9725$1HvE18) (values (gensym) (g$gen-lexical$9256$1HvE18 g$id$9723$1HvE18))))) (g$top-level-context$9701$1HvE18))))) (g$gen-define-label$9261$1HvE18 g$gen-define-label$15565$1HvE18 (case-lambda ((g$id$9731$1HvE18 g$rib$9732$1HvE18) (if (g$top-level-context$9701$1HvE18) (g$gen-top-level-label$9259$1HvE18 g$id$9731$1HvE18 g$rib$9732$1HvE18) (gensym))))) (g$9912$9262$1HvE18 g$9912$15566$1HvE18 (make-record-type-descriptor 'rib '#f 'g$9915$1HvE18 '#t '#t '#((mutable sym*) (mutable mark**) (mutable label*) (mutable sealed/freq)))) (g$9914$9263$1HvE18 g$9914$15567$1HvE18 '#f) (g$9913$9264$1HvE18 g$9913$15568$1HvE18 (make-record-constructor-descriptor g$9912$9262$1HvE18 '#f g$9914$9263$1HvE18)) (g$rib?$9265$1HvE18 g$rib?$15569$1HvE18 (record-predicate g$9912$9262$1HvE18)) (g$make-rib$9266$1HvE18 g$make-rib$15570$1HvE18 (record-constructor g$9913$9264$1HvE18)) (g$rib-sym*$9267$1HvE18 g$rib-sym*$15571$1HvE18 (record-accessor g$9912$9262$1HvE18 '0)) (g$rib-mark**$9268$1HvE18 g$rib-mark**$15572$1HvE18 (record-accessor g$9912$9262$1HvE18 '1)) (g$rib-label*$9269$1HvE18 g$rib-label*$15573$1HvE18 (record-accessor g$9912$9262$1HvE18 '2)) (g$rib-sealed/freq$9270$1HvE18 g$rib-sealed/freq$15574$1HvE18 (record-accessor g$9912$9262$1HvE18 '3)) (g$set-rib-sym*!$9271$1HvE18 g$set-rib-sym*!$15575$1HvE18 (record-mutator g$9912$9262$1HvE18 '0)) (g$set-rib-mark**!$9272$1HvE18 g$set-rib-mark**!$15576$1HvE18 (record-mutator g$9912$9262$1HvE18 '1)) (g$set-rib-label*!$9273$1HvE18 g$set-rib-label*!$15577$1HvE18 (record-mutator g$9912$9262$1HvE18 '2)) (g$set-rib-sealed/freq!$9274$1HvE18 g$set-rib-sealed/freq!$15578$1HvE18 (record-mutator g$9912$9262$1HvE18 '3)) (g$make-empty-rib$9275$1HvE18 g$make-empty-rib$15579$1HvE18 (case-lambda (() (g$make-rib$9266$1HvE18 '() '() '() '#f)))) (g$extend-rib!$9276$1HvE18 g$extend-rib!$15580$1HvE18 (case-lambda ((g$rib$9733$1HvE18 g$id$9734$1HvE18 g$label$9735$1HvE18) (letrec* ((g$find$9736$1HvE18 (case-lambda ((g$sym$9742$1HvE18 g$mark*$9743$1HvE18 g$sym*$9744$1HvE18 g$mark**$9745$1HvE18 g$label*$9746$1HvE18) (if (pair? g$sym*$9744$1HvE18) (begin '#f (if (if (eq? g$sym$9742$1HvE18 (car g$sym*$9744$1HvE18)) (begin '#f (g$same-marks?$9314$1HvE18 g$mark*$9743$1HvE18 (car g$mark**$9745$1HvE18))) '#f) g$label*$9746$1HvE18 (g$find$9736$1HvE18 g$sym$9742$1HvE18 g$mark*$9743$1HvE18 (cdr g$sym*$9744$1HvE18) (cdr g$mark**$9745$1HvE18) (cdr g$label*$9746$1HvE18)))) '#f))))) (begin (if (g$rib-sealed/freq$9270$1HvE18 g$rib$9733$1HvE18) (assertion-violation 'extend-rib! '"BUG: rib is sealed" g$rib$9733$1HvE18) (void)) ((case-lambda ((g$sym$9737$1HvE18 g$mark*$9738$1HvE18) ((case-lambda ((g$sym*$9739$1HvE18) ((case-lambda ((g$t$9740$1HvE18) (if g$t$9740$1HvE18 ((case-lambda ((g$p$9741$1HvE18) (if (eq? g$label$9735$1HvE18 (car g$p$9741$1HvE18)) (void) (if (g$top-level-context$9701$1HvE18) (set-car! g$p$9741$1HvE18 g$label$9735$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"cannot redefine" g$id$9734$1HvE18))))) g$t$9740$1HvE18) (begin (g$set-rib-sym*!$9271$1HvE18 g$rib$9733$1HvE18 (cons g$sym$9737$1HvE18 g$sym*$9739$1HvE18)) (g$set-rib-mark**!$9272$1HvE18 g$rib$9733$1HvE18 (cons g$mark*$9738$1HvE18 (g$rib-mark**$9268$1HvE18 g$rib$9733$1HvE18))) (g$set-rib-label*!$9273$1HvE18 g$rib$9733$1HvE18 (cons g$label$9735$1HvE18 (g$rib-label*$9269$1HvE18 g$rib$9733$1HvE18))))))) (if (memq g$sym$9737$1HvE18 (g$rib-sym*$9267$1HvE18 g$rib$9733$1HvE18)) (begin '#f (g$find$9736$1HvE18 g$sym$9737$1HvE18 g$mark*$9738$1HvE18 g$sym*$9739$1HvE18 (g$rib-mark**$9268$1HvE18 g$rib$9733$1HvE18) (g$rib-label*$9269$1HvE18 g$rib$9733$1HvE18))) '#f)))) (g$rib-sym*$9267$1HvE18 g$rib$9733$1HvE18)))) (g$id->sym$9313$1HvE18 g$id$9734$1HvE18) (g$stx-mark*$9287$1HvE18 g$id$9734$1HvE18))))))) (g$seal-rib!$9277$1HvE18 g$seal-rib!$15581$1HvE18 (case-lambda ((g$rib$9747$1HvE18) ((case-lambda ((g$sym*$9748$1HvE18) (if (null? g$sym*$9748$1HvE18) (void) ((case-lambda ((g$sym*$9749$1HvE18) (begin (g$set-rib-sym*!$9271$1HvE18 g$rib$9747$1HvE18 g$sym*$9749$1HvE18) (g$set-rib-mark**!$9272$1HvE18 g$rib$9747$1HvE18 (list->vector (g$rib-mark**$9268$1HvE18 g$rib$9747$1HvE18))) (g$set-rib-label*!$9273$1HvE18 g$rib$9747$1HvE18 (list->vector (g$rib-label*$9269$1HvE18 g$rib$9747$1HvE18))) (g$set-rib-sealed/freq!$9274$1HvE18 g$rib$9747$1HvE18 (make-vector (vector-length g$sym*$9749$1HvE18) '0))))) (list->vector g$sym*$9748$1HvE18))))) (g$rib-sym*$9267$1HvE18 g$rib$9747$1HvE18))))) (g$unseal-rib!$9278$1HvE18 g$unseal-rib!$15582$1HvE18 (case-lambda ((g$rib$9750$1HvE18) (if (g$rib-sealed/freq$9270$1HvE18 g$rib$9750$1HvE18) (begin (g$set-rib-sealed/freq!$9274$1HvE18 g$rib$9750$1HvE18 '#f) (g$set-rib-sym*!$9271$1HvE18 g$rib$9750$1HvE18 (vector->list (g$rib-sym*$9267$1HvE18 g$rib$9750$1HvE18))) (g$set-rib-mark**!$9272$1HvE18 g$rib$9750$1HvE18 (vector->list (g$rib-mark**$9268$1HvE18 g$rib$9750$1HvE18))) (g$set-rib-label*!$9273$1HvE18 g$rib$9750$1HvE18 (vector->list (g$rib-label*$9269$1HvE18 g$rib$9750$1HvE18)))) (void))))) (g$increment-rib-frequency!$9279$1HvE18 g$increment-rib-frequency!$15583$1HvE18 (case-lambda ((g$rib$9751$1HvE18 g$idx$9752$1HvE18) ((case-lambda ((g$freq*$9753$1HvE18) ((case-lambda ((g$freq$9754$1HvE18) ((case-lambda ((g$i$9755$1HvE18) (begin (vector-set! g$freq*$9753$1HvE18 g$i$9755$1HvE18 (+ g$freq$9754$1HvE18 '1)) (if (= g$i$9755$1HvE18 g$idx$9752$1HvE18) (void) ((case-lambda ((g$sym*$9756$1HvE18 g$mark**$9757$1HvE18 g$label*$9758$1HvE18) (begin ((case-lambda ((g$sym$9759$1HvE18) (begin (vector-set! g$sym*$9756$1HvE18 g$idx$9752$1HvE18 (vector-ref g$sym*$9756$1HvE18 g$i$9755$1HvE18)) (vector-set! g$sym*$9756$1HvE18 g$i$9755$1HvE18 g$sym$9759$1HvE18)))) (vector-ref g$sym*$9756$1HvE18 g$idx$9752$1HvE18)) ((case-lambda ((g$mark*$9760$1HvE18) (begin (vector-set! g$mark**$9757$1HvE18 g$idx$9752$1HvE18 (vector-ref g$mark**$9757$1HvE18 g$i$9755$1HvE18)) (vector-set! g$mark**$9757$1HvE18 g$i$9755$1HvE18 g$mark*$9760$1HvE18)))) (vector-ref g$mark**$9757$1HvE18 g$idx$9752$1HvE18)) ((case-lambda ((g$label$9761$1HvE18) (begin (vector-set! g$label*$9758$1HvE18 g$idx$9752$1HvE18 (vector-ref g$label*$9758$1HvE18 g$i$9755$1HvE18)) (vector-set! g$label*$9758$1HvE18 g$i$9755$1HvE18 g$label$9761$1HvE18)))) (vector-ref g$label*$9758$1HvE18 g$idx$9752$1HvE18))))) (g$rib-sym*$9267$1HvE18 g$rib$9751$1HvE18) (g$rib-mark**$9268$1HvE18 g$rib$9751$1HvE18) (g$rib-label*$9269$1HvE18 g$rib$9751$1HvE18)))))) ((letrec ((g$f$9762$1HvE18 (case-lambda ((g$i$9763$1HvE18) (if (zero? g$i$9763$1HvE18) '0 ((case-lambda ((g$j$9764$1HvE18) (if (= g$freq$9754$1HvE18 (vector-ref g$freq*$9753$1HvE18 g$j$9764$1HvE18)) (g$f$9762$1HvE18 g$j$9764$1HvE18) g$i$9763$1HvE18))) (- g$i$9763$1HvE18 '1))))))) g$f$9762$1HvE18) g$idx$9752$1HvE18)))) (vector-ref g$freq*$9753$1HvE18 g$idx$9752$1HvE18)))) (g$rib-sealed/freq$9270$1HvE18 g$rib$9751$1HvE18))))) (g$make-full-rib$9280$1HvE18 g$make-full-rib$15584$1HvE18 (case-lambda ((g$id*$9765$1HvE18 g$label*$9766$1HvE18) (g$make-rib$9266$1HvE18 (map g$id->sym$9313$1HvE18 g$id*$9765$1HvE18) (map g$stx-mark*$9287$1HvE18 g$id*$9765$1HvE18) g$label*$9766$1HvE18 '#f)))) (g$9938$9281$1HvE18 g$9938$15585$1HvE18 (make-record-type-descriptor 'stx '#f 'g$9941$1HvE18 '#t '#t '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*)))) (g$9940$9282$1HvE18 g$9940$15586$1HvE18 '#f) (g$9939$9283$1HvE18 g$9939$15587$1HvE18 (make-record-constructor-descriptor g$9938$9281$1HvE18 '#f g$9940$9282$1HvE18)) (g$stx?$9284$1HvE18 g$stx?$15588$1HvE18 (record-predicate g$9938$9281$1HvE18)) (g$make-stx$9285$1HvE18 g$make-stx$15589$1HvE18 (record-constructor g$9939$9283$1HvE18)) (g$stx-expr$9286$1HvE18 g$stx-expr$15590$1HvE18 (record-accessor g$9938$9281$1HvE18 '0)) (g$stx-mark*$9287$1HvE18 g$stx-mark*$15591$1HvE18 (record-accessor g$9938$9281$1HvE18 '1)) (g$stx-subst*$9288$1HvE18 g$stx-subst*$15592$1HvE18 (record-accessor g$9938$9281$1HvE18 '2)) (g$stx-ae*$9289$1HvE18 g$stx-ae*$15593$1HvE18 (record-accessor g$9938$9281$1HvE18 '3)) (g$set-stx-expr!$9290$1HvE18 g$set-stx-expr!$15594$1HvE18 (record-mutator g$9938$9281$1HvE18 '0)) (g$set-stx-mark*!$9291$1HvE18 g$set-stx-mark*!$15595$1HvE18 (record-mutator g$9938$9281$1HvE18 '1)) (g$set-stx-subst*!$9292$1HvE18 g$set-stx-subst*!$15596$1HvE18 (record-mutator g$9938$9281$1HvE18 '2)) (g$set-stx-ae*!$9293$1HvE18 g$set-stx-ae*!$15597$1HvE18 (record-mutator g$9938$9281$1HvE18 '3)) (g$rp$9294$1HvE18 g$rp$15598$1HvE18 (make-record-printer 'stx (case-lambda ((g$x$9767$1HvE18 g$p$9768$1HvE18) (begin (display '"#<syntax " g$p$9768$1HvE18) (write (g$stx->datum$9323$1HvE18 g$x$9767$1HvE18) g$p$9768$1HvE18) ((case-lambda ((g$expr$9769$1HvE18) (if (annotation? g$expr$9769$1HvE18) ((case-lambda ((g$src$9770$1HvE18) (if (pair? g$src$9770$1HvE18) (begin (display '" [byte " g$p$9768$1HvE18) (display (cdr g$src$9770$1HvE18) g$p$9768$1HvE18) (display '" of " g$p$9768$1HvE18) (display (car g$src$9770$1HvE18) g$p$9768$1HvE18) (display '"]" g$p$9768$1HvE18)) (void)))) (annotation-source g$expr$9769$1HvE18)) (void)))) (g$stx-expr$9286$1HvE18 g$x$9767$1HvE18)) (display '">" g$p$9768$1HvE18)))))) (g$datum->stx$9295$1HvE18 g$datum->stx$15599$1HvE18 (case-lambda ((g$id$9771$1HvE18 g$datum$9772$1HvE18) (g$make-stx$9285$1HvE18 g$datum$9772$1HvE18 (g$stx-mark*$9287$1HvE18 g$id$9771$1HvE18) (g$stx-subst*$9288$1HvE18 g$id$9771$1HvE18) (g$stx-ae*$9289$1HvE18 g$id$9771$1HvE18))))) (g$gen-mark$9296$1HvE18 g$gen-mark$15600$1HvE18 (case-lambda (() (string '#\m)))) (g$anti-mark$9297$1HvE18 g$anti-mark$15601$1HvE18 '#f) (g$anti-mark?$9298$1HvE18 g$anti-mark?$15602$1HvE18 not) (g$join-wraps$9299$1HvE18 g$join-wraps$15603$1HvE18 (case-lambda ((g$m1*$9773$1HvE18 g$s1*$9774$1HvE18 g$ae1*$9775$1HvE18 g$e$9776$1HvE18) (letrec* ((g$cancel$9777$1HvE18 (case-lambda ((g$ls1$9781$1HvE18 g$ls2$9782$1HvE18) ((letrec ((g$f$9783$1HvE18 (case-lambda ((g$x$9784$1HvE18 g$ls1$9785$1HvE18) (if (null? g$ls1$9785$1HvE18) (cdr g$ls2$9782$1HvE18) (cons g$x$9784$1HvE18 (g$f$9783$1HvE18 (car g$ls1$9785$1HvE18) (cdr g$ls1$9785$1HvE18)))))))) g$f$9783$1HvE18) (car g$ls1$9781$1HvE18) (cdr g$ls1$9781$1HvE18)))))) ((case-lambda ((g$m2*$9778$1HvE18 g$s2*$9779$1HvE18 g$ae2*$9780$1HvE18) (if (if (not (null? g$m1*$9773$1HvE18)) (if (not (null? g$m2*$9778$1HvE18)) (begin '#f (g$anti-mark?$9298$1HvE18 (car g$m2*$9778$1HvE18))) '#f) '#f) (values (g$cancel$9777$1HvE18 g$m1*$9773$1HvE18 g$m2*$9778$1HvE18) (g$cancel$9777$1HvE18 g$s1*$9774$1HvE18 g$s2*$9779$1HvE18) (g$cancel$9777$1HvE18 g$ae1*$9775$1HvE18 g$ae2*$9780$1HvE18)) (values (append g$m1*$9773$1HvE18 g$m2*$9778$1HvE18) (append g$s1*$9774$1HvE18 g$s2*$9779$1HvE18) (append g$ae1*$9775$1HvE18 g$ae2*$9780$1HvE18))))) (g$stx-mark*$9287$1HvE18 g$e$9776$1HvE18) (g$stx-subst*$9288$1HvE18 g$e$9776$1HvE18) (g$stx-ae*$9289$1HvE18 g$e$9776$1HvE18)))))) (g$mkstx$9300$1HvE18 g$mkstx$15604$1HvE18 (case-lambda ((g$e$9786$1HvE18 g$m*$9787$1HvE18 g$s*$9788$1HvE18 g$ae*$9789$1HvE18) (if (g$stx?$9284$1HvE18 g$e$9786$1HvE18) (call-with-values (case-lambda (() (g$join-wraps$9299$1HvE18 g$m*$9787$1HvE18 g$s*$9788$1HvE18 g$ae*$9789$1HvE18 g$e$9786$1HvE18))) (case-lambda ((g$m*$9793$1HvE18 g$s*$9794$1HvE18 g$ae*$9795$1HvE18) ((case-lambda ((g$ae*$9796$1HvE18 g$s*$9797$1HvE18 g$m*$9798$1HvE18) (g$make-stx$9285$1HvE18 (g$stx-expr$9286$1HvE18 g$e$9786$1HvE18) g$m*$9798$1HvE18 g$s*$9797$1HvE18 g$ae*$9796$1HvE18))) g$ae*$9795$1HvE18 g$s*$9794$1HvE18 g$m*$9793$1HvE18)))) (g$make-stx$9285$1HvE18 g$e$9786$1HvE18 g$m*$9787$1HvE18 g$s*$9788$1HvE18 g$ae*$9789$1HvE18))))) (g$add-mark$9301$1HvE18 g$add-mark$15605$1HvE18 (case-lambda ((g$m$9799$1HvE18 g$e$9800$1HvE18 g$ae$9801$1HvE18) (g$mkstx$9300$1HvE18 g$e$9800$1HvE18 (list g$m$9799$1HvE18) '(shift) (list g$ae$9801$1HvE18))))) (g$add-subst$9302$1HvE18 g$add-subst$15606$1HvE18 (case-lambda ((g$subst$9802$1HvE18 g$e$9803$1HvE18) (g$mkstx$9300$1HvE18 g$e$9803$1HvE18 '() (list g$subst$9802$1HvE18) '())))) (g$syntax-kind?$9303$1HvE18 g$syntax-kind?$15607$1HvE18 (case-lambda ((g$x$9804$1HvE18 g$p?$9805$1HvE18) (if (g$stx?$9284$1HvE18 g$x$9804$1HvE18) (g$syntax-kind?$9303$1HvE18 (g$stx-expr$9286$1HvE18 g$x$9804$1HvE18) g$p?$9805$1HvE18) (if (annotation? g$x$9804$1HvE18) (g$syntax-kind?$9303$1HvE18 (annotation-expression g$x$9804$1HvE18) g$p?$9805$1HvE18) (g$p?$9805$1HvE18 g$x$9804$1HvE18)))))) (g$syntax-vector->list$9304$1HvE18 g$syntax-vector->list$15608$1HvE18 (case-lambda ((g$x$9806$1HvE18) (if (g$stx?$9284$1HvE18 g$x$9806$1HvE18) ((case-lambda ((g$ls$9807$1HvE18 g$m*$9808$1HvE18 g$s*$9809$1HvE18 g$ae*$9810$1HvE18) (map (case-lambda ((g$x$9811$1HvE18) (g$mkstx$9300$1HvE18 g$x$9811$1HvE18 g$m*$9808$1HvE18 g$s*$9809$1HvE18 g$ae*$9810$1HvE18))) g$ls$9807$1HvE18))) (g$syntax-vector->list$9304$1HvE18 (g$stx-expr$9286$1HvE18 g$x$9806$1HvE18)) (g$stx-mark*$9287$1HvE18 g$x$9806$1HvE18) (g$stx-subst*$9288$1HvE18 g$x$9806$1HvE18) (g$stx-ae*$9289$1HvE18 g$x$9806$1HvE18)) (if (annotation? g$x$9806$1HvE18) (g$syntax-vector->list$9304$1HvE18 (annotation-expression g$x$9806$1HvE18)) (if (vector? g$x$9806$1HvE18) (vector->list g$x$9806$1HvE18) (assertion-violation 'syntax-vector->list '"BUG: not a syntax vector" g$x$9806$1HvE18))))))) (g$syntax-pair?$9305$1HvE18 g$syntax-pair?$15609$1HvE18 (case-lambda ((g$x$9812$1HvE18) (g$syntax-kind?$9303$1HvE18 g$x$9812$1HvE18 pair?)))) (g$syntax-vector?$9306$1HvE18 g$syntax-vector?$15610$1HvE18 (case-lambda ((g$x$9813$1HvE18) (g$syntax-kind?$9303$1HvE18 g$x$9813$1HvE18 vector?)))) (g$syntax-null?$9307$1HvE18 g$syntax-null?$15611$1HvE18 (case-lambda ((g$x$9814$1HvE18) (g$syntax-kind?$9303$1HvE18 g$x$9814$1HvE18 null?)))) (g$syntax-list?$9308$1HvE18 g$syntax-list?$15612$1HvE18 (case-lambda ((g$x$9815$1HvE18) ((case-lambda ((g$t$9816$1HvE18) (if g$t$9816$1HvE18 g$t$9816$1HvE18 (begin '#f (if (g$syntax-pair?$9305$1HvE18 g$x$9815$1HvE18) (begin '#f (g$syntax-list?$9308$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$9815$1HvE18))) '#f))))) (g$syntax-null?$9307$1HvE18 g$x$9815$1HvE18))))) (g$syntax-car$9309$1HvE18 g$syntax-car$15613$1HvE18 (case-lambda ((g$x$9817$1HvE18) (if (g$stx?$9284$1HvE18 g$x$9817$1HvE18) (g$mkstx$9300$1HvE18 (g$syntax-car$9309$1HvE18 (g$stx-expr$9286$1HvE18 g$x$9817$1HvE18)) (g$stx-mark*$9287$1HvE18 g$x$9817$1HvE18) (g$stx-subst*$9288$1HvE18 g$x$9817$1HvE18) (g$stx-ae*$9289$1HvE18 g$x$9817$1HvE18)) (if (annotation? g$x$9817$1HvE18) (g$syntax-car$9309$1HvE18 (annotation-expression g$x$9817$1HvE18)) (if (pair? g$x$9817$1HvE18) (car g$x$9817$1HvE18) (assertion-violation 'syntax-car '"BUG: not a pair" g$x$9817$1HvE18))))))) (g$syntax-cdr$9310$1HvE18 g$syntax-cdr$15614$1HvE18 (case-lambda ((g$x$9818$1HvE18) (if (g$stx?$9284$1HvE18 g$x$9818$1HvE18) (g$mkstx$9300$1HvE18 (g$syntax-cdr$9310$1HvE18 (g$stx-expr$9286$1HvE18 g$x$9818$1HvE18)) (g$stx-mark*$9287$1HvE18 g$x$9818$1HvE18) (g$stx-subst*$9288$1HvE18 g$x$9818$1HvE18) (g$stx-ae*$9289$1HvE18 g$x$9818$1HvE18)) (if (annotation? g$x$9818$1HvE18) (g$syntax-cdr$9310$1HvE18 (annotation-expression g$x$9818$1HvE18)) (if (pair? g$x$9818$1HvE18) (cdr g$x$9818$1HvE18) (assertion-violation 'syntax-cdr '"BUG: not a pair" g$x$9818$1HvE18))))))) (g$syntax->list$9311$1HvE18 g$syntax->list$15615$1HvE18 (case-lambda ((g$x$9819$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9819$1HvE18) (cons (g$syntax-car$9309$1HvE18 g$x$9819$1HvE18) (g$syntax->list$9311$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$9819$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$9819$1HvE18) '() (assertion-violation 'syntax->list '"BUG: invalid argument" g$x$9819$1HvE18)))))) (g$id?$9312$1HvE18 g$id?$15616$1HvE18 (case-lambda ((g$x$9820$1HvE18) (if (g$stx?$9284$1HvE18 g$x$9820$1HvE18) (begin '#f ((case-lambda ((g$expr$9821$1HvE18) (symbol? (if (annotation? g$expr$9821$1HvE18) (annotation-stripped g$expr$9821$1HvE18) g$expr$9821$1HvE18)))) (g$stx-expr$9286$1HvE18 g$x$9820$1HvE18))) '#f)))) (g$id->sym$9313$1HvE18 g$id->sym$15617$1HvE18 (case-lambda ((g$x$9822$1HvE18) (begin (if (g$stx?$9284$1HvE18 g$x$9822$1HvE18) (void) (error 'id->sym '"BUG in ikarus: not an id" g$x$9822$1HvE18)) ((case-lambda ((g$expr$9823$1HvE18) ((case-lambda ((g$sym$9824$1HvE18) (if (symbol? g$sym$9824$1HvE18) g$sym$9824$1HvE18 (error 'id->sym '"BUG in ikarus: not an id" g$x$9822$1HvE18)))) (if (annotation? g$expr$9823$1HvE18) (annotation-stripped g$expr$9823$1HvE18) g$expr$9823$1HvE18)))) (g$stx-expr$9286$1HvE18 g$x$9822$1HvE18)))))) (g$same-marks?$9314$1HvE18 g$same-marks?$15618$1HvE18 (case-lambda ((g$x$9825$1HvE18 g$y$9826$1HvE18) ((case-lambda ((g$t$9827$1HvE18) (if g$t$9827$1HvE18 g$t$9827$1HvE18 (begin '#f (if (pair? g$x$9825$1HvE18) (if (pair? g$y$9826$1HvE18) (if (eq? (car g$x$9825$1HvE18) (car g$y$9826$1HvE18)) (begin '#f (g$same-marks?$9314$1HvE18 (cdr g$x$9825$1HvE18) (cdr g$y$9826$1HvE18))) '#f) '#f) '#f))))) (if (null? g$x$9825$1HvE18) (begin '#f (null? g$y$9826$1HvE18)) '#f))))) (g$bound-id=?$9315$1HvE18 g$bound-id=?$15619$1HvE18 (case-lambda ((g$x$9828$1HvE18 g$y$9829$1HvE18) (if (eq? (g$id->sym$9313$1HvE18 g$x$9828$1HvE18) (g$id->sym$9313$1HvE18 g$y$9829$1HvE18)) (begin '#f (g$same-marks?$9314$1HvE18 (g$stx-mark*$9287$1HvE18 g$x$9828$1HvE18) (g$stx-mark*$9287$1HvE18 g$y$9829$1HvE18))) '#f)))) (g$free-id=?$9316$1HvE18 g$free-id=?$15620$1HvE18 (case-lambda ((g$i$9830$1HvE18 g$j$9831$1HvE18) ((case-lambda ((g$t0$9832$1HvE18 g$t1$9833$1HvE18) (if ((case-lambda ((g$t$9834$1HvE18) (if g$t$9834$1HvE18 g$t$9834$1HvE18 (begin '#f g$t1$9833$1HvE18)))) g$t0$9832$1HvE18) (eq? g$t0$9832$1HvE18 g$t1$9833$1HvE18) (eq? (g$id->sym$9313$1HvE18 g$i$9830$1HvE18) (g$id->sym$9313$1HvE18 g$j$9831$1HvE18))))) (g$id->real-label$9325$1HvE18 g$i$9830$1HvE18) (g$id->real-label$9325$1HvE18 g$j$9831$1HvE18))))) (g$valid-bound-ids?$9317$1HvE18 g$valid-bound-ids?$15621$1HvE18 (case-lambda ((g$id*$9835$1HvE18) (if (g$for-all$7965$1HvE18 g$id?$9312$1HvE18 g$id*$9835$1HvE18) (begin '#f (g$distinct-bound-ids?$9318$1HvE18 g$id*$9835$1HvE18)) '#f)))) (g$distinct-bound-ids?$9318$1HvE18 g$distinct-bound-ids?$15622$1HvE18 (case-lambda ((g$id*$9836$1HvE18) ((case-lambda ((g$t$9837$1HvE18) (if g$t$9837$1HvE18 g$t$9837$1HvE18 (begin '#f (if (not (g$bound-id-member?$9319$1HvE18 (car g$id*$9836$1HvE18) (cdr g$id*$9836$1HvE18))) (begin '#f (g$distinct-bound-ids?$9318$1HvE18 (cdr g$id*$9836$1HvE18))) '#f))))) (null? g$id*$9836$1HvE18))))) (g$bound-id-member?$9319$1HvE18 g$bound-id-member?$15623$1HvE18 (case-lambda ((g$id$9838$1HvE18 g$id*$9839$1HvE18) (if (pair? g$id*$9839$1HvE18) (begin '#f ((case-lambda ((g$t$9840$1HvE18) (if g$t$9840$1HvE18 g$t$9840$1HvE18 (begin '#f (g$bound-id-member?$9319$1HvE18 g$id$9838$1HvE18 (cdr g$id*$9839$1HvE18)))))) (g$bound-id=?$9315$1HvE18 g$id$9838$1HvE18 (car g$id*$9839$1HvE18)))) '#f)))) (g$self-evaluating?$9320$1HvE18 g$self-evaluating?$15624$1HvE18 (case-lambda ((g$x$9841$1HvE18) ((case-lambda ((g$t$9842$1HvE18) (if g$t$9842$1HvE18 g$t$9842$1HvE18 ((case-lambda ((g$t$9843$1HvE18) (if g$t$9843$1HvE18 g$t$9843$1HvE18 ((case-lambda ((g$t$9844$1HvE18) (if g$t$9844$1HvE18 g$t$9844$1HvE18 ((case-lambda ((g$t$9845$1HvE18) (if g$t$9845$1HvE18 g$t$9845$1HvE18 (begin '#f (bytevector? g$x$9841$1HvE18))))) (boolean? g$x$9841$1HvE18))))) (char? g$x$9841$1HvE18))))) (string? g$x$9841$1HvE18))))) (number? g$x$9841$1HvE18))))) (g$strip-annotations$9321$1HvE18 g$strip-annotations$15625$1HvE18 (case-lambda ((g$x$9846$1HvE18) (if (pair? g$x$9846$1HvE18) (cons (g$strip-annotations$9321$1HvE18 (car g$x$9846$1HvE18)) (g$strip-annotations$9321$1HvE18 (cdr g$x$9846$1HvE18))) (if (vector? g$x$9846$1HvE18) (vector-map g$strip-annotations$9321$1HvE18 g$x$9846$1HvE18) (if (annotation? g$x$9846$1HvE18) (annotation-stripped g$x$9846$1HvE18) g$x$9846$1HvE18)))))) (g$strip$9322$1HvE18 g$strip$15626$1HvE18 (case-lambda ((g$x$9847$1HvE18 g$m*$9848$1HvE18) (if (g$top-marked?$9255$1HvE18 g$m*$9848$1HvE18) (if ((case-lambda ((g$t$9849$1HvE18) (if g$t$9849$1HvE18 g$t$9849$1HvE18 ((case-lambda ((g$t$9850$1HvE18) (if g$t$9850$1HvE18 g$t$9850$1HvE18 (begin '#f (if (vector? g$x$9847$1HvE18) (if (> (vector-length g$x$9847$1HvE18) '0) (begin '#f (annotation? (vector-ref g$x$9847$1HvE18 '0))) '#f) '#f))))) (if (pair? g$x$9847$1HvE18) (begin '#f (annotation? (car g$x$9847$1HvE18))) '#f))))) (annotation? g$x$9847$1HvE18)) (g$strip-annotations$9321$1HvE18 g$x$9847$1HvE18) g$x$9847$1HvE18) ((letrec ((g$f$9851$1HvE18 (case-lambda ((g$x$9852$1HvE18) (if (g$stx?$9284$1HvE18 g$x$9852$1HvE18) (g$strip$9322$1HvE18 (g$stx-expr$9286$1HvE18 g$x$9852$1HvE18) (g$stx-mark*$9287$1HvE18 g$x$9852$1HvE18)) (if (annotation? g$x$9852$1HvE18) (annotation-stripped g$x$9852$1HvE18) (if (pair? g$x$9852$1HvE18) ((case-lambda ((g$a$9853$1HvE18 g$d$9854$1HvE18) (if (if (eq? g$a$9853$1HvE18 (car g$x$9852$1HvE18)) (begin '#f (eq? g$d$9854$1HvE18 (cdr g$x$9852$1HvE18))) '#f) g$x$9852$1HvE18 (cons g$a$9853$1HvE18 g$d$9854$1HvE18)))) (g$f$9851$1HvE18 (car g$x$9852$1HvE18)) (g$f$9851$1HvE18 (cdr g$x$9852$1HvE18))) (if (vector? g$x$9852$1HvE18) ((case-lambda ((g$old$9855$1HvE18) ((case-lambda ((g$new$9856$1HvE18) (if (g$for-all$7965$1HvE18 eq? g$old$9855$1HvE18 g$new$9856$1HvE18) g$x$9852$1HvE18 (list->vector g$new$9856$1HvE18)))) (map g$f$9851$1HvE18 g$old$9855$1HvE18)))) (vector->list g$x$9852$1HvE18)) g$x$9852$1HvE18)))))))) g$f$9851$1HvE18) g$x$9847$1HvE18))))) (g$stx->datum$9323$1HvE18 g$stx->datum$15627$1HvE18 (case-lambda ((g$x$9857$1HvE18) (g$strip$9322$1HvE18 g$x$9857$1HvE18 '())))) (g$id->label$9324$1HvE18 g$id->label$15628$1HvE18 (case-lambda ((g$id$9858$1HvE18) ((case-lambda ((g$t$9859$1HvE18) (if g$t$9859$1HvE18 g$t$9859$1HvE18 (begin '#f ((case-lambda ((g$t$9860$1HvE18) (if g$t$9860$1HvE18 ((case-lambda ((g$env$9861$1HvE18) ((case-lambda ((g$rib$9862$1HvE18) (call-with-values (case-lambda (() (g$gen-define-label+loc$9260$1HvE18 g$id$9858$1HvE18 g$rib$9862$1HvE18))) (case-lambda ((g$lab$9865$1HvE18 g$loc_$9866$1HvE18) ((case-lambda ((g$loc_$9867$1HvE18 g$lab$9868$1HvE18) g$lab$9868$1HvE18)) g$loc_$9866$1HvE18 g$lab$9865$1HvE18)))))) (g$interaction-env-rib$9667$1HvE18 g$env$9861$1HvE18)))) g$t$9860$1HvE18) '#f))) (g$top-level-context$9701$1HvE18)))))) (g$id->real-label$9325$1HvE18 g$id$9858$1HvE18))))) (g$id->real-label$9325$1HvE18 g$id->real-label$15629$1HvE18 (case-lambda ((g$id$9869$1HvE18) ((case-lambda ((g$sym$9870$1HvE18) ((letrec ((g$search$9871$1HvE18 (case-lambda ((g$subst*$9872$1HvE18 g$mark*$9873$1HvE18) (if (null? g$subst*$9872$1HvE18) '#f (if (eq? (car g$subst*$9872$1HvE18) 'shift) (g$search$9871$1HvE18 (cdr g$subst*$9872$1HvE18) (cdr g$mark*$9873$1HvE18)) ((case-lambda ((g$rib$9874$1HvE18) (if (g$rib-sealed/freq$9270$1HvE18 g$rib$9874$1HvE18) ((case-lambda ((g$sym*$9875$1HvE18) ((letrec ((g$f$9876$1HvE18 (case-lambda ((g$i$9877$1HvE18 g$j$9878$1HvE18) (if (= g$i$9877$1HvE18 g$j$9878$1HvE18) (g$search$9871$1HvE18 (cdr g$subst*$9872$1HvE18) g$mark*$9873$1HvE18) (if (if (eq? (vector-ref g$sym*$9875$1HvE18 g$i$9877$1HvE18) g$sym$9870$1HvE18) (begin '#f (g$same-marks?$9314$1HvE18 g$mark*$9873$1HvE18 (vector-ref (g$rib-mark**$9268$1HvE18 g$rib$9874$1HvE18) g$i$9877$1HvE18))) '#f) ((case-lambda ((g$label$9879$1HvE18) (begin (g$increment-rib-frequency!$9279$1HvE18 g$rib$9874$1HvE18 g$i$9877$1HvE18) g$label$9879$1HvE18))) (vector-ref (g$rib-label*$9269$1HvE18 g$rib$9874$1HvE18) g$i$9877$1HvE18)) (g$f$9876$1HvE18 (+ g$i$9877$1HvE18 '1) g$j$9878$1HvE18))))))) g$f$9876$1HvE18) '0 (vector-length g$sym*$9875$1HvE18)))) (g$rib-sym*$9267$1HvE18 g$rib$9874$1HvE18)) ((letrec ((g$f$9880$1HvE18 (case-lambda ((g$sym*$9881$1HvE18 g$mark**$9882$1HvE18 g$label*$9883$1HvE18) (if (null? g$sym*$9881$1HvE18) (g$search$9871$1HvE18 (cdr g$subst*$9872$1HvE18) g$mark*$9873$1HvE18) (if (if (eq? (car g$sym*$9881$1HvE18) g$sym$9870$1HvE18) (begin '#f (g$same-marks?$9314$1HvE18 (car g$mark**$9882$1HvE18) g$mark*$9873$1HvE18)) '#f) (car g$label*$9883$1HvE18) (g$f$9880$1HvE18 (cdr g$sym*$9881$1HvE18) (cdr g$mark**$9882$1HvE18) (cdr g$label*$9883$1HvE18)))))))) g$f$9880$1HvE18) (g$rib-sym*$9267$1HvE18 g$rib$9874$1HvE18) (g$rib-mark**$9268$1HvE18 g$rib$9874$1HvE18) (g$rib-label*$9269$1HvE18 g$rib$9874$1HvE18))))) (car g$subst*$9872$1HvE18)))))))) g$search$9871$1HvE18) (g$stx-subst*$9288$1HvE18 g$id$9869$1HvE18) (g$stx-mark*$9287$1HvE18 g$id$9869$1HvE18)))) (g$id->sym$9313$1HvE18 g$id$9869$1HvE18))))) (g$label->binding$9326$1HvE18 g$label->binding$15630$1HvE18 (case-lambda ((g$x$9884$1HvE18 g$r$9885$1HvE18) ((case-lambda ((g$t$9886$1HvE18) (if g$t$9886$1HvE18 ((case-lambda ((g$b$9887$1HvE18) (if (if (pair? g$b$9887$1HvE18) (begin '#f (eq? (car g$b$9887$1HvE18) '$core-rtd)) '#f) (cons '$rtd (map g$bless$9557$1HvE18 (cdr g$b$9887$1HvE18))) (if (if (pair? g$b$9887$1HvE18) (begin '#f (eq? (car g$b$9887$1HvE18) 'global-rtd)) '#f) ((case-lambda ((g$lib$9888$1HvE18 g$loc$9889$1HvE18) (cons '$rtd (symbol-value g$loc$9889$1HvE18)))) (g$cadr$7545$1HvE18 g$b$9887$1HvE18) (g$cddr$7547$1HvE18 g$b$9887$1HvE18)) g$b$9887$1HvE18)))) g$t$9886$1HvE18) ((case-lambda ((g$t$9890$1HvE18) (if g$t$9890$1HvE18 (cdr g$t$9890$1HvE18) ((case-lambda ((g$t$9891$1HvE18) (if g$t$9891$1HvE18 ((case-lambda ((g$env$9892$1HvE18) ((case-lambda ((g$t$9893$1HvE18) (if g$t$9893$1HvE18 ((case-lambda ((g$p$9894$1HvE18) (g$cons*$7967$1HvE18 'lexical (cdr g$p$9894$1HvE18) '#f))) g$t$9893$1HvE18) '(displaced-lexical . #f)))) (assq g$x$9884$1HvE18 (g$interaction-env-locs$9669$1HvE18 g$env$9892$1HvE18))))) g$t$9891$1HvE18) '(displaced-lexical . #f)))) (g$top-level-context$9701$1HvE18))))) (assq g$x$9884$1HvE18 g$r$9885$1HvE18))))) (g$imported-label->binding$9127$1HvE18 g$x$9884$1HvE18))))) (g$make-binding$9327$1HvE18 g$make-binding$15631$1HvE18 cons) (g$binding-type$9328$1HvE18 g$binding-type$15632$1HvE18 car) (g$binding-value$9329$1HvE18 g$binding-value$15633$1HvE18 cdr) (g$raise-unbound-error$9330$1HvE18 g$raise-unbound-error$15634$1HvE18 (case-lambda ((g$id$9895$1HvE18) (g$syntax-violation*$9694$1HvE18 '#f '"unbound identifier" g$id$9895$1HvE18 (g$make-undefined-violation$8301$1HvE18))))) (g$syntax-type$9331$1HvE18 g$syntax-type$15635$1HvE18 (case-lambda ((g$e$9896$1HvE18 g$r$9897$1HvE18) (if (g$id?$9312$1HvE18 g$e$9896$1HvE18) ((case-lambda ((g$id$9898$1HvE18) ((case-lambda ((g$label$9899$1HvE18) ((case-lambda ((g$b$9900$1HvE18) ((case-lambda ((g$type$9901$1HvE18) ((case-lambda (() (begin (if g$label$9899$1HvE18 (void) (g$raise-unbound-error$9330$1HvE18 g$id$9898$1HvE18)) ((case-lambda ((g$t$9902$1HvE18) (if (memv g$t$9902$1HvE18 '(lexical core-prim macro macro! global local-macro local-macro! global-macro global-macro! displaced-lexical syntax import $module $core-rtd library mutable)) (values g$type$9901$1HvE18 (g$binding-value$9329$1HvE18 g$b$9900$1HvE18) g$id$9898$1HvE18) (values 'other '#f '#f)))) g$type$9901$1HvE18))))))) (g$binding-type$9328$1HvE18 g$b$9900$1HvE18)))) (g$label->binding$9326$1HvE18 g$label$9899$1HvE18 g$r$9897$1HvE18)))) (g$id->label$9324$1HvE18 g$id$9898$1HvE18)))) g$e$9896$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$e$9896$1HvE18) ((case-lambda ((g$id$9903$1HvE18) (if (g$id?$9312$1HvE18 g$id$9903$1HvE18) ((case-lambda ((g$label$9904$1HvE18) ((case-lambda ((g$b$9905$1HvE18) ((case-lambda ((g$type$9906$1HvE18) ((case-lambda (() (begin (if g$label$9904$1HvE18 (void) (g$raise-unbound-error$9330$1HvE18 g$id$9903$1HvE18)) ((case-lambda ((g$t$9907$1HvE18) (if (memv g$t$9907$1HvE18 '(define define-syntax core-macro begin macro macro! local-macro local-macro! global-macro global-macro! module library set! let-syntax letrec-syntax import $core-rtd)) (values g$type$9906$1HvE18 (g$binding-value$9329$1HvE18 g$b$9905$1HvE18) g$id$9903$1HvE18) (values 'call '#f '#f)))) g$type$9906$1HvE18))))))) (g$binding-type$9328$1HvE18 g$b$9905$1HvE18)))) (g$label->binding$9326$1HvE18 g$label$9904$1HvE18 g$r$9897$1HvE18)))) (g$id->label$9324$1HvE18 g$id$9903$1HvE18)) (values 'call '#f '#f)))) (g$syntax-car$9309$1HvE18 g$e$9896$1HvE18)) ((case-lambda ((g$d$9908$1HvE18) (if (g$self-evaluating?$9320$1HvE18 g$d$9908$1HvE18) (values 'constant g$d$9908$1HvE18 '#f) (values 'other '#f '#f)))) (g$stx->datum$9323$1HvE18 g$e$9896$1HvE18))))))) (g$sanitize-binding$9339$1HvE18 g$sanitize-binding$15636$1HvE18 (case-lambda ((g$x$9909$1HvE18 g$src$9910$1HvE18) (if (procedure? g$x$9909$1HvE18) (g$cons*$7967$1HvE18 'local-macro g$x$9909$1HvE18 g$src$9910$1HvE18) (if (if (pair? g$x$9909$1HvE18) (if (eq? (car g$x$9909$1HvE18) 'macro!) (begin '#f (procedure? (cdr g$x$9909$1HvE18))) '#f) '#f) (g$cons*$7967$1HvE18 'local-macro! (cdr g$x$9909$1HvE18) g$src$9910$1HvE18) (if (if (pair? g$x$9909$1HvE18) (begin '#f (eq? (car g$x$9909$1HvE18) '$rtd)) '#f) g$x$9909$1HvE18 (assertion-violation 'expand '"invalid transformer" g$x$9909$1HvE18))))))) (g$make-variable-transformer$9340$1HvE18 g$make-variable-transformer$15637$1HvE18 (case-lambda ((g$x$9911$1HvE18) (if (procedure? g$x$9911$1HvE18) (cons 'macro! g$x$9911$1HvE18) (assertion-violation 'make-variable-transformer '"not a procedure" g$x$9911$1HvE18))))) (g$make-eval-transformer$9341$1HvE18 g$make-eval-transformer$15638$1HvE18 (case-lambda ((g$x$9912$1HvE18) (g$sanitize-binding$9339$1HvE18 (eval-core (g$expanded->core$8840$1HvE18 g$x$9912$1HvE18)) g$x$9912$1HvE18)))) (g$parse-define$9534$1HvE18 g$parse-define$15639$1HvE18 (case-lambda ((g$x$9913$1HvE18) ((case-lambda ((g$t$9914$1HvE18) ((case-lambda ((g$ls/false$9915$1HvE18) (if (if g$ls/false$9915$1HvE18 (begin '#f (apply (case-lambda ((g$id$9916$1HvE18 g$fmls$9917$1HvE18 g$b$9918$1HvE18 g$b*$9919$1HvE18) (g$id?$9312$1HvE18 g$id$9916$1HvE18))) g$ls/false$9915$1HvE18)) '#f) (apply (case-lambda ((g$id$9920$1HvE18 g$fmls$9921$1HvE18 g$b$9922$1HvE18 g$b*$9923$1HvE18) (begin (g$verify-formals$9609$1HvE18 g$fmls$9921$1HvE18 g$x$9913$1HvE18) (values g$id$9920$1HvE18 (cons 'defun (cons g$fmls$9921$1HvE18 (cons g$b$9922$1HvE18 g$b*$9923$1HvE18))))))) g$ls/false$9915$1HvE18) ((case-lambda ((g$t$9924$1HvE18) ((case-lambda ((g$ls/false$9925$1HvE18) (if (if g$ls/false$9925$1HvE18 (begin '#f (apply (case-lambda ((g$id$9926$1HvE18 g$val$9927$1HvE18) (g$id?$9312$1HvE18 g$id$9926$1HvE18))) g$ls/false$9925$1HvE18)) '#f) (apply (case-lambda ((g$id$9928$1HvE18 g$val$9929$1HvE18) (values g$id$9928$1HvE18 (cons 'expr g$val$9929$1HvE18)))) g$ls/false$9925$1HvE18) ((case-lambda ((g$t$9930$1HvE18) ((case-lambda ((g$ls/false$9931$1HvE18) (if (if g$ls/false$9931$1HvE18 (begin '#f (apply (case-lambda ((g$id$9932$1HvE18) (g$id?$9312$1HvE18 g$id$9932$1HvE18))) g$ls/false$9931$1HvE18)) '#f) (apply (case-lambda ((g$id$9933$1HvE18) (values g$id$9933$1HvE18 (cons 'expr (g$bless$9557$1HvE18 '(void)))))) g$ls/false$9931$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$9930$1HvE18)))) ((case-lambda ((g$x$9934$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9934$1HvE18) (begin '#f ((case-lambda ((g$q$9935$1HvE18) (if g$q$9935$1HvE18 (begin '#f ((case-lambda ((g$r$9936$1HvE18) (if g$r$9936$1HvE18 (begin '#f (append g$q$9935$1HvE18 g$r$9936$1HvE18)) '#f))) ((case-lambda ((g$x$9937$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9937$1HvE18) (begin '#f ((case-lambda ((g$q$9938$1HvE18) (if g$q$9938$1HvE18 (begin '#f ((case-lambda ((g$r$9939$1HvE18) (if g$r$9939$1HvE18 (begin '#f (append g$q$9938$1HvE18 g$r$9939$1HvE18)) '#f))) ((case-lambda ((g$x$9940$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$9940$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$9937$1HvE18)))) '#f))) ((case-lambda ((g$x$9941$1HvE18) (list g$x$9941$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$9937$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$9934$1HvE18)))) '#f))) ((case-lambda ((g$x$9942$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$9934$1HvE18)))) '#f))) g$t$9930$1HvE18)))) g$t$9924$1HvE18)))) ((case-lambda ((g$x$9943$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9943$1HvE18) (begin '#f ((case-lambda ((g$q$9944$1HvE18) (if g$q$9944$1HvE18 (begin '#f ((case-lambda ((g$r$9945$1HvE18) (if g$r$9945$1HvE18 (begin '#f (append g$q$9944$1HvE18 g$r$9945$1HvE18)) '#f))) ((case-lambda ((g$x$9946$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9946$1HvE18) (begin '#f ((case-lambda ((g$q$9947$1HvE18) (if g$q$9947$1HvE18 (begin '#f ((case-lambda ((g$r$9948$1HvE18) (if g$r$9948$1HvE18 (begin '#f (append g$q$9947$1HvE18 g$r$9948$1HvE18)) '#f))) ((case-lambda ((g$x$9949$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9949$1HvE18) (begin '#f ((case-lambda ((g$q$9950$1HvE18) (if g$q$9950$1HvE18 (begin '#f ((case-lambda ((g$r$9951$1HvE18) (if g$r$9951$1HvE18 (begin '#f (append g$q$9950$1HvE18 g$r$9951$1HvE18)) '#f))) ((case-lambda ((g$x$9952$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$9952$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$9949$1HvE18)))) '#f))) ((case-lambda ((g$x$9953$1HvE18) (list g$x$9953$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$9949$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$9946$1HvE18)))) '#f))) ((case-lambda ((g$x$9954$1HvE18) (list g$x$9954$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$9946$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$9943$1HvE18)))) '#f))) ((case-lambda ((g$x$9955$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$9943$1HvE18)))) '#f))) g$t$9924$1HvE18)))) g$t$9914$1HvE18)))) ((case-lambda ((g$x$9956$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9956$1HvE18) (begin '#f ((case-lambda ((g$q$9957$1HvE18) (if g$q$9957$1HvE18 (begin '#f ((case-lambda ((g$r$9958$1HvE18) (if g$r$9958$1HvE18 (begin '#f (append g$q$9957$1HvE18 g$r$9958$1HvE18)) '#f))) ((case-lambda ((g$x$9959$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9959$1HvE18) (begin '#f ((case-lambda ((g$q$9960$1HvE18) (if g$q$9960$1HvE18 (begin '#f ((case-lambda ((g$r$9961$1HvE18) (if g$r$9961$1HvE18 (begin '#f (append g$q$9960$1HvE18 g$r$9961$1HvE18)) '#f))) ((case-lambda ((g$x$9962$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9962$1HvE18) (begin '#f ((case-lambda ((g$q$9963$1HvE18) (if g$q$9963$1HvE18 (begin '#f ((case-lambda ((g$r$9964$1HvE18) (if g$r$9964$1HvE18 (begin '#f (append g$q$9963$1HvE18 g$r$9964$1HvE18)) '#f))) ((letrec ((g$f$9965$1HvE18 (case-lambda ((g$x$9966$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9966$1HvE18) ((case-lambda ((g$cars/f$9967$1HvE18) (if g$cars/f$9967$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$9968$1HvE18) (if g$cdrs/f$9968$1HvE18 (begin '#f (map cons g$cars/f$9967$1HvE18 g$cdrs/f$9968$1HvE18)) '#f))) (g$f$9965$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$9966$1HvE18)))) '#f))) ((case-lambda ((g$x$9969$1HvE18) (list g$x$9969$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$9966$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$9966$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$9965$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$9962$1HvE18)))) '#f))) ((case-lambda ((g$x$9970$1HvE18) (list g$x$9970$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$9962$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$9959$1HvE18)))) '#f))) ((case-lambda ((g$x$9971$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9971$1HvE18) (begin '#f ((case-lambda ((g$q$9972$1HvE18) (if g$q$9972$1HvE18 (begin '#f ((case-lambda ((g$r$9973$1HvE18) (if g$r$9973$1HvE18 (begin '#f (append g$q$9972$1HvE18 g$r$9973$1HvE18)) '#f))) ((case-lambda ((g$x$9974$1HvE18) (list g$x$9974$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$9971$1HvE18)))) '#f))) ((case-lambda ((g$x$9975$1HvE18) (list g$x$9975$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$9971$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$9959$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$9956$1HvE18)))) '#f))) ((case-lambda ((g$x$9976$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$9956$1HvE18)))) '#f))) g$t$9914$1HvE18)))) g$x$9913$1HvE18)))) (g$parse-define-syntax$9535$1HvE18 g$parse-define-syntax$15640$1HvE18 (case-lambda ((g$x$9977$1HvE18) ((case-lambda ((g$t$9978$1HvE18) ((case-lambda ((g$ls/false$9979$1HvE18) (if (if g$ls/false$9979$1HvE18 (begin '#f (apply (case-lambda ((g$id$9980$1HvE18 g$val$9981$1HvE18) (g$id?$9312$1HvE18 g$id$9980$1HvE18))) g$ls/false$9979$1HvE18)) '#f) (apply (case-lambda ((g$id$9982$1HvE18 g$val$9983$1HvE18) (values g$id$9982$1HvE18 g$val$9983$1HvE18))) g$ls/false$9979$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$9978$1HvE18)))) ((case-lambda ((g$x$9984$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9984$1HvE18) (begin '#f ((case-lambda ((g$q$9985$1HvE18) (if g$q$9985$1HvE18 (begin '#f ((case-lambda ((g$r$9986$1HvE18) (if g$r$9986$1HvE18 (begin '#f (append g$q$9985$1HvE18 g$r$9986$1HvE18)) '#f))) ((case-lambda ((g$x$9987$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9987$1HvE18) (begin '#f ((case-lambda ((g$q$9988$1HvE18) (if g$q$9988$1HvE18 (begin '#f ((case-lambda ((g$r$9989$1HvE18) (if g$r$9989$1HvE18 (begin '#f (append g$q$9988$1HvE18 g$r$9989$1HvE18)) '#f))) ((case-lambda ((g$x$9990$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$9990$1HvE18) (begin '#f ((case-lambda ((g$q$9991$1HvE18) (if g$q$9991$1HvE18 (begin '#f ((case-lambda ((g$r$9992$1HvE18) (if g$r$9992$1HvE18 (begin '#f (append g$q$9991$1HvE18 g$r$9992$1HvE18)) '#f))) ((case-lambda ((g$x$9993$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$9993$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$9990$1HvE18)))) '#f))) ((case-lambda ((g$x$9994$1HvE18) (list g$x$9994$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$9990$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$9987$1HvE18)))) '#f))) ((case-lambda ((g$x$9995$1HvE18) (list g$x$9995$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$9987$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$9984$1HvE18)))) '#f))) ((case-lambda ((g$x$9996$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$9984$1HvE18)))) '#f))) g$t$9978$1HvE18)))) g$x$9977$1HvE18)))) (g$scheme-stx-hashtable$9536$1HvE18 g$scheme-stx-hashtable$15641$1HvE18 (g$make-eq-hashtable$7809$1HvE18)) (g$scheme-stx$9537$1HvE18 g$scheme-stx$15642$1HvE18 (case-lambda ((g$sym$9997$1HvE18) ((case-lambda ((g$t$9998$1HvE18) (if g$t$9998$1HvE18 g$t$9998$1HvE18 (begin '#f ((case-lambda ((g$subst$9999$1HvE18) ((case-lambda ((g$stx$10000$1HvE18) ((case-lambda ((g$stx$10001$1HvE18) ((case-lambda (() (begin (g$hashtable-set!$7813$1HvE18 g$scheme-stx-hashtable$9536$1HvE18 g$sym$9997$1HvE18 g$stx$10001$1HvE18) g$stx$10001$1HvE18)))))) ((case-lambda ((g$t$10002$1HvE18) (if g$t$10002$1HvE18 ((case-lambda ((g$x$10003$1HvE18) ((case-lambda ((g$name$10004$1HvE18 g$label$10005$1HvE18) (g$add-subst$9302$1HvE18 (g$make-rib$9266$1HvE18 (list g$name$10004$1HvE18) (list g$top-mark*$9254$1HvE18) (list g$label$10005$1HvE18) '#f) g$stx$10000$1HvE18))) (car g$x$10003$1HvE18) (cdr g$x$10003$1HvE18)))) g$t$10002$1HvE18) g$stx$10000$1HvE18))) (assq g$sym$9997$1HvE18 g$subst$9999$1HvE18))))) (g$mkstx$9300$1HvE18 g$sym$9997$1HvE18 g$top-mark*$9254$1HvE18 '() '())))) (g$library-subst$9085$1HvE18 (g$find-library-by-name$9121$1HvE18 '(psyntax system $all)))))))) (g$hashtable-ref$7812$1HvE18 g$scheme-stx-hashtable$9536$1HvE18 g$sym$9997$1HvE18 '#f))))) (g$lexical-var$9538$1HvE18 g$lexical-var$15643$1HvE18 car) (g$lexical-mutable?$9539$1HvE18 g$lexical-mutable?$15644$1HvE18 cdr) (g$set-lexical-mutable!$9540$1HvE18 g$set-lexical-mutable!$15645$1HvE18 set-cdr!) (g$add-lexical$9541$1HvE18 g$add-lexical$15646$1HvE18 (case-lambda ((g$lab$10006$1HvE18 g$lex$10007$1HvE18 g$r$10008$1HvE18) (cons (g$cons*$7967$1HvE18 g$lab$10006$1HvE18 'lexical g$lex$10007$1HvE18 '#f) g$r$10008$1HvE18)))) (g$add-lexicals$9542$1HvE18 g$add-lexicals$15647$1HvE18 (case-lambda ((g$lab*$10009$1HvE18 g$lex*$10010$1HvE18 g$r$10011$1HvE18) (if (null? g$lab*$10009$1HvE18) g$r$10011$1HvE18 (g$add-lexicals$9542$1HvE18 (cdr g$lab*$10009$1HvE18) (cdr g$lex*$10010$1HvE18) (g$add-lexical$9541$1HvE18 (car g$lab*$10009$1HvE18) (car g$lex*$10010$1HvE18) g$r$10011$1HvE18)))))) (g$letrec-helper$9543$1HvE18 g$letrec-helper$15648$1HvE18 (case-lambda ((g$e$10012$1HvE18 g$r$10013$1HvE18 g$mr$10014$1HvE18 g$build$10015$1HvE18) ((case-lambda ((g$t$10016$1HvE18) ((case-lambda ((g$ls/false$10017$1HvE18) (if (if g$ls/false$10017$1HvE18 (begin '#f (apply (case-lambda ((g$lhs*$10018$1HvE18 g$rhs*$10019$1HvE18 g$b$10020$1HvE18 g$b*$10021$1HvE18) '#t)) g$ls/false$10017$1HvE18)) '#f) (apply (case-lambda ((g$lhs*$10022$1HvE18 g$rhs*$10023$1HvE18 g$b$10024$1HvE18 g$b*$10025$1HvE18) (if (not (g$valid-bound-ids?$9317$1HvE18 g$lhs*$10022$1HvE18)) (g$invalid-fmls-error$9559$1HvE18 g$e$10012$1HvE18 g$lhs*$10022$1HvE18) ((case-lambda ((g$lex*$10026$1HvE18 g$lab*$10027$1HvE18) ((case-lambda ((g$rib$10028$1HvE18 g$r$10029$1HvE18) ((case-lambda ((g$body$10030$1HvE18 g$rhs*$10031$1HvE18) (g$build$10015$1HvE18 '#f g$lex*$10026$1HvE18 g$rhs*$10031$1HvE18 g$body$10030$1HvE18))) (g$chi-internal$9618$1HvE18 (g$add-subst$9302$1HvE18 g$rib$10028$1HvE18 (cons g$b$10024$1HvE18 g$b*$10025$1HvE18)) g$r$10029$1HvE18 g$mr$10014$1HvE18) (g$chi-expr*$9605$1HvE18 (map (case-lambda ((g$x$10032$1HvE18) (g$add-subst$9302$1HvE18 g$rib$10028$1HvE18 g$x$10032$1HvE18))) g$rhs*$10023$1HvE18) g$r$10029$1HvE18 g$mr$10014$1HvE18)))) (g$make-full-rib$9280$1HvE18 g$lhs*$10022$1HvE18 g$lab*$10027$1HvE18) (g$add-lexicals$9542$1HvE18 g$lab*$10027$1HvE18 g$lex*$10026$1HvE18 g$r$10013$1HvE18)))) (map g$gen-lexical$9256$1HvE18 g$lhs*$10022$1HvE18) (map g$gen-label$9258$1HvE18 g$lhs*$10022$1HvE18))))) g$ls/false$10017$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10016$1HvE18)))) ((case-lambda ((g$x$10033$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10033$1HvE18) (begin '#f ((case-lambda ((g$q$10034$1HvE18) (if g$q$10034$1HvE18 (begin '#f ((case-lambda ((g$r$10035$1HvE18) (if g$r$10035$1HvE18 (begin '#f (append g$q$10034$1HvE18 g$r$10035$1HvE18)) '#f))) ((case-lambda ((g$x$10036$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10036$1HvE18) (begin '#f ((case-lambda ((g$q$10037$1HvE18) (if g$q$10037$1HvE18 (begin '#f ((case-lambda ((g$r$10038$1HvE18) (if g$r$10038$1HvE18 (begin '#f (append g$q$10037$1HvE18 g$r$10038$1HvE18)) '#f))) ((case-lambda ((g$x$10039$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10039$1HvE18) (begin '#f ((case-lambda ((g$q$10040$1HvE18) (if g$q$10040$1HvE18 (begin '#f ((case-lambda ((g$r$10041$1HvE18) (if g$r$10041$1HvE18 (begin '#f (append g$q$10040$1HvE18 g$r$10041$1HvE18)) '#f))) ((letrec ((g$f$10042$1HvE18 (case-lambda ((g$x$10043$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10043$1HvE18) ((case-lambda ((g$cars/f$10044$1HvE18) (if g$cars/f$10044$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10045$1HvE18) (if g$cdrs/f$10045$1HvE18 (begin '#f (map cons g$cars/f$10044$1HvE18 g$cdrs/f$10045$1HvE18)) '#f))) (g$f$10042$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10043$1HvE18)))) '#f))) ((case-lambda ((g$x$10046$1HvE18) (list g$x$10046$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10043$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10043$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10042$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10039$1HvE18)))) '#f))) ((case-lambda ((g$x$10047$1HvE18) (list g$x$10047$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10039$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10036$1HvE18)))) '#f))) ((letrec ((g$f$10048$1HvE18 (case-lambda ((g$x$10049$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10049$1HvE18) ((case-lambda ((g$cars/f$10050$1HvE18) (if g$cars/f$10050$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10051$1HvE18) (if g$cdrs/f$10051$1HvE18 (begin '#f (map cons g$cars/f$10050$1HvE18 g$cdrs/f$10051$1HvE18)) '#f))) (g$f$10048$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10049$1HvE18)))) '#f))) ((case-lambda ((g$x$10052$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10052$1HvE18) (begin '#f ((case-lambda ((g$q$10053$1HvE18) (if g$q$10053$1HvE18 (begin '#f ((case-lambda ((g$r$10054$1HvE18) (if g$r$10054$1HvE18 (begin '#f (append g$q$10053$1HvE18 g$r$10054$1HvE18)) '#f))) ((case-lambda ((g$x$10055$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10055$1HvE18) (begin '#f ((case-lambda ((g$q$10056$1HvE18) (if g$q$10056$1HvE18 (begin '#f ((case-lambda ((g$r$10057$1HvE18) (if g$r$10057$1HvE18 (begin '#f (append g$q$10056$1HvE18 g$r$10057$1HvE18)) '#f))) ((case-lambda ((g$x$10058$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10058$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10055$1HvE18)))) '#f))) ((case-lambda ((g$x$10059$1HvE18) (list g$x$10059$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10055$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10052$1HvE18)))) '#f))) ((case-lambda ((g$x$10060$1HvE18) (list g$x$10060$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10052$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$10049$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10049$1HvE18) (list (begin 'lhs* '()) (begin 'rhs* '())) '#f)))))) g$f$10048$1HvE18) (g$syntax-car$9309$1HvE18 g$x$10036$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10033$1HvE18)))) '#f))) ((case-lambda ((g$x$10061$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10033$1HvE18)))) '#f))) g$t$10016$1HvE18)))) g$e$10012$1HvE18)))) (g$letrec-transformer$9544$1HvE18 g$letrec-transformer$15649$1HvE18 (case-lambda ((g$e$10062$1HvE18 g$r$10063$1HvE18 g$mr$10064$1HvE18) (g$letrec-helper$9543$1HvE18 g$e$10062$1HvE18 g$r$10063$1HvE18 g$mr$10064$1HvE18 g$build-letrec$9248$1HvE18)))) (g$letrec*-transformer$9545$1HvE18 g$letrec*-transformer$15650$1HvE18 (case-lambda ((g$e$10065$1HvE18 g$r$10066$1HvE18 g$mr$10067$1HvE18) (g$letrec-helper$9543$1HvE18 g$e$10065$1HvE18 g$r$10066$1HvE18 g$mr$10067$1HvE18 g$build-letrec*$9249$1HvE18)))) (g$fluid-let-syntax-transformer$9546$1HvE18 g$fluid-let-syntax-transformer$15651$1HvE18 (case-lambda ((g$e$10068$1HvE18 g$r$10069$1HvE18 g$mr$10070$1HvE18) (letrec* ((g$lookup$10071$1HvE18 (case-lambda ((g$x$10114$1HvE18) ((case-lambda ((g$t$10115$1HvE18) (if g$t$10115$1HvE18 g$t$10115$1HvE18 (begin '#f (g$syntax-violation$9695$1HvE18 '#f '"unbound identifier" g$e$10068$1HvE18 g$x$10114$1HvE18))))) (g$id->label$9324$1HvE18 g$x$10114$1HvE18)))))) ((case-lambda ((g$t$10072$1HvE18) ((case-lambda ((g$ls/false$10073$1HvE18) (if (if g$ls/false$10073$1HvE18 (begin '#f (apply (case-lambda ((g$lhs*$10074$1HvE18 g$rhs*$10075$1HvE18 g$b$10076$1HvE18 g$b*$10077$1HvE18) '#t)) g$ls/false$10073$1HvE18)) '#f) (apply (case-lambda ((g$lhs*$10078$1HvE18 g$rhs*$10079$1HvE18 g$b$10080$1HvE18 g$b*$10081$1HvE18) (if (not (g$valid-bound-ids?$9317$1HvE18 g$lhs*$10078$1HvE18)) (g$invalid-fmls-error$9559$1HvE18 g$e$10068$1HvE18 g$lhs*$10078$1HvE18) ((case-lambda ((g$lab*$10082$1HvE18 g$rhs*$10083$1HvE18) (g$chi-internal$9618$1HvE18 (cons g$b$10080$1HvE18 g$b*$10081$1HvE18) (append (map cons g$lab*$10082$1HvE18 g$rhs*$10083$1HvE18) g$r$10069$1HvE18) (append (map cons g$lab*$10082$1HvE18 g$rhs*$10083$1HvE18) g$mr$10070$1HvE18)))) (map g$lookup$10071$1HvE18 g$lhs*$10078$1HvE18) (map (case-lambda ((g$x$10084$1HvE18) (g$make-eval-transformer$9341$1HvE18 (g$expand-transformer$9634$1HvE18 g$x$10084$1HvE18 g$mr$10070$1HvE18)))) g$rhs*$10079$1HvE18))))) g$ls/false$10073$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10072$1HvE18)))) ((case-lambda ((g$x$10085$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10085$1HvE18) (begin '#f ((case-lambda ((g$q$10086$1HvE18) (if g$q$10086$1HvE18 (begin '#f ((case-lambda ((g$r$10087$1HvE18) (if g$r$10087$1HvE18 (begin '#f (append g$q$10086$1HvE18 g$r$10087$1HvE18)) '#f))) ((case-lambda ((g$x$10088$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10088$1HvE18) (begin '#f ((case-lambda ((g$q$10089$1HvE18) (if g$q$10089$1HvE18 (begin '#f ((case-lambda ((g$r$10090$1HvE18) (if g$r$10090$1HvE18 (begin '#f (append g$q$10089$1HvE18 g$r$10090$1HvE18)) '#f))) ((case-lambda ((g$x$10091$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10091$1HvE18) (begin '#f ((case-lambda ((g$q$10092$1HvE18) (if g$q$10092$1HvE18 (begin '#f ((case-lambda ((g$r$10093$1HvE18) (if g$r$10093$1HvE18 (begin '#f (append g$q$10092$1HvE18 g$r$10093$1HvE18)) '#f))) ((letrec ((g$f$10094$1HvE18 (case-lambda ((g$x$10095$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10095$1HvE18) ((case-lambda ((g$cars/f$10096$1HvE18) (if g$cars/f$10096$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10097$1HvE18) (if g$cdrs/f$10097$1HvE18 (begin '#f (map cons g$cars/f$10096$1HvE18 g$cdrs/f$10097$1HvE18)) '#f))) (g$f$10094$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10095$1HvE18)))) '#f))) ((case-lambda ((g$x$10098$1HvE18) (list g$x$10098$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10095$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10095$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10094$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10091$1HvE18)))) '#f))) ((case-lambda ((g$x$10099$1HvE18) (list g$x$10099$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10091$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10088$1HvE18)))) '#f))) ((letrec ((g$f$10100$1HvE18 (case-lambda ((g$x$10101$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10101$1HvE18) ((case-lambda ((g$cars/f$10102$1HvE18) (if g$cars/f$10102$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10103$1HvE18) (if g$cdrs/f$10103$1HvE18 (begin '#f (map cons g$cars/f$10102$1HvE18 g$cdrs/f$10103$1HvE18)) '#f))) (g$f$10100$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10101$1HvE18)))) '#f))) ((case-lambda ((g$x$10104$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10104$1HvE18) (begin '#f ((case-lambda ((g$q$10105$1HvE18) (if g$q$10105$1HvE18 (begin '#f ((case-lambda ((g$r$10106$1HvE18) (if g$r$10106$1HvE18 (begin '#f (append g$q$10105$1HvE18 g$r$10106$1HvE18)) '#f))) ((case-lambda ((g$x$10107$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10107$1HvE18) (begin '#f ((case-lambda ((g$q$10108$1HvE18) (if g$q$10108$1HvE18 (begin '#f ((case-lambda ((g$r$10109$1HvE18) (if g$r$10109$1HvE18 (begin '#f (append g$q$10108$1HvE18 g$r$10109$1HvE18)) '#f))) ((case-lambda ((g$x$10110$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10110$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10107$1HvE18)))) '#f))) ((case-lambda ((g$x$10111$1HvE18) (list g$x$10111$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10107$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10104$1HvE18)))) '#f))) ((case-lambda ((g$x$10112$1HvE18) (list g$x$10112$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10104$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$10101$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10101$1HvE18) (list (begin 'lhs* '()) (begin 'rhs* '())) '#f)))))) g$f$10100$1HvE18) (g$syntax-car$9309$1HvE18 g$x$10088$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10085$1HvE18)))) '#f))) ((case-lambda ((g$x$10113$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10085$1HvE18)))) '#f))) g$t$10072$1HvE18)))) g$e$10068$1HvE18))))) (g$type-descriptor-transformer$9547$1HvE18 g$type-descriptor-transformer$15652$1HvE18 (case-lambda ((g$e$10116$1HvE18 g$r$10117$1HvE18 g$mr$10118$1HvE18) ((case-lambda ((g$t$10119$1HvE18) ((case-lambda ((g$ls/false$10120$1HvE18) (if (if g$ls/false$10120$1HvE18 (begin '#f (apply (case-lambda ((g$id$10121$1HvE18) (g$id?$9312$1HvE18 g$id$10121$1HvE18))) g$ls/false$10120$1HvE18)) '#f) (apply (case-lambda ((g$id$10122$1HvE18) ((case-lambda ((g$lab$10123$1HvE18) ((case-lambda ((g$b$10124$1HvE18) ((case-lambda ((g$type$10125$1HvE18) ((case-lambda (() (begin (if g$lab$10123$1HvE18 (void) (g$raise-unbound-error$9330$1HvE18 g$id$10122$1HvE18)) (if (if (eq? g$type$10125$1HvE18 '$rtd) (begin '#f (not (list? (g$binding-value$9329$1HvE18 g$b$10124$1HvE18)))) '#f) (void) (g$syntax-violation$9695$1HvE18 '#f '"not a record type" g$e$10116$1HvE18)) (list 'quote (g$binding-value$9329$1HvE18 g$b$10124$1HvE18)))))))) (g$binding-type$9328$1HvE18 g$b$10124$1HvE18)))) (g$label->binding$9326$1HvE18 g$lab$10123$1HvE18 g$r$10117$1HvE18)))) (g$id->label$9324$1HvE18 g$id$10122$1HvE18)))) g$ls/false$10120$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10119$1HvE18)))) ((case-lambda ((g$x$10126$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10126$1HvE18) (begin '#f ((case-lambda ((g$q$10127$1HvE18) (if g$q$10127$1HvE18 (begin '#f ((case-lambda ((g$r$10128$1HvE18) (if g$r$10128$1HvE18 (begin '#f (append g$q$10127$1HvE18 g$r$10128$1HvE18)) '#f))) ((case-lambda ((g$x$10129$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10129$1HvE18) (begin '#f ((case-lambda ((g$q$10130$1HvE18) (if g$q$10130$1HvE18 (begin '#f ((case-lambda ((g$r$10131$1HvE18) (if g$r$10131$1HvE18 (begin '#f (append g$q$10130$1HvE18 g$r$10131$1HvE18)) '#f))) ((case-lambda ((g$x$10132$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10132$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10129$1HvE18)))) '#f))) ((case-lambda ((g$x$10133$1HvE18) (list g$x$10133$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10129$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10126$1HvE18)))) '#f))) ((case-lambda ((g$x$10134$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10126$1HvE18)))) '#f))) g$t$10119$1HvE18)))) g$e$10116$1HvE18)))) (g$record-type-descriptor-transformer$9548$1HvE18 g$record-type-descriptor-transformer$15653$1HvE18 (case-lambda ((g$e$10135$1HvE18 g$r$10136$1HvE18 g$mr$10137$1HvE18) ((case-lambda ((g$t$10138$1HvE18) ((case-lambda ((g$ls/false$10139$1HvE18) (if (if g$ls/false$10139$1HvE18 (begin '#f (apply (case-lambda ((g$id$10140$1HvE18) (g$id?$9312$1HvE18 g$id$10140$1HvE18))) g$ls/false$10139$1HvE18)) '#f) (apply (case-lambda ((g$id$10141$1HvE18) ((case-lambda ((g$lab$10142$1HvE18) ((case-lambda ((g$b$10143$1HvE18) ((case-lambda ((g$type$10144$1HvE18) ((case-lambda (() (begin (if g$lab$10142$1HvE18 (void) (g$raise-unbound-error$9330$1HvE18 g$id$10141$1HvE18)) (if (if (eq? g$type$10144$1HvE18 '$rtd) (begin '#f (list? (g$binding-value$9329$1HvE18 g$b$10143$1HvE18))) '#f) (void) (g$syntax-violation$9695$1HvE18 '#f '"not a record type" g$e$10135$1HvE18)) (g$chi-expr$9607$1HvE18 (car (g$binding-value$9329$1HvE18 g$b$10143$1HvE18)) g$r$10136$1HvE18 g$mr$10137$1HvE18))))))) (g$binding-type$9328$1HvE18 g$b$10143$1HvE18)))) (g$label->binding$9326$1HvE18 g$lab$10142$1HvE18 g$r$10136$1HvE18)))) (g$id->label$9324$1HvE18 g$id$10141$1HvE18)))) g$ls/false$10139$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10138$1HvE18)))) ((case-lambda ((g$x$10145$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10145$1HvE18) (begin '#f ((case-lambda ((g$q$10146$1HvE18) (if g$q$10146$1HvE18 (begin '#f ((case-lambda ((g$r$10147$1HvE18) (if g$r$10147$1HvE18 (begin '#f (append g$q$10146$1HvE18 g$r$10147$1HvE18)) '#f))) ((case-lambda ((g$x$10148$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10148$1HvE18) (begin '#f ((case-lambda ((g$q$10149$1HvE18) (if g$q$10149$1HvE18 (begin '#f ((case-lambda ((g$r$10150$1HvE18) (if g$r$10150$1HvE18 (begin '#f (append g$q$10149$1HvE18 g$r$10150$1HvE18)) '#f))) ((case-lambda ((g$x$10151$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10151$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10148$1HvE18)))) '#f))) ((case-lambda ((g$x$10152$1HvE18) (list g$x$10152$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10148$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10145$1HvE18)))) '#f))) ((case-lambda ((g$x$10153$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10145$1HvE18)))) '#f))) g$t$10138$1HvE18)))) g$e$10135$1HvE18)))) (g$record-constructor-descriptor-transformer$9549$1HvE18 g$record-constructor-descriptor-transformer$15654$1HvE18 (case-lambda ((g$e$10154$1HvE18 g$r$10155$1HvE18 g$mr$10156$1HvE18) ((case-lambda ((g$t$10157$1HvE18) ((case-lambda ((g$ls/false$10158$1HvE18) (if (if g$ls/false$10158$1HvE18 (begin '#f (apply (case-lambda ((g$id$10159$1HvE18) (g$id?$9312$1HvE18 g$id$10159$1HvE18))) g$ls/false$10158$1HvE18)) '#f) (apply (case-lambda ((g$id$10160$1HvE18) ((case-lambda ((g$lab$10161$1HvE18) ((case-lambda ((g$b$10162$1HvE18) ((case-lambda ((g$type$10163$1HvE18) ((case-lambda (() (begin (if g$lab$10161$1HvE18 (void) (g$raise-unbound-error$9330$1HvE18 g$id$10160$1HvE18)) (if (if (eq? g$type$10163$1HvE18 '$rtd) (begin '#f (list? (g$binding-value$9329$1HvE18 g$b$10162$1HvE18))) '#f) (void) (g$syntax-violation$9695$1HvE18 '#f '"invalid type" g$e$10154$1HvE18)) (g$chi-expr$9607$1HvE18 (g$cadr$7545$1HvE18 (g$binding-value$9329$1HvE18 g$b$10162$1HvE18)) g$r$10155$1HvE18 g$mr$10156$1HvE18))))))) (g$binding-type$9328$1HvE18 g$b$10162$1HvE18)))) (g$label->binding$9326$1HvE18 g$lab$10161$1HvE18 g$r$10155$1HvE18)))) (g$id->label$9324$1HvE18 g$id$10160$1HvE18)))) g$ls/false$10158$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10157$1HvE18)))) ((case-lambda ((g$x$10164$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10164$1HvE18) (begin '#f ((case-lambda ((g$q$10165$1HvE18) (if g$q$10165$1HvE18 (begin '#f ((case-lambda ((g$r$10166$1HvE18) (if g$r$10166$1HvE18 (begin '#f (append g$q$10165$1HvE18 g$r$10166$1HvE18)) '#f))) ((case-lambda ((g$x$10167$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10167$1HvE18) (begin '#f ((case-lambda ((g$q$10168$1HvE18) (if g$q$10168$1HvE18 (begin '#f ((case-lambda ((g$r$10169$1HvE18) (if g$r$10169$1HvE18 (begin '#f (append g$q$10168$1HvE18 g$r$10169$1HvE18)) '#f))) ((case-lambda ((g$x$10170$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10170$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10167$1HvE18)))) '#f))) ((case-lambda ((g$x$10171$1HvE18) (list g$x$10171$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10167$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10164$1HvE18)))) '#f))) ((case-lambda ((g$x$10172$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10164$1HvE18)))) '#f))) g$t$10157$1HvE18)))) g$e$10154$1HvE18)))) (g$when-transformer$9550$1HvE18 g$when-transformer$15655$1HvE18 (case-lambda ((g$e$10173$1HvE18 g$r$10174$1HvE18 g$mr$10175$1HvE18) ((case-lambda ((g$t$10176$1HvE18) ((case-lambda ((g$ls/false$10177$1HvE18) (if (if g$ls/false$10177$1HvE18 (begin '#f (apply (case-lambda ((g$test$10178$1HvE18 g$e$10179$1HvE18 g$e*$10180$1HvE18) '#t)) g$ls/false$10177$1HvE18)) '#f) (apply (case-lambda ((g$test$10181$1HvE18 g$e$10182$1HvE18 g$e*$10183$1HvE18) (list 'if (g$chi-expr$9607$1HvE18 g$test$10181$1HvE18 g$r$10174$1HvE18 g$mr$10175$1HvE18) (g$build-sequence$9246$1HvE18 '#f (g$chi-expr*$9605$1HvE18 (cons g$e$10182$1HvE18 g$e*$10183$1HvE18) g$r$10174$1HvE18 g$mr$10175$1HvE18)) (g$build-void$9247$1HvE18)))) g$ls/false$10177$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10176$1HvE18)))) ((case-lambda ((g$x$10184$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10184$1HvE18) (begin '#f ((case-lambda ((g$q$10185$1HvE18) (if g$q$10185$1HvE18 (begin '#f ((case-lambda ((g$r$10186$1HvE18) (if g$r$10186$1HvE18 (begin '#f (append g$q$10185$1HvE18 g$r$10186$1HvE18)) '#f))) ((case-lambda ((g$x$10187$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10187$1HvE18) (begin '#f ((case-lambda ((g$q$10188$1HvE18) (if g$q$10188$1HvE18 (begin '#f ((case-lambda ((g$r$10189$1HvE18) (if g$r$10189$1HvE18 (begin '#f (append g$q$10188$1HvE18 g$r$10189$1HvE18)) '#f))) ((case-lambda ((g$x$10190$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10190$1HvE18) (begin '#f ((case-lambda ((g$q$10191$1HvE18) (if g$q$10191$1HvE18 (begin '#f ((case-lambda ((g$r$10192$1HvE18) (if g$r$10192$1HvE18 (begin '#f (append g$q$10191$1HvE18 g$r$10192$1HvE18)) '#f))) ((letrec ((g$f$10193$1HvE18 (case-lambda ((g$x$10194$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10194$1HvE18) ((case-lambda ((g$cars/f$10195$1HvE18) (if g$cars/f$10195$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10196$1HvE18) (if g$cdrs/f$10196$1HvE18 (begin '#f (map cons g$cars/f$10195$1HvE18 g$cdrs/f$10196$1HvE18)) '#f))) (g$f$10193$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10194$1HvE18)))) '#f))) ((case-lambda ((g$x$10197$1HvE18) (list g$x$10197$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10194$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10194$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$10193$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10190$1HvE18)))) '#f))) ((case-lambda ((g$x$10198$1HvE18) (list g$x$10198$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10190$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10187$1HvE18)))) '#f))) ((case-lambda ((g$x$10199$1HvE18) (list g$x$10199$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10187$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10184$1HvE18)))) '#f))) ((case-lambda ((g$x$10200$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10184$1HvE18)))) '#f))) g$t$10176$1HvE18)))) g$e$10173$1HvE18)))) (g$unless-transformer$9551$1HvE18 g$unless-transformer$15656$1HvE18 (case-lambda ((g$e$10201$1HvE18 g$r$10202$1HvE18 g$mr$10203$1HvE18) ((case-lambda ((g$t$10204$1HvE18) ((case-lambda ((g$ls/false$10205$1HvE18) (if (if g$ls/false$10205$1HvE18 (begin '#f (apply (case-lambda ((g$test$10206$1HvE18 g$e$10207$1HvE18 g$e*$10208$1HvE18) '#t)) g$ls/false$10205$1HvE18)) '#f) (apply (case-lambda ((g$test$10209$1HvE18 g$e$10210$1HvE18 g$e*$10211$1HvE18) (list 'if (g$chi-expr$9607$1HvE18 g$test$10209$1HvE18 g$r$10202$1HvE18 g$mr$10203$1HvE18) (g$build-void$9247$1HvE18) (g$build-sequence$9246$1HvE18 '#f (g$chi-expr*$9605$1HvE18 (cons g$e$10210$1HvE18 g$e*$10211$1HvE18) g$r$10202$1HvE18 g$mr$10203$1HvE18))))) g$ls/false$10205$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10204$1HvE18)))) ((case-lambda ((g$x$10212$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10212$1HvE18) (begin '#f ((case-lambda ((g$q$10213$1HvE18) (if g$q$10213$1HvE18 (begin '#f ((case-lambda ((g$r$10214$1HvE18) (if g$r$10214$1HvE18 (begin '#f (append g$q$10213$1HvE18 g$r$10214$1HvE18)) '#f))) ((case-lambda ((g$x$10215$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10215$1HvE18) (begin '#f ((case-lambda ((g$q$10216$1HvE18) (if g$q$10216$1HvE18 (begin '#f ((case-lambda ((g$r$10217$1HvE18) (if g$r$10217$1HvE18 (begin '#f (append g$q$10216$1HvE18 g$r$10217$1HvE18)) '#f))) ((case-lambda ((g$x$10218$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10218$1HvE18) (begin '#f ((case-lambda ((g$q$10219$1HvE18) (if g$q$10219$1HvE18 (begin '#f ((case-lambda ((g$r$10220$1HvE18) (if g$r$10220$1HvE18 (begin '#f (append g$q$10219$1HvE18 g$r$10220$1HvE18)) '#f))) ((letrec ((g$f$10221$1HvE18 (case-lambda ((g$x$10222$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10222$1HvE18) ((case-lambda ((g$cars/f$10223$1HvE18) (if g$cars/f$10223$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10224$1HvE18) (if g$cdrs/f$10224$1HvE18 (begin '#f (map cons g$cars/f$10223$1HvE18 g$cdrs/f$10224$1HvE18)) '#f))) (g$f$10221$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10222$1HvE18)))) '#f))) ((case-lambda ((g$x$10225$1HvE18) (list g$x$10225$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10222$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10222$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$10221$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10218$1HvE18)))) '#f))) ((case-lambda ((g$x$10226$1HvE18) (list g$x$10226$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10218$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10215$1HvE18)))) '#f))) ((case-lambda ((g$x$10227$1HvE18) (list g$x$10227$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10215$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10212$1HvE18)))) '#f))) ((case-lambda ((g$x$10228$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10212$1HvE18)))) '#f))) g$t$10204$1HvE18)))) g$e$10201$1HvE18)))) (g$if-transformer$9552$1HvE18 g$if-transformer$15657$1HvE18 (case-lambda ((g$e$10229$1HvE18 g$r$10230$1HvE18 g$mr$10231$1HvE18) ((case-lambda ((g$t$10232$1HvE18) ((case-lambda ((g$ls/false$10233$1HvE18) (if (if g$ls/false$10233$1HvE18 (begin '#f (apply (case-lambda ((g$e0$10234$1HvE18 g$e1$10235$1HvE18 g$e2$10236$1HvE18) '#t)) g$ls/false$10233$1HvE18)) '#f) (apply (case-lambda ((g$e0$10237$1HvE18 g$e1$10238$1HvE18 g$e2$10239$1HvE18) (list 'if (g$chi-expr$9607$1HvE18 g$e0$10237$1HvE18 g$r$10230$1HvE18 g$mr$10231$1HvE18) (g$chi-expr$9607$1HvE18 g$e1$10238$1HvE18 g$r$10230$1HvE18 g$mr$10231$1HvE18) (g$chi-expr$9607$1HvE18 g$e2$10239$1HvE18 g$r$10230$1HvE18 g$mr$10231$1HvE18)))) g$ls/false$10233$1HvE18) ((case-lambda ((g$t$10240$1HvE18) ((case-lambda ((g$ls/false$10241$1HvE18) (if (if g$ls/false$10241$1HvE18 (begin '#f (apply (case-lambda ((g$e0$10242$1HvE18 g$e1$10243$1HvE18) '#t)) g$ls/false$10241$1HvE18)) '#f) (apply (case-lambda ((g$e0$10244$1HvE18 g$e1$10245$1HvE18) (list 'if (g$chi-expr$9607$1HvE18 g$e0$10244$1HvE18 g$r$10230$1HvE18 g$mr$10231$1HvE18) (g$chi-expr$9607$1HvE18 g$e1$10245$1HvE18 g$r$10230$1HvE18 g$mr$10231$1HvE18) (g$build-void$9247$1HvE18)))) g$ls/false$10241$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10240$1HvE18)))) ((case-lambda ((g$x$10246$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10246$1HvE18) (begin '#f ((case-lambda ((g$q$10247$1HvE18) (if g$q$10247$1HvE18 (begin '#f ((case-lambda ((g$r$10248$1HvE18) (if g$r$10248$1HvE18 (begin '#f (append g$q$10247$1HvE18 g$r$10248$1HvE18)) '#f))) ((case-lambda ((g$x$10249$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10249$1HvE18) (begin '#f ((case-lambda ((g$q$10250$1HvE18) (if g$q$10250$1HvE18 (begin '#f ((case-lambda ((g$r$10251$1HvE18) (if g$r$10251$1HvE18 (begin '#f (append g$q$10250$1HvE18 g$r$10251$1HvE18)) '#f))) ((case-lambda ((g$x$10252$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10252$1HvE18) (begin '#f ((case-lambda ((g$q$10253$1HvE18) (if g$q$10253$1HvE18 (begin '#f ((case-lambda ((g$r$10254$1HvE18) (if g$r$10254$1HvE18 (begin '#f (append g$q$10253$1HvE18 g$r$10254$1HvE18)) '#f))) ((case-lambda ((g$x$10255$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10255$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10252$1HvE18)))) '#f))) ((case-lambda ((g$x$10256$1HvE18) (list g$x$10256$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10252$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10249$1HvE18)))) '#f))) ((case-lambda ((g$x$10257$1HvE18) (list g$x$10257$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10249$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10246$1HvE18)))) '#f))) ((case-lambda ((g$x$10258$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10246$1HvE18)))) '#f))) g$t$10240$1HvE18)))) g$t$10232$1HvE18)))) ((case-lambda ((g$x$10259$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10259$1HvE18) (begin '#f ((case-lambda ((g$q$10260$1HvE18) (if g$q$10260$1HvE18 (begin '#f ((case-lambda ((g$r$10261$1HvE18) (if g$r$10261$1HvE18 (begin '#f (append g$q$10260$1HvE18 g$r$10261$1HvE18)) '#f))) ((case-lambda ((g$x$10262$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10262$1HvE18) (begin '#f ((case-lambda ((g$q$10263$1HvE18) (if g$q$10263$1HvE18 (begin '#f ((case-lambda ((g$r$10264$1HvE18) (if g$r$10264$1HvE18 (begin '#f (append g$q$10263$1HvE18 g$r$10264$1HvE18)) '#f))) ((case-lambda ((g$x$10265$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10265$1HvE18) (begin '#f ((case-lambda ((g$q$10266$1HvE18) (if g$q$10266$1HvE18 (begin '#f ((case-lambda ((g$r$10267$1HvE18) (if g$r$10267$1HvE18 (begin '#f (append g$q$10266$1HvE18 g$r$10267$1HvE18)) '#f))) ((case-lambda ((g$x$10268$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10268$1HvE18) (begin '#f ((case-lambda ((g$q$10269$1HvE18) (if g$q$10269$1HvE18 (begin '#f ((case-lambda ((g$r$10270$1HvE18) (if g$r$10270$1HvE18 (begin '#f (append g$q$10269$1HvE18 g$r$10270$1HvE18)) '#f))) ((case-lambda ((g$x$10271$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10271$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10268$1HvE18)))) '#f))) ((case-lambda ((g$x$10272$1HvE18) (list g$x$10272$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10268$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10265$1HvE18)))) '#f))) ((case-lambda ((g$x$10273$1HvE18) (list g$x$10273$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10265$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10262$1HvE18)))) '#f))) ((case-lambda ((g$x$10274$1HvE18) (list g$x$10274$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10262$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10259$1HvE18)))) '#f))) ((case-lambda ((g$x$10275$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10259$1HvE18)))) '#f))) g$t$10232$1HvE18)))) g$e$10229$1HvE18)))) (g$case-transformer$9553$1HvE18 g$case-transformer$15658$1HvE18 (case-lambda ((g$e$10276$1HvE18 g$r$10277$1HvE18 g$mr$10278$1HvE18) (letrec* ((g$build-one$10279$1HvE18 (case-lambda ((g$t$10376$1HvE18 g$cls$10377$1HvE18 g$rest$10378$1HvE18) ((case-lambda ((g$t$10379$1HvE18) ((case-lambda ((g$ls/false$10380$1HvE18) (if (if g$ls/false$10380$1HvE18 (begin '#f (apply (case-lambda ((g$d*$10381$1HvE18 g$e$10382$1HvE18 g$e*$10383$1HvE18) '#t)) g$ls/false$10380$1HvE18)) '#f) (apply (case-lambda ((g$d*$10384$1HvE18 g$e$10385$1HvE18 g$e*$10386$1HvE18) (list 'if (list '(primitive memv) g$t$10376$1HvE18 (list 'quote (g$stx->datum$9323$1HvE18 g$d*$10384$1HvE18))) (g$build-sequence$9246$1HvE18 '#f (g$chi-expr*$9605$1HvE18 (cons g$e$10385$1HvE18 g$e*$10386$1HvE18) g$r$10277$1HvE18 g$mr$10278$1HvE18)) g$rest$10378$1HvE18))) g$ls/false$10380$1HvE18) ((case-lambda ((g$t$10387$1HvE18) ((case-lambda ((g$ls/false$10388$1HvE18) (if (if g$ls/false$10388$1HvE18 (begin '#f (apply (case-lambda ((g$else$10389$1HvE18) '#t)) g$ls/false$10388$1HvE18)) '#f) (apply (case-lambda ((g$else$10390$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$e$10276$1HvE18))) g$ls/false$10388$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10387$1HvE18)))) ((case-lambda ((g$x$10391$1HvE18) (list g$x$10391$1HvE18))) g$t$10387$1HvE18)))) g$t$10379$1HvE18)))) ((case-lambda ((g$x$10392$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10392$1HvE18) (begin '#f ((case-lambda ((g$q$10393$1HvE18) (if g$q$10393$1HvE18 (begin '#f ((case-lambda ((g$r$10394$1HvE18) (if g$r$10394$1HvE18 (begin '#f (append g$q$10393$1HvE18 g$r$10394$1HvE18)) '#f))) ((case-lambda ((g$x$10395$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10395$1HvE18) (begin '#f ((case-lambda ((g$q$10396$1HvE18) (if g$q$10396$1HvE18 (begin '#f ((case-lambda ((g$r$10397$1HvE18) (if g$r$10397$1HvE18 (begin '#f (append g$q$10396$1HvE18 g$r$10397$1HvE18)) '#f))) ((letrec ((g$f$10398$1HvE18 (case-lambda ((g$x$10399$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10399$1HvE18) ((case-lambda ((g$cars/f$10400$1HvE18) (if g$cars/f$10400$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10401$1HvE18) (if g$cdrs/f$10401$1HvE18 (begin '#f (map cons g$cars/f$10400$1HvE18 g$cdrs/f$10401$1HvE18)) '#f))) (g$f$10398$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10399$1HvE18)))) '#f))) ((case-lambda ((g$x$10402$1HvE18) (list g$x$10402$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10399$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10399$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$10398$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10395$1HvE18)))) '#f))) ((case-lambda ((g$x$10403$1HvE18) (list g$x$10403$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10395$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10392$1HvE18)))) '#f))) ((letrec ((g$f$10404$1HvE18 (case-lambda ((g$x$10405$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10405$1HvE18) ((case-lambda ((g$cars/f$10406$1HvE18) (if g$cars/f$10406$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10407$1HvE18) (if g$cdrs/f$10407$1HvE18 (begin '#f (map cons g$cars/f$10406$1HvE18 g$cdrs/f$10407$1HvE18)) '#f))) (g$f$10404$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10405$1HvE18)))) '#f))) ((case-lambda ((g$x$10408$1HvE18) (list g$x$10408$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10405$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10405$1HvE18) (list (begin 'd* '())) '#f)))))) g$f$10404$1HvE18) (g$syntax-car$9309$1HvE18 g$x$10392$1HvE18)))) '#f))) g$t$10379$1HvE18)))) g$cls$10377$1HvE18)))) (g$build-last$10280$1HvE18 (case-lambda ((g$t$10323$1HvE18 g$cls$10324$1HvE18) ((case-lambda ((g$t$10325$1HvE18) ((case-lambda ((g$ls/false$10326$1HvE18) (if (if g$ls/false$10326$1HvE18 (begin '#f (apply (case-lambda ((g$d*$10327$1HvE18 g$e$10328$1HvE18 g$e*$10329$1HvE18) '#t)) g$ls/false$10326$1HvE18)) '#f) (apply (case-lambda ((g$d*$10330$1HvE18 g$e$10331$1HvE18 g$e*$10332$1HvE18) (g$build-one$10279$1HvE18 g$t$10323$1HvE18 g$cls$10324$1HvE18 (g$build-void$9247$1HvE18)))) g$ls/false$10326$1HvE18) ((case-lambda ((g$t$10333$1HvE18) ((case-lambda ((g$ls/false$10334$1HvE18) (if (if g$ls/false$10334$1HvE18 (begin '#f (apply (case-lambda ((g$else-kwd$10335$1HvE18 g$x$10336$1HvE18 g$x*$10337$1HvE18) '#t)) g$ls/false$10334$1HvE18)) '#f) (apply (case-lambda ((g$else-kwd$10338$1HvE18 g$x$10339$1HvE18 g$x*$10340$1HvE18) (if (if (g$id?$9312$1HvE18 g$else-kwd$10338$1HvE18) (begin '#f (g$free-id=?$9316$1HvE18 g$else-kwd$10338$1HvE18 (g$scheme-stx$9537$1HvE18 'else))) '#f) (g$build-sequence$9246$1HvE18 '#f (g$chi-expr*$9605$1HvE18 (cons g$x$10339$1HvE18 g$x*$10340$1HvE18) g$r$10277$1HvE18 g$mr$10278$1HvE18)) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$e$10276$1HvE18)))) g$ls/false$10334$1HvE18) ((case-lambda ((g$t$10341$1HvE18) ((case-lambda ((g$ls/false$10342$1HvE18) (if (if g$ls/false$10342$1HvE18 (begin '#f (apply (case-lambda ((g$else$10343$1HvE18) '#t)) g$ls/false$10342$1HvE18)) '#f) (apply (case-lambda ((g$else$10344$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$e$10276$1HvE18))) g$ls/false$10342$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10341$1HvE18)))) ((case-lambda ((g$x$10345$1HvE18) (list g$x$10345$1HvE18))) g$t$10341$1HvE18)))) g$t$10333$1HvE18)))) ((case-lambda ((g$x$10346$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10346$1HvE18) (begin '#f ((case-lambda ((g$q$10347$1HvE18) (if g$q$10347$1HvE18 (begin '#f ((case-lambda ((g$r$10348$1HvE18) (if g$r$10348$1HvE18 (begin '#f (append g$q$10347$1HvE18 g$r$10348$1HvE18)) '#f))) ((case-lambda ((g$x$10349$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10349$1HvE18) (begin '#f ((case-lambda ((g$q$10350$1HvE18) (if g$q$10350$1HvE18 (begin '#f ((case-lambda ((g$r$10351$1HvE18) (if g$r$10351$1HvE18 (begin '#f (append g$q$10350$1HvE18 g$r$10351$1HvE18)) '#f))) ((letrec ((g$f$10352$1HvE18 (case-lambda ((g$x$10353$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10353$1HvE18) ((case-lambda ((g$cars/f$10354$1HvE18) (if g$cars/f$10354$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10355$1HvE18) (if g$cdrs/f$10355$1HvE18 (begin '#f (map cons g$cars/f$10354$1HvE18 g$cdrs/f$10355$1HvE18)) '#f))) (g$f$10352$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10353$1HvE18)))) '#f))) ((case-lambda ((g$x$10356$1HvE18) (list g$x$10356$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10353$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10353$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$10352$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10349$1HvE18)))) '#f))) ((case-lambda ((g$x$10357$1HvE18) (list g$x$10357$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10349$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10346$1HvE18)))) '#f))) ((case-lambda ((g$x$10358$1HvE18) (list g$x$10358$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10346$1HvE18)))) '#f))) g$t$10333$1HvE18)))) g$t$10325$1HvE18)))) ((case-lambda ((g$x$10359$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10359$1HvE18) (begin '#f ((case-lambda ((g$q$10360$1HvE18) (if g$q$10360$1HvE18 (begin '#f ((case-lambda ((g$r$10361$1HvE18) (if g$r$10361$1HvE18 (begin '#f (append g$q$10360$1HvE18 g$r$10361$1HvE18)) '#f))) ((case-lambda ((g$x$10362$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10362$1HvE18) (begin '#f ((case-lambda ((g$q$10363$1HvE18) (if g$q$10363$1HvE18 (begin '#f ((case-lambda ((g$r$10364$1HvE18) (if g$r$10364$1HvE18 (begin '#f (append g$q$10363$1HvE18 g$r$10364$1HvE18)) '#f))) ((letrec ((g$f$10365$1HvE18 (case-lambda ((g$x$10366$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10366$1HvE18) ((case-lambda ((g$cars/f$10367$1HvE18) (if g$cars/f$10367$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10368$1HvE18) (if g$cdrs/f$10368$1HvE18 (begin '#f (map cons g$cars/f$10367$1HvE18 g$cdrs/f$10368$1HvE18)) '#f))) (g$f$10365$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10366$1HvE18)))) '#f))) ((case-lambda ((g$x$10369$1HvE18) (list g$x$10369$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10366$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10366$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$10365$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10362$1HvE18)))) '#f))) ((case-lambda ((g$x$10370$1HvE18) (list g$x$10370$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10362$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10359$1HvE18)))) '#f))) ((letrec ((g$f$10371$1HvE18 (case-lambda ((g$x$10372$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10372$1HvE18) ((case-lambda ((g$cars/f$10373$1HvE18) (if g$cars/f$10373$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10374$1HvE18) (if g$cdrs/f$10374$1HvE18 (begin '#f (map cons g$cars/f$10373$1HvE18 g$cdrs/f$10374$1HvE18)) '#f))) (g$f$10371$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10372$1HvE18)))) '#f))) ((case-lambda ((g$x$10375$1HvE18) (list g$x$10375$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10372$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10372$1HvE18) (list (begin 'd* '())) '#f)))))) g$f$10371$1HvE18) (g$syntax-car$9309$1HvE18 g$x$10359$1HvE18)))) '#f))) g$t$10325$1HvE18)))) g$cls$10324$1HvE18))))) ((case-lambda ((g$t$10281$1HvE18) ((case-lambda ((g$ls/false$10282$1HvE18) (if (if g$ls/false$10282$1HvE18 (begin '#f (apply (case-lambda ((g$expr$10283$1HvE18) '#t)) g$ls/false$10282$1HvE18)) '#f) (apply (case-lambda ((g$expr$10284$1HvE18) (g$build-sequence$9246$1HvE18 '#f (list (g$chi-expr$9607$1HvE18 g$expr$10284$1HvE18 g$r$10277$1HvE18 g$mr$10278$1HvE18) (g$build-void$9247$1HvE18))))) g$ls/false$10282$1HvE18) ((case-lambda ((g$t$10285$1HvE18) ((case-lambda ((g$ls/false$10286$1HvE18) (if (if g$ls/false$10286$1HvE18 (begin '#f (apply (case-lambda ((g$expr$10287$1HvE18 g$cls$10288$1HvE18 g$cls*$10289$1HvE18) '#t)) g$ls/false$10286$1HvE18)) '#f) (apply (case-lambda ((g$expr$10290$1HvE18 g$cls$10291$1HvE18 g$cls*$10292$1HvE18) ((case-lambda ((g$t$10293$1HvE18) (g$build-let$9245$1HvE18 '#f (list g$t$10293$1HvE18) (list (g$chi-expr$9607$1HvE18 g$expr$10290$1HvE18 g$r$10277$1HvE18 g$mr$10278$1HvE18)) ((letrec ((g$f$10294$1HvE18 (case-lambda ((g$cls$10295$1HvE18 g$cls*$10296$1HvE18) (if (null? g$cls*$10296$1HvE18) (g$build-last$10280$1HvE18 g$t$10293$1HvE18 g$cls$10295$1HvE18) (g$build-one$10279$1HvE18 g$t$10293$1HvE18 g$cls$10295$1HvE18 (g$f$10294$1HvE18 (car g$cls*$10296$1HvE18) (cdr g$cls*$10296$1HvE18)))))))) g$f$10294$1HvE18) g$cls$10291$1HvE18 g$cls*$10292$1HvE18)))) (g$gen-lexical$9256$1HvE18 't)))) g$ls/false$10286$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10285$1HvE18)))) ((case-lambda ((g$x$10297$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10297$1HvE18) (begin '#f ((case-lambda ((g$q$10298$1HvE18) (if g$q$10298$1HvE18 (begin '#f ((case-lambda ((g$r$10299$1HvE18) (if g$r$10299$1HvE18 (begin '#f (append g$q$10298$1HvE18 g$r$10299$1HvE18)) '#f))) ((case-lambda ((g$x$10300$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10300$1HvE18) (begin '#f ((case-lambda ((g$q$10301$1HvE18) (if g$q$10301$1HvE18 (begin '#f ((case-lambda ((g$r$10302$1HvE18) (if g$r$10302$1HvE18 (begin '#f (append g$q$10301$1HvE18 g$r$10302$1HvE18)) '#f))) ((case-lambda ((g$x$10303$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10303$1HvE18) (begin '#f ((case-lambda ((g$q$10304$1HvE18) (if g$q$10304$1HvE18 (begin '#f ((case-lambda ((g$r$10305$1HvE18) (if g$r$10305$1HvE18 (begin '#f (append g$q$10304$1HvE18 g$r$10305$1HvE18)) '#f))) ((letrec ((g$f$10306$1HvE18 (case-lambda ((g$x$10307$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10307$1HvE18) ((case-lambda ((g$cars/f$10308$1HvE18) (if g$cars/f$10308$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10309$1HvE18) (if g$cdrs/f$10309$1HvE18 (begin '#f (map cons g$cars/f$10308$1HvE18 g$cdrs/f$10309$1HvE18)) '#f))) (g$f$10306$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10307$1HvE18)))) '#f))) ((case-lambda ((g$x$10310$1HvE18) (list g$x$10310$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10307$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10307$1HvE18) (list (begin 'cls* '())) '#f)))))) g$f$10306$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10303$1HvE18)))) '#f))) ((case-lambda ((g$x$10311$1HvE18) (list g$x$10311$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10303$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10300$1HvE18)))) '#f))) ((case-lambda ((g$x$10312$1HvE18) (list g$x$10312$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10300$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10297$1HvE18)))) '#f))) ((case-lambda ((g$x$10313$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10297$1HvE18)))) '#f))) g$t$10285$1HvE18)))) g$t$10281$1HvE18)))) ((case-lambda ((g$x$10314$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10314$1HvE18) (begin '#f ((case-lambda ((g$q$10315$1HvE18) (if g$q$10315$1HvE18 (begin '#f ((case-lambda ((g$r$10316$1HvE18) (if g$r$10316$1HvE18 (begin '#f (append g$q$10315$1HvE18 g$r$10316$1HvE18)) '#f))) ((case-lambda ((g$x$10317$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10317$1HvE18) (begin '#f ((case-lambda ((g$q$10318$1HvE18) (if g$q$10318$1HvE18 (begin '#f ((case-lambda ((g$r$10319$1HvE18) (if g$r$10319$1HvE18 (begin '#f (append g$q$10318$1HvE18 g$r$10319$1HvE18)) '#f))) ((case-lambda ((g$x$10320$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10320$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10317$1HvE18)))) '#f))) ((case-lambda ((g$x$10321$1HvE18) (list g$x$10321$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10317$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10314$1HvE18)))) '#f))) ((case-lambda ((g$x$10322$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10314$1HvE18)))) '#f))) g$t$10281$1HvE18)))) g$e$10276$1HvE18))))) (g$quote-transformer$9554$1HvE18 g$quote-transformer$15659$1HvE18 (case-lambda ((g$e$10409$1HvE18 g$r$10410$1HvE18 g$mr$10411$1HvE18) ((case-lambda ((g$t$10412$1HvE18) ((case-lambda ((g$ls/false$10413$1HvE18) (if (if g$ls/false$10413$1HvE18 (begin '#f (apply (case-lambda ((g$datum$10414$1HvE18) '#t)) g$ls/false$10413$1HvE18)) '#f) (apply (case-lambda ((g$datum$10415$1HvE18) (list 'quote (g$stx->datum$9323$1HvE18 g$datum$10415$1HvE18)))) g$ls/false$10413$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10412$1HvE18)))) ((case-lambda ((g$x$10416$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10416$1HvE18) (begin '#f ((case-lambda ((g$q$10417$1HvE18) (if g$q$10417$1HvE18 (begin '#f ((case-lambda ((g$r$10418$1HvE18) (if g$r$10418$1HvE18 (begin '#f (append g$q$10417$1HvE18 g$r$10418$1HvE18)) '#f))) ((case-lambda ((g$x$10419$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10419$1HvE18) (begin '#f ((case-lambda ((g$q$10420$1HvE18) (if g$q$10420$1HvE18 (begin '#f ((case-lambda ((g$r$10421$1HvE18) (if g$r$10421$1HvE18 (begin '#f (append g$q$10420$1HvE18 g$r$10421$1HvE18)) '#f))) ((case-lambda ((g$x$10422$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10422$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10419$1HvE18)))) '#f))) ((case-lambda ((g$x$10423$1HvE18) (list g$x$10423$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10419$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10416$1HvE18)))) '#f))) ((case-lambda ((g$x$10424$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10416$1HvE18)))) '#f))) g$t$10412$1HvE18)))) g$e$10409$1HvE18)))) (g$case-lambda-transformer$9555$1HvE18 g$case-lambda-transformer$15660$1HvE18 (case-lambda ((g$e$10425$1HvE18 g$r$10426$1HvE18 g$mr$10427$1HvE18) ((case-lambda ((g$t$10428$1HvE18) ((case-lambda ((g$ls/false$10429$1HvE18) (if (if g$ls/false$10429$1HvE18 (begin '#f (apply (case-lambda ((g$fmls*$10430$1HvE18 g$b*$10431$1HvE18 g$b**$10432$1HvE18) '#t)) g$ls/false$10429$1HvE18)) '#f) (apply (case-lambda ((g$fmls*$10433$1HvE18 g$b*$10434$1HvE18 g$b**$10435$1HvE18) (call-with-values (case-lambda (() (g$chi-lambda-clause*$9611$1HvE18 g$e$10425$1HvE18 g$fmls*$10433$1HvE18 (map cons g$b*$10434$1HvE18 g$b**$10435$1HvE18) g$r$10426$1HvE18 g$mr$10427$1HvE18))) (case-lambda ((g$fmls*$10438$1HvE18 g$body*$10439$1HvE18) ((case-lambda ((g$body*$10440$1HvE18 g$fmls*$10441$1HvE18) (g$build-case-lambda$9244$1HvE18 '#f g$fmls*$10441$1HvE18 g$body*$10440$1HvE18))) g$body*$10439$1HvE18 g$fmls*$10438$1HvE18)))))) g$ls/false$10429$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10428$1HvE18)))) ((case-lambda ((g$x$10442$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10442$1HvE18) (begin '#f ((case-lambda ((g$q$10443$1HvE18) (if g$q$10443$1HvE18 (begin '#f ((case-lambda ((g$r$10444$1HvE18) (if g$r$10444$1HvE18 (begin '#f (append g$q$10443$1HvE18 g$r$10444$1HvE18)) '#f))) ((letrec ((g$f$10445$1HvE18 (case-lambda ((g$x$10446$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10446$1HvE18) ((case-lambda ((g$cars/f$10447$1HvE18) (if g$cars/f$10447$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10448$1HvE18) (if g$cdrs/f$10448$1HvE18 (begin '#f (map cons g$cars/f$10447$1HvE18 g$cdrs/f$10448$1HvE18)) '#f))) (g$f$10445$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10446$1HvE18)))) '#f))) ((case-lambda ((g$x$10449$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10449$1HvE18) (begin '#f ((case-lambda ((g$q$10450$1HvE18) (if g$q$10450$1HvE18 (begin '#f ((case-lambda ((g$r$10451$1HvE18) (if g$r$10451$1HvE18 (begin '#f (append g$q$10450$1HvE18 g$r$10451$1HvE18)) '#f))) ((case-lambda ((g$x$10452$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10452$1HvE18) (begin '#f ((case-lambda ((g$q$10453$1HvE18) (if g$q$10453$1HvE18 (begin '#f ((case-lambda ((g$r$10454$1HvE18) (if g$r$10454$1HvE18 (begin '#f (append g$q$10453$1HvE18 g$r$10454$1HvE18)) '#f))) ((letrec ((g$f$10455$1HvE18 (case-lambda ((g$x$10456$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10456$1HvE18) ((case-lambda ((g$cars/f$10457$1HvE18) (if g$cars/f$10457$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10458$1HvE18) (if g$cdrs/f$10458$1HvE18 (begin '#f (map cons g$cars/f$10457$1HvE18 g$cdrs/f$10458$1HvE18)) '#f))) (g$f$10455$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10456$1HvE18)))) '#f))) ((case-lambda ((g$x$10459$1HvE18) (list g$x$10459$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10456$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10456$1HvE18) (list (begin 'b** '())) '#f)))))) g$f$10455$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10452$1HvE18)))) '#f))) ((case-lambda ((g$x$10460$1HvE18) (list g$x$10460$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10452$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10449$1HvE18)))) '#f))) ((case-lambda ((g$x$10461$1HvE18) (list g$x$10461$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10449$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$10446$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10446$1HvE18) (list (begin 'fmls* '()) (begin 'b* '()) (begin 'b** '())) '#f)))))) g$f$10445$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10442$1HvE18)))) '#f))) ((case-lambda ((g$x$10462$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10442$1HvE18)))) '#f))) g$t$10428$1HvE18)))) g$e$10425$1HvE18)))) (g$lambda-transformer$9556$1HvE18 g$lambda-transformer$15661$1HvE18 (case-lambda ((g$e$10463$1HvE18 g$r$10464$1HvE18 g$mr$10465$1HvE18) ((case-lambda ((g$t$10466$1HvE18) ((case-lambda ((g$ls/false$10467$1HvE18) (if (if g$ls/false$10467$1HvE18 (begin '#f (apply (case-lambda ((g$fmls$10468$1HvE18 g$b$10469$1HvE18 g$b*$10470$1HvE18) '#t)) g$ls/false$10467$1HvE18)) '#f) (apply (case-lambda ((g$fmls$10471$1HvE18 g$b$10472$1HvE18 g$b*$10473$1HvE18) (call-with-values (case-lambda (() (g$chi-lambda-clause$9610$1HvE18 g$e$10463$1HvE18 g$fmls$10471$1HvE18 (cons g$b$10472$1HvE18 g$b*$10473$1HvE18) g$r$10464$1HvE18 g$mr$10465$1HvE18))) (case-lambda ((g$fmls$10476$1HvE18 g$body$10477$1HvE18) ((case-lambda ((g$body$10478$1HvE18 g$fmls$10479$1HvE18) (g$build-lambda$9243$1HvE18 '#f g$fmls$10479$1HvE18 g$body$10478$1HvE18))) g$body$10477$1HvE18 g$fmls$10476$1HvE18)))))) g$ls/false$10467$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10466$1HvE18)))) ((case-lambda ((g$x$10480$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10480$1HvE18) (begin '#f ((case-lambda ((g$q$10481$1HvE18) (if g$q$10481$1HvE18 (begin '#f ((case-lambda ((g$r$10482$1HvE18) (if g$r$10482$1HvE18 (begin '#f (append g$q$10481$1HvE18 g$r$10482$1HvE18)) '#f))) ((case-lambda ((g$x$10483$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10483$1HvE18) (begin '#f ((case-lambda ((g$q$10484$1HvE18) (if g$q$10484$1HvE18 (begin '#f ((case-lambda ((g$r$10485$1HvE18) (if g$r$10485$1HvE18 (begin '#f (append g$q$10484$1HvE18 g$r$10485$1HvE18)) '#f))) ((case-lambda ((g$x$10486$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10486$1HvE18) (begin '#f ((case-lambda ((g$q$10487$1HvE18) (if g$q$10487$1HvE18 (begin '#f ((case-lambda ((g$r$10488$1HvE18) (if g$r$10488$1HvE18 (begin '#f (append g$q$10487$1HvE18 g$r$10488$1HvE18)) '#f))) ((letrec ((g$f$10489$1HvE18 (case-lambda ((g$x$10490$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10490$1HvE18) ((case-lambda ((g$cars/f$10491$1HvE18) (if g$cars/f$10491$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10492$1HvE18) (if g$cdrs/f$10492$1HvE18 (begin '#f (map cons g$cars/f$10491$1HvE18 g$cdrs/f$10492$1HvE18)) '#f))) (g$f$10489$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10490$1HvE18)))) '#f))) ((case-lambda ((g$x$10493$1HvE18) (list g$x$10493$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10490$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10490$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10489$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10486$1HvE18)))) '#f))) ((case-lambda ((g$x$10494$1HvE18) (list g$x$10494$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10486$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10483$1HvE18)))) '#f))) ((case-lambda ((g$x$10495$1HvE18) (list g$x$10495$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10483$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10480$1HvE18)))) '#f))) ((case-lambda ((g$x$10496$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10480$1HvE18)))) '#f))) g$t$10466$1HvE18)))) g$e$10463$1HvE18)))) (g$bless$9557$1HvE18 g$bless$15662$1HvE18 (case-lambda ((g$x$10497$1HvE18) (g$mkstx$9300$1HvE18 ((letrec ((g$f$10498$1HvE18 (case-lambda ((g$x$10499$1HvE18) (if (g$stx?$9284$1HvE18 g$x$10499$1HvE18) g$x$10499$1HvE18 (if (pair? g$x$10499$1HvE18) (cons (g$f$10498$1HvE18 (car g$x$10499$1HvE18)) (g$f$10498$1HvE18 (cdr g$x$10499$1HvE18))) (if (symbol? g$x$10499$1HvE18) (g$scheme-stx$9537$1HvE18 g$x$10499$1HvE18) (if (vector? g$x$10499$1HvE18) (list->vector (map g$f$10498$1HvE18 (vector->list g$x$10499$1HvE18))) g$x$10499$1HvE18)))))))) g$f$10498$1HvE18) g$x$10497$1HvE18) '() '() '())))) (g$with-syntax-macro$9558$1HvE18 g$with-syntax-macro$15663$1HvE18 (case-lambda ((g$e$10500$1HvE18) ((case-lambda ((g$t$10501$1HvE18) ((case-lambda ((g$ls/false$10502$1HvE18) (if (if g$ls/false$10502$1HvE18 (begin '#f (apply (case-lambda ((g$pat*$10503$1HvE18 g$expr*$10504$1HvE18 g$b$10505$1HvE18 g$b*$10506$1HvE18) '#t)) g$ls/false$10502$1HvE18)) '#f) (apply (case-lambda ((g$pat*$10507$1HvE18 g$expr*$10508$1HvE18 g$b$10509$1HvE18 g$b*$10510$1HvE18) ((case-lambda ((g$idn*$10511$1HvE18) (begin (g$verify-formals$9609$1HvE18 (map car g$idn*$10511$1HvE18) g$e$10500$1HvE18) ((case-lambda ((g$t*$10512$1HvE18) (g$bless$9557$1HvE18 (list 'let (map list g$t*$10512$1HvE18 g$expr*$10508$1HvE18) ((letrec ((g$f$10513$1HvE18 (case-lambda ((g$pat*$10514$1HvE18 g$t*$10515$1HvE18) (if (null? g$pat*$10514$1HvE18) (cons 'begin (cons '#f (cons g$b$10509$1HvE18 g$b*$10510$1HvE18))) (list 'syntax-case (car g$t*$10515$1HvE18) '() (list (car g$pat*$10514$1HvE18) (g$f$10513$1HvE18 (cdr g$pat*$10514$1HvE18) (cdr g$t*$10515$1HvE18))) (list '_ (list 'assertion-violation ''with-syntax '"pattern does not match value" (list 'quote (car g$pat*$10514$1HvE18)) (car g$t*$10515$1HvE18))))))))) g$f$10513$1HvE18) g$pat*$10507$1HvE18 g$t*$10512$1HvE18))))) (g$generate-temporaries$9688$1HvE18 g$expr*$10508$1HvE18))))) ((letrec ((g$f$10516$1HvE18 (case-lambda ((g$pat*$10517$1HvE18) (if (null? g$pat*$10517$1HvE18) '() (call-with-values (case-lambda (() (g$convert-pattern$9590$1HvE18 (car g$pat*$10517$1HvE18) '()))) (case-lambda ((g$pat$10520$1HvE18 g$idn*$10521$1HvE18) ((case-lambda ((g$idn*$10522$1HvE18 g$pat$10523$1HvE18) (append g$idn*$10522$1HvE18 (g$f$10516$1HvE18 (cdr g$pat*$10517$1HvE18))))) g$idn*$10521$1HvE18 g$pat$10520$1HvE18))))))))) g$f$10516$1HvE18) g$pat*$10507$1HvE18)))) g$ls/false$10502$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10501$1HvE18)))) ((case-lambda ((g$x$10524$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10524$1HvE18) (begin '#f ((case-lambda ((g$q$10525$1HvE18) (if g$q$10525$1HvE18 (begin '#f ((case-lambda ((g$r$10526$1HvE18) (if g$r$10526$1HvE18 (begin '#f (append g$q$10525$1HvE18 g$r$10526$1HvE18)) '#f))) ((case-lambda ((g$x$10527$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10527$1HvE18) (begin '#f ((case-lambda ((g$q$10528$1HvE18) (if g$q$10528$1HvE18 (begin '#f ((case-lambda ((g$r$10529$1HvE18) (if g$r$10529$1HvE18 (begin '#f (append g$q$10528$1HvE18 g$r$10529$1HvE18)) '#f))) ((case-lambda ((g$x$10530$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10530$1HvE18) (begin '#f ((case-lambda ((g$q$10531$1HvE18) (if g$q$10531$1HvE18 (begin '#f ((case-lambda ((g$r$10532$1HvE18) (if g$r$10532$1HvE18 (begin '#f (append g$q$10531$1HvE18 g$r$10532$1HvE18)) '#f))) ((letrec ((g$f$10533$1HvE18 (case-lambda ((g$x$10534$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10534$1HvE18) ((case-lambda ((g$cars/f$10535$1HvE18) (if g$cars/f$10535$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10536$1HvE18) (if g$cdrs/f$10536$1HvE18 (begin '#f (map cons g$cars/f$10535$1HvE18 g$cdrs/f$10536$1HvE18)) '#f))) (g$f$10533$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10534$1HvE18)))) '#f))) ((case-lambda ((g$x$10537$1HvE18) (list g$x$10537$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10534$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10534$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10533$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10530$1HvE18)))) '#f))) ((case-lambda ((g$x$10538$1HvE18) (list g$x$10538$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10530$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10527$1HvE18)))) '#f))) ((letrec ((g$f$10539$1HvE18 (case-lambda ((g$x$10540$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10540$1HvE18) ((case-lambda ((g$cars/f$10541$1HvE18) (if g$cars/f$10541$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10542$1HvE18) (if g$cdrs/f$10542$1HvE18 (begin '#f (map cons g$cars/f$10541$1HvE18 g$cdrs/f$10542$1HvE18)) '#f))) (g$f$10539$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10540$1HvE18)))) '#f))) ((case-lambda ((g$x$10543$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10543$1HvE18) (begin '#f ((case-lambda ((g$q$10544$1HvE18) (if g$q$10544$1HvE18 (begin '#f ((case-lambda ((g$r$10545$1HvE18) (if g$r$10545$1HvE18 (begin '#f (append g$q$10544$1HvE18 g$r$10545$1HvE18)) '#f))) ((case-lambda ((g$x$10546$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10546$1HvE18) (begin '#f ((case-lambda ((g$q$10547$1HvE18) (if g$q$10547$1HvE18 (begin '#f ((case-lambda ((g$r$10548$1HvE18) (if g$r$10548$1HvE18 (begin '#f (append g$q$10547$1HvE18 g$r$10548$1HvE18)) '#f))) ((case-lambda ((g$x$10549$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10549$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10546$1HvE18)))) '#f))) ((case-lambda ((g$x$10550$1HvE18) (list g$x$10550$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10546$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10543$1HvE18)))) '#f))) ((case-lambda ((g$x$10551$1HvE18) (list g$x$10551$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10543$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$10540$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10540$1HvE18) (list (begin 'pat* '()) (begin 'expr* '())) '#f)))))) g$f$10539$1HvE18) (g$syntax-car$9309$1HvE18 g$x$10527$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10524$1HvE18)))) '#f))) ((case-lambda ((g$x$10552$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10524$1HvE18)))) '#f))) g$t$10501$1HvE18)))) g$e$10500$1HvE18)))) (g$invalid-fmls-error$9559$1HvE18 g$invalid-fmls-error$15664$1HvE18 (case-lambda ((g$stx$10553$1HvE18 g$fmls$10554$1HvE18) ((case-lambda ((g$t$10555$1HvE18) ((case-lambda ((g$ls/false$10556$1HvE18) (if (if g$ls/false$10556$1HvE18 (begin '#f (apply (case-lambda ((g$id*$10557$1HvE18 g$last$10558$1HvE18) '#t)) g$ls/false$10556$1HvE18)) '#f) (apply (case-lambda ((g$id*$10559$1HvE18 g$last$10560$1HvE18) ((letrec ((g$f$10561$1HvE18 (case-lambda ((g$id*$10562$1HvE18) (if (null? g$id*$10562$1HvE18) (values) (if (not (g$id?$9312$1HvE18 (car g$id*$10562$1HvE18))) (g$syntax-violation$9695$1HvE18 '#f '"not an identifier" g$stx$10553$1HvE18 (car g$id*$10562$1HvE18)) (begin (g$f$10561$1HvE18 (cdr g$id*$10562$1HvE18)) (if (g$bound-id-member?$9319$1HvE18 (car g$id*$10562$1HvE18) (cdr g$id*$10562$1HvE18)) (g$syntax-violation$9695$1HvE18 '#f '"duplicate binding" g$stx$10553$1HvE18 (car g$id*$10562$1HvE18)) (void))))))))) g$f$10561$1HvE18) (if (g$id?$9312$1HvE18 g$last$10560$1HvE18) (cons g$last$10560$1HvE18 g$id*$10559$1HvE18) (if (g$syntax-null?$9307$1HvE18 g$last$10560$1HvE18) g$id*$10559$1HvE18 (g$syntax-violation$9695$1HvE18 '#f '"not an identifier" g$stx$10553$1HvE18 g$last$10560$1HvE18)))))) g$ls/false$10556$1HvE18) ((case-lambda ((g$t$10563$1HvE18) ((case-lambda ((g$ls/false$10564$1HvE18) (if (if g$ls/false$10564$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$10564$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"malformed binding form" g$stx$10553$1HvE18 g$fmls$10554$1HvE18))) g$ls/false$10564$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10563$1HvE18)))) ((case-lambda ((g$x$10565$1HvE18) '())) g$t$10563$1HvE18)))) g$t$10555$1HvE18)))) ((letrec ((g$f$10566$1HvE18 (case-lambda ((g$x$10569$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10569$1HvE18) ((case-lambda ((g$cars/f$10570$1HvE18) (if g$cars/f$10570$1HvE18 (begin '#f ((case-lambda ((g$d/f$10571$1HvE18) (if g$d/f$10571$1HvE18 (begin '#f (cons (map cons g$cars/f$10570$1HvE18 (car g$d/f$10571$1HvE18)) (cdr g$d/f$10571$1HvE18))) '#f))) (g$f$10566$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10569$1HvE18)))) '#f))) ((case-lambda ((g$x$10572$1HvE18) (list g$x$10572$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10569$1HvE18))) ((case-lambda ((g$d$10573$1HvE18) (if g$d$10573$1HvE18 (begin '#f (cons (list (begin 'id* '())) g$d$10573$1HvE18)) '#f))) ((case-lambda ((g$x$10574$1HvE18) (list g$x$10574$1HvE18))) g$x$10569$1HvE18))))))) (case-lambda ((g$x$10567$1HvE18) ((case-lambda ((g$x$10568$1HvE18) (if g$x$10568$1HvE18 (begin '#f (append (car g$x$10568$1HvE18) (cdr g$x$10568$1HvE18))) '#f))) (g$f$10566$1HvE18 g$x$10567$1HvE18))))) g$t$10555$1HvE18)))) g$fmls$10554$1HvE18)))) (g$let-macro$9560$1HvE18 g$let-macro$15665$1HvE18 (case-lambda ((g$stx$10575$1HvE18) ((case-lambda ((g$t$10576$1HvE18) ((case-lambda ((g$ls/false$10577$1HvE18) (if (if g$ls/false$10577$1HvE18 (begin '#f (apply (case-lambda ((g$lhs*$10578$1HvE18 g$rhs*$10579$1HvE18 g$b$10580$1HvE18 g$b*$10581$1HvE18) '#t)) g$ls/false$10577$1HvE18)) '#f) (apply (case-lambda ((g$lhs*$10582$1HvE18 g$rhs*$10583$1HvE18 g$b$10584$1HvE18 g$b*$10585$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 g$lhs*$10582$1HvE18) (g$bless$9557$1HvE18 (cons (cons 'lambda (cons g$lhs*$10582$1HvE18 (cons g$b$10584$1HvE18 g$b*$10585$1HvE18))) g$rhs*$10583$1HvE18)) (g$invalid-fmls-error$9559$1HvE18 g$stx$10575$1HvE18 g$lhs*$10582$1HvE18)))) g$ls/false$10577$1HvE18) ((case-lambda ((g$t$10586$1HvE18) ((case-lambda ((g$ls/false$10587$1HvE18) (if (if g$ls/false$10587$1HvE18 (begin '#f (apply (case-lambda ((g$f$10588$1HvE18 g$lhs*$10589$1HvE18 g$rhs*$10590$1HvE18 g$b$10591$1HvE18 g$b*$10592$1HvE18) (g$id?$9312$1HvE18 g$f$10588$1HvE18))) g$ls/false$10587$1HvE18)) '#f) (apply (case-lambda ((g$f$10593$1HvE18 g$lhs*$10594$1HvE18 g$rhs*$10595$1HvE18 g$b$10596$1HvE18 g$b*$10597$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 g$lhs*$10594$1HvE18) (g$bless$9557$1HvE18 (cons (list 'letrec (list (list g$f$10593$1HvE18 (cons 'lambda (cons g$lhs*$10594$1HvE18 (cons g$b$10596$1HvE18 g$b*$10597$1HvE18))))) g$f$10593$1HvE18) g$rhs*$10595$1HvE18)) (g$invalid-fmls-error$9559$1HvE18 g$stx$10575$1HvE18 g$lhs*$10594$1HvE18)))) g$ls/false$10587$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10586$1HvE18)))) ((case-lambda ((g$x$10598$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10598$1HvE18) (begin '#f ((case-lambda ((g$q$10599$1HvE18) (if g$q$10599$1HvE18 (begin '#f ((case-lambda ((g$r$10600$1HvE18) (if g$r$10600$1HvE18 (begin '#f (append g$q$10599$1HvE18 g$r$10600$1HvE18)) '#f))) ((case-lambda ((g$x$10601$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10601$1HvE18) (begin '#f ((case-lambda ((g$q$10602$1HvE18) (if g$q$10602$1HvE18 (begin '#f ((case-lambda ((g$r$10603$1HvE18) (if g$r$10603$1HvE18 (begin '#f (append g$q$10602$1HvE18 g$r$10603$1HvE18)) '#f))) ((case-lambda ((g$x$10604$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10604$1HvE18) (begin '#f ((case-lambda ((g$q$10605$1HvE18) (if g$q$10605$1HvE18 (begin '#f ((case-lambda ((g$r$10606$1HvE18) (if g$r$10606$1HvE18 (begin '#f (append g$q$10605$1HvE18 g$r$10606$1HvE18)) '#f))) ((case-lambda ((g$x$10607$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10607$1HvE18) (begin '#f ((case-lambda ((g$q$10608$1HvE18) (if g$q$10608$1HvE18 (begin '#f ((case-lambda ((g$r$10609$1HvE18) (if g$r$10609$1HvE18 (begin '#f (append g$q$10608$1HvE18 g$r$10609$1HvE18)) '#f))) ((letrec ((g$f$10610$1HvE18 (case-lambda ((g$x$10611$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10611$1HvE18) ((case-lambda ((g$cars/f$10612$1HvE18) (if g$cars/f$10612$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10613$1HvE18) (if g$cdrs/f$10613$1HvE18 (begin '#f (map cons g$cars/f$10612$1HvE18 g$cdrs/f$10613$1HvE18)) '#f))) (g$f$10610$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10611$1HvE18)))) '#f))) ((case-lambda ((g$x$10614$1HvE18) (list g$x$10614$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10611$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10611$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10610$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10607$1HvE18)))) '#f))) ((case-lambda ((g$x$10615$1HvE18) (list g$x$10615$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10607$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10604$1HvE18)))) '#f))) ((letrec ((g$f$10616$1HvE18 (case-lambda ((g$x$10617$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10617$1HvE18) ((case-lambda ((g$cars/f$10618$1HvE18) (if g$cars/f$10618$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10619$1HvE18) (if g$cdrs/f$10619$1HvE18 (begin '#f (map cons g$cars/f$10618$1HvE18 g$cdrs/f$10619$1HvE18)) '#f))) (g$f$10616$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10617$1HvE18)))) '#f))) ((case-lambda ((g$x$10620$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10620$1HvE18) (begin '#f ((case-lambda ((g$q$10621$1HvE18) (if g$q$10621$1HvE18 (begin '#f ((case-lambda ((g$r$10622$1HvE18) (if g$r$10622$1HvE18 (begin '#f (append g$q$10621$1HvE18 g$r$10622$1HvE18)) '#f))) ((case-lambda ((g$x$10623$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10623$1HvE18) (begin '#f ((case-lambda ((g$q$10624$1HvE18) (if g$q$10624$1HvE18 (begin '#f ((case-lambda ((g$r$10625$1HvE18) (if g$r$10625$1HvE18 (begin '#f (append g$q$10624$1HvE18 g$r$10625$1HvE18)) '#f))) ((case-lambda ((g$x$10626$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10626$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10623$1HvE18)))) '#f))) ((case-lambda ((g$x$10627$1HvE18) (list g$x$10627$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10623$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10620$1HvE18)))) '#f))) ((case-lambda ((g$x$10628$1HvE18) (list g$x$10628$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10620$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$10617$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10617$1HvE18) (list (begin 'lhs* '()) (begin 'rhs* '())) '#f)))))) g$f$10616$1HvE18) (g$syntax-car$9309$1HvE18 g$x$10604$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10601$1HvE18)))) '#f))) ((case-lambda ((g$x$10629$1HvE18) (list g$x$10629$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10601$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10598$1HvE18)))) '#f))) ((case-lambda ((g$x$10630$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10598$1HvE18)))) '#f))) g$t$10586$1HvE18)))) g$t$10576$1HvE18)))) ((case-lambda ((g$x$10631$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10631$1HvE18) (begin '#f ((case-lambda ((g$q$10632$1HvE18) (if g$q$10632$1HvE18 (begin '#f ((case-lambda ((g$r$10633$1HvE18) (if g$r$10633$1HvE18 (begin '#f (append g$q$10632$1HvE18 g$r$10633$1HvE18)) '#f))) ((case-lambda ((g$x$10634$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10634$1HvE18) (begin '#f ((case-lambda ((g$q$10635$1HvE18) (if g$q$10635$1HvE18 (begin '#f ((case-lambda ((g$r$10636$1HvE18) (if g$r$10636$1HvE18 (begin '#f (append g$q$10635$1HvE18 g$r$10636$1HvE18)) '#f))) ((case-lambda ((g$x$10637$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10637$1HvE18) (begin '#f ((case-lambda ((g$q$10638$1HvE18) (if g$q$10638$1HvE18 (begin '#f ((case-lambda ((g$r$10639$1HvE18) (if g$r$10639$1HvE18 (begin '#f (append g$q$10638$1HvE18 g$r$10639$1HvE18)) '#f))) ((letrec ((g$f$10640$1HvE18 (case-lambda ((g$x$10641$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10641$1HvE18) ((case-lambda ((g$cars/f$10642$1HvE18) (if g$cars/f$10642$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10643$1HvE18) (if g$cdrs/f$10643$1HvE18 (begin '#f (map cons g$cars/f$10642$1HvE18 g$cdrs/f$10643$1HvE18)) '#f))) (g$f$10640$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10641$1HvE18)))) '#f))) ((case-lambda ((g$x$10644$1HvE18) (list g$x$10644$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10641$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10641$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10640$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10637$1HvE18)))) '#f))) ((case-lambda ((g$x$10645$1HvE18) (list g$x$10645$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10637$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10634$1HvE18)))) '#f))) ((letrec ((g$f$10646$1HvE18 (case-lambda ((g$x$10647$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10647$1HvE18) ((case-lambda ((g$cars/f$10648$1HvE18) (if g$cars/f$10648$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10649$1HvE18) (if g$cdrs/f$10649$1HvE18 (begin '#f (map cons g$cars/f$10648$1HvE18 g$cdrs/f$10649$1HvE18)) '#f))) (g$f$10646$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10647$1HvE18)))) '#f))) ((case-lambda ((g$x$10650$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10650$1HvE18) (begin '#f ((case-lambda ((g$q$10651$1HvE18) (if g$q$10651$1HvE18 (begin '#f ((case-lambda ((g$r$10652$1HvE18) (if g$r$10652$1HvE18 (begin '#f (append g$q$10651$1HvE18 g$r$10652$1HvE18)) '#f))) ((case-lambda ((g$x$10653$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10653$1HvE18) (begin '#f ((case-lambda ((g$q$10654$1HvE18) (if g$q$10654$1HvE18 (begin '#f ((case-lambda ((g$r$10655$1HvE18) (if g$r$10655$1HvE18 (begin '#f (append g$q$10654$1HvE18 g$r$10655$1HvE18)) '#f))) ((case-lambda ((g$x$10656$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10656$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10653$1HvE18)))) '#f))) ((case-lambda ((g$x$10657$1HvE18) (list g$x$10657$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10653$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10650$1HvE18)))) '#f))) ((case-lambda ((g$x$10658$1HvE18) (list g$x$10658$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10650$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$10647$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10647$1HvE18) (list (begin 'lhs* '()) (begin 'rhs* '())) '#f)))))) g$f$10646$1HvE18) (g$syntax-car$9309$1HvE18 g$x$10634$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10631$1HvE18)))) '#f))) ((case-lambda ((g$x$10659$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10631$1HvE18)))) '#f))) g$t$10576$1HvE18)))) g$stx$10575$1HvE18)))) (g$let-values-macro$9561$1HvE18 g$let-values-macro$15666$1HvE18 (case-lambda ((g$stx$10660$1HvE18) (letrec* ((g$rename$10661$1HvE18 (case-lambda ((g$x$10783$1HvE18 g$old*$10784$1HvE18 g$new*$10785$1HvE18) (begin (if (g$id?$9312$1HvE18 g$x$10783$1HvE18) (void) (g$syntax-violation$9695$1HvE18 '#f '"not an indentifier" g$stx$10660$1HvE18 g$x$10783$1HvE18)) (if (g$bound-id-member?$9319$1HvE18 g$x$10783$1HvE18 g$old*$10784$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"duplicate binding" g$stx$10660$1HvE18 g$x$10783$1HvE18) (void)) ((case-lambda ((g$y$10786$1HvE18) (values g$y$10786$1HvE18 (cons g$x$10783$1HvE18 g$old*$10784$1HvE18) (cons g$y$10786$1HvE18 g$new*$10785$1HvE18)))) (gensym (g$syntax->datum$9698$1HvE18 g$x$10783$1HvE18))))))) (g$rename*$10662$1HvE18 (case-lambda ((g$x*$10774$1HvE18 g$old*$10775$1HvE18 g$new*$10776$1HvE18) (if (null? g$x*$10774$1HvE18) (values '() g$old*$10775$1HvE18 g$new*$10776$1HvE18) (call-with-values (case-lambda (() (g$rename$10661$1HvE18 (car g$x*$10774$1HvE18) g$old*$10775$1HvE18 g$new*$10776$1HvE18))) (case-lambda ((g$x$10777$1HvE18 g$old*$10778$1HvE18 g$new*$10779$1HvE18) (call-with-values (case-lambda (() (g$rename*$10662$1HvE18 (cdr g$x*$10774$1HvE18) g$old*$10778$1HvE18 g$new*$10779$1HvE18))) (case-lambda ((g$x*$10780$1HvE18 g$old*$10781$1HvE18 g$new*$10782$1HvE18) (values (cons g$x$10777$1HvE18 g$x*$10780$1HvE18) g$old*$10781$1HvE18 g$new*$10782$1HvE18)))))))))))) ((case-lambda ((g$t$10663$1HvE18) ((case-lambda ((g$ls/false$10664$1HvE18) (if (if g$ls/false$10664$1HvE18 (begin '#f (apply (case-lambda ((g$b$10665$1HvE18 g$b*$10666$1HvE18) '#t)) g$ls/false$10664$1HvE18)) '#f) (apply (case-lambda ((g$b$10667$1HvE18 g$b*$10668$1HvE18) (g$cons*$7967$1HvE18 (g$bless$9557$1HvE18 'let) '() g$b$10667$1HvE18 g$b*$10668$1HvE18))) g$ls/false$10664$1HvE18) ((case-lambda ((g$t$10669$1HvE18) ((case-lambda ((g$ls/false$10670$1HvE18) (if (if g$ls/false$10670$1HvE18 (begin '#f (apply (case-lambda ((g$lhs*$10671$1HvE18 g$rhs*$10672$1HvE18 g$b$10673$1HvE18 g$b*$10674$1HvE18) '#t)) g$ls/false$10670$1HvE18)) '#f) (apply (case-lambda ((g$lhs*$10675$1HvE18 g$rhs*$10676$1HvE18 g$b$10677$1HvE18 g$b*$10678$1HvE18) (g$bless$9557$1HvE18 ((letrec ((g$f$10679$1HvE18 (case-lambda ((g$lhs*$10680$1HvE18 g$rhs*$10681$1HvE18 g$old*$10682$1HvE18 g$new*$10683$1HvE18) (if (null? g$lhs*$10680$1HvE18) (cons 'let (cons (map list g$old*$10682$1HvE18 g$new*$10683$1HvE18) (cons g$b$10677$1HvE18 g$b*$10678$1HvE18))) ((case-lambda ((g$t$10684$1HvE18) ((case-lambda ((g$ls/false$10685$1HvE18) (if (if g$ls/false$10685$1HvE18 (begin '#f (apply (case-lambda ((g$x*$10686$1HvE18) '#t)) g$ls/false$10685$1HvE18)) '#f) (apply (case-lambda ((g$x*$10687$1HvE18) (call-with-values (case-lambda (() (g$rename*$10662$1HvE18 g$x*$10687$1HvE18 g$old*$10682$1HvE18 g$new*$10683$1HvE18))) (case-lambda ((g$y*$10691$1HvE18 g$old*$10692$1HvE18 g$new*$10693$1HvE18) ((case-lambda ((g$new*$10694$1HvE18 g$old*$10695$1HvE18 g$y*$10696$1HvE18) (list 'call-with-values (list 'lambda '() (car g$rhs*$10681$1HvE18)) (list 'lambda g$y*$10696$1HvE18 (g$f$10679$1HvE18 (cdr g$lhs*$10680$1HvE18) (cdr g$rhs*$10681$1HvE18) g$old*$10695$1HvE18 g$new*$10694$1HvE18))))) g$new*$10693$1HvE18 g$old*$10692$1HvE18 g$y*$10691$1HvE18)))))) g$ls/false$10685$1HvE18) ((case-lambda ((g$t$10697$1HvE18) ((case-lambda ((g$ls/false$10698$1HvE18) (if (if g$ls/false$10698$1HvE18 (begin '#f (apply (case-lambda ((g$x*$10699$1HvE18 g$x$10700$1HvE18) '#t)) g$ls/false$10698$1HvE18)) '#f) (apply (case-lambda ((g$x*$10701$1HvE18 g$x$10702$1HvE18) (call-with-values (case-lambda (() (g$rename$10661$1HvE18 g$x$10702$1HvE18 g$old*$10682$1HvE18 g$new*$10683$1HvE18))) (case-lambda ((g$y$10703$1HvE18 g$old*$10704$1HvE18 g$new*$10705$1HvE18) (call-with-values (case-lambda (() (g$rename*$10662$1HvE18 g$x*$10701$1HvE18 g$old*$10704$1HvE18 g$new*$10705$1HvE18))) (case-lambda ((g$y*$10706$1HvE18 g$old*$10707$1HvE18 g$new*$10708$1HvE18) (list 'call-with-values (list 'lambda '() (car g$rhs*$10681$1HvE18)) (list 'lambda (append g$y*$10706$1HvE18 g$y$10703$1HvE18) (g$f$10679$1HvE18 (cdr g$lhs*$10680$1HvE18) (cdr g$rhs*$10681$1HvE18) g$old*$10707$1HvE18 g$new*$10708$1HvE18))))))))))) g$ls/false$10698$1HvE18) ((case-lambda ((g$t$10709$1HvE18) ((case-lambda ((g$ls/false$10710$1HvE18) (if (if g$ls/false$10710$1HvE18 (begin '#f (apply (case-lambda ((g$others$10711$1HvE18) '#t)) g$ls/false$10710$1HvE18)) '#f) (apply (case-lambda ((g$others$10712$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"malformed bindings" g$stx$10660$1HvE18 g$others$10712$1HvE18))) g$ls/false$10710$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10709$1HvE18)))) ((case-lambda ((g$x$10713$1HvE18) (list g$x$10713$1HvE18))) g$t$10709$1HvE18)))) g$t$10697$1HvE18)))) ((letrec ((g$f$10714$1HvE18 (case-lambda ((g$x$10717$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10717$1HvE18) ((case-lambda ((g$cars/f$10718$1HvE18) (if g$cars/f$10718$1HvE18 (begin '#f ((case-lambda ((g$d/f$10719$1HvE18) (if g$d/f$10719$1HvE18 (begin '#f (cons (map cons g$cars/f$10718$1HvE18 (car g$d/f$10719$1HvE18)) (cdr g$d/f$10719$1HvE18))) '#f))) (g$f$10714$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10717$1HvE18)))) '#f))) ((case-lambda ((g$x$10720$1HvE18) (list g$x$10720$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10717$1HvE18))) ((case-lambda ((g$d$10721$1HvE18) (if g$d$10721$1HvE18 (begin '#f (cons (list (begin 'x* '())) g$d$10721$1HvE18)) '#f))) ((case-lambda ((g$x$10722$1HvE18) (list g$x$10722$1HvE18))) g$x$10717$1HvE18))))))) (case-lambda ((g$x$10715$1HvE18) ((case-lambda ((g$x$10716$1HvE18) (if g$x$10716$1HvE18 (begin '#f (append (car g$x$10716$1HvE18) (cdr g$x$10716$1HvE18))) '#f))) (g$f$10714$1HvE18 g$x$10715$1HvE18))))) g$t$10697$1HvE18)))) g$t$10684$1HvE18)))) ((letrec ((g$f$10723$1HvE18 (case-lambda ((g$x$10724$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10724$1HvE18) ((case-lambda ((g$cars/f$10725$1HvE18) (if g$cars/f$10725$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10726$1HvE18) (if g$cdrs/f$10726$1HvE18 (begin '#f (map cons g$cars/f$10725$1HvE18 g$cdrs/f$10726$1HvE18)) '#f))) (g$f$10723$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10724$1HvE18)))) '#f))) ((case-lambda ((g$x$10727$1HvE18) (list g$x$10727$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10724$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10724$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$10723$1HvE18) g$t$10684$1HvE18)))) (car g$lhs*$10680$1HvE18))))))) g$f$10679$1HvE18) g$lhs*$10675$1HvE18 g$rhs*$10676$1HvE18 '() '())))) g$ls/false$10670$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10669$1HvE18)))) ((case-lambda ((g$x$10728$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10728$1HvE18) (begin '#f ((case-lambda ((g$q$10729$1HvE18) (if g$q$10729$1HvE18 (begin '#f ((case-lambda ((g$r$10730$1HvE18) (if g$r$10730$1HvE18 (begin '#f (append g$q$10729$1HvE18 g$r$10730$1HvE18)) '#f))) ((case-lambda ((g$x$10731$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10731$1HvE18) (begin '#f ((case-lambda ((g$q$10732$1HvE18) (if g$q$10732$1HvE18 (begin '#f ((case-lambda ((g$r$10733$1HvE18) (if g$r$10733$1HvE18 (begin '#f (append g$q$10732$1HvE18 g$r$10733$1HvE18)) '#f))) ((case-lambda ((g$x$10734$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10734$1HvE18) (begin '#f ((case-lambda ((g$q$10735$1HvE18) (if g$q$10735$1HvE18 (begin '#f ((case-lambda ((g$r$10736$1HvE18) (if g$r$10736$1HvE18 (begin '#f (append g$q$10735$1HvE18 g$r$10736$1HvE18)) '#f))) ((letrec ((g$f$10737$1HvE18 (case-lambda ((g$x$10738$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10738$1HvE18) ((case-lambda ((g$cars/f$10739$1HvE18) (if g$cars/f$10739$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10740$1HvE18) (if g$cdrs/f$10740$1HvE18 (begin '#f (map cons g$cars/f$10739$1HvE18 g$cdrs/f$10740$1HvE18)) '#f))) (g$f$10737$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10738$1HvE18)))) '#f))) ((case-lambda ((g$x$10741$1HvE18) (list g$x$10741$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10738$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10738$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10737$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10734$1HvE18)))) '#f))) ((case-lambda ((g$x$10742$1HvE18) (list g$x$10742$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10734$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10731$1HvE18)))) '#f))) ((letrec ((g$f$10743$1HvE18 (case-lambda ((g$x$10744$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10744$1HvE18) ((case-lambda ((g$cars/f$10745$1HvE18) (if g$cars/f$10745$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10746$1HvE18) (if g$cdrs/f$10746$1HvE18 (begin '#f (map cons g$cars/f$10745$1HvE18 g$cdrs/f$10746$1HvE18)) '#f))) (g$f$10743$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10744$1HvE18)))) '#f))) ((case-lambda ((g$x$10747$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10747$1HvE18) (begin '#f ((case-lambda ((g$q$10748$1HvE18) (if g$q$10748$1HvE18 (begin '#f ((case-lambda ((g$r$10749$1HvE18) (if g$r$10749$1HvE18 (begin '#f (append g$q$10748$1HvE18 g$r$10749$1HvE18)) '#f))) ((case-lambda ((g$x$10750$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10750$1HvE18) (begin '#f ((case-lambda ((g$q$10751$1HvE18) (if g$q$10751$1HvE18 (begin '#f ((case-lambda ((g$r$10752$1HvE18) (if g$r$10752$1HvE18 (begin '#f (append g$q$10751$1HvE18 g$r$10752$1HvE18)) '#f))) ((case-lambda ((g$x$10753$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10753$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10750$1HvE18)))) '#f))) ((case-lambda ((g$x$10754$1HvE18) (list g$x$10754$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10750$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10747$1HvE18)))) '#f))) ((case-lambda ((g$x$10755$1HvE18) (list g$x$10755$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10747$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$10744$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10744$1HvE18) (list (begin 'lhs* '()) (begin 'rhs* '())) '#f)))))) g$f$10743$1HvE18) (g$syntax-car$9309$1HvE18 g$x$10731$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10728$1HvE18)))) '#f))) ((case-lambda ((g$x$10756$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10728$1HvE18)))) '#f))) g$t$10669$1HvE18)))) g$t$10663$1HvE18)))) ((case-lambda ((g$x$10757$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10757$1HvE18) (begin '#f ((case-lambda ((g$q$10758$1HvE18) (if g$q$10758$1HvE18 (begin '#f ((case-lambda ((g$r$10759$1HvE18) (if g$r$10759$1HvE18 (begin '#f (append g$q$10758$1HvE18 g$r$10759$1HvE18)) '#f))) ((case-lambda ((g$x$10760$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10760$1HvE18) (begin '#f ((case-lambda ((g$q$10761$1HvE18) (if g$q$10761$1HvE18 (begin '#f ((case-lambda ((g$r$10762$1HvE18) (if g$r$10762$1HvE18 (begin '#f (append g$q$10761$1HvE18 g$r$10762$1HvE18)) '#f))) ((case-lambda ((g$x$10763$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10763$1HvE18) (begin '#f ((case-lambda ((g$q$10764$1HvE18) (if g$q$10764$1HvE18 (begin '#f ((case-lambda ((g$r$10765$1HvE18) (if g$r$10765$1HvE18 (begin '#f (append g$q$10764$1HvE18 g$r$10765$1HvE18)) '#f))) ((letrec ((g$f$10766$1HvE18 (case-lambda ((g$x$10767$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10767$1HvE18) ((case-lambda ((g$cars/f$10768$1HvE18) (if g$cars/f$10768$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10769$1HvE18) (if g$cdrs/f$10769$1HvE18 (begin '#f (map cons g$cars/f$10768$1HvE18 g$cdrs/f$10769$1HvE18)) '#f))) (g$f$10766$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10767$1HvE18)))) '#f))) ((case-lambda ((g$x$10770$1HvE18) (list g$x$10770$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10767$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10767$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10766$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10763$1HvE18)))) '#f))) ((case-lambda ((g$x$10771$1HvE18) (list g$x$10771$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10763$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10760$1HvE18)))) '#f))) ((case-lambda ((g$x$10772$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10772$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-car$9309$1HvE18 g$x$10760$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10757$1HvE18)))) '#f))) ((case-lambda ((g$x$10773$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10757$1HvE18)))) '#f))) g$t$10663$1HvE18)))) g$stx$10660$1HvE18))))) (g$let*-values-macro$9562$1HvE18 g$let*-values-macro$15667$1HvE18 (case-lambda ((g$stx$10787$1HvE18) (letrec* ((g$check$10788$1HvE18 (case-lambda ((g$x*$10883$1HvE18) (if (null? g$x*$10883$1HvE18) (void) ((case-lambda ((g$x$10884$1HvE18) (begin (if (g$id?$9312$1HvE18 g$x$10884$1HvE18) (void) (g$syntax-violation$9695$1HvE18 '#f '"not an identifier" g$stx$10787$1HvE18 g$x$10884$1HvE18)) (g$check$10788$1HvE18 (cdr g$x*$10883$1HvE18)) (if (g$bound-id-member?$9319$1HvE18 g$x$10884$1HvE18 (cdr g$x*$10883$1HvE18)) (g$syntax-violation$9695$1HvE18 '#f '"duplicate identifier" g$stx$10787$1HvE18 g$x$10884$1HvE18) (void))))) (car g$x*$10883$1HvE18))))))) ((case-lambda ((g$t$10789$1HvE18) ((case-lambda ((g$ls/false$10790$1HvE18) (if (if g$ls/false$10790$1HvE18 (begin '#f (apply (case-lambda ((g$b$10791$1HvE18 g$b*$10792$1HvE18) '#t)) g$ls/false$10790$1HvE18)) '#f) (apply (case-lambda ((g$b$10793$1HvE18 g$b*$10794$1HvE18) (g$cons*$7967$1HvE18 (g$bless$9557$1HvE18 'let) '() g$b$10793$1HvE18 g$b*$10794$1HvE18))) g$ls/false$10790$1HvE18) ((case-lambda ((g$t$10795$1HvE18) ((case-lambda ((g$ls/false$10796$1HvE18) (if (if g$ls/false$10796$1HvE18 (begin '#f (apply (case-lambda ((g$lhs*$10797$1HvE18 g$rhs*$10798$1HvE18 g$b$10799$1HvE18 g$b*$10800$1HvE18) '#t)) g$ls/false$10796$1HvE18)) '#f) (apply (case-lambda ((g$lhs*$10801$1HvE18 g$rhs*$10802$1HvE18 g$b$10803$1HvE18 g$b*$10804$1HvE18) (g$bless$9557$1HvE18 ((letrec ((g$f$10805$1HvE18 (case-lambda ((g$lhs*$10806$1HvE18 g$rhs*$10807$1HvE18) (if (null? g$lhs*$10806$1HvE18) (cons 'begin (cons g$b$10803$1HvE18 g$b*$10804$1HvE18)) ((case-lambda ((g$t$10808$1HvE18) ((case-lambda ((g$ls/false$10809$1HvE18) (if (if g$ls/false$10809$1HvE18 (begin '#f (apply (case-lambda ((g$x*$10810$1HvE18) '#t)) g$ls/false$10809$1HvE18)) '#f) (apply (case-lambda ((g$x*$10811$1HvE18) (begin (g$check$10788$1HvE18 g$x*$10811$1HvE18) (list 'call-with-values (list 'lambda '() (car g$rhs*$10807$1HvE18)) (list 'lambda g$x*$10811$1HvE18 (g$f$10805$1HvE18 (cdr g$lhs*$10806$1HvE18) (cdr g$rhs*$10807$1HvE18))))))) g$ls/false$10809$1HvE18) ((case-lambda ((g$t$10812$1HvE18) ((case-lambda ((g$ls/false$10813$1HvE18) (if (if g$ls/false$10813$1HvE18 (begin '#f (apply (case-lambda ((g$x*$10814$1HvE18 g$x$10815$1HvE18) '#t)) g$ls/false$10813$1HvE18)) '#f) (apply (case-lambda ((g$x*$10816$1HvE18 g$x$10817$1HvE18) (begin (g$check$10788$1HvE18 (cons g$x$10817$1HvE18 g$x*$10816$1HvE18)) (list 'call-with-values (list 'lambda '() (car g$rhs*$10807$1HvE18)) (list 'lambda (append g$x*$10816$1HvE18 g$x$10817$1HvE18) (g$f$10805$1HvE18 (cdr g$lhs*$10806$1HvE18) (cdr g$rhs*$10807$1HvE18))))))) g$ls/false$10813$1HvE18) ((case-lambda ((g$t$10818$1HvE18) ((case-lambda ((g$ls/false$10819$1HvE18) (if (if g$ls/false$10819$1HvE18 (begin '#f (apply (case-lambda ((g$others$10820$1HvE18) '#t)) g$ls/false$10819$1HvE18)) '#f) (apply (case-lambda ((g$others$10821$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"malformed bindings" g$stx$10787$1HvE18 g$others$10821$1HvE18))) g$ls/false$10819$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10818$1HvE18)))) ((case-lambda ((g$x$10822$1HvE18) (list g$x$10822$1HvE18))) g$t$10818$1HvE18)))) g$t$10812$1HvE18)))) ((letrec ((g$f$10823$1HvE18 (case-lambda ((g$x$10826$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10826$1HvE18) ((case-lambda ((g$cars/f$10827$1HvE18) (if g$cars/f$10827$1HvE18 (begin '#f ((case-lambda ((g$d/f$10828$1HvE18) (if g$d/f$10828$1HvE18 (begin '#f (cons (map cons g$cars/f$10827$1HvE18 (car g$d/f$10828$1HvE18)) (cdr g$d/f$10828$1HvE18))) '#f))) (g$f$10823$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10826$1HvE18)))) '#f))) ((case-lambda ((g$x$10829$1HvE18) (list g$x$10829$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10826$1HvE18))) ((case-lambda ((g$d$10830$1HvE18) (if g$d$10830$1HvE18 (begin '#f (cons (list (begin 'x* '())) g$d$10830$1HvE18)) '#f))) ((case-lambda ((g$x$10831$1HvE18) (list g$x$10831$1HvE18))) g$x$10826$1HvE18))))))) (case-lambda ((g$x$10824$1HvE18) ((case-lambda ((g$x$10825$1HvE18) (if g$x$10825$1HvE18 (begin '#f (append (car g$x$10825$1HvE18) (cdr g$x$10825$1HvE18))) '#f))) (g$f$10823$1HvE18 g$x$10824$1HvE18))))) g$t$10812$1HvE18)))) g$t$10808$1HvE18)))) ((letrec ((g$f$10832$1HvE18 (case-lambda ((g$x$10833$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10833$1HvE18) ((case-lambda ((g$cars/f$10834$1HvE18) (if g$cars/f$10834$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10835$1HvE18) (if g$cdrs/f$10835$1HvE18 (begin '#f (map cons g$cars/f$10834$1HvE18 g$cdrs/f$10835$1HvE18)) '#f))) (g$f$10832$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10833$1HvE18)))) '#f))) ((case-lambda ((g$x$10836$1HvE18) (list g$x$10836$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10833$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10833$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$10832$1HvE18) g$t$10808$1HvE18)))) (car g$lhs*$10806$1HvE18))))))) g$f$10805$1HvE18) g$lhs*$10801$1HvE18 g$rhs*$10802$1HvE18)))) g$ls/false$10796$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10795$1HvE18)))) ((case-lambda ((g$x$10837$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10837$1HvE18) (begin '#f ((case-lambda ((g$q$10838$1HvE18) (if g$q$10838$1HvE18 (begin '#f ((case-lambda ((g$r$10839$1HvE18) (if g$r$10839$1HvE18 (begin '#f (append g$q$10838$1HvE18 g$r$10839$1HvE18)) '#f))) ((case-lambda ((g$x$10840$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10840$1HvE18) (begin '#f ((case-lambda ((g$q$10841$1HvE18) (if g$q$10841$1HvE18 (begin '#f ((case-lambda ((g$r$10842$1HvE18) (if g$r$10842$1HvE18 (begin '#f (append g$q$10841$1HvE18 g$r$10842$1HvE18)) '#f))) ((case-lambda ((g$x$10843$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10843$1HvE18) (begin '#f ((case-lambda ((g$q$10844$1HvE18) (if g$q$10844$1HvE18 (begin '#f ((case-lambda ((g$r$10845$1HvE18) (if g$r$10845$1HvE18 (begin '#f (append g$q$10844$1HvE18 g$r$10845$1HvE18)) '#f))) ((letrec ((g$f$10846$1HvE18 (case-lambda ((g$x$10847$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10847$1HvE18) ((case-lambda ((g$cars/f$10848$1HvE18) (if g$cars/f$10848$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10849$1HvE18) (if g$cdrs/f$10849$1HvE18 (begin '#f (map cons g$cars/f$10848$1HvE18 g$cdrs/f$10849$1HvE18)) '#f))) (g$f$10846$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10847$1HvE18)))) '#f))) ((case-lambda ((g$x$10850$1HvE18) (list g$x$10850$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10847$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10847$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10846$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10843$1HvE18)))) '#f))) ((case-lambda ((g$x$10851$1HvE18) (list g$x$10851$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10843$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10840$1HvE18)))) '#f))) ((letrec ((g$f$10852$1HvE18 (case-lambda ((g$x$10853$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10853$1HvE18) ((case-lambda ((g$cars/f$10854$1HvE18) (if g$cars/f$10854$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10855$1HvE18) (if g$cdrs/f$10855$1HvE18 (begin '#f (map cons g$cars/f$10854$1HvE18 g$cdrs/f$10855$1HvE18)) '#f))) (g$f$10852$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10853$1HvE18)))) '#f))) ((case-lambda ((g$x$10856$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10856$1HvE18) (begin '#f ((case-lambda ((g$q$10857$1HvE18) (if g$q$10857$1HvE18 (begin '#f ((case-lambda ((g$r$10858$1HvE18) (if g$r$10858$1HvE18 (begin '#f (append g$q$10857$1HvE18 g$r$10858$1HvE18)) '#f))) ((case-lambda ((g$x$10859$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10859$1HvE18) (begin '#f ((case-lambda ((g$q$10860$1HvE18) (if g$q$10860$1HvE18 (begin '#f ((case-lambda ((g$r$10861$1HvE18) (if g$r$10861$1HvE18 (begin '#f (append g$q$10860$1HvE18 g$r$10861$1HvE18)) '#f))) ((case-lambda ((g$x$10862$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10862$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10859$1HvE18)))) '#f))) ((case-lambda ((g$x$10863$1HvE18) (list g$x$10863$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10859$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10856$1HvE18)))) '#f))) ((case-lambda ((g$x$10864$1HvE18) (list g$x$10864$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10856$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$10853$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10853$1HvE18) (list (begin 'lhs* '()) (begin 'rhs* '())) '#f)))))) g$f$10852$1HvE18) (g$syntax-car$9309$1HvE18 g$x$10840$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10837$1HvE18)))) '#f))) ((case-lambda ((g$x$10865$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10837$1HvE18)))) '#f))) g$t$10795$1HvE18)))) g$t$10789$1HvE18)))) ((case-lambda ((g$x$10866$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10866$1HvE18) (begin '#f ((case-lambda ((g$q$10867$1HvE18) (if g$q$10867$1HvE18 (begin '#f ((case-lambda ((g$r$10868$1HvE18) (if g$r$10868$1HvE18 (begin '#f (append g$q$10867$1HvE18 g$r$10868$1HvE18)) '#f))) ((case-lambda ((g$x$10869$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10869$1HvE18) (begin '#f ((case-lambda ((g$q$10870$1HvE18) (if g$q$10870$1HvE18 (begin '#f ((case-lambda ((g$r$10871$1HvE18) (if g$r$10871$1HvE18 (begin '#f (append g$q$10870$1HvE18 g$r$10871$1HvE18)) '#f))) ((case-lambda ((g$x$10872$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10872$1HvE18) (begin '#f ((case-lambda ((g$q$10873$1HvE18) (if g$q$10873$1HvE18 (begin '#f ((case-lambda ((g$r$10874$1HvE18) (if g$r$10874$1HvE18 (begin '#f (append g$q$10873$1HvE18 g$r$10874$1HvE18)) '#f))) ((letrec ((g$f$10875$1HvE18 (case-lambda ((g$x$10876$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10876$1HvE18) ((case-lambda ((g$cars/f$10877$1HvE18) (if g$cars/f$10877$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10878$1HvE18) (if g$cdrs/f$10878$1HvE18 (begin '#f (map cons g$cars/f$10877$1HvE18 g$cdrs/f$10878$1HvE18)) '#f))) (g$f$10875$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10876$1HvE18)))) '#f))) ((case-lambda ((g$x$10879$1HvE18) (list g$x$10879$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10876$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10876$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10875$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10872$1HvE18)))) '#f))) ((case-lambda ((g$x$10880$1HvE18) (list g$x$10880$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10872$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10869$1HvE18)))) '#f))) ((case-lambda ((g$x$10881$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$10881$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-car$9309$1HvE18 g$x$10869$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10866$1HvE18)))) '#f))) ((case-lambda ((g$x$10882$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10866$1HvE18)))) '#f))) g$t$10789$1HvE18)))) g$stx$10787$1HvE18))))) (g$trace-lambda-macro$9563$1HvE18 g$trace-lambda-macro$15668$1HvE18 (case-lambda ((g$stx$10885$1HvE18) ((case-lambda ((g$t$10886$1HvE18) ((case-lambda ((g$ls/false$10887$1HvE18) (if (if g$ls/false$10887$1HvE18 (begin '#f (apply (case-lambda ((g$who$10888$1HvE18 g$fmls$10889$1HvE18 g$b$10890$1HvE18 g$b*$10891$1HvE18) '#t)) g$ls/false$10887$1HvE18)) '#f) (apply (case-lambda ((g$who$10892$1HvE18 g$fmls$10893$1HvE18 g$b$10894$1HvE18 g$b*$10895$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 g$fmls$10893$1HvE18) (g$bless$9557$1HvE18 (list 'make-traced-procedure (list 'quote g$who$10892$1HvE18) (cons 'lambda (cons g$fmls$10893$1HvE18 (cons g$b$10894$1HvE18 g$b*$10895$1HvE18))))) (g$invalid-fmls-error$9559$1HvE18 g$stx$10885$1HvE18 g$fmls$10893$1HvE18)))) g$ls/false$10887$1HvE18) ((case-lambda ((g$t$10896$1HvE18) ((case-lambda ((g$ls/false$10897$1HvE18) (if (if g$ls/false$10897$1HvE18 (begin '#f (apply (case-lambda ((g$who$10898$1HvE18 g$fmls$10899$1HvE18 g$last$10900$1HvE18 g$b$10901$1HvE18 g$b*$10902$1HvE18) '#t)) g$ls/false$10897$1HvE18)) '#f) (apply (case-lambda ((g$who$10903$1HvE18 g$fmls$10904$1HvE18 g$last$10905$1HvE18 g$b$10906$1HvE18 g$b*$10907$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 (cons g$last$10905$1HvE18 g$fmls$10904$1HvE18)) (g$bless$9557$1HvE18 (list 'make-traced-procedure (list 'quote g$who$10903$1HvE18) (cons 'lambda (cons (append g$fmls$10904$1HvE18 g$last$10905$1HvE18) (cons g$b$10906$1HvE18 g$b*$10907$1HvE18))))) (g$invalid-fmls-error$9559$1HvE18 g$stx$10885$1HvE18 (append g$fmls$10904$1HvE18 g$last$10905$1HvE18))))) g$ls/false$10897$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10896$1HvE18)))) ((case-lambda ((g$x$10908$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10908$1HvE18) (begin '#f ((case-lambda ((g$q$10909$1HvE18) (if g$q$10909$1HvE18 (begin '#f ((case-lambda ((g$r$10910$1HvE18) (if g$r$10910$1HvE18 (begin '#f (append g$q$10909$1HvE18 g$r$10910$1HvE18)) '#f))) ((case-lambda ((g$x$10911$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10911$1HvE18) (begin '#f ((case-lambda ((g$q$10912$1HvE18) (if g$q$10912$1HvE18 (begin '#f ((case-lambda ((g$r$10913$1HvE18) (if g$r$10913$1HvE18 (begin '#f (append g$q$10912$1HvE18 g$r$10913$1HvE18)) '#f))) ((case-lambda ((g$x$10914$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10914$1HvE18) (begin '#f ((case-lambda ((g$q$10915$1HvE18) (if g$q$10915$1HvE18 (begin '#f ((case-lambda ((g$r$10916$1HvE18) (if g$r$10916$1HvE18 (begin '#f (append g$q$10915$1HvE18 g$r$10916$1HvE18)) '#f))) ((case-lambda ((g$x$10917$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10917$1HvE18) (begin '#f ((case-lambda ((g$q$10918$1HvE18) (if g$q$10918$1HvE18 (begin '#f ((case-lambda ((g$r$10919$1HvE18) (if g$r$10919$1HvE18 (begin '#f (append g$q$10918$1HvE18 g$r$10919$1HvE18)) '#f))) ((letrec ((g$f$10920$1HvE18 (case-lambda ((g$x$10921$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10921$1HvE18) ((case-lambda ((g$cars/f$10922$1HvE18) (if g$cars/f$10922$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10923$1HvE18) (if g$cdrs/f$10923$1HvE18 (begin '#f (map cons g$cars/f$10922$1HvE18 g$cdrs/f$10923$1HvE18)) '#f))) (g$f$10920$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10921$1HvE18)))) '#f))) ((case-lambda ((g$x$10924$1HvE18) (list g$x$10924$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10921$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10921$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10920$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10917$1HvE18)))) '#f))) ((case-lambda ((g$x$10925$1HvE18) (list g$x$10925$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10917$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10914$1HvE18)))) '#f))) ((letrec ((g$f$10926$1HvE18 (case-lambda ((g$x$10929$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10929$1HvE18) ((case-lambda ((g$cars/f$10930$1HvE18) (if g$cars/f$10930$1HvE18 (begin '#f ((case-lambda ((g$d/f$10931$1HvE18) (if g$d/f$10931$1HvE18 (begin '#f (cons (map cons g$cars/f$10930$1HvE18 (car g$d/f$10931$1HvE18)) (cdr g$d/f$10931$1HvE18))) '#f))) (g$f$10926$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10929$1HvE18)))) '#f))) ((case-lambda ((g$x$10932$1HvE18) (list g$x$10932$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10929$1HvE18))) ((case-lambda ((g$d$10933$1HvE18) (if g$d$10933$1HvE18 (begin '#f (cons (list (begin 'fmls '())) g$d$10933$1HvE18)) '#f))) ((case-lambda ((g$x$10934$1HvE18) (list g$x$10934$1HvE18))) g$x$10929$1HvE18))))))) (case-lambda ((g$x$10927$1HvE18) ((case-lambda ((g$x$10928$1HvE18) (if g$x$10928$1HvE18 (begin '#f (append (car g$x$10928$1HvE18) (cdr g$x$10928$1HvE18))) '#f))) (g$f$10926$1HvE18 g$x$10927$1HvE18))))) (g$syntax-car$9309$1HvE18 g$x$10914$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10911$1HvE18)))) '#f))) ((case-lambda ((g$x$10935$1HvE18) (list g$x$10935$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10911$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10908$1HvE18)))) '#f))) ((case-lambda ((g$x$10936$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10908$1HvE18)))) '#f))) g$t$10896$1HvE18)))) g$t$10886$1HvE18)))) ((case-lambda ((g$x$10937$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10937$1HvE18) (begin '#f ((case-lambda ((g$q$10938$1HvE18) (if g$q$10938$1HvE18 (begin '#f ((case-lambda ((g$r$10939$1HvE18) (if g$r$10939$1HvE18 (begin '#f (append g$q$10938$1HvE18 g$r$10939$1HvE18)) '#f))) ((case-lambda ((g$x$10940$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10940$1HvE18) (begin '#f ((case-lambda ((g$q$10941$1HvE18) (if g$q$10941$1HvE18 (begin '#f ((case-lambda ((g$r$10942$1HvE18) (if g$r$10942$1HvE18 (begin '#f (append g$q$10941$1HvE18 g$r$10942$1HvE18)) '#f))) ((case-lambda ((g$x$10943$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10943$1HvE18) (begin '#f ((case-lambda ((g$q$10944$1HvE18) (if g$q$10944$1HvE18 (begin '#f ((case-lambda ((g$r$10945$1HvE18) (if g$r$10945$1HvE18 (begin '#f (append g$q$10944$1HvE18 g$r$10945$1HvE18)) '#f))) ((case-lambda ((g$x$10946$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10946$1HvE18) (begin '#f ((case-lambda ((g$q$10947$1HvE18) (if g$q$10947$1HvE18 (begin '#f ((case-lambda ((g$r$10948$1HvE18) (if g$r$10948$1HvE18 (begin '#f (append g$q$10947$1HvE18 g$r$10948$1HvE18)) '#f))) ((letrec ((g$f$10949$1HvE18 (case-lambda ((g$x$10950$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10950$1HvE18) ((case-lambda ((g$cars/f$10951$1HvE18) (if g$cars/f$10951$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10952$1HvE18) (if g$cdrs/f$10952$1HvE18 (begin '#f (map cons g$cars/f$10951$1HvE18 g$cdrs/f$10952$1HvE18)) '#f))) (g$f$10949$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10950$1HvE18)))) '#f))) ((case-lambda ((g$x$10953$1HvE18) (list g$x$10953$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10950$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10950$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$10949$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$10946$1HvE18)))) '#f))) ((case-lambda ((g$x$10954$1HvE18) (list g$x$10954$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10946$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10943$1HvE18)))) '#f))) ((letrec ((g$f$10955$1HvE18 (case-lambda ((g$x$10956$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10956$1HvE18) ((case-lambda ((g$cars/f$10957$1HvE18) (if g$cars/f$10957$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$10958$1HvE18) (if g$cdrs/f$10958$1HvE18 (begin '#f (map cons g$cars/f$10957$1HvE18 g$cdrs/f$10958$1HvE18)) '#f))) (g$f$10955$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$10956$1HvE18)))) '#f))) ((case-lambda ((g$x$10959$1HvE18) (list g$x$10959$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10956$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$10956$1HvE18) (list (begin 'fmls '())) '#f)))))) g$f$10955$1HvE18) (g$syntax-car$9309$1HvE18 g$x$10943$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10940$1HvE18)))) '#f))) ((case-lambda ((g$x$10960$1HvE18) (list g$x$10960$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10940$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10937$1HvE18)))) '#f))) ((case-lambda ((g$x$10961$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10937$1HvE18)))) '#f))) g$t$10886$1HvE18)))) g$stx$10885$1HvE18)))) (g$trace-define-macro$9564$1HvE18 g$trace-define-macro$15669$1HvE18 (case-lambda ((g$stx$10962$1HvE18) ((case-lambda ((g$t$10963$1HvE18) ((case-lambda ((g$ls/false$10964$1HvE18) (if (if g$ls/false$10964$1HvE18 (begin '#f (apply (case-lambda ((g$who$10965$1HvE18 g$fmls$10966$1HvE18 g$b$10967$1HvE18 g$b*$10968$1HvE18) '#t)) g$ls/false$10964$1HvE18)) '#f) (apply (case-lambda ((g$who$10969$1HvE18 g$fmls$10970$1HvE18 g$b$10971$1HvE18 g$b*$10972$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 g$fmls$10970$1HvE18) (g$bless$9557$1HvE18 (list 'define g$who$10969$1HvE18 (list 'make-traced-procedure (list 'quote g$who$10969$1HvE18) (cons 'lambda (cons g$fmls$10970$1HvE18 (cons g$b$10971$1HvE18 g$b*$10972$1HvE18)))))) (g$invalid-fmls-error$9559$1HvE18 g$stx$10962$1HvE18 g$fmls$10970$1HvE18)))) g$ls/false$10964$1HvE18) ((case-lambda ((g$t$10973$1HvE18) ((case-lambda ((g$ls/false$10974$1HvE18) (if (if g$ls/false$10974$1HvE18 (begin '#f (apply (case-lambda ((g$who$10975$1HvE18 g$fmls$10976$1HvE18 g$last$10977$1HvE18 g$b$10978$1HvE18 g$b*$10979$1HvE18) '#t)) g$ls/false$10974$1HvE18)) '#f) (apply (case-lambda ((g$who$10980$1HvE18 g$fmls$10981$1HvE18 g$last$10982$1HvE18 g$b$10983$1HvE18 g$b*$10984$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 (cons g$last$10982$1HvE18 g$fmls$10981$1HvE18)) (g$bless$9557$1HvE18 (list 'define g$who$10980$1HvE18 (list 'make-traced-procedure (list 'quote g$who$10980$1HvE18) (cons 'lambda (cons (append g$fmls$10981$1HvE18 g$last$10982$1HvE18) (cons g$b$10983$1HvE18 g$b*$10984$1HvE18)))))) (g$invalid-fmls-error$9559$1HvE18 g$stx$10962$1HvE18 (append g$fmls$10981$1HvE18 g$last$10982$1HvE18))))) g$ls/false$10974$1HvE18) ((case-lambda ((g$t$10985$1HvE18) ((case-lambda ((g$ls/false$10986$1HvE18) (if (if g$ls/false$10986$1HvE18 (begin '#f (apply (case-lambda ((g$who$10987$1HvE18 g$expr$10988$1HvE18) '#t)) g$ls/false$10986$1HvE18)) '#f) (apply (case-lambda ((g$who$10989$1HvE18 g$expr$10990$1HvE18) (if (g$id?$9312$1HvE18 g$who$10989$1HvE18) (g$bless$9557$1HvE18 (list 'define g$who$10989$1HvE18 (list 'let (list (list 'v g$expr$10990$1HvE18)) (cons 'if (cons '(procedure? v) (cons (cons 'make-traced-procedure (cons (list 'quote g$who$10989$1HvE18) '(v))) '((assertion-violation 'trace-define "not a procedure" v)))))))) (g$syntax-violation$9695$1HvE18 '#f '"invalid name" g$stx$10962$1HvE18)))) g$ls/false$10986$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$10985$1HvE18)))) ((case-lambda ((g$x$10991$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10991$1HvE18) (begin '#f ((case-lambda ((g$q$10992$1HvE18) (if g$q$10992$1HvE18 (begin '#f ((case-lambda ((g$r$10993$1HvE18) (if g$r$10993$1HvE18 (begin '#f (append g$q$10992$1HvE18 g$r$10993$1HvE18)) '#f))) ((case-lambda ((g$x$10994$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10994$1HvE18) (begin '#f ((case-lambda ((g$q$10995$1HvE18) (if g$q$10995$1HvE18 (begin '#f ((case-lambda ((g$r$10996$1HvE18) (if g$r$10996$1HvE18 (begin '#f (append g$q$10995$1HvE18 g$r$10996$1HvE18)) '#f))) ((case-lambda ((g$x$10997$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$10997$1HvE18) (begin '#f ((case-lambda ((g$q$10998$1HvE18) (if g$q$10998$1HvE18 (begin '#f ((case-lambda ((g$r$10999$1HvE18) (if g$r$10999$1HvE18 (begin '#f (append g$q$10998$1HvE18 g$r$10999$1HvE18)) '#f))) ((case-lambda ((g$x$11000$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11000$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10997$1HvE18)))) '#f))) ((case-lambda ((g$x$11001$1HvE18) (list g$x$11001$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10997$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10994$1HvE18)))) '#f))) ((case-lambda ((g$x$11002$1HvE18) (list g$x$11002$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$10994$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$10991$1HvE18)))) '#f))) ((case-lambda ((g$x$11003$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$10991$1HvE18)))) '#f))) g$t$10985$1HvE18)))) g$t$10973$1HvE18)))) ((case-lambda ((g$x$11004$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11004$1HvE18) (begin '#f ((case-lambda ((g$q$11005$1HvE18) (if g$q$11005$1HvE18 (begin '#f ((case-lambda ((g$r$11006$1HvE18) (if g$r$11006$1HvE18 (begin '#f (append g$q$11005$1HvE18 g$r$11006$1HvE18)) '#f))) ((case-lambda ((g$x$11007$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11007$1HvE18) (begin '#f ((case-lambda ((g$q$11008$1HvE18) (if g$q$11008$1HvE18 (begin '#f ((case-lambda ((g$r$11009$1HvE18) (if g$r$11009$1HvE18 (begin '#f (append g$q$11008$1HvE18 g$r$11009$1HvE18)) '#f))) ((case-lambda ((g$x$11010$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11010$1HvE18) (begin '#f ((case-lambda ((g$q$11011$1HvE18) (if g$q$11011$1HvE18 (begin '#f ((case-lambda ((g$r$11012$1HvE18) (if g$r$11012$1HvE18 (begin '#f (append g$q$11011$1HvE18 g$r$11012$1HvE18)) '#f))) ((letrec ((g$f$11013$1HvE18 (case-lambda ((g$x$11014$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11014$1HvE18) ((case-lambda ((g$cars/f$11015$1HvE18) (if g$cars/f$11015$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11016$1HvE18) (if g$cdrs/f$11016$1HvE18 (begin '#f (map cons g$cars/f$11015$1HvE18 g$cdrs/f$11016$1HvE18)) '#f))) (g$f$11013$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11014$1HvE18)))) '#f))) ((case-lambda ((g$x$11017$1HvE18) (list g$x$11017$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11014$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11014$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$11013$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11010$1HvE18)))) '#f))) ((case-lambda ((g$x$11018$1HvE18) (list g$x$11018$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11010$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11007$1HvE18)))) '#f))) ((case-lambda ((g$x$11019$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11019$1HvE18) (begin '#f ((case-lambda ((g$q$11020$1HvE18) (if g$q$11020$1HvE18 (begin '#f ((case-lambda ((g$r$11021$1HvE18) (if g$r$11021$1HvE18 (begin '#f (append g$q$11020$1HvE18 g$r$11021$1HvE18)) '#f))) ((letrec ((g$f$11022$1HvE18 (case-lambda ((g$x$11025$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11025$1HvE18) ((case-lambda ((g$cars/f$11026$1HvE18) (if g$cars/f$11026$1HvE18 (begin '#f ((case-lambda ((g$d/f$11027$1HvE18) (if g$d/f$11027$1HvE18 (begin '#f (cons (map cons g$cars/f$11026$1HvE18 (car g$d/f$11027$1HvE18)) (cdr g$d/f$11027$1HvE18))) '#f))) (g$f$11022$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11025$1HvE18)))) '#f))) ((case-lambda ((g$x$11028$1HvE18) (list g$x$11028$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11025$1HvE18))) ((case-lambda ((g$d$11029$1HvE18) (if g$d$11029$1HvE18 (begin '#f (cons (list (begin 'fmls '())) g$d$11029$1HvE18)) '#f))) ((case-lambda ((g$x$11030$1HvE18) (list g$x$11030$1HvE18))) g$x$11025$1HvE18))))))) (case-lambda ((g$x$11023$1HvE18) ((case-lambda ((g$x$11024$1HvE18) (if g$x$11024$1HvE18 (begin '#f (append (car g$x$11024$1HvE18) (cdr g$x$11024$1HvE18))) '#f))) (g$f$11022$1HvE18 g$x$11023$1HvE18))))) (g$syntax-cdr$9310$1HvE18 g$x$11019$1HvE18)))) '#f))) ((case-lambda ((g$x$11031$1HvE18) (list g$x$11031$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11019$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11007$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11004$1HvE18)))) '#f))) ((case-lambda ((g$x$11032$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11004$1HvE18)))) '#f))) g$t$10973$1HvE18)))) g$t$10963$1HvE18)))) ((case-lambda ((g$x$11033$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11033$1HvE18) (begin '#f ((case-lambda ((g$q$11034$1HvE18) (if g$q$11034$1HvE18 (begin '#f ((case-lambda ((g$r$11035$1HvE18) (if g$r$11035$1HvE18 (begin '#f (append g$q$11034$1HvE18 g$r$11035$1HvE18)) '#f))) ((case-lambda ((g$x$11036$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11036$1HvE18) (begin '#f ((case-lambda ((g$q$11037$1HvE18) (if g$q$11037$1HvE18 (begin '#f ((case-lambda ((g$r$11038$1HvE18) (if g$r$11038$1HvE18 (begin '#f (append g$q$11037$1HvE18 g$r$11038$1HvE18)) '#f))) ((case-lambda ((g$x$11039$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11039$1HvE18) (begin '#f ((case-lambda ((g$q$11040$1HvE18) (if g$q$11040$1HvE18 (begin '#f ((case-lambda ((g$r$11041$1HvE18) (if g$r$11041$1HvE18 (begin '#f (append g$q$11040$1HvE18 g$r$11041$1HvE18)) '#f))) ((letrec ((g$f$11042$1HvE18 (case-lambda ((g$x$11043$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11043$1HvE18) ((case-lambda ((g$cars/f$11044$1HvE18) (if g$cars/f$11044$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11045$1HvE18) (if g$cdrs/f$11045$1HvE18 (begin '#f (map cons g$cars/f$11044$1HvE18 g$cdrs/f$11045$1HvE18)) '#f))) (g$f$11042$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11043$1HvE18)))) '#f))) ((case-lambda ((g$x$11046$1HvE18) (list g$x$11046$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11043$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11043$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$11042$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11039$1HvE18)))) '#f))) ((case-lambda ((g$x$11047$1HvE18) (list g$x$11047$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11039$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11036$1HvE18)))) '#f))) ((case-lambda ((g$x$11048$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11048$1HvE18) (begin '#f ((case-lambda ((g$q$11049$1HvE18) (if g$q$11049$1HvE18 (begin '#f ((case-lambda ((g$r$11050$1HvE18) (if g$r$11050$1HvE18 (begin '#f (append g$q$11049$1HvE18 g$r$11050$1HvE18)) '#f))) ((letrec ((g$f$11051$1HvE18 (case-lambda ((g$x$11052$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11052$1HvE18) ((case-lambda ((g$cars/f$11053$1HvE18) (if g$cars/f$11053$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11054$1HvE18) (if g$cdrs/f$11054$1HvE18 (begin '#f (map cons g$cars/f$11053$1HvE18 g$cdrs/f$11054$1HvE18)) '#f))) (g$f$11051$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11052$1HvE18)))) '#f))) ((case-lambda ((g$x$11055$1HvE18) (list g$x$11055$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11052$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11052$1HvE18) (list (begin 'fmls '())) '#f)))))) g$f$11051$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11048$1HvE18)))) '#f))) ((case-lambda ((g$x$11056$1HvE18) (list g$x$11056$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11048$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11036$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11033$1HvE18)))) '#f))) ((case-lambda ((g$x$11057$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11033$1HvE18)))) '#f))) g$t$10963$1HvE18)))) g$stx$10962$1HvE18)))) (g$trace-define-syntax-macro$9565$1HvE18 g$trace-define-syntax-macro$15670$1HvE18 (case-lambda ((g$stx$11058$1HvE18) ((case-lambda ((g$t$11059$1HvE18) ((case-lambda ((g$ls/false$11060$1HvE18) (if (if g$ls/false$11060$1HvE18 (begin '#f (apply (case-lambda ((g$who$11061$1HvE18 g$expr$11062$1HvE18) '#t)) g$ls/false$11060$1HvE18)) '#f) (apply (case-lambda ((g$who$11063$1HvE18 g$expr$11064$1HvE18) (if (g$id?$9312$1HvE18 g$who$11063$1HvE18) (g$bless$9557$1HvE18 (list 'define-syntax g$who$11063$1HvE18 (list 'let (list (list 'v g$expr$11064$1HvE18)) (cons 'if (cons '(procedure? v) (cons (cons 'make-traced-procedure (cons (list 'quote g$who$11063$1HvE18) '(v syntax->datum))) '((assertion-violation 'trace-define-syntax "not a procedure" v)))))))) (g$syntax-violation$9695$1HvE18 '#f '"invalid name" g$stx$11058$1HvE18)))) g$ls/false$11060$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11059$1HvE18)))) ((case-lambda ((g$x$11065$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11065$1HvE18) (begin '#f ((case-lambda ((g$q$11066$1HvE18) (if g$q$11066$1HvE18 (begin '#f ((case-lambda ((g$r$11067$1HvE18) (if g$r$11067$1HvE18 (begin '#f (append g$q$11066$1HvE18 g$r$11067$1HvE18)) '#f))) ((case-lambda ((g$x$11068$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11068$1HvE18) (begin '#f ((case-lambda ((g$q$11069$1HvE18) (if g$q$11069$1HvE18 (begin '#f ((case-lambda ((g$r$11070$1HvE18) (if g$r$11070$1HvE18 (begin '#f (append g$q$11069$1HvE18 g$r$11070$1HvE18)) '#f))) ((case-lambda ((g$x$11071$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11071$1HvE18) (begin '#f ((case-lambda ((g$q$11072$1HvE18) (if g$q$11072$1HvE18 (begin '#f ((case-lambda ((g$r$11073$1HvE18) (if g$r$11073$1HvE18 (begin '#f (append g$q$11072$1HvE18 g$r$11073$1HvE18)) '#f))) ((case-lambda ((g$x$11074$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11074$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11071$1HvE18)))) '#f))) ((case-lambda ((g$x$11075$1HvE18) (list g$x$11075$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11071$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11068$1HvE18)))) '#f))) ((case-lambda ((g$x$11076$1HvE18) (list g$x$11076$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11068$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11065$1HvE18)))) '#f))) ((case-lambda ((g$x$11077$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11065$1HvE18)))) '#f))) g$t$11059$1HvE18)))) g$stx$11058$1HvE18)))) (g$guard-macro$9566$1HvE18 g$guard-macro$15671$1HvE18 (case-lambda ((g$x$11078$1HvE18) (letrec* ((g$gen-clauses$11079$1HvE18 (case-lambda ((g$con$11116$1HvE18 g$outerk$11117$1HvE18 g$clause*$11118$1HvE18) (letrec* ((g$f$11119$1HvE18 (case-lambda ((g$x$11177$1HvE18 g$k$11178$1HvE18) ((case-lambda ((g$t$11179$1HvE18) ((case-lambda ((g$ls/false$11180$1HvE18) (if (if g$ls/false$11180$1HvE18 (begin '#f (apply (case-lambda ((g$e$11181$1HvE18 g$p$11182$1HvE18) '#t)) g$ls/false$11180$1HvE18)) '#f) (apply (case-lambda ((g$e$11183$1HvE18 g$p$11184$1HvE18) ((case-lambda ((g$t$11185$1HvE18) (list 'let (list (list g$t$11185$1HvE18 g$e$11183$1HvE18)) (list 'if g$t$11185$1HvE18 (list g$p$11184$1HvE18 g$t$11185$1HvE18) g$k$11178$1HvE18)))) (gensym)))) g$ls/false$11180$1HvE18) ((case-lambda ((g$t$11186$1HvE18) ((case-lambda ((g$ls/false$11187$1HvE18) (if (if g$ls/false$11187$1HvE18 (begin '#f (apply (case-lambda ((g$e$11188$1HvE18) '#t)) g$ls/false$11187$1HvE18)) '#f) (apply (case-lambda ((g$e$11189$1HvE18) ((case-lambda ((g$t$11190$1HvE18) (list 'let (list (list g$t$11190$1HvE18 g$e$11189$1HvE18)) (list 'if g$t$11190$1HvE18 g$t$11190$1HvE18 g$k$11178$1HvE18)))) (gensym)))) g$ls/false$11187$1HvE18) ((case-lambda ((g$t$11191$1HvE18) ((case-lambda ((g$ls/false$11192$1HvE18) (if (if g$ls/false$11192$1HvE18 (begin '#f (apply (case-lambda ((g$e$11193$1HvE18 g$v$11194$1HvE18 g$v*$11195$1HvE18) '#t)) g$ls/false$11192$1HvE18)) '#f) (apply (case-lambda ((g$e$11196$1HvE18 g$v$11197$1HvE18 g$v*$11198$1HvE18) (list 'if g$e$11196$1HvE18 (cons 'begin (cons g$v$11197$1HvE18 g$v*$11198$1HvE18)) g$k$11178$1HvE18))) g$ls/false$11192$1HvE18) ((case-lambda ((g$t$11199$1HvE18) ((case-lambda ((g$ls/false$11200$1HvE18) (if (if g$ls/false$11200$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$11200$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"invalid guard clause" g$x$11177$1HvE18))) g$ls/false$11200$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11199$1HvE18)))) ((case-lambda ((g$x$11201$1HvE18) '())) g$t$11199$1HvE18)))) g$t$11191$1HvE18)))) ((case-lambda ((g$x$11202$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11202$1HvE18) (begin '#f ((case-lambda ((g$q$11203$1HvE18) (if g$q$11203$1HvE18 (begin '#f ((case-lambda ((g$r$11204$1HvE18) (if g$r$11204$1HvE18 (begin '#f (append g$q$11203$1HvE18 g$r$11204$1HvE18)) '#f))) ((case-lambda ((g$x$11205$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11205$1HvE18) (begin '#f ((case-lambda ((g$q$11206$1HvE18) (if g$q$11206$1HvE18 (begin '#f ((case-lambda ((g$r$11207$1HvE18) (if g$r$11207$1HvE18 (begin '#f (append g$q$11206$1HvE18 g$r$11207$1HvE18)) '#f))) ((letrec ((g$f$11208$1HvE18 (case-lambda ((g$x$11209$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11209$1HvE18) ((case-lambda ((g$cars/f$11210$1HvE18) (if g$cars/f$11210$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11211$1HvE18) (if g$cdrs/f$11211$1HvE18 (begin '#f (map cons g$cars/f$11210$1HvE18 g$cdrs/f$11211$1HvE18)) '#f))) (g$f$11208$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11209$1HvE18)))) '#f))) ((case-lambda ((g$x$11212$1HvE18) (list g$x$11212$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11209$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11209$1HvE18) (list (begin 'v* '())) '#f)))))) g$f$11208$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11205$1HvE18)))) '#f))) ((case-lambda ((g$x$11213$1HvE18) (list g$x$11213$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11205$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11202$1HvE18)))) '#f))) ((case-lambda ((g$x$11214$1HvE18) (list g$x$11214$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11202$1HvE18)))) '#f))) g$t$11191$1HvE18)))) g$t$11186$1HvE18)))) ((case-lambda ((g$x$11215$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11215$1HvE18) (begin '#f ((case-lambda ((g$q$11216$1HvE18) (if g$q$11216$1HvE18 (begin '#f ((case-lambda ((g$r$11217$1HvE18) (if g$r$11217$1HvE18 (begin '#f (append g$q$11216$1HvE18 g$r$11217$1HvE18)) '#f))) ((case-lambda ((g$x$11218$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11218$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11215$1HvE18)))) '#f))) ((case-lambda ((g$x$11219$1HvE18) (list g$x$11219$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11215$1HvE18)))) '#f))) g$t$11186$1HvE18)))) g$t$11179$1HvE18)))) ((case-lambda ((g$x$11220$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11220$1HvE18) (begin '#f ((case-lambda ((g$q$11221$1HvE18) (if g$q$11221$1HvE18 (begin '#f ((case-lambda ((g$r$11222$1HvE18) (if g$r$11222$1HvE18 (begin '#f (append g$q$11221$1HvE18 g$r$11222$1HvE18)) '#f))) ((case-lambda ((g$x$11223$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11223$1HvE18) (begin '#f ((case-lambda ((g$q$11224$1HvE18) (if g$q$11224$1HvE18 (begin '#f ((case-lambda ((g$r$11225$1HvE18) (if g$r$11225$1HvE18 (begin '#f (append g$q$11224$1HvE18 g$r$11225$1HvE18)) '#f))) ((case-lambda ((g$x$11226$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11226$1HvE18) (begin '#f ((case-lambda ((g$q$11227$1HvE18) (if g$q$11227$1HvE18 (begin '#f ((case-lambda ((g$r$11228$1HvE18) (if g$r$11228$1HvE18 (begin '#f (append g$q$11227$1HvE18 g$r$11228$1HvE18)) '#f))) ((case-lambda ((g$x$11229$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11229$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11226$1HvE18)))) '#f))) ((case-lambda ((g$x$11230$1HvE18) (list g$x$11230$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11226$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11223$1HvE18)))) '#f))) ((case-lambda ((g$x$11231$1HvE18) (if (g$id?$9312$1HvE18 g$x$11231$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11231$1HvE18 (g$scheme-stx$9537$1HvE18 '=>)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11223$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11220$1HvE18)))) '#f))) ((case-lambda ((g$x$11232$1HvE18) (list g$x$11232$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11220$1HvE18)))) '#f))) g$t$11179$1HvE18)))) g$x$11177$1HvE18)))) (g$f*$11120$1HvE18 (case-lambda ((g$x*$11127$1HvE18) ((case-lambda ((g$t$11128$1HvE18) ((case-lambda ((g$ls/false$11129$1HvE18) (if (if g$ls/false$11129$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$11129$1HvE18)) '#f) (apply (case-lambda (() ((case-lambda ((g$g$11130$1HvE18) (values (list g$g$11130$1HvE18 (list 'lambda '() (list 'raise g$con$11116$1HvE18))) g$g$11130$1HvE18))) (gensym)))) g$ls/false$11129$1HvE18) ((case-lambda ((g$t$11131$1HvE18) ((case-lambda ((g$ls/false$11132$1HvE18) (if (if g$ls/false$11132$1HvE18 (begin '#f (apply (case-lambda ((g$e$11133$1HvE18 g$e*$11134$1HvE18) '#t)) g$ls/false$11132$1HvE18)) '#f) (apply (case-lambda ((g$e$11135$1HvE18 g$e*$11136$1HvE18) (values (cons 'begin (cons g$e$11135$1HvE18 g$e*$11136$1HvE18)) '#f))) g$ls/false$11132$1HvE18) ((case-lambda ((g$t$11137$1HvE18) ((case-lambda ((g$ls/false$11138$1HvE18) (if (if g$ls/false$11138$1HvE18 (begin '#f (apply (case-lambda ((g$cls$11139$1HvE18 g$cls*$11140$1HvE18) '#t)) g$ls/false$11138$1HvE18)) '#f) (apply (case-lambda ((g$cls$11141$1HvE18 g$cls*$11142$1HvE18) (call-with-values (case-lambda (() (g$f*$11120$1HvE18 g$cls*$11142$1HvE18))) (case-lambda ((g$e$11145$1HvE18 g$g$11146$1HvE18) ((case-lambda ((g$g$11147$1HvE18 g$e$11148$1HvE18) (values (g$f$11119$1HvE18 g$cls$11141$1HvE18 g$e$11148$1HvE18) g$g$11147$1HvE18))) g$g$11146$1HvE18 g$e$11145$1HvE18)))))) g$ls/false$11138$1HvE18) ((case-lambda ((g$t$11149$1HvE18) ((case-lambda ((g$ls/false$11150$1HvE18) (if (if g$ls/false$11150$1HvE18 (begin '#f (apply (case-lambda ((g$others$11151$1HvE18) '#t)) g$ls/false$11150$1HvE18)) '#f) (apply (case-lambda ((g$others$11152$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid guard clause" g$others$11152$1HvE18))) g$ls/false$11150$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11149$1HvE18)))) ((case-lambda ((g$x$11153$1HvE18) (list g$x$11153$1HvE18))) g$t$11149$1HvE18)))) g$t$11137$1HvE18)))) ((case-lambda ((g$x$11154$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11154$1HvE18) (begin '#f ((case-lambda ((g$q$11155$1HvE18) (if g$q$11155$1HvE18 (begin '#f ((case-lambda ((g$r$11156$1HvE18) (if g$r$11156$1HvE18 (begin '#f (append g$q$11155$1HvE18 g$r$11156$1HvE18)) '#f))) ((case-lambda ((g$x$11157$1HvE18) (list g$x$11157$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$11154$1HvE18)))) '#f))) ((case-lambda ((g$x$11158$1HvE18) (list g$x$11158$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11154$1HvE18)))) '#f))) g$t$11137$1HvE18)))) g$t$11131$1HvE18)))) ((case-lambda ((g$x$11159$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11159$1HvE18) (begin '#f ((case-lambda ((g$q$11160$1HvE18) (if g$q$11160$1HvE18 (begin '#f ((case-lambda ((g$r$11161$1HvE18) (if g$r$11161$1HvE18 (begin '#f (append g$q$11160$1HvE18 g$r$11161$1HvE18)) '#f))) ((case-lambda ((g$x$11162$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11162$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11159$1HvE18)))) '#f))) ((case-lambda ((g$x$11163$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11163$1HvE18) (begin '#f ((case-lambda ((g$q$11164$1HvE18) (if g$q$11164$1HvE18 (begin '#f ((case-lambda ((g$r$11165$1HvE18) (if g$r$11165$1HvE18 (begin '#f (append g$q$11164$1HvE18 g$r$11165$1HvE18)) '#f))) ((case-lambda ((g$x$11166$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11166$1HvE18) (begin '#f ((case-lambda ((g$q$11167$1HvE18) (if g$q$11167$1HvE18 (begin '#f ((case-lambda ((g$r$11168$1HvE18) (if g$r$11168$1HvE18 (begin '#f (append g$q$11167$1HvE18 g$r$11168$1HvE18)) '#f))) ((letrec ((g$f$11169$1HvE18 (case-lambda ((g$x$11170$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11170$1HvE18) ((case-lambda ((g$cars/f$11171$1HvE18) (if g$cars/f$11171$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11172$1HvE18) (if g$cdrs/f$11172$1HvE18 (begin '#f (map cons g$cars/f$11171$1HvE18 g$cdrs/f$11172$1HvE18)) '#f))) (g$f$11169$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11170$1HvE18)))) '#f))) ((case-lambda ((g$x$11173$1HvE18) (list g$x$11173$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11170$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11170$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$11169$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11166$1HvE18)))) '#f))) ((case-lambda ((g$x$11174$1HvE18) (list g$x$11174$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11166$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11163$1HvE18)))) '#f))) ((case-lambda ((g$x$11175$1HvE18) (if (g$id?$9312$1HvE18 g$x$11175$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11175$1HvE18 (g$scheme-stx$9537$1HvE18 'else)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11163$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11159$1HvE18)))) '#f))) g$t$11131$1HvE18)))) g$t$11128$1HvE18)))) ((case-lambda ((g$x$11176$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11176$1HvE18) '()) (begin '#f '()) '#f))) g$t$11128$1HvE18)))) g$x*$11127$1HvE18))))) (call-with-values (case-lambda (() (g$f*$11120$1HvE18 g$clause*$11118$1HvE18))) (case-lambda ((g$code$11123$1HvE18 g$raisek$11124$1HvE18) ((case-lambda ((g$raisek$11125$1HvE18 g$code$11126$1HvE18) (if g$raisek$11125$1HvE18 (list (list 'call/cc (list 'lambda (list g$raisek$11125$1HvE18) (list g$outerk$11117$1HvE18 (list 'lambda '() g$code$11126$1HvE18))))) (list g$outerk$11117$1HvE18 (list 'lambda '() g$code$11126$1HvE18))))) g$raisek$11124$1HvE18 g$code$11123$1HvE18))))))))) ((case-lambda ((g$t$11080$1HvE18) ((case-lambda ((g$ls/false$11081$1HvE18) (if (if g$ls/false$11081$1HvE18 (begin '#f (apply (case-lambda ((g$con$11082$1HvE18 g$clause*$11083$1HvE18 g$b$11084$1HvE18 g$b*$11085$1HvE18) (g$id?$9312$1HvE18 g$con$11082$1HvE18))) g$ls/false$11081$1HvE18)) '#f) (apply (case-lambda ((g$con$11086$1HvE18 g$clause*$11087$1HvE18 g$b$11088$1HvE18 g$b*$11089$1HvE18) ((case-lambda ((g$outerk$11090$1HvE18) (g$bless$9557$1HvE18 (list (list 'call/cc (list 'lambda (list g$outerk$11090$1HvE18) (list 'lambda '() (list 'with-exception-handler (list 'lambda (list g$con$11086$1HvE18) (g$gen-clauses$11079$1HvE18 g$con$11086$1HvE18 g$outerk$11090$1HvE18 g$clause*$11087$1HvE18)) (cons 'lambda (cons '() (cons '#f (cons g$b$11088$1HvE18 g$b*$11089$1HvE18)))))))))))) (gensym)))) g$ls/false$11081$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11080$1HvE18)))) ((case-lambda ((g$x$11091$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11091$1HvE18) (begin '#f ((case-lambda ((g$q$11092$1HvE18) (if g$q$11092$1HvE18 (begin '#f ((case-lambda ((g$r$11093$1HvE18) (if g$r$11093$1HvE18 (begin '#f (append g$q$11092$1HvE18 g$r$11093$1HvE18)) '#f))) ((case-lambda ((g$x$11094$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11094$1HvE18) (begin '#f ((case-lambda ((g$q$11095$1HvE18) (if g$q$11095$1HvE18 (begin '#f ((case-lambda ((g$r$11096$1HvE18) (if g$r$11096$1HvE18 (begin '#f (append g$q$11095$1HvE18 g$r$11096$1HvE18)) '#f))) ((case-lambda ((g$x$11097$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11097$1HvE18) (begin '#f ((case-lambda ((g$q$11098$1HvE18) (if g$q$11098$1HvE18 (begin '#f ((case-lambda ((g$r$11099$1HvE18) (if g$r$11099$1HvE18 (begin '#f (append g$q$11098$1HvE18 g$r$11099$1HvE18)) '#f))) ((letrec ((g$f$11100$1HvE18 (case-lambda ((g$x$11101$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11101$1HvE18) ((case-lambda ((g$cars/f$11102$1HvE18) (if g$cars/f$11102$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11103$1HvE18) (if g$cdrs/f$11103$1HvE18 (begin '#f (map cons g$cars/f$11102$1HvE18 g$cdrs/f$11103$1HvE18)) '#f))) (g$f$11100$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11101$1HvE18)))) '#f))) ((case-lambda ((g$x$11104$1HvE18) (list g$x$11104$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11101$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11101$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$11100$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11097$1HvE18)))) '#f))) ((case-lambda ((g$x$11105$1HvE18) (list g$x$11105$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11097$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11094$1HvE18)))) '#f))) ((case-lambda ((g$x$11106$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11106$1HvE18) (begin '#f ((case-lambda ((g$q$11107$1HvE18) (if g$q$11107$1HvE18 (begin '#f ((case-lambda ((g$r$11108$1HvE18) (if g$r$11108$1HvE18 (begin '#f (append g$q$11107$1HvE18 g$r$11108$1HvE18)) '#f))) ((letrec ((g$f$11109$1HvE18 (case-lambda ((g$x$11110$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11110$1HvE18) ((case-lambda ((g$cars/f$11111$1HvE18) (if g$cars/f$11111$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11112$1HvE18) (if g$cdrs/f$11112$1HvE18 (begin '#f (map cons g$cars/f$11111$1HvE18 g$cdrs/f$11112$1HvE18)) '#f))) (g$f$11109$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11110$1HvE18)))) '#f))) ((case-lambda ((g$x$11113$1HvE18) (list g$x$11113$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11110$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11110$1HvE18) (list (begin 'clause* '())) '#f)))))) g$f$11109$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11106$1HvE18)))) '#f))) ((case-lambda ((g$x$11114$1HvE18) (list g$x$11114$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11106$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11094$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11091$1HvE18)))) '#f))) ((case-lambda ((g$x$11115$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11091$1HvE18)))) '#f))) g$t$11080$1HvE18)))) g$x$11078$1HvE18))))) (g$define-enumeration-macro$9567$1HvE18 g$define-enumeration-macro$15672$1HvE18 (case-lambda ((g$stx$11233$1HvE18) (letrec* ((g$set?$11234$1HvE18 (case-lambda ((g$x$11266$1HvE18) ((case-lambda ((g$t$11267$1HvE18) (if g$t$11267$1HvE18 g$t$11267$1HvE18 (begin '#f (if (not (memq (car g$x$11266$1HvE18) (cdr g$x$11266$1HvE18))) (begin '#f (g$set?$11234$1HvE18 (cdr g$x$11266$1HvE18))) '#f))))) (null? g$x$11266$1HvE18)))))) ((case-lambda ((g$t$11235$1HvE18) ((case-lambda ((g$ls/false$11236$1HvE18) (if (if g$ls/false$11236$1HvE18 (begin '#f (apply (case-lambda ((g$name$11237$1HvE18 g$id*$11238$1HvE18 g$maker$11239$1HvE18) (if (g$id?$9312$1HvE18 g$name$11237$1HvE18) (if (g$id?$9312$1HvE18 g$maker$11239$1HvE18) (begin '#f (g$for-all$7965$1HvE18 g$id?$9312$1HvE18 g$id*$11238$1HvE18)) '#f) '#f))) g$ls/false$11236$1HvE18)) '#f) (apply (case-lambda ((g$name$11240$1HvE18 g$id*$11241$1HvE18 g$maker$11242$1HvE18) ((case-lambda ((g$name*$11243$1HvE18 g$mk$11244$1HvE18) (begin (if (g$set?$11234$1HvE18 g$name*$11243$1HvE18) (void) (g$syntax-violation$9695$1HvE18 '#f '"duplicate names in enumeration set" g$stx$11233$1HvE18)) (g$bless$9557$1HvE18 (list 'begin (list 'define g$mk$11244$1HvE18 (list 'enum-set-constructor (list 'make-enumeration (list 'quote g$name*$11243$1HvE18)))) (list 'define-syntax g$name$11240$1HvE18 (list 'lambda '(x) (list 'syntax-case 'x '() (list '(_ n) '(identifier? (syntax n)) (list 'if (list 'memq '(syntax->datum (syntax n)) (list 'quote g$name*$11243$1HvE18)) '(syntax 'n) (list 'syntax-error 'x '"not a member of set" (list 'quote g$name*$11243$1HvE18))))))) (list 'define-syntax g$maker$11242$1HvE18 (list 'lambda '(x) (list 'syntax-case 'x '() (list '(_ n* ...) (list 'begin (cons 'for-each (cons (list 'lambda '(n) '(unless (identifier? n) (syntax-error x "non-identifier argument")) (cons 'unless (cons (list 'memq '(syntax->datum n) (list 'quote g$name*$11243$1HvE18)) '((syntax-error n "not a member of set"))))) '((syntax (n* ...))))) (list 'syntax (cons g$mk$11244$1HvE18 '('(n* ...)))))))))))))) (g$syntax->datum$9698$1HvE18 g$id*$11241$1HvE18) (gensym)))) g$ls/false$11236$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11235$1HvE18)))) ((case-lambda ((g$x$11245$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11245$1HvE18) (begin '#f ((case-lambda ((g$q$11246$1HvE18) (if g$q$11246$1HvE18 (begin '#f ((case-lambda ((g$r$11247$1HvE18) (if g$r$11247$1HvE18 (begin '#f (append g$q$11246$1HvE18 g$r$11247$1HvE18)) '#f))) ((case-lambda ((g$x$11248$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11248$1HvE18) (begin '#f ((case-lambda ((g$q$11249$1HvE18) (if g$q$11249$1HvE18 (begin '#f ((case-lambda ((g$r$11250$1HvE18) (if g$r$11250$1HvE18 (begin '#f (append g$q$11249$1HvE18 g$r$11250$1HvE18)) '#f))) ((case-lambda ((g$x$11251$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11251$1HvE18) (begin '#f ((case-lambda ((g$q$11252$1HvE18) (if g$q$11252$1HvE18 (begin '#f ((case-lambda ((g$r$11253$1HvE18) (if g$r$11253$1HvE18 (begin '#f (append g$q$11252$1HvE18 g$r$11253$1HvE18)) '#f))) ((case-lambda ((g$x$11254$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11254$1HvE18) (begin '#f ((case-lambda ((g$q$11255$1HvE18) (if g$q$11255$1HvE18 (begin '#f ((case-lambda ((g$r$11256$1HvE18) (if g$r$11256$1HvE18 (begin '#f (append g$q$11255$1HvE18 g$r$11256$1HvE18)) '#f))) ((case-lambda ((g$x$11257$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11257$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11254$1HvE18)))) '#f))) ((case-lambda ((g$x$11258$1HvE18) (list g$x$11258$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11254$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11251$1HvE18)))) '#f))) ((letrec ((g$f$11259$1HvE18 (case-lambda ((g$x$11260$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11260$1HvE18) ((case-lambda ((g$cars/f$11261$1HvE18) (if g$cars/f$11261$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11262$1HvE18) (if g$cdrs/f$11262$1HvE18 (begin '#f (map cons g$cars/f$11261$1HvE18 g$cdrs/f$11262$1HvE18)) '#f))) (g$f$11259$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11260$1HvE18)))) '#f))) ((case-lambda ((g$x$11263$1HvE18) (list g$x$11263$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11260$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11260$1HvE18) (list (begin 'id* '())) '#f)))))) g$f$11259$1HvE18) (g$syntax-car$9309$1HvE18 g$x$11251$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11248$1HvE18)))) '#f))) ((case-lambda ((g$x$11264$1HvE18) (list g$x$11264$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11248$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11245$1HvE18)))) '#f))) ((case-lambda ((g$x$11265$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11245$1HvE18)))) '#f))) g$t$11235$1HvE18)))) g$stx$11233$1HvE18))))) (g$time-macro$9568$1HvE18 g$time-macro$15673$1HvE18 (case-lambda ((g$stx$11268$1HvE18) ((case-lambda ((g$t$11269$1HvE18) ((case-lambda ((g$ls/false$11270$1HvE18) (if (if g$ls/false$11270$1HvE18 (begin '#f (apply (case-lambda ((g$expr$11271$1HvE18) '#t)) g$ls/false$11270$1HvE18)) '#f) (apply (case-lambda ((g$expr$11272$1HvE18) ((case-lambda ((g$str$11273$1HvE18) (g$bless$9557$1HvE18 (list 'time-it g$str$11273$1HvE18 (list 'lambda '() g$expr$11272$1HvE18))))) (call-with-values (case-lambda (() (g$open-string-output-port$8688$1HvE18))) (case-lambda ((g$p$11276$1HvE18 g$e$11277$1HvE18) ((case-lambda ((g$e$11278$1HvE18 g$p$11279$1HvE18) (begin (write (g$syntax->datum$9698$1HvE18 g$expr$11272$1HvE18) g$p$11279$1HvE18) (g$e$11278$1HvE18)))) g$e$11277$1HvE18 g$p$11276$1HvE18))))))) g$ls/false$11270$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11269$1HvE18)))) ((case-lambda ((g$x$11280$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11280$1HvE18) (begin '#f ((case-lambda ((g$q$11281$1HvE18) (if g$q$11281$1HvE18 (begin '#f ((case-lambda ((g$r$11282$1HvE18) (if g$r$11282$1HvE18 (begin '#f (append g$q$11281$1HvE18 g$r$11282$1HvE18)) '#f))) ((case-lambda ((g$x$11283$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11283$1HvE18) (begin '#f ((case-lambda ((g$q$11284$1HvE18) (if g$q$11284$1HvE18 (begin '#f ((case-lambda ((g$r$11285$1HvE18) (if g$r$11285$1HvE18 (begin '#f (append g$q$11284$1HvE18 g$r$11285$1HvE18)) '#f))) ((case-lambda ((g$x$11286$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11286$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11283$1HvE18)))) '#f))) ((case-lambda ((g$x$11287$1HvE18) (list g$x$11287$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11283$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11280$1HvE18)))) '#f))) ((case-lambda ((g$x$11288$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11280$1HvE18)))) '#f))) g$t$11269$1HvE18)))) g$stx$11268$1HvE18)))) (g$delay-macro$9569$1HvE18 g$delay-macro$15674$1HvE18 (case-lambda ((g$stx$11289$1HvE18) ((case-lambda ((g$t$11290$1HvE18) ((case-lambda ((g$ls/false$11291$1HvE18) (if (if g$ls/false$11291$1HvE18 (begin '#f (apply (case-lambda ((g$expr$11292$1HvE18) '#t)) g$ls/false$11291$1HvE18)) '#f) (apply (case-lambda ((g$expr$11293$1HvE18) (g$bless$9557$1HvE18 (list 'make-promise (list 'lambda '() g$expr$11293$1HvE18))))) g$ls/false$11291$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11290$1HvE18)))) ((case-lambda ((g$x$11294$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11294$1HvE18) (begin '#f ((case-lambda ((g$q$11295$1HvE18) (if g$q$11295$1HvE18 (begin '#f ((case-lambda ((g$r$11296$1HvE18) (if g$r$11296$1HvE18 (begin '#f (append g$q$11295$1HvE18 g$r$11296$1HvE18)) '#f))) ((case-lambda ((g$x$11297$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11297$1HvE18) (begin '#f ((case-lambda ((g$q$11298$1HvE18) (if g$q$11298$1HvE18 (begin '#f ((case-lambda ((g$r$11299$1HvE18) (if g$r$11299$1HvE18 (begin '#f (append g$q$11298$1HvE18 g$r$11299$1HvE18)) '#f))) ((case-lambda ((g$x$11300$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11300$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11297$1HvE18)))) '#f))) ((case-lambda ((g$x$11301$1HvE18) (list g$x$11301$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11297$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11294$1HvE18)))) '#f))) ((case-lambda ((g$x$11302$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11294$1HvE18)))) '#f))) g$t$11290$1HvE18)))) g$stx$11289$1HvE18)))) (g$assert-macro$9570$1HvE18 g$assert-macro$15675$1HvE18 (case-lambda ((g$stx$11303$1HvE18) ((case-lambda ((g$t$11304$1HvE18) ((case-lambda ((g$ls/false$11305$1HvE18) (if (if g$ls/false$11305$1HvE18 (begin '#f (apply (case-lambda ((g$expr$11306$1HvE18) '#t)) g$ls/false$11305$1HvE18)) '#f) (apply (case-lambda ((g$expr$11307$1HvE18) (g$bless$9557$1HvE18 (list 'unless g$expr$11307$1HvE18 (list 'assertion-violation ''assert '"assertion failed" (list 'quote g$expr$11307$1HvE18)))))) g$ls/false$11305$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11304$1HvE18)))) ((case-lambda ((g$x$11308$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11308$1HvE18) (begin '#f ((case-lambda ((g$q$11309$1HvE18) (if g$q$11309$1HvE18 (begin '#f ((case-lambda ((g$r$11310$1HvE18) (if g$r$11310$1HvE18 (begin '#f (append g$q$11309$1HvE18 g$r$11310$1HvE18)) '#f))) ((case-lambda ((g$x$11311$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11311$1HvE18) (begin '#f ((case-lambda ((g$q$11312$1HvE18) (if g$q$11312$1HvE18 (begin '#f ((case-lambda ((g$r$11313$1HvE18) (if g$r$11313$1HvE18 (begin '#f (append g$q$11312$1HvE18 g$r$11313$1HvE18)) '#f))) ((case-lambda ((g$x$11314$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11314$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11311$1HvE18)))) '#f))) ((case-lambda ((g$x$11315$1HvE18) (list g$x$11315$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11311$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11308$1HvE18)))) '#f))) ((case-lambda ((g$x$11316$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11308$1HvE18)))) '#f))) g$t$11304$1HvE18)))) g$stx$11303$1HvE18)))) (g$endianness-macro$9571$1HvE18 g$endianness-macro$15676$1HvE18 (case-lambda ((g$stx$11317$1HvE18) ((case-lambda ((g$t$11318$1HvE18) ((case-lambda ((g$ls/false$11319$1HvE18) (if (if g$ls/false$11319$1HvE18 (begin '#f (apply (case-lambda ((g$e$11320$1HvE18) '#t)) g$ls/false$11319$1HvE18)) '#f) (apply (case-lambda ((g$e$11321$1HvE18) ((case-lambda ((g$t$11322$1HvE18) (if (memv g$t$11322$1HvE18 '(little)) (g$bless$9557$1HvE18 ''little) (if (memv g$t$11322$1HvE18 '(big)) (g$bless$9557$1HvE18 ''big) (g$syntax-violation$9695$1HvE18 '#f '"endianness must be big or little" g$stx$11317$1HvE18))))) (g$syntax->datum$9698$1HvE18 g$e$11321$1HvE18)))) g$ls/false$11319$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11318$1HvE18)))) ((case-lambda ((g$x$11323$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11323$1HvE18) (begin '#f ((case-lambda ((g$q$11324$1HvE18) (if g$q$11324$1HvE18 (begin '#f ((case-lambda ((g$r$11325$1HvE18) (if g$r$11325$1HvE18 (begin '#f (append g$q$11324$1HvE18 g$r$11325$1HvE18)) '#f))) ((case-lambda ((g$x$11326$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11326$1HvE18) (begin '#f ((case-lambda ((g$q$11327$1HvE18) (if g$q$11327$1HvE18 (begin '#f ((case-lambda ((g$r$11328$1HvE18) (if g$r$11328$1HvE18 (begin '#f (append g$q$11327$1HvE18 g$r$11328$1HvE18)) '#f))) ((case-lambda ((g$x$11329$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11329$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11326$1HvE18)))) '#f))) ((case-lambda ((g$x$11330$1HvE18) (list g$x$11330$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11326$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11323$1HvE18)))) '#f))) ((case-lambda ((g$x$11331$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11323$1HvE18)))) '#f))) g$t$11318$1HvE18)))) g$stx$11317$1HvE18)))) (g$identifier-syntax-macro$9572$1HvE18 g$identifier-syntax-macro$15677$1HvE18 (case-lambda ((g$stx$11332$1HvE18) ((case-lambda ((g$t$11333$1HvE18) ((case-lambda ((g$ls/false$11334$1HvE18) (if (if g$ls/false$11334$1HvE18 (begin '#f (apply (case-lambda ((g$expr$11335$1HvE18) '#t)) g$ls/false$11334$1HvE18)) '#f) (apply (case-lambda ((g$expr$11336$1HvE18) (g$bless$9557$1HvE18 (list 'lambda '(x) (list 'syntax-case 'x '() (list 'id '(identifier? (syntax id)) (list 'syntax g$expr$11336$1HvE18)) (list '(id e* ...) '(identifier? (syntax id)) (cons 'cons (cons (list 'syntax g$expr$11336$1HvE18) '((syntax (e* ...))))))))))) g$ls/false$11334$1HvE18) ((case-lambda ((g$t$11337$1HvE18) ((case-lambda ((g$ls/false$11338$1HvE18) (if (if g$ls/false$11338$1HvE18 (begin '#f (apply (case-lambda ((g$id1$11339$1HvE18 g$expr1$11340$1HvE18 g$id2$11341$1HvE18 g$expr2$11342$1HvE18 g$expr3$11343$1HvE18) (if (g$id?$9312$1HvE18 g$id1$11339$1HvE18) (if (g$id?$9312$1HvE18 g$id2$11341$1HvE18) (begin '#f (g$id?$9312$1HvE18 g$expr2$11342$1HvE18)) '#f) '#f))) g$ls/false$11338$1HvE18)) '#f) (apply (case-lambda ((g$id1$11344$1HvE18 g$expr1$11345$1HvE18 g$id2$11346$1HvE18 g$expr2$11347$1HvE18 g$expr3$11348$1HvE18) (g$bless$9557$1HvE18 (list 'cons ''macro! (list 'lambda '(x) (list 'syntax-case 'x '(set!) (list 'id '(identifier? (syntax id)) (list 'syntax g$expr1$11345$1HvE18)) (list (list 'set! 'id g$expr2$11347$1HvE18) (list 'syntax g$expr3$11348$1HvE18)) (list '(id e* ...) '(identifier? (syntax id)) (list 'syntax (cons g$expr1$11345$1HvE18 '(e* ...)))))))))) g$ls/false$11338$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11337$1HvE18)))) ((case-lambda ((g$x$11349$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11349$1HvE18) (begin '#f ((case-lambda ((g$q$11350$1HvE18) (if g$q$11350$1HvE18 (begin '#f ((case-lambda ((g$r$11351$1HvE18) (if g$r$11351$1HvE18 (begin '#f (append g$q$11350$1HvE18 g$r$11351$1HvE18)) '#f))) ((case-lambda ((g$x$11352$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11352$1HvE18) (begin '#f ((case-lambda ((g$q$11353$1HvE18) (if g$q$11353$1HvE18 (begin '#f ((case-lambda ((g$r$11354$1HvE18) (if g$r$11354$1HvE18 (begin '#f (append g$q$11353$1HvE18 g$r$11354$1HvE18)) '#f))) ((case-lambda ((g$x$11355$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11355$1HvE18) (begin '#f ((case-lambda ((g$q$11356$1HvE18) (if g$q$11356$1HvE18 (begin '#f ((case-lambda ((g$r$11357$1HvE18) (if g$r$11357$1HvE18 (begin '#f (append g$q$11356$1HvE18 g$r$11357$1HvE18)) '#f))) ((case-lambda ((g$x$11358$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11358$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11355$1HvE18)))) '#f))) ((case-lambda ((g$x$11359$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11359$1HvE18) (begin '#f ((case-lambda ((g$q$11360$1HvE18) (if g$q$11360$1HvE18 (begin '#f ((case-lambda ((g$r$11361$1HvE18) (if g$r$11361$1HvE18 (begin '#f (append g$q$11360$1HvE18 g$r$11361$1HvE18)) '#f))) ((case-lambda ((g$x$11362$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11362$1HvE18) (begin '#f ((case-lambda ((g$q$11363$1HvE18) (if g$q$11363$1HvE18 (begin '#f ((case-lambda ((g$r$11364$1HvE18) (if g$r$11364$1HvE18 (begin '#f (append g$q$11363$1HvE18 g$r$11364$1HvE18)) '#f))) ((case-lambda ((g$x$11365$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11365$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11362$1HvE18)))) '#f))) ((case-lambda ((g$x$11366$1HvE18) (list g$x$11366$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11362$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11359$1HvE18)))) '#f))) ((case-lambda ((g$x$11367$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11367$1HvE18) (begin '#f ((case-lambda ((g$q$11368$1HvE18) (if g$q$11368$1HvE18 (begin '#f ((case-lambda ((g$r$11369$1HvE18) (if g$r$11369$1HvE18 (begin '#f (append g$q$11368$1HvE18 g$r$11369$1HvE18)) '#f))) ((case-lambda ((g$x$11370$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11370$1HvE18) (begin '#f ((case-lambda ((g$q$11371$1HvE18) (if g$q$11371$1HvE18 (begin '#f ((case-lambda ((g$r$11372$1HvE18) (if g$r$11372$1HvE18 (begin '#f (append g$q$11371$1HvE18 g$r$11372$1HvE18)) '#f))) ((case-lambda ((g$x$11373$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11373$1HvE18) (begin '#f ((case-lambda ((g$q$11374$1HvE18) (if g$q$11374$1HvE18 (begin '#f ((case-lambda ((g$r$11375$1HvE18) (if g$r$11375$1HvE18 (begin '#f (append g$q$11374$1HvE18 g$r$11375$1HvE18)) '#f))) ((case-lambda ((g$x$11376$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11376$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11373$1HvE18)))) '#f))) ((case-lambda ((g$x$11377$1HvE18) (list g$x$11377$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11373$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11370$1HvE18)))) '#f))) ((case-lambda ((g$x$11378$1HvE18) (list g$x$11378$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11370$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11367$1HvE18)))) '#f))) ((case-lambda ((g$x$11379$1HvE18) (if (g$id?$9312$1HvE18 g$x$11379$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11379$1HvE18 (g$scheme-stx$9537$1HvE18 'set!)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11367$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11359$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11355$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11352$1HvE18)))) '#f))) ((case-lambda ((g$x$11380$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11380$1HvE18) (begin '#f ((case-lambda ((g$q$11381$1HvE18) (if g$q$11381$1HvE18 (begin '#f ((case-lambda ((g$r$11382$1HvE18) (if g$r$11382$1HvE18 (begin '#f (append g$q$11381$1HvE18 g$r$11382$1HvE18)) '#f))) ((case-lambda ((g$x$11383$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11383$1HvE18) (begin '#f ((case-lambda ((g$q$11384$1HvE18) (if g$q$11384$1HvE18 (begin '#f ((case-lambda ((g$r$11385$1HvE18) (if g$r$11385$1HvE18 (begin '#f (append g$q$11384$1HvE18 g$r$11385$1HvE18)) '#f))) ((case-lambda ((g$x$11386$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11386$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11383$1HvE18)))) '#f))) ((case-lambda ((g$x$11387$1HvE18) (list g$x$11387$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11383$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11380$1HvE18)))) '#f))) ((case-lambda ((g$x$11388$1HvE18) (list g$x$11388$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11380$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11352$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11349$1HvE18)))) '#f))) ((case-lambda ((g$x$11389$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11349$1HvE18)))) '#f))) g$t$11337$1HvE18)))) g$t$11333$1HvE18)))) ((case-lambda ((g$x$11390$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11390$1HvE18) (begin '#f ((case-lambda ((g$q$11391$1HvE18) (if g$q$11391$1HvE18 (begin '#f ((case-lambda ((g$r$11392$1HvE18) (if g$r$11392$1HvE18 (begin '#f (append g$q$11391$1HvE18 g$r$11392$1HvE18)) '#f))) ((case-lambda ((g$x$11393$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11393$1HvE18) (begin '#f ((case-lambda ((g$q$11394$1HvE18) (if g$q$11394$1HvE18 (begin '#f ((case-lambda ((g$r$11395$1HvE18) (if g$r$11395$1HvE18 (begin '#f (append g$q$11394$1HvE18 g$r$11395$1HvE18)) '#f))) ((case-lambda ((g$x$11396$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11396$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11393$1HvE18)))) '#f))) ((case-lambda ((g$x$11397$1HvE18) (list g$x$11397$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11393$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11390$1HvE18)))) '#f))) ((case-lambda ((g$x$11398$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11390$1HvE18)))) '#f))) g$t$11333$1HvE18)))) g$stx$11332$1HvE18)))) (g$do-macro$9573$1HvE18 g$do-macro$15678$1HvE18 (case-lambda ((g$stx$11399$1HvE18) (letrec* ((g$bind$11400$1HvE18 (case-lambda ((g$x$11465$1HvE18) ((case-lambda ((g$t$11466$1HvE18) ((case-lambda ((g$ls/false$11467$1HvE18) (if (if g$ls/false$11467$1HvE18 (begin '#f (apply (case-lambda ((g$x$11468$1HvE18 g$init$11469$1HvE18) '#t)) g$ls/false$11467$1HvE18)) '#f) (apply (case-lambda ((g$x$11470$1HvE18 g$init$11471$1HvE18) (list g$x$11470$1HvE18 g$init$11471$1HvE18 g$x$11470$1HvE18))) g$ls/false$11467$1HvE18) ((case-lambda ((g$t$11472$1HvE18) ((case-lambda ((g$ls/false$11473$1HvE18) (if (if g$ls/false$11473$1HvE18 (begin '#f (apply (case-lambda ((g$x$11474$1HvE18 g$init$11475$1HvE18 g$step$11476$1HvE18) '#t)) g$ls/false$11473$1HvE18)) '#f) (apply (case-lambda ((g$x$11477$1HvE18 g$init$11478$1HvE18 g$step$11479$1HvE18) (list g$x$11477$1HvE18 g$init$11478$1HvE18 g$step$11479$1HvE18))) g$ls/false$11473$1HvE18) ((case-lambda ((g$t$11480$1HvE18) ((case-lambda ((g$ls/false$11481$1HvE18) (if (if g$ls/false$11481$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$11481$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"invalid binding" g$stx$11399$1HvE18))) g$ls/false$11481$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11480$1HvE18)))) ((case-lambda ((g$x$11482$1HvE18) '())) g$t$11480$1HvE18)))) g$t$11472$1HvE18)))) ((case-lambda ((g$x$11483$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11483$1HvE18) (begin '#f ((case-lambda ((g$q$11484$1HvE18) (if g$q$11484$1HvE18 (begin '#f ((case-lambda ((g$r$11485$1HvE18) (if g$r$11485$1HvE18 (begin '#f (append g$q$11484$1HvE18 g$r$11485$1HvE18)) '#f))) ((case-lambda ((g$x$11486$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11486$1HvE18) (begin '#f ((case-lambda ((g$q$11487$1HvE18) (if g$q$11487$1HvE18 (begin '#f ((case-lambda ((g$r$11488$1HvE18) (if g$r$11488$1HvE18 (begin '#f (append g$q$11487$1HvE18 g$r$11488$1HvE18)) '#f))) ((case-lambda ((g$x$11489$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11489$1HvE18) (begin '#f ((case-lambda ((g$q$11490$1HvE18) (if g$q$11490$1HvE18 (begin '#f ((case-lambda ((g$r$11491$1HvE18) (if g$r$11491$1HvE18 (begin '#f (append g$q$11490$1HvE18 g$r$11491$1HvE18)) '#f))) ((case-lambda ((g$x$11492$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11492$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11489$1HvE18)))) '#f))) ((case-lambda ((g$x$11493$1HvE18) (list g$x$11493$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11489$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11486$1HvE18)))) '#f))) ((case-lambda ((g$x$11494$1HvE18) (list g$x$11494$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11486$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11483$1HvE18)))) '#f))) ((case-lambda ((g$x$11495$1HvE18) (list g$x$11495$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11483$1HvE18)))) '#f))) g$t$11472$1HvE18)))) g$t$11466$1HvE18)))) ((case-lambda ((g$x$11496$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11496$1HvE18) (begin '#f ((case-lambda ((g$q$11497$1HvE18) (if g$q$11497$1HvE18 (begin '#f ((case-lambda ((g$r$11498$1HvE18) (if g$r$11498$1HvE18 (begin '#f (append g$q$11497$1HvE18 g$r$11498$1HvE18)) '#f))) ((case-lambda ((g$x$11499$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11499$1HvE18) (begin '#f ((case-lambda ((g$q$11500$1HvE18) (if g$q$11500$1HvE18 (begin '#f ((case-lambda ((g$r$11501$1HvE18) (if g$r$11501$1HvE18 (begin '#f (append g$q$11500$1HvE18 g$r$11501$1HvE18)) '#f))) ((case-lambda ((g$x$11502$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11502$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11499$1HvE18)))) '#f))) ((case-lambda ((g$x$11503$1HvE18) (list g$x$11503$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11499$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11496$1HvE18)))) '#f))) ((case-lambda ((g$x$11504$1HvE18) (list g$x$11504$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11496$1HvE18)))) '#f))) g$t$11466$1HvE18)))) g$x$11465$1HvE18))))) ((case-lambda ((g$t$11401$1HvE18) ((case-lambda ((g$ls/false$11402$1HvE18) (if (if g$ls/false$11402$1HvE18 (begin '#f (apply (case-lambda ((g$binding*$11403$1HvE18 g$test$11404$1HvE18 g$expr*$11405$1HvE18 g$command*$11406$1HvE18) '#t)) g$ls/false$11402$1HvE18)) '#f) (apply (case-lambda ((g$binding*$11407$1HvE18 g$test$11408$1HvE18 g$expr*$11409$1HvE18 g$command*$11410$1HvE18) ((case-lambda ((g$t$11411$1HvE18) ((case-lambda ((g$ls/false$11412$1HvE18) (if (if g$ls/false$11412$1HvE18 (begin '#f (apply (case-lambda ((g$x*$11413$1HvE18 g$init*$11414$1HvE18 g$step*$11415$1HvE18) '#t)) g$ls/false$11412$1HvE18)) '#f) (apply (case-lambda ((g$x*$11416$1HvE18 g$init*$11417$1HvE18 g$step*$11418$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 g$x*$11416$1HvE18) (g$bless$9557$1HvE18 (list 'letrec (list (list 'loop (list 'lambda g$x*$11416$1HvE18 (list 'if g$test$11408$1HvE18 (cons 'begin (cons '(if #f #f) g$expr*$11409$1HvE18)) (cons 'begin (append g$command*$11410$1HvE18 (list (cons 'loop g$step*$11418$1HvE18)))))))) (cons 'loop g$init*$11417$1HvE18))) (g$syntax-violation$9695$1HvE18 '#f '"invalid bindings" g$stx$11399$1HvE18)))) g$ls/false$11412$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11411$1HvE18)))) ((letrec ((g$f$11419$1HvE18 (case-lambda ((g$x$11420$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11420$1HvE18) ((case-lambda ((g$cars/f$11421$1HvE18) (if g$cars/f$11421$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11422$1HvE18) (if g$cdrs/f$11422$1HvE18 (begin '#f (map cons g$cars/f$11421$1HvE18 g$cdrs/f$11422$1HvE18)) '#f))) (g$f$11419$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11420$1HvE18)))) '#f))) ((case-lambda ((g$x$11423$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11423$1HvE18) (begin '#f ((case-lambda ((g$q$11424$1HvE18) (if g$q$11424$1HvE18 (begin '#f ((case-lambda ((g$r$11425$1HvE18) (if g$r$11425$1HvE18 (begin '#f (append g$q$11424$1HvE18 g$r$11425$1HvE18)) '#f))) ((case-lambda ((g$x$11426$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11426$1HvE18) (begin '#f ((case-lambda ((g$q$11427$1HvE18) (if g$q$11427$1HvE18 (begin '#f ((case-lambda ((g$r$11428$1HvE18) (if g$r$11428$1HvE18 (begin '#f (append g$q$11427$1HvE18 g$r$11428$1HvE18)) '#f))) ((case-lambda ((g$x$11429$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11429$1HvE18) (begin '#f ((case-lambda ((g$q$11430$1HvE18) (if g$q$11430$1HvE18 (begin '#f ((case-lambda ((g$r$11431$1HvE18) (if g$r$11431$1HvE18 (begin '#f (append g$q$11430$1HvE18 g$r$11431$1HvE18)) '#f))) ((case-lambda ((g$x$11432$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11432$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11429$1HvE18)))) '#f))) ((case-lambda ((g$x$11433$1HvE18) (list g$x$11433$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11429$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11426$1HvE18)))) '#f))) ((case-lambda ((g$x$11434$1HvE18) (list g$x$11434$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11426$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11423$1HvE18)))) '#f))) ((case-lambda ((g$x$11435$1HvE18) (list g$x$11435$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11423$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11420$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11420$1HvE18) (list (begin 'x* '()) (begin 'init* '()) (begin 'step* '())) '#f)))))) g$f$11419$1HvE18) g$t$11411$1HvE18)))) (map g$bind$11400$1HvE18 g$binding*$11407$1HvE18)))) g$ls/false$11402$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11401$1HvE18)))) ((case-lambda ((g$x$11436$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11436$1HvE18) (begin '#f ((case-lambda ((g$q$11437$1HvE18) (if g$q$11437$1HvE18 (begin '#f ((case-lambda ((g$r$11438$1HvE18) (if g$r$11438$1HvE18 (begin '#f (append g$q$11437$1HvE18 g$r$11438$1HvE18)) '#f))) ((case-lambda ((g$x$11439$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11439$1HvE18) (begin '#f ((case-lambda ((g$q$11440$1HvE18) (if g$q$11440$1HvE18 (begin '#f ((case-lambda ((g$r$11441$1HvE18) (if g$r$11441$1HvE18 (begin '#f (append g$q$11440$1HvE18 g$r$11441$1HvE18)) '#f))) ((case-lambda ((g$x$11442$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11442$1HvE18) (begin '#f ((case-lambda ((g$q$11443$1HvE18) (if g$q$11443$1HvE18 (begin '#f ((case-lambda ((g$r$11444$1HvE18) (if g$r$11444$1HvE18 (begin '#f (append g$q$11443$1HvE18 g$r$11444$1HvE18)) '#f))) ((letrec ((g$f$11445$1HvE18 (case-lambda ((g$x$11446$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11446$1HvE18) ((case-lambda ((g$cars/f$11447$1HvE18) (if g$cars/f$11447$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11448$1HvE18) (if g$cdrs/f$11448$1HvE18 (begin '#f (map cons g$cars/f$11447$1HvE18 g$cdrs/f$11448$1HvE18)) '#f))) (g$f$11445$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11446$1HvE18)))) '#f))) ((case-lambda ((g$x$11449$1HvE18) (list g$x$11449$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11446$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11446$1HvE18) (list (begin 'command* '())) '#f)))))) g$f$11445$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11442$1HvE18)))) '#f))) ((case-lambda ((g$x$11450$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11450$1HvE18) (begin '#f ((case-lambda ((g$q$11451$1HvE18) (if g$q$11451$1HvE18 (begin '#f ((case-lambda ((g$r$11452$1HvE18) (if g$r$11452$1HvE18 (begin '#f (append g$q$11451$1HvE18 g$r$11452$1HvE18)) '#f))) ((letrec ((g$f$11453$1HvE18 (case-lambda ((g$x$11454$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11454$1HvE18) ((case-lambda ((g$cars/f$11455$1HvE18) (if g$cars/f$11455$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11456$1HvE18) (if g$cdrs/f$11456$1HvE18 (begin '#f (map cons g$cars/f$11455$1HvE18 g$cdrs/f$11456$1HvE18)) '#f))) (g$f$11453$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11454$1HvE18)))) '#f))) ((case-lambda ((g$x$11457$1HvE18) (list g$x$11457$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11454$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11454$1HvE18) (list (begin 'expr* '())) '#f)))))) g$f$11453$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11450$1HvE18)))) '#f))) ((case-lambda ((g$x$11458$1HvE18) (list g$x$11458$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11450$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11442$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11439$1HvE18)))) '#f))) ((letrec ((g$f$11459$1HvE18 (case-lambda ((g$x$11460$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11460$1HvE18) ((case-lambda ((g$cars/f$11461$1HvE18) (if g$cars/f$11461$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11462$1HvE18) (if g$cdrs/f$11462$1HvE18 (begin '#f (map cons g$cars/f$11461$1HvE18 g$cdrs/f$11462$1HvE18)) '#f))) (g$f$11459$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11460$1HvE18)))) '#f))) ((case-lambda ((g$x$11463$1HvE18) (list g$x$11463$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11460$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11460$1HvE18) (list (begin 'binding* '())) '#f)))))) g$f$11459$1HvE18) (g$syntax-car$9309$1HvE18 g$x$11439$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11436$1HvE18)))) '#f))) ((case-lambda ((g$x$11464$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11436$1HvE18)))) '#f))) g$t$11401$1HvE18)))) g$stx$11399$1HvE18))))) (g$let*-macro$9574$1HvE18 g$let*-macro$15679$1HvE18 (case-lambda ((g$stx$11505$1HvE18) ((case-lambda ((g$t$11506$1HvE18) ((case-lambda ((g$ls/false$11507$1HvE18) (if (if g$ls/false$11507$1HvE18 (begin '#f (apply (case-lambda ((g$lhs*$11508$1HvE18 g$rhs*$11509$1HvE18 g$b$11510$1HvE18 g$b*$11511$1HvE18) (g$for-all$7965$1HvE18 g$id?$9312$1HvE18 g$lhs*$11508$1HvE18))) g$ls/false$11507$1HvE18)) '#f) (apply (case-lambda ((g$lhs*$11512$1HvE18 g$rhs*$11513$1HvE18 g$b$11514$1HvE18 g$b*$11515$1HvE18) (g$bless$9557$1HvE18 ((letrec ((g$f$11516$1HvE18 (case-lambda ((g$x*$11517$1HvE18) (if (null? g$x*$11517$1HvE18) (cons 'let (cons '() (cons g$b$11514$1HvE18 g$b*$11515$1HvE18))) (list 'let (list (car g$x*$11517$1HvE18)) (g$f$11516$1HvE18 (cdr g$x*$11517$1HvE18)))))))) g$f$11516$1HvE18) (map list g$lhs*$11512$1HvE18 g$rhs*$11513$1HvE18))))) g$ls/false$11507$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11506$1HvE18)))) ((case-lambda ((g$x$11518$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11518$1HvE18) (begin '#f ((case-lambda ((g$q$11519$1HvE18) (if g$q$11519$1HvE18 (begin '#f ((case-lambda ((g$r$11520$1HvE18) (if g$r$11520$1HvE18 (begin '#f (append g$q$11519$1HvE18 g$r$11520$1HvE18)) '#f))) ((case-lambda ((g$x$11521$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11521$1HvE18) (begin '#f ((case-lambda ((g$q$11522$1HvE18) (if g$q$11522$1HvE18 (begin '#f ((case-lambda ((g$r$11523$1HvE18) (if g$r$11523$1HvE18 (begin '#f (append g$q$11522$1HvE18 g$r$11523$1HvE18)) '#f))) ((case-lambda ((g$x$11524$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11524$1HvE18) (begin '#f ((case-lambda ((g$q$11525$1HvE18) (if g$q$11525$1HvE18 (begin '#f ((case-lambda ((g$r$11526$1HvE18) (if g$r$11526$1HvE18 (begin '#f (append g$q$11525$1HvE18 g$r$11526$1HvE18)) '#f))) ((letrec ((g$f$11527$1HvE18 (case-lambda ((g$x$11528$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11528$1HvE18) ((case-lambda ((g$cars/f$11529$1HvE18) (if g$cars/f$11529$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11530$1HvE18) (if g$cdrs/f$11530$1HvE18 (begin '#f (map cons g$cars/f$11529$1HvE18 g$cdrs/f$11530$1HvE18)) '#f))) (g$f$11527$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11528$1HvE18)))) '#f))) ((case-lambda ((g$x$11531$1HvE18) (list g$x$11531$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11528$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11528$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$11527$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11524$1HvE18)))) '#f))) ((case-lambda ((g$x$11532$1HvE18) (list g$x$11532$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11524$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11521$1HvE18)))) '#f))) ((letrec ((g$f$11533$1HvE18 (case-lambda ((g$x$11534$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11534$1HvE18) ((case-lambda ((g$cars/f$11535$1HvE18) (if g$cars/f$11535$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11536$1HvE18) (if g$cdrs/f$11536$1HvE18 (begin '#f (map cons g$cars/f$11535$1HvE18 g$cdrs/f$11536$1HvE18)) '#f))) (g$f$11533$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11534$1HvE18)))) '#f))) ((case-lambda ((g$x$11537$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11537$1HvE18) (begin '#f ((case-lambda ((g$q$11538$1HvE18) (if g$q$11538$1HvE18 (begin '#f ((case-lambda ((g$r$11539$1HvE18) (if g$r$11539$1HvE18 (begin '#f (append g$q$11538$1HvE18 g$r$11539$1HvE18)) '#f))) ((case-lambda ((g$x$11540$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11540$1HvE18) (begin '#f ((case-lambda ((g$q$11541$1HvE18) (if g$q$11541$1HvE18 (begin '#f ((case-lambda ((g$r$11542$1HvE18) (if g$r$11542$1HvE18 (begin '#f (append g$q$11541$1HvE18 g$r$11542$1HvE18)) '#f))) ((case-lambda ((g$x$11543$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11543$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11540$1HvE18)))) '#f))) ((case-lambda ((g$x$11544$1HvE18) (list g$x$11544$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11540$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11537$1HvE18)))) '#f))) ((case-lambda ((g$x$11545$1HvE18) (list g$x$11545$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11537$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11534$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11534$1HvE18) (list (begin 'lhs* '()) (begin 'rhs* '())) '#f)))))) g$f$11533$1HvE18) (g$syntax-car$9309$1HvE18 g$x$11521$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11518$1HvE18)))) '#f))) ((case-lambda ((g$x$11546$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11518$1HvE18)))) '#f))) g$t$11506$1HvE18)))) g$stx$11505$1HvE18)))) (g$or-macro$9575$1HvE18 g$or-macro$15680$1HvE18 (case-lambda ((g$stx$11547$1HvE18) ((case-lambda ((g$t$11548$1HvE18) ((case-lambda ((g$ls/false$11549$1HvE18) (if (if g$ls/false$11549$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$11549$1HvE18)) '#f) (apply (case-lambda (() '#f)) g$ls/false$11549$1HvE18) ((case-lambda ((g$t$11550$1HvE18) ((case-lambda ((g$ls/false$11551$1HvE18) (if (if g$ls/false$11551$1HvE18 (begin '#f (apply (case-lambda ((g$e$11552$1HvE18 g$e*$11553$1HvE18) '#t)) g$ls/false$11551$1HvE18)) '#f) (apply (case-lambda ((g$e$11554$1HvE18 g$e*$11555$1HvE18) (g$bless$9557$1HvE18 ((letrec ((g$f$11556$1HvE18 (case-lambda ((g$e$11557$1HvE18 g$e*$11558$1HvE18) (if (null? g$e*$11558$1HvE18) (list 'begin '#f g$e$11557$1HvE18) (list 'let (list (list 't g$e$11557$1HvE18)) (list 'if 't 't (g$f$11556$1HvE18 (car g$e*$11558$1HvE18) (cdr g$e*$11558$1HvE18))))))))) g$f$11556$1HvE18) g$e$11554$1HvE18 g$e*$11555$1HvE18)))) g$ls/false$11551$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11550$1HvE18)))) ((case-lambda ((g$x$11559$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11559$1HvE18) (begin '#f ((case-lambda ((g$q$11560$1HvE18) (if g$q$11560$1HvE18 (begin '#f ((case-lambda ((g$r$11561$1HvE18) (if g$r$11561$1HvE18 (begin '#f (append g$q$11560$1HvE18 g$r$11561$1HvE18)) '#f))) ((case-lambda ((g$x$11562$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11562$1HvE18) (begin '#f ((case-lambda ((g$q$11563$1HvE18) (if g$q$11563$1HvE18 (begin '#f ((case-lambda ((g$r$11564$1HvE18) (if g$r$11564$1HvE18 (begin '#f (append g$q$11563$1HvE18 g$r$11564$1HvE18)) '#f))) ((letrec ((g$f$11565$1HvE18 (case-lambda ((g$x$11566$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11566$1HvE18) ((case-lambda ((g$cars/f$11567$1HvE18) (if g$cars/f$11567$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11568$1HvE18) (if g$cdrs/f$11568$1HvE18 (begin '#f (map cons g$cars/f$11567$1HvE18 g$cdrs/f$11568$1HvE18)) '#f))) (g$f$11565$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11566$1HvE18)))) '#f))) ((case-lambda ((g$x$11569$1HvE18) (list g$x$11569$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11566$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11566$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$11565$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11562$1HvE18)))) '#f))) ((case-lambda ((g$x$11570$1HvE18) (list g$x$11570$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11562$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11559$1HvE18)))) '#f))) ((case-lambda ((g$x$11571$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11559$1HvE18)))) '#f))) g$t$11550$1HvE18)))) g$t$11548$1HvE18)))) ((case-lambda ((g$x$11572$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11572$1HvE18) (begin '#f ((case-lambda ((g$q$11573$1HvE18) (if g$q$11573$1HvE18 (begin '#f ((case-lambda ((g$r$11574$1HvE18) (if g$r$11574$1HvE18 (begin '#f (append g$q$11573$1HvE18 g$r$11574$1HvE18)) '#f))) ((case-lambda ((g$x$11575$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11575$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11572$1HvE18)))) '#f))) ((case-lambda ((g$x$11576$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11572$1HvE18)))) '#f))) g$t$11548$1HvE18)))) g$stx$11547$1HvE18)))) (g$and-macro$9576$1HvE18 g$and-macro$15681$1HvE18 (case-lambda ((g$stx$11577$1HvE18) ((case-lambda ((g$t$11578$1HvE18) ((case-lambda ((g$ls/false$11579$1HvE18) (if (if g$ls/false$11579$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$11579$1HvE18)) '#f) (apply (case-lambda (() '#t)) g$ls/false$11579$1HvE18) ((case-lambda ((g$t$11580$1HvE18) ((case-lambda ((g$ls/false$11581$1HvE18) (if (if g$ls/false$11581$1HvE18 (begin '#f (apply (case-lambda ((g$e$11582$1HvE18 g$e*$11583$1HvE18) '#t)) g$ls/false$11581$1HvE18)) '#f) (apply (case-lambda ((g$e$11584$1HvE18 g$e*$11585$1HvE18) (g$bless$9557$1HvE18 ((letrec ((g$f$11586$1HvE18 (case-lambda ((g$e$11587$1HvE18 g$e*$11588$1HvE18) (if (null? g$e*$11588$1HvE18) (list 'begin '#f g$e$11587$1HvE18) (cons 'if (cons g$e$11587$1HvE18 (cons (g$f$11586$1HvE18 (car g$e*$11588$1HvE18) (cdr g$e*$11588$1HvE18)) '(#f))))))))) g$f$11586$1HvE18) g$e$11584$1HvE18 g$e*$11585$1HvE18)))) g$ls/false$11581$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11580$1HvE18)))) ((case-lambda ((g$x$11589$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11589$1HvE18) (begin '#f ((case-lambda ((g$q$11590$1HvE18) (if g$q$11590$1HvE18 (begin '#f ((case-lambda ((g$r$11591$1HvE18) (if g$r$11591$1HvE18 (begin '#f (append g$q$11590$1HvE18 g$r$11591$1HvE18)) '#f))) ((case-lambda ((g$x$11592$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11592$1HvE18) (begin '#f ((case-lambda ((g$q$11593$1HvE18) (if g$q$11593$1HvE18 (begin '#f ((case-lambda ((g$r$11594$1HvE18) (if g$r$11594$1HvE18 (begin '#f (append g$q$11593$1HvE18 g$r$11594$1HvE18)) '#f))) ((letrec ((g$f$11595$1HvE18 (case-lambda ((g$x$11596$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11596$1HvE18) ((case-lambda ((g$cars/f$11597$1HvE18) (if g$cars/f$11597$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11598$1HvE18) (if g$cdrs/f$11598$1HvE18 (begin '#f (map cons g$cars/f$11597$1HvE18 g$cdrs/f$11598$1HvE18)) '#f))) (g$f$11595$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11596$1HvE18)))) '#f))) ((case-lambda ((g$x$11599$1HvE18) (list g$x$11599$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11596$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11596$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$11595$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11592$1HvE18)))) '#f))) ((case-lambda ((g$x$11600$1HvE18) (list g$x$11600$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11592$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11589$1HvE18)))) '#f))) ((case-lambda ((g$x$11601$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11589$1HvE18)))) '#f))) g$t$11580$1HvE18)))) g$t$11578$1HvE18)))) ((case-lambda ((g$x$11602$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11602$1HvE18) (begin '#f ((case-lambda ((g$q$11603$1HvE18) (if g$q$11603$1HvE18 (begin '#f ((case-lambda ((g$r$11604$1HvE18) (if g$r$11604$1HvE18 (begin '#f (append g$q$11603$1HvE18 g$r$11604$1HvE18)) '#f))) ((case-lambda ((g$x$11605$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11605$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11602$1HvE18)))) '#f))) ((case-lambda ((g$x$11606$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11602$1HvE18)))) '#f))) g$t$11578$1HvE18)))) g$stx$11577$1HvE18)))) (g$cond-macro$9577$1HvE18 g$cond-macro$15682$1HvE18 (case-lambda ((g$stx$11607$1HvE18) ((case-lambda ((g$t$11608$1HvE18) ((case-lambda ((g$ls/false$11609$1HvE18) (if (if g$ls/false$11609$1HvE18 (begin '#f (apply (case-lambda ((g$cls$11610$1HvE18 g$cls*$11611$1HvE18) '#t)) g$ls/false$11609$1HvE18)) '#f) (apply (case-lambda ((g$cls$11612$1HvE18 g$cls*$11613$1HvE18) (g$bless$9557$1HvE18 ((letrec ((g$f$11614$1HvE18 (case-lambda ((g$cls$11615$1HvE18 g$cls*$11616$1HvE18) (if (null? g$cls*$11616$1HvE18) ((case-lambda ((g$t$11617$1HvE18) ((case-lambda ((g$ls/false$11618$1HvE18) (if (if g$ls/false$11618$1HvE18 (begin '#f (apply (case-lambda ((g$e$11619$1HvE18 g$e*$11620$1HvE18) '#t)) g$ls/false$11618$1HvE18)) '#f) (apply (case-lambda ((g$e$11621$1HvE18 g$e*$11622$1HvE18) (cons 'begin (cons g$e$11621$1HvE18 g$e*$11622$1HvE18)))) g$ls/false$11618$1HvE18) ((case-lambda ((g$t$11623$1HvE18) ((case-lambda ((g$ls/false$11624$1HvE18) (if (if g$ls/false$11624$1HvE18 (begin '#f (apply (case-lambda ((g$e$11625$1HvE18 g$p$11626$1HvE18) '#t)) g$ls/false$11624$1HvE18)) '#f) (apply (case-lambda ((g$e$11627$1HvE18 g$p$11628$1HvE18) (list 'let (list (list 't g$e$11627$1HvE18)) (list 'if 't (cons g$p$11628$1HvE18 '(t)))))) g$ls/false$11624$1HvE18) ((case-lambda ((g$t$11629$1HvE18) ((case-lambda ((g$ls/false$11630$1HvE18) (if (if g$ls/false$11630$1HvE18 (begin '#f (apply (case-lambda ((g$e$11631$1HvE18) '#t)) g$ls/false$11630$1HvE18)) '#f) (apply (case-lambda ((g$e$11632$1HvE18) (cons 'or (cons g$e$11632$1HvE18 '((if #f #f)))))) g$ls/false$11630$1HvE18) ((case-lambda ((g$t$11633$1HvE18) ((case-lambda ((g$ls/false$11634$1HvE18) (if (if g$ls/false$11634$1HvE18 (begin '#f (apply (case-lambda ((g$e$11635$1HvE18 g$e*$11636$1HvE18) '#t)) g$ls/false$11634$1HvE18)) '#f) (apply (case-lambda ((g$e$11637$1HvE18 g$e*$11638$1HvE18) (list 'if g$e$11637$1HvE18 (cons 'begin g$e*$11638$1HvE18)))) g$ls/false$11634$1HvE18) ((case-lambda ((g$t$11639$1HvE18) ((case-lambda ((g$ls/false$11640$1HvE18) (if (if g$ls/false$11640$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$11640$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"invalid last clause" g$stx$11607$1HvE18))) g$ls/false$11640$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11639$1HvE18)))) ((case-lambda ((g$x$11641$1HvE18) '())) g$t$11639$1HvE18)))) g$t$11633$1HvE18)))) ((case-lambda ((g$x$11642$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11642$1HvE18) (begin '#f ((case-lambda ((g$q$11643$1HvE18) (if g$q$11643$1HvE18 (begin '#f ((case-lambda ((g$r$11644$1HvE18) (if g$r$11644$1HvE18 (begin '#f (append g$q$11643$1HvE18 g$r$11644$1HvE18)) '#f))) ((letrec ((g$f$11645$1HvE18 (case-lambda ((g$x$11646$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11646$1HvE18) ((case-lambda ((g$cars/f$11647$1HvE18) (if g$cars/f$11647$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11648$1HvE18) (if g$cdrs/f$11648$1HvE18 (begin '#f (map cons g$cars/f$11647$1HvE18 g$cdrs/f$11648$1HvE18)) '#f))) (g$f$11645$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11646$1HvE18)))) '#f))) ((case-lambda ((g$x$11649$1HvE18) (list g$x$11649$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11646$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11646$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$11645$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11642$1HvE18)))) '#f))) ((case-lambda ((g$x$11650$1HvE18) (list g$x$11650$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11642$1HvE18)))) '#f))) g$t$11633$1HvE18)))) g$t$11629$1HvE18)))) ((case-lambda ((g$x$11651$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11651$1HvE18) (begin '#f ((case-lambda ((g$q$11652$1HvE18) (if g$q$11652$1HvE18 (begin '#f ((case-lambda ((g$r$11653$1HvE18) (if g$r$11653$1HvE18 (begin '#f (append g$q$11652$1HvE18 g$r$11653$1HvE18)) '#f))) ((case-lambda ((g$x$11654$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11654$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11651$1HvE18)))) '#f))) ((case-lambda ((g$x$11655$1HvE18) (list g$x$11655$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11651$1HvE18)))) '#f))) g$t$11629$1HvE18)))) g$t$11623$1HvE18)))) ((case-lambda ((g$x$11656$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11656$1HvE18) (begin '#f ((case-lambda ((g$q$11657$1HvE18) (if g$q$11657$1HvE18 (begin '#f ((case-lambda ((g$r$11658$1HvE18) (if g$r$11658$1HvE18 (begin '#f (append g$q$11657$1HvE18 g$r$11658$1HvE18)) '#f))) ((case-lambda ((g$x$11659$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11659$1HvE18) (begin '#f ((case-lambda ((g$q$11660$1HvE18) (if g$q$11660$1HvE18 (begin '#f ((case-lambda ((g$r$11661$1HvE18) (if g$r$11661$1HvE18 (begin '#f (append g$q$11660$1HvE18 g$r$11661$1HvE18)) '#f))) ((case-lambda ((g$x$11662$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11662$1HvE18) (begin '#f ((case-lambda ((g$q$11663$1HvE18) (if g$q$11663$1HvE18 (begin '#f ((case-lambda ((g$r$11664$1HvE18) (if g$r$11664$1HvE18 (begin '#f (append g$q$11663$1HvE18 g$r$11664$1HvE18)) '#f))) ((case-lambda ((g$x$11665$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11665$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11662$1HvE18)))) '#f))) ((case-lambda ((g$x$11666$1HvE18) (list g$x$11666$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11662$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11659$1HvE18)))) '#f))) ((case-lambda ((g$x$11667$1HvE18) (if (g$id?$9312$1HvE18 g$x$11667$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11667$1HvE18 (g$scheme-stx$9537$1HvE18 '=>)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11659$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11656$1HvE18)))) '#f))) ((case-lambda ((g$x$11668$1HvE18) (list g$x$11668$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11656$1HvE18)))) '#f))) g$t$11623$1HvE18)))) g$t$11617$1HvE18)))) ((case-lambda ((g$x$11669$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11669$1HvE18) (begin '#f ((case-lambda ((g$q$11670$1HvE18) (if g$q$11670$1HvE18 (begin '#f ((case-lambda ((g$r$11671$1HvE18) (if g$r$11671$1HvE18 (begin '#f (append g$q$11670$1HvE18 g$r$11671$1HvE18)) '#f))) ((case-lambda ((g$x$11672$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11672$1HvE18) (begin '#f ((case-lambda ((g$q$11673$1HvE18) (if g$q$11673$1HvE18 (begin '#f ((case-lambda ((g$r$11674$1HvE18) (if g$r$11674$1HvE18 (begin '#f (append g$q$11673$1HvE18 g$r$11674$1HvE18)) '#f))) ((letrec ((g$f$11675$1HvE18 (case-lambda ((g$x$11676$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11676$1HvE18) ((case-lambda ((g$cars/f$11677$1HvE18) (if g$cars/f$11677$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11678$1HvE18) (if g$cdrs/f$11678$1HvE18 (begin '#f (map cons g$cars/f$11677$1HvE18 g$cdrs/f$11678$1HvE18)) '#f))) (g$f$11675$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11676$1HvE18)))) '#f))) ((case-lambda ((g$x$11679$1HvE18) (list g$x$11679$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11676$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11676$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$11675$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11672$1HvE18)))) '#f))) ((case-lambda ((g$x$11680$1HvE18) (list g$x$11680$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11672$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11669$1HvE18)))) '#f))) ((case-lambda ((g$x$11681$1HvE18) (if (g$id?$9312$1HvE18 g$x$11681$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11681$1HvE18 (g$scheme-stx$9537$1HvE18 'else)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11669$1HvE18)))) '#f))) g$t$11617$1HvE18)))) g$cls$11615$1HvE18) ((case-lambda ((g$t$11682$1HvE18) ((case-lambda ((g$ls/false$11683$1HvE18) (if (if g$ls/false$11683$1HvE18 (begin '#f (apply (case-lambda ((g$e$11684$1HvE18 g$e*$11685$1HvE18) '#t)) g$ls/false$11683$1HvE18)) '#f) (apply (case-lambda ((g$e$11686$1HvE18 g$e*$11687$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"incorrect position of keyword else" g$stx$11607$1HvE18))) g$ls/false$11683$1HvE18) ((case-lambda ((g$t$11688$1HvE18) ((case-lambda ((g$ls/false$11689$1HvE18) (if (if g$ls/false$11689$1HvE18 (begin '#f (apply (case-lambda ((g$e$11690$1HvE18 g$p$11691$1HvE18) '#t)) g$ls/false$11689$1HvE18)) '#f) (apply (case-lambda ((g$e$11692$1HvE18 g$p$11693$1HvE18) (list 'let (list (list 't g$e$11692$1HvE18)) (list 'if 't (cons g$p$11693$1HvE18 '(t)) (g$f$11614$1HvE18 (car g$cls*$11616$1HvE18) (cdr g$cls*$11616$1HvE18)))))) g$ls/false$11689$1HvE18) ((case-lambda ((g$t$11694$1HvE18) ((case-lambda ((g$ls/false$11695$1HvE18) (if (if g$ls/false$11695$1HvE18 (begin '#f (apply (case-lambda ((g$e$11696$1HvE18) '#t)) g$ls/false$11695$1HvE18)) '#f) (apply (case-lambda ((g$e$11697$1HvE18) (list 'or g$e$11697$1HvE18 (g$f$11614$1HvE18 (car g$cls*$11616$1HvE18) (cdr g$cls*$11616$1HvE18))))) g$ls/false$11695$1HvE18) ((case-lambda ((g$t$11698$1HvE18) ((case-lambda ((g$ls/false$11699$1HvE18) (if (if g$ls/false$11699$1HvE18 (begin '#f (apply (case-lambda ((g$e$11700$1HvE18 g$e*$11701$1HvE18) '#t)) g$ls/false$11699$1HvE18)) '#f) (apply (case-lambda ((g$e$11702$1HvE18 g$e*$11703$1HvE18) (list 'if g$e$11702$1HvE18 (cons 'begin g$e*$11703$1HvE18) (g$f$11614$1HvE18 (car g$cls*$11616$1HvE18) (cdr g$cls*$11616$1HvE18))))) g$ls/false$11699$1HvE18) ((case-lambda ((g$t$11704$1HvE18) ((case-lambda ((g$ls/false$11705$1HvE18) (if (if g$ls/false$11705$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$11705$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"invalid last clause" g$stx$11607$1HvE18))) g$ls/false$11705$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11704$1HvE18)))) ((case-lambda ((g$x$11706$1HvE18) '())) g$t$11704$1HvE18)))) g$t$11698$1HvE18)))) ((case-lambda ((g$x$11707$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11707$1HvE18) (begin '#f ((case-lambda ((g$q$11708$1HvE18) (if g$q$11708$1HvE18 (begin '#f ((case-lambda ((g$r$11709$1HvE18) (if g$r$11709$1HvE18 (begin '#f (append g$q$11708$1HvE18 g$r$11709$1HvE18)) '#f))) ((letrec ((g$f$11710$1HvE18 (case-lambda ((g$x$11711$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11711$1HvE18) ((case-lambda ((g$cars/f$11712$1HvE18) (if g$cars/f$11712$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11713$1HvE18) (if g$cdrs/f$11713$1HvE18 (begin '#f (map cons g$cars/f$11712$1HvE18 g$cdrs/f$11713$1HvE18)) '#f))) (g$f$11710$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11711$1HvE18)))) '#f))) ((case-lambda ((g$x$11714$1HvE18) (list g$x$11714$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11711$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11711$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$11710$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11707$1HvE18)))) '#f))) ((case-lambda ((g$x$11715$1HvE18) (list g$x$11715$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11707$1HvE18)))) '#f))) g$t$11698$1HvE18)))) g$t$11694$1HvE18)))) ((case-lambda ((g$x$11716$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11716$1HvE18) (begin '#f ((case-lambda ((g$q$11717$1HvE18) (if g$q$11717$1HvE18 (begin '#f ((case-lambda ((g$r$11718$1HvE18) (if g$r$11718$1HvE18 (begin '#f (append g$q$11717$1HvE18 g$r$11718$1HvE18)) '#f))) ((case-lambda ((g$x$11719$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11719$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11716$1HvE18)))) '#f))) ((case-lambda ((g$x$11720$1HvE18) (list g$x$11720$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11716$1HvE18)))) '#f))) g$t$11694$1HvE18)))) g$t$11688$1HvE18)))) ((case-lambda ((g$x$11721$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11721$1HvE18) (begin '#f ((case-lambda ((g$q$11722$1HvE18) (if g$q$11722$1HvE18 (begin '#f ((case-lambda ((g$r$11723$1HvE18) (if g$r$11723$1HvE18 (begin '#f (append g$q$11722$1HvE18 g$r$11723$1HvE18)) '#f))) ((case-lambda ((g$x$11724$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11724$1HvE18) (begin '#f ((case-lambda ((g$q$11725$1HvE18) (if g$q$11725$1HvE18 (begin '#f ((case-lambda ((g$r$11726$1HvE18) (if g$r$11726$1HvE18 (begin '#f (append g$q$11725$1HvE18 g$r$11726$1HvE18)) '#f))) ((case-lambda ((g$x$11727$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11727$1HvE18) (begin '#f ((case-lambda ((g$q$11728$1HvE18) (if g$q$11728$1HvE18 (begin '#f ((case-lambda ((g$r$11729$1HvE18) (if g$r$11729$1HvE18 (begin '#f (append g$q$11728$1HvE18 g$r$11729$1HvE18)) '#f))) ((case-lambda ((g$x$11730$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11730$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11727$1HvE18)))) '#f))) ((case-lambda ((g$x$11731$1HvE18) (list g$x$11731$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11727$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11724$1HvE18)))) '#f))) ((case-lambda ((g$x$11732$1HvE18) (if (g$id?$9312$1HvE18 g$x$11732$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11732$1HvE18 (g$scheme-stx$9537$1HvE18 '=>)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11724$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11721$1HvE18)))) '#f))) ((case-lambda ((g$x$11733$1HvE18) (list g$x$11733$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11721$1HvE18)))) '#f))) g$t$11688$1HvE18)))) g$t$11682$1HvE18)))) ((case-lambda ((g$x$11734$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11734$1HvE18) (begin '#f ((case-lambda ((g$q$11735$1HvE18) (if g$q$11735$1HvE18 (begin '#f ((case-lambda ((g$r$11736$1HvE18) (if g$r$11736$1HvE18 (begin '#f (append g$q$11735$1HvE18 g$r$11736$1HvE18)) '#f))) ((case-lambda ((g$x$11737$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11737$1HvE18) (begin '#f ((case-lambda ((g$q$11738$1HvE18) (if g$q$11738$1HvE18 (begin '#f ((case-lambda ((g$r$11739$1HvE18) (if g$r$11739$1HvE18 (begin '#f (append g$q$11738$1HvE18 g$r$11739$1HvE18)) '#f))) ((letrec ((g$f$11740$1HvE18 (case-lambda ((g$x$11741$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11741$1HvE18) ((case-lambda ((g$cars/f$11742$1HvE18) (if g$cars/f$11742$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11743$1HvE18) (if g$cdrs/f$11743$1HvE18 (begin '#f (map cons g$cars/f$11742$1HvE18 g$cdrs/f$11743$1HvE18)) '#f))) (g$f$11740$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11741$1HvE18)))) '#f))) ((case-lambda ((g$x$11744$1HvE18) (list g$x$11744$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11741$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11741$1HvE18) (list (begin 'e* '())) '#f)))))) g$f$11740$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11737$1HvE18)))) '#f))) ((case-lambda ((g$x$11745$1HvE18) (list g$x$11745$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11737$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11734$1HvE18)))) '#f))) ((case-lambda ((g$x$11746$1HvE18) (if (g$id?$9312$1HvE18 g$x$11746$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11746$1HvE18 (g$scheme-stx$9537$1HvE18 'else)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11734$1HvE18)))) '#f))) g$t$11682$1HvE18)))) g$cls$11615$1HvE18)))))) g$f$11614$1HvE18) g$cls$11612$1HvE18 g$cls*$11613$1HvE18)))) g$ls/false$11609$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11608$1HvE18)))) ((case-lambda ((g$x$11747$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11747$1HvE18) (begin '#f ((case-lambda ((g$q$11748$1HvE18) (if g$q$11748$1HvE18 (begin '#f ((case-lambda ((g$r$11749$1HvE18) (if g$r$11749$1HvE18 (begin '#f (append g$q$11748$1HvE18 g$r$11749$1HvE18)) '#f))) ((case-lambda ((g$x$11750$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11750$1HvE18) (begin '#f ((case-lambda ((g$q$11751$1HvE18) (if g$q$11751$1HvE18 (begin '#f ((case-lambda ((g$r$11752$1HvE18) (if g$r$11752$1HvE18 (begin '#f (append g$q$11751$1HvE18 g$r$11752$1HvE18)) '#f))) ((letrec ((g$f$11753$1HvE18 (case-lambda ((g$x$11754$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11754$1HvE18) ((case-lambda ((g$cars/f$11755$1HvE18) (if g$cars/f$11755$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11756$1HvE18) (if g$cdrs/f$11756$1HvE18 (begin '#f (map cons g$cars/f$11755$1HvE18 g$cdrs/f$11756$1HvE18)) '#f))) (g$f$11753$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11754$1HvE18)))) '#f))) ((case-lambda ((g$x$11757$1HvE18) (list g$x$11757$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11754$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11754$1HvE18) (list (begin 'cls* '())) '#f)))))) g$f$11753$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11750$1HvE18)))) '#f))) ((case-lambda ((g$x$11758$1HvE18) (list g$x$11758$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11750$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11747$1HvE18)))) '#f))) ((case-lambda ((g$x$11759$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11747$1HvE18)))) '#f))) g$t$11608$1HvE18)))) g$stx$11607$1HvE18)))) (g$do-include$9578$1HvE18 g$do-include$15683$1HvE18 (case-lambda ((g$stx$11760$1HvE18 g$id$11761$1HvE18 g$filename$11762$1HvE18) ((case-lambda ((g$filename$11763$1HvE18) (begin (if (if (string? g$filename$11763$1HvE18) (begin '#f (g$id?$9312$1HvE18 g$id$11761$1HvE18)) '#f) (void) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$stx$11760$1HvE18)) (cons (g$bless$9557$1HvE18 'begin) (with-input-from-file g$filename$11763$1HvE18 (case-lambda (() ((letrec ((g$f$11764$1HvE18 (case-lambda ((g$ls$11765$1HvE18) ((case-lambda ((g$x$11766$1HvE18) (if (eof-object? g$x$11766$1HvE18) (reverse g$ls$11765$1HvE18) (g$f$11764$1HvE18 (cons (g$datum->stx$9295$1HvE18 g$id$11761$1HvE18 g$x$11766$1HvE18) g$ls$11765$1HvE18))))) (read-annotated)))))) g$f$11764$1HvE18) '())))))))) (g$stx->datum$9323$1HvE18 g$filename$11762$1HvE18))))) (g$include-macro$9579$1HvE18 g$include-macro$15684$1HvE18 (case-lambda ((g$e$11767$1HvE18) ((case-lambda ((g$t$11768$1HvE18) ((case-lambda ((g$ls/false$11769$1HvE18) (if (if g$ls/false$11769$1HvE18 (begin '#f (apply (case-lambda ((g$id$11770$1HvE18 g$filename$11771$1HvE18) '#t)) g$ls/false$11769$1HvE18)) '#f) (apply (case-lambda ((g$id$11772$1HvE18 g$filename$11773$1HvE18) (g$do-include$9578$1HvE18 g$e$11767$1HvE18 g$id$11772$1HvE18 g$filename$11773$1HvE18))) g$ls/false$11769$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11768$1HvE18)))) ((case-lambda ((g$x$11774$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11774$1HvE18) (begin '#f ((case-lambda ((g$q$11775$1HvE18) (if g$q$11775$1HvE18 (begin '#f ((case-lambda ((g$r$11776$1HvE18) (if g$r$11776$1HvE18 (begin '#f (append g$q$11775$1HvE18 g$r$11776$1HvE18)) '#f))) ((case-lambda ((g$x$11777$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11777$1HvE18) (begin '#f ((case-lambda ((g$q$11778$1HvE18) (if g$q$11778$1HvE18 (begin '#f ((case-lambda ((g$r$11779$1HvE18) (if g$r$11779$1HvE18 (begin '#f (append g$q$11778$1HvE18 g$r$11779$1HvE18)) '#f))) ((case-lambda ((g$x$11780$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11780$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11777$1HvE18)))) '#f))) ((case-lambda ((g$x$11781$1HvE18) (list g$x$11781$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11777$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11774$1HvE18)))) '#f))) ((case-lambda ((g$x$11782$1HvE18) (list g$x$11782$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11774$1HvE18)))) '#f))) g$t$11768$1HvE18)))) g$e$11767$1HvE18)))) (g$include-into-macro$9580$1HvE18 g$include-into-macro$15685$1HvE18 (case-lambda ((g$e$11783$1HvE18) ((case-lambda ((g$t$11784$1HvE18) ((case-lambda ((g$ls/false$11785$1HvE18) (if (if g$ls/false$11785$1HvE18 (begin '#f (apply (case-lambda ((g$id$11786$1HvE18 g$filename$11787$1HvE18) '#t)) g$ls/false$11785$1HvE18)) '#f) (apply (case-lambda ((g$id$11788$1HvE18 g$filename$11789$1HvE18) (g$do-include$9578$1HvE18 g$e$11783$1HvE18 g$id$11788$1HvE18 g$filename$11789$1HvE18))) g$ls/false$11785$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11784$1HvE18)))) ((case-lambda ((g$x$11790$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11790$1HvE18) (begin '#f ((case-lambda ((g$q$11791$1HvE18) (if g$q$11791$1HvE18 (begin '#f ((case-lambda ((g$r$11792$1HvE18) (if g$r$11792$1HvE18 (begin '#f (append g$q$11791$1HvE18 g$r$11792$1HvE18)) '#f))) ((case-lambda ((g$x$11793$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11793$1HvE18) (begin '#f ((case-lambda ((g$q$11794$1HvE18) (if g$q$11794$1HvE18 (begin '#f ((case-lambda ((g$r$11795$1HvE18) (if g$r$11795$1HvE18 (begin '#f (append g$q$11794$1HvE18 g$r$11795$1HvE18)) '#f))) ((case-lambda ((g$x$11796$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11796$1HvE18) (begin '#f ((case-lambda ((g$q$11797$1HvE18) (if g$q$11797$1HvE18 (begin '#f ((case-lambda ((g$r$11798$1HvE18) (if g$r$11798$1HvE18 (begin '#f (append g$q$11797$1HvE18 g$r$11798$1HvE18)) '#f))) ((case-lambda ((g$x$11799$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11799$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11796$1HvE18)))) '#f))) ((case-lambda ((g$x$11800$1HvE18) (list g$x$11800$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11796$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11793$1HvE18)))) '#f))) ((case-lambda ((g$x$11801$1HvE18) (list g$x$11801$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11793$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11790$1HvE18)))) '#f))) ((case-lambda ((g$x$11802$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11790$1HvE18)))) '#f))) g$t$11784$1HvE18)))) g$e$11783$1HvE18)))) (g$syntax-rules-macro$9581$1HvE18 g$syntax-rules-macro$15686$1HvE18 (case-lambda ((g$e$11803$1HvE18) ((case-lambda ((g$t$11804$1HvE18) ((case-lambda ((g$ls/false$11805$1HvE18) (if (if g$ls/false$11805$1HvE18 (begin '#f (apply (case-lambda ((g$lits$11806$1HvE18 g$pat*$11807$1HvE18 g$tmp*$11808$1HvE18) '#t)) g$ls/false$11805$1HvE18)) '#f) (apply (case-lambda ((g$lits$11809$1HvE18 g$pat*$11810$1HvE18 g$tmp*$11811$1HvE18) (begin (if (g$for-all$7965$1HvE18 (case-lambda ((g$x$11812$1HvE18) (if (g$id?$9312$1HvE18 g$x$11812$1HvE18) (if (not (g$free-id=?$9316$1HvE18 g$x$11812$1HvE18 (g$scheme-stx$9537$1HvE18 '...))) (begin '#f (not (g$free-id=?$9316$1HvE18 g$x$11812$1HvE18 (g$scheme-stx$9537$1HvE18 '_)))) '#f) '#f))) g$lits$11809$1HvE18) (void) (g$syntax-violation$9695$1HvE18 '#f '"invalid literals" g$e$11803$1HvE18)) (g$bless$9557$1HvE18 (list 'lambda '(x) (cons 'syntax-case (cons 'x (cons g$lits$11809$1HvE18 (map (case-lambda ((g$pat$11813$1HvE18 g$tmp$11814$1HvE18) ((case-lambda ((g$t$11815$1HvE18) ((case-lambda ((g$ls/false$11816$1HvE18) (if (if g$ls/false$11816$1HvE18 (begin '#f (apply (case-lambda ((g$rest$11817$1HvE18) '#t)) g$ls/false$11816$1HvE18)) '#f) (apply (case-lambda ((g$rest$11818$1HvE18) (list (cons 'g g$rest$11818$1HvE18) (list 'syntax g$tmp$11814$1HvE18)))) g$ls/false$11816$1HvE18) ((case-lambda ((g$t$11819$1HvE18) ((case-lambda ((g$ls/false$11820$1HvE18) (if (if g$ls/false$11820$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$11820$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax-rules pattern" g$e$11803$1HvE18 g$pat$11813$1HvE18))) g$ls/false$11820$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11819$1HvE18)))) ((case-lambda ((g$x$11821$1HvE18) '())) g$t$11819$1HvE18)))) g$t$11815$1HvE18)))) ((case-lambda ((g$x$11822$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11822$1HvE18) (begin '#f ((case-lambda ((g$q$11823$1HvE18) (if g$q$11823$1HvE18 (begin '#f ((case-lambda ((g$r$11824$1HvE18) (if g$r$11824$1HvE18 (begin '#f (append g$q$11823$1HvE18 g$r$11824$1HvE18)) '#f))) ((case-lambda ((g$x$11825$1HvE18) (list g$x$11825$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$11822$1HvE18)))) '#f))) ((case-lambda ((g$x$11826$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11822$1HvE18)))) '#f))) g$t$11815$1HvE18)))) g$pat$11813$1HvE18))) g$pat*$11810$1HvE18 g$tmp*$11811$1HvE18))))))))) g$ls/false$11805$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11804$1HvE18)))) ((case-lambda ((g$x$11827$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11827$1HvE18) (begin '#f ((case-lambda ((g$q$11828$1HvE18) (if g$q$11828$1HvE18 (begin '#f ((case-lambda ((g$r$11829$1HvE18) (if g$r$11829$1HvE18 (begin '#f (append g$q$11828$1HvE18 g$r$11829$1HvE18)) '#f))) ((case-lambda ((g$x$11830$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11830$1HvE18) (begin '#f ((case-lambda ((g$q$11831$1HvE18) (if g$q$11831$1HvE18 (begin '#f ((case-lambda ((g$r$11832$1HvE18) (if g$r$11832$1HvE18 (begin '#f (append g$q$11831$1HvE18 g$r$11832$1HvE18)) '#f))) ((letrec ((g$f$11833$1HvE18 (case-lambda ((g$x$11834$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11834$1HvE18) ((case-lambda ((g$cars/f$11835$1HvE18) (if g$cars/f$11835$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11836$1HvE18) (if g$cdrs/f$11836$1HvE18 (begin '#f (map cons g$cars/f$11835$1HvE18 g$cdrs/f$11836$1HvE18)) '#f))) (g$f$11833$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11834$1HvE18)))) '#f))) ((case-lambda ((g$x$11837$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11837$1HvE18) (begin '#f ((case-lambda ((g$q$11838$1HvE18) (if g$q$11838$1HvE18 (begin '#f ((case-lambda ((g$r$11839$1HvE18) (if g$r$11839$1HvE18 (begin '#f (append g$q$11838$1HvE18 g$r$11839$1HvE18)) '#f))) ((case-lambda ((g$x$11840$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11840$1HvE18) (begin '#f ((case-lambda ((g$q$11841$1HvE18) (if g$q$11841$1HvE18 (begin '#f ((case-lambda ((g$r$11842$1HvE18) (if g$r$11842$1HvE18 (begin '#f (append g$q$11841$1HvE18 g$r$11842$1HvE18)) '#f))) ((case-lambda ((g$x$11843$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11843$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11840$1HvE18)))) '#f))) ((case-lambda ((g$x$11844$1HvE18) (list g$x$11844$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11840$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11837$1HvE18)))) '#f))) ((case-lambda ((g$x$11845$1HvE18) (list g$x$11845$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11837$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11834$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11834$1HvE18) (list (begin 'pat* '()) (begin 'tmp* '())) '#f)))))) g$f$11833$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11830$1HvE18)))) '#f))) ((letrec ((g$f$11846$1HvE18 (case-lambda ((g$x$11847$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11847$1HvE18) ((case-lambda ((g$cars/f$11848$1HvE18) (if g$cars/f$11848$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11849$1HvE18) (if g$cdrs/f$11849$1HvE18 (begin '#f (map cons g$cars/f$11848$1HvE18 g$cdrs/f$11849$1HvE18)) '#f))) (g$f$11846$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11847$1HvE18)))) '#f))) ((case-lambda ((g$x$11850$1HvE18) (list g$x$11850$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11847$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11847$1HvE18) (list (begin 'lits '())) '#f)))))) g$f$11846$1HvE18) (g$syntax-car$9309$1HvE18 g$x$11830$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11827$1HvE18)))) '#f))) ((case-lambda ((g$x$11851$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11827$1HvE18)))) '#f))) g$t$11804$1HvE18)))) g$e$11803$1HvE18)))) (g$quasiquote-macro$9582$1HvE18 g$quasiquote-macro$15687$1HvE18 ((case-lambda (() (letrec* ((g$datum$11852$1HvE18 (case-lambda ((g$x$12197$1HvE18) (list (g$scheme-stx$9537$1HvE18 'quote) (g$mkstx$9300$1HvE18 g$x$12197$1HvE18 '() '() '()))))) (g$quasicons*$11868$1HvE18 (case-lambda ((g$x$12193$1HvE18 g$y$12194$1HvE18) ((letrec ((g$f$12195$1HvE18 (case-lambda ((g$x$12196$1HvE18) (if (null? g$x$12196$1HvE18) g$y$12194$1HvE18 (g$quasicons$11869$1HvE18 (car g$x$12196$1HvE18) (g$f$12195$1HvE18 (cdr g$x$12196$1HvE18)))))))) g$f$12195$1HvE18) g$x$12193$1HvE18)))) (g$quasicons$11869$1HvE18 (case-lambda ((g$x$12140$1HvE18 g$y$12141$1HvE18) ((case-lambda ((g$t$12142$1HvE18) ((case-lambda ((g$ls/false$12143$1HvE18) (if (if g$ls/false$12143$1HvE18 (begin '#f (apply (case-lambda ((g$dy$12144$1HvE18) '#t)) g$ls/false$12143$1HvE18)) '#f) (apply (case-lambda ((g$dy$12145$1HvE18) ((case-lambda ((g$t$12146$1HvE18) ((case-lambda ((g$ls/false$12147$1HvE18) (if (if g$ls/false$12147$1HvE18 (begin '#f (apply (case-lambda ((g$dx$12148$1HvE18) '#t)) g$ls/false$12147$1HvE18)) '#f) (apply (case-lambda ((g$dx$12149$1HvE18) (list (g$scheme-stx$9537$1HvE18 'quote) (cons g$dx$12149$1HvE18 g$dy$12145$1HvE18)))) g$ls/false$12147$1HvE18) ((case-lambda ((g$t$12150$1HvE18) ((case-lambda ((g$ls/false$12151$1HvE18) (if (if g$ls/false$12151$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12151$1HvE18)) '#f) (apply (case-lambda (() ((case-lambda ((g$t$12152$1HvE18) ((case-lambda ((g$ls/false$12153$1HvE18) (if (if g$ls/false$12153$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12153$1HvE18)) '#f) (apply (case-lambda (() (list (g$scheme-stx$9537$1HvE18 'list) g$x$12140$1HvE18))) g$ls/false$12153$1HvE18) ((case-lambda ((g$t$12154$1HvE18) ((case-lambda ((g$ls/false$12155$1HvE18) (if (if g$ls/false$12155$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12155$1HvE18)) '#f) (apply (case-lambda (() (list (g$scheme-stx$9537$1HvE18 'cons) g$x$12140$1HvE18 g$y$12141$1HvE18))) g$ls/false$12155$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12154$1HvE18)))) ((case-lambda ((g$x$12156$1HvE18) '())) g$t$12154$1HvE18)))) g$t$12152$1HvE18)))) ((case-lambda ((g$x$12157$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12157$1HvE18) '()) (begin '#f '()) '#f))) g$t$12152$1HvE18)))) g$dy$12145$1HvE18))) g$ls/false$12151$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12150$1HvE18)))) ((case-lambda ((g$x$12158$1HvE18) '())) g$t$12150$1HvE18)))) g$t$12146$1HvE18)))) ((case-lambda ((g$x$12159$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12159$1HvE18) (begin '#f ((case-lambda ((g$q$12160$1HvE18) (if g$q$12160$1HvE18 (begin '#f ((case-lambda ((g$r$12161$1HvE18) (if g$r$12161$1HvE18 (begin '#f (append g$q$12160$1HvE18 g$r$12161$1HvE18)) '#f))) ((case-lambda ((g$x$12162$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12162$1HvE18) (begin '#f ((case-lambda ((g$q$12163$1HvE18) (if g$q$12163$1HvE18 (begin '#f ((case-lambda ((g$r$12164$1HvE18) (if g$r$12164$1HvE18 (begin '#f (append g$q$12163$1HvE18 g$r$12164$1HvE18)) '#f))) ((case-lambda ((g$x$12165$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12165$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12162$1HvE18)))) '#f))) ((case-lambda ((g$x$12166$1HvE18) (list g$x$12166$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12162$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12159$1HvE18)))) '#f))) ((case-lambda ((g$x$12167$1HvE18) (if (g$id?$9312$1HvE18 g$x$12167$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12167$1HvE18 (g$scheme-stx$9537$1HvE18 'quote)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12159$1HvE18)))) '#f))) g$t$12146$1HvE18)))) g$x$12140$1HvE18))) g$ls/false$12143$1HvE18) ((case-lambda ((g$t$12168$1HvE18) ((case-lambda ((g$ls/false$12169$1HvE18) (if (if g$ls/false$12169$1HvE18 (begin '#f (apply (case-lambda ((g$stuff$12170$1HvE18) '#t)) g$ls/false$12169$1HvE18)) '#f) (apply (case-lambda ((g$stuff$12171$1HvE18) (g$cons*$7967$1HvE18 (g$scheme-stx$9537$1HvE18 'list) g$x$12140$1HvE18 g$stuff$12171$1HvE18))) g$ls/false$12169$1HvE18) ((case-lambda ((g$t$12172$1HvE18) ((case-lambda ((g$ls/false$12173$1HvE18) (if (if g$ls/false$12173$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12173$1HvE18)) '#f) (apply (case-lambda (() (list (g$scheme-stx$9537$1HvE18 'cons) g$x$12140$1HvE18 g$y$12141$1HvE18))) g$ls/false$12173$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12172$1HvE18)))) ((case-lambda ((g$x$12174$1HvE18) '())) g$t$12172$1HvE18)))) g$t$12168$1HvE18)))) ((case-lambda ((g$x$12175$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12175$1HvE18) (begin '#f ((case-lambda ((g$q$12176$1HvE18) (if g$q$12176$1HvE18 (begin '#f ((case-lambda ((g$r$12177$1HvE18) (if g$r$12177$1HvE18 (begin '#f (append g$q$12176$1HvE18 g$r$12177$1HvE18)) '#f))) ((letrec ((g$f$12178$1HvE18 (case-lambda ((g$x$12179$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12179$1HvE18) ((case-lambda ((g$cars/f$12180$1HvE18) (if g$cars/f$12180$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12181$1HvE18) (if g$cdrs/f$12181$1HvE18 (begin '#f (map cons g$cars/f$12180$1HvE18 g$cdrs/f$12181$1HvE18)) '#f))) (g$f$12178$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12179$1HvE18)))) '#f))) ((case-lambda ((g$x$12182$1HvE18) (list g$x$12182$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12179$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12179$1HvE18) (list (begin 'stuff '())) '#f)))))) g$f$12178$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$12175$1HvE18)))) '#f))) ((case-lambda ((g$x$12183$1HvE18) (if (g$id?$9312$1HvE18 g$x$12183$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12183$1HvE18 (g$scheme-stx$9537$1HvE18 'list)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12175$1HvE18)))) '#f))) g$t$12168$1HvE18)))) g$t$12142$1HvE18)))) ((case-lambda ((g$x$12184$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12184$1HvE18) (begin '#f ((case-lambda ((g$q$12185$1HvE18) (if g$q$12185$1HvE18 (begin '#f ((case-lambda ((g$r$12186$1HvE18) (if g$r$12186$1HvE18 (begin '#f (append g$q$12185$1HvE18 g$r$12186$1HvE18)) '#f))) ((case-lambda ((g$x$12187$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12187$1HvE18) (begin '#f ((case-lambda ((g$q$12188$1HvE18) (if g$q$12188$1HvE18 (begin '#f ((case-lambda ((g$r$12189$1HvE18) (if g$r$12189$1HvE18 (begin '#f (append g$q$12188$1HvE18 g$r$12189$1HvE18)) '#f))) ((case-lambda ((g$x$12190$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12190$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12187$1HvE18)))) '#f))) ((case-lambda ((g$x$12191$1HvE18) (list g$x$12191$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12187$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12184$1HvE18)))) '#f))) ((case-lambda ((g$x$12192$1HvE18) (if (g$id?$9312$1HvE18 g$x$12192$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12192$1HvE18 (g$scheme-stx$9537$1HvE18 'quote)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12184$1HvE18)))) '#f))) g$t$12142$1HvE18)))) g$y$12141$1HvE18)))) (g$quasiappend$11870$1HvE18 (case-lambda ((g$x$12107$1HvE18 g$y$12108$1HvE18) ((case-lambda ((g$ls$12109$1HvE18) (if (null? g$ls$12109$1HvE18) (list (g$scheme-stx$9537$1HvE18 'quote) '()) (if (null? (cdr g$ls$12109$1HvE18)) (car g$ls$12109$1HvE18) (g$cons*$7967$1HvE18 (g$scheme-stx$9537$1HvE18 'append) g$ls$12109$1HvE18))))) ((letrec ((g$f$12110$1HvE18 (case-lambda ((g$x$12111$1HvE18) (if (null? g$x$12111$1HvE18) ((case-lambda ((g$t$12112$1HvE18) ((case-lambda ((g$ls/false$12113$1HvE18) (if (if g$ls/false$12113$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12113$1HvE18)) '#f) (apply (case-lambda (() '())) g$ls/false$12113$1HvE18) ((case-lambda ((g$t$12114$1HvE18) ((case-lambda ((g$ls/false$12115$1HvE18) (if (if g$ls/false$12115$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12115$1HvE18)) '#f) (apply (case-lambda (() (list g$y$12108$1HvE18))) g$ls/false$12115$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12114$1HvE18)))) ((case-lambda ((g$x$12116$1HvE18) '())) g$t$12114$1HvE18)))) g$t$12112$1HvE18)))) ((case-lambda ((g$x$12117$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12117$1HvE18) (begin '#f ((case-lambda ((g$q$12118$1HvE18) (if g$q$12118$1HvE18 (begin '#f ((case-lambda ((g$r$12119$1HvE18) (if g$r$12119$1HvE18 (begin '#f (append g$q$12118$1HvE18 g$r$12119$1HvE18)) '#f))) ((case-lambda ((g$x$12120$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12120$1HvE18) (begin '#f ((case-lambda ((g$q$12121$1HvE18) (if g$q$12121$1HvE18 (begin '#f ((case-lambda ((g$r$12122$1HvE18) (if g$r$12122$1HvE18 (begin '#f (append g$q$12121$1HvE18 g$r$12122$1HvE18)) '#f))) ((case-lambda ((g$x$12123$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12123$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12120$1HvE18)))) '#f))) ((case-lambda ((g$x$12124$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12124$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-car$9309$1HvE18 g$x$12120$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12117$1HvE18)))) '#f))) ((case-lambda ((g$x$12125$1HvE18) (if (g$id?$9312$1HvE18 g$x$12125$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12125$1HvE18 (g$scheme-stx$9537$1HvE18 'quote)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12117$1HvE18)))) '#f))) g$t$12112$1HvE18)))) g$y$12108$1HvE18) ((case-lambda ((g$t$12126$1HvE18) ((case-lambda ((g$ls/false$12127$1HvE18) (if (if g$ls/false$12127$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12127$1HvE18)) '#f) (apply (case-lambda (() (g$f$12110$1HvE18 (cdr g$x$12111$1HvE18)))) g$ls/false$12127$1HvE18) ((case-lambda ((g$t$12128$1HvE18) ((case-lambda ((g$ls/false$12129$1HvE18) (if (if g$ls/false$12129$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12129$1HvE18)) '#f) (apply (case-lambda (() (cons (car g$x$12111$1HvE18) (g$f$12110$1HvE18 (cdr g$x$12111$1HvE18))))) g$ls/false$12129$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12128$1HvE18)))) ((case-lambda ((g$x$12130$1HvE18) '())) g$t$12128$1HvE18)))) g$t$12126$1HvE18)))) ((case-lambda ((g$x$12131$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12131$1HvE18) (begin '#f ((case-lambda ((g$q$12132$1HvE18) (if g$q$12132$1HvE18 (begin '#f ((case-lambda ((g$r$12133$1HvE18) (if g$r$12133$1HvE18 (begin '#f (append g$q$12132$1HvE18 g$r$12133$1HvE18)) '#f))) ((case-lambda ((g$x$12134$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12134$1HvE18) (begin '#f ((case-lambda ((g$q$12135$1HvE18) (if g$q$12135$1HvE18 (begin '#f ((case-lambda ((g$r$12136$1HvE18) (if g$r$12136$1HvE18 (begin '#f (append g$q$12135$1HvE18 g$r$12136$1HvE18)) '#f))) ((case-lambda ((g$x$12137$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12137$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12134$1HvE18)))) '#f))) ((case-lambda ((g$x$12138$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12138$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-car$9309$1HvE18 g$x$12134$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12131$1HvE18)))) '#f))) ((case-lambda ((g$x$12139$1HvE18) (if (g$id?$9312$1HvE18 g$x$12139$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12139$1HvE18 (g$scheme-stx$9537$1HvE18 'quote)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12131$1HvE18)))) '#f))) g$t$12126$1HvE18)))) (car g$x$12111$1HvE18))))))) g$f$12110$1HvE18) g$x$12107$1HvE18))))) (g$quasivector$11871$1HvE18 (case-lambda ((g$x$12027$1HvE18) ((case-lambda ((g$pat-x$12028$1HvE18) ((case-lambda ((g$t$12029$1HvE18) ((case-lambda ((g$ls/false$12030$1HvE18) (if (if g$ls/false$12030$1HvE18 (begin '#f (apply (case-lambda ((g$x*$12031$1HvE18) '#t)) g$ls/false$12030$1HvE18)) '#f) (apply (case-lambda ((g$x*$12032$1HvE18) (list (g$scheme-stx$9537$1HvE18 'quote) (list->vector g$x*$12032$1HvE18)))) g$ls/false$12030$1HvE18) ((case-lambda ((g$t$12033$1HvE18) ((case-lambda ((g$ls/false$12034$1HvE18) (if (if g$ls/false$12034$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12034$1HvE18)) '#f) (apply (case-lambda (() ((letrec ((g$f$12035$1HvE18 (case-lambda ((g$x$12036$1HvE18 g$k$12037$1HvE18) ((case-lambda ((g$t$12038$1HvE18) ((case-lambda ((g$ls/false$12039$1HvE18) (if (if g$ls/false$12039$1HvE18 (begin '#f (apply (case-lambda ((g$x*$12040$1HvE18) '#t)) g$ls/false$12039$1HvE18)) '#f) (apply (case-lambda ((g$x*$12041$1HvE18) (g$k$12037$1HvE18 (map (case-lambda ((g$x$12042$1HvE18) (list (g$scheme-stx$9537$1HvE18 'quote) g$x$12042$1HvE18))) g$x*$12041$1HvE18)))) g$ls/false$12039$1HvE18) ((case-lambda ((g$t$12043$1HvE18) ((case-lambda ((g$ls/false$12044$1HvE18) (if (if g$ls/false$12044$1HvE18 (begin '#f (apply (case-lambda ((g$x*$12045$1HvE18) '#t)) g$ls/false$12044$1HvE18)) '#f) (apply (case-lambda ((g$x*$12046$1HvE18) (g$k$12037$1HvE18 g$x*$12046$1HvE18))) g$ls/false$12044$1HvE18) ((case-lambda ((g$t$12047$1HvE18) ((case-lambda ((g$ls/false$12048$1HvE18) (if (if g$ls/false$12048$1HvE18 (begin '#f (apply (case-lambda ((g$x$12049$1HvE18 g$y$12050$1HvE18) '#t)) g$ls/false$12048$1HvE18)) '#f) (apply (case-lambda ((g$x$12051$1HvE18 g$y$12052$1HvE18) (g$f$12035$1HvE18 g$y$12052$1HvE18 (case-lambda ((g$ls$12053$1HvE18) (g$k$12037$1HvE18 (cons g$x$12051$1HvE18 g$ls$12053$1HvE18))))))) g$ls/false$12048$1HvE18) ((case-lambda ((g$t$12054$1HvE18) ((case-lambda ((g$ls/false$12055$1HvE18) (if (if g$ls/false$12055$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12055$1HvE18)) '#f) (apply (case-lambda (() (list (g$scheme-stx$9537$1HvE18 'list->vector) g$pat-x$12028$1HvE18))) g$ls/false$12055$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12054$1HvE18)))) ((case-lambda ((g$x$12056$1HvE18) '())) g$t$12054$1HvE18)))) g$t$12047$1HvE18)))) ((case-lambda ((g$x$12057$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12057$1HvE18) (begin '#f ((case-lambda ((g$q$12058$1HvE18) (if g$q$12058$1HvE18 (begin '#f ((case-lambda ((g$r$12059$1HvE18) (if g$r$12059$1HvE18 (begin '#f (append g$q$12058$1HvE18 g$r$12059$1HvE18)) '#f))) ((case-lambda ((g$x$12060$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12060$1HvE18) (begin '#f ((case-lambda ((g$q$12061$1HvE18) (if g$q$12061$1HvE18 (begin '#f ((case-lambda ((g$r$12062$1HvE18) (if g$r$12062$1HvE18 (begin '#f (append g$q$12061$1HvE18 g$r$12062$1HvE18)) '#f))) ((case-lambda ((g$x$12063$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12063$1HvE18) (begin '#f ((case-lambda ((g$q$12064$1HvE18) (if g$q$12064$1HvE18 (begin '#f ((case-lambda ((g$r$12065$1HvE18) (if g$r$12065$1HvE18 (begin '#f (append g$q$12064$1HvE18 g$r$12065$1HvE18)) '#f))) ((case-lambda ((g$x$12066$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12066$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12063$1HvE18)))) '#f))) ((case-lambda ((g$x$12067$1HvE18) (list g$x$12067$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12063$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12060$1HvE18)))) '#f))) ((case-lambda ((g$x$12068$1HvE18) (list g$x$12068$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12060$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12057$1HvE18)))) '#f))) ((case-lambda ((g$x$12069$1HvE18) (if (g$id?$9312$1HvE18 g$x$12069$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12069$1HvE18 (g$scheme-stx$9537$1HvE18 'cons)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12057$1HvE18)))) '#f))) g$t$12047$1HvE18)))) g$t$12043$1HvE18)))) ((case-lambda ((g$x$12070$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12070$1HvE18) (begin '#f ((case-lambda ((g$q$12071$1HvE18) (if g$q$12071$1HvE18 (begin '#f ((case-lambda ((g$r$12072$1HvE18) (if g$r$12072$1HvE18 (begin '#f (append g$q$12071$1HvE18 g$r$12072$1HvE18)) '#f))) ((letrec ((g$f$12073$1HvE18 (case-lambda ((g$x$12074$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12074$1HvE18) ((case-lambda ((g$cars/f$12075$1HvE18) (if g$cars/f$12075$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12076$1HvE18) (if g$cdrs/f$12076$1HvE18 (begin '#f (map cons g$cars/f$12075$1HvE18 g$cdrs/f$12076$1HvE18)) '#f))) (g$f$12073$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12074$1HvE18)))) '#f))) ((case-lambda ((g$x$12077$1HvE18) (list g$x$12077$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12074$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12074$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$12073$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$12070$1HvE18)))) '#f))) ((case-lambda ((g$x$12078$1HvE18) (if (g$id?$9312$1HvE18 g$x$12078$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12078$1HvE18 (g$scheme-stx$9537$1HvE18 'list)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12070$1HvE18)))) '#f))) g$t$12043$1HvE18)))) g$t$12038$1HvE18)))) ((case-lambda ((g$x$12079$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12079$1HvE18) (begin '#f ((case-lambda ((g$q$12080$1HvE18) (if g$q$12080$1HvE18 (begin '#f ((case-lambda ((g$r$12081$1HvE18) (if g$r$12081$1HvE18 (begin '#f (append g$q$12080$1HvE18 g$r$12081$1HvE18)) '#f))) ((case-lambda ((g$x$12082$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12082$1HvE18) (begin '#f ((case-lambda ((g$q$12083$1HvE18) (if g$q$12083$1HvE18 (begin '#f ((case-lambda ((g$r$12084$1HvE18) (if g$r$12084$1HvE18 (begin '#f (append g$q$12083$1HvE18 g$r$12084$1HvE18)) '#f))) ((case-lambda ((g$x$12085$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12085$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12082$1HvE18)))) '#f))) ((letrec ((g$f$12086$1HvE18 (case-lambda ((g$x$12087$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12087$1HvE18) ((case-lambda ((g$cars/f$12088$1HvE18) (if g$cars/f$12088$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12089$1HvE18) (if g$cdrs/f$12089$1HvE18 (begin '#f (map cons g$cars/f$12088$1HvE18 g$cdrs/f$12089$1HvE18)) '#f))) (g$f$12086$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12087$1HvE18)))) '#f))) ((case-lambda ((g$x$12090$1HvE18) (list g$x$12090$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12087$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12087$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$12086$1HvE18) (g$syntax-car$9309$1HvE18 g$x$12082$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12079$1HvE18)))) '#f))) ((case-lambda ((g$x$12091$1HvE18) (if (g$id?$9312$1HvE18 g$x$12091$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12091$1HvE18 (g$scheme-stx$9537$1HvE18 'quote)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12079$1HvE18)))) '#f))) g$t$12038$1HvE18)))) g$x$12036$1HvE18))))) g$f$12035$1HvE18) g$x$12027$1HvE18 (case-lambda ((g$ls$12092$1HvE18) (g$cons*$7967$1HvE18 (g$scheme-stx$9537$1HvE18 'vector) g$ls$12092$1HvE18)))))) g$ls/false$12034$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12033$1HvE18)))) ((case-lambda ((g$x$12093$1HvE18) '())) g$t$12033$1HvE18)))) g$t$12029$1HvE18)))) ((case-lambda ((g$x$12094$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12094$1HvE18) (begin '#f ((case-lambda ((g$q$12095$1HvE18) (if g$q$12095$1HvE18 (begin '#f ((case-lambda ((g$r$12096$1HvE18) (if g$r$12096$1HvE18 (begin '#f (append g$q$12095$1HvE18 g$r$12096$1HvE18)) '#f))) ((case-lambda ((g$x$12097$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12097$1HvE18) (begin '#f ((case-lambda ((g$q$12098$1HvE18) (if g$q$12098$1HvE18 (begin '#f ((case-lambda ((g$r$12099$1HvE18) (if g$r$12099$1HvE18 (begin '#f (append g$q$12098$1HvE18 g$r$12099$1HvE18)) '#f))) ((case-lambda ((g$x$12100$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12100$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12097$1HvE18)))) '#f))) ((letrec ((g$f$12101$1HvE18 (case-lambda ((g$x$12102$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12102$1HvE18) ((case-lambda ((g$cars/f$12103$1HvE18) (if g$cars/f$12103$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12104$1HvE18) (if g$cdrs/f$12104$1HvE18 (begin '#f (map cons g$cars/f$12103$1HvE18 g$cdrs/f$12104$1HvE18)) '#f))) (g$f$12101$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12102$1HvE18)))) '#f))) ((case-lambda ((g$x$12105$1HvE18) (list g$x$12105$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12102$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12102$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$12101$1HvE18) (g$syntax-car$9309$1HvE18 g$x$12097$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12094$1HvE18)))) '#f))) ((case-lambda ((g$x$12106$1HvE18) (if (g$id?$9312$1HvE18 g$x$12106$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12106$1HvE18 (g$scheme-stx$9537$1HvE18 'quote)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12094$1HvE18)))) '#f))) g$t$12029$1HvE18)))) g$pat-x$12028$1HvE18))) g$x$12027$1HvE18)))) (g$vquasi$11872$1HvE18 (case-lambda ((g$p$11980$1HvE18 g$lev$11981$1HvE18) ((case-lambda ((g$t$11982$1HvE18) ((case-lambda ((g$ls/false$11983$1HvE18) (if (if g$ls/false$11983$1HvE18 (begin '#f (apply (case-lambda ((g$p$11984$1HvE18 g$q$11985$1HvE18) '#t)) g$ls/false$11983$1HvE18)) '#f) (apply (case-lambda ((g$p$11986$1HvE18 g$q$11987$1HvE18) ((case-lambda ((g$t$11988$1HvE18) ((case-lambda ((g$ls/false$11989$1HvE18) (if (if g$ls/false$11989$1HvE18 (begin '#f (apply (case-lambda ((g$p$11990$1HvE18) '#t)) g$ls/false$11989$1HvE18)) '#f) (apply (case-lambda ((g$p$11991$1HvE18) (if (= g$lev$11981$1HvE18 '0) (g$quasicons*$11868$1HvE18 g$p$11991$1HvE18 (g$vquasi$11872$1HvE18 g$q$11987$1HvE18 g$lev$11981$1HvE18)) (g$quasicons$11869$1HvE18 (g$quasicons$11869$1HvE18 (g$datum$11852$1HvE18 'unquote) (g$quasi$11873$1HvE18 g$p$11991$1HvE18 (- g$lev$11981$1HvE18 '1))) (g$vquasi$11872$1HvE18 g$q$11987$1HvE18 g$lev$11981$1HvE18))))) g$ls/false$11989$1HvE18) ((case-lambda ((g$t$11992$1HvE18) ((case-lambda ((g$ls/false$11993$1HvE18) (if (if g$ls/false$11993$1HvE18 (begin '#f (apply (case-lambda ((g$p$11994$1HvE18) '#t)) g$ls/false$11993$1HvE18)) '#f) (apply (case-lambda ((g$p$11995$1HvE18) (if (= g$lev$11981$1HvE18 '0) (g$quasiappend$11870$1HvE18 g$p$11995$1HvE18 (g$vquasi$11872$1HvE18 g$q$11987$1HvE18 g$lev$11981$1HvE18)) (g$quasicons$11869$1HvE18 (g$quasicons$11869$1HvE18 (g$datum$11852$1HvE18 'unquote-splicing) (g$quasi$11873$1HvE18 g$p$11995$1HvE18 (- g$lev$11981$1HvE18 '1))) (g$vquasi$11872$1HvE18 g$q$11987$1HvE18 g$lev$11981$1HvE18))))) g$ls/false$11993$1HvE18) ((case-lambda ((g$t$11996$1HvE18) ((case-lambda ((g$ls/false$11997$1HvE18) (if (if g$ls/false$11997$1HvE18 (begin '#f (apply (case-lambda ((g$p$11998$1HvE18) '#t)) g$ls/false$11997$1HvE18)) '#f) (apply (case-lambda ((g$p$11999$1HvE18) (g$quasicons$11869$1HvE18 (g$quasi$11873$1HvE18 g$p$11999$1HvE18 g$lev$11981$1HvE18) (g$vquasi$11872$1HvE18 g$q$11987$1HvE18 g$lev$11981$1HvE18)))) g$ls/false$11997$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11996$1HvE18)))) ((case-lambda ((g$x$12000$1HvE18) (list g$x$12000$1HvE18))) g$t$11996$1HvE18)))) g$t$11992$1HvE18)))) ((case-lambda ((g$x$12001$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12001$1HvE18) (begin '#f ((case-lambda ((g$q$12002$1HvE18) (if g$q$12002$1HvE18 (begin '#f ((case-lambda ((g$r$12003$1HvE18) (if g$r$12003$1HvE18 (begin '#f (append g$q$12002$1HvE18 g$r$12003$1HvE18)) '#f))) ((letrec ((g$f$12004$1HvE18 (case-lambda ((g$x$12005$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12005$1HvE18) ((case-lambda ((g$cars/f$12006$1HvE18) (if g$cars/f$12006$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12007$1HvE18) (if g$cdrs/f$12007$1HvE18 (begin '#f (map cons g$cars/f$12006$1HvE18 g$cdrs/f$12007$1HvE18)) '#f))) (g$f$12004$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12005$1HvE18)))) '#f))) ((case-lambda ((g$x$12008$1HvE18) (list g$x$12008$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12005$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12005$1HvE18) (list (begin 'p '())) '#f)))))) g$f$12004$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$12001$1HvE18)))) '#f))) ((case-lambda ((g$x$12009$1HvE18) (if (g$id?$9312$1HvE18 g$x$12009$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12009$1HvE18 (g$scheme-stx$9537$1HvE18 'unquote-splicing)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12001$1HvE18)))) '#f))) g$t$11992$1HvE18)))) g$t$11988$1HvE18)))) ((case-lambda ((g$x$12010$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12010$1HvE18) (begin '#f ((case-lambda ((g$q$12011$1HvE18) (if g$q$12011$1HvE18 (begin '#f ((case-lambda ((g$r$12012$1HvE18) (if g$r$12012$1HvE18 (begin '#f (append g$q$12011$1HvE18 g$r$12012$1HvE18)) '#f))) ((letrec ((g$f$12013$1HvE18 (case-lambda ((g$x$12014$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12014$1HvE18) ((case-lambda ((g$cars/f$12015$1HvE18) (if g$cars/f$12015$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12016$1HvE18) (if g$cdrs/f$12016$1HvE18 (begin '#f (map cons g$cars/f$12015$1HvE18 g$cdrs/f$12016$1HvE18)) '#f))) (g$f$12013$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12014$1HvE18)))) '#f))) ((case-lambda ((g$x$12017$1HvE18) (list g$x$12017$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12014$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12014$1HvE18) (list (begin 'p '())) '#f)))))) g$f$12013$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$12010$1HvE18)))) '#f))) ((case-lambda ((g$x$12018$1HvE18) (if (g$id?$9312$1HvE18 g$x$12018$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12018$1HvE18 (g$scheme-stx$9537$1HvE18 'unquote)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12010$1HvE18)))) '#f))) g$t$11988$1HvE18)))) g$p$11986$1HvE18))) g$ls/false$11983$1HvE18) ((case-lambda ((g$t$12019$1HvE18) ((case-lambda ((g$ls/false$12020$1HvE18) (if (if g$ls/false$12020$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12020$1HvE18)) '#f) (apply (case-lambda (() (list (g$scheme-stx$9537$1HvE18 'quote) '()))) g$ls/false$12020$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12019$1HvE18)))) ((case-lambda ((g$x$12021$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12021$1HvE18) '()) (begin '#f '()) '#f))) g$t$12019$1HvE18)))) g$t$11982$1HvE18)))) ((case-lambda ((g$x$12022$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12022$1HvE18) (begin '#f ((case-lambda ((g$q$12023$1HvE18) (if g$q$12023$1HvE18 (begin '#f ((case-lambda ((g$r$12024$1HvE18) (if g$r$12024$1HvE18 (begin '#f (append g$q$12023$1HvE18 g$r$12024$1HvE18)) '#f))) ((case-lambda ((g$x$12025$1HvE18) (list g$x$12025$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12022$1HvE18)))) '#f))) ((case-lambda ((g$x$12026$1HvE18) (list g$x$12026$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12022$1HvE18)))) '#f))) g$t$11982$1HvE18)))) g$p$11980$1HvE18)))) (g$quasi$11873$1HvE18 (case-lambda ((g$p$11888$1HvE18 g$lev$11889$1HvE18) ((case-lambda ((g$t$11890$1HvE18) ((case-lambda ((g$ls/false$11891$1HvE18) (if (if g$ls/false$11891$1HvE18 (begin '#f (apply (case-lambda ((g$p$11892$1HvE18) '#t)) g$ls/false$11891$1HvE18)) '#f) (apply (case-lambda ((g$p$11893$1HvE18) (if (= g$lev$11889$1HvE18 '0) g$p$11893$1HvE18 (g$quasicons$11869$1HvE18 (g$datum$11852$1HvE18 'unquote) (g$quasi$11873$1HvE18 (list g$p$11893$1HvE18) (- g$lev$11889$1HvE18 '1)))))) g$ls/false$11891$1HvE18) ((case-lambda ((g$t$11894$1HvE18) ((case-lambda ((g$ls/false$11895$1HvE18) (if (if g$ls/false$11895$1HvE18 (begin '#f (apply (case-lambda ((g$p$11896$1HvE18 g$q$11897$1HvE18) '#t)) g$ls/false$11895$1HvE18)) '#f) (apply (case-lambda ((g$p$11898$1HvE18 g$q$11899$1HvE18) (if (= g$lev$11889$1HvE18 '0) (g$quasicons*$11868$1HvE18 g$p$11898$1HvE18 (g$quasi$11873$1HvE18 g$q$11899$1HvE18 g$lev$11889$1HvE18)) (g$quasicons$11869$1HvE18 (g$quasicons$11869$1HvE18 (g$datum$11852$1HvE18 'unquote) (g$quasi$11873$1HvE18 g$p$11898$1HvE18 (- g$lev$11889$1HvE18 '1))) (g$quasi$11873$1HvE18 g$q$11899$1HvE18 g$lev$11889$1HvE18))))) g$ls/false$11895$1HvE18) ((case-lambda ((g$t$11900$1HvE18) ((case-lambda ((g$ls/false$11901$1HvE18) (if (if g$ls/false$11901$1HvE18 (begin '#f (apply (case-lambda ((g$p$11902$1HvE18 g$q$11903$1HvE18) '#t)) g$ls/false$11901$1HvE18)) '#f) (apply (case-lambda ((g$p$11904$1HvE18 g$q$11905$1HvE18) (if (= g$lev$11889$1HvE18 '0) (g$quasiappend$11870$1HvE18 g$p$11904$1HvE18 (g$quasi$11873$1HvE18 g$q$11905$1HvE18 g$lev$11889$1HvE18)) (g$quasicons$11869$1HvE18 (g$quasicons$11869$1HvE18 (g$datum$11852$1HvE18 'unquote-splicing) (g$quasi$11873$1HvE18 g$p$11904$1HvE18 (- g$lev$11889$1HvE18 '1))) (g$quasi$11873$1HvE18 g$q$11905$1HvE18 g$lev$11889$1HvE18))))) g$ls/false$11901$1HvE18) ((case-lambda ((g$t$11906$1HvE18) ((case-lambda ((g$ls/false$11907$1HvE18) (if (if g$ls/false$11907$1HvE18 (begin '#f (apply (case-lambda ((g$p$11908$1HvE18) '#t)) g$ls/false$11907$1HvE18)) '#f) (apply (case-lambda ((g$p$11909$1HvE18) (g$quasicons$11869$1HvE18 (g$datum$11852$1HvE18 'quasiquote) (g$quasi$11873$1HvE18 (list g$p$11909$1HvE18) (+ g$lev$11889$1HvE18 '1))))) g$ls/false$11907$1HvE18) ((case-lambda ((g$t$11910$1HvE18) ((case-lambda ((g$ls/false$11911$1HvE18) (if (if g$ls/false$11911$1HvE18 (begin '#f (apply (case-lambda ((g$p$11912$1HvE18 g$q$11913$1HvE18) '#t)) g$ls/false$11911$1HvE18)) '#f) (apply (case-lambda ((g$p$11914$1HvE18 g$q$11915$1HvE18) (g$quasicons$11869$1HvE18 (g$quasi$11873$1HvE18 g$p$11914$1HvE18 g$lev$11889$1HvE18) (g$quasi$11873$1HvE18 g$q$11915$1HvE18 g$lev$11889$1HvE18)))) g$ls/false$11911$1HvE18) ((case-lambda ((g$t$11916$1HvE18) ((case-lambda ((g$ls/false$11917$1HvE18) (if (if g$ls/false$11917$1HvE18 (begin '#f (apply (case-lambda ((g$x$11918$1HvE18) (not (g$stx?$9284$1HvE18 g$x$11918$1HvE18)))) g$ls/false$11917$1HvE18)) '#f) (apply (case-lambda ((g$x$11919$1HvE18) (g$quasivector$11871$1HvE18 (g$vquasi$11872$1HvE18 g$x$11919$1HvE18 g$lev$11889$1HvE18)))) g$ls/false$11917$1HvE18) ((case-lambda ((g$t$11920$1HvE18) ((case-lambda ((g$ls/false$11921$1HvE18) (if (if g$ls/false$11921$1HvE18 (begin '#f (apply (case-lambda ((g$p$11922$1HvE18) '#t)) g$ls/false$11921$1HvE18)) '#f) (apply (case-lambda ((g$p$11923$1HvE18) (list (g$scheme-stx$9537$1HvE18 'quote) g$p$11923$1HvE18))) g$ls/false$11921$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11920$1HvE18)))) ((case-lambda ((g$x$11924$1HvE18) (list g$x$11924$1HvE18))) g$t$11920$1HvE18)))) g$t$11916$1HvE18)))) ((case-lambda ((g$x$11925$1HvE18) (if (g$syntax-vector?$9306$1HvE18 g$x$11925$1HvE18) (begin '#f ((letrec ((g$f$11926$1HvE18 (case-lambda ((g$x$11927$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11927$1HvE18) ((case-lambda ((g$cars/f$11928$1HvE18) (if g$cars/f$11928$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11929$1HvE18) (if g$cdrs/f$11929$1HvE18 (begin '#f (map cons g$cars/f$11928$1HvE18 g$cdrs/f$11929$1HvE18)) '#f))) (g$f$11926$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11927$1HvE18)))) '#f))) ((case-lambda ((g$x$11930$1HvE18) (list g$x$11930$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11927$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11927$1HvE18) (list (begin 'x '())) '#f)))))) g$f$11926$1HvE18) (g$syntax-vector->list$9304$1HvE18 g$x$11925$1HvE18))) '#f))) g$t$11916$1HvE18)))) g$t$11910$1HvE18)))) ((case-lambda ((g$x$11931$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11931$1HvE18) (begin '#f ((case-lambda ((g$q$11932$1HvE18) (if g$q$11932$1HvE18 (begin '#f ((case-lambda ((g$r$11933$1HvE18) (if g$r$11933$1HvE18 (begin '#f (append g$q$11932$1HvE18 g$r$11933$1HvE18)) '#f))) ((case-lambda ((g$x$11934$1HvE18) (list g$x$11934$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$11931$1HvE18)))) '#f))) ((case-lambda ((g$x$11935$1HvE18) (list g$x$11935$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11931$1HvE18)))) '#f))) g$t$11910$1HvE18)))) g$t$11906$1HvE18)))) ((case-lambda ((g$x$11936$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11936$1HvE18) (begin '#f ((case-lambda ((g$q$11937$1HvE18) (if g$q$11937$1HvE18 (begin '#f ((case-lambda ((g$r$11938$1HvE18) (if g$r$11938$1HvE18 (begin '#f (append g$q$11937$1HvE18 g$r$11938$1HvE18)) '#f))) ((case-lambda ((g$x$11939$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11939$1HvE18) (begin '#f ((case-lambda ((g$q$11940$1HvE18) (if g$q$11940$1HvE18 (begin '#f ((case-lambda ((g$r$11941$1HvE18) (if g$r$11941$1HvE18 (begin '#f (append g$q$11940$1HvE18 g$r$11941$1HvE18)) '#f))) ((case-lambda ((g$x$11942$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11942$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11939$1HvE18)))) '#f))) ((case-lambda ((g$x$11943$1HvE18) (list g$x$11943$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11939$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11936$1HvE18)))) '#f))) ((case-lambda ((g$x$11944$1HvE18) (if (g$id?$9312$1HvE18 g$x$11944$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11944$1HvE18 (g$scheme-stx$9537$1HvE18 'quasiquote)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11936$1HvE18)))) '#f))) g$t$11906$1HvE18)))) g$t$11900$1HvE18)))) ((case-lambda ((g$x$11945$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11945$1HvE18) (begin '#f ((case-lambda ((g$q$11946$1HvE18) (if g$q$11946$1HvE18 (begin '#f ((case-lambda ((g$r$11947$1HvE18) (if g$r$11947$1HvE18 (begin '#f (append g$q$11946$1HvE18 g$r$11947$1HvE18)) '#f))) ((case-lambda ((g$x$11948$1HvE18) (list g$x$11948$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$11945$1HvE18)))) '#f))) ((case-lambda ((g$x$11949$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11949$1HvE18) (begin '#f ((case-lambda ((g$q$11950$1HvE18) (if g$q$11950$1HvE18 (begin '#f ((case-lambda ((g$r$11951$1HvE18) (if g$r$11951$1HvE18 (begin '#f (append g$q$11950$1HvE18 g$r$11951$1HvE18)) '#f))) ((letrec ((g$f$11952$1HvE18 (case-lambda ((g$x$11953$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11953$1HvE18) ((case-lambda ((g$cars/f$11954$1HvE18) (if g$cars/f$11954$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11955$1HvE18) (if g$cdrs/f$11955$1HvE18 (begin '#f (map cons g$cars/f$11954$1HvE18 g$cdrs/f$11955$1HvE18)) '#f))) (g$f$11952$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11953$1HvE18)))) '#f))) ((case-lambda ((g$x$11956$1HvE18) (list g$x$11956$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11953$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11953$1HvE18) (list (begin 'p '())) '#f)))))) g$f$11952$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11949$1HvE18)))) '#f))) ((case-lambda ((g$x$11957$1HvE18) (if (g$id?$9312$1HvE18 g$x$11957$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11957$1HvE18 (g$scheme-stx$9537$1HvE18 'unquote-splicing)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11949$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11945$1HvE18)))) '#f))) g$t$11900$1HvE18)))) g$t$11894$1HvE18)))) ((case-lambda ((g$x$11958$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11958$1HvE18) (begin '#f ((case-lambda ((g$q$11959$1HvE18) (if g$q$11959$1HvE18 (begin '#f ((case-lambda ((g$r$11960$1HvE18) (if g$r$11960$1HvE18 (begin '#f (append g$q$11959$1HvE18 g$r$11960$1HvE18)) '#f))) ((case-lambda ((g$x$11961$1HvE18) (list g$x$11961$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$11958$1HvE18)))) '#f))) ((case-lambda ((g$x$11962$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11962$1HvE18) (begin '#f ((case-lambda ((g$q$11963$1HvE18) (if g$q$11963$1HvE18 (begin '#f ((case-lambda ((g$r$11964$1HvE18) (if g$r$11964$1HvE18 (begin '#f (append g$q$11963$1HvE18 g$r$11964$1HvE18)) '#f))) ((letrec ((g$f$11965$1HvE18 (case-lambda ((g$x$11966$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11966$1HvE18) ((case-lambda ((g$cars/f$11967$1HvE18) (if g$cars/f$11967$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$11968$1HvE18) (if g$cdrs/f$11968$1HvE18 (begin '#f (map cons g$cars/f$11967$1HvE18 g$cdrs/f$11968$1HvE18)) '#f))) (g$f$11965$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$11966$1HvE18)))) '#f))) ((case-lambda ((g$x$11969$1HvE18) (list g$x$11969$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11966$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$11966$1HvE18) (list (begin 'p '())) '#f)))))) g$f$11965$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$11962$1HvE18)))) '#f))) ((case-lambda ((g$x$11970$1HvE18) (if (g$id?$9312$1HvE18 g$x$11970$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11970$1HvE18 (g$scheme-stx$9537$1HvE18 'unquote)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11962$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$11958$1HvE18)))) '#f))) g$t$11894$1HvE18)))) g$t$11890$1HvE18)))) ((case-lambda ((g$x$11971$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11971$1HvE18) (begin '#f ((case-lambda ((g$q$11972$1HvE18) (if g$q$11972$1HvE18 (begin '#f ((case-lambda ((g$r$11973$1HvE18) (if g$r$11973$1HvE18 (begin '#f (append g$q$11972$1HvE18 g$r$11973$1HvE18)) '#f))) ((case-lambda ((g$x$11974$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11974$1HvE18) (begin '#f ((case-lambda ((g$q$11975$1HvE18) (if g$q$11975$1HvE18 (begin '#f ((case-lambda ((g$r$11976$1HvE18) (if g$r$11976$1HvE18 (begin '#f (append g$q$11975$1HvE18 g$r$11976$1HvE18)) '#f))) ((case-lambda ((g$x$11977$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11977$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11974$1HvE18)))) '#f))) ((case-lambda ((g$x$11978$1HvE18) (list g$x$11978$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11974$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11971$1HvE18)))) '#f))) ((case-lambda ((g$x$11979$1HvE18) (if (g$id?$9312$1HvE18 g$x$11979$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$11979$1HvE18 (g$scheme-stx$9537$1HvE18 'unquote)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$11971$1HvE18)))) '#f))) g$t$11890$1HvE18)))) g$p$11888$1HvE18))))) (case-lambda ((g$x$11874$1HvE18) ((case-lambda ((g$t$11875$1HvE18) ((case-lambda ((g$ls/false$11876$1HvE18) (if (if g$ls/false$11876$1HvE18 (begin '#f (apply (case-lambda ((g$e$11877$1HvE18) '#t)) g$ls/false$11876$1HvE18)) '#f) (apply (case-lambda ((g$e$11878$1HvE18) (g$quasi$11873$1HvE18 g$e$11878$1HvE18 '0))) g$ls/false$11876$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$11875$1HvE18)))) ((case-lambda ((g$x$11879$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11879$1HvE18) (begin '#f ((case-lambda ((g$q$11880$1HvE18) (if g$q$11880$1HvE18 (begin '#f ((case-lambda ((g$r$11881$1HvE18) (if g$r$11881$1HvE18 (begin '#f (append g$q$11880$1HvE18 g$r$11881$1HvE18)) '#f))) ((case-lambda ((g$x$11882$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$11882$1HvE18) (begin '#f ((case-lambda ((g$q$11883$1HvE18) (if g$q$11883$1HvE18 (begin '#f ((case-lambda ((g$r$11884$1HvE18) (if g$r$11884$1HvE18 (begin '#f (append g$q$11883$1HvE18 g$r$11884$1HvE18)) '#f))) ((case-lambda ((g$x$11885$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$11885$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11882$1HvE18)))) '#f))) ((case-lambda ((g$x$11886$1HvE18) (list g$x$11886$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$11882$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$11879$1HvE18)))) '#f))) ((case-lambda ((g$x$11887$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$11879$1HvE18)))) '#f))) g$t$11875$1HvE18)))) g$x$11874$1HvE18)))))))) (g$quasisyntax-macro$9583$1HvE18 g$quasisyntax-macro$15688$1HvE18 ((case-lambda (() (letrec* ((g$quasi$12198$1HvE18 (case-lambda ((g$p$12222$1HvE18 g$lev$12223$1HvE18) ((case-lambda ((g$t$12224$1HvE18) ((case-lambda ((g$ls/false$12225$1HvE18) (if (if g$ls/false$12225$1HvE18 (begin '#f (apply (case-lambda ((g$p$12226$1HvE18) '#t)) g$ls/false$12225$1HvE18)) '#f) (apply (case-lambda ((g$p$12227$1HvE18) (if (= g$lev$12223$1HvE18 '0) ((case-lambda ((g$g$12228$1HvE18) (values (list g$g$12228$1HvE18) (list g$p$12227$1HvE18) g$g$12228$1HvE18))) (gensym)) (call-with-values (case-lambda (() (g$quasi$12198$1HvE18 g$p$12227$1HvE18 (- g$lev$12223$1HvE18 '1)))) (case-lambda ((g$lhs*$12232$1HvE18 g$rhs*$12233$1HvE18 g$p$12234$1HvE18) ((case-lambda ((g$p$12235$1HvE18 g$rhs*$12236$1HvE18 g$lhs*$12237$1HvE18) (values g$lhs*$12237$1HvE18 g$rhs*$12236$1HvE18 (list 'unsyntax g$p$12235$1HvE18)))) g$p$12234$1HvE18 g$rhs*$12233$1HvE18 g$lhs*$12232$1HvE18))))))) g$ls/false$12225$1HvE18) ((case-lambda ((g$t$12238$1HvE18) ((case-lambda ((g$ls/false$12239$1HvE18) (if (if g$ls/false$12239$1HvE18 (begin '#f (apply (case-lambda (() (= g$lev$12223$1HvE18 '0))) g$ls/false$12239$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"incorrect use of unsyntax" g$p$12222$1HvE18))) g$ls/false$12239$1HvE18) ((case-lambda ((g$t$12240$1HvE18) ((case-lambda ((g$ls/false$12241$1HvE18) (if (if g$ls/false$12241$1HvE18 (begin '#f (apply (case-lambda ((g$p$12242$1HvE18 g$q$12243$1HvE18) '#t)) g$ls/false$12241$1HvE18)) '#f) (apply (case-lambda ((g$p$12244$1HvE18 g$q$12245$1HvE18) (call-with-values (case-lambda (() (g$quasi$12198$1HvE18 g$q$12245$1HvE18 g$lev$12223$1HvE18))) (case-lambda ((g$lhs*$12249$1HvE18 g$rhs*$12250$1HvE18 g$q$12251$1HvE18) ((case-lambda ((g$q$12252$1HvE18 g$rhs*$12253$1HvE18 g$lhs*$12254$1HvE18) (if (= g$lev$12223$1HvE18 '0) ((case-lambda ((g$g$12255$1HvE18) (values (cons (cons g$g$12255$1HvE18 '(...)) g$lhs*$12254$1HvE18) (cons g$p$12244$1HvE18 g$rhs*$12253$1HvE18) (cons g$g$12255$1HvE18 (cons '... g$q$12252$1HvE18))))) (gensym)) (call-with-values (case-lambda (() (g$quasi$12198$1HvE18 g$p$12244$1HvE18 (- g$lev$12223$1HvE18 '1)))) (case-lambda ((g$lhs2*$12259$1HvE18 g$rhs2*$12260$1HvE18 g$p$12261$1HvE18) ((case-lambda ((g$p$12262$1HvE18 g$rhs2*$12263$1HvE18 g$lhs2*$12264$1HvE18) (values (append g$lhs2*$12264$1HvE18 g$lhs*$12254$1HvE18) (append g$rhs2*$12263$1HvE18 g$rhs*$12253$1HvE18) (cons (list 'unsyntax-splicing g$p$12262$1HvE18) g$q$12252$1HvE18)))) g$p$12261$1HvE18 g$rhs2*$12260$1HvE18 g$lhs2*$12259$1HvE18))))))) g$q$12251$1HvE18 g$rhs*$12250$1HvE18 g$lhs*$12249$1HvE18)))))) g$ls/false$12241$1HvE18) ((case-lambda ((g$t$12265$1HvE18) ((case-lambda ((g$ls/false$12266$1HvE18) (if (if g$ls/false$12266$1HvE18 (begin '#f (apply (case-lambda (() (= g$lev$12223$1HvE18 '0))) g$ls/false$12266$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"incorrect use of unsyntax-splicing" g$p$12222$1HvE18))) g$ls/false$12266$1HvE18) ((case-lambda ((g$t$12267$1HvE18) ((case-lambda ((g$ls/false$12268$1HvE18) (if (if g$ls/false$12268$1HvE18 (begin '#f (apply (case-lambda ((g$p$12269$1HvE18) '#t)) g$ls/false$12268$1HvE18)) '#f) (apply (case-lambda ((g$p$12270$1HvE18) (call-with-values (case-lambda (() (g$quasi$12198$1HvE18 g$p$12270$1HvE18 (+ g$lev$12223$1HvE18 '1)))) (case-lambda ((g$lhs*$12274$1HvE18 g$rhs*$12275$1HvE18 g$p$12276$1HvE18) ((case-lambda ((g$p$12277$1HvE18 g$rhs*$12278$1HvE18 g$lhs*$12279$1HvE18) (values g$lhs*$12279$1HvE18 g$rhs*$12278$1HvE18 (list 'quasisyntax g$p$12277$1HvE18)))) g$p$12276$1HvE18 g$rhs*$12275$1HvE18 g$lhs*$12274$1HvE18)))))) g$ls/false$12268$1HvE18) ((case-lambda ((g$t$12280$1HvE18) ((case-lambda ((g$ls/false$12281$1HvE18) (if (if g$ls/false$12281$1HvE18 (begin '#f (apply (case-lambda ((g$p$12282$1HvE18 g$q$12283$1HvE18) '#t)) g$ls/false$12281$1HvE18)) '#f) (apply (case-lambda ((g$p$12284$1HvE18 g$q$12285$1HvE18) (call-with-values (case-lambda (() (g$quasi$12198$1HvE18 g$p$12284$1HvE18 g$lev$12223$1HvE18))) (case-lambda ((g$lhs*$12292$1HvE18 g$rhs*$12293$1HvE18 g$p$12294$1HvE18) (call-with-values (case-lambda (() (g$quasi$12198$1HvE18 g$q$12285$1HvE18 g$lev$12223$1HvE18))) (case-lambda ((g$lhs2*$12295$1HvE18 g$rhs2*$12296$1HvE18 g$q$12297$1HvE18) ((case-lambda ((g$q$12298$1HvE18 g$rhs2*$12299$1HvE18 g$lhs2*$12300$1HvE18 g$p$12301$1HvE18 g$rhs*$12302$1HvE18 g$lhs*$12303$1HvE18) (values (append g$lhs2*$12300$1HvE18 g$lhs*$12303$1HvE18) (append g$rhs2*$12299$1HvE18 g$rhs*$12302$1HvE18) (cons g$p$12301$1HvE18 g$q$12298$1HvE18)))) g$q$12297$1HvE18 g$rhs2*$12296$1HvE18 g$lhs2*$12295$1HvE18 g$p$12294$1HvE18 g$rhs*$12293$1HvE18 g$lhs*$12292$1HvE18))))))))) g$ls/false$12281$1HvE18) ((case-lambda ((g$t$12304$1HvE18) ((case-lambda ((g$ls/false$12305$1HvE18) (if (if g$ls/false$12305$1HvE18 (begin '#f (apply (case-lambda ((g$x$12306$1HvE18) (not (g$stx?$9284$1HvE18 g$p$12222$1HvE18)))) g$ls/false$12305$1HvE18)) '#f) (apply (case-lambda ((g$x$12307$1HvE18) (call-with-values (case-lambda (() ((letrec ((g$f$12311$1HvE18 (case-lambda ((g$x$12312$1HvE18) (if (null? g$x$12312$1HvE18) (values '() '() '()) (call-with-values (case-lambda (() (g$quasi$12198$1HvE18 (car g$x$12312$1HvE18) g$lev$12223$1HvE18))) (case-lambda ((g$lhs*$12316$1HvE18 g$rhs*$12317$1HvE18 g$a$12318$1HvE18) ((case-lambda ((g$a$12319$1HvE18 g$rhs*$12320$1HvE18 g$lhs*$12321$1HvE18) (call-with-values (case-lambda (() (g$f$12311$1HvE18 (cdr g$x$12312$1HvE18)))) (case-lambda ((g$lhs2*$12325$1HvE18 g$rhs2*$12326$1HvE18 g$d$12327$1HvE18) ((case-lambda ((g$d$12328$1HvE18 g$rhs2*$12329$1HvE18 g$lhs2*$12330$1HvE18) (values (append g$lhs*$12321$1HvE18 g$lhs2*$12330$1HvE18) (append g$rhs*$12320$1HvE18 g$rhs2*$12329$1HvE18) (cons g$a$12319$1HvE18 g$d$12328$1HvE18)))) g$d$12327$1HvE18 g$rhs2*$12326$1HvE18 g$lhs2*$12325$1HvE18)))))) g$a$12318$1HvE18 g$rhs*$12317$1HvE18 g$lhs*$12316$1HvE18))))))))) g$f$12311$1HvE18) g$x$12307$1HvE18))) (case-lambda ((g$lhs*$12331$1HvE18 g$rhs*$12332$1HvE18 g$x*$12333$1HvE18) ((case-lambda ((g$x*$12334$1HvE18 g$rhs*$12335$1HvE18 g$lhs*$12336$1HvE18) (values g$lhs*$12336$1HvE18 g$rhs*$12335$1HvE18 (list->vector g$x*$12334$1HvE18)))) g$x*$12333$1HvE18 g$rhs*$12332$1HvE18 g$lhs*$12331$1HvE18)))))) g$ls/false$12305$1HvE18) ((case-lambda ((g$t$12337$1HvE18) ((case-lambda ((g$ls/false$12338$1HvE18) (if (if g$ls/false$12338$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12338$1HvE18)) '#f) (apply (case-lambda (() (values '() '() g$p$12222$1HvE18))) g$ls/false$12338$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12337$1HvE18)))) ((case-lambda ((g$x$12339$1HvE18) '())) g$t$12337$1HvE18)))) g$t$12304$1HvE18)))) ((case-lambda ((g$x$12340$1HvE18) (if (g$syntax-vector?$9306$1HvE18 g$x$12340$1HvE18) (begin '#f ((letrec ((g$f$12341$1HvE18 (case-lambda ((g$x$12342$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12342$1HvE18) ((case-lambda ((g$cars/f$12343$1HvE18) (if g$cars/f$12343$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12344$1HvE18) (if g$cdrs/f$12344$1HvE18 (begin '#f (map cons g$cars/f$12343$1HvE18 g$cdrs/f$12344$1HvE18)) '#f))) (g$f$12341$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12342$1HvE18)))) '#f))) ((case-lambda ((g$x$12345$1HvE18) (list g$x$12345$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12342$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12342$1HvE18) (list (begin 'x '())) '#f)))))) g$f$12341$1HvE18) (g$syntax-vector->list$9304$1HvE18 g$x$12340$1HvE18))) '#f))) g$t$12304$1HvE18)))) g$t$12280$1HvE18)))) ((case-lambda ((g$x$12346$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12346$1HvE18) (begin '#f ((case-lambda ((g$q$12347$1HvE18) (if g$q$12347$1HvE18 (begin '#f ((case-lambda ((g$r$12348$1HvE18) (if g$r$12348$1HvE18 (begin '#f (append g$q$12347$1HvE18 g$r$12348$1HvE18)) '#f))) ((case-lambda ((g$x$12349$1HvE18) (list g$x$12349$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12346$1HvE18)))) '#f))) ((case-lambda ((g$x$12350$1HvE18) (list g$x$12350$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12346$1HvE18)))) '#f))) g$t$12280$1HvE18)))) g$t$12267$1HvE18)))) ((case-lambda ((g$x$12351$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12351$1HvE18) (begin '#f ((case-lambda ((g$q$12352$1HvE18) (if g$q$12352$1HvE18 (begin '#f ((case-lambda ((g$r$12353$1HvE18) (if g$r$12353$1HvE18 (begin '#f (append g$q$12352$1HvE18 g$r$12353$1HvE18)) '#f))) ((case-lambda ((g$x$12354$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12354$1HvE18) (begin '#f ((case-lambda ((g$q$12355$1HvE18) (if g$q$12355$1HvE18 (begin '#f ((case-lambda ((g$r$12356$1HvE18) (if g$r$12356$1HvE18 (begin '#f (append g$q$12355$1HvE18 g$r$12356$1HvE18)) '#f))) ((case-lambda ((g$x$12357$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12357$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12354$1HvE18)))) '#f))) ((case-lambda ((g$x$12358$1HvE18) (list g$x$12358$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12354$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12351$1HvE18)))) '#f))) ((case-lambda ((g$x$12359$1HvE18) (if (g$id?$9312$1HvE18 g$x$12359$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12359$1HvE18 (g$scheme-stx$9537$1HvE18 'quasisyntax)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12351$1HvE18)))) '#f))) g$t$12267$1HvE18)))) g$t$12265$1HvE18)))) ((case-lambda ((g$x$12360$1HvE18) (if (g$id?$9312$1HvE18 g$x$12360$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12360$1HvE18 (g$scheme-stx$9537$1HvE18 'unsyntax-splicing)) (begin '#f '()) '#f) '#f))) g$t$12265$1HvE18)))) g$t$12240$1HvE18)))) ((case-lambda ((g$x$12361$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12361$1HvE18) (begin '#f ((case-lambda ((g$q$12362$1HvE18) (if g$q$12362$1HvE18 (begin '#f ((case-lambda ((g$r$12363$1HvE18) (if g$r$12363$1HvE18 (begin '#f (append g$q$12362$1HvE18 g$r$12363$1HvE18)) '#f))) ((case-lambda ((g$x$12364$1HvE18) (list g$x$12364$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12361$1HvE18)))) '#f))) ((case-lambda ((g$x$12365$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12365$1HvE18) (begin '#f ((case-lambda ((g$q$12366$1HvE18) (if g$q$12366$1HvE18 (begin '#f ((case-lambda ((g$r$12367$1HvE18) (if g$r$12367$1HvE18 (begin '#f (append g$q$12366$1HvE18 g$r$12367$1HvE18)) '#f))) ((case-lambda ((g$x$12368$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12368$1HvE18) (begin '#f ((case-lambda ((g$q$12369$1HvE18) (if g$q$12369$1HvE18 (begin '#f ((case-lambda ((g$r$12370$1HvE18) (if g$r$12370$1HvE18 (begin '#f (append g$q$12369$1HvE18 g$r$12370$1HvE18)) '#f))) ((case-lambda ((g$x$12371$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12371$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12368$1HvE18)))) '#f))) ((case-lambda ((g$x$12372$1HvE18) (list g$x$12372$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12368$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12365$1HvE18)))) '#f))) ((case-lambda ((g$x$12373$1HvE18) (if (g$id?$9312$1HvE18 g$x$12373$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12373$1HvE18 (g$scheme-stx$9537$1HvE18 'unsyntax-splicing)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12365$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$12361$1HvE18)))) '#f))) g$t$12240$1HvE18)))) g$t$12238$1HvE18)))) ((case-lambda ((g$x$12374$1HvE18) (if (g$id?$9312$1HvE18 g$x$12374$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12374$1HvE18 (g$scheme-stx$9537$1HvE18 'unsyntax)) (begin '#f '()) '#f) '#f))) g$t$12238$1HvE18)))) g$t$12224$1HvE18)))) ((case-lambda ((g$x$12375$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12375$1HvE18) (begin '#f ((case-lambda ((g$q$12376$1HvE18) (if g$q$12376$1HvE18 (begin '#f ((case-lambda ((g$r$12377$1HvE18) (if g$r$12377$1HvE18 (begin '#f (append g$q$12376$1HvE18 g$r$12377$1HvE18)) '#f))) ((case-lambda ((g$x$12378$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12378$1HvE18) (begin '#f ((case-lambda ((g$q$12379$1HvE18) (if g$q$12379$1HvE18 (begin '#f ((case-lambda ((g$r$12380$1HvE18) (if g$r$12380$1HvE18 (begin '#f (append g$q$12379$1HvE18 g$r$12380$1HvE18)) '#f))) ((case-lambda ((g$x$12381$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12381$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12378$1HvE18)))) '#f))) ((case-lambda ((g$x$12382$1HvE18) (list g$x$12382$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12378$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12375$1HvE18)))) '#f))) ((case-lambda ((g$x$12383$1HvE18) (if (g$id?$9312$1HvE18 g$x$12383$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12383$1HvE18 (g$scheme-stx$9537$1HvE18 'unsyntax)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12375$1HvE18)))) '#f))) g$t$12224$1HvE18)))) g$p$12222$1HvE18))))) (case-lambda ((g$x$12199$1HvE18) ((case-lambda ((g$t$12200$1HvE18) ((case-lambda ((g$ls/false$12201$1HvE18) (if (if g$ls/false$12201$1HvE18 (begin '#f (apply (case-lambda ((g$e$12202$1HvE18) '#t)) g$ls/false$12201$1HvE18)) '#f) (apply (case-lambda ((g$e$12203$1HvE18) (call-with-values (case-lambda (() (g$quasi$12198$1HvE18 g$e$12203$1HvE18 '0))) (case-lambda ((g$lhs*$12207$1HvE18 g$rhs*$12208$1HvE18 g$v$12209$1HvE18) ((case-lambda ((g$v$12210$1HvE18 g$rhs*$12211$1HvE18 g$lhs*$12212$1HvE18) (g$bless$9557$1HvE18 (list 'syntax-case (cons 'list g$rhs*$12211$1HvE18) '() (list g$lhs*$12212$1HvE18 (list 'syntax g$v$12210$1HvE18)))))) g$v$12209$1HvE18 g$rhs*$12208$1HvE18 g$lhs*$12207$1HvE18)))))) g$ls/false$12201$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12200$1HvE18)))) ((case-lambda ((g$x$12213$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12213$1HvE18) (begin '#f ((case-lambda ((g$q$12214$1HvE18) (if g$q$12214$1HvE18 (begin '#f ((case-lambda ((g$r$12215$1HvE18) (if g$r$12215$1HvE18 (begin '#f (append g$q$12214$1HvE18 g$r$12215$1HvE18)) '#f))) ((case-lambda ((g$x$12216$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12216$1HvE18) (begin '#f ((case-lambda ((g$q$12217$1HvE18) (if g$q$12217$1HvE18 (begin '#f ((case-lambda ((g$r$12218$1HvE18) (if g$r$12218$1HvE18 (begin '#f (append g$q$12217$1HvE18 g$r$12218$1HvE18)) '#f))) ((case-lambda ((g$x$12219$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12219$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12216$1HvE18)))) '#f))) ((case-lambda ((g$x$12220$1HvE18) (list g$x$12220$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12216$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12213$1HvE18)))) '#f))) ((case-lambda ((g$x$12221$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12213$1HvE18)))) '#f))) g$t$12200$1HvE18)))) g$x$12199$1HvE18)))))))) (g$define-struct-macro$9584$1HvE18 g$define-struct-macro$15689$1HvE18 (case-lambda ((g$stx$12384$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"define-struct not supported" g$stx$12384$1HvE18)))) (g$define-record-type-macro$9585$1HvE18 g$define-record-type-macro$15690$1HvE18 (case-lambda ((g$x$12385$1HvE18) (letrec* ((g$id$12386$1HvE18 (case-lambda ((g$ctxt$12951$1HvE18 . g$str*$12952$1HvE18) (g$datum->syntax$9697$1HvE18 g$ctxt$12951$1HvE18 (string->symbol (apply string-append (map (case-lambda ((g$x$12953$1HvE18) (if (symbol? g$x$12953$1HvE18) (symbol->string g$x$12953$1HvE18) (if (string? g$x$12953$1HvE18) g$x$12953$1HvE18 (assertion-violation 'define-record-type '"BUG"))))) g$str*$12952$1HvE18))))))) (g$get-record-name$12387$1HvE18 (case-lambda ((g$spec$12924$1HvE18) ((case-lambda ((g$t$12925$1HvE18) ((case-lambda ((g$ls/false$12926$1HvE18) (if (if g$ls/false$12926$1HvE18 (begin '#f (apply (case-lambda ((g$foo$12927$1HvE18 g$make-foo$12928$1HvE18 g$foo?$12929$1HvE18) '#t)) g$ls/false$12926$1HvE18)) '#f) (apply (case-lambda ((g$foo$12930$1HvE18 g$make-foo$12931$1HvE18 g$foo?$12932$1HvE18) g$foo$12930$1HvE18)) g$ls/false$12926$1HvE18) ((case-lambda ((g$t$12933$1HvE18) ((case-lambda ((g$ls/false$12934$1HvE18) (if (if g$ls/false$12934$1HvE18 (begin '#f (apply (case-lambda ((g$foo$12935$1HvE18) '#t)) g$ls/false$12934$1HvE18)) '#f) (apply (case-lambda ((g$foo$12936$1HvE18) g$foo$12936$1HvE18)) g$ls/false$12934$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12933$1HvE18)))) ((case-lambda ((g$x$12937$1HvE18) (list g$x$12937$1HvE18))) g$t$12933$1HvE18)))) g$t$12925$1HvE18)))) ((case-lambda ((g$x$12938$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12938$1HvE18) (begin '#f ((case-lambda ((g$q$12939$1HvE18) (if g$q$12939$1HvE18 (begin '#f ((case-lambda ((g$r$12940$1HvE18) (if g$r$12940$1HvE18 (begin '#f (append g$q$12939$1HvE18 g$r$12940$1HvE18)) '#f))) ((case-lambda ((g$x$12941$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12941$1HvE18) (begin '#f ((case-lambda ((g$q$12942$1HvE18) (if g$q$12942$1HvE18 (begin '#f ((case-lambda ((g$r$12943$1HvE18) (if g$r$12943$1HvE18 (begin '#f (append g$q$12942$1HvE18 g$r$12943$1HvE18)) '#f))) ((case-lambda ((g$x$12944$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12944$1HvE18) (begin '#f ((case-lambda ((g$q$12945$1HvE18) (if g$q$12945$1HvE18 (begin '#f ((case-lambda ((g$r$12946$1HvE18) (if g$r$12946$1HvE18 (begin '#f (append g$q$12945$1HvE18 g$r$12946$1HvE18)) '#f))) ((case-lambda ((g$x$12947$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12947$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12944$1HvE18)))) '#f))) ((case-lambda ((g$x$12948$1HvE18) (list g$x$12948$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12944$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12941$1HvE18)))) '#f))) ((case-lambda ((g$x$12949$1HvE18) (list g$x$12949$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12941$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12938$1HvE18)))) '#f))) ((case-lambda ((g$x$12950$1HvE18) (list g$x$12950$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12938$1HvE18)))) '#f))) g$t$12925$1HvE18)))) g$spec$12924$1HvE18)))) (g$get-record-constructor-name$12388$1HvE18 (case-lambda ((g$spec$12897$1HvE18) ((case-lambda ((g$t$12898$1HvE18) ((case-lambda ((g$ls/false$12899$1HvE18) (if (if g$ls/false$12899$1HvE18 (begin '#f (apply (case-lambda ((g$foo$12900$1HvE18 g$make-foo$12901$1HvE18 g$foo?$12902$1HvE18) '#t)) g$ls/false$12899$1HvE18)) '#f) (apply (case-lambda ((g$foo$12903$1HvE18 g$make-foo$12904$1HvE18 g$foo?$12905$1HvE18) g$make-foo$12904$1HvE18)) g$ls/false$12899$1HvE18) ((case-lambda ((g$t$12906$1HvE18) ((case-lambda ((g$ls/false$12907$1HvE18) (if (if g$ls/false$12907$1HvE18 (begin '#f (apply (case-lambda ((g$foo$12908$1HvE18) (g$id?$9312$1HvE18 g$foo$12908$1HvE18))) g$ls/false$12907$1HvE18)) '#f) (apply (case-lambda ((g$foo$12909$1HvE18) (g$id$12386$1HvE18 g$foo$12909$1HvE18 '"make-" (g$stx->datum$9323$1HvE18 g$foo$12909$1HvE18)))) g$ls/false$12907$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12906$1HvE18)))) ((case-lambda ((g$x$12910$1HvE18) (list g$x$12910$1HvE18))) g$t$12906$1HvE18)))) g$t$12898$1HvE18)))) ((case-lambda ((g$x$12911$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12911$1HvE18) (begin '#f ((case-lambda ((g$q$12912$1HvE18) (if g$q$12912$1HvE18 (begin '#f ((case-lambda ((g$r$12913$1HvE18) (if g$r$12913$1HvE18 (begin '#f (append g$q$12912$1HvE18 g$r$12913$1HvE18)) '#f))) ((case-lambda ((g$x$12914$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12914$1HvE18) (begin '#f ((case-lambda ((g$q$12915$1HvE18) (if g$q$12915$1HvE18 (begin '#f ((case-lambda ((g$r$12916$1HvE18) (if g$r$12916$1HvE18 (begin '#f (append g$q$12915$1HvE18 g$r$12916$1HvE18)) '#f))) ((case-lambda ((g$x$12917$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12917$1HvE18) (begin '#f ((case-lambda ((g$q$12918$1HvE18) (if g$q$12918$1HvE18 (begin '#f ((case-lambda ((g$r$12919$1HvE18) (if g$r$12919$1HvE18 (begin '#f (append g$q$12918$1HvE18 g$r$12919$1HvE18)) '#f))) ((case-lambda ((g$x$12920$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12920$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12917$1HvE18)))) '#f))) ((case-lambda ((g$x$12921$1HvE18) (list g$x$12921$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12917$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12914$1HvE18)))) '#f))) ((case-lambda ((g$x$12922$1HvE18) (list g$x$12922$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12914$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12911$1HvE18)))) '#f))) ((case-lambda ((g$x$12923$1HvE18) (list g$x$12923$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12911$1HvE18)))) '#f))) g$t$12898$1HvE18)))) g$spec$12897$1HvE18)))) (g$get-record-predicate-name$12389$1HvE18 (case-lambda ((g$spec$12870$1HvE18) ((case-lambda ((g$t$12871$1HvE18) ((case-lambda ((g$ls/false$12872$1HvE18) (if (if g$ls/false$12872$1HvE18 (begin '#f (apply (case-lambda ((g$foo$12873$1HvE18 g$make-foo$12874$1HvE18 g$foo?$12875$1HvE18) '#t)) g$ls/false$12872$1HvE18)) '#f) (apply (case-lambda ((g$foo$12876$1HvE18 g$make-foo$12877$1HvE18 g$foo?$12878$1HvE18) g$foo?$12878$1HvE18)) g$ls/false$12872$1HvE18) ((case-lambda ((g$t$12879$1HvE18) ((case-lambda ((g$ls/false$12880$1HvE18) (if (if g$ls/false$12880$1HvE18 (begin '#f (apply (case-lambda ((g$foo$12881$1HvE18) (g$id?$9312$1HvE18 g$foo$12881$1HvE18))) g$ls/false$12880$1HvE18)) '#f) (apply (case-lambda ((g$foo$12882$1HvE18) (g$id$12386$1HvE18 g$foo$12882$1HvE18 (g$stx->datum$9323$1HvE18 g$foo$12882$1HvE18) '"?"))) g$ls/false$12880$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12879$1HvE18)))) ((case-lambda ((g$x$12883$1HvE18) (list g$x$12883$1HvE18))) g$t$12879$1HvE18)))) g$t$12871$1HvE18)))) ((case-lambda ((g$x$12884$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12884$1HvE18) (begin '#f ((case-lambda ((g$q$12885$1HvE18) (if g$q$12885$1HvE18 (begin '#f ((case-lambda ((g$r$12886$1HvE18) (if g$r$12886$1HvE18 (begin '#f (append g$q$12885$1HvE18 g$r$12886$1HvE18)) '#f))) ((case-lambda ((g$x$12887$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12887$1HvE18) (begin '#f ((case-lambda ((g$q$12888$1HvE18) (if g$q$12888$1HvE18 (begin '#f ((case-lambda ((g$r$12889$1HvE18) (if g$r$12889$1HvE18 (begin '#f (append g$q$12888$1HvE18 g$r$12889$1HvE18)) '#f))) ((case-lambda ((g$x$12890$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12890$1HvE18) (begin '#f ((case-lambda ((g$q$12891$1HvE18) (if g$q$12891$1HvE18 (begin '#f ((case-lambda ((g$r$12892$1HvE18) (if g$r$12892$1HvE18 (begin '#f (append g$q$12891$1HvE18 g$r$12892$1HvE18)) '#f))) ((case-lambda ((g$x$12893$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12893$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12890$1HvE18)))) '#f))) ((case-lambda ((g$x$12894$1HvE18) (list g$x$12894$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12890$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12887$1HvE18)))) '#f))) ((case-lambda ((g$x$12895$1HvE18) (list g$x$12895$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12887$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12884$1HvE18)))) '#f))) ((case-lambda ((g$x$12896$1HvE18) (list g$x$12896$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12884$1HvE18)))) '#f))) g$t$12871$1HvE18)))) g$spec$12870$1HvE18)))) (g$get-clause$12390$1HvE18 (case-lambda ((g$id$12848$1HvE18 g$ls$12849$1HvE18) ((case-lambda ((g$t$12850$1HvE18) ((case-lambda ((g$ls/false$12851$1HvE18) (if (if g$ls/false$12851$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12851$1HvE18)) '#f) (apply (case-lambda (() '#f)) g$ls/false$12851$1HvE18) ((case-lambda ((g$t$12852$1HvE18) ((case-lambda ((g$ls/false$12853$1HvE18) (if (if g$ls/false$12853$1HvE18 (begin '#f (apply (case-lambda ((g$x$12854$1HvE18 g$rest$12855$1HvE18 g$ls$12856$1HvE18) '#t)) g$ls/false$12853$1HvE18)) '#f) (apply (case-lambda ((g$x$12857$1HvE18 g$rest$12858$1HvE18 g$ls$12859$1HvE18) (if (g$free-id=?$9316$1HvE18 (g$bless$9557$1HvE18 g$id$12848$1HvE18) g$x$12857$1HvE18) (cons g$x$12857$1HvE18 g$rest$12858$1HvE18) (g$get-clause$12390$1HvE18 g$id$12848$1HvE18 g$ls$12859$1HvE18)))) g$ls/false$12853$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12852$1HvE18)))) ((case-lambda ((g$x$12860$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12860$1HvE18) (begin '#f ((case-lambda ((g$q$12861$1HvE18) (if g$q$12861$1HvE18 (begin '#f ((case-lambda ((g$r$12862$1HvE18) (if g$r$12862$1HvE18 (begin '#f (append g$q$12861$1HvE18 g$r$12862$1HvE18)) '#f))) ((case-lambda ((g$x$12863$1HvE18) (list g$x$12863$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12860$1HvE18)))) '#f))) ((case-lambda ((g$x$12864$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12864$1HvE18) (begin '#f ((case-lambda ((g$q$12865$1HvE18) (if g$q$12865$1HvE18 (begin '#f ((case-lambda ((g$r$12866$1HvE18) (if g$r$12866$1HvE18 (begin '#f (append g$q$12865$1HvE18 g$r$12866$1HvE18)) '#f))) ((case-lambda ((g$x$12867$1HvE18) (list g$x$12867$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12864$1HvE18)))) '#f))) ((case-lambda ((g$x$12868$1HvE18) (list g$x$12868$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12864$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$12860$1HvE18)))) '#f))) g$t$12852$1HvE18)))) g$t$12850$1HvE18)))) ((case-lambda ((g$x$12869$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12869$1HvE18) '()) (begin '#f '()) '#f))) g$t$12850$1HvE18)))) g$ls$12849$1HvE18)))) (g$foo-rtd-code$12391$1HvE18 (case-lambda ((g$name$12720$1HvE18 g$clause*$12721$1HvE18) (letrec* ((g$convert-field-spec*$12722$1HvE18 (case-lambda ((g$ls$12811$1HvE18) (list->vector (map (case-lambda ((g$x$12812$1HvE18) ((case-lambda ((g$t$12813$1HvE18) ((case-lambda ((g$ls/false$12814$1HvE18) (if (if g$ls/false$12814$1HvE18 (begin '#f (apply (case-lambda ((g$name$12815$1HvE18 g$rest$12816$1HvE18) '#t)) g$ls/false$12814$1HvE18)) '#f) (apply (case-lambda ((g$name$12817$1HvE18 g$rest$12818$1HvE18) (list 'mutable g$name$12817$1HvE18))) g$ls/false$12814$1HvE18) ((case-lambda ((g$t$12819$1HvE18) ((case-lambda ((g$ls/false$12820$1HvE18) (if (if g$ls/false$12820$1HvE18 (begin '#f (apply (case-lambda ((g$name$12821$1HvE18 g$rest$12822$1HvE18) '#t)) g$ls/false$12820$1HvE18)) '#f) (apply (case-lambda ((g$name$12823$1HvE18 g$rest$12824$1HvE18) (list 'immutable g$name$12823$1HvE18))) g$ls/false$12820$1HvE18) ((case-lambda ((g$t$12825$1HvE18) ((case-lambda ((g$ls/false$12826$1HvE18) (if (if g$ls/false$12826$1HvE18 (begin '#f (apply (case-lambda ((g$name$12827$1HvE18) '#t)) g$ls/false$12826$1HvE18)) '#f) (apply (case-lambda ((g$name$12828$1HvE18) (list 'immutable g$name$12828$1HvE18))) g$ls/false$12826$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12825$1HvE18)))) ((case-lambda ((g$x$12829$1HvE18) (list g$x$12829$1HvE18))) g$t$12825$1HvE18)))) g$t$12819$1HvE18)))) ((case-lambda ((g$x$12830$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12830$1HvE18) (begin '#f ((case-lambda ((g$q$12831$1HvE18) (if g$q$12831$1HvE18 (begin '#f ((case-lambda ((g$r$12832$1HvE18) (if g$r$12832$1HvE18 (begin '#f (append g$q$12831$1HvE18 g$r$12832$1HvE18)) '#f))) ((case-lambda ((g$x$12833$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12833$1HvE18) (begin '#f ((case-lambda ((g$q$12834$1HvE18) (if g$q$12834$1HvE18 (begin '#f ((case-lambda ((g$r$12835$1HvE18) (if g$r$12835$1HvE18 (begin '#f (append g$q$12834$1HvE18 g$r$12835$1HvE18)) '#f))) ((case-lambda ((g$x$12836$1HvE18) (list g$x$12836$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12833$1HvE18)))) '#f))) ((case-lambda ((g$x$12837$1HvE18) (list g$x$12837$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12833$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12830$1HvE18)))) '#f))) ((case-lambda ((g$x$12838$1HvE18) (if (g$id?$9312$1HvE18 g$x$12838$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12838$1HvE18 (g$scheme-stx$9537$1HvE18 'immutable)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12830$1HvE18)))) '#f))) g$t$12819$1HvE18)))) g$t$12813$1HvE18)))) ((case-lambda ((g$x$12839$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12839$1HvE18) (begin '#f ((case-lambda ((g$q$12840$1HvE18) (if g$q$12840$1HvE18 (begin '#f ((case-lambda ((g$r$12841$1HvE18) (if g$r$12841$1HvE18 (begin '#f (append g$q$12840$1HvE18 g$r$12841$1HvE18)) '#f))) ((case-lambda ((g$x$12842$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12842$1HvE18) (begin '#f ((case-lambda ((g$q$12843$1HvE18) (if g$q$12843$1HvE18 (begin '#f ((case-lambda ((g$r$12844$1HvE18) (if g$r$12844$1HvE18 (begin '#f (append g$q$12843$1HvE18 g$r$12844$1HvE18)) '#f))) ((case-lambda ((g$x$12845$1HvE18) (list g$x$12845$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12842$1HvE18)))) '#f))) ((case-lambda ((g$x$12846$1HvE18) (list g$x$12846$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12842$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12839$1HvE18)))) '#f))) ((case-lambda ((g$x$12847$1HvE18) (if (g$id?$9312$1HvE18 g$x$12847$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12847$1HvE18 (g$scheme-stx$9537$1HvE18 'mutable)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12839$1HvE18)))) '#f))) g$t$12813$1HvE18)))) g$x$12812$1HvE18))) g$ls$12811$1HvE18)))))) ((case-lambda ((g$parent-rtd-code$12723$1HvE18 g$uid-code$12724$1HvE18 g$sealed?$12725$1HvE18 g$opaque?$12726$1HvE18 g$fields$12727$1HvE18) (g$bless$9557$1HvE18 (list 'make-record-type-descriptor (list 'quote g$name$12720$1HvE18) g$parent-rtd-code$12723$1HvE18 g$uid-code$12724$1HvE18 g$sealed?$12725$1HvE18 g$opaque?$12726$1HvE18 g$fields$12727$1HvE18)))) ((case-lambda ((g$t$12728$1HvE18) ((case-lambda ((g$ls/false$12729$1HvE18) (if (if g$ls/false$12729$1HvE18 (begin '#f (apply (case-lambda ((g$name$12730$1HvE18) '#t)) g$ls/false$12729$1HvE18)) '#f) (apply (case-lambda ((g$name$12731$1HvE18) (list 'record-type-descriptor g$name$12731$1HvE18))) g$ls/false$12729$1HvE18) ((case-lambda ((g$t$12732$1HvE18) ((case-lambda ((g$ls/false$12733$1HvE18) (if (if g$ls/false$12733$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12733$1HvE18)) '#f) (apply (case-lambda (() '#f)) g$ls/false$12733$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12732$1HvE18)))) ((case-lambda ((g$x$12734$1HvE18) '())) g$t$12732$1HvE18)))) g$t$12728$1HvE18)))) ((case-lambda ((g$x$12735$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12735$1HvE18) (begin '#f ((case-lambda ((g$q$12736$1HvE18) (if g$q$12736$1HvE18 (begin '#f ((case-lambda ((g$r$12737$1HvE18) (if g$r$12737$1HvE18 (begin '#f (append g$q$12736$1HvE18 g$r$12737$1HvE18)) '#f))) ((case-lambda ((g$x$12738$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12738$1HvE18) (begin '#f ((case-lambda ((g$q$12739$1HvE18) (if g$q$12739$1HvE18 (begin '#f ((case-lambda ((g$r$12740$1HvE18) (if g$r$12740$1HvE18 (begin '#f (append g$q$12739$1HvE18 g$r$12740$1HvE18)) '#f))) ((case-lambda ((g$x$12741$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12741$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12738$1HvE18)))) '#f))) ((case-lambda ((g$x$12742$1HvE18) (list g$x$12742$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12738$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12735$1HvE18)))) '#f))) ((case-lambda ((g$x$12743$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12735$1HvE18)))) '#f))) g$t$12728$1HvE18)))) (g$get-clause$12390$1HvE18 'parent g$clause*$12721$1HvE18)) ((case-lambda ((g$t$12744$1HvE18) ((case-lambda ((g$ls/false$12745$1HvE18) (if (if g$ls/false$12745$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12745$1HvE18)) '#f) (apply (case-lambda (() (list 'quote (gensym)))) g$ls/false$12745$1HvE18) ((case-lambda ((g$t$12746$1HvE18) ((case-lambda ((g$ls/false$12747$1HvE18) (if (if g$ls/false$12747$1HvE18 (begin '#f (apply (case-lambda ((g$uid$12748$1HvE18) '#t)) g$ls/false$12747$1HvE18)) '#f) (apply (case-lambda ((g$uid$12749$1HvE18) (list 'quote g$uid$12749$1HvE18))) g$ls/false$12747$1HvE18) ((case-lambda ((g$t$12750$1HvE18) ((case-lambda ((g$ls/false$12751$1HvE18) (if (if g$ls/false$12751$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12751$1HvE18)) '#f) (apply (case-lambda (() '#f)) g$ls/false$12751$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12750$1HvE18)))) ((case-lambda ((g$x$12752$1HvE18) '())) g$t$12750$1HvE18)))) g$t$12746$1HvE18)))) ((case-lambda ((g$x$12753$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12753$1HvE18) (begin '#f ((case-lambda ((g$q$12754$1HvE18) (if g$q$12754$1HvE18 (begin '#f ((case-lambda ((g$r$12755$1HvE18) (if g$r$12755$1HvE18 (begin '#f (append g$q$12754$1HvE18 g$r$12755$1HvE18)) '#f))) ((case-lambda ((g$x$12756$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12756$1HvE18) (begin '#f ((case-lambda ((g$q$12757$1HvE18) (if g$q$12757$1HvE18 (begin '#f ((case-lambda ((g$r$12758$1HvE18) (if g$r$12758$1HvE18 (begin '#f (append g$q$12757$1HvE18 g$r$12758$1HvE18)) '#f))) ((case-lambda ((g$x$12759$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12759$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12756$1HvE18)))) '#f))) ((case-lambda ((g$x$12760$1HvE18) (list g$x$12760$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12756$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12753$1HvE18)))) '#f))) ((case-lambda ((g$x$12761$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12753$1HvE18)))) '#f))) g$t$12746$1HvE18)))) g$t$12744$1HvE18)))) ((case-lambda ((g$x$12762$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12762$1HvE18) (begin '#f ((case-lambda ((g$q$12763$1HvE18) (if g$q$12763$1HvE18 (begin '#f ((case-lambda ((g$r$12764$1HvE18) (if g$r$12764$1HvE18 (begin '#f (append g$q$12763$1HvE18 g$r$12764$1HvE18)) '#f))) ((case-lambda ((g$x$12765$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12765$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12762$1HvE18)))) '#f))) ((case-lambda ((g$x$12766$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12762$1HvE18)))) '#f))) g$t$12744$1HvE18)))) (g$get-clause$12390$1HvE18 'nongenerative g$clause*$12721$1HvE18)) ((case-lambda ((g$t$12767$1HvE18) ((case-lambda ((g$ls/false$12768$1HvE18) (if (if g$ls/false$12768$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12768$1HvE18)) '#f) (apply (case-lambda (() '#t)) g$ls/false$12768$1HvE18) ((case-lambda ((g$t$12769$1HvE18) ((case-lambda ((g$ls/false$12770$1HvE18) (if (if g$ls/false$12770$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12770$1HvE18)) '#f) (apply (case-lambda (() '#f)) g$ls/false$12770$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12769$1HvE18)))) ((case-lambda ((g$x$12771$1HvE18) '())) g$t$12769$1HvE18)))) g$t$12767$1HvE18)))) ((case-lambda ((g$x$12772$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12772$1HvE18) (begin '#f ((case-lambda ((g$q$12773$1HvE18) (if g$q$12773$1HvE18 (begin '#f ((case-lambda ((g$r$12774$1HvE18) (if g$r$12774$1HvE18 (begin '#f (append g$q$12773$1HvE18 g$r$12774$1HvE18)) '#f))) ((case-lambda ((g$x$12775$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12775$1HvE18) (begin '#f ((case-lambda ((g$q$12776$1HvE18) (if g$q$12776$1HvE18 (begin '#f ((case-lambda ((g$r$12777$1HvE18) (if g$r$12777$1HvE18 (begin '#f (append g$q$12776$1HvE18 g$r$12777$1HvE18)) '#f))) ((case-lambda ((g$x$12778$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12778$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12775$1HvE18)))) '#f))) ((case-lambda ((g$x$12779$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12779$1HvE18) '#t) (begin '#f '()) '#f))) (g$syntax-car$9309$1HvE18 g$x$12775$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12772$1HvE18)))) '#f))) ((case-lambda ((g$x$12780$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12772$1HvE18)))) '#f))) g$t$12767$1HvE18)))) (g$get-clause$12390$1HvE18 'sealed g$clause*$12721$1HvE18)) ((case-lambda ((g$t$12781$1HvE18) ((case-lambda ((g$ls/false$12782$1HvE18) (if (if g$ls/false$12782$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12782$1HvE18)) '#f) (apply (case-lambda (() '#t)) g$ls/false$12782$1HvE18) ((case-lambda ((g$t$12783$1HvE18) ((case-lambda ((g$ls/false$12784$1HvE18) (if (if g$ls/false$12784$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12784$1HvE18)) '#f) (apply (case-lambda (() '#f)) g$ls/false$12784$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12783$1HvE18)))) ((case-lambda ((g$x$12785$1HvE18) '())) g$t$12783$1HvE18)))) g$t$12781$1HvE18)))) ((case-lambda ((g$x$12786$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12786$1HvE18) (begin '#f ((case-lambda ((g$q$12787$1HvE18) (if g$q$12787$1HvE18 (begin '#f ((case-lambda ((g$r$12788$1HvE18) (if g$r$12788$1HvE18 (begin '#f (append g$q$12787$1HvE18 g$r$12788$1HvE18)) '#f))) ((case-lambda ((g$x$12789$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12789$1HvE18) (begin '#f ((case-lambda ((g$q$12790$1HvE18) (if g$q$12790$1HvE18 (begin '#f ((case-lambda ((g$r$12791$1HvE18) (if g$r$12791$1HvE18 (begin '#f (append g$q$12790$1HvE18 g$r$12791$1HvE18)) '#f))) ((case-lambda ((g$x$12792$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12792$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12789$1HvE18)))) '#f))) ((case-lambda ((g$x$12793$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12793$1HvE18) '#t) (begin '#f '()) '#f))) (g$syntax-car$9309$1HvE18 g$x$12789$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12786$1HvE18)))) '#f))) ((case-lambda ((g$x$12794$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12786$1HvE18)))) '#f))) g$t$12781$1HvE18)))) (g$get-clause$12390$1HvE18 'opaque g$clause*$12721$1HvE18)) ((case-lambda ((g$t$12795$1HvE18) ((case-lambda ((g$ls/false$12796$1HvE18) (if (if g$ls/false$12796$1HvE18 (begin '#f (apply (case-lambda ((g$field-spec*$12797$1HvE18) '#t)) g$ls/false$12796$1HvE18)) '#f) (apply (case-lambda ((g$field-spec*$12798$1HvE18) (list 'quote (g$convert-field-spec*$12722$1HvE18 g$field-spec*$12798$1HvE18)))) g$ls/false$12796$1HvE18) ((case-lambda ((g$t$12799$1HvE18) ((case-lambda ((g$ls/false$12800$1HvE18) (if (if g$ls/false$12800$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12800$1HvE18)) '#f) (apply (case-lambda (() ''#())) g$ls/false$12800$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12799$1HvE18)))) ((case-lambda ((g$x$12801$1HvE18) '())) g$t$12799$1HvE18)))) g$t$12795$1HvE18)))) ((case-lambda ((g$x$12802$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12802$1HvE18) (begin '#f ((case-lambda ((g$q$12803$1HvE18) (if g$q$12803$1HvE18 (begin '#f ((case-lambda ((g$r$12804$1HvE18) (if g$r$12804$1HvE18 (begin '#f (append g$q$12803$1HvE18 g$r$12804$1HvE18)) '#f))) ((letrec ((g$f$12805$1HvE18 (case-lambda ((g$x$12806$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12806$1HvE18) ((case-lambda ((g$cars/f$12807$1HvE18) (if g$cars/f$12807$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12808$1HvE18) (if g$cdrs/f$12808$1HvE18 (begin '#f (map cons g$cars/f$12807$1HvE18 g$cdrs/f$12808$1HvE18)) '#f))) (g$f$12805$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12806$1HvE18)))) '#f))) ((case-lambda ((g$x$12809$1HvE18) (list g$x$12809$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12806$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12806$1HvE18) (list (begin 'field-spec* '())) '#f)))))) g$f$12805$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$12802$1HvE18)))) '#f))) ((case-lambda ((g$x$12810$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12802$1HvE18)))) '#f))) g$t$12795$1HvE18)))) (g$get-clause$12390$1HvE18 'fields g$clause*$12721$1HvE18))))))) (g$foo-rcd-code$12392$1HvE18 (case-lambda ((g$clause*$12700$1HvE18 g$foo-rtd$12701$1HvE18 g$protocol$12702$1HvE18) ((case-lambda ((g$parent-rcd-code$12703$1HvE18) (list 'make-record-constructor-descriptor g$foo-rtd$12701$1HvE18 g$parent-rcd-code$12703$1HvE18 g$protocol$12702$1HvE18))) ((case-lambda ((g$t$12704$1HvE18) ((case-lambda ((g$ls/false$12705$1HvE18) (if (if g$ls/false$12705$1HvE18 (begin '#f (apply (case-lambda ((g$name$12706$1HvE18) '#t)) g$ls/false$12705$1HvE18)) '#f) (apply (case-lambda ((g$name$12707$1HvE18) (list 'record-constructor-descriptor g$name$12707$1HvE18))) g$ls/false$12705$1HvE18) ((case-lambda ((g$t$12708$1HvE18) ((case-lambda ((g$ls/false$12709$1HvE18) (if (if g$ls/false$12709$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12709$1HvE18)) '#f) (apply (case-lambda (() '#f)) g$ls/false$12709$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12708$1HvE18)))) ((case-lambda ((g$x$12710$1HvE18) '())) g$t$12708$1HvE18)))) g$t$12704$1HvE18)))) ((case-lambda ((g$x$12711$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12711$1HvE18) (begin '#f ((case-lambda ((g$q$12712$1HvE18) (if g$q$12712$1HvE18 (begin '#f ((case-lambda ((g$r$12713$1HvE18) (if g$r$12713$1HvE18 (begin '#f (append g$q$12712$1HvE18 g$r$12713$1HvE18)) '#f))) ((case-lambda ((g$x$12714$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12714$1HvE18) (begin '#f ((case-lambda ((g$q$12715$1HvE18) (if g$q$12715$1HvE18 (begin '#f ((case-lambda ((g$r$12716$1HvE18) (if g$r$12716$1HvE18 (begin '#f (append g$q$12715$1HvE18 g$r$12716$1HvE18)) '#f))) ((case-lambda ((g$x$12717$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12717$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12714$1HvE18)))) '#f))) ((case-lambda ((g$x$12718$1HvE18) (list g$x$12718$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12714$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12711$1HvE18)))) '#f))) ((case-lambda ((g$x$12719$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12711$1HvE18)))) '#f))) g$t$12704$1HvE18)))) (g$get-clause$12390$1HvE18 'parent g$clause*$12700$1HvE18)))))) (g$get-protocol-code$12393$1HvE18 (case-lambda ((g$clause*$12683$1HvE18) ((case-lambda ((g$t$12684$1HvE18) ((case-lambda ((g$ls/false$12685$1HvE18) (if (if g$ls/false$12685$1HvE18 (begin '#f (apply (case-lambda ((g$expr$12686$1HvE18) '#t)) g$ls/false$12685$1HvE18)) '#f) (apply (case-lambda ((g$expr$12687$1HvE18) g$expr$12687$1HvE18)) g$ls/false$12685$1HvE18) ((case-lambda ((g$t$12688$1HvE18) ((case-lambda ((g$ls/false$12689$1HvE18) (if (if g$ls/false$12689$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12689$1HvE18)) '#f) (apply (case-lambda (() '#f)) g$ls/false$12689$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12688$1HvE18)))) ((case-lambda ((g$x$12690$1HvE18) '())) g$t$12688$1HvE18)))) g$t$12684$1HvE18)))) ((case-lambda ((g$x$12691$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12691$1HvE18) (begin '#f ((case-lambda ((g$q$12692$1HvE18) (if g$q$12692$1HvE18 (begin '#f ((case-lambda ((g$r$12693$1HvE18) (if g$r$12693$1HvE18 (begin '#f (append g$q$12692$1HvE18 g$r$12693$1HvE18)) '#f))) ((case-lambda ((g$x$12694$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12694$1HvE18) (begin '#f ((case-lambda ((g$q$12695$1HvE18) (if g$q$12695$1HvE18 (begin '#f ((case-lambda ((g$r$12696$1HvE18) (if g$r$12696$1HvE18 (begin '#f (append g$q$12695$1HvE18 g$r$12696$1HvE18)) '#f))) ((case-lambda ((g$x$12697$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12697$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12694$1HvE18)))) '#f))) ((case-lambda ((g$x$12698$1HvE18) (list g$x$12698$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12694$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12691$1HvE18)))) '#f))) ((case-lambda ((g$x$12699$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12691$1HvE18)))) '#f))) g$t$12684$1HvE18)))) (g$get-clause$12390$1HvE18 'protocol g$clause*$12683$1HvE18))))) (g$get-fields$12394$1HvE18 (case-lambda ((g$clause*$12653$1HvE18) ((case-lambda ((g$t$12654$1HvE18) ((case-lambda ((g$ls/false$12655$1HvE18) (if (if g$ls/false$12655$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12655$1HvE18)) '#f) (apply (case-lambda (() '())) g$ls/false$12655$1HvE18) ((case-lambda ((g$t$12656$1HvE18) ((case-lambda ((g$ls/false$12657$1HvE18) (if (if g$ls/false$12657$1HvE18 (begin '#f (apply (case-lambda ((g$f*$12658$1HvE18) '#t)) g$ls/false$12657$1HvE18)) '#f) (apply (case-lambda ((g$f*$12659$1HvE18) g$f*$12659$1HvE18)) g$ls/false$12657$1HvE18) ((case-lambda ((g$t$12660$1HvE18) ((case-lambda ((g$ls/false$12661$1HvE18) (if (if g$ls/false$12661$1HvE18 (begin '#f (apply (case-lambda ((g$rest$12662$1HvE18) '#t)) g$ls/false$12661$1HvE18)) '#f) (apply (case-lambda ((g$rest$12663$1HvE18) (g$get-fields$12394$1HvE18 g$rest$12663$1HvE18))) g$ls/false$12661$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12660$1HvE18)))) ((case-lambda ((g$x$12664$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12664$1HvE18) (begin '#f ((case-lambda ((g$q$12665$1HvE18) (if g$q$12665$1HvE18 (begin '#f ((case-lambda ((g$r$12666$1HvE18) (if g$r$12666$1HvE18 (begin '#f (append g$q$12665$1HvE18 g$r$12666$1HvE18)) '#f))) ((case-lambda ((g$x$12667$1HvE18) (list g$x$12667$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12664$1HvE18)))) '#f))) ((case-lambda ((g$x$12668$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12664$1HvE18)))) '#f))) g$t$12660$1HvE18)))) g$t$12656$1HvE18)))) ((case-lambda ((g$x$12669$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12669$1HvE18) (begin '#f ((case-lambda ((g$q$12670$1HvE18) (if g$q$12670$1HvE18 (begin '#f ((case-lambda ((g$r$12671$1HvE18) (if g$r$12671$1HvE18 (begin '#f (append g$q$12670$1HvE18 g$r$12671$1HvE18)) '#f))) ((case-lambda ((g$x$12672$1HvE18) '())) (g$syntax-cdr$9310$1HvE18 g$x$12669$1HvE18)))) '#f))) ((case-lambda ((g$x$12673$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12673$1HvE18) (begin '#f ((case-lambda ((g$q$12674$1HvE18) (if g$q$12674$1HvE18 (begin '#f ((case-lambda ((g$r$12675$1HvE18) (if g$r$12675$1HvE18 (begin '#f (append g$q$12674$1HvE18 g$r$12675$1HvE18)) '#f))) ((letrec ((g$f$12676$1HvE18 (case-lambda ((g$x$12677$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12677$1HvE18) ((case-lambda ((g$cars/f$12678$1HvE18) (if g$cars/f$12678$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12679$1HvE18) (if g$cdrs/f$12679$1HvE18 (begin '#f (map cons g$cars/f$12678$1HvE18 g$cdrs/f$12679$1HvE18)) '#f))) (g$f$12676$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12677$1HvE18)))) '#f))) ((case-lambda ((g$x$12680$1HvE18) (list g$x$12680$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12677$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12677$1HvE18) (list (begin 'f* '())) '#f)))))) g$f$12676$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$12673$1HvE18)))) '#f))) ((case-lambda ((g$x$12681$1HvE18) (if (g$id?$9312$1HvE18 g$x$12681$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12681$1HvE18 (g$scheme-stx$9537$1HvE18 'fields)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12673$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$12669$1HvE18)))) '#f))) g$t$12656$1HvE18)))) g$t$12654$1HvE18)))) ((case-lambda ((g$x$12682$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12682$1HvE18) '()) (begin '#f '()) '#f))) g$t$12654$1HvE18)))) g$clause*$12653$1HvE18)))) (g$get-mutator-indices$12395$1HvE18 (case-lambda ((g$fields$12624$1HvE18) ((letrec ((g$f$12625$1HvE18 (case-lambda ((g$fields$12626$1HvE18 g$i$12627$1HvE18) ((case-lambda ((g$t$12628$1HvE18) ((case-lambda ((g$ls/false$12629$1HvE18) (if (if g$ls/false$12629$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12629$1HvE18)) '#f) (apply (case-lambda (() '())) g$ls/false$12629$1HvE18) ((case-lambda ((g$t$12630$1HvE18) ((case-lambda ((g$ls/false$12631$1HvE18) (if (if g$ls/false$12631$1HvE18 (begin '#f (apply (case-lambda ((g$rest$12632$1HvE18) '#t)) g$ls/false$12631$1HvE18)) '#f) (apply (case-lambda ((g$rest$12633$1HvE18) (cons g$i$12627$1HvE18 (g$f$12625$1HvE18 g$rest$12633$1HvE18 (+ g$i$12627$1HvE18 '1))))) g$ls/false$12631$1HvE18) ((case-lambda ((g$t$12634$1HvE18) ((case-lambda ((g$ls/false$12635$1HvE18) (if (if g$ls/false$12635$1HvE18 (begin '#f (apply (case-lambda ((g$rest$12636$1HvE18) '#t)) g$ls/false$12635$1HvE18)) '#f) (apply (case-lambda ((g$rest$12637$1HvE18) (g$f$12625$1HvE18 g$rest$12637$1HvE18 (+ g$i$12627$1HvE18 '1)))) g$ls/false$12635$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12634$1HvE18)))) ((case-lambda ((g$x$12638$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12638$1HvE18) (begin '#f ((case-lambda ((g$q$12639$1HvE18) (if g$q$12639$1HvE18 (begin '#f ((case-lambda ((g$r$12640$1HvE18) (if g$r$12640$1HvE18 (begin '#f (append g$q$12639$1HvE18 g$r$12640$1HvE18)) '#f))) ((case-lambda ((g$x$12641$1HvE18) (list g$x$12641$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12638$1HvE18)))) '#f))) ((case-lambda ((g$x$12642$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12638$1HvE18)))) '#f))) g$t$12634$1HvE18)))) g$t$12630$1HvE18)))) ((case-lambda ((g$x$12643$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12643$1HvE18) (begin '#f ((case-lambda ((g$q$12644$1HvE18) (if g$q$12644$1HvE18 (begin '#f ((case-lambda ((g$r$12645$1HvE18) (if g$r$12645$1HvE18 (begin '#f (append g$q$12644$1HvE18 g$r$12645$1HvE18)) '#f))) ((case-lambda ((g$x$12646$1HvE18) (list g$x$12646$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12643$1HvE18)))) '#f))) ((case-lambda ((g$x$12647$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12647$1HvE18) (begin '#f ((case-lambda ((g$q$12648$1HvE18) (if g$q$12648$1HvE18 (begin '#f ((case-lambda ((g$r$12649$1HvE18) (if g$r$12649$1HvE18 (begin '#f (append g$q$12648$1HvE18 g$r$12649$1HvE18)) '#f))) ((case-lambda ((g$x$12650$1HvE18) '())) (g$syntax-cdr$9310$1HvE18 g$x$12647$1HvE18)))) '#f))) ((case-lambda ((g$x$12651$1HvE18) (if (g$id?$9312$1HvE18 g$x$12651$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12651$1HvE18 (g$scheme-stx$9537$1HvE18 'mutable)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12647$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$12643$1HvE18)))) '#f))) g$t$12630$1HvE18)))) g$t$12628$1HvE18)))) ((case-lambda ((g$x$12652$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12652$1HvE18) '()) (begin '#f '()) '#f))) g$t$12628$1HvE18)))) g$fields$12626$1HvE18))))) g$f$12625$1HvE18) g$fields$12624$1HvE18 '0)))) (g$get-mutators$12396$1HvE18 (case-lambda ((g$foo$12556$1HvE18 g$fields$12557$1HvE18) (letrec* ((g$gen-name$12558$1HvE18 (case-lambda ((g$x$12623$1HvE18) (g$datum->syntax$9697$1HvE18 g$foo$12556$1HvE18 (string->symbol (string-append (symbol->string (g$syntax->datum$9698$1HvE18 g$foo$12556$1HvE18)) '"-" (symbol->string (g$syntax->datum$9698$1HvE18 g$x$12623$1HvE18)) '"-set!"))))))) ((letrec ((g$f$12559$1HvE18 (case-lambda ((g$fields$12560$1HvE18) ((case-lambda ((g$t$12561$1HvE18) ((case-lambda ((g$ls/false$12562$1HvE18) (if (if g$ls/false$12562$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$12562$1HvE18)) '#f) (apply (case-lambda (() '())) g$ls/false$12562$1HvE18) ((case-lambda ((g$t$12563$1HvE18) ((case-lambda ((g$ls/false$12564$1HvE18) (if (if g$ls/false$12564$1HvE18 (begin '#f (apply (case-lambda ((g$name$12565$1HvE18 g$accessor$12566$1HvE18 g$mutator$12567$1HvE18 g$rest$12568$1HvE18) '#t)) g$ls/false$12564$1HvE18)) '#f) (apply (case-lambda ((g$name$12569$1HvE18 g$accessor$12570$1HvE18 g$mutator$12571$1HvE18 g$rest$12572$1HvE18) (cons g$mutator$12571$1HvE18 (g$f$12559$1HvE18 g$rest$12572$1HvE18)))) g$ls/false$12564$1HvE18) ((case-lambda ((g$t$12573$1HvE18) ((case-lambda ((g$ls/false$12574$1HvE18) (if (if g$ls/false$12574$1HvE18 (begin '#f (apply (case-lambda ((g$name$12575$1HvE18 g$rest$12576$1HvE18) '#t)) g$ls/false$12574$1HvE18)) '#f) (apply (case-lambda ((g$name$12577$1HvE18 g$rest$12578$1HvE18) (cons (g$gen-name$12558$1HvE18 g$name$12577$1HvE18) (g$f$12559$1HvE18 g$rest$12578$1HvE18)))) g$ls/false$12574$1HvE18) ((case-lambda ((g$t$12579$1HvE18) ((case-lambda ((g$ls/false$12580$1HvE18) (if (if g$ls/false$12580$1HvE18 (begin '#f (apply (case-lambda ((g$rest$12581$1HvE18) '#t)) g$ls/false$12580$1HvE18)) '#f) (apply (case-lambda ((g$rest$12582$1HvE18) (g$f$12559$1HvE18 g$rest$12582$1HvE18))) g$ls/false$12580$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12579$1HvE18)))) ((case-lambda ((g$x$12583$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12583$1HvE18) (begin '#f ((case-lambda ((g$q$12584$1HvE18) (if g$q$12584$1HvE18 (begin '#f ((case-lambda ((g$r$12585$1HvE18) (if g$r$12585$1HvE18 (begin '#f (append g$q$12584$1HvE18 g$r$12585$1HvE18)) '#f))) ((case-lambda ((g$x$12586$1HvE18) (list g$x$12586$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12583$1HvE18)))) '#f))) ((case-lambda ((g$x$12587$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12583$1HvE18)))) '#f))) g$t$12579$1HvE18)))) g$t$12573$1HvE18)))) ((case-lambda ((g$x$12588$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12588$1HvE18) (begin '#f ((case-lambda ((g$q$12589$1HvE18) (if g$q$12589$1HvE18 (begin '#f ((case-lambda ((g$r$12590$1HvE18) (if g$r$12590$1HvE18 (begin '#f (append g$q$12589$1HvE18 g$r$12590$1HvE18)) '#f))) ((case-lambda ((g$x$12591$1HvE18) (list g$x$12591$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12588$1HvE18)))) '#f))) ((case-lambda ((g$x$12592$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12592$1HvE18) (begin '#f ((case-lambda ((g$q$12593$1HvE18) (if g$q$12593$1HvE18 (begin '#f ((case-lambda ((g$r$12594$1HvE18) (if g$r$12594$1HvE18 (begin '#f (append g$q$12593$1HvE18 g$r$12594$1HvE18)) '#f))) ((case-lambda ((g$x$12595$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12595$1HvE18) (begin '#f ((case-lambda ((g$q$12596$1HvE18) (if g$q$12596$1HvE18 (begin '#f ((case-lambda ((g$r$12597$1HvE18) (if g$r$12597$1HvE18 (begin '#f (append g$q$12596$1HvE18 g$r$12597$1HvE18)) '#f))) ((case-lambda ((g$x$12598$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12598$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12595$1HvE18)))) '#f))) ((case-lambda ((g$x$12599$1HvE18) (list g$x$12599$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12595$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12592$1HvE18)))) '#f))) ((case-lambda ((g$x$12600$1HvE18) (if (g$id?$9312$1HvE18 g$x$12600$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12600$1HvE18 (g$scheme-stx$9537$1HvE18 'mutable)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12592$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$12588$1HvE18)))) '#f))) g$t$12573$1HvE18)))) g$t$12563$1HvE18)))) ((case-lambda ((g$x$12601$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12601$1HvE18) (begin '#f ((case-lambda ((g$q$12602$1HvE18) (if g$q$12602$1HvE18 (begin '#f ((case-lambda ((g$r$12603$1HvE18) (if g$r$12603$1HvE18 (begin '#f (append g$q$12602$1HvE18 g$r$12603$1HvE18)) '#f))) ((case-lambda ((g$x$12604$1HvE18) (list g$x$12604$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12601$1HvE18)))) '#f))) ((case-lambda ((g$x$12605$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12605$1HvE18) (begin '#f ((case-lambda ((g$q$12606$1HvE18) (if g$q$12606$1HvE18 (begin '#f ((case-lambda ((g$r$12607$1HvE18) (if g$r$12607$1HvE18 (begin '#f (append g$q$12606$1HvE18 g$r$12607$1HvE18)) '#f))) ((case-lambda ((g$x$12608$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12608$1HvE18) (begin '#f ((case-lambda ((g$q$12609$1HvE18) (if g$q$12609$1HvE18 (begin '#f ((case-lambda ((g$r$12610$1HvE18) (if g$r$12610$1HvE18 (begin '#f (append g$q$12609$1HvE18 g$r$12610$1HvE18)) '#f))) ((case-lambda ((g$x$12611$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12611$1HvE18) (begin '#f ((case-lambda ((g$q$12612$1HvE18) (if g$q$12612$1HvE18 (begin '#f ((case-lambda ((g$r$12613$1HvE18) (if g$r$12613$1HvE18 (begin '#f (append g$q$12612$1HvE18 g$r$12613$1HvE18)) '#f))) ((case-lambda ((g$x$12614$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12614$1HvE18) (begin '#f ((case-lambda ((g$q$12615$1HvE18) (if g$q$12615$1HvE18 (begin '#f ((case-lambda ((g$r$12616$1HvE18) (if g$r$12616$1HvE18 (begin '#f (append g$q$12615$1HvE18 g$r$12616$1HvE18)) '#f))) ((case-lambda ((g$x$12617$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12617$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12614$1HvE18)))) '#f))) ((case-lambda ((g$x$12618$1HvE18) (list g$x$12618$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12614$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12611$1HvE18)))) '#f))) ((case-lambda ((g$x$12619$1HvE18) (list g$x$12619$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12611$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12608$1HvE18)))) '#f))) ((case-lambda ((g$x$12620$1HvE18) (list g$x$12620$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12608$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12605$1HvE18)))) '#f))) ((case-lambda ((g$x$12621$1HvE18) (if (g$id?$9312$1HvE18 g$x$12621$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12621$1HvE18 (g$scheme-stx$9537$1HvE18 'mutable)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12605$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$12601$1HvE18)))) '#f))) g$t$12563$1HvE18)))) g$t$12561$1HvE18)))) ((case-lambda ((g$x$12622$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12622$1HvE18) '()) (begin '#f '()) '#f))) g$t$12561$1HvE18)))) g$fields$12560$1HvE18))))) g$f$12559$1HvE18) g$fields$12557$1HvE18))))) (g$get-accessors$12397$1HvE18 (case-lambda ((g$foo$12471$1HvE18 g$fields$12472$1HvE18) (letrec* ((g$gen-name$12473$1HvE18 (case-lambda ((g$x$12555$1HvE18) (g$datum->syntax$9697$1HvE18 g$foo$12471$1HvE18 (string->symbol (string-append (symbol->string (g$syntax->datum$9698$1HvE18 g$foo$12471$1HvE18)) '"-" (symbol->string (g$syntax->datum$9698$1HvE18 g$x$12555$1HvE18))))))))) (map (case-lambda ((g$field$12474$1HvE18) ((case-lambda ((g$t$12475$1HvE18) ((case-lambda ((g$ls/false$12476$1HvE18) (if (if g$ls/false$12476$1HvE18 (begin '#f (apply (case-lambda ((g$name$12477$1HvE18 g$accessor$12478$1HvE18 g$mutator$12479$1HvE18) (g$id?$9312$1HvE18 g$accessor$12478$1HvE18))) g$ls/false$12476$1HvE18)) '#f) (apply (case-lambda ((g$name$12480$1HvE18 g$accessor$12481$1HvE18 g$mutator$12482$1HvE18) g$accessor$12481$1HvE18)) g$ls/false$12476$1HvE18) ((case-lambda ((g$t$12483$1HvE18) ((case-lambda ((g$ls/false$12484$1HvE18) (if (if g$ls/false$12484$1HvE18 (begin '#f (apply (case-lambda ((g$name$12485$1HvE18 g$accessor$12486$1HvE18) (g$id?$9312$1HvE18 g$accessor$12486$1HvE18))) g$ls/false$12484$1HvE18)) '#f) (apply (case-lambda ((g$name$12487$1HvE18 g$accessor$12488$1HvE18) g$accessor$12488$1HvE18)) g$ls/false$12484$1HvE18) ((case-lambda ((g$t$12489$1HvE18) ((case-lambda ((g$ls/false$12490$1HvE18) (if (if g$ls/false$12490$1HvE18 (begin '#f (apply (case-lambda ((g$name$12491$1HvE18) (g$id?$9312$1HvE18 g$name$12491$1HvE18))) g$ls/false$12490$1HvE18)) '#f) (apply (case-lambda ((g$name$12492$1HvE18) (g$gen-name$12473$1HvE18 g$name$12492$1HvE18))) g$ls/false$12490$1HvE18) ((case-lambda ((g$t$12493$1HvE18) ((case-lambda ((g$ls/false$12494$1HvE18) (if (if g$ls/false$12494$1HvE18 (begin '#f (apply (case-lambda ((g$name$12495$1HvE18) (g$id?$9312$1HvE18 g$name$12495$1HvE18))) g$ls/false$12494$1HvE18)) '#f) (apply (case-lambda ((g$name$12496$1HvE18) (g$gen-name$12473$1HvE18 g$name$12496$1HvE18))) g$ls/false$12494$1HvE18) ((case-lambda ((g$t$12497$1HvE18) ((case-lambda ((g$ls/false$12498$1HvE18) (if (if g$ls/false$12498$1HvE18 (begin '#f (apply (case-lambda ((g$name$12499$1HvE18) (g$id?$9312$1HvE18 g$name$12499$1HvE18))) g$ls/false$12498$1HvE18)) '#f) (apply (case-lambda ((g$name$12500$1HvE18) (g$gen-name$12473$1HvE18 g$name$12500$1HvE18))) g$ls/false$12498$1HvE18) ((case-lambda ((g$t$12501$1HvE18) ((case-lambda ((g$ls/false$12502$1HvE18) (if (if g$ls/false$12502$1HvE18 (begin '#f (apply (case-lambda ((g$others$12503$1HvE18) '#t)) g$ls/false$12502$1HvE18)) '#f) (apply (case-lambda ((g$others$12504$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid field spec" g$field$12474$1HvE18))) g$ls/false$12502$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12501$1HvE18)))) ((case-lambda ((g$x$12505$1HvE18) (list g$x$12505$1HvE18))) g$t$12501$1HvE18)))) g$t$12497$1HvE18)))) ((case-lambda ((g$x$12506$1HvE18) (list g$x$12506$1HvE18))) g$t$12497$1HvE18)))) g$t$12493$1HvE18)))) ((case-lambda ((g$x$12507$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12507$1HvE18) (begin '#f ((case-lambda ((g$q$12508$1HvE18) (if g$q$12508$1HvE18 (begin '#f ((case-lambda ((g$r$12509$1HvE18) (if g$r$12509$1HvE18 (begin '#f (append g$q$12508$1HvE18 g$r$12509$1HvE18)) '#f))) ((case-lambda ((g$x$12510$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12510$1HvE18) (begin '#f ((case-lambda ((g$q$12511$1HvE18) (if g$q$12511$1HvE18 (begin '#f ((case-lambda ((g$r$12512$1HvE18) (if g$r$12512$1HvE18 (begin '#f (append g$q$12511$1HvE18 g$r$12512$1HvE18)) '#f))) ((case-lambda ((g$x$12513$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12513$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12510$1HvE18)))) '#f))) ((case-lambda ((g$x$12514$1HvE18) (list g$x$12514$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12510$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12507$1HvE18)))) '#f))) ((case-lambda ((g$x$12515$1HvE18) (if (g$id?$9312$1HvE18 g$x$12515$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12515$1HvE18 (g$scheme-stx$9537$1HvE18 'immutable)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12507$1HvE18)))) '#f))) g$t$12493$1HvE18)))) g$t$12489$1HvE18)))) ((case-lambda ((g$x$12516$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12516$1HvE18) (begin '#f ((case-lambda ((g$q$12517$1HvE18) (if g$q$12517$1HvE18 (begin '#f ((case-lambda ((g$r$12518$1HvE18) (if g$r$12518$1HvE18 (begin '#f (append g$q$12517$1HvE18 g$r$12518$1HvE18)) '#f))) ((case-lambda ((g$x$12519$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12519$1HvE18) (begin '#f ((case-lambda ((g$q$12520$1HvE18) (if g$q$12520$1HvE18 (begin '#f ((case-lambda ((g$r$12521$1HvE18) (if g$r$12521$1HvE18 (begin '#f (append g$q$12520$1HvE18 g$r$12521$1HvE18)) '#f))) ((case-lambda ((g$x$12522$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12522$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12519$1HvE18)))) '#f))) ((case-lambda ((g$x$12523$1HvE18) (list g$x$12523$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12519$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12516$1HvE18)))) '#f))) ((case-lambda ((g$x$12524$1HvE18) (if (g$id?$9312$1HvE18 g$x$12524$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12524$1HvE18 (g$scheme-stx$9537$1HvE18 'mutable)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12516$1HvE18)))) '#f))) g$t$12489$1HvE18)))) g$t$12483$1HvE18)))) ((case-lambda ((g$x$12525$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12525$1HvE18) (begin '#f ((case-lambda ((g$q$12526$1HvE18) (if g$q$12526$1HvE18 (begin '#f ((case-lambda ((g$r$12527$1HvE18) (if g$r$12527$1HvE18 (begin '#f (append g$q$12526$1HvE18 g$r$12527$1HvE18)) '#f))) ((case-lambda ((g$x$12528$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12528$1HvE18) (begin '#f ((case-lambda ((g$q$12529$1HvE18) (if g$q$12529$1HvE18 (begin '#f ((case-lambda ((g$r$12530$1HvE18) (if g$r$12530$1HvE18 (begin '#f (append g$q$12529$1HvE18 g$r$12530$1HvE18)) '#f))) ((case-lambda ((g$x$12531$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12531$1HvE18) (begin '#f ((case-lambda ((g$q$12532$1HvE18) (if g$q$12532$1HvE18 (begin '#f ((case-lambda ((g$r$12533$1HvE18) (if g$r$12533$1HvE18 (begin '#f (append g$q$12532$1HvE18 g$r$12533$1HvE18)) '#f))) ((case-lambda ((g$x$12534$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12534$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12531$1HvE18)))) '#f))) ((case-lambda ((g$x$12535$1HvE18) (list g$x$12535$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12531$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12528$1HvE18)))) '#f))) ((case-lambda ((g$x$12536$1HvE18) (list g$x$12536$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12528$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12525$1HvE18)))) '#f))) ((case-lambda ((g$x$12537$1HvE18) (if (g$id?$9312$1HvE18 g$x$12537$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12537$1HvE18 (g$scheme-stx$9537$1HvE18 'immutable)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12525$1HvE18)))) '#f))) g$t$12483$1HvE18)))) g$t$12475$1HvE18)))) ((case-lambda ((g$x$12538$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12538$1HvE18) (begin '#f ((case-lambda ((g$q$12539$1HvE18) (if g$q$12539$1HvE18 (begin '#f ((case-lambda ((g$r$12540$1HvE18) (if g$r$12540$1HvE18 (begin '#f (append g$q$12539$1HvE18 g$r$12540$1HvE18)) '#f))) ((case-lambda ((g$x$12541$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12541$1HvE18) (begin '#f ((case-lambda ((g$q$12542$1HvE18) (if g$q$12542$1HvE18 (begin '#f ((case-lambda ((g$r$12543$1HvE18) (if g$r$12543$1HvE18 (begin '#f (append g$q$12542$1HvE18 g$r$12543$1HvE18)) '#f))) ((case-lambda ((g$x$12544$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12544$1HvE18) (begin '#f ((case-lambda ((g$q$12545$1HvE18) (if g$q$12545$1HvE18 (begin '#f ((case-lambda ((g$r$12546$1HvE18) (if g$r$12546$1HvE18 (begin '#f (append g$q$12545$1HvE18 g$r$12546$1HvE18)) '#f))) ((case-lambda ((g$x$12547$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12547$1HvE18) (begin '#f ((case-lambda ((g$q$12548$1HvE18) (if g$q$12548$1HvE18 (begin '#f ((case-lambda ((g$r$12549$1HvE18) (if g$r$12549$1HvE18 (begin '#f (append g$q$12548$1HvE18 g$r$12549$1HvE18)) '#f))) ((case-lambda ((g$x$12550$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$12550$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12547$1HvE18)))) '#f))) ((case-lambda ((g$x$12551$1HvE18) (list g$x$12551$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12547$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12544$1HvE18)))) '#f))) ((case-lambda ((g$x$12552$1HvE18) (list g$x$12552$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12544$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12541$1HvE18)))) '#f))) ((case-lambda ((g$x$12553$1HvE18) (list g$x$12553$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12541$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12538$1HvE18)))) '#f))) ((case-lambda ((g$x$12554$1HvE18) (if (g$id?$9312$1HvE18 g$x$12554$1HvE18) (if (g$free-id=?$9316$1HvE18 g$x$12554$1HvE18 (g$scheme-stx$9537$1HvE18 'mutable)) (begin '#f '()) '#f) '#f))) (g$syntax-car$9309$1HvE18 g$x$12538$1HvE18)))) '#f))) g$t$12475$1HvE18)))) g$field$12474$1HvE18))) g$fields$12472$1HvE18))))) (g$enumerate$12398$1HvE18 (case-lambda ((g$ls$12467$1HvE18) ((letrec ((g$f$12468$1HvE18 (case-lambda ((g$ls$12469$1HvE18 g$i$12470$1HvE18) (if (null? g$ls$12469$1HvE18) '() (cons g$i$12470$1HvE18 (g$f$12468$1HvE18 (cdr g$ls$12469$1HvE18) (+ g$i$12470$1HvE18 '1)))))))) g$f$12468$1HvE18) g$ls$12467$1HvE18 '0)))) (g$do-define-record$12399$1HvE18 (case-lambda ((g$namespec$12447$1HvE18 g$clause*$12448$1HvE18) ((case-lambda ((g$foo$12449$1HvE18) ((case-lambda ((g$foo-rtd$12450$1HvE18) ((case-lambda ((g$foo-rcd$12451$1HvE18) ((case-lambda ((g$protocol$12452$1HvE18) ((case-lambda ((g$make-foo$12453$1HvE18) ((case-lambda ((g$fields$12454$1HvE18) ((case-lambda ((g$idx*$12455$1HvE18) ((case-lambda ((g$foo-x*$12456$1HvE18) ((case-lambda ((g$set-foo-x!*$12457$1HvE18) ((case-lambda ((g$set-foo-idx*$12458$1HvE18) ((case-lambda ((g$foo?$12459$1HvE18) ((case-lambda ((g$foo-rtd-code$12460$1HvE18) ((case-lambda ((g$foo-rcd-code$12461$1HvE18) ((case-lambda ((g$protocol-code$12462$1HvE18) ((case-lambda (() (g$bless$9557$1HvE18 (cons 'begin (cons (list 'define g$foo-rtd$12450$1HvE18 g$foo-rtd-code$12460$1HvE18) (cons (list 'define g$protocol$12452$1HvE18 g$protocol-code$12462$1HvE18) (cons (list 'define g$foo-rcd$12451$1HvE18 g$foo-rcd-code$12461$1HvE18) (cons (list 'define-syntax g$foo$12449$1HvE18 (list 'list ''$rtd (list 'syntax g$foo-rtd$12450$1HvE18) (list 'syntax g$foo-rcd$12451$1HvE18))) (cons (list 'define g$foo?$12459$1HvE18 (list 'record-predicate g$foo-rtd$12450$1HvE18)) (cons (list 'define g$make-foo$12453$1HvE18 (list 'record-constructor g$foo-rcd$12451$1HvE18)) (append (map (case-lambda ((g$foo-x$12463$1HvE18 g$idx$12464$1HvE18) (list 'define g$foo-x$12463$1HvE18 (list 'record-accessor g$foo-rtd$12450$1HvE18 g$idx$12464$1HvE18)))) g$foo-x*$12456$1HvE18 g$idx*$12455$1HvE18) (map (case-lambda ((g$set-foo-x!$12465$1HvE18 g$idx$12466$1HvE18) (list 'define g$set-foo-x!$12465$1HvE18 (list 'record-mutator g$foo-rtd$12450$1HvE18 g$idx$12466$1HvE18)))) g$set-foo-x!*$12457$1HvE18 g$set-foo-idx*$12458$1HvE18))))))))))))))) (g$get-protocol-code$12393$1HvE18 g$clause*$12448$1HvE18)))) (g$foo-rcd-code$12392$1HvE18 g$clause*$12448$1HvE18 g$foo-rtd$12450$1HvE18 g$protocol$12452$1HvE18)))) (g$foo-rtd-code$12391$1HvE18 g$foo$12449$1HvE18 g$clause*$12448$1HvE18)))) (g$get-record-predicate-name$12389$1HvE18 g$namespec$12447$1HvE18)))) (g$get-mutator-indices$12395$1HvE18 g$fields$12454$1HvE18)))) (g$get-mutators$12396$1HvE18 g$foo$12449$1HvE18 g$fields$12454$1HvE18)))) (g$get-accessors$12397$1HvE18 g$foo$12449$1HvE18 g$fields$12454$1HvE18)))) (g$enumerate$12398$1HvE18 g$fields$12454$1HvE18)))) (g$get-fields$12394$1HvE18 g$clause*$12448$1HvE18)))) (g$get-record-constructor-name$12388$1HvE18 g$namespec$12447$1HvE18)))) (gensym)))) (gensym)))) (gensym)))) (g$get-record-name$12387$1HvE18 g$namespec$12447$1HvE18))))) (g$verify-clauses$12400$1HvE18 (case-lambda ((g$x$12420$1HvE18 g$cls*$12421$1HvE18) (letrec* ((g$valid-kwds$12422$1HvE18 (map g$bless$9557$1HvE18 '(fields parent parent-rtd protocol sealed opaque nongenerative))) (g$free-id-member?$12423$1HvE18 (case-lambda ((g$x$12444$1HvE18 g$ls$12445$1HvE18) (if (pair? g$ls$12445$1HvE18) (begin '#f ((case-lambda ((g$t$12446$1HvE18) (if g$t$12446$1HvE18 g$t$12446$1HvE18 (begin '#f (g$free-id-member?$12423$1HvE18 g$x$12444$1HvE18 (cdr g$ls$12445$1HvE18)))))) (g$free-id=?$9316$1HvE18 g$x$12444$1HvE18 (car g$ls$12445$1HvE18)))) '#f))))) ((letrec ((g$f$12424$1HvE18 (case-lambda ((g$cls*$12425$1HvE18 g$seen*$12426$1HvE18) (if (null? g$cls*$12425$1HvE18) (void) ((case-lambda ((g$t$12427$1HvE18) ((case-lambda ((g$ls/false$12428$1HvE18) (if (if g$ls/false$12428$1HvE18 (begin '#f (apply (case-lambda ((g$kwd$12429$1HvE18 g$rest$12430$1HvE18) '#t)) g$ls/false$12428$1HvE18)) '#f) (apply (case-lambda ((g$kwd$12431$1HvE18 g$rest$12432$1HvE18) (if ((case-lambda ((g$t$12433$1HvE18) (if g$t$12433$1HvE18 g$t$12433$1HvE18 (begin '#f (not (g$free-id-member?$12423$1HvE18 g$kwd$12431$1HvE18 g$valid-kwds$12422$1HvE18)))))) (not (g$id?$9312$1HvE18 g$kwd$12431$1HvE18))) (g$syntax-violation$9695$1HvE18 '#f '"not a valid define-record-type keyword" g$kwd$12431$1HvE18) (if (g$bound-id-member?$9319$1HvE18 g$kwd$12431$1HvE18 g$seen*$12426$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"duplicate use of keyword " g$x$12420$1HvE18 g$kwd$12431$1HvE18) (g$f$12424$1HvE18 (cdr g$cls*$12425$1HvE18) (cons g$kwd$12431$1HvE18 g$seen*$12426$1HvE18)))))) g$ls/false$12428$1HvE18) ((case-lambda ((g$t$12434$1HvE18) ((case-lambda ((g$ls/false$12435$1HvE18) (if (if g$ls/false$12435$1HvE18 (begin '#f (apply (case-lambda ((g$cls$12436$1HvE18) '#t)) g$ls/false$12435$1HvE18)) '#f) (apply (case-lambda ((g$cls$12437$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"malformed define-record-type clause" g$cls$12437$1HvE18))) g$ls/false$12435$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12434$1HvE18)))) ((case-lambda ((g$x$12438$1HvE18) (list g$x$12438$1HvE18))) g$t$12434$1HvE18)))) g$t$12427$1HvE18)))) ((case-lambda ((g$x$12439$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12439$1HvE18) (begin '#f ((case-lambda ((g$q$12440$1HvE18) (if g$q$12440$1HvE18 (begin '#f ((case-lambda ((g$r$12441$1HvE18) (if g$r$12441$1HvE18 (begin '#f (append g$q$12440$1HvE18 g$r$12441$1HvE18)) '#f))) ((case-lambda ((g$x$12442$1HvE18) (list g$x$12442$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$12439$1HvE18)))) '#f))) ((case-lambda ((g$x$12443$1HvE18) (list g$x$12443$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12439$1HvE18)))) '#f))) g$t$12427$1HvE18)))) (car g$cls*$12425$1HvE18))))))) g$f$12424$1HvE18) g$cls*$12421$1HvE18 '())))))) ((case-lambda ((g$t$12401$1HvE18) ((case-lambda ((g$ls/false$12402$1HvE18) (if (if g$ls/false$12402$1HvE18 (begin '#f (apply (case-lambda ((g$namespec$12403$1HvE18 g$clause*$12404$1HvE18) '#t)) g$ls/false$12402$1HvE18)) '#f) (apply (case-lambda ((g$namespec$12405$1HvE18 g$clause*$12406$1HvE18) (begin (g$verify-clauses$12400$1HvE18 g$x$12385$1HvE18 g$clause*$12406$1HvE18) (g$do-define-record$12399$1HvE18 g$namespec$12405$1HvE18 g$clause*$12406$1HvE18)))) g$ls/false$12402$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12401$1HvE18)))) ((case-lambda ((g$x$12407$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12407$1HvE18) (begin '#f ((case-lambda ((g$q$12408$1HvE18) (if g$q$12408$1HvE18 (begin '#f ((case-lambda ((g$r$12409$1HvE18) (if g$r$12409$1HvE18 (begin '#f (append g$q$12408$1HvE18 g$r$12409$1HvE18)) '#f))) ((case-lambda ((g$x$12410$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12410$1HvE18) (begin '#f ((case-lambda ((g$q$12411$1HvE18) (if g$q$12411$1HvE18 (begin '#f ((case-lambda ((g$r$12412$1HvE18) (if g$r$12412$1HvE18 (begin '#f (append g$q$12411$1HvE18 g$r$12412$1HvE18)) '#f))) ((letrec ((g$f$12413$1HvE18 (case-lambda ((g$x$12414$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12414$1HvE18) ((case-lambda ((g$cars/f$12415$1HvE18) (if g$cars/f$12415$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12416$1HvE18) (if g$cdrs/f$12416$1HvE18 (begin '#f (map cons g$cars/f$12415$1HvE18 g$cdrs/f$12416$1HvE18)) '#f))) (g$f$12413$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12414$1HvE18)))) '#f))) ((case-lambda ((g$x$12417$1HvE18) (list g$x$12417$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12414$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12414$1HvE18) (list (begin 'clause* '())) '#f)))))) g$f$12413$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$12410$1HvE18)))) '#f))) ((case-lambda ((g$x$12418$1HvE18) (list g$x$12418$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12410$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12407$1HvE18)))) '#f))) ((case-lambda ((g$x$12419$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$12407$1HvE18)))) '#f))) g$t$12401$1HvE18)))) g$x$12385$1HvE18))))) (g$define-condition-type-macro$9586$1HvE18 g$define-condition-type-macro$15691$1HvE18 (case-lambda ((g$x$12954$1HvE18) (letrec* ((g$mkname$12955$1HvE18 (case-lambda ((g$name$13011$1HvE18 g$suffix$13012$1HvE18) (g$datum->syntax$9697$1HvE18 g$name$13011$1HvE18 (string->symbol (string-append (symbol->string (g$syntax->datum$9698$1HvE18 g$name$13011$1HvE18)) g$suffix$13012$1HvE18))))))) ((case-lambda ((g$t$12956$1HvE18) ((case-lambda ((g$ls/false$12957$1HvE18) (if (if g$ls/false$12957$1HvE18 (begin '#f (apply (case-lambda ((g$ctxt$12958$1HvE18 g$name$12959$1HvE18 g$super$12960$1HvE18 g$constructor$12961$1HvE18 g$predicate$12962$1HvE18 g$field*$12963$1HvE18 g$accessor*$12964$1HvE18) (if (g$id?$9312$1HvE18 g$name$12959$1HvE18) (if (g$id?$9312$1HvE18 g$super$12960$1HvE18) (if (g$id?$9312$1HvE18 g$constructor$12961$1HvE18) (if (g$id?$9312$1HvE18 g$predicate$12962$1HvE18) (if (g$for-all$7965$1HvE18 g$id?$9312$1HvE18 g$field*$12963$1HvE18) (begin '#f (g$for-all$7965$1HvE18 g$id?$9312$1HvE18 g$accessor*$12964$1HvE18)) '#f) '#f) '#f) '#f) '#f))) g$ls/false$12957$1HvE18)) '#f) (apply (case-lambda ((g$ctxt$12965$1HvE18 g$name$12966$1HvE18 g$super$12967$1HvE18 g$constructor$12968$1HvE18 g$predicate$12969$1HvE18 g$field*$12970$1HvE18 g$accessor*$12971$1HvE18) ((case-lambda ((g$aux-accessor*$12972$1HvE18) (g$bless$9557$1HvE18 (cons 'begin (cons (cons 'define-record-type (cons (list g$name$12966$1HvE18 g$constructor$12968$1HvE18 (gensym)) (cons (list 'parent g$super$12967$1HvE18) (cons (cons 'fields (map (case-lambda ((g$field$12973$1HvE18 g$aux$12974$1HvE18) (list 'immutable g$field$12973$1HvE18 g$aux$12974$1HvE18))) g$field*$12970$1HvE18 g$aux-accessor*$12972$1HvE18)) '((nongenerative) (sealed #f) (opaque #f)))))) (cons (list 'define g$predicate$12969$1HvE18 (list 'condition-predicate (list 'record-type-descriptor g$name$12966$1HvE18))) (map (case-lambda ((g$accessor$12975$1HvE18 g$aux$12976$1HvE18) (list 'define g$accessor$12975$1HvE18 (list 'condition-accessor (list 'record-type-descriptor g$name$12966$1HvE18) g$aux$12976$1HvE18)))) g$accessor*$12971$1HvE18 g$aux-accessor*$12972$1HvE18))))))) (map (case-lambda ((g$x$12977$1HvE18) (gensym))) g$accessor*$12971$1HvE18)))) g$ls/false$12957$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$12956$1HvE18)))) ((case-lambda ((g$x$12978$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12978$1HvE18) (begin '#f ((case-lambda ((g$q$12979$1HvE18) (if g$q$12979$1HvE18 (begin '#f ((case-lambda ((g$r$12980$1HvE18) (if g$r$12980$1HvE18 (begin '#f (append g$q$12979$1HvE18 g$r$12980$1HvE18)) '#f))) ((case-lambda ((g$x$12981$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12981$1HvE18) (begin '#f ((case-lambda ((g$q$12982$1HvE18) (if g$q$12982$1HvE18 (begin '#f ((case-lambda ((g$r$12983$1HvE18) (if g$r$12983$1HvE18 (begin '#f (append g$q$12982$1HvE18 g$r$12983$1HvE18)) '#f))) ((case-lambda ((g$x$12984$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12984$1HvE18) (begin '#f ((case-lambda ((g$q$12985$1HvE18) (if g$q$12985$1HvE18 (begin '#f ((case-lambda ((g$r$12986$1HvE18) (if g$r$12986$1HvE18 (begin '#f (append g$q$12985$1HvE18 g$r$12986$1HvE18)) '#f))) ((case-lambda ((g$x$12987$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12987$1HvE18) (begin '#f ((case-lambda ((g$q$12988$1HvE18) (if g$q$12988$1HvE18 (begin '#f ((case-lambda ((g$r$12989$1HvE18) (if g$r$12989$1HvE18 (begin '#f (append g$q$12988$1HvE18 g$r$12989$1HvE18)) '#f))) ((case-lambda ((g$x$12990$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12990$1HvE18) (begin '#f ((case-lambda ((g$q$12991$1HvE18) (if g$q$12991$1HvE18 (begin '#f ((case-lambda ((g$r$12992$1HvE18) (if g$r$12992$1HvE18 (begin '#f (append g$q$12991$1HvE18 g$r$12992$1HvE18)) '#f))) ((letrec ((g$f$12993$1HvE18 (case-lambda ((g$x$12994$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12994$1HvE18) ((case-lambda ((g$cars/f$12995$1HvE18) (if g$cars/f$12995$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$12996$1HvE18) (if g$cdrs/f$12996$1HvE18 (begin '#f (map cons g$cars/f$12995$1HvE18 g$cdrs/f$12996$1HvE18)) '#f))) (g$f$12993$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$12994$1HvE18)))) '#f))) ((case-lambda ((g$x$12997$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$12997$1HvE18) (begin '#f ((case-lambda ((g$q$12998$1HvE18) (if g$q$12998$1HvE18 (begin '#f ((case-lambda ((g$r$12999$1HvE18) (if g$r$12999$1HvE18 (begin '#f (append g$q$12998$1HvE18 g$r$12999$1HvE18)) '#f))) ((case-lambda ((g$x$13000$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13000$1HvE18) (begin '#f ((case-lambda ((g$q$13001$1HvE18) (if g$q$13001$1HvE18 (begin '#f ((case-lambda ((g$r$13002$1HvE18) (if g$r$13002$1HvE18 (begin '#f (append g$q$13001$1HvE18 g$r$13002$1HvE18)) '#f))) ((case-lambda ((g$x$13003$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13003$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13000$1HvE18)))) '#f))) ((case-lambda ((g$x$13004$1HvE18) (list g$x$13004$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13000$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12997$1HvE18)))) '#f))) ((case-lambda ((g$x$13005$1HvE18) (list g$x$13005$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12997$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$12994$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$12994$1HvE18) (list (begin 'field* '()) (begin 'accessor* '())) '#f)))))) g$f$12993$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$12990$1HvE18)))) '#f))) ((case-lambda ((g$x$13006$1HvE18) (list g$x$13006$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12990$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12987$1HvE18)))) '#f))) ((case-lambda ((g$x$13007$1HvE18) (list g$x$13007$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12987$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12984$1HvE18)))) '#f))) ((case-lambda ((g$x$13008$1HvE18) (list g$x$13008$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12984$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12981$1HvE18)))) '#f))) ((case-lambda ((g$x$13009$1HvE18) (list g$x$13009$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12981$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$12978$1HvE18)))) '#f))) ((case-lambda ((g$x$13010$1HvE18) (list g$x$13010$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$12978$1HvE18)))) '#f))) g$t$12956$1HvE18)))) g$x$12954$1HvE18))))) (g$incorrect-usage-macro$9587$1HvE18 g$incorrect-usage-macro$15692$1HvE18 (case-lambda ((g$e$13013$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"incorrect usage of auxiliary keyword" g$e$13013$1HvE18)))) (g$parameterize-transformer$9588$1HvE18 g$parameterize-transformer$15693$1HvE18 (case-lambda ((g$e$13014$1HvE18 g$r$13015$1HvE18 g$mr$13016$1HvE18) ((case-lambda ((g$t$13017$1HvE18) ((case-lambda ((g$ls/false$13018$1HvE18) (if (if g$ls/false$13018$1HvE18 (begin '#f (apply (case-lambda ((g$b$13019$1HvE18 g$b*$13020$1HvE18) '#t)) g$ls/false$13018$1HvE18)) '#f) (apply (case-lambda ((g$b$13021$1HvE18 g$b*$13022$1HvE18) (g$chi-internal$9618$1HvE18 (cons g$b$13021$1HvE18 g$b*$13022$1HvE18) g$r$13015$1HvE18 g$mr$13016$1HvE18))) g$ls/false$13018$1HvE18) ((case-lambda ((g$t$13023$1HvE18) ((case-lambda ((g$ls/false$13024$1HvE18) (if (if g$ls/false$13024$1HvE18 (begin '#f (apply (case-lambda ((g$olhs*$13025$1HvE18 g$orhs*$13026$1HvE18 g$b$13027$1HvE18 g$b*$13028$1HvE18) '#t)) g$ls/false$13024$1HvE18)) '#f) (apply (case-lambda ((g$olhs*$13029$1HvE18 g$orhs*$13030$1HvE18 g$b$13031$1HvE18 g$b*$13032$1HvE18) ((case-lambda ((g$lhs*$13033$1HvE18 g$rhs*$13034$1HvE18 g$t*$13035$1HvE18 g$swap$13036$1HvE18) (g$build-let$9245$1HvE18 '#f (append g$lhs*$13033$1HvE18 g$rhs*$13034$1HvE18) (append (g$chi-expr*$9605$1HvE18 g$olhs*$13029$1HvE18 g$r$13015$1HvE18 g$mr$13016$1HvE18) (g$chi-expr*$9605$1HvE18 g$orhs*$13030$1HvE18 g$r$13015$1HvE18 g$mr$13016$1HvE18)) (g$build-let$9245$1HvE18 '#f (list g$swap$13036$1HvE18) (list (g$build-lambda$9243$1HvE18 '#f '() (g$build-sequence$9246$1HvE18 '#f (map (case-lambda ((g$t$13037$1HvE18 g$lhs$13038$1HvE18 g$rhs$13039$1HvE18) (g$build-let$9245$1HvE18 '#f (list g$t$13037$1HvE18) (list (list g$lhs$13038$1HvE18)) (g$build-sequence$9246$1HvE18 '#f (list (list g$lhs$13038$1HvE18 g$rhs$13039$1HvE18) (list 'set! g$rhs$13039$1HvE18 g$t$13037$1HvE18)))))) g$t*$13035$1HvE18 g$lhs*$13033$1HvE18 g$rhs*$13034$1HvE18)))) (list '(primitive dynamic-wind) g$swap$13036$1HvE18 (g$build-lambda$9243$1HvE18 '#f '() (g$chi-internal$9618$1HvE18 (cons g$b$13031$1HvE18 g$b*$13032$1HvE18) g$r$13015$1HvE18 g$mr$13016$1HvE18)) g$swap$13036$1HvE18))))) (map (case-lambda ((g$x$13040$1HvE18) (g$gen-lexical$9256$1HvE18 'lhs))) g$olhs*$13029$1HvE18) (map (case-lambda ((g$x$13041$1HvE18) (g$gen-lexical$9256$1HvE18 'rhs))) g$olhs*$13029$1HvE18) (map (case-lambda ((g$x$13042$1HvE18) (g$gen-lexical$9256$1HvE18 't))) g$olhs*$13029$1HvE18) (g$gen-lexical$9256$1HvE18 'swap)))) g$ls/false$13024$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13023$1HvE18)))) ((case-lambda ((g$x$13043$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13043$1HvE18) (begin '#f ((case-lambda ((g$q$13044$1HvE18) (if g$q$13044$1HvE18 (begin '#f ((case-lambda ((g$r$13045$1HvE18) (if g$r$13045$1HvE18 (begin '#f (append g$q$13044$1HvE18 g$r$13045$1HvE18)) '#f))) ((case-lambda ((g$x$13046$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13046$1HvE18) (begin '#f ((case-lambda ((g$q$13047$1HvE18) (if g$q$13047$1HvE18 (begin '#f ((case-lambda ((g$r$13048$1HvE18) (if g$r$13048$1HvE18 (begin '#f (append g$q$13047$1HvE18 g$r$13048$1HvE18)) '#f))) ((case-lambda ((g$x$13049$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13049$1HvE18) (begin '#f ((case-lambda ((g$q$13050$1HvE18) (if g$q$13050$1HvE18 (begin '#f ((case-lambda ((g$r$13051$1HvE18) (if g$r$13051$1HvE18 (begin '#f (append g$q$13050$1HvE18 g$r$13051$1HvE18)) '#f))) ((letrec ((g$f$13052$1HvE18 (case-lambda ((g$x$13053$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13053$1HvE18) ((case-lambda ((g$cars/f$13054$1HvE18) (if g$cars/f$13054$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13055$1HvE18) (if g$cdrs/f$13055$1HvE18 (begin '#f (map cons g$cars/f$13054$1HvE18 g$cdrs/f$13055$1HvE18)) '#f))) (g$f$13052$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13053$1HvE18)))) '#f))) ((case-lambda ((g$x$13056$1HvE18) (list g$x$13056$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13053$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13053$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$13052$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$13049$1HvE18)))) '#f))) ((case-lambda ((g$x$13057$1HvE18) (list g$x$13057$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13049$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13046$1HvE18)))) '#f))) ((letrec ((g$f$13058$1HvE18 (case-lambda ((g$x$13059$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13059$1HvE18) ((case-lambda ((g$cars/f$13060$1HvE18) (if g$cars/f$13060$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13061$1HvE18) (if g$cdrs/f$13061$1HvE18 (begin '#f (map cons g$cars/f$13060$1HvE18 g$cdrs/f$13061$1HvE18)) '#f))) (g$f$13058$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13059$1HvE18)))) '#f))) ((case-lambda ((g$x$13062$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13062$1HvE18) (begin '#f ((case-lambda ((g$q$13063$1HvE18) (if g$q$13063$1HvE18 (begin '#f ((case-lambda ((g$r$13064$1HvE18) (if g$r$13064$1HvE18 (begin '#f (append g$q$13063$1HvE18 g$r$13064$1HvE18)) '#f))) ((case-lambda ((g$x$13065$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13065$1HvE18) (begin '#f ((case-lambda ((g$q$13066$1HvE18) (if g$q$13066$1HvE18 (begin '#f ((case-lambda ((g$r$13067$1HvE18) (if g$r$13067$1HvE18 (begin '#f (append g$q$13066$1HvE18 g$r$13067$1HvE18)) '#f))) ((case-lambda ((g$x$13068$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13068$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13065$1HvE18)))) '#f))) ((case-lambda ((g$x$13069$1HvE18) (list g$x$13069$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13065$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13062$1HvE18)))) '#f))) ((case-lambda ((g$x$13070$1HvE18) (list g$x$13070$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13062$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$13059$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13059$1HvE18) (list (begin 'olhs* '()) (begin 'orhs* '())) '#f)))))) g$f$13058$1HvE18) (g$syntax-car$9309$1HvE18 g$x$13046$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13043$1HvE18)))) '#f))) ((case-lambda ((g$x$13071$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$13043$1HvE18)))) '#f))) g$t$13023$1HvE18)))) g$t$13017$1HvE18)))) ((case-lambda ((g$x$13072$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13072$1HvE18) (begin '#f ((case-lambda ((g$q$13073$1HvE18) (if g$q$13073$1HvE18 (begin '#f ((case-lambda ((g$r$13074$1HvE18) (if g$r$13074$1HvE18 (begin '#f (append g$q$13073$1HvE18 g$r$13074$1HvE18)) '#f))) ((case-lambda ((g$x$13075$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13075$1HvE18) (begin '#f ((case-lambda ((g$q$13076$1HvE18) (if g$q$13076$1HvE18 (begin '#f ((case-lambda ((g$r$13077$1HvE18) (if g$r$13077$1HvE18 (begin '#f (append g$q$13076$1HvE18 g$r$13077$1HvE18)) '#f))) ((case-lambda ((g$x$13078$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13078$1HvE18) (begin '#f ((case-lambda ((g$q$13079$1HvE18) (if g$q$13079$1HvE18 (begin '#f ((case-lambda ((g$r$13080$1HvE18) (if g$r$13080$1HvE18 (begin '#f (append g$q$13079$1HvE18 g$r$13080$1HvE18)) '#f))) ((letrec ((g$f$13081$1HvE18 (case-lambda ((g$x$13082$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13082$1HvE18) ((case-lambda ((g$cars/f$13083$1HvE18) (if g$cars/f$13083$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13084$1HvE18) (if g$cdrs/f$13084$1HvE18 (begin '#f (map cons g$cars/f$13083$1HvE18 g$cdrs/f$13084$1HvE18)) '#f))) (g$f$13081$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13082$1HvE18)))) '#f))) ((case-lambda ((g$x$13085$1HvE18) (list g$x$13085$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13082$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13082$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$13081$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$13078$1HvE18)))) '#f))) ((case-lambda ((g$x$13086$1HvE18) (list g$x$13086$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13078$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13075$1HvE18)))) '#f))) ((case-lambda ((g$x$13087$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13087$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-car$9309$1HvE18 g$x$13075$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13072$1HvE18)))) '#f))) ((case-lambda ((g$x$13088$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$13072$1HvE18)))) '#f))) g$t$13017$1HvE18)))) g$e$13014$1HvE18)))) (g$foreign-call-transformer$9589$1HvE18 g$foreign-call-transformer$15694$1HvE18 (case-lambda ((g$e$13089$1HvE18 g$r$13090$1HvE18 g$mr$13091$1HvE18) ((case-lambda ((g$t$13092$1HvE18) ((case-lambda ((g$ls/false$13093$1HvE18) (if (if g$ls/false$13093$1HvE18 (begin '#f (apply (case-lambda ((g$name$13094$1HvE18 g$arg*$13095$1HvE18) '#t)) g$ls/false$13093$1HvE18)) '#f) (apply (case-lambda ((g$name$13096$1HvE18 g$arg*$13097$1HvE18) (cons 'foreign-call (cons (g$chi-expr$9607$1HvE18 g$name$13096$1HvE18 g$r$13090$1HvE18 g$mr$13091$1HvE18) (g$chi-expr*$9605$1HvE18 g$arg*$13097$1HvE18 g$r$13090$1HvE18 g$mr$13091$1HvE18))))) g$ls/false$13093$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13092$1HvE18)))) ((case-lambda ((g$x$13098$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13098$1HvE18) (begin '#f ((case-lambda ((g$q$13099$1HvE18) (if g$q$13099$1HvE18 (begin '#f ((case-lambda ((g$r$13100$1HvE18) (if g$r$13100$1HvE18 (begin '#f (append g$q$13099$1HvE18 g$r$13100$1HvE18)) '#f))) ((case-lambda ((g$x$13101$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13101$1HvE18) (begin '#f ((case-lambda ((g$q$13102$1HvE18) (if g$q$13102$1HvE18 (begin '#f ((case-lambda ((g$r$13103$1HvE18) (if g$r$13103$1HvE18 (begin '#f (append g$q$13102$1HvE18 g$r$13103$1HvE18)) '#f))) ((letrec ((g$f$13104$1HvE18 (case-lambda ((g$x$13105$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13105$1HvE18) ((case-lambda ((g$cars/f$13106$1HvE18) (if g$cars/f$13106$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13107$1HvE18) (if g$cdrs/f$13107$1HvE18 (begin '#f (map cons g$cars/f$13106$1HvE18 g$cdrs/f$13107$1HvE18)) '#f))) (g$f$13104$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13105$1HvE18)))) '#f))) ((case-lambda ((g$x$13108$1HvE18) (list g$x$13108$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13105$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13105$1HvE18) (list (begin 'arg* '())) '#f)))))) g$f$13104$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$13101$1HvE18)))) '#f))) ((case-lambda ((g$x$13109$1HvE18) (list g$x$13109$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13101$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13098$1HvE18)))) '#f))) ((case-lambda ((g$x$13110$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$13098$1HvE18)))) '#f))) g$t$13092$1HvE18)))) g$e$13089$1HvE18)))) (g$convert-pattern$9590$1HvE18 g$convert-pattern$15695$1HvE18 (case-lambda ((g$pattern$13111$1HvE18 g$keys$13112$1HvE18) (letrec* ((g$cvt*$13113$1HvE18 (case-lambda ((g$p*$13236$1HvE18 g$n$13237$1HvE18 g$ids$13238$1HvE18) (if (null? g$p*$13236$1HvE18) (values '() g$ids$13238$1HvE18) (call-with-values (case-lambda (() (g$cvt*$13113$1HvE18 (cdr g$p*$13236$1HvE18) g$n$13237$1HvE18 g$ids$13238$1HvE18))) (case-lambda ((g$y$13241$1HvE18 g$ids$13242$1HvE18) ((case-lambda ((g$ids$13243$1HvE18 g$y$13244$1HvE18) (call-with-values (case-lambda (() (g$cvt$13114$1HvE18 (car g$p*$13236$1HvE18) g$n$13237$1HvE18 g$ids$13243$1HvE18))) (case-lambda ((g$x$13247$1HvE18 g$ids$13248$1HvE18) ((case-lambda ((g$ids$13249$1HvE18 g$x$13250$1HvE18) (values (cons g$x$13250$1HvE18 g$y$13244$1HvE18) g$ids$13249$1HvE18))) g$ids$13248$1HvE18 g$x$13247$1HvE18)))))) g$ids$13242$1HvE18 g$y$13241$1HvE18)))))))) (g$cvt$13114$1HvE18 (case-lambda ((g$p$13115$1HvE18 g$n$13116$1HvE18 g$ids$13117$1HvE18) ((case-lambda ((g$t$13118$1HvE18) ((case-lambda ((g$ls/false$13119$1HvE18) (if (if g$ls/false$13119$1HvE18 (begin '#f (apply (case-lambda ((g$id$13120$1HvE18) (g$id?$9312$1HvE18 g$id$13120$1HvE18))) g$ls/false$13119$1HvE18)) '#f) (apply (case-lambda ((g$id$13121$1HvE18) (if (g$bound-id-member?$9319$1HvE18 g$p$13115$1HvE18 g$keys$13112$1HvE18) (values (vector 'free-id g$p$13115$1HvE18) g$ids$13117$1HvE18) (if (g$free-id=?$9316$1HvE18 g$p$13115$1HvE18 (g$scheme-stx$9537$1HvE18 '_)) (values '_ g$ids$13117$1HvE18) (values 'any (cons (cons g$p$13115$1HvE18 g$n$13116$1HvE18) g$ids$13117$1HvE18)))))) g$ls/false$13119$1HvE18) ((case-lambda ((g$t$13122$1HvE18) ((case-lambda ((g$ls/false$13123$1HvE18) (if (if g$ls/false$13123$1HvE18 (begin '#f (apply (case-lambda ((g$p$13124$1HvE18 g$dots$13125$1HvE18) (g$ellipsis?$9592$1HvE18 g$dots$13125$1HvE18))) g$ls/false$13123$1HvE18)) '#f) (apply (case-lambda ((g$p$13126$1HvE18 g$dots$13127$1HvE18) (call-with-values (case-lambda (() (g$cvt$13114$1HvE18 g$p$13126$1HvE18 (+ g$n$13116$1HvE18 '1) g$ids$13117$1HvE18))) (case-lambda ((g$p$13130$1HvE18 g$ids$13131$1HvE18) ((case-lambda ((g$ids$13132$1HvE18 g$p$13133$1HvE18) (values (if (eq? g$p$13133$1HvE18 'any) 'each-any (vector 'each g$p$13133$1HvE18)) g$ids$13132$1HvE18))) g$ids$13131$1HvE18 g$p$13130$1HvE18)))))) g$ls/false$13123$1HvE18) ((case-lambda ((g$t$13134$1HvE18) ((case-lambda ((g$ls/false$13135$1HvE18) (if (if g$ls/false$13135$1HvE18 (begin '#f (apply (case-lambda ((g$x$13136$1HvE18 g$dots$13137$1HvE18 g$ys$13138$1HvE18 g$z$13139$1HvE18) (g$ellipsis?$9592$1HvE18 g$dots$13137$1HvE18))) g$ls/false$13135$1HvE18)) '#f) (apply (case-lambda ((g$x$13140$1HvE18 g$dots$13141$1HvE18 g$ys$13142$1HvE18 g$z$13143$1HvE18) (call-with-values (case-lambda (() (g$cvt$13114$1HvE18 g$z$13143$1HvE18 g$n$13116$1HvE18 g$ids$13117$1HvE18))) (case-lambda ((g$z$13146$1HvE18 g$ids$13147$1HvE18) ((case-lambda ((g$ids$13148$1HvE18 g$z$13149$1HvE18) (call-with-values (case-lambda (() (g$cvt*$13113$1HvE18 g$ys$13142$1HvE18 g$n$13116$1HvE18 g$ids$13148$1HvE18))) (case-lambda ((g$ys$13152$1HvE18 g$ids$13153$1HvE18) ((case-lambda ((g$ids$13154$1HvE18 g$ys$13155$1HvE18) (call-with-values (case-lambda (() (g$cvt$13114$1HvE18 g$x$13140$1HvE18 (+ g$n$13116$1HvE18 '1) g$ids$13154$1HvE18))) (case-lambda ((g$x$13158$1HvE18 g$ids$13159$1HvE18) ((case-lambda ((g$ids$13160$1HvE18 g$x$13161$1HvE18) (values (vector 'each+ g$x$13161$1HvE18 (reverse g$ys$13155$1HvE18) g$z$13149$1HvE18) g$ids$13160$1HvE18))) g$ids$13159$1HvE18 g$x$13158$1HvE18)))))) g$ids$13153$1HvE18 g$ys$13152$1HvE18)))))) g$ids$13147$1HvE18 g$z$13146$1HvE18)))))) g$ls/false$13135$1HvE18) ((case-lambda ((g$t$13162$1HvE18) ((case-lambda ((g$ls/false$13163$1HvE18) (if (if g$ls/false$13163$1HvE18 (begin '#f (apply (case-lambda ((g$x$13164$1HvE18 g$y$13165$1HvE18) '#t)) g$ls/false$13163$1HvE18)) '#f) (apply (case-lambda ((g$x$13166$1HvE18 g$y$13167$1HvE18) (call-with-values (case-lambda (() (g$cvt$13114$1HvE18 g$y$13167$1HvE18 g$n$13116$1HvE18 g$ids$13117$1HvE18))) (case-lambda ((g$y$13170$1HvE18 g$ids$13171$1HvE18) ((case-lambda ((g$ids$13172$1HvE18 g$y$13173$1HvE18) (call-with-values (case-lambda (() (g$cvt$13114$1HvE18 g$x$13166$1HvE18 g$n$13116$1HvE18 g$ids$13172$1HvE18))) (case-lambda ((g$x$13176$1HvE18 g$ids$13177$1HvE18) ((case-lambda ((g$ids$13178$1HvE18 g$x$13179$1HvE18) (values (cons g$x$13179$1HvE18 g$y$13173$1HvE18) g$ids$13178$1HvE18))) g$ids$13177$1HvE18 g$x$13176$1HvE18)))))) g$ids$13171$1HvE18 g$y$13170$1HvE18)))))) g$ls/false$13163$1HvE18) ((case-lambda ((g$t$13180$1HvE18) ((case-lambda ((g$ls/false$13181$1HvE18) (if (if g$ls/false$13181$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$13181$1HvE18)) '#f) (apply (case-lambda (() (values '() g$ids$13117$1HvE18))) g$ls/false$13181$1HvE18) ((case-lambda ((g$t$13182$1HvE18) ((case-lambda ((g$ls/false$13183$1HvE18) (if (if g$ls/false$13183$1HvE18 (begin '#f (apply (case-lambda ((g$p$13184$1HvE18) (not (g$stx?$9284$1HvE18 g$p$13184$1HvE18)))) g$ls/false$13183$1HvE18)) '#f) (apply (case-lambda ((g$p$13185$1HvE18) (call-with-values (case-lambda (() (g$cvt$13114$1HvE18 g$p$13185$1HvE18 g$n$13116$1HvE18 g$ids$13117$1HvE18))) (case-lambda ((g$p$13188$1HvE18 g$ids$13189$1HvE18) ((case-lambda ((g$ids$13190$1HvE18 g$p$13191$1HvE18) (values (vector 'vector g$p$13191$1HvE18) g$ids$13190$1HvE18))) g$ids$13189$1HvE18 g$p$13188$1HvE18)))))) g$ls/false$13183$1HvE18) ((case-lambda ((g$t$13192$1HvE18) ((case-lambda ((g$ls/false$13193$1HvE18) (if (if g$ls/false$13193$1HvE18 (begin '#f (apply (case-lambda ((g$datum$13194$1HvE18) '#t)) g$ls/false$13193$1HvE18)) '#f) (apply (case-lambda ((g$datum$13195$1HvE18) (values (vector 'atom (g$stx->datum$9323$1HvE18 g$datum$13195$1HvE18)) g$ids$13117$1HvE18))) g$ls/false$13193$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13192$1HvE18)))) ((case-lambda ((g$x$13196$1HvE18) (list g$x$13196$1HvE18))) g$t$13192$1HvE18)))) g$t$13182$1HvE18)))) ((case-lambda ((g$x$13197$1HvE18) (if (g$syntax-vector?$9306$1HvE18 g$x$13197$1HvE18) (begin '#f ((letrec ((g$f$13198$1HvE18 (case-lambda ((g$x$13199$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13199$1HvE18) ((case-lambda ((g$cars/f$13200$1HvE18) (if g$cars/f$13200$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13201$1HvE18) (if g$cdrs/f$13201$1HvE18 (begin '#f (map cons g$cars/f$13200$1HvE18 g$cdrs/f$13201$1HvE18)) '#f))) (g$f$13198$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13199$1HvE18)))) '#f))) ((case-lambda ((g$x$13202$1HvE18) (list g$x$13202$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13199$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13199$1HvE18) (list (begin 'p '())) '#f)))))) g$f$13198$1HvE18) (g$syntax-vector->list$9304$1HvE18 g$x$13197$1HvE18))) '#f))) g$t$13182$1HvE18)))) g$t$13180$1HvE18)))) ((case-lambda ((g$x$13203$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13203$1HvE18) '()) (begin '#f '()) '#f))) g$t$13180$1HvE18)))) g$t$13162$1HvE18)))) ((case-lambda ((g$x$13204$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13204$1HvE18) (begin '#f ((case-lambda ((g$q$13205$1HvE18) (if g$q$13205$1HvE18 (begin '#f ((case-lambda ((g$r$13206$1HvE18) (if g$r$13206$1HvE18 (begin '#f (append g$q$13205$1HvE18 g$r$13206$1HvE18)) '#f))) ((case-lambda ((g$x$13207$1HvE18) (list g$x$13207$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$13204$1HvE18)))) '#f))) ((case-lambda ((g$x$13208$1HvE18) (list g$x$13208$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13204$1HvE18)))) '#f))) g$t$13162$1HvE18)))) g$t$13134$1HvE18)))) ((case-lambda ((g$x$13209$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13209$1HvE18) (begin '#f ((case-lambda ((g$q$13210$1HvE18) (if g$q$13210$1HvE18 (begin '#f ((case-lambda ((g$r$13211$1HvE18) (if g$r$13211$1HvE18 (begin '#f (append g$q$13210$1HvE18 g$r$13211$1HvE18)) '#f))) ((case-lambda ((g$x$13212$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13212$1HvE18) (begin '#f ((case-lambda ((g$q$13213$1HvE18) (if g$q$13213$1HvE18 (begin '#f ((case-lambda ((g$r$13214$1HvE18) (if g$r$13214$1HvE18 (begin '#f (append g$q$13213$1HvE18 g$r$13214$1HvE18)) '#f))) ((letrec ((g$f$13215$1HvE18 (case-lambda ((g$x$13218$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13218$1HvE18) ((case-lambda ((g$cars/f$13219$1HvE18) (if g$cars/f$13219$1HvE18 (begin '#f ((case-lambda ((g$d/f$13220$1HvE18) (if g$d/f$13220$1HvE18 (begin '#f (cons (map cons g$cars/f$13219$1HvE18 (car g$d/f$13220$1HvE18)) (cdr g$d/f$13220$1HvE18))) '#f))) (g$f$13215$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13218$1HvE18)))) '#f))) ((case-lambda ((g$x$13221$1HvE18) (list g$x$13221$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13218$1HvE18))) ((case-lambda ((g$d$13222$1HvE18) (if g$d$13222$1HvE18 (begin '#f (cons (list (begin 'ys '())) g$d$13222$1HvE18)) '#f))) ((case-lambda ((g$x$13223$1HvE18) (list g$x$13223$1HvE18))) g$x$13218$1HvE18))))))) (case-lambda ((g$x$13216$1HvE18) ((case-lambda ((g$x$13217$1HvE18) (if g$x$13217$1HvE18 (begin '#f (append (car g$x$13217$1HvE18) (cdr g$x$13217$1HvE18))) '#f))) (g$f$13215$1HvE18 g$x$13216$1HvE18))))) (g$syntax-cdr$9310$1HvE18 g$x$13212$1HvE18)))) '#f))) ((case-lambda ((g$x$13224$1HvE18) (list g$x$13224$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13212$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13209$1HvE18)))) '#f))) ((case-lambda ((g$x$13225$1HvE18) (list g$x$13225$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13209$1HvE18)))) '#f))) g$t$13134$1HvE18)))) g$t$13122$1HvE18)))) ((case-lambda ((g$x$13226$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13226$1HvE18) (begin '#f ((case-lambda ((g$q$13227$1HvE18) (if g$q$13227$1HvE18 (begin '#f ((case-lambda ((g$r$13228$1HvE18) (if g$r$13228$1HvE18 (begin '#f (append g$q$13227$1HvE18 g$r$13228$1HvE18)) '#f))) ((case-lambda ((g$x$13229$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13229$1HvE18) (begin '#f ((case-lambda ((g$q$13230$1HvE18) (if g$q$13230$1HvE18 (begin '#f ((case-lambda ((g$r$13231$1HvE18) (if g$r$13231$1HvE18 (begin '#f (append g$q$13230$1HvE18 g$r$13231$1HvE18)) '#f))) ((case-lambda ((g$x$13232$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13232$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13229$1HvE18)))) '#f))) ((case-lambda ((g$x$13233$1HvE18) (list g$x$13233$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13229$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13226$1HvE18)))) '#f))) ((case-lambda ((g$x$13234$1HvE18) (list g$x$13234$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13226$1HvE18)))) '#f))) g$t$13122$1HvE18)))) g$t$13118$1HvE18)))) ((case-lambda ((g$x$13235$1HvE18) (list g$x$13235$1HvE18))) g$t$13118$1HvE18)))) g$p$13115$1HvE18))))) (g$cvt$13114$1HvE18 g$pattern$13111$1HvE18 '0 '()))))) (g$syntax-dispatch$9591$1HvE18 g$syntax-dispatch$15696$1HvE18 (case-lambda ((g$e$13251$1HvE18 g$p$13252$1HvE18) (letrec* ((g$stx^$13253$1HvE18 (case-lambda ((g$e$13361$1HvE18 g$m*$13362$1HvE18 g$s*$13363$1HvE18 g$ae*$13364$1HvE18) (if (if (null? g$m*$13362$1HvE18) (begin '#f (null? g$s*$13363$1HvE18)) '#f) g$e$13361$1HvE18 (g$mkstx$9300$1HvE18 g$e$13361$1HvE18 g$m*$13362$1HvE18 g$s*$13363$1HvE18 g$ae*$13364$1HvE18))))) (g$match-each$13254$1HvE18 (case-lambda ((g$e$13345$1HvE18 g$p$13346$1HvE18 g$m*$13347$1HvE18 g$s*$13348$1HvE18 g$ae*$13349$1HvE18) (if (pair? g$e$13345$1HvE18) ((case-lambda ((g$first$13350$1HvE18) (if g$first$13350$1HvE18 (begin '#f ((case-lambda ((g$rest$13351$1HvE18) (if g$rest$13351$1HvE18 (begin '#f (cons g$first$13350$1HvE18 g$rest$13351$1HvE18)) '#f))) (g$match-each$13254$1HvE18 (cdr g$e$13345$1HvE18) g$p$13346$1HvE18 g$m*$13347$1HvE18 g$s*$13348$1HvE18 g$ae*$13349$1HvE18))) '#f))) (g$match$13260$1HvE18 (car g$e$13345$1HvE18) g$p$13346$1HvE18 g$m*$13347$1HvE18 g$s*$13348$1HvE18 g$ae*$13349$1HvE18 '())) (if (null? g$e$13345$1HvE18) '() (if (g$stx?$9284$1HvE18 g$e$13345$1HvE18) (call-with-values (case-lambda (() (g$join-wraps$9299$1HvE18 g$m*$13347$1HvE18 g$s*$13348$1HvE18 g$ae*$13349$1HvE18 g$e$13345$1HvE18))) (case-lambda ((g$m*$13355$1HvE18 g$s*$13356$1HvE18 g$ae*$13357$1HvE18) ((case-lambda ((g$ae*$13358$1HvE18 g$s*$13359$1HvE18 g$m*$13360$1HvE18) (g$match-each$13254$1HvE18 (g$stx-expr$9286$1HvE18 g$e$13345$1HvE18) g$p$13346$1HvE18 g$m*$13360$1HvE18 g$s*$13359$1HvE18 g$ae*$13358$1HvE18))) g$ae*$13357$1HvE18 g$s*$13356$1HvE18 g$m*$13355$1HvE18)))) (if (annotation? g$e$13345$1HvE18) (g$match-each$13254$1HvE18 (annotation-expression g$e$13345$1HvE18) g$p$13346$1HvE18 g$m*$13347$1HvE18 g$s*$13348$1HvE18 g$ae*$13349$1HvE18) '#f))))))) (g$match-each+$13255$1HvE18 (case-lambda ((g$e$13313$1HvE18 g$x-pat$13314$1HvE18 g$y-pat$13315$1HvE18 g$z-pat$13316$1HvE18 g$m*$13317$1HvE18 g$s*$13318$1HvE18 g$ae*$13319$1HvE18 g$r$13320$1HvE18) ((letrec ((g$f$13321$1HvE18 (case-lambda ((g$e$13322$1HvE18 g$m*$13323$1HvE18 g$s*$13324$1HvE18 g$ae*$13325$1HvE18) (if (pair? g$e$13322$1HvE18) (call-with-values (case-lambda (() (g$f$13321$1HvE18 (cdr g$e$13322$1HvE18) g$m*$13323$1HvE18 g$s*$13324$1HvE18 g$ae*$13325$1HvE18))) (case-lambda ((g$xr*$13329$1HvE18 g$y-pat$13330$1HvE18 g$r$13331$1HvE18) ((case-lambda ((g$r$13332$1HvE18 g$y-pat$13333$1HvE18 g$xr*$13334$1HvE18) (if g$r$13332$1HvE18 (if (null? g$y-pat$13333$1HvE18) ((case-lambda ((g$xr$13335$1HvE18) (if g$xr$13335$1HvE18 (values (cons g$xr$13335$1HvE18 g$xr*$13334$1HvE18) g$y-pat$13333$1HvE18 g$r$13332$1HvE18) (values '#f '#f '#f)))) (g$match$13260$1HvE18 (car g$e$13322$1HvE18) g$x-pat$13314$1HvE18 g$m*$13323$1HvE18 g$s*$13324$1HvE18 g$ae*$13325$1HvE18 '())) (values '() (cdr g$y-pat$13333$1HvE18) (g$match$13260$1HvE18 (car g$e$13322$1HvE18) (car g$y-pat$13333$1HvE18) g$m*$13323$1HvE18 g$s*$13324$1HvE18 g$ae*$13325$1HvE18 g$r$13332$1HvE18))) (values '#f '#f '#f)))) g$r$13331$1HvE18 g$y-pat$13330$1HvE18 g$xr*$13329$1HvE18)))) (if (g$stx?$9284$1HvE18 g$e$13322$1HvE18) (call-with-values (case-lambda (() (g$join-wraps$9299$1HvE18 g$m*$13323$1HvE18 g$s*$13324$1HvE18 g$ae*$13325$1HvE18 g$e$13322$1HvE18))) (case-lambda ((g$m*$13339$1HvE18 g$s*$13340$1HvE18 g$ae*$13341$1HvE18) ((case-lambda ((g$ae*$13342$1HvE18 g$s*$13343$1HvE18 g$m*$13344$1HvE18) (g$f$13321$1HvE18 (g$stx-expr$9286$1HvE18 g$e$13322$1HvE18) g$m*$13344$1HvE18 g$s*$13343$1HvE18 g$ae*$13342$1HvE18))) g$ae*$13341$1HvE18 g$s*$13340$1HvE18 g$m*$13339$1HvE18)))) (if (annotation? g$e$13322$1HvE18) (g$f$13321$1HvE18 (annotation-expression g$e$13322$1HvE18) g$m*$13323$1HvE18 g$s*$13324$1HvE18 g$ae*$13325$1HvE18) (values '() g$y-pat$13315$1HvE18 (g$match$13260$1HvE18 g$e$13322$1HvE18 g$z-pat$13316$1HvE18 g$m*$13323$1HvE18 g$s*$13324$1HvE18 g$ae*$13325$1HvE18 g$r$13320$1HvE18))))))))) g$f$13321$1HvE18) g$e$13313$1HvE18 g$m*$13317$1HvE18 g$s*$13318$1HvE18 g$ae*$13319$1HvE18)))) (g$match-each-any$13256$1HvE18 (case-lambda ((g$e$13299$1HvE18 g$m*$13300$1HvE18 g$s*$13301$1HvE18 g$ae*$13302$1HvE18) (if (pair? g$e$13299$1HvE18) ((case-lambda ((g$l$13303$1HvE18) (if g$l$13303$1HvE18 (begin '#f (cons (g$stx^$13253$1HvE18 (car g$e$13299$1HvE18) g$m*$13300$1HvE18 g$s*$13301$1HvE18 g$ae*$13302$1HvE18) g$l$13303$1HvE18)) '#f))) (g$match-each-any$13256$1HvE18 (cdr g$e$13299$1HvE18) g$m*$13300$1HvE18 g$s*$13301$1HvE18 g$ae*$13302$1HvE18)) (if (null? g$e$13299$1HvE18) '() (if (g$stx?$9284$1HvE18 g$e$13299$1HvE18) (call-with-values (case-lambda (() (g$join-wraps$9299$1HvE18 g$m*$13300$1HvE18 g$s*$13301$1HvE18 g$ae*$13302$1HvE18 g$e$13299$1HvE18))) (case-lambda ((g$m*$13307$1HvE18 g$s*$13308$1HvE18 g$ae*$13309$1HvE18) ((case-lambda ((g$ae*$13310$1HvE18 g$s*$13311$1HvE18 g$m*$13312$1HvE18) (g$match-each-any$13256$1HvE18 (g$stx-expr$9286$1HvE18 g$e$13299$1HvE18) g$m*$13312$1HvE18 g$s*$13311$1HvE18 g$ae*$13310$1HvE18))) g$ae*$13309$1HvE18 g$s*$13308$1HvE18 g$m*$13307$1HvE18)))) (if (annotation? g$e$13299$1HvE18) (g$match-each-any$13256$1HvE18 (annotation-expression g$e$13299$1HvE18) g$m*$13300$1HvE18 g$s*$13301$1HvE18 g$ae*$13302$1HvE18) '#f))))))) (g$match-empty$13257$1HvE18 (case-lambda ((g$p$13296$1HvE18 g$r$13297$1HvE18) (if (null? g$p$13296$1HvE18) g$r$13297$1HvE18 (if (eq? g$p$13296$1HvE18 '_) g$r$13297$1HvE18 (if (eq? g$p$13296$1HvE18 'any) (cons '() g$r$13297$1HvE18) (if (pair? g$p$13296$1HvE18) (g$match-empty$13257$1HvE18 (car g$p$13296$1HvE18) (g$match-empty$13257$1HvE18 (cdr g$p$13296$1HvE18) g$r$13297$1HvE18)) (if (eq? g$p$13296$1HvE18 'each-any) (cons '() g$r$13297$1HvE18) ((case-lambda ((g$t$13298$1HvE18) (if (memv g$t$13298$1HvE18 '(each)) (g$match-empty$13257$1HvE18 (vector-ref g$p$13296$1HvE18 '1) g$r$13297$1HvE18) (if (memv g$t$13298$1HvE18 '(each+)) (g$match-empty$13257$1HvE18 (vector-ref g$p$13296$1HvE18 '1) (g$match-empty$13257$1HvE18 (reverse (vector-ref g$p$13296$1HvE18 '2)) (g$match-empty$13257$1HvE18 (vector-ref g$p$13296$1HvE18 '3) g$r$13297$1HvE18))) (if (memv g$t$13298$1HvE18 '(free-id atom)) g$r$13297$1HvE18 (if (memv g$t$13298$1HvE18 '(vector)) (g$match-empty$13257$1HvE18 (vector-ref g$p$13296$1HvE18 '1) g$r$13297$1HvE18) (assertion-violation 'syntax-dispatch '"invalid pattern" g$p$13296$1HvE18))))))) (vector-ref g$p$13296$1HvE18 '0)))))))))) (g$combine$13258$1HvE18 (case-lambda ((g$r*$13294$1HvE18 g$r$13295$1HvE18) (if (null? (car g$r*$13294$1HvE18)) g$r$13295$1HvE18 (cons (map car g$r*$13294$1HvE18) (g$combine$13258$1HvE18 (map cdr g$r*$13294$1HvE18) g$r$13295$1HvE18)))))) (g$match*$13259$1HvE18 (case-lambda ((g$e$13276$1HvE18 g$p$13277$1HvE18 g$m*$13278$1HvE18 g$s*$13279$1HvE18 g$ae*$13280$1HvE18 g$r$13281$1HvE18) (if (null? g$p$13277$1HvE18) (if (null? g$e$13276$1HvE18) (begin '#f g$r$13281$1HvE18) '#f) (if (pair? g$p$13277$1HvE18) (if (pair? g$e$13276$1HvE18) (begin '#f (g$match$13260$1HvE18 (car g$e$13276$1HvE18) (car g$p$13277$1HvE18) g$m*$13278$1HvE18 g$s*$13279$1HvE18 g$ae*$13280$1HvE18 (g$match$13260$1HvE18 (cdr g$e$13276$1HvE18) (cdr g$p$13277$1HvE18) g$m*$13278$1HvE18 g$s*$13279$1HvE18 g$ae*$13280$1HvE18 g$r$13281$1HvE18))) '#f) (if (eq? g$p$13277$1HvE18 'each-any) ((case-lambda ((g$l$13282$1HvE18) (if g$l$13282$1HvE18 (begin '#f (cons g$l$13282$1HvE18 g$r$13281$1HvE18)) '#f))) (g$match-each-any$13256$1HvE18 g$e$13276$1HvE18 g$m*$13278$1HvE18 g$s*$13279$1HvE18 g$ae*$13280$1HvE18)) ((case-lambda ((g$t$13283$1HvE18) (if (memv g$t$13283$1HvE18 '(each)) (if (null? g$e$13276$1HvE18) (g$match-empty$13257$1HvE18 (vector-ref g$p$13277$1HvE18 '1) g$r$13281$1HvE18) ((case-lambda ((g$r*$13293$1HvE18) (if g$r*$13293$1HvE18 (begin '#f (g$combine$13258$1HvE18 g$r*$13293$1HvE18 g$r$13281$1HvE18)) '#f))) (g$match-each$13254$1HvE18 g$e$13276$1HvE18 (vector-ref g$p$13277$1HvE18 '1) g$m*$13278$1HvE18 g$s*$13279$1HvE18 g$ae*$13280$1HvE18))) (if (memv g$t$13283$1HvE18 '(free-id)) (if (symbol? g$e$13276$1HvE18) (if (g$top-marked?$9255$1HvE18 g$m*$13278$1HvE18) (if (g$free-id=?$9316$1HvE18 (g$stx^$13253$1HvE18 g$e$13276$1HvE18 g$m*$13278$1HvE18 g$s*$13279$1HvE18 g$ae*$13280$1HvE18) (vector-ref g$p$13277$1HvE18 '1)) (begin '#f g$r$13281$1HvE18) '#f) '#f) '#f) (if (memv g$t$13283$1HvE18 '(each+)) (call-with-values (case-lambda (() (g$match-each+$13255$1HvE18 g$e$13276$1HvE18 (vector-ref g$p$13277$1HvE18 '1) (vector-ref g$p$13277$1HvE18 '2) (vector-ref g$p$13277$1HvE18 '3) g$m*$13278$1HvE18 g$s*$13279$1HvE18 g$ae*$13280$1HvE18 g$r$13281$1HvE18))) (case-lambda ((g$xr*$13287$1HvE18 g$y-pat$13288$1HvE18 g$r$13289$1HvE18) ((case-lambda ((g$r$13290$1HvE18 g$y-pat$13291$1HvE18 g$xr*$13292$1HvE18) (if g$r$13290$1HvE18 (if (null? g$y-pat$13291$1HvE18) (begin '#f (if (null? g$xr*$13292$1HvE18) (g$match-empty$13257$1HvE18 (vector-ref g$p$13277$1HvE18 '1) g$r$13290$1HvE18) (g$combine$13258$1HvE18 g$xr*$13292$1HvE18 g$r$13290$1HvE18))) '#f) '#f))) g$r$13289$1HvE18 g$y-pat$13288$1HvE18 g$xr*$13287$1HvE18)))) (if (memv g$t$13283$1HvE18 '(atom)) (if (equal? (vector-ref g$p$13277$1HvE18 '1) (g$strip$9322$1HvE18 g$e$13276$1HvE18 g$m*$13278$1HvE18)) (begin '#f g$r$13281$1HvE18) '#f) (if (memv g$t$13283$1HvE18 '(vector)) (if (vector? g$e$13276$1HvE18) (begin '#f (g$match$13260$1HvE18 (vector->list g$e$13276$1HvE18) (vector-ref g$p$13277$1HvE18 '1) g$m*$13278$1HvE18 g$s*$13279$1HvE18 g$ae*$13280$1HvE18 g$r$13281$1HvE18)) '#f) (assertion-violation 'syntax-dispatch '"invalid pattern" g$p$13277$1HvE18)))))))) (vector-ref g$p$13277$1HvE18 '0)))))))) (g$match$13260$1HvE18 (case-lambda ((g$e$13261$1HvE18 g$p$13262$1HvE18 g$m*$13263$1HvE18 g$s*$13264$1HvE18 g$ae*$13265$1HvE18 g$r$13266$1HvE18) (if (not g$r$13266$1HvE18) '#f (if (eq? g$p$13262$1HvE18 '_) g$r$13266$1HvE18 (if (eq? g$p$13262$1HvE18 'any) (cons (g$stx^$13253$1HvE18 g$e$13261$1HvE18 g$m*$13263$1HvE18 g$s*$13264$1HvE18 g$ae*$13265$1HvE18) g$r$13266$1HvE18) (if (g$stx?$9284$1HvE18 g$e$13261$1HvE18) (call-with-values (case-lambda (() (g$join-wraps$9299$1HvE18 g$m*$13263$1HvE18 g$s*$13264$1HvE18 g$ae*$13265$1HvE18 g$e$13261$1HvE18))) (case-lambda ((g$m*$13270$1HvE18 g$s*$13271$1HvE18 g$ae*$13272$1HvE18) ((case-lambda ((g$ae*$13273$1HvE18 g$s*$13274$1HvE18 g$m*$13275$1HvE18) (g$match$13260$1HvE18 (g$stx-expr$9286$1HvE18 g$e$13261$1HvE18) g$p$13262$1HvE18 g$m*$13275$1HvE18 g$s*$13274$1HvE18 g$ae*$13273$1HvE18 g$r$13266$1HvE18))) g$ae*$13272$1HvE18 g$s*$13271$1HvE18 g$m*$13270$1HvE18)))) (if (annotation? g$e$13261$1HvE18) (g$match$13260$1HvE18 (annotation-expression g$e$13261$1HvE18) g$p$13262$1HvE18 g$m*$13263$1HvE18 g$s*$13264$1HvE18 g$ae*$13265$1HvE18 g$r$13266$1HvE18) (g$match*$13259$1HvE18 g$e$13261$1HvE18 g$p$13262$1HvE18 g$m*$13263$1HvE18 g$s*$13264$1HvE18 g$ae*$13265$1HvE18 g$r$13266$1HvE18)))))))))) (g$match$13260$1HvE18 g$e$13251$1HvE18 g$p$13252$1HvE18 '() '() '() '()))))) (g$ellipsis?$9592$1HvE18 g$ellipsis?$15697$1HvE18 (case-lambda ((g$x$13365$1HvE18) (if (g$id?$9312$1HvE18 g$x$13365$1HvE18) (begin '#f (g$free-id=?$9316$1HvE18 g$x$13365$1HvE18 (g$scheme-stx$9537$1HvE18 '...))) '#f)))) (g$syntax-case-transformer$9593$1HvE18 g$syntax-case-transformer$15698$1HvE18 ((case-lambda (() (letrec* ((g$build-dispatch-call$13366$1HvE18 (case-lambda ((g$pvars$13475$1HvE18 g$expr$13476$1HvE18 g$y$13477$1HvE18 g$r$13478$1HvE18 g$mr$13479$1HvE18) ((case-lambda ((g$ids$13480$1HvE18 g$levels$13481$1HvE18) ((case-lambda ((g$labels$13482$1HvE18 g$new-vars$13483$1HvE18) ((case-lambda ((g$body$13484$1HvE18) (list '(primitive apply) (g$build-lambda$9243$1HvE18 '#f g$new-vars$13483$1HvE18 g$body$13484$1HvE18) g$y$13477$1HvE18))) (g$chi-expr$9607$1HvE18 (g$add-subst$9302$1HvE18 (g$make-full-rib$9280$1HvE18 g$ids$13480$1HvE18 g$labels$13482$1HvE18) g$expr$13476$1HvE18) (append (map (case-lambda ((g$label$13485$1HvE18 g$var$13486$1HvE18 g$level$13487$1HvE18) (cons g$label$13485$1HvE18 (g$make-binding$9327$1HvE18 'syntax (cons g$var$13486$1HvE18 g$level$13487$1HvE18))))) g$labels$13482$1HvE18 g$new-vars$13483$1HvE18 (map cdr g$pvars$13475$1HvE18)) g$r$13478$1HvE18) g$mr$13479$1HvE18)))) (map g$gen-label$9258$1HvE18 g$ids$13480$1HvE18) (map g$gen-lexical$9256$1HvE18 g$ids$13480$1HvE18)))) (map car g$pvars$13475$1HvE18) (map cdr g$pvars$13475$1HvE18))))) (g$invalid-ids-error$13367$1HvE18 (case-lambda ((g$id*$13469$1HvE18 g$e$13470$1HvE18 g$class$13471$1HvE18) ((letrec ((g$find$13472$1HvE18 (case-lambda ((g$id*$13473$1HvE18 g$ok*$13474$1HvE18) (if (null? g$id*$13473$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$e$13470$1HvE18) (if (g$id?$9312$1HvE18 (car g$id*$13473$1HvE18)) (if (g$bound-id-member?$9319$1HvE18 (car g$id*$13473$1HvE18) g$ok*$13474$1HvE18) (g$syntax-error$9692$1HvE18 (car g$id*$13473$1HvE18) '"duplicate " g$class$13471$1HvE18) (g$find$13472$1HvE18 (cdr g$id*$13473$1HvE18) (cons (car g$id*$13473$1HvE18) g$ok*$13474$1HvE18))) (g$syntax-error$9692$1HvE18 (car g$id*$13473$1HvE18) '"invalid " g$class$13471$1HvE18))))))) g$find$13472$1HvE18) g$id*$13469$1HvE18 '())))) (g$gen-clause$13368$1HvE18 (case-lambda ((g$x$13449$1HvE18 g$keys$13450$1HvE18 g$clauses$13451$1HvE18 g$r$13452$1HvE18 g$mr$13453$1HvE18 g$pat$13454$1HvE18 g$fender$13455$1HvE18 g$expr$13456$1HvE18) (call-with-values (case-lambda (() (g$convert-pattern$9590$1HvE18 g$pat$13454$1HvE18 g$keys$13450$1HvE18))) (case-lambda ((g$p$13459$1HvE18 g$pvars$13460$1HvE18) ((case-lambda ((g$pvars$13461$1HvE18 g$p$13462$1HvE18) (if (not (g$distinct-bound-ids?$9318$1HvE18 (map car g$pvars$13461$1HvE18))) (g$invalid-ids-error$13367$1HvE18 (map car g$pvars$13461$1HvE18) g$pat$13454$1HvE18 '"pattern variable") (if (not (g$for-all$7965$1HvE18 (case-lambda ((g$x$13463$1HvE18) (not (g$ellipsis?$9592$1HvE18 (car g$x$13463$1HvE18))))) g$pvars$13461$1HvE18)) (g$syntax-violation$9695$1HvE18 '#f '"misplaced ellipsis in syntax-case pattern" g$pat$13454$1HvE18) ((case-lambda ((g$y$13464$1HvE18) ((case-lambda ((g$test$13465$1HvE18) ((case-lambda ((g$conseq$13466$1HvE18) ((case-lambda ((g$altern$13467$1HvE18) (list (g$build-lambda$9243$1HvE18 '#f (list g$y$13464$1HvE18) (list 'if g$test$13465$1HvE18 g$conseq$13466$1HvE18 g$altern$13467$1HvE18)) (list '(primitive syntax-dispatch) g$x$13449$1HvE18 (list 'quote g$p$13462$1HvE18))))) (g$gen-syntax-case$13369$1HvE18 g$x$13449$1HvE18 g$keys$13450$1HvE18 g$clauses$13451$1HvE18 g$r$13452$1HvE18 g$mr$13453$1HvE18)))) (g$build-dispatch-call$13366$1HvE18 g$pvars$13461$1HvE18 g$expr$13456$1HvE18 g$y$13464$1HvE18 g$r$13452$1HvE18 g$mr$13453$1HvE18)))) (if (eq? g$fender$13455$1HvE18 '#t) g$y$13464$1HvE18 ((case-lambda ((g$call$13468$1HvE18) (list 'if g$y$13464$1HvE18 g$call$13468$1HvE18 (list 'quote '#f)))) (g$build-dispatch-call$13366$1HvE18 g$pvars$13461$1HvE18 g$fender$13455$1HvE18 g$y$13464$1HvE18 g$r$13452$1HvE18 g$mr$13453$1HvE18)))))) (g$gen-lexical$9256$1HvE18 'tmp)))))) g$pvars$13460$1HvE18 g$p$13459$1HvE18))))))) (g$gen-syntax-case$13369$1HvE18 (case-lambda ((g$x$13405$1HvE18 g$keys$13406$1HvE18 g$clauses$13407$1HvE18 g$r$13408$1HvE18 g$mr$13409$1HvE18) (if (null? g$clauses$13407$1HvE18) (list '(primitive syntax-error) g$x$13405$1HvE18) ((case-lambda ((g$t$13410$1HvE18) ((case-lambda ((g$ls/false$13411$1HvE18) (if (if g$ls/false$13411$1HvE18 (begin '#f (apply (case-lambda ((g$pat$13412$1HvE18 g$expr$13413$1HvE18) '#t)) g$ls/false$13411$1HvE18)) '#f) (apply (case-lambda ((g$pat$13414$1HvE18 g$expr$13415$1HvE18) (if (if (g$id?$9312$1HvE18 g$pat$13414$1HvE18) (if (not (g$bound-id-member?$9319$1HvE18 g$pat$13414$1HvE18 g$keys$13406$1HvE18)) (begin '#f (not (g$ellipsis?$9592$1HvE18 g$pat$13414$1HvE18))) '#f) '#f) (if (g$free-id=?$9316$1HvE18 g$pat$13414$1HvE18 (g$scheme-stx$9537$1HvE18 '_)) (g$chi-expr$9607$1HvE18 g$expr$13415$1HvE18 g$r$13408$1HvE18 g$mr$13409$1HvE18) ((case-lambda ((g$lab$13416$1HvE18 g$lex$13417$1HvE18) ((case-lambda ((g$body$13418$1HvE18) (list (g$build-lambda$9243$1HvE18 '#f (list g$lex$13417$1HvE18) g$body$13418$1HvE18) g$x$13405$1HvE18))) (g$chi-expr$9607$1HvE18 (g$add-subst$9302$1HvE18 (g$make-full-rib$9280$1HvE18 (list g$pat$13414$1HvE18) (list g$lab$13416$1HvE18)) g$expr$13415$1HvE18) (cons (cons g$lab$13416$1HvE18 (g$make-binding$9327$1HvE18 'syntax (cons g$lex$13417$1HvE18 '0))) g$r$13408$1HvE18) g$mr$13409$1HvE18)))) (g$gen-label$9258$1HvE18 g$pat$13414$1HvE18) (g$gen-lexical$9256$1HvE18 g$pat$13414$1HvE18))) (g$gen-clause$13368$1HvE18 g$x$13405$1HvE18 g$keys$13406$1HvE18 (cdr g$clauses$13407$1HvE18) g$r$13408$1HvE18 g$mr$13409$1HvE18 g$pat$13414$1HvE18 '#t g$expr$13415$1HvE18)))) g$ls/false$13411$1HvE18) ((case-lambda ((g$t$13419$1HvE18) ((case-lambda ((g$ls/false$13420$1HvE18) (if (if g$ls/false$13420$1HvE18 (begin '#f (apply (case-lambda ((g$pat$13421$1HvE18 g$fender$13422$1HvE18 g$expr$13423$1HvE18) '#t)) g$ls/false$13420$1HvE18)) '#f) (apply (case-lambda ((g$pat$13424$1HvE18 g$fender$13425$1HvE18 g$expr$13426$1HvE18) (g$gen-clause$13368$1HvE18 g$x$13405$1HvE18 g$keys$13406$1HvE18 (cdr g$clauses$13407$1HvE18) g$r$13408$1HvE18 g$mr$13409$1HvE18 g$pat$13424$1HvE18 g$fender$13425$1HvE18 g$expr$13426$1HvE18))) g$ls/false$13420$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13419$1HvE18)))) ((case-lambda ((g$x$13427$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13427$1HvE18) (begin '#f ((case-lambda ((g$q$13428$1HvE18) (if g$q$13428$1HvE18 (begin '#f ((case-lambda ((g$r$13429$1HvE18) (if g$r$13429$1HvE18 (begin '#f (append g$q$13428$1HvE18 g$r$13429$1HvE18)) '#f))) ((case-lambda ((g$x$13430$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13430$1HvE18) (begin '#f ((case-lambda ((g$q$13431$1HvE18) (if g$q$13431$1HvE18 (begin '#f ((case-lambda ((g$r$13432$1HvE18) (if g$r$13432$1HvE18 (begin '#f (append g$q$13431$1HvE18 g$r$13432$1HvE18)) '#f))) ((case-lambda ((g$x$13433$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13433$1HvE18) (begin '#f ((case-lambda ((g$q$13434$1HvE18) (if g$q$13434$1HvE18 (begin '#f ((case-lambda ((g$r$13435$1HvE18) (if g$r$13435$1HvE18 (begin '#f (append g$q$13434$1HvE18 g$r$13435$1HvE18)) '#f))) ((case-lambda ((g$x$13436$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13436$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13433$1HvE18)))) '#f))) ((case-lambda ((g$x$13437$1HvE18) (list g$x$13437$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13433$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13430$1HvE18)))) '#f))) ((case-lambda ((g$x$13438$1HvE18) (list g$x$13438$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13430$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13427$1HvE18)))) '#f))) ((case-lambda ((g$x$13439$1HvE18) (list g$x$13439$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13427$1HvE18)))) '#f))) g$t$13419$1HvE18)))) g$t$13410$1HvE18)))) ((case-lambda ((g$x$13440$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13440$1HvE18) (begin '#f ((case-lambda ((g$q$13441$1HvE18) (if g$q$13441$1HvE18 (begin '#f ((case-lambda ((g$r$13442$1HvE18) (if g$r$13442$1HvE18 (begin '#f (append g$q$13441$1HvE18 g$r$13442$1HvE18)) '#f))) ((case-lambda ((g$x$13443$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13443$1HvE18) (begin '#f ((case-lambda ((g$q$13444$1HvE18) (if g$q$13444$1HvE18 (begin '#f ((case-lambda ((g$r$13445$1HvE18) (if g$r$13445$1HvE18 (begin '#f (append g$q$13444$1HvE18 g$r$13445$1HvE18)) '#f))) ((case-lambda ((g$x$13446$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13446$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13443$1HvE18)))) '#f))) ((case-lambda ((g$x$13447$1HvE18) (list g$x$13447$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13443$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13440$1HvE18)))) '#f))) ((case-lambda ((g$x$13448$1HvE18) (list g$x$13448$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13440$1HvE18)))) '#f))) g$t$13410$1HvE18)))) (car g$clauses$13407$1HvE18))))))) (case-lambda ((g$e$13370$1HvE18 g$r$13371$1HvE18 g$mr$13372$1HvE18) ((case-lambda ((g$t$13373$1HvE18) ((case-lambda ((g$ls/false$13374$1HvE18) (if (if g$ls/false$13374$1HvE18 (begin '#f (apply (case-lambda ((g$expr$13375$1HvE18 g$keys$13376$1HvE18 g$clauses$13377$1HvE18) '#t)) g$ls/false$13374$1HvE18)) '#f) (apply (case-lambda ((g$expr$13378$1HvE18 g$keys$13379$1HvE18 g$clauses$13380$1HvE18) (begin (if (g$for-all$7965$1HvE18 (case-lambda ((g$x$13381$1HvE18) (if (g$id?$9312$1HvE18 g$x$13381$1HvE18) (begin '#f (not (g$ellipsis?$9592$1HvE18 g$x$13381$1HvE18))) '#f))) g$keys$13379$1HvE18) (void) (g$syntax-violation$9695$1HvE18 '#f '"invalid literals" g$e$13370$1HvE18)) ((case-lambda ((g$x$13382$1HvE18) ((case-lambda ((g$body$13383$1HvE18) (list (g$build-lambda$9243$1HvE18 '#f (list g$x$13382$1HvE18) g$body$13383$1HvE18) (g$chi-expr$9607$1HvE18 g$expr$13378$1HvE18 g$r$13371$1HvE18 g$mr$13372$1HvE18)))) (g$gen-syntax-case$13369$1HvE18 g$x$13382$1HvE18 g$keys$13379$1HvE18 g$clauses$13380$1HvE18 g$r$13371$1HvE18 g$mr$13372$1HvE18)))) (g$gen-lexical$9256$1HvE18 'tmp))))) g$ls/false$13374$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13373$1HvE18)))) ((case-lambda ((g$x$13384$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13384$1HvE18) (begin '#f ((case-lambda ((g$q$13385$1HvE18) (if g$q$13385$1HvE18 (begin '#f ((case-lambda ((g$r$13386$1HvE18) (if g$r$13386$1HvE18 (begin '#f (append g$q$13385$1HvE18 g$r$13386$1HvE18)) '#f))) ((case-lambda ((g$x$13387$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13387$1HvE18) (begin '#f ((case-lambda ((g$q$13388$1HvE18) (if g$q$13388$1HvE18 (begin '#f ((case-lambda ((g$r$13389$1HvE18) (if g$r$13389$1HvE18 (begin '#f (append g$q$13388$1HvE18 g$r$13389$1HvE18)) '#f))) ((case-lambda ((g$x$13390$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13390$1HvE18) (begin '#f ((case-lambda ((g$q$13391$1HvE18) (if g$q$13391$1HvE18 (begin '#f ((case-lambda ((g$r$13392$1HvE18) (if g$r$13392$1HvE18 (begin '#f (append g$q$13391$1HvE18 g$r$13392$1HvE18)) '#f))) ((letrec ((g$f$13393$1HvE18 (case-lambda ((g$x$13394$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13394$1HvE18) ((case-lambda ((g$cars/f$13395$1HvE18) (if g$cars/f$13395$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13396$1HvE18) (if g$cdrs/f$13396$1HvE18 (begin '#f (map cons g$cars/f$13395$1HvE18 g$cdrs/f$13396$1HvE18)) '#f))) (g$f$13393$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13394$1HvE18)))) '#f))) ((case-lambda ((g$x$13397$1HvE18) (list g$x$13397$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13394$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13394$1HvE18) (list (begin 'clauses '())) '#f)))))) g$f$13393$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$13390$1HvE18)))) '#f))) ((letrec ((g$f$13398$1HvE18 (case-lambda ((g$x$13399$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13399$1HvE18) ((case-lambda ((g$cars/f$13400$1HvE18) (if g$cars/f$13400$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13401$1HvE18) (if g$cdrs/f$13401$1HvE18 (begin '#f (map cons g$cars/f$13400$1HvE18 g$cdrs/f$13401$1HvE18)) '#f))) (g$f$13398$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13399$1HvE18)))) '#f))) ((case-lambda ((g$x$13402$1HvE18) (list g$x$13402$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13399$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13399$1HvE18) (list (begin 'keys '())) '#f)))))) g$f$13398$1HvE18) (g$syntax-car$9309$1HvE18 g$x$13390$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13387$1HvE18)))) '#f))) ((case-lambda ((g$x$13403$1HvE18) (list g$x$13403$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13387$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13384$1HvE18)))) '#f))) ((case-lambda ((g$x$13404$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$13384$1HvE18)))) '#f))) g$t$13373$1HvE18)))) g$e$13370$1HvE18)))))))) (g$ellipsis-map$9594$1HvE18 g$ellipsis-map$15699$1HvE18 (case-lambda ((g$proc$13488$1HvE18 g$ls$13489$1HvE18 . g$ls*$13490$1HvE18) (letrec* ((g$who$13491$1HvE18 '...)) (begin (if (list? g$ls$13489$1HvE18) (void) (assertion-violation g$who$13491$1HvE18 '"not a list" g$ls$13489$1HvE18)) (if (null? g$ls*$13490$1HvE18) (void) ((case-lambda ((g$n$13492$1HvE18) (for-each (case-lambda ((g$x$13493$1HvE18) (begin (if (list? g$x$13493$1HvE18) (void) (assertion-violation g$who$13491$1HvE18 '"not a list" g$x$13493$1HvE18)) (if (= (length g$x$13493$1HvE18) g$n$13492$1HvE18) (void) (assertion-violation g$who$13491$1HvE18 '"length mismatch" g$ls$13489$1HvE18 g$x$13493$1HvE18))))) g$ls*$13490$1HvE18))) (length g$ls$13489$1HvE18))) (apply map g$proc$13488$1HvE18 g$ls$13489$1HvE18 g$ls*$13490$1HvE18)))))) (g$syntax-transformer$9595$1HvE18 g$syntax-transformer$15700$1HvE18 ((case-lambda (() (letrec* ((g$gen-syntax$13494$1HvE18 (case-lambda ((g$src$13564$1HvE18 g$e$13565$1HvE18 g$r$13566$1HvE18 g$maps$13567$1HvE18 g$ellipsis?$13568$1HvE18 g$vec?$13569$1HvE18) ((case-lambda ((g$t$13570$1HvE18) ((case-lambda ((g$ls/false$13571$1HvE18) (if (if g$ls/false$13571$1HvE18 (begin '#f (apply (case-lambda ((g$dots$13572$1HvE18) (g$ellipsis?$13568$1HvE18 g$dots$13572$1HvE18))) g$ls/false$13571$1HvE18)) '#f) (apply (case-lambda ((g$dots$13573$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"misplaced ellipsis in syntax form" g$src$13564$1HvE18))) g$ls/false$13571$1HvE18) ((case-lambda ((g$t$13574$1HvE18) ((case-lambda ((g$ls/false$13575$1HvE18) (if (if g$ls/false$13575$1HvE18 (begin '#f (apply (case-lambda ((g$id$13576$1HvE18) (g$id?$9312$1HvE18 g$id$13576$1HvE18))) g$ls/false$13575$1HvE18)) '#f) (apply (case-lambda ((g$id$13577$1HvE18) ((case-lambda ((g$label$13578$1HvE18) ((case-lambda ((g$b$13579$1HvE18) ((case-lambda (() (if (eq? (g$binding-type$9328$1HvE18 g$b$13579$1HvE18) 'syntax) (call-with-values (case-lambda (() ((case-lambda ((g$var.lev$13582$1HvE18) (g$gen-ref$13495$1HvE18 g$src$13564$1HvE18 (car g$var.lev$13582$1HvE18) (cdr g$var.lev$13582$1HvE18) g$maps$13567$1HvE18))) (g$binding-value$9329$1HvE18 g$b$13579$1HvE18)))) (case-lambda ((g$var$13583$1HvE18 g$maps$13584$1HvE18) ((case-lambda ((g$maps$13585$1HvE18 g$var$13586$1HvE18) (values (list 'ref g$var$13586$1HvE18) g$maps$13585$1HvE18))) g$maps$13584$1HvE18 g$var$13583$1HvE18)))) (values (list 'quote g$e$13565$1HvE18) g$maps$13567$1HvE18))))))) (g$label->binding$9326$1HvE18 g$label$13578$1HvE18 g$r$13566$1HvE18)))) (g$id->label$9324$1HvE18 g$e$13565$1HvE18)))) g$ls/false$13575$1HvE18) ((case-lambda ((g$t$13587$1HvE18) ((case-lambda ((g$ls/false$13588$1HvE18) (if (if g$ls/false$13588$1HvE18 (begin '#f (apply (case-lambda ((g$dots$13589$1HvE18 g$e$13590$1HvE18) (g$ellipsis?$13568$1HvE18 g$dots$13589$1HvE18))) g$ls/false$13588$1HvE18)) '#f) (apply (case-lambda ((g$dots$13591$1HvE18 g$e$13592$1HvE18) (if g$vec?$13569$1HvE18 (g$syntax-violation$9695$1HvE18 '#f '"misplaced ellipsis in syntax form" g$src$13564$1HvE18) (g$gen-syntax$13494$1HvE18 g$src$13564$1HvE18 g$e$13592$1HvE18 g$r$13566$1HvE18 g$maps$13567$1HvE18 (case-lambda ((g$x$13593$1HvE18) '#f)) '#f)))) g$ls/false$13588$1HvE18) ((case-lambda ((g$t$13594$1HvE18) ((case-lambda ((g$ls/false$13595$1HvE18) (if (if g$ls/false$13595$1HvE18 (begin '#f (apply (case-lambda ((g$x$13596$1HvE18 g$dots$13597$1HvE18 g$y$13598$1HvE18) (g$ellipsis?$13568$1HvE18 g$dots$13597$1HvE18))) g$ls/false$13595$1HvE18)) '#f) (apply (case-lambda ((g$x$13599$1HvE18 g$dots$13600$1HvE18 g$y$13601$1HvE18) ((letrec ((g$f$13602$1HvE18 (case-lambda ((g$y$13603$1HvE18 g$k$13604$1HvE18) ((case-lambda ((g$t$13605$1HvE18) ((case-lambda ((g$ls/false$13606$1HvE18) (if (if g$ls/false$13606$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$13606$1HvE18)) '#f) (apply (case-lambda (() (g$k$13604$1HvE18 g$maps$13567$1HvE18))) g$ls/false$13606$1HvE18) ((case-lambda ((g$t$13607$1HvE18) ((case-lambda ((g$ls/false$13608$1HvE18) (if (if g$ls/false$13608$1HvE18 (begin '#f (apply (case-lambda ((g$dots$13609$1HvE18 g$y$13610$1HvE18) (g$ellipsis?$13568$1HvE18 g$dots$13609$1HvE18))) g$ls/false$13608$1HvE18)) '#f) (apply (case-lambda ((g$dots$13611$1HvE18 g$y$13612$1HvE18) (g$f$13602$1HvE18 g$y$13612$1HvE18 (case-lambda ((g$maps$13613$1HvE18) (call-with-values (case-lambda (() (g$k$13604$1HvE18 (cons '() g$maps$13613$1HvE18)))) (case-lambda ((g$x$13616$1HvE18 g$maps$13617$1HvE18) ((case-lambda ((g$maps$13618$1HvE18 g$x$13619$1HvE18) (if (null? (car g$maps$13618$1HvE18)) (g$syntax-violation$9695$1HvE18 '#f '"extra ellipsis in syntax form" g$src$13564$1HvE18) (values (g$gen-mappend$13497$1HvE18 g$x$13619$1HvE18 (car g$maps$13618$1HvE18)) (cdr g$maps$13618$1HvE18))))) g$maps$13617$1HvE18 g$x$13616$1HvE18))))))))) g$ls/false$13608$1HvE18) ((case-lambda ((g$t$13620$1HvE18) ((case-lambda ((g$ls/false$13621$1HvE18) (if (if g$ls/false$13621$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$13621$1HvE18)) '#f) (apply (case-lambda (() (call-with-values (case-lambda (() (g$gen-syntax$13494$1HvE18 g$src$13564$1HvE18 g$y$13603$1HvE18 g$r$13566$1HvE18 g$maps$13567$1HvE18 g$ellipsis?$13568$1HvE18 g$vec?$13569$1HvE18))) (case-lambda ((g$y$13624$1HvE18 g$maps$13625$1HvE18) ((case-lambda ((g$maps$13626$1HvE18 g$y$13627$1HvE18) (call-with-values (case-lambda (() (g$k$13604$1HvE18 g$maps$13626$1HvE18))) (case-lambda ((g$x$13630$1HvE18 g$maps$13631$1HvE18) ((case-lambda ((g$maps$13632$1HvE18 g$x$13633$1HvE18) (values (g$gen-append$13496$1HvE18 g$x$13633$1HvE18 g$y$13627$1HvE18) g$maps$13632$1HvE18))) g$maps$13631$1HvE18 g$x$13630$1HvE18)))))) g$maps$13625$1HvE18 g$y$13624$1HvE18)))))) g$ls/false$13621$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13620$1HvE18)))) ((case-lambda ((g$x$13634$1HvE18) '())) g$t$13620$1HvE18)))) g$t$13607$1HvE18)))) ((case-lambda ((g$x$13635$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13635$1HvE18) (begin '#f ((case-lambda ((g$q$13636$1HvE18) (if g$q$13636$1HvE18 (begin '#f ((case-lambda ((g$r$13637$1HvE18) (if g$r$13637$1HvE18 (begin '#f (append g$q$13636$1HvE18 g$r$13637$1HvE18)) '#f))) ((case-lambda ((g$x$13638$1HvE18) (list g$x$13638$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$13635$1HvE18)))) '#f))) ((case-lambda ((g$x$13639$1HvE18) (list g$x$13639$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13635$1HvE18)))) '#f))) g$t$13607$1HvE18)))) g$t$13605$1HvE18)))) ((case-lambda ((g$x$13640$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13640$1HvE18) '()) (begin '#f '()) '#f))) g$t$13605$1HvE18)))) g$y$13603$1HvE18))))) g$f$13602$1HvE18) g$y$13601$1HvE18 (case-lambda ((g$maps$13641$1HvE18) (call-with-values (case-lambda (() (g$gen-syntax$13494$1HvE18 g$src$13564$1HvE18 g$x$13599$1HvE18 g$r$13566$1HvE18 (cons '() g$maps$13641$1HvE18) g$ellipsis?$13568$1HvE18 '#f))) (case-lambda ((g$x$13644$1HvE18 g$maps$13645$1HvE18) ((case-lambda ((g$maps$13646$1HvE18 g$x$13647$1HvE18) (if (null? (car g$maps$13646$1HvE18)) (g$syntax-violation$9695$1HvE18 '#f '"extra ellipsis in syntax form" g$src$13564$1HvE18) (values (g$gen-map$13498$1HvE18 g$x$13647$1HvE18 (car g$maps$13646$1HvE18)) (cdr g$maps$13646$1HvE18))))) g$maps$13645$1HvE18 g$x$13644$1HvE18))))))))) g$ls/false$13595$1HvE18) ((case-lambda ((g$t$13648$1HvE18) ((case-lambda ((g$ls/false$13649$1HvE18) (if (if g$ls/false$13649$1HvE18 (begin '#f (apply (case-lambda ((g$x$13650$1HvE18 g$y$13651$1HvE18) '#t)) g$ls/false$13649$1HvE18)) '#f) (apply (case-lambda ((g$x$13652$1HvE18 g$y$13653$1HvE18) (call-with-values (case-lambda (() (g$gen-syntax$13494$1HvE18 g$src$13564$1HvE18 g$x$13652$1HvE18 g$r$13566$1HvE18 g$maps$13567$1HvE18 g$ellipsis?$13568$1HvE18 '#f))) (case-lambda ((g$xnew$13656$1HvE18 g$maps$13657$1HvE18) ((case-lambda ((g$maps$13658$1HvE18 g$xnew$13659$1HvE18) (call-with-values (case-lambda (() (g$gen-syntax$13494$1HvE18 g$src$13564$1HvE18 g$y$13653$1HvE18 g$r$13566$1HvE18 g$maps$13658$1HvE18 g$ellipsis?$13568$1HvE18 g$vec?$13569$1HvE18))) (case-lambda ((g$ynew$13662$1HvE18 g$maps$13663$1HvE18) ((case-lambda ((g$maps$13664$1HvE18 g$ynew$13665$1HvE18) (values (g$gen-cons$13499$1HvE18 g$e$13565$1HvE18 g$x$13652$1HvE18 g$y$13653$1HvE18 g$xnew$13659$1HvE18 g$ynew$13665$1HvE18) g$maps$13664$1HvE18))) g$maps$13663$1HvE18 g$ynew$13662$1HvE18)))))) g$maps$13657$1HvE18 g$xnew$13656$1HvE18)))))) g$ls/false$13649$1HvE18) ((case-lambda ((g$t$13666$1HvE18) ((case-lambda ((g$ls/false$13667$1HvE18) (if (if g$ls/false$13667$1HvE18 (begin '#f (apply (case-lambda ((g$ls$13668$1HvE18) '#t)) g$ls/false$13667$1HvE18)) '#f) (apply (case-lambda ((g$ls$13669$1HvE18) (call-with-values (case-lambda (() (g$gen-syntax$13494$1HvE18 g$src$13564$1HvE18 g$ls$13669$1HvE18 g$r$13566$1HvE18 g$maps$13567$1HvE18 g$ellipsis?$13568$1HvE18 '#t))) (case-lambda ((g$lsnew$13672$1HvE18 g$maps$13673$1HvE18) ((case-lambda ((g$maps$13674$1HvE18 g$lsnew$13675$1HvE18) (values (g$gen-vector$13500$1HvE18 g$e$13565$1HvE18 g$ls$13669$1HvE18 g$lsnew$13675$1HvE18) g$maps$13674$1HvE18))) g$maps$13673$1HvE18 g$lsnew$13672$1HvE18)))))) g$ls/false$13667$1HvE18) ((case-lambda ((g$t$13676$1HvE18) ((case-lambda ((g$ls/false$13677$1HvE18) (if (if g$ls/false$13677$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$13677$1HvE18)) '#f) (apply (case-lambda (() (values (list 'quote g$e$13565$1HvE18) g$maps$13567$1HvE18))) g$ls/false$13677$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13676$1HvE18)))) ((case-lambda ((g$x$13678$1HvE18) '())) g$t$13676$1HvE18)))) g$t$13666$1HvE18)))) ((case-lambda ((g$x$13679$1HvE18) (if (g$syntax-vector?$9306$1HvE18 g$x$13679$1HvE18) (begin '#f ((letrec ((g$f$13680$1HvE18 (case-lambda ((g$x$13681$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13681$1HvE18) ((case-lambda ((g$cars/f$13682$1HvE18) (if g$cars/f$13682$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13683$1HvE18) (if g$cdrs/f$13683$1HvE18 (begin '#f (map cons g$cars/f$13682$1HvE18 g$cdrs/f$13683$1HvE18)) '#f))) (g$f$13680$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13681$1HvE18)))) '#f))) ((case-lambda ((g$x$13684$1HvE18) (list g$x$13684$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13681$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13681$1HvE18) (list (begin 'ls '())) '#f)))))) g$f$13680$1HvE18) (g$syntax-vector->list$9304$1HvE18 g$x$13679$1HvE18))) '#f))) g$t$13666$1HvE18)))) g$t$13648$1HvE18)))) ((case-lambda ((g$x$13685$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13685$1HvE18) (begin '#f ((case-lambda ((g$q$13686$1HvE18) (if g$q$13686$1HvE18 (begin '#f ((case-lambda ((g$r$13687$1HvE18) (if g$r$13687$1HvE18 (begin '#f (append g$q$13686$1HvE18 g$r$13687$1HvE18)) '#f))) ((case-lambda ((g$x$13688$1HvE18) (list g$x$13688$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$13685$1HvE18)))) '#f))) ((case-lambda ((g$x$13689$1HvE18) (list g$x$13689$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13685$1HvE18)))) '#f))) g$t$13648$1HvE18)))) g$t$13594$1HvE18)))) ((case-lambda ((g$x$13690$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13690$1HvE18) (begin '#f ((case-lambda ((g$q$13691$1HvE18) (if g$q$13691$1HvE18 (begin '#f ((case-lambda ((g$r$13692$1HvE18) (if g$r$13692$1HvE18 (begin '#f (append g$q$13691$1HvE18 g$r$13692$1HvE18)) '#f))) ((case-lambda ((g$x$13693$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13693$1HvE18) (begin '#f ((case-lambda ((g$q$13694$1HvE18) (if g$q$13694$1HvE18 (begin '#f ((case-lambda ((g$r$13695$1HvE18) (if g$r$13695$1HvE18 (begin '#f (append g$q$13694$1HvE18 g$r$13695$1HvE18)) '#f))) ((case-lambda ((g$x$13696$1HvE18) (list g$x$13696$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$13693$1HvE18)))) '#f))) ((case-lambda ((g$x$13697$1HvE18) (list g$x$13697$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13693$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13690$1HvE18)))) '#f))) ((case-lambda ((g$x$13698$1HvE18) (list g$x$13698$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13690$1HvE18)))) '#f))) g$t$13594$1HvE18)))) g$t$13587$1HvE18)))) ((case-lambda ((g$x$13699$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13699$1HvE18) (begin '#f ((case-lambda ((g$q$13700$1HvE18) (if g$q$13700$1HvE18 (begin '#f ((case-lambda ((g$r$13701$1HvE18) (if g$r$13701$1HvE18 (begin '#f (append g$q$13700$1HvE18 g$r$13701$1HvE18)) '#f))) ((case-lambda ((g$x$13702$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13702$1HvE18) (begin '#f ((case-lambda ((g$q$13703$1HvE18) (if g$q$13703$1HvE18 (begin '#f ((case-lambda ((g$r$13704$1HvE18) (if g$r$13704$1HvE18 (begin '#f (append g$q$13703$1HvE18 g$r$13704$1HvE18)) '#f))) ((case-lambda ((g$x$13705$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13705$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13702$1HvE18)))) '#f))) ((case-lambda ((g$x$13706$1HvE18) (list g$x$13706$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13702$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13699$1HvE18)))) '#f))) ((case-lambda ((g$x$13707$1HvE18) (list g$x$13707$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13699$1HvE18)))) '#f))) g$t$13587$1HvE18)))) g$t$13574$1HvE18)))) ((case-lambda ((g$x$13708$1HvE18) (list g$x$13708$1HvE18))) g$t$13574$1HvE18)))) g$t$13570$1HvE18)))) ((case-lambda ((g$x$13709$1HvE18) (list g$x$13709$1HvE18))) g$t$13570$1HvE18)))) g$e$13565$1HvE18)))) (g$gen-ref$13495$1HvE18 (case-lambda ((g$src$13551$1HvE18 g$var$13552$1HvE18 g$level$13553$1HvE18 g$maps$13554$1HvE18) (if (= g$level$13553$1HvE18 '0) (values g$var$13552$1HvE18 g$maps$13554$1HvE18) (if (null? g$maps$13554$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"missing ellipsis in syntax form" g$src$13551$1HvE18) (call-with-values (case-lambda (() (g$gen-ref$13495$1HvE18 g$src$13551$1HvE18 g$var$13552$1HvE18 (- g$level$13553$1HvE18 '1) (cdr g$maps$13554$1HvE18)))) (case-lambda ((g$outer-var$13557$1HvE18 g$outer-maps$13558$1HvE18) ((case-lambda ((g$outer-maps$13559$1HvE18 g$outer-var$13560$1HvE18) ((case-lambda ((g$t$13561$1HvE18) (if g$t$13561$1HvE18 ((case-lambda ((g$b$13562$1HvE18) (values (cdr g$b$13562$1HvE18) g$maps$13554$1HvE18))) g$t$13561$1HvE18) ((case-lambda ((g$inner-var$13563$1HvE18) (values g$inner-var$13563$1HvE18 (cons (cons (cons g$outer-var$13560$1HvE18 g$inner-var$13563$1HvE18) (car g$maps$13554$1HvE18)) g$outer-maps$13559$1HvE18)))) (g$gen-lexical$9256$1HvE18 'tmp))))) (assq g$outer-var$13560$1HvE18 (car g$maps$13554$1HvE18))))) g$outer-maps$13558$1HvE18 g$outer-var$13557$1HvE18))))))))) (g$gen-append$13496$1HvE18 (case-lambda ((g$x$13549$1HvE18 g$y$13550$1HvE18) (if (equal? g$y$13550$1HvE18 ''()) g$x$13549$1HvE18 (list 'append g$x$13549$1HvE18 g$y$13550$1HvE18))))) (g$gen-mappend$13497$1HvE18 (case-lambda ((g$e$13547$1HvE18 g$map-env$13548$1HvE18) (list 'apply '(primitive append) (g$gen-map$13498$1HvE18 g$e$13547$1HvE18 g$map-env$13548$1HvE18))))) (g$gen-map$13498$1HvE18 (case-lambda ((g$e$13538$1HvE18 g$map-env$13539$1HvE18) ((case-lambda ((g$formals$13540$1HvE18 g$actuals$13541$1HvE18) (if (eq? (car g$e$13538$1HvE18) 'ref) (car g$actuals$13541$1HvE18) (if (g$for-all$7965$1HvE18 (case-lambda ((g$x$13542$1HvE18) (if (eq? (car g$x$13542$1HvE18) 'ref) (begin '#f (memq (g$cadr$7545$1HvE18 g$x$13542$1HvE18) g$formals$13540$1HvE18)) '#f))) (cdr g$e$13538$1HvE18)) ((case-lambda ((g$args$13543$1HvE18) (cons 'map (cons (list 'primitive (car g$e$13538$1HvE18)) g$args$13543$1HvE18)))) (map ((case-lambda ((g$r$13544$1HvE18) (case-lambda ((g$x$13545$1HvE18) (cdr (assq (g$cadr$7545$1HvE18 g$x$13545$1HvE18) g$r$13544$1HvE18)))))) (map cons g$formals$13540$1HvE18 g$actuals$13541$1HvE18)) (cdr g$e$13538$1HvE18))) (g$cons*$7967$1HvE18 'map (list 'lambda g$formals$13540$1HvE18 g$e$13538$1HvE18) g$actuals$13541$1HvE18))))) (map cdr g$map-env$13539$1HvE18) (map (case-lambda ((g$x$13546$1HvE18) (list 'ref (car g$x$13546$1HvE18)))) g$map-env$13539$1HvE18))))) (g$gen-cons$13499$1HvE18 (case-lambda ((g$e$13530$1HvE18 g$x$13531$1HvE18 g$y$13532$1HvE18 g$xnew$13533$1HvE18 g$ynew$13534$1HvE18) ((case-lambda ((g$t$13535$1HvE18) (if (memv g$t$13535$1HvE18 '(quote)) (if (eq? (car g$xnew$13533$1HvE18) 'quote) ((case-lambda ((g$xnew$13536$1HvE18 g$ynew$13537$1HvE18) (if (if (eq? g$xnew$13536$1HvE18 g$x$13531$1HvE18) (begin '#f (eq? g$ynew$13537$1HvE18 g$y$13532$1HvE18)) '#f) (list 'quote g$e$13530$1HvE18) (list 'quote (cons g$xnew$13536$1HvE18 g$ynew$13537$1HvE18))))) (g$cadr$7545$1HvE18 g$xnew$13533$1HvE18) (g$cadr$7545$1HvE18 g$ynew$13534$1HvE18)) (if (null? (g$cadr$7545$1HvE18 g$ynew$13534$1HvE18)) (list 'list g$xnew$13533$1HvE18) (list 'cons g$xnew$13533$1HvE18 g$ynew$13534$1HvE18))) (if (memv g$t$13535$1HvE18 '(list)) (cons 'list (cons g$xnew$13533$1HvE18 (cdr g$ynew$13534$1HvE18))) (list 'cons g$xnew$13533$1HvE18 g$ynew$13534$1HvE18))))) (car g$ynew$13534$1HvE18))))) (g$gen-vector$13500$1HvE18 (case-lambda ((g$e$13527$1HvE18 g$ls$13528$1HvE18 g$lsnew$13529$1HvE18) (if (eq? (car g$lsnew$13529$1HvE18) 'quote) (if (eq? (g$cadr$7545$1HvE18 g$lsnew$13529$1HvE18) g$ls$13528$1HvE18) (list 'quote g$e$13527$1HvE18) (list 'quote (list->vector (g$cadr$7545$1HvE18 g$lsnew$13529$1HvE18)))) (if (eq? (car g$lsnew$13529$1HvE18) 'list) (cons 'vector (cdr g$lsnew$13529$1HvE18)) (list 'list->vector g$lsnew$13529$1HvE18)))))) (g$regen$13501$1HvE18 (case-lambda ((g$x$13524$1HvE18) ((case-lambda ((g$t$13525$1HvE18) (if (memv g$t$13525$1HvE18 '(ref)) (g$cadr$7545$1HvE18 g$x$13524$1HvE18) (if (memv g$t$13525$1HvE18 '(primitive)) (list 'primitive (g$cadr$7545$1HvE18 g$x$13524$1HvE18)) (if (memv g$t$13525$1HvE18 '(quote)) (list 'quote (g$cadr$7545$1HvE18 g$x$13524$1HvE18)) (if (memv g$t$13525$1HvE18 '(lambda)) (g$build-lambda$9243$1HvE18 '#f (g$cadr$7545$1HvE18 g$x$13524$1HvE18) (g$regen$13501$1HvE18 (g$caddr$7551$1HvE18 g$x$13524$1HvE18))) (if (memv g$t$13525$1HvE18 '(map)) ((case-lambda ((g$ls$13526$1HvE18) (cons '(primitive ellipsis-map) g$ls$13526$1HvE18))) (map g$regen$13501$1HvE18 (cdr g$x$13524$1HvE18))) (cons (list 'primitive (car g$x$13524$1HvE18)) (map g$regen$13501$1HvE18 (cdr g$x$13524$1HvE18)))))))))) (car g$x$13524$1HvE18)))))) (case-lambda ((g$e$13502$1HvE18 g$r$13503$1HvE18 g$mr$13504$1HvE18) ((case-lambda ((g$t$13505$1HvE18) ((case-lambda ((g$ls/false$13506$1HvE18) (if (if g$ls/false$13506$1HvE18 (begin '#f (apply (case-lambda ((g$x$13507$1HvE18) '#t)) g$ls/false$13506$1HvE18)) '#f) (apply (case-lambda ((g$x$13508$1HvE18) (call-with-values (case-lambda (() (g$gen-syntax$13494$1HvE18 g$e$13502$1HvE18 g$x$13508$1HvE18 g$r$13503$1HvE18 '() g$ellipsis?$9592$1HvE18 '#f))) (case-lambda ((g$e$13511$1HvE18 g$maps$13512$1HvE18) ((case-lambda ((g$maps$13513$1HvE18 g$e$13514$1HvE18) (g$regen$13501$1HvE18 g$e$13514$1HvE18))) g$maps$13512$1HvE18 g$e$13511$1HvE18)))))) g$ls/false$13506$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13505$1HvE18)))) ((case-lambda ((g$x$13515$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13515$1HvE18) (begin '#f ((case-lambda ((g$q$13516$1HvE18) (if g$q$13516$1HvE18 (begin '#f ((case-lambda ((g$r$13517$1HvE18) (if g$r$13517$1HvE18 (begin '#f (append g$q$13516$1HvE18 g$r$13517$1HvE18)) '#f))) ((case-lambda ((g$x$13518$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13518$1HvE18) (begin '#f ((case-lambda ((g$q$13519$1HvE18) (if g$q$13519$1HvE18 (begin '#f ((case-lambda ((g$r$13520$1HvE18) (if g$r$13520$1HvE18 (begin '#f (append g$q$13519$1HvE18 g$r$13520$1HvE18)) '#f))) ((case-lambda ((g$x$13521$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13521$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13518$1HvE18)))) '#f))) ((case-lambda ((g$x$13522$1HvE18) (list g$x$13522$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13518$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13515$1HvE18)))) '#f))) ((case-lambda ((g$x$13523$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$13515$1HvE18)))) '#f))) g$t$13505$1HvE18)))) g$e$13502$1HvE18)))))))) (g$core-macro-transformer$9596$1HvE18 g$core-macro-transformer$15701$1HvE18 (case-lambda ((g$name$13710$1HvE18) ((case-lambda ((g$t$13711$1HvE18) (if (memv g$t$13711$1HvE18 '(quote)) g$quote-transformer$9554$1HvE18 (if (memv g$t$13711$1HvE18 '(lambda)) g$lambda-transformer$9556$1HvE18 (if (memv g$t$13711$1HvE18 '(case-lambda)) g$case-lambda-transformer$9555$1HvE18 (if (memv g$t$13711$1HvE18 '(letrec)) g$letrec-transformer$9544$1HvE18 (if (memv g$t$13711$1HvE18 '(letrec*)) g$letrec*-transformer$9545$1HvE18 (if (memv g$t$13711$1HvE18 '(case)) g$case-transformer$9553$1HvE18 (if (memv g$t$13711$1HvE18 '(if)) g$if-transformer$9552$1HvE18 (if (memv g$t$13711$1HvE18 '(when)) g$when-transformer$9550$1HvE18 (if (memv g$t$13711$1HvE18 '(unless)) g$unless-transformer$9551$1HvE18 (if (memv g$t$13711$1HvE18 '(parameterize)) g$parameterize-transformer$9588$1HvE18 (if (memv g$t$13711$1HvE18 '(foreign-call)) g$foreign-call-transformer$9589$1HvE18 (if (memv g$t$13711$1HvE18 '(syntax-case)) g$syntax-case-transformer$9593$1HvE18 (if (memv g$t$13711$1HvE18 '(syntax)) g$syntax-transformer$9595$1HvE18 (if (memv g$t$13711$1HvE18 '(type-descriptor)) g$type-descriptor-transformer$9547$1HvE18 (if (memv g$t$13711$1HvE18 '(record-type-descriptor)) g$record-type-descriptor-transformer$9548$1HvE18 (if (memv g$t$13711$1HvE18 '(record-constructor-descriptor)) g$record-constructor-descriptor-transformer$9549$1HvE18 (if (memv g$t$13711$1HvE18 '(fluid-let-syntax)) g$fluid-let-syntax-transformer$9546$1HvE18 (assertion-violation 'macro-transformer '"BUG: cannot find transformer" g$name$13710$1HvE18)))))))))))))))))))) g$name$13710$1HvE18)))) (g$file-options-macro$9597$1HvE18 g$file-options-macro$15702$1HvE18 (case-lambda ((g$x$13712$1HvE18) ((case-lambda ((g$t$13713$1HvE18) ((case-lambda ((g$ls/false$13714$1HvE18) (if (if g$ls/false$13714$1HvE18 (begin '#f (apply (case-lambda ((g$opt*$13715$1HvE18) (if (g$for-all$7965$1HvE18 g$id?$9312$1HvE18 g$opt*$13715$1HvE18) (begin '#f (g$file-options-spec$8796$1HvE18 (map g$id->sym$9313$1HvE18 g$opt*$13715$1HvE18))) '#f))) g$ls/false$13714$1HvE18)) '#f) (apply (case-lambda ((g$opt*$13716$1HvE18) (g$bless$9557$1HvE18 (list 'quote (g$file-options-spec$8796$1HvE18 (map g$id->sym$9313$1HvE18 g$opt*$13716$1HvE18)))))) g$ls/false$13714$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13713$1HvE18)))) ((case-lambda ((g$x$13717$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13717$1HvE18) (begin '#f ((case-lambda ((g$q$13718$1HvE18) (if g$q$13718$1HvE18 (begin '#f ((case-lambda ((g$r$13719$1HvE18) (if g$r$13719$1HvE18 (begin '#f (append g$q$13718$1HvE18 g$r$13719$1HvE18)) '#f))) ((letrec ((g$f$13720$1HvE18 (case-lambda ((g$x$13721$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13721$1HvE18) ((case-lambda ((g$cars/f$13722$1HvE18) (if g$cars/f$13722$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13723$1HvE18) (if g$cdrs/f$13723$1HvE18 (begin '#f (map cons g$cars/f$13722$1HvE18 g$cdrs/f$13723$1HvE18)) '#f))) (g$f$13720$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13721$1HvE18)))) '#f))) ((case-lambda ((g$x$13724$1HvE18) (list g$x$13724$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13721$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13721$1HvE18) (list (begin 'opt* '())) '#f)))))) g$f$13720$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$13717$1HvE18)))) '#f))) ((case-lambda ((g$x$13725$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$13717$1HvE18)))) '#f))) g$t$13713$1HvE18)))) g$x$13712$1HvE18)))) (g$symbol-macro$9598$1HvE18 g$symbol-macro$15703$1HvE18 (case-lambda ((g$x$13726$1HvE18 g$set$13727$1HvE18) ((case-lambda ((g$t$13728$1HvE18) ((case-lambda ((g$ls/false$13729$1HvE18) (if (if g$ls/false$13729$1HvE18 (begin '#f (apply (case-lambda ((g$name$13730$1HvE18) (if (g$id?$9312$1HvE18 g$name$13730$1HvE18) (begin '#f (memq (g$id->sym$9313$1HvE18 g$name$13730$1HvE18) g$set$13727$1HvE18)) '#f))) g$ls/false$13729$1HvE18)) '#f) (apply (case-lambda ((g$name$13731$1HvE18) (g$bless$9557$1HvE18 (list 'quote g$name$13731$1HvE18)))) g$ls/false$13729$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13728$1HvE18)))) ((case-lambda ((g$x$13732$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13732$1HvE18) (begin '#f ((case-lambda ((g$q$13733$1HvE18) (if g$q$13733$1HvE18 (begin '#f ((case-lambda ((g$r$13734$1HvE18) (if g$r$13734$1HvE18 (begin '#f (append g$q$13733$1HvE18 g$r$13734$1HvE18)) '#f))) ((case-lambda ((g$x$13735$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13735$1HvE18) (begin '#f ((case-lambda ((g$q$13736$1HvE18) (if g$q$13736$1HvE18 (begin '#f ((case-lambda ((g$r$13737$1HvE18) (if g$r$13737$1HvE18 (begin '#f (append g$q$13736$1HvE18 g$r$13737$1HvE18)) '#f))) ((case-lambda ((g$x$13738$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13738$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13735$1HvE18)))) '#f))) ((case-lambda ((g$x$13739$1HvE18) (list g$x$13739$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13735$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13732$1HvE18)))) '#f))) ((case-lambda ((g$x$13740$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$13732$1HvE18)))) '#f))) g$t$13728$1HvE18)))) g$x$13726$1HvE18)))) (g$macro-transformer$9599$1HvE18 g$macro-transformer$15704$1HvE18 (case-lambda ((g$x$13741$1HvE18) (if (procedure? g$x$13741$1HvE18) g$x$13741$1HvE18 (if (symbol? g$x$13741$1HvE18) ((case-lambda ((g$t$13742$1HvE18) (if (memv g$t$13742$1HvE18 '(define-record-type)) g$define-record-type-macro$9585$1HvE18 (if (memv g$t$13742$1HvE18 '(define-struct)) g$define-struct-macro$9584$1HvE18 (if (memv g$t$13742$1HvE18 '(include)) g$include-macro$9579$1HvE18 (if (memv g$t$13742$1HvE18 '(cond)) g$cond-macro$9577$1HvE18 (if (memv g$t$13742$1HvE18 '(let)) g$let-macro$9560$1HvE18 (if (memv g$t$13742$1HvE18 '(do)) g$do-macro$9573$1HvE18 (if (memv g$t$13742$1HvE18 '(or)) g$or-macro$9575$1HvE18 (if (memv g$t$13742$1HvE18 '(and)) g$and-macro$9576$1HvE18 (if (memv g$t$13742$1HvE18 '(let*)) g$let*-macro$9574$1HvE18 (if (memv g$t$13742$1HvE18 '(let-values)) g$let-values-macro$9561$1HvE18 (if (memv g$t$13742$1HvE18 '(let*-values)) g$let*-values-macro$9562$1HvE18 (if (memv g$t$13742$1HvE18 '(syntax-rules)) g$syntax-rules-macro$9581$1HvE18 (if (memv g$t$13742$1HvE18 '(quasiquote)) g$quasiquote-macro$9582$1HvE18 (if (memv g$t$13742$1HvE18 '(quasisyntax)) g$quasisyntax-macro$9583$1HvE18 (if (memv g$t$13742$1HvE18 '(with-syntax)) g$with-syntax-macro$9558$1HvE18 (if (memv g$t$13742$1HvE18 '(identifier-syntax)) g$identifier-syntax-macro$9572$1HvE18 (if (memv g$t$13742$1HvE18 '(time)) g$time-macro$9568$1HvE18 (if (memv g$t$13742$1HvE18 '(delay)) g$delay-macro$9569$1HvE18 (if (memv g$t$13742$1HvE18 '(assert)) g$assert-macro$9570$1HvE18 (if (memv g$t$13742$1HvE18 '(endianness)) g$endianness-macro$9571$1HvE18 (if (memv g$t$13742$1HvE18 '(guard)) g$guard-macro$9566$1HvE18 (if (memv g$t$13742$1HvE18 '(define-enumeration)) g$define-enumeration-macro$9567$1HvE18 (if (memv g$t$13742$1HvE18 '(trace-lambda)) g$trace-lambda-macro$9563$1HvE18 (if (memv g$t$13742$1HvE18 '(trace-define)) g$trace-define-macro$9564$1HvE18 (if (memv g$t$13742$1HvE18 '(trace-define-syntax)) g$trace-define-syntax-macro$9565$1HvE18 (if (memv g$t$13742$1HvE18 '(define-condition-type)) g$define-condition-type-macro$9586$1HvE18 (if (memv g$t$13742$1HvE18 '(include-into)) g$include-into-macro$9580$1HvE18 (if (memv g$t$13742$1HvE18 '(eol-style)) (case-lambda ((g$x$13745$1HvE18) (g$symbol-macro$9598$1HvE18 g$x$13745$1HvE18 '(none lf cr crlf nel crnel ls)))) (if (memv g$t$13742$1HvE18 '(error-handling-mode)) (case-lambda ((g$x$13744$1HvE18) (g$symbol-macro$9598$1HvE18 g$x$13744$1HvE18 '(ignore raise replace)))) (if (memv g$t$13742$1HvE18 '(buffer-mode)) (case-lambda ((g$x$13743$1HvE18) (g$symbol-macro$9598$1HvE18 g$x$13743$1HvE18 '(none line block)))) (if (memv g$t$13742$1HvE18 '(file-options)) g$file-options-macro$9597$1HvE18 (if (memv g$t$13742$1HvE18 '(... => _ else unquote unquote-splicing unsyntax unsyntax-splicing fields mutable immutable parent protocol sealed opaque nongenerative parent-rtd)) g$incorrect-usage-macro$9587$1HvE18 (error 'macro-transformer '"BUG: invalid macro" g$x$13741$1HvE18))))))))))))))))))))))))))))))))))) g$x$13741$1HvE18) (error 'core-macro-transformer '"BUG: invalid macro" g$x$13741$1HvE18)))))) (g$local-macro-transformer$9600$1HvE18 g$local-macro-transformer$15705$1HvE18 (case-lambda ((g$x$13746$1HvE18) (car g$x$13746$1HvE18)))) (g$do-macro-call$9601$1HvE18 g$do-macro-call$15706$1HvE18 (case-lambda ((g$transformer$13747$1HvE18 g$expr$13748$1HvE18) ((case-lambda ((g$out$13749$1HvE18) (begin ((letrec ((g$f$13750$1HvE18 (case-lambda ((g$x$13751$1HvE18) (if (g$stx?$9284$1HvE18 g$x$13751$1HvE18) (void) (if (pair? g$x$13751$1HvE18) (begin (g$f$13750$1HvE18 (car g$x$13751$1HvE18)) (g$f$13750$1HvE18 (cdr g$x$13751$1HvE18))) (if (vector? g$x$13751$1HvE18) (vector-for-each g$f$13750$1HvE18 g$x$13751$1HvE18) (if (symbol? g$x$13751$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"raw symbol encountered in output of macro" g$expr$13748$1HvE18 g$x$13751$1HvE18) (void))))))))) g$f$13750$1HvE18) g$out$13749$1HvE18) (g$add-mark$9301$1HvE18 (g$gen-mark$9296$1HvE18) g$out$13749$1HvE18 g$expr$13748$1HvE18)))) (g$transformer$13747$1HvE18 (g$add-mark$9301$1HvE18 g$anti-mark$9297$1HvE18 g$expr$13748$1HvE18 '#f)))))) (g$chi-macro$9602$1HvE18 g$chi-macro$15707$1HvE18 (case-lambda ((g$p$13752$1HvE18 g$e$13753$1HvE18) (g$do-macro-call$9601$1HvE18 (g$macro-transformer$9599$1HvE18 g$p$13752$1HvE18) g$e$13753$1HvE18)))) (g$chi-local-macro$9603$1HvE18 g$chi-local-macro$15708$1HvE18 (case-lambda ((g$p$13754$1HvE18 g$e$13755$1HvE18) (g$do-macro-call$9601$1HvE18 (g$local-macro-transformer$9600$1HvE18 g$p$13754$1HvE18) g$e$13755$1HvE18)))) (g$chi-global-macro$9604$1HvE18 g$chi-global-macro$15709$1HvE18 (case-lambda ((g$p$13756$1HvE18 g$e$13757$1HvE18) ((case-lambda ((g$lib$13758$1HvE18 g$loc$13759$1HvE18) (begin (g$visit-library$9129$1HvE18 g$lib$13758$1HvE18) ((case-lambda ((g$x$13760$1HvE18) ((case-lambda ((g$transformer$13761$1HvE18) (g$do-macro-call$9601$1HvE18 g$transformer$13761$1HvE18 g$e$13757$1HvE18))) (if (procedure? g$x$13760$1HvE18) g$x$13760$1HvE18 (assertion-violation 'chi-global-macro '"BUG: not a procedure" g$x$13760$1HvE18))))) (symbol-value g$loc$13759$1HvE18))))) (car g$p$13756$1HvE18) (cdr g$p$13756$1HvE18))))) (g$chi-expr*$9605$1HvE18 g$chi-expr*$15710$1HvE18 (case-lambda ((g$e*$13762$1HvE18 g$r$13763$1HvE18 g$mr$13764$1HvE18) (if (null? g$e*$13762$1HvE18) '() ((case-lambda ((g$e$13765$1HvE18) (cons g$e$13765$1HvE18 (g$chi-expr*$9605$1HvE18 (cdr g$e*$13762$1HvE18) g$r$13763$1HvE18 g$mr$13764$1HvE18)))) (g$chi-expr$9607$1HvE18 (car g$e*$13762$1HvE18) g$r$13763$1HvE18 g$mr$13764$1HvE18)))))) (g$chi-application$9606$1HvE18 g$chi-application$15711$1HvE18 (case-lambda ((g$e$13766$1HvE18 g$r$13767$1HvE18 g$mr$13768$1HvE18) ((case-lambda ((g$t$13769$1HvE18) ((case-lambda ((g$ls/false$13770$1HvE18) (if (if g$ls/false$13770$1HvE18 (begin '#f (apply (case-lambda ((g$rator$13771$1HvE18 g$rands$13772$1HvE18) '#t)) g$ls/false$13770$1HvE18)) '#f) (apply (case-lambda ((g$rator$13773$1HvE18 g$rands$13774$1HvE18) ((case-lambda ((g$rator$13775$1HvE18) (cons g$rator$13775$1HvE18 (g$chi-expr*$9605$1HvE18 g$rands$13774$1HvE18 g$r$13767$1HvE18 g$mr$13768$1HvE18)))) (g$chi-expr$9607$1HvE18 g$rator$13773$1HvE18 g$r$13767$1HvE18 g$mr$13768$1HvE18)))) g$ls/false$13770$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13769$1HvE18)))) ((case-lambda ((g$x$13776$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13776$1HvE18) (begin '#f ((case-lambda ((g$q$13777$1HvE18) (if g$q$13777$1HvE18 (begin '#f ((case-lambda ((g$r$13778$1HvE18) (if g$r$13778$1HvE18 (begin '#f (append g$q$13777$1HvE18 g$r$13778$1HvE18)) '#f))) ((letrec ((g$f$13779$1HvE18 (case-lambda ((g$x$13780$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13780$1HvE18) ((case-lambda ((g$cars/f$13781$1HvE18) (if g$cars/f$13781$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13782$1HvE18) (if g$cdrs/f$13782$1HvE18 (begin '#f (map cons g$cars/f$13781$1HvE18 g$cdrs/f$13782$1HvE18)) '#f))) (g$f$13779$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13780$1HvE18)))) '#f))) ((case-lambda ((g$x$13783$1HvE18) (list g$x$13783$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13780$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13780$1HvE18) (list (begin 'rands '())) '#f)))))) g$f$13779$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$13776$1HvE18)))) '#f))) ((case-lambda ((g$x$13784$1HvE18) (list g$x$13784$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13776$1HvE18)))) '#f))) g$t$13769$1HvE18)))) g$e$13766$1HvE18)))) (g$chi-expr$9607$1HvE18 g$chi-expr$15712$1HvE18 (case-lambda ((g$e$13785$1HvE18 g$r$13786$1HvE18 g$mr$13787$1HvE18) (call-with-values (case-lambda (() (g$syntax-type$9331$1HvE18 g$e$13785$1HvE18 g$r$13786$1HvE18))) (case-lambda ((g$type$13791$1HvE18 g$value$13792$1HvE18 g$kwd$13793$1HvE18) ((case-lambda ((g$kwd$13794$1HvE18 g$value$13795$1HvE18 g$type$13796$1HvE18) ((case-lambda ((g$t$13797$1HvE18) (if (memv g$t$13797$1HvE18 '(core-macro)) ((case-lambda ((g$transformer$13867$1HvE18) (g$transformer$13867$1HvE18 g$e$13785$1HvE18 g$r$13786$1HvE18 g$mr$13787$1HvE18))) (g$core-macro-transformer$9596$1HvE18 g$value$13795$1HvE18)) (if (memv g$t$13797$1HvE18 '(global)) ((case-lambda ((g$lib$13865$1HvE18) ((case-lambda ((g$loc$13866$1HvE18) ((case-lambda (() (begin ((g$inv-collector$9641$1HvE18) g$lib$13865$1HvE18) g$loc$13866$1HvE18)))))) (cdr g$value$13795$1HvE18)))) (car g$value$13795$1HvE18)) (if (memv g$t$13797$1HvE18 '(core-prim)) ((case-lambda ((g$name$13864$1HvE18) (list 'primitive g$name$13864$1HvE18))) g$value$13795$1HvE18) (if (memv g$t$13797$1HvE18 '(call)) (g$chi-application$9606$1HvE18 g$e$13785$1HvE18 g$r$13786$1HvE18 g$mr$13787$1HvE18) (if (memv g$t$13797$1HvE18 '(lexical)) ((case-lambda ((g$lex$13863$1HvE18) g$lex$13863$1HvE18)) (g$lexical-var$9538$1HvE18 g$value$13795$1HvE18)) (if (memv g$t$13797$1HvE18 '(global-macro global-macro!)) (g$chi-expr$9607$1HvE18 (g$chi-global-macro$9604$1HvE18 g$value$13795$1HvE18 g$e$13785$1HvE18) g$r$13786$1HvE18 g$mr$13787$1HvE18) (if (memv g$t$13797$1HvE18 '(local-macro local-macro!)) (g$chi-expr$9607$1HvE18 (g$chi-local-macro$9603$1HvE18 g$value$13795$1HvE18 g$e$13785$1HvE18) g$r$13786$1HvE18 g$mr$13787$1HvE18) (if (memv g$t$13797$1HvE18 '(macro macro!)) (g$chi-expr$9607$1HvE18 (g$chi-macro$9602$1HvE18 g$value$13795$1HvE18 g$e$13785$1HvE18) g$r$13786$1HvE18 g$mr$13787$1HvE18) (if (memv g$t$13797$1HvE18 '(constant)) ((case-lambda ((g$datum$13862$1HvE18) (list 'quote g$datum$13862$1HvE18))) g$value$13795$1HvE18) (if (memv g$t$13797$1HvE18 '(set!)) (g$chi-set!$9608$1HvE18 g$e$13785$1HvE18 g$r$13786$1HvE18 g$mr$13787$1HvE18) (if (memv g$t$13797$1HvE18 '(begin)) ((case-lambda ((g$t$13843$1HvE18) ((case-lambda ((g$ls/false$13844$1HvE18) (if (if g$ls/false$13844$1HvE18 (begin '#f (apply (case-lambda ((g$x$13845$1HvE18 g$x*$13846$1HvE18) '#t)) g$ls/false$13844$1HvE18)) '#f) (apply (case-lambda ((g$x$13847$1HvE18 g$x*$13848$1HvE18) (g$build-sequence$9246$1HvE18 '#f (g$chi-expr*$9605$1HvE18 (cons g$x$13847$1HvE18 g$x*$13848$1HvE18) g$r$13786$1HvE18 g$mr$13787$1HvE18)))) g$ls/false$13844$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13843$1HvE18)))) ((case-lambda ((g$x$13849$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13849$1HvE18) (begin '#f ((case-lambda ((g$q$13850$1HvE18) (if g$q$13850$1HvE18 (begin '#f ((case-lambda ((g$r$13851$1HvE18) (if g$r$13851$1HvE18 (begin '#f (append g$q$13850$1HvE18 g$r$13851$1HvE18)) '#f))) ((case-lambda ((g$x$13852$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13852$1HvE18) (begin '#f ((case-lambda ((g$q$13853$1HvE18) (if g$q$13853$1HvE18 (begin '#f ((case-lambda ((g$r$13854$1HvE18) (if g$r$13854$1HvE18 (begin '#f (append g$q$13853$1HvE18 g$r$13854$1HvE18)) '#f))) ((letrec ((g$f$13855$1HvE18 (case-lambda ((g$x$13856$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13856$1HvE18) ((case-lambda ((g$cars/f$13857$1HvE18) (if g$cars/f$13857$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13858$1HvE18) (if g$cdrs/f$13858$1HvE18 (begin '#f (map cons g$cars/f$13857$1HvE18 g$cdrs/f$13858$1HvE18)) '#f))) (g$f$13855$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13856$1HvE18)))) '#f))) ((case-lambda ((g$x$13859$1HvE18) (list g$x$13859$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13856$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13856$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$13855$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$13852$1HvE18)))) '#f))) ((case-lambda ((g$x$13860$1HvE18) (list g$x$13860$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13852$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13849$1HvE18)))) '#f))) ((case-lambda ((g$x$13861$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$13849$1HvE18)))) '#f))) g$t$13843$1HvE18)))) g$e$13785$1HvE18) (if (memv g$t$13797$1HvE18 '(let-syntax letrec-syntax)) ((case-lambda ((g$t$13799$1HvE18) ((case-lambda ((g$ls/false$13800$1HvE18) (if (if g$ls/false$13800$1HvE18 (begin '#f (apply (case-lambda ((g$xlhs*$13801$1HvE18 g$xrhs*$13802$1HvE18 g$xbody$13803$1HvE18 g$xbody*$13804$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 g$xlhs*$13801$1HvE18) (void) (g$syntax-violation$9695$1HvE18 '#f '"invalid identifiers" g$e$13785$1HvE18)))) g$ls/false$13800$1HvE18)) '#f) (apply (case-lambda ((g$xlhs*$13805$1HvE18 g$xrhs*$13806$1HvE18 g$xbody$13807$1HvE18 g$xbody*$13808$1HvE18) ((case-lambda ((g$xlab*$13809$1HvE18) ((case-lambda ((g$xrib$13810$1HvE18) ((case-lambda ((g$xb*$13811$1HvE18) ((case-lambda (() (g$build-sequence$9246$1HvE18 '#f (g$chi-expr*$9605$1HvE18 (map (case-lambda ((g$x$13812$1HvE18) (g$add-subst$9302$1HvE18 g$xrib$13810$1HvE18 g$x$13812$1HvE18))) (cons g$xbody$13807$1HvE18 g$xbody*$13808$1HvE18)) (append (map cons g$xlab*$13809$1HvE18 g$xb*$13811$1HvE18) g$r$13786$1HvE18) (append (map cons g$xlab*$13809$1HvE18 g$xb*$13811$1HvE18) g$mr$13787$1HvE18)))))))) (map (case-lambda ((g$x$13813$1HvE18) (g$make-eval-transformer$9341$1HvE18 (g$expand-transformer$9634$1HvE18 (if (eq? g$type$13796$1HvE18 'let-syntax) g$x$13813$1HvE18 (g$add-subst$9302$1HvE18 g$xrib$13810$1HvE18 g$x$13813$1HvE18)) g$mr$13787$1HvE18)))) g$xrhs*$13806$1HvE18)))) (g$make-full-rib$9280$1HvE18 g$xlhs*$13805$1HvE18 g$xlab*$13809$1HvE18)))) (map g$gen-label$9258$1HvE18 g$xlhs*$13805$1HvE18)))) g$ls/false$13800$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13799$1HvE18)))) ((case-lambda ((g$x$13814$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13814$1HvE18) (begin '#f ((case-lambda ((g$q$13815$1HvE18) (if g$q$13815$1HvE18 (begin '#f ((case-lambda ((g$r$13816$1HvE18) (if g$r$13816$1HvE18 (begin '#f (append g$q$13815$1HvE18 g$r$13816$1HvE18)) '#f))) ((case-lambda ((g$x$13817$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13817$1HvE18) (begin '#f ((case-lambda ((g$q$13818$1HvE18) (if g$q$13818$1HvE18 (begin '#f ((case-lambda ((g$r$13819$1HvE18) (if g$r$13819$1HvE18 (begin '#f (append g$q$13818$1HvE18 g$r$13819$1HvE18)) '#f))) ((case-lambda ((g$x$13820$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13820$1HvE18) (begin '#f ((case-lambda ((g$q$13821$1HvE18) (if g$q$13821$1HvE18 (begin '#f ((case-lambda ((g$r$13822$1HvE18) (if g$r$13822$1HvE18 (begin '#f (append g$q$13821$1HvE18 g$r$13822$1HvE18)) '#f))) ((letrec ((g$f$13823$1HvE18 (case-lambda ((g$x$13824$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13824$1HvE18) ((case-lambda ((g$cars/f$13825$1HvE18) (if g$cars/f$13825$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13826$1HvE18) (if g$cdrs/f$13826$1HvE18 (begin '#f (map cons g$cars/f$13825$1HvE18 g$cdrs/f$13826$1HvE18)) '#f))) (g$f$13823$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13824$1HvE18)))) '#f))) ((case-lambda ((g$x$13827$1HvE18) (list g$x$13827$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13824$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13824$1HvE18) (list (begin 'xbody* '())) '#f)))))) g$f$13823$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$13820$1HvE18)))) '#f))) ((case-lambda ((g$x$13828$1HvE18) (list g$x$13828$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13820$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13817$1HvE18)))) '#f))) ((letrec ((g$f$13829$1HvE18 (case-lambda ((g$x$13830$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13830$1HvE18) ((case-lambda ((g$cars/f$13831$1HvE18) (if g$cars/f$13831$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13832$1HvE18) (if g$cdrs/f$13832$1HvE18 (begin '#f (map cons g$cars/f$13831$1HvE18 g$cdrs/f$13832$1HvE18)) '#f))) (g$f$13829$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13830$1HvE18)))) '#f))) ((case-lambda ((g$x$13833$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13833$1HvE18) (begin '#f ((case-lambda ((g$q$13834$1HvE18) (if g$q$13834$1HvE18 (begin '#f ((case-lambda ((g$r$13835$1HvE18) (if g$r$13835$1HvE18 (begin '#f (append g$q$13834$1HvE18 g$r$13835$1HvE18)) '#f))) ((case-lambda ((g$x$13836$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13836$1HvE18) (begin '#f ((case-lambda ((g$q$13837$1HvE18) (if g$q$13837$1HvE18 (begin '#f ((case-lambda ((g$r$13838$1HvE18) (if g$r$13838$1HvE18 (begin '#f (append g$q$13837$1HvE18 g$r$13838$1HvE18)) '#f))) ((case-lambda ((g$x$13839$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13839$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13836$1HvE18)))) '#f))) ((case-lambda ((g$x$13840$1HvE18) (list g$x$13840$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13836$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13833$1HvE18)))) '#f))) ((case-lambda ((g$x$13841$1HvE18) (list g$x$13841$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13833$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$13830$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13830$1HvE18) (list (begin 'xlhs* '()) (begin 'xrhs* '())) '#f)))))) g$f$13829$1HvE18) (g$syntax-car$9309$1HvE18 g$x$13817$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13814$1HvE18)))) '#f))) ((case-lambda ((g$x$13842$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$13814$1HvE18)))) '#f))) g$t$13799$1HvE18)))) g$e$13785$1HvE18) (if (memv g$t$13797$1HvE18 '(displaced-lexical)) (g$syntax-violation$9695$1HvE18 '#f '"identifier out of context" g$e$13785$1HvE18) (if (memv g$t$13797$1HvE18 '(syntax)) (g$syntax-violation$9695$1HvE18 '#f '"reference to pattern variable outside a syntax form" g$e$13785$1HvE18) (if (memv g$t$13797$1HvE18 '(define define-syntax module import library)) (g$syntax-violation$9695$1HvE18 '#f (string-append ((case-lambda ((g$t$13798$1HvE18) (if (memv g$t$13798$1HvE18 '(define)) '"a definition" (if (memv g$t$13798$1HvE18 '(define-syntax)) '"a define-syntax" (if (memv g$t$13798$1HvE18 '(module)) '"a module definition" (if (memv g$t$13798$1HvE18 '(library)) '"a library definition" (if (memv g$t$13798$1HvE18 '(import)) '"an import declaration" '"a non-expression"))))))) g$type$13796$1HvE18) '" was found where an expression was expected") g$e$13785$1HvE18) (if (memv g$t$13797$1HvE18 '(mutable)) (g$syntax-violation$9695$1HvE18 '#f '"attempt to reference an unexportable variable" g$e$13785$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid expression" g$e$13785$1HvE18))))))))))))))))))) g$type$13796$1HvE18))) g$kwd$13793$1HvE18 g$value$13792$1HvE18 g$type$13791$1HvE18))))))) (g$chi-set!$9608$1HvE18 g$chi-set!$15713$1HvE18 (case-lambda ((g$e$13868$1HvE18 g$r$13869$1HvE18 g$mr$13870$1HvE18) ((case-lambda ((g$t$13871$1HvE18) ((case-lambda ((g$ls/false$13872$1HvE18) (if (if g$ls/false$13872$1HvE18 (begin '#f (apply (case-lambda ((g$x$13873$1HvE18 g$v$13874$1HvE18) (g$id?$9312$1HvE18 g$x$13873$1HvE18))) g$ls/false$13872$1HvE18)) '#f) (apply (case-lambda ((g$x$13875$1HvE18 g$v$13876$1HvE18) (call-with-values (case-lambda (() (g$syntax-type$9331$1HvE18 g$x$13875$1HvE18 g$r$13869$1HvE18))) (case-lambda ((g$type$13880$1HvE18 g$value$13881$1HvE18 g$kwd$13882$1HvE18) ((case-lambda ((g$kwd$13883$1HvE18 g$value$13884$1HvE18 g$type$13885$1HvE18) ((case-lambda ((g$t$13886$1HvE18) (if (memv g$t$13886$1HvE18 '(lexical)) (begin (g$set-lexical-mutable!$9540$1HvE18 g$value$13884$1HvE18 '#t) (list 'set! (g$lexical-var$9538$1HvE18 g$value$13884$1HvE18) (g$chi-expr$9607$1HvE18 g$v$13876$1HvE18 g$r$13869$1HvE18 g$mr$13870$1HvE18))) (if (memv g$t$13886$1HvE18 '(core-prim)) (g$syntax-violation$9695$1HvE18 '#f '"cannot modify imported core primitive" g$e$13868$1HvE18) (if (memv g$t$13886$1HvE18 '(global)) (g$syntax-violation$9695$1HvE18 '#f '"attempt to modify imported binding" g$e$13868$1HvE18) (if (memv g$t$13886$1HvE18 '(global-macro!)) (g$chi-expr$9607$1HvE18 (g$chi-global-macro$9604$1HvE18 g$value$13884$1HvE18 g$e$13868$1HvE18) g$r$13869$1HvE18 g$mr$13870$1HvE18) (if (memv g$t$13886$1HvE18 '(local-macro!)) (g$chi-expr$9607$1HvE18 (g$chi-local-macro$9603$1HvE18 g$value$13884$1HvE18 g$e$13868$1HvE18) g$r$13869$1HvE18 g$mr$13870$1HvE18) (if (memv g$t$13886$1HvE18 '(mutable)) (g$syntax-violation$9695$1HvE18 '#f '"attempt to assign to an unexportable variable" g$e$13868$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$e$13868$1HvE18))))))))) g$type$13885$1HvE18))) g$kwd$13882$1HvE18 g$value$13881$1HvE18 g$type$13880$1HvE18)))))) g$ls/false$13872$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13871$1HvE18)))) ((case-lambda ((g$x$13887$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13887$1HvE18) (begin '#f ((case-lambda ((g$q$13888$1HvE18) (if g$q$13888$1HvE18 (begin '#f ((case-lambda ((g$r$13889$1HvE18) (if g$r$13889$1HvE18 (begin '#f (append g$q$13888$1HvE18 g$r$13889$1HvE18)) '#f))) ((case-lambda ((g$x$13890$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13890$1HvE18) (begin '#f ((case-lambda ((g$q$13891$1HvE18) (if g$q$13891$1HvE18 (begin '#f ((case-lambda ((g$r$13892$1HvE18) (if g$r$13892$1HvE18 (begin '#f (append g$q$13891$1HvE18 g$r$13892$1HvE18)) '#f))) ((case-lambda ((g$x$13893$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13893$1HvE18) (begin '#f ((case-lambda ((g$q$13894$1HvE18) (if g$q$13894$1HvE18 (begin '#f ((case-lambda ((g$r$13895$1HvE18) (if g$r$13895$1HvE18 (begin '#f (append g$q$13894$1HvE18 g$r$13895$1HvE18)) '#f))) ((case-lambda ((g$x$13896$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$13896$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13893$1HvE18)))) '#f))) ((case-lambda ((g$x$13897$1HvE18) (list g$x$13897$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13893$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13890$1HvE18)))) '#f))) ((case-lambda ((g$x$13898$1HvE18) (list g$x$13898$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13890$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$13887$1HvE18)))) '#f))) ((case-lambda ((g$x$13899$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$13887$1HvE18)))) '#f))) g$t$13871$1HvE18)))) g$e$13868$1HvE18)))) (g$verify-formals$9609$1HvE18 g$verify-formals$15714$1HvE18 (case-lambda ((g$fmls$13900$1HvE18 g$stx$13901$1HvE18) ((case-lambda ((g$t$13902$1HvE18) ((case-lambda ((g$ls/false$13903$1HvE18) (if (if g$ls/false$13903$1HvE18 (begin '#f (apply (case-lambda ((g$x*$13904$1HvE18) '#t)) g$ls/false$13903$1HvE18)) '#f) (apply (case-lambda ((g$x*$13905$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 g$x*$13905$1HvE18) (void) (g$invalid-fmls-error$9559$1HvE18 g$stx$13901$1HvE18 g$fmls$13900$1HvE18)))) g$ls/false$13903$1HvE18) ((case-lambda ((g$t$13906$1HvE18) ((case-lambda ((g$ls/false$13907$1HvE18) (if (if g$ls/false$13907$1HvE18 (begin '#f (apply (case-lambda ((g$x*$13908$1HvE18 g$x$13909$1HvE18) '#t)) g$ls/false$13907$1HvE18)) '#f) (apply (case-lambda ((g$x*$13910$1HvE18 g$x$13911$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 (cons g$x$13911$1HvE18 g$x*$13910$1HvE18)) (void) (g$invalid-fmls-error$9559$1HvE18 g$stx$13901$1HvE18 g$fmls$13900$1HvE18)))) g$ls/false$13907$1HvE18) ((case-lambda ((g$t$13912$1HvE18) ((case-lambda ((g$ls/false$13913$1HvE18) (if (if g$ls/false$13913$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$13913$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$stx$13901$1HvE18))) g$ls/false$13913$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13912$1HvE18)))) ((case-lambda ((g$x$13914$1HvE18) '())) g$t$13912$1HvE18)))) g$t$13906$1HvE18)))) ((letrec ((g$f$13915$1HvE18 (case-lambda ((g$x$13918$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13918$1HvE18) ((case-lambda ((g$cars/f$13919$1HvE18) (if g$cars/f$13919$1HvE18 (begin '#f ((case-lambda ((g$d/f$13920$1HvE18) (if g$d/f$13920$1HvE18 (begin '#f (cons (map cons g$cars/f$13919$1HvE18 (car g$d/f$13920$1HvE18)) (cdr g$d/f$13920$1HvE18))) '#f))) (g$f$13915$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13918$1HvE18)))) '#f))) ((case-lambda ((g$x$13921$1HvE18) (list g$x$13921$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13918$1HvE18))) ((case-lambda ((g$d$13922$1HvE18) (if g$d$13922$1HvE18 (begin '#f (cons (list (begin 'x* '())) g$d$13922$1HvE18)) '#f))) ((case-lambda ((g$x$13923$1HvE18) (list g$x$13923$1HvE18))) g$x$13918$1HvE18))))))) (case-lambda ((g$x$13916$1HvE18) ((case-lambda ((g$x$13917$1HvE18) (if g$x$13917$1HvE18 (begin '#f (append (car g$x$13917$1HvE18) (cdr g$x$13917$1HvE18))) '#f))) (g$f$13915$1HvE18 g$x$13916$1HvE18))))) g$t$13906$1HvE18)))) g$t$13902$1HvE18)))) ((letrec ((g$f$13924$1HvE18 (case-lambda ((g$x$13925$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13925$1HvE18) ((case-lambda ((g$cars/f$13926$1HvE18) (if g$cars/f$13926$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13927$1HvE18) (if g$cdrs/f$13927$1HvE18 (begin '#f (map cons g$cars/f$13926$1HvE18 g$cdrs/f$13927$1HvE18)) '#f))) (g$f$13924$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13925$1HvE18)))) '#f))) ((case-lambda ((g$x$13928$1HvE18) (list g$x$13928$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13925$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13925$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$13924$1HvE18) g$t$13902$1HvE18)))) g$fmls$13900$1HvE18)))) (g$chi-lambda-clause$9610$1HvE18 g$chi-lambda-clause$15715$1HvE18 (case-lambda ((g$stx$13929$1HvE18 g$fmls$13930$1HvE18 g$body*$13931$1HvE18 g$r$13932$1HvE18 g$mr$13933$1HvE18) ((case-lambda ((g$t$13934$1HvE18) ((case-lambda ((g$ls/false$13935$1HvE18) (if (if g$ls/false$13935$1HvE18 (begin '#f (apply (case-lambda ((g$x*$13936$1HvE18) '#t)) g$ls/false$13935$1HvE18)) '#f) (apply (case-lambda ((g$x*$13937$1HvE18) (begin (g$verify-formals$9609$1HvE18 g$fmls$13930$1HvE18 g$stx$13929$1HvE18) ((case-lambda ((g$lex*$13938$1HvE18 g$lab*$13939$1HvE18) (values g$lex*$13938$1HvE18 (g$chi-internal$9618$1HvE18 (g$add-subst$9302$1HvE18 (g$make-full-rib$9280$1HvE18 g$x*$13937$1HvE18 g$lab*$13939$1HvE18) g$body*$13931$1HvE18) (g$add-lexicals$9542$1HvE18 g$lab*$13939$1HvE18 g$lex*$13938$1HvE18 g$r$13932$1HvE18) g$mr$13933$1HvE18)))) (map g$gen-lexical$9256$1HvE18 g$x*$13937$1HvE18) (map g$gen-label$9258$1HvE18 g$x*$13937$1HvE18))))) g$ls/false$13935$1HvE18) ((case-lambda ((g$t$13940$1HvE18) ((case-lambda ((g$ls/false$13941$1HvE18) (if (if g$ls/false$13941$1HvE18 (begin '#f (apply (case-lambda ((g$x*$13942$1HvE18 g$x$13943$1HvE18) '#t)) g$ls/false$13941$1HvE18)) '#f) (apply (case-lambda ((g$x*$13944$1HvE18 g$x$13945$1HvE18) (begin (g$verify-formals$9609$1HvE18 g$fmls$13930$1HvE18 g$stx$13929$1HvE18) ((case-lambda ((g$lex*$13946$1HvE18 g$lab*$13947$1HvE18 g$lex$13948$1HvE18 g$lab$13949$1HvE18) (values (append g$lex*$13946$1HvE18 g$lex$13948$1HvE18) (g$chi-internal$9618$1HvE18 (g$add-subst$9302$1HvE18 (g$make-full-rib$9280$1HvE18 (cons g$x$13945$1HvE18 g$x*$13944$1HvE18) (cons g$lab$13949$1HvE18 g$lab*$13947$1HvE18)) g$body*$13931$1HvE18) (g$add-lexicals$9542$1HvE18 (cons g$lab$13949$1HvE18 g$lab*$13947$1HvE18) (cons g$lex$13948$1HvE18 g$lex*$13946$1HvE18) g$r$13932$1HvE18) g$mr$13933$1HvE18)))) (map g$gen-lexical$9256$1HvE18 g$x*$13944$1HvE18) (map g$gen-label$9258$1HvE18 g$x*$13944$1HvE18) (g$gen-lexical$9256$1HvE18 g$x$13945$1HvE18) (g$gen-label$9258$1HvE18 g$x$13945$1HvE18))))) g$ls/false$13941$1HvE18) ((case-lambda ((g$t$13950$1HvE18) ((case-lambda ((g$ls/false$13951$1HvE18) (if (if g$ls/false$13951$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$13951$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$fmls$13930$1HvE18))) g$ls/false$13951$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$13950$1HvE18)))) ((case-lambda ((g$x$13952$1HvE18) '())) g$t$13950$1HvE18)))) g$t$13940$1HvE18)))) ((letrec ((g$f$13953$1HvE18 (case-lambda ((g$x$13956$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13956$1HvE18) ((case-lambda ((g$cars/f$13957$1HvE18) (if g$cars/f$13957$1HvE18 (begin '#f ((case-lambda ((g$d/f$13958$1HvE18) (if g$d/f$13958$1HvE18 (begin '#f (cons (map cons g$cars/f$13957$1HvE18 (car g$d/f$13958$1HvE18)) (cdr g$d/f$13958$1HvE18))) '#f))) (g$f$13953$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13956$1HvE18)))) '#f))) ((case-lambda ((g$x$13959$1HvE18) (list g$x$13959$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13956$1HvE18))) ((case-lambda ((g$d$13960$1HvE18) (if g$d$13960$1HvE18 (begin '#f (cons (list (begin 'x* '())) g$d$13960$1HvE18)) '#f))) ((case-lambda ((g$x$13961$1HvE18) (list g$x$13961$1HvE18))) g$x$13956$1HvE18))))))) (case-lambda ((g$x$13954$1HvE18) ((case-lambda ((g$x$13955$1HvE18) (if g$x$13955$1HvE18 (begin '#f (append (car g$x$13955$1HvE18) (cdr g$x$13955$1HvE18))) '#f))) (g$f$13953$1HvE18 g$x$13954$1HvE18))))) g$t$13940$1HvE18)))) g$t$13934$1HvE18)))) ((letrec ((g$f$13962$1HvE18 (case-lambda ((g$x$13963$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$13963$1HvE18) ((case-lambda ((g$cars/f$13964$1HvE18) (if g$cars/f$13964$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$13965$1HvE18) (if g$cdrs/f$13965$1HvE18 (begin '#f (map cons g$cars/f$13964$1HvE18 g$cdrs/f$13965$1HvE18)) '#f))) (g$f$13962$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$13963$1HvE18)))) '#f))) ((case-lambda ((g$x$13966$1HvE18) (list g$x$13966$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$13963$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$13963$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$13962$1HvE18) g$t$13934$1HvE18)))) g$fmls$13930$1HvE18)))) (g$chi-lambda-clause*$9611$1HvE18 g$chi-lambda-clause*$15716$1HvE18 (case-lambda ((g$stx$13967$1HvE18 g$fmls*$13968$1HvE18 g$body**$13969$1HvE18 g$r$13970$1HvE18 g$mr$13971$1HvE18) (if (null? g$fmls*$13968$1HvE18) (values '() '()) (call-with-values (case-lambda (() (g$chi-lambda-clause$9610$1HvE18 g$stx$13967$1HvE18 (car g$fmls*$13968$1HvE18) (car g$body**$13969$1HvE18) g$r$13970$1HvE18 g$mr$13971$1HvE18))) (case-lambda ((g$a$13974$1HvE18 g$b$13975$1HvE18) ((case-lambda ((g$b$13976$1HvE18 g$a$13977$1HvE18) (call-with-values (case-lambda (() (g$chi-lambda-clause*$9611$1HvE18 g$stx$13967$1HvE18 (cdr g$fmls*$13968$1HvE18) (cdr g$body**$13969$1HvE18) g$r$13970$1HvE18 g$mr$13971$1HvE18))) (case-lambda ((g$a*$13980$1HvE18 g$b*$13981$1HvE18) ((case-lambda ((g$b*$13982$1HvE18 g$a*$13983$1HvE18) (values (cons g$a$13977$1HvE18 g$a*$13983$1HvE18) (cons g$b$13976$1HvE18 g$b*$13982$1HvE18)))) g$b*$13981$1HvE18 g$a*$13980$1HvE18)))))) g$b$13975$1HvE18 g$a$13974$1HvE18)))))))) (g$chi-defun$9612$1HvE18 g$chi-defun$15717$1HvE18 (case-lambda ((g$x$13984$1HvE18 g$r$13985$1HvE18 g$mr$13986$1HvE18) ((case-lambda ((g$fmls$13987$1HvE18 g$body*$13988$1HvE18) (call-with-values (case-lambda (() (g$chi-lambda-clause$9610$1HvE18 g$fmls$13987$1HvE18 g$fmls$13987$1HvE18 g$body*$13988$1HvE18 g$r$13985$1HvE18 g$mr$13986$1HvE18))) (case-lambda ((g$fmls$13991$1HvE18 g$body$13992$1HvE18) ((case-lambda ((g$body$13993$1HvE18 g$fmls$13994$1HvE18) (g$build-lambda$9243$1HvE18 '#f g$fmls$13994$1HvE18 g$body$13993$1HvE18))) g$body$13992$1HvE18 g$fmls$13991$1HvE18)))))) (car g$x$13984$1HvE18) (cdr g$x$13984$1HvE18))))) (g$chi-rhs$9613$1HvE18 g$chi-rhs$15718$1HvE18 (case-lambda ((g$rhs$13995$1HvE18 g$r$13996$1HvE18 g$mr$13997$1HvE18) ((case-lambda ((g$t$13998$1HvE18) (if (memv g$t$13998$1HvE18 '(defun)) (g$chi-defun$9612$1HvE18 (cdr g$rhs$13995$1HvE18) g$r$13996$1HvE18 g$mr$13997$1HvE18) (if (memv g$t$13998$1HvE18 '(expr)) ((case-lambda ((g$expr$14000$1HvE18) (g$chi-expr$9607$1HvE18 g$expr$14000$1HvE18 g$r$13996$1HvE18 g$mr$13997$1HvE18))) (cdr g$rhs$13995$1HvE18)) (if (memv g$t$13998$1HvE18 '(top-expr)) ((case-lambda ((g$expr$13999$1HvE18) (g$build-sequence$9246$1HvE18 '#f (list (g$chi-expr$9607$1HvE18 g$expr$13999$1HvE18 g$r$13996$1HvE18 g$mr$13997$1HvE18) (g$build-void$9247$1HvE18))))) (cdr g$rhs$13995$1HvE18)) (assertion-violation 'chi-rhs '"BUG: invalid rhs" g$rhs$13995$1HvE18)))))) (car g$rhs$13995$1HvE18))))) (g$expand-interaction-rhs*/init*$9614$1HvE18 g$expand-interaction-rhs*/init*$15719$1HvE18 (case-lambda ((g$lhs*$14001$1HvE18 g$rhs*$14002$1HvE18 g$init*$14003$1HvE18 g$r$14004$1HvE18 g$mr$14005$1HvE18) ((letrec ((g$f$14006$1HvE18 (case-lambda ((g$lhs*$14007$1HvE18 g$rhs*$14008$1HvE18) (if (null? g$lhs*$14007$1HvE18) (map (case-lambda ((g$x$14009$1HvE18) (g$chi-expr$9607$1HvE18 g$x$14009$1HvE18 g$r$14004$1HvE18 g$mr$14005$1HvE18))) g$init*$14003$1HvE18) ((case-lambda ((g$lhs$14010$1HvE18 g$rhs$14011$1HvE18) ((case-lambda ((g$t$14012$1HvE18) (if (memv g$t$14012$1HvE18 '(defun)) ((case-lambda ((g$rhs$14015$1HvE18) (cons (list 'set! g$lhs$14010$1HvE18 g$rhs$14015$1HvE18) (g$f$14006$1HvE18 (cdr g$lhs*$14007$1HvE18) (cdr g$rhs*$14008$1HvE18))))) (g$chi-defun$9612$1HvE18 (cdr g$rhs$14011$1HvE18) g$r$14004$1HvE18 g$mr$14005$1HvE18)) (if (memv g$t$14012$1HvE18 '(expr)) ((case-lambda ((g$rhs$14014$1HvE18) (cons (list 'set! g$lhs$14010$1HvE18 g$rhs$14014$1HvE18) (g$f$14006$1HvE18 (cdr g$lhs*$14007$1HvE18) (cdr g$rhs*$14008$1HvE18))))) (g$chi-expr$9607$1HvE18 (cdr g$rhs$14011$1HvE18) g$r$14004$1HvE18 g$mr$14005$1HvE18)) (if (memv g$t$14012$1HvE18 '(top-expr)) ((case-lambda ((g$e$14013$1HvE18) (cons g$e$14013$1HvE18 (g$f$14006$1HvE18 (cdr g$lhs*$14007$1HvE18) (cdr g$rhs*$14008$1HvE18))))) (g$chi-expr$9607$1HvE18 (cdr g$rhs$14011$1HvE18) g$r$14004$1HvE18 g$mr$14005$1HvE18)) (error 'expand-interaction '"invallid" g$rhs$14011$1HvE18)))))) (car g$rhs$14011$1HvE18)))) (car g$lhs*$14007$1HvE18) (car g$rhs*$14008$1HvE18))))))) g$f$14006$1HvE18) g$lhs*$14001$1HvE18 g$rhs*$14002$1HvE18)))) (g$chi-rhs*$9615$1HvE18 g$chi-rhs*$15720$1HvE18 (case-lambda ((g$rhs*$14016$1HvE18 g$r$14017$1HvE18 g$mr$14018$1HvE18) ((letrec ((g$f$14019$1HvE18 (case-lambda ((g$ls$14020$1HvE18) (if (null? g$ls$14020$1HvE18) '() ((case-lambda ((g$a$14021$1HvE18) (cons g$a$14021$1HvE18 (g$f$14019$1HvE18 (cdr g$ls$14020$1HvE18))))) (g$chi-rhs$9613$1HvE18 (car g$ls$14020$1HvE18) g$r$14017$1HvE18 g$mr$14018$1HvE18))))))) g$f$14019$1HvE18) g$rhs*$14016$1HvE18)))) (g$find-bound=?$9616$1HvE18 g$find-bound=?$15721$1HvE18 (case-lambda ((g$x$14022$1HvE18 g$lhs*$14023$1HvE18 g$rhs*$14024$1HvE18) (if (null? g$lhs*$14023$1HvE18) '#f (if (g$bound-id=?$9315$1HvE18 g$x$14022$1HvE18 (car g$lhs*$14023$1HvE18)) (car g$rhs*$14024$1HvE18) (g$find-bound=?$9616$1HvE18 g$x$14022$1HvE18 (cdr g$lhs*$14023$1HvE18) (cdr g$rhs*$14024$1HvE18))))))) (g$find-dups$9617$1HvE18 g$find-dups$15722$1HvE18 (case-lambda ((g$ls$14025$1HvE18) ((letrec ((g$f$14026$1HvE18 (case-lambda ((g$ls$14027$1HvE18 g$dups$14028$1HvE18) (if (null? g$ls$14027$1HvE18) g$dups$14028$1HvE18 ((case-lambda ((g$t$14029$1HvE18) (if g$t$14029$1HvE18 ((case-lambda ((g$x$14030$1HvE18) (g$f$14026$1HvE18 (cdr g$ls$14027$1HvE18) (cons (list (car g$ls$14027$1HvE18) g$x$14030$1HvE18) g$dups$14028$1HvE18)))) g$t$14029$1HvE18) (g$f$14026$1HvE18 (cdr g$ls$14027$1HvE18) g$dups$14028$1HvE18)))) (g$find-bound=?$9616$1HvE18 (car g$ls$14027$1HvE18) (cdr g$ls$14027$1HvE18) (cdr g$ls$14027$1HvE18)))))))) g$f$14026$1HvE18) g$ls$14025$1HvE18 '())))) (g$chi-internal$9618$1HvE18 g$chi-internal$15723$1HvE18 (case-lambda ((g$e*$14031$1HvE18 g$r$14032$1HvE18 g$mr$14033$1HvE18) ((case-lambda ((g$rib$14034$1HvE18) (call-with-values (case-lambda (() (g$chi-body*$9633$1HvE18 (map (case-lambda ((g$x$14042$1HvE18) (g$add-subst$9302$1HvE18 g$rib$14034$1HvE18 g$x$14042$1HvE18))) (g$syntax->list$9311$1HvE18 g$e*$14031$1HvE18)) g$r$14032$1HvE18 g$mr$14033$1HvE18 '() '() '() '() g$rib$14034$1HvE18 '#f))) (case-lambda ((g$e*$14043$1HvE18 g$r$14044$1HvE18 g$mr$14045$1HvE18 g$lex*$14046$1HvE18 g$rhs*$14047$1HvE18 g$mod**$14048$1HvE18 g$kwd*$14049$1HvE18) ((case-lambda ((g$kwd*$14050$1HvE18 g$mod**$14051$1HvE18 g$rhs*$14052$1HvE18 g$lex*$14053$1HvE18 g$mr$14054$1HvE18 g$r$14055$1HvE18 g$e*$14056$1HvE18) (begin (if (null? g$e*$14056$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"no expression in body" g$e*$14056$1HvE18) (void)) ((case-lambda ((g$init*$14057$1HvE18) ((case-lambda ((g$rhs*$14058$1HvE18) ((case-lambda (() (g$build-letrec*$9249$1HvE18 '#f (reverse g$lex*$14053$1HvE18) (reverse g$rhs*$14058$1HvE18) (g$build-sequence$9246$1HvE18 '#f g$init*$14057$1HvE18))))))) (g$chi-rhs*$9615$1HvE18 g$rhs*$14052$1HvE18 g$r$14055$1HvE18 g$mr$14054$1HvE18)))) (g$chi-expr*$9605$1HvE18 (append (apply append (reverse g$mod**$14051$1HvE18)) g$e*$14056$1HvE18) g$r$14055$1HvE18 g$mr$14054$1HvE18))))) g$kwd*$14049$1HvE18 g$mod**$14048$1HvE18 g$rhs*$14047$1HvE18 g$lex*$14046$1HvE18 g$mr$14045$1HvE18 g$r$14044$1HvE18 g$e*$14043$1HvE18)))))) (g$make-empty-rib$9275$1HvE18))))) (g$parse-module$9619$1HvE18 g$parse-module$15724$1HvE18 (case-lambda ((g$e$14059$1HvE18) ((case-lambda ((g$t$14060$1HvE18) ((case-lambda ((g$ls/false$14061$1HvE18) (if (if g$ls/false$14061$1HvE18 (begin '#f (apply (case-lambda ((g$export*$14062$1HvE18 g$b*$14063$1HvE18) '#t)) g$ls/false$14061$1HvE18)) '#f) (apply (case-lambda ((g$export*$14064$1HvE18 g$b*$14065$1HvE18) (begin (if (g$for-all$7965$1HvE18 g$id?$9312$1HvE18 g$export*$14064$1HvE18) (void) (g$syntax-violation$9695$1HvE18 '#f '"module exports must be identifiers" g$e$14059$1HvE18)) (values '#f (list->vector g$export*$14064$1HvE18) g$b*$14065$1HvE18)))) g$ls/false$14061$1HvE18) ((case-lambda ((g$t$14066$1HvE18) ((case-lambda ((g$ls/false$14067$1HvE18) (if (if g$ls/false$14067$1HvE18 (begin '#f (apply (case-lambda ((g$name$14068$1HvE18 g$export*$14069$1HvE18 g$b*$14070$1HvE18) '#t)) g$ls/false$14067$1HvE18)) '#f) (apply (case-lambda ((g$name$14071$1HvE18 g$export*$14072$1HvE18 g$b*$14073$1HvE18) (begin (if (g$id?$9312$1HvE18 g$name$14071$1HvE18) (void) (g$syntax-violation$9695$1HvE18 '#f '"module name must be an identifier" g$e$14059$1HvE18)) (if (g$for-all$7965$1HvE18 g$id?$9312$1HvE18 g$export*$14072$1HvE18) (void) (g$syntax-violation$9695$1HvE18 '#f '"module exports must be identifiers" g$e$14059$1HvE18)) (values g$name$14071$1HvE18 (list->vector g$export*$14072$1HvE18) g$b*$14073$1HvE18)))) g$ls/false$14067$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14066$1HvE18)))) ((case-lambda ((g$x$14074$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14074$1HvE18) (begin '#f ((case-lambda ((g$q$14075$1HvE18) (if g$q$14075$1HvE18 (begin '#f ((case-lambda ((g$r$14076$1HvE18) (if g$r$14076$1HvE18 (begin '#f (append g$q$14075$1HvE18 g$r$14076$1HvE18)) '#f))) ((case-lambda ((g$x$14077$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14077$1HvE18) (begin '#f ((case-lambda ((g$q$14078$1HvE18) (if g$q$14078$1HvE18 (begin '#f ((case-lambda ((g$r$14079$1HvE18) (if g$r$14079$1HvE18 (begin '#f (append g$q$14078$1HvE18 g$r$14079$1HvE18)) '#f))) ((case-lambda ((g$x$14080$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14080$1HvE18) (begin '#f ((case-lambda ((g$q$14081$1HvE18) (if g$q$14081$1HvE18 (begin '#f ((case-lambda ((g$r$14082$1HvE18) (if g$r$14082$1HvE18 (begin '#f (append g$q$14081$1HvE18 g$r$14082$1HvE18)) '#f))) ((letrec ((g$f$14083$1HvE18 (case-lambda ((g$x$14084$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14084$1HvE18) ((case-lambda ((g$cars/f$14085$1HvE18) (if g$cars/f$14085$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14086$1HvE18) (if g$cdrs/f$14086$1HvE18 (begin '#f (map cons g$cars/f$14085$1HvE18 g$cdrs/f$14086$1HvE18)) '#f))) (g$f$14083$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14084$1HvE18)))) '#f))) ((case-lambda ((g$x$14087$1HvE18) (list g$x$14087$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14084$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14084$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$14083$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14080$1HvE18)))) '#f))) ((letrec ((g$f$14088$1HvE18 (case-lambda ((g$x$14089$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14089$1HvE18) ((case-lambda ((g$cars/f$14090$1HvE18) (if g$cars/f$14090$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14091$1HvE18) (if g$cdrs/f$14091$1HvE18 (begin '#f (map cons g$cars/f$14090$1HvE18 g$cdrs/f$14091$1HvE18)) '#f))) (g$f$14088$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14089$1HvE18)))) '#f))) ((case-lambda ((g$x$14092$1HvE18) (list g$x$14092$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14089$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14089$1HvE18) (list (begin 'export* '())) '#f)))))) g$f$14088$1HvE18) (g$syntax-car$9309$1HvE18 g$x$14080$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14077$1HvE18)))) '#f))) ((case-lambda ((g$x$14093$1HvE18) (list g$x$14093$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14077$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14074$1HvE18)))) '#f))) ((case-lambda ((g$x$14094$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$14074$1HvE18)))) '#f))) g$t$14066$1HvE18)))) g$t$14060$1HvE18)))) ((case-lambda ((g$x$14095$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14095$1HvE18) (begin '#f ((case-lambda ((g$q$14096$1HvE18) (if g$q$14096$1HvE18 (begin '#f ((case-lambda ((g$r$14097$1HvE18) (if g$r$14097$1HvE18 (begin '#f (append g$q$14096$1HvE18 g$r$14097$1HvE18)) '#f))) ((case-lambda ((g$x$14098$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14098$1HvE18) (begin '#f ((case-lambda ((g$q$14099$1HvE18) (if g$q$14099$1HvE18 (begin '#f ((case-lambda ((g$r$14100$1HvE18) (if g$r$14100$1HvE18 (begin '#f (append g$q$14099$1HvE18 g$r$14100$1HvE18)) '#f))) ((letrec ((g$f$14101$1HvE18 (case-lambda ((g$x$14102$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14102$1HvE18) ((case-lambda ((g$cars/f$14103$1HvE18) (if g$cars/f$14103$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14104$1HvE18) (if g$cdrs/f$14104$1HvE18 (begin '#f (map cons g$cars/f$14103$1HvE18 g$cdrs/f$14104$1HvE18)) '#f))) (g$f$14101$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14102$1HvE18)))) '#f))) ((case-lambda ((g$x$14105$1HvE18) (list g$x$14105$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14102$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14102$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$14101$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14098$1HvE18)))) '#f))) ((letrec ((g$f$14106$1HvE18 (case-lambda ((g$x$14107$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14107$1HvE18) ((case-lambda ((g$cars/f$14108$1HvE18) (if g$cars/f$14108$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14109$1HvE18) (if g$cdrs/f$14109$1HvE18 (begin '#f (map cons g$cars/f$14108$1HvE18 g$cdrs/f$14109$1HvE18)) '#f))) (g$f$14106$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14107$1HvE18)))) '#f))) ((case-lambda ((g$x$14110$1HvE18) (list g$x$14110$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14107$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14107$1HvE18) (list (begin 'export* '())) '#f)))))) g$f$14106$1HvE18) (g$syntax-car$9309$1HvE18 g$x$14098$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14095$1HvE18)))) '#f))) ((case-lambda ((g$x$14111$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$14095$1HvE18)))) '#f))) g$t$14060$1HvE18)))) g$e$14059$1HvE18)))) (g$10375$9620$1HvE18 g$10375$15725$1HvE18 (make-record-type-descriptor 'module-interface '#f 'g$10378$1HvE18 '#t '#t '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec)))) (g$10377$9621$1HvE18 g$10377$15726$1HvE18 '#f) (g$10376$9622$1HvE18 g$10376$15727$1HvE18 (make-record-constructor-descriptor g$10375$9620$1HvE18 '#f g$10377$9621$1HvE18)) (g$module-interface?$9623$1HvE18 g$module-interface?$15728$1HvE18 (record-predicate g$10375$9620$1HvE18)) (g$make-module-interface$9624$1HvE18 g$make-module-interface$15729$1HvE18 (record-constructor g$10376$9622$1HvE18)) (g$module-interface-first-mark$9625$1HvE18 g$module-interface-first-mark$15730$1HvE18 (record-accessor g$10375$9620$1HvE18 '0)) (g$module-interface-exp-id-vec$9626$1HvE18 g$module-interface-exp-id-vec$15731$1HvE18 (record-accessor g$10375$9620$1HvE18 '1)) (g$module-interface-exp-lab-vec$9627$1HvE18 g$module-interface-exp-lab-vec$15732$1HvE18 (record-accessor g$10375$9620$1HvE18 '2)) (g$set-module-interface-first-mark!$9628$1HvE18 g$set-module-interface-first-mark!$15733$1HvE18 (record-mutator g$10375$9620$1HvE18 '0)) (g$set-module-interface-exp-id-vec!$9629$1HvE18 g$set-module-interface-exp-id-vec!$15734$1HvE18 (record-mutator g$10375$9620$1HvE18 '1)) (g$set-module-interface-exp-lab-vec!$9630$1HvE18 g$set-module-interface-exp-lab-vec!$15735$1HvE18 (record-mutator g$10375$9620$1HvE18 '2)) (g$module-interface-exp-id*$9631$1HvE18 g$module-interface-exp-id*$15736$1HvE18 (case-lambda ((g$iface$14112$1HvE18 g$id$14113$1HvE18) (letrec* ((g$diff-marks$14114$1HvE18 (case-lambda ((g$ls$14118$1HvE18 g$x$14119$1HvE18) (begin (if (null? g$ls$14118$1HvE18) (error 'diff-marks '"BUG: should not happen") (void)) ((case-lambda ((g$a$14120$1HvE18) (if (eq? g$a$14120$1HvE18 g$x$14119$1HvE18) '() (cons g$a$14120$1HvE18 (g$diff-marks$14114$1HvE18 (cdr g$ls$14118$1HvE18) g$x$14119$1HvE18))))) (car g$ls$14118$1HvE18))))))) ((case-lambda ((g$diff$14115$1HvE18 g$id-vec$14116$1HvE18) (if (null? g$diff$14115$1HvE18) g$id-vec$14116$1HvE18 (vector-map (case-lambda ((g$x$14117$1HvE18) (g$make-stx$9285$1HvE18 (g$stx-expr$9286$1HvE18 g$x$14117$1HvE18) (append g$diff$14115$1HvE18 (g$stx-mark*$9287$1HvE18 g$x$14117$1HvE18)) '() '()))) g$id-vec$14116$1HvE18)))) (g$diff-marks$14114$1HvE18 (g$stx-mark*$9287$1HvE18 g$id$14113$1HvE18) (g$module-interface-first-mark$9625$1HvE18 g$iface$14112$1HvE18)) (g$module-interface-exp-id-vec$9626$1HvE18 g$iface$14112$1HvE18)))))) (g$chi-internal-module$9632$1HvE18 g$chi-internal-module$15737$1HvE18 (case-lambda ((g$e$14121$1HvE18 g$r$14122$1HvE18 g$mr$14123$1HvE18 g$lex*$14124$1HvE18 g$rhs*$14125$1HvE18 g$mod**$14126$1HvE18 g$kwd*$14127$1HvE18) (call-with-values (case-lambda (() (g$parse-module$9619$1HvE18 g$e$14121$1HvE18))) (case-lambda ((g$name$14131$1HvE18 g$exp-id*$14132$1HvE18 g$e*$14133$1HvE18) ((case-lambda ((g$e*$14134$1HvE18 g$exp-id*$14135$1HvE18 g$name$14136$1HvE18) ((case-lambda ((g$rib$14137$1HvE18) ((case-lambda ((g$e*$14138$1HvE18) ((case-lambda (() (call-with-values (case-lambda (() (g$chi-body*$9633$1HvE18 g$e*$14138$1HvE18 g$r$14122$1HvE18 g$mr$14123$1HvE18 g$lex*$14124$1HvE18 g$rhs*$14125$1HvE18 g$mod**$14126$1HvE18 g$kwd*$14127$1HvE18 g$rib$14137$1HvE18 '#f))) (case-lambda ((g$e*$14146$1HvE18 g$r$14147$1HvE18 g$mr$14148$1HvE18 g$lex*$14149$1HvE18 g$rhs*$14150$1HvE18 g$mod**$14151$1HvE18 g$kwd*$14152$1HvE18) ((case-lambda ((g$kwd*$14153$1HvE18 g$mod**$14154$1HvE18 g$rhs*$14155$1HvE18 g$lex*$14156$1HvE18 g$mr$14157$1HvE18 g$r$14158$1HvE18 g$e*$14159$1HvE18) ((case-lambda ((g$exp-lab*$14160$1HvE18 g$mod**$14161$1HvE18) (if (not g$name$14136$1HvE18) (values g$lex*$14156$1HvE18 g$rhs*$14155$1HvE18 g$exp-id*$14135$1HvE18 g$exp-lab*$14160$1HvE18 g$r$14158$1HvE18 g$mr$14157$1HvE18 g$mod**$14161$1HvE18 g$kwd*$14153$1HvE18) ((case-lambda ((g$lab$14162$1HvE18 g$iface$14163$1HvE18) (values g$lex*$14156$1HvE18 g$rhs*$14155$1HvE18 (vector g$name$14136$1HvE18) (vector g$lab$14162$1HvE18) (cons (cons g$lab$14162$1HvE18 (cons '$module g$iface$14163$1HvE18)) g$r$14158$1HvE18) (cons (cons g$lab$14162$1HvE18 (cons '$module g$iface$14163$1HvE18)) g$mr$14157$1HvE18) g$mod**$14161$1HvE18 g$kwd*$14153$1HvE18))) (g$gen-label$9258$1HvE18 'module) (g$make-module-interface$9624$1HvE18 (car (g$stx-mark*$9287$1HvE18 g$name$14136$1HvE18)) (vector-map (case-lambda ((g$x$14164$1HvE18) (g$make-stx$9285$1HvE18 (g$stx-expr$9286$1HvE18 g$x$14164$1HvE18) (g$stx-mark*$9287$1HvE18 g$x$14164$1HvE18) '() '()))) g$exp-id*$14135$1HvE18) g$exp-lab*$14160$1HvE18))))) (vector-map (case-lambda ((g$x$14165$1HvE18) ((case-lambda ((g$t$14166$1HvE18) (if g$t$14166$1HvE18 g$t$14166$1HvE18 (begin '#f (g$syntax-violation$9695$1HvE18 '#f '"cannot find module export" g$x$14165$1HvE18))))) (g$id->label$9324$1HvE18 (g$mkstx$9300$1HvE18 (g$id->sym$9313$1HvE18 g$x$14165$1HvE18) (g$stx-mark*$9287$1HvE18 g$x$14165$1HvE18) (list g$rib$14137$1HvE18) '()))))) g$exp-id*$14135$1HvE18) (cons g$e*$14159$1HvE18 g$mod**$14154$1HvE18)))) g$kwd*$14152$1HvE18 g$mod**$14151$1HvE18 g$rhs*$14150$1HvE18 g$lex*$14149$1HvE18 g$mr$14148$1HvE18 g$r$14147$1HvE18 g$e*$14146$1HvE18))))))))) (map (case-lambda ((g$x$14167$1HvE18) (g$add-subst$9302$1HvE18 g$rib$14137$1HvE18 g$x$14167$1HvE18))) (g$syntax->list$9311$1HvE18 g$e*$14134$1HvE18))))) (g$make-empty-rib$9275$1HvE18)))) g$e*$14133$1HvE18 g$exp-id*$14132$1HvE18 g$name$14131$1HvE18))))))) (g$chi-body*$9633$1HvE18 g$chi-body*$15738$1HvE18 (case-lambda ((g$e*$14168$1HvE18 g$r$14169$1HvE18 g$mr$14170$1HvE18 g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14174$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18) (if (null? g$e*$14168$1HvE18) (values g$e*$14168$1HvE18 g$r$14169$1HvE18 g$mr$14170$1HvE18 g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14174$1HvE18) ((case-lambda ((g$e$14177$1HvE18) (call-with-values (case-lambda (() (g$syntax-type$9331$1HvE18 g$e$14177$1HvE18 g$r$14169$1HvE18))) (case-lambda ((g$type$14181$1HvE18 g$value$14182$1HvE18 g$kwd$14183$1HvE18) ((case-lambda ((g$kwd$14184$1HvE18 g$value$14185$1HvE18 g$type$14186$1HvE18) ((case-lambda ((g$kwd*$14187$1HvE18) ((case-lambda ((g$t$14188$1HvE18) (if (memv g$t$14188$1HvE18 '(define)) (call-with-values (case-lambda (() (g$parse-define$9534$1HvE18 g$e$14177$1HvE18))) (case-lambda ((g$id$14370$1HvE18 g$rhs$14371$1HvE18) ((case-lambda ((g$rhs$14372$1HvE18 g$id$14373$1HvE18) (begin (if (g$bound-id-member?$9319$1HvE18 g$id$14373$1HvE18 g$kwd*$14187$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"cannot redefine keyword" g$e$14177$1HvE18) (void)) (call-with-values (case-lambda (() (g$gen-define-label+loc$9260$1HvE18 g$id$14373$1HvE18 g$rib$14175$1HvE18))) (case-lambda ((g$lab$14376$1HvE18 g$lex$14377$1HvE18) ((case-lambda ((g$lex$14378$1HvE18 g$lab$14379$1HvE18) (begin (g$extend-rib!$9276$1HvE18 g$rib$14175$1HvE18 g$id$14373$1HvE18 g$lab$14379$1HvE18) (g$chi-body*$9633$1HvE18 (cdr g$e*$14168$1HvE18) (g$add-lexical$9541$1HvE18 g$lab$14379$1HvE18 g$lex$14378$1HvE18 g$r$14169$1HvE18) g$mr$14170$1HvE18 (cons g$lex$14378$1HvE18 g$lex*$14171$1HvE18) (cons g$rhs$14372$1HvE18 g$rhs*$14172$1HvE18) g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18)))) g$lex$14377$1HvE18 g$lab$14376$1HvE18))))))) g$rhs$14371$1HvE18 g$id$14370$1HvE18)))) (if (memv g$t$14188$1HvE18 '(define-syntax)) (call-with-values (case-lambda (() (g$parse-define-syntax$9535$1HvE18 g$e$14177$1HvE18))) (case-lambda ((g$id$14361$1HvE18 g$rhs$14362$1HvE18) ((case-lambda ((g$rhs$14363$1HvE18 g$id$14364$1HvE18) (begin (if (g$bound-id-member?$9319$1HvE18 g$id$14364$1HvE18 g$kwd*$14187$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"cannot redefine keyword" g$e$14177$1HvE18) (void)) ((case-lambda ((g$lab$14365$1HvE18 g$expanded-rhs$14366$1HvE18) (begin (g$extend-rib!$9276$1HvE18 g$rib$14175$1HvE18 g$id$14364$1HvE18 g$lab$14365$1HvE18) ((case-lambda ((g$b$14367$1HvE18) (g$chi-body*$9633$1HvE18 (cdr g$e*$14168$1HvE18) (cons (cons g$lab$14365$1HvE18 g$b$14367$1HvE18) g$r$14169$1HvE18) (cons (cons g$lab$14365$1HvE18 g$b$14367$1HvE18) g$mr$14170$1HvE18) g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18))) (g$make-eval-transformer$9341$1HvE18 g$expanded-rhs$14366$1HvE18))))) (g$gen-define-label$9261$1HvE18 g$id$14364$1HvE18 g$rib$14175$1HvE18) (g$expand-transformer$9634$1HvE18 g$rhs$14363$1HvE18 g$mr$14170$1HvE18))))) g$rhs$14362$1HvE18 g$id$14361$1HvE18)))) (if (memv g$t$14188$1HvE18 '(let-syntax letrec-syntax)) ((case-lambda ((g$t$14321$1HvE18) ((case-lambda ((g$ls/false$14322$1HvE18) (if (if g$ls/false$14322$1HvE18 (begin '#f (apply (case-lambda ((g$xlhs*$14323$1HvE18 g$xrhs*$14324$1HvE18 g$xbody*$14325$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 g$xlhs*$14323$1HvE18) (void) (g$syntax-violation$9695$1HvE18 '#f '"invalid identifiers" g$e$14177$1HvE18)))) g$ls/false$14322$1HvE18)) '#f) (apply (case-lambda ((g$xlhs*$14326$1HvE18 g$xrhs*$14327$1HvE18 g$xbody*$14328$1HvE18) ((case-lambda ((g$xlab*$14329$1HvE18) ((case-lambda ((g$xrib$14330$1HvE18) ((case-lambda ((g$xb*$14331$1HvE18) ((case-lambda (() (g$chi-body*$9633$1HvE18 (append (map (case-lambda ((g$x$14332$1HvE18) (g$add-subst$9302$1HvE18 g$xrib$14330$1HvE18 g$x$14332$1HvE18))) g$xbody*$14328$1HvE18) (cdr g$e*$14168$1HvE18)) (append (map cons g$xlab*$14329$1HvE18 g$xb*$14331$1HvE18) g$r$14169$1HvE18) (append (map cons g$xlab*$14329$1HvE18 g$xb*$14331$1HvE18) g$mr$14170$1HvE18) g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18)))))) (map (case-lambda ((g$x$14333$1HvE18) (g$make-eval-transformer$9341$1HvE18 (g$expand-transformer$9634$1HvE18 (if (eq? g$type$14186$1HvE18 'let-syntax) g$x$14333$1HvE18 (g$add-subst$9302$1HvE18 g$xrib$14330$1HvE18 g$x$14333$1HvE18)) g$mr$14170$1HvE18)))) g$xrhs*$14327$1HvE18)))) (g$make-full-rib$9280$1HvE18 g$xlhs*$14326$1HvE18 g$xlab*$14329$1HvE18)))) (map g$gen-label$9258$1HvE18 g$xlhs*$14326$1HvE18)))) g$ls/false$14322$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14321$1HvE18)))) ((case-lambda ((g$x$14334$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14334$1HvE18) (begin '#f ((case-lambda ((g$q$14335$1HvE18) (if g$q$14335$1HvE18 (begin '#f ((case-lambda ((g$r$14336$1HvE18) (if g$r$14336$1HvE18 (begin '#f (append g$q$14335$1HvE18 g$r$14336$1HvE18)) '#f))) ((case-lambda ((g$x$14337$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14337$1HvE18) (begin '#f ((case-lambda ((g$q$14338$1HvE18) (if g$q$14338$1HvE18 (begin '#f ((case-lambda ((g$r$14339$1HvE18) (if g$r$14339$1HvE18 (begin '#f (append g$q$14338$1HvE18 g$r$14339$1HvE18)) '#f))) ((letrec ((g$f$14340$1HvE18 (case-lambda ((g$x$14341$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14341$1HvE18) ((case-lambda ((g$cars/f$14342$1HvE18) (if g$cars/f$14342$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14343$1HvE18) (if g$cdrs/f$14343$1HvE18 (begin '#f (map cons g$cars/f$14342$1HvE18 g$cdrs/f$14343$1HvE18)) '#f))) (g$f$14340$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14341$1HvE18)))) '#f))) ((case-lambda ((g$x$14344$1HvE18) (list g$x$14344$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14341$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14341$1HvE18) (list (begin 'xbody* '())) '#f)))))) g$f$14340$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14337$1HvE18)))) '#f))) ((letrec ((g$f$14345$1HvE18 (case-lambda ((g$x$14346$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14346$1HvE18) ((case-lambda ((g$cars/f$14347$1HvE18) (if g$cars/f$14347$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14348$1HvE18) (if g$cdrs/f$14348$1HvE18 (begin '#f (map cons g$cars/f$14347$1HvE18 g$cdrs/f$14348$1HvE18)) '#f))) (g$f$14345$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14346$1HvE18)))) '#f))) ((case-lambda ((g$x$14349$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14349$1HvE18) (begin '#f ((case-lambda ((g$q$14350$1HvE18) (if g$q$14350$1HvE18 (begin '#f ((case-lambda ((g$r$14351$1HvE18) (if g$r$14351$1HvE18 (begin '#f (append g$q$14350$1HvE18 g$r$14351$1HvE18)) '#f))) ((case-lambda ((g$x$14352$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14352$1HvE18) (begin '#f ((case-lambda ((g$q$14353$1HvE18) (if g$q$14353$1HvE18 (begin '#f ((case-lambda ((g$r$14354$1HvE18) (if g$r$14354$1HvE18 (begin '#f (append g$q$14353$1HvE18 g$r$14354$1HvE18)) '#f))) ((case-lambda ((g$x$14355$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14355$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14352$1HvE18)))) '#f))) ((case-lambda ((g$x$14356$1HvE18) (list g$x$14356$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14352$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14349$1HvE18)))) '#f))) ((case-lambda ((g$x$14357$1HvE18) (list g$x$14357$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14349$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$14346$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14346$1HvE18) (list (begin 'xlhs* '()) (begin 'xrhs* '())) '#f)))))) g$f$14345$1HvE18) (g$syntax-car$9309$1HvE18 g$x$14337$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14334$1HvE18)))) '#f))) ((case-lambda ((g$x$14358$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$14334$1HvE18)))) '#f))) g$t$14321$1HvE18)))) g$e$14177$1HvE18) (if (memv g$t$14188$1HvE18 '(begin)) ((case-lambda ((g$t$14308$1HvE18) ((case-lambda ((g$ls/false$14309$1HvE18) (if (if g$ls/false$14309$1HvE18 (begin '#f (apply (case-lambda ((g$x*$14310$1HvE18) '#t)) g$ls/false$14309$1HvE18)) '#f) (apply (case-lambda ((g$x*$14311$1HvE18) (g$chi-body*$9633$1HvE18 (append g$x*$14311$1HvE18 (cdr g$e*$14168$1HvE18)) g$r$14169$1HvE18 g$mr$14170$1HvE18 g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18))) g$ls/false$14309$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14308$1HvE18)))) ((case-lambda ((g$x$14312$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14312$1HvE18) (begin '#f ((case-lambda ((g$q$14313$1HvE18) (if g$q$14313$1HvE18 (begin '#f ((case-lambda ((g$r$14314$1HvE18) (if g$r$14314$1HvE18 (begin '#f (append g$q$14313$1HvE18 g$r$14314$1HvE18)) '#f))) ((letrec ((g$f$14315$1HvE18 (case-lambda ((g$x$14316$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14316$1HvE18) ((case-lambda ((g$cars/f$14317$1HvE18) (if g$cars/f$14317$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14318$1HvE18) (if g$cdrs/f$14318$1HvE18 (begin '#f (map cons g$cars/f$14317$1HvE18 g$cdrs/f$14318$1HvE18)) '#f))) (g$f$14315$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14316$1HvE18)))) '#f))) ((case-lambda ((g$x$14319$1HvE18) (list g$x$14319$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14316$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14316$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$14315$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14312$1HvE18)))) '#f))) ((case-lambda ((g$x$14320$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$14312$1HvE18)))) '#f))) g$t$14308$1HvE18)))) g$e$14177$1HvE18) (if (memv g$t$14188$1HvE18 '(global-macro global-macro!)) (g$chi-body*$9633$1HvE18 (cons (g$add-subst$9302$1HvE18 g$rib$14175$1HvE18 (g$chi-global-macro$9604$1HvE18 g$value$14185$1HvE18 g$e$14177$1HvE18)) (cdr g$e*$14168$1HvE18)) g$r$14169$1HvE18 g$mr$14170$1HvE18 g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18) (if (memv g$t$14188$1HvE18 '(local-macro local-macro!)) (g$chi-body*$9633$1HvE18 (cons (g$add-subst$9302$1HvE18 g$rib$14175$1HvE18 (g$chi-local-macro$9603$1HvE18 g$value$14185$1HvE18 g$e$14177$1HvE18)) (cdr g$e*$14168$1HvE18)) g$r$14169$1HvE18 g$mr$14170$1HvE18 g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18) (if (memv g$t$14188$1HvE18 '(macro macro!)) (g$chi-body*$9633$1HvE18 (cons (g$add-subst$9302$1HvE18 g$rib$14175$1HvE18 (g$chi-macro$9602$1HvE18 g$value$14185$1HvE18 g$e$14177$1HvE18)) (cdr g$e*$14168$1HvE18)) g$r$14169$1HvE18 g$mr$14170$1HvE18 g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18) (if (memv g$t$14188$1HvE18 '(module)) (call-with-values (case-lambda (() (g$chi-internal-module$9632$1HvE18 g$e$14177$1HvE18 g$r$14169$1HvE18 g$mr$14170$1HvE18 g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18))) (case-lambda ((g$lex*$14290$1HvE18 g$rhs*$14291$1HvE18 g$m-exp-id*$14292$1HvE18 g$m-exp-lab*$14293$1HvE18 g$r$14294$1HvE18 g$mr$14295$1HvE18 g$mod**$14296$1HvE18 g$kwd*$14297$1HvE18) ((case-lambda ((g$kwd*$14298$1HvE18 g$mod**$14299$1HvE18 g$mr$14300$1HvE18 g$r$14301$1HvE18 g$m-exp-lab*$14302$1HvE18 g$m-exp-id*$14303$1HvE18 g$rhs*$14304$1HvE18 g$lex*$14305$1HvE18) (begin (vector-for-each (case-lambda ((g$id$14306$1HvE18 g$lab$14307$1HvE18) (g$extend-rib!$9276$1HvE18 g$rib$14175$1HvE18 g$id$14306$1HvE18 g$lab$14307$1HvE18))) g$m-exp-id*$14303$1HvE18 g$m-exp-lab*$14302$1HvE18) (g$chi-body*$9633$1HvE18 (cdr g$e*$14168$1HvE18) g$r$14301$1HvE18 g$mr$14300$1HvE18 g$lex*$14305$1HvE18 g$rhs*$14304$1HvE18 g$mod**$14299$1HvE18 g$kwd*$14298$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18)))) g$kwd*$14297$1HvE18 g$mod**$14296$1HvE18 g$mr$14295$1HvE18 g$r$14294$1HvE18 g$m-exp-lab*$14293$1HvE18 g$m-exp-id*$14292$1HvE18 g$rhs*$14291$1HvE18 g$lex*$14290$1HvE18)))) (if (memv g$t$14188$1HvE18 '(library)) (begin (g$library-expander$9682$1HvE18 (g$stx->datum$9323$1HvE18 g$e$14177$1HvE18)) (g$chi-body*$9633$1HvE18 (cdr g$e*$14168$1HvE18) g$r$14169$1HvE18 g$mr$14170$1HvE18 g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18)) (if (memv g$t$14188$1HvE18 '(import)) (begin ((case-lambda (() (letrec* ((g$module-import?$14189$1HvE18 (case-lambda ((g$e$14252$1HvE18) ((case-lambda ((g$t$14253$1HvE18) ((case-lambda ((g$ls/false$14254$1HvE18) (if (if g$ls/false$14254$1HvE18 (begin '#f (apply (case-lambda ((g$id$14255$1HvE18) (g$id?$9312$1HvE18 g$id$14255$1HvE18))) g$ls/false$14254$1HvE18)) '#f) (apply (case-lambda ((g$id$14256$1HvE18) '#t)) g$ls/false$14254$1HvE18) ((case-lambda ((g$t$14257$1HvE18) ((case-lambda ((g$ls/false$14258$1HvE18) (if (if g$ls/false$14258$1HvE18 (begin '#f (apply (case-lambda ((g$imp*$14259$1HvE18) '#t)) g$ls/false$14258$1HvE18)) '#f) (apply (case-lambda ((g$imp*$14260$1HvE18) '#f)) g$ls/false$14258$1HvE18) ((case-lambda ((g$t$14261$1HvE18) ((case-lambda ((g$ls/false$14262$1HvE18) (if (if g$ls/false$14262$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$14262$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"malformed import form" g$e$14252$1HvE18))) g$ls/false$14262$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14261$1HvE18)))) ((case-lambda ((g$x$14263$1HvE18) '())) g$t$14261$1HvE18)))) g$t$14257$1HvE18)))) ((case-lambda ((g$x$14264$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14264$1HvE18) (begin '#f ((case-lambda ((g$q$14265$1HvE18) (if g$q$14265$1HvE18 (begin '#f ((case-lambda ((g$r$14266$1HvE18) (if g$r$14266$1HvE18 (begin '#f (append g$q$14265$1HvE18 g$r$14266$1HvE18)) '#f))) ((letrec ((g$f$14267$1HvE18 (case-lambda ((g$x$14268$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14268$1HvE18) ((case-lambda ((g$cars/f$14269$1HvE18) (if g$cars/f$14269$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14270$1HvE18) (if g$cdrs/f$14270$1HvE18 (begin '#f (map cons g$cars/f$14269$1HvE18 g$cdrs/f$14270$1HvE18)) '#f))) (g$f$14267$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14268$1HvE18)))) '#f))) ((case-lambda ((g$x$14271$1HvE18) (list g$x$14271$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14268$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14268$1HvE18) (list (begin 'imp* '())) '#f)))))) g$f$14267$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14264$1HvE18)))) '#f))) ((case-lambda ((g$x$14272$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$14264$1HvE18)))) '#f))) g$t$14257$1HvE18)))) g$t$14253$1HvE18)))) ((case-lambda ((g$x$14273$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14273$1HvE18) (begin '#f ((case-lambda ((g$q$14274$1HvE18) (if g$q$14274$1HvE18 (begin '#f ((case-lambda ((g$r$14275$1HvE18) (if g$r$14275$1HvE18 (begin '#f (append g$q$14274$1HvE18 g$r$14275$1HvE18)) '#f))) ((case-lambda ((g$x$14276$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14276$1HvE18) (begin '#f ((case-lambda ((g$q$14277$1HvE18) (if g$q$14277$1HvE18 (begin '#f ((case-lambda ((g$r$14278$1HvE18) (if g$r$14278$1HvE18 (begin '#f (append g$q$14277$1HvE18 g$r$14278$1HvE18)) '#f))) ((case-lambda ((g$x$14279$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14279$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14276$1HvE18)))) '#f))) ((case-lambda ((g$x$14280$1HvE18) (list g$x$14280$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14276$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14273$1HvE18)))) '#f))) ((case-lambda ((g$x$14281$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$14273$1HvE18)))) '#f))) g$t$14253$1HvE18)))) g$e$14252$1HvE18)))) (g$module-import$14190$1HvE18 (case-lambda ((g$e$14226$1HvE18 g$r$14227$1HvE18) ((case-lambda ((g$t$14228$1HvE18) ((case-lambda ((g$ls/false$14229$1HvE18) (if (if g$ls/false$14229$1HvE18 (begin '#f (apply (case-lambda ((g$id$14230$1HvE18) (g$id?$9312$1HvE18 g$id$14230$1HvE18))) g$ls/false$14229$1HvE18)) '#f) (apply (case-lambda ((g$id$14231$1HvE18) (call-with-values (case-lambda (() (g$syntax-type$9331$1HvE18 g$id$14231$1HvE18 g$r$14227$1HvE18))) (case-lambda ((g$type$14235$1HvE18 g$value$14236$1HvE18 g$kwd$14237$1HvE18) ((case-lambda ((g$kwd$14238$1HvE18 g$value$14239$1HvE18 g$type$14240$1HvE18) ((case-lambda ((g$t$14241$1HvE18) (if (memv g$t$14241$1HvE18 '($module)) ((case-lambda ((g$iface$14242$1HvE18) (values (g$module-interface-exp-id*$9631$1HvE18 g$iface$14242$1HvE18 g$id$14231$1HvE18) (g$module-interface-exp-lab-vec$9627$1HvE18 g$iface$14242$1HvE18)))) g$value$14239$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid import" g$e$14226$1HvE18)))) g$type$14240$1HvE18))) g$kwd$14237$1HvE18 g$value$14236$1HvE18 g$type$14235$1HvE18)))))) g$ls/false$14229$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14228$1HvE18)))) ((case-lambda ((g$x$14243$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14243$1HvE18) (begin '#f ((case-lambda ((g$q$14244$1HvE18) (if g$q$14244$1HvE18 (begin '#f ((case-lambda ((g$r$14245$1HvE18) (if g$r$14245$1HvE18 (begin '#f (append g$q$14244$1HvE18 g$r$14245$1HvE18)) '#f))) ((case-lambda ((g$x$14246$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14246$1HvE18) (begin '#f ((case-lambda ((g$q$14247$1HvE18) (if g$q$14247$1HvE18 (begin '#f ((case-lambda ((g$r$14248$1HvE18) (if g$r$14248$1HvE18 (begin '#f (append g$q$14247$1HvE18 g$r$14248$1HvE18)) '#f))) ((case-lambda ((g$x$14249$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14249$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14246$1HvE18)))) '#f))) ((case-lambda ((g$x$14250$1HvE18) (list g$x$14250$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14246$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14243$1HvE18)))) '#f))) ((case-lambda ((g$x$14251$1HvE18) '())) (g$syntax-car$9309$1HvE18 g$x$14243$1HvE18)))) '#f))) g$t$14228$1HvE18)))) g$e$14226$1HvE18)))) (g$library-import$14191$1HvE18 (case-lambda ((g$e$14200$1HvE18) ((case-lambda ((g$t$14201$1HvE18) ((case-lambda ((g$ls/false$14202$1HvE18) (if (if g$ls/false$14202$1HvE18 (begin '#f (apply (case-lambda ((g$ctxt$14203$1HvE18 g$imp*$14204$1HvE18) '#t)) g$ls/false$14202$1HvE18)) '#f) (apply (case-lambda ((g$ctxt$14205$1HvE18 g$imp*$14206$1HvE18) (call-with-values (case-lambda (() (g$parse-import-spec*$9638$1HvE18 (g$syntax->datum$9698$1HvE18 g$imp*$14206$1HvE18)))) (case-lambda ((g$subst-names$14209$1HvE18 g$subst-labels$14210$1HvE18) ((case-lambda ((g$subst-labels$14211$1HvE18 g$subst-names$14212$1HvE18) (values (vector-map (case-lambda ((g$name$14213$1HvE18) (g$datum->stx$9295$1HvE18 g$ctxt$14205$1HvE18 g$name$14213$1HvE18))) g$subst-names$14212$1HvE18) g$subst-labels$14211$1HvE18))) g$subst-labels$14210$1HvE18 g$subst-names$14209$1HvE18)))))) g$ls/false$14202$1HvE18) ((case-lambda ((g$t$14214$1HvE18) ((case-lambda ((g$ls/false$14215$1HvE18) (if (if g$ls/false$14215$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$14215$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"invalid import form" g$e$14200$1HvE18))) g$ls/false$14215$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14214$1HvE18)))) ((case-lambda ((g$x$14216$1HvE18) '())) g$t$14214$1HvE18)))) g$t$14201$1HvE18)))) ((case-lambda ((g$x$14217$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14217$1HvE18) (begin '#f ((case-lambda ((g$q$14218$1HvE18) (if g$q$14218$1HvE18 (begin '#f ((case-lambda ((g$r$14219$1HvE18) (if g$r$14219$1HvE18 (begin '#f (append g$q$14218$1HvE18 g$r$14219$1HvE18)) '#f))) ((letrec ((g$f$14220$1HvE18 (case-lambda ((g$x$14221$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14221$1HvE18) ((case-lambda ((g$cars/f$14222$1HvE18) (if g$cars/f$14222$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14223$1HvE18) (if g$cdrs/f$14223$1HvE18 (begin '#f (map cons g$cars/f$14222$1HvE18 g$cdrs/f$14223$1HvE18)) '#f))) (g$f$14220$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14221$1HvE18)))) '#f))) ((case-lambda ((g$x$14224$1HvE18) (list g$x$14224$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14221$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14221$1HvE18) (list (begin 'imp* '())) '#f)))))) g$f$14220$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14217$1HvE18)))) '#f))) ((case-lambda ((g$x$14225$1HvE18) (list g$x$14225$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14217$1HvE18)))) '#f))) g$t$14201$1HvE18)))) g$e$14200$1HvE18))))) (call-with-values (case-lambda (() (if (g$module-import?$14189$1HvE18 g$e$14177$1HvE18) (g$module-import$14190$1HvE18 g$e$14177$1HvE18 g$r$14169$1HvE18) (g$library-import$14191$1HvE18 g$e$14177$1HvE18)))) (case-lambda ((g$id*$14194$1HvE18 g$lab*$14195$1HvE18) ((case-lambda ((g$lab*$14196$1HvE18 g$id*$14197$1HvE18) (vector-for-each (case-lambda ((g$id$14198$1HvE18 g$lab$14199$1HvE18) (g$extend-rib!$9276$1HvE18 g$rib$14175$1HvE18 g$id$14198$1HvE18 g$lab$14199$1HvE18))) g$id*$14197$1HvE18 g$lab*$14196$1HvE18))) g$lab*$14195$1HvE18 g$id*$14194$1HvE18)))))))) (g$chi-body*$9633$1HvE18 (cdr g$e*$14168$1HvE18) g$r$14169$1HvE18 g$mr$14170$1HvE18 g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18)) (if g$top?$14176$1HvE18 (g$chi-body*$9633$1HvE18 (cdr g$e*$14168$1HvE18) g$r$14169$1HvE18 g$mr$14170$1HvE18 (cons (g$gen-lexical$9256$1HvE18 'dummy) g$lex*$14171$1HvE18) (cons (cons 'top-expr g$e$14177$1HvE18) g$rhs*$14172$1HvE18) g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18 g$rib$14175$1HvE18 g$top?$14176$1HvE18) (values g$e*$14168$1HvE18 g$r$14169$1HvE18 g$mr$14170$1HvE18 g$lex*$14171$1HvE18 g$rhs*$14172$1HvE18 g$mod**$14173$1HvE18 g$kwd*$14187$1HvE18)))))))))))))) g$type$14186$1HvE18))) (if (g$id?$9312$1HvE18 g$kwd$14184$1HvE18) (cons g$kwd$14184$1HvE18 g$kwd*$14174$1HvE18) g$kwd*$14174$1HvE18)))) g$kwd$14183$1HvE18 g$value$14182$1HvE18 g$type$14181$1HvE18)))))) (car g$e*$14168$1HvE18)))))) (g$expand-transformer$9634$1HvE18 g$expand-transformer$15739$1HvE18 (case-lambda ((g$expr$14380$1HvE18 g$r$14381$1HvE18) ((case-lambda ((g$rtc$14382$1HvE18) ((case-lambda ((g$expanded-rhs$14383$1HvE18) (begin (for-each ((case-lambda ((g$mark-visit$14384$1HvE18) (case-lambda ((g$x$14385$1HvE18) (begin (g$invoke-library$9128$1HvE18 g$x$14385$1HvE18) (g$mark-visit$14384$1HvE18 g$x$14385$1HvE18)))))) (g$vis-collector$9642$1HvE18)) (g$rtc$14382$1HvE18)) g$expanded-rhs$14383$1HvE18))) ((case-lambda ((g$inv-collector$14390$1HvE18 g$vis-collector$14391$1HvE18 g$inv-collector$14392$1HvE18 g$vis-collector$14393$1HvE18) ((case-lambda ((g$swap$14394$1HvE18) (dynamic-wind g$swap$14394$1HvE18 (case-lambda (() (g$chi-expr$9607$1HvE18 g$expr$14380$1HvE18 g$r$14381$1HvE18 g$r$14381$1HvE18))) g$swap$14394$1HvE18))) (case-lambda (() (begin ((case-lambda ((g$t$14395$1HvE18) (begin (g$inv-collector$14390$1HvE18 g$inv-collector$14392$1HvE18) (set! g$inv-collector$14392$1HvE18 g$t$14395$1HvE18)))) (g$inv-collector$14390$1HvE18)) ((case-lambda ((g$t$14396$1HvE18) (begin (g$vis-collector$14391$1HvE18 g$vis-collector$14393$1HvE18) (set! g$vis-collector$14393$1HvE18 g$t$14396$1HvE18)))) (g$vis-collector$14391$1HvE18)))))))) g$inv-collector$9641$1HvE18 g$vis-collector$9642$1HvE18 g$rtc$14382$1HvE18 (case-lambda ((g$x$14397$1HvE18) (values))))))) (g$make-collector$9640$1HvE18))))) (g$parse-exports$9635$1HvE18 g$parse-exports$15740$1HvE18 (case-lambda ((g$exp*$14398$1HvE18) (letrec* ((g$idsyn?$14399$1HvE18 (case-lambda ((g$x$14436$1HvE18) (symbol? (g$syntax->datum$9698$1HvE18 g$x$14436$1HvE18)))))) ((letrec ((g$f$14400$1HvE18 (case-lambda ((g$exp*$14401$1HvE18 g$int*$14402$1HvE18 g$ext*$14403$1HvE18) (if (null? g$exp*$14401$1HvE18) (begin ((case-lambda ((g$id*$14404$1HvE18) (if (g$valid-bound-ids?$9317$1HvE18 g$id*$14404$1HvE18) (void) (g$syntax-violation$9695$1HvE18 'export '"invalid exports" (g$find-dups$9617$1HvE18 g$id*$14404$1HvE18))))) (map (case-lambda ((g$x$14405$1HvE18) (g$make-stx$9285$1HvE18 g$x$14405$1HvE18 g$top-mark*$9254$1HvE18 '() '()))) g$ext*$14403$1HvE18)) (values (map g$syntax->datum$9698$1HvE18 g$int*$14402$1HvE18) (map g$syntax->datum$9698$1HvE18 g$ext*$14403$1HvE18))) ((case-lambda ((g$t$14406$1HvE18) ((case-lambda ((g$ls/false$14407$1HvE18) (if (if g$ls/false$14407$1HvE18 (begin '#f (apply (case-lambda ((g$rename$14408$1HvE18 g$i*$14409$1HvE18 g$e*$14410$1HvE18) '#t)) g$ls/false$14407$1HvE18)) '#f) (apply (case-lambda ((g$rename$14411$1HvE18 g$i*$14412$1HvE18 g$e*$14413$1HvE18) (begin (if (if (eq? (g$syntax->datum$9698$1HvE18 g$rename$14411$1HvE18) 'rename) (if (g$for-all$7965$1HvE18 g$idsyn?$14399$1HvE18 g$i*$14412$1HvE18) (begin '#f (g$for-all$7965$1HvE18 g$idsyn?$14399$1HvE18 g$e*$14413$1HvE18)) '#f) '#f) (void) (g$syntax-violation$9695$1HvE18 'export '"invalid export specifier" (car g$exp*$14401$1HvE18))) (g$f$14400$1HvE18 (cdr g$exp*$14401$1HvE18) (append g$i*$14412$1HvE18 g$int*$14402$1HvE18) (append g$e*$14413$1HvE18 g$ext*$14403$1HvE18))))) g$ls/false$14407$1HvE18) ((case-lambda ((g$t$14414$1HvE18) ((case-lambda ((g$ls/false$14415$1HvE18) (if (if g$ls/false$14415$1HvE18 (begin '#f (apply (case-lambda ((g$ie$14416$1HvE18) '#t)) g$ls/false$14415$1HvE18)) '#f) (apply (case-lambda ((g$ie$14417$1HvE18) (begin (if (g$idsyn?$14399$1HvE18 g$ie$14417$1HvE18) (void) (g$syntax-violation$9695$1HvE18 'export '"invalid export" g$ie$14417$1HvE18)) (g$f$14400$1HvE18 (cdr g$exp*$14401$1HvE18) (cons g$ie$14417$1HvE18 g$int*$14402$1HvE18) (cons g$ie$14417$1HvE18 g$ext*$14403$1HvE18))))) g$ls/false$14415$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14414$1HvE18)))) ((case-lambda ((g$x$14418$1HvE18) (list g$x$14418$1HvE18))) g$t$14414$1HvE18)))) g$t$14406$1HvE18)))) ((case-lambda ((g$x$14419$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14419$1HvE18) (begin '#f ((case-lambda ((g$q$14420$1HvE18) (if g$q$14420$1HvE18 (begin '#f ((case-lambda ((g$r$14421$1HvE18) (if g$r$14421$1HvE18 (begin '#f (append g$q$14420$1HvE18 g$r$14421$1HvE18)) '#f))) ((letrec ((g$f$14422$1HvE18 (case-lambda ((g$x$14423$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14423$1HvE18) ((case-lambda ((g$cars/f$14424$1HvE18) (if g$cars/f$14424$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14425$1HvE18) (if g$cdrs/f$14425$1HvE18 (begin '#f (map cons g$cars/f$14424$1HvE18 g$cdrs/f$14425$1HvE18)) '#f))) (g$f$14422$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14423$1HvE18)))) '#f))) ((case-lambda ((g$x$14426$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14426$1HvE18) (begin '#f ((case-lambda ((g$q$14427$1HvE18) (if g$q$14427$1HvE18 (begin '#f ((case-lambda ((g$r$14428$1HvE18) (if g$r$14428$1HvE18 (begin '#f (append g$q$14427$1HvE18 g$r$14428$1HvE18)) '#f))) ((case-lambda ((g$x$14429$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14429$1HvE18) (begin '#f ((case-lambda ((g$q$14430$1HvE18) (if g$q$14430$1HvE18 (begin '#f ((case-lambda ((g$r$14431$1HvE18) (if g$r$14431$1HvE18 (begin '#f (append g$q$14430$1HvE18 g$r$14431$1HvE18)) '#f))) ((case-lambda ((g$x$14432$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14432$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14429$1HvE18)))) '#f))) ((case-lambda ((g$x$14433$1HvE18) (list g$x$14433$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14429$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14426$1HvE18)))) '#f))) ((case-lambda ((g$x$14434$1HvE18) (list g$x$14434$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14426$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$14423$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14423$1HvE18) (list (begin 'i* '()) (begin 'e* '())) '#f)))))) g$f$14422$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14419$1HvE18)))) '#f))) ((case-lambda ((g$x$14435$1HvE18) (list g$x$14435$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14419$1HvE18)))) '#f))) g$t$14406$1HvE18)))) (car g$exp*$14401$1HvE18))))))) g$f$14400$1HvE18) g$exp*$14398$1HvE18 '() '()))))) (g$parse-library-name$9636$1HvE18 g$parse-library-name$15741$1HvE18 (case-lambda ((g$spec$14437$1HvE18) (letrec* ((g$parse$14438$1HvE18 (case-lambda ((g$x$14445$1HvE18) ((case-lambda ((g$t$14446$1HvE18) ((case-lambda ((g$ls/false$14447$1HvE18) (if (if g$ls/false$14447$1HvE18 (begin '#f (apply (case-lambda ((g$v*$14448$1HvE18) (g$for-all$7965$1HvE18 (case-lambda ((g$x$14449$1HvE18) ((case-lambda ((g$x$14450$1HvE18) (if (integer? g$x$14450$1HvE18) (begin '#f (exact? g$x$14450$1HvE18)) '#f))) (g$syntax->datum$9698$1HvE18 g$x$14449$1HvE18)))) g$v*$14448$1HvE18))) g$ls/false$14447$1HvE18)) '#f) (apply (case-lambda ((g$v*$14451$1HvE18) (values '() (map g$syntax->datum$9698$1HvE18 g$v*$14451$1HvE18)))) g$ls/false$14447$1HvE18) ((case-lambda ((g$t$14452$1HvE18) ((case-lambda ((g$ls/false$14453$1HvE18) (if (if g$ls/false$14453$1HvE18 (begin '#f (apply (case-lambda ((g$x$14454$1HvE18 g$rest$14455$1HvE18) (symbol? (g$syntax->datum$9698$1HvE18 g$x$14454$1HvE18)))) g$ls/false$14453$1HvE18)) '#f) (apply (case-lambda ((g$x$14456$1HvE18 g$rest$14457$1HvE18) (call-with-values (case-lambda (() (g$parse$14438$1HvE18 g$rest$14457$1HvE18))) (case-lambda ((g$x*$14460$1HvE18 g$v*$14461$1HvE18) ((case-lambda ((g$v*$14462$1HvE18 g$x*$14463$1HvE18) (values (cons (g$syntax->datum$9698$1HvE18 g$x$14456$1HvE18) g$x*$14463$1HvE18) g$v*$14462$1HvE18))) g$v*$14461$1HvE18 g$x*$14460$1HvE18)))))) g$ls/false$14453$1HvE18) ((case-lambda ((g$t$14464$1HvE18) ((case-lambda ((g$ls/false$14465$1HvE18) (if (if g$ls/false$14465$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$14465$1HvE18)) '#f) (apply (case-lambda (() (values '() '()))) g$ls/false$14465$1HvE18) ((case-lambda ((g$t$14466$1HvE18) ((case-lambda ((g$ls/false$14467$1HvE18) (if (if g$ls/false$14467$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$14467$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"invalid library name" g$spec$14437$1HvE18))) g$ls/false$14467$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14466$1HvE18)))) ((case-lambda ((g$x$14468$1HvE18) '())) g$t$14466$1HvE18)))) g$t$14464$1HvE18)))) ((case-lambda ((g$x$14469$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14469$1HvE18) '()) (begin '#f '()) '#f))) g$t$14464$1HvE18)))) g$t$14452$1HvE18)))) ((case-lambda ((g$x$14470$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14470$1HvE18) (begin '#f ((case-lambda ((g$q$14471$1HvE18) (if g$q$14471$1HvE18 (begin '#f ((case-lambda ((g$r$14472$1HvE18) (if g$r$14472$1HvE18 (begin '#f (append g$q$14471$1HvE18 g$r$14472$1HvE18)) '#f))) ((case-lambda ((g$x$14473$1HvE18) (list g$x$14473$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$14470$1HvE18)))) '#f))) ((case-lambda ((g$x$14474$1HvE18) (list g$x$14474$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14470$1HvE18)))) '#f))) g$t$14452$1HvE18)))) g$t$14446$1HvE18)))) ((case-lambda ((g$x$14475$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14475$1HvE18) (begin '#f ((case-lambda ((g$q$14476$1HvE18) (if g$q$14476$1HvE18 (begin '#f ((case-lambda ((g$r$14477$1HvE18) (if g$r$14477$1HvE18 (begin '#f (append g$q$14476$1HvE18 g$r$14477$1HvE18)) '#f))) ((case-lambda ((g$x$14478$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14478$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14475$1HvE18)))) '#f))) ((letrec ((g$f$14479$1HvE18 (case-lambda ((g$x$14480$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14480$1HvE18) ((case-lambda ((g$cars/f$14481$1HvE18) (if g$cars/f$14481$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14482$1HvE18) (if g$cdrs/f$14482$1HvE18 (begin '#f (map cons g$cars/f$14481$1HvE18 g$cdrs/f$14482$1HvE18)) '#f))) (g$f$14479$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14480$1HvE18)))) '#f))) ((case-lambda ((g$x$14483$1HvE18) (list g$x$14483$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14480$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14480$1HvE18) (list (begin 'v* '())) '#f)))))) g$f$14479$1HvE18) (g$syntax-car$9309$1HvE18 g$x$14475$1HvE18)))) '#f))) g$t$14446$1HvE18)))) g$x$14445$1HvE18))))) (call-with-values (case-lambda (() (g$parse$14438$1HvE18 g$spec$14437$1HvE18))) (case-lambda ((g$name*$14441$1HvE18 g$ver*$14442$1HvE18) ((case-lambda ((g$ver*$14443$1HvE18 g$name*$14444$1HvE18) (begin (if (null? g$name*$14444$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"empty library name" g$spec$14437$1HvE18) (void)) (values g$name*$14444$1HvE18 g$ver*$14443$1HvE18)))) g$ver*$14442$1HvE18 g$name*$14441$1HvE18)))))))) (g$parse-library$9637$1HvE18 g$parse-library$15742$1HvE18 (case-lambda ((g$e$14484$1HvE18) ((case-lambda ((g$t$14485$1HvE18) ((case-lambda ((g$ls/false$14486$1HvE18) (if (if g$ls/false$14486$1HvE18 (begin '#f (apply (case-lambda ((g$library$14487$1HvE18 g$name*$14488$1HvE18 g$export$14489$1HvE18 g$exp*$14490$1HvE18 g$import$14491$1HvE18 g$imp*$14492$1HvE18 g$b*$14493$1HvE18) (if (eq? (g$syntax->datum$9698$1HvE18 g$export$14489$1HvE18) 'export) (if (eq? (g$syntax->datum$9698$1HvE18 g$import$14491$1HvE18) 'import) (begin '#f (eq? (g$syntax->datum$9698$1HvE18 g$library$14487$1HvE18) 'library)) '#f) '#f))) g$ls/false$14486$1HvE18)) '#f) (apply (case-lambda ((g$library$14494$1HvE18 g$name*$14495$1HvE18 g$export$14496$1HvE18 g$exp*$14497$1HvE18 g$import$14498$1HvE18 g$imp*$14499$1HvE18 g$b*$14500$1HvE18) (values g$name*$14495$1HvE18 g$exp*$14497$1HvE18 g$imp*$14499$1HvE18 g$b*$14500$1HvE18))) g$ls/false$14486$1HvE18) ((case-lambda ((g$t$14501$1HvE18) ((case-lambda ((g$ls/false$14502$1HvE18) (if (if g$ls/false$14502$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$14502$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"malformed library" g$e$14484$1HvE18))) g$ls/false$14502$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14501$1HvE18)))) ((case-lambda ((g$x$14503$1HvE18) '())) g$t$14501$1HvE18)))) g$t$14485$1HvE18)))) ((case-lambda ((g$x$14504$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14504$1HvE18) (begin '#f ((case-lambda ((g$q$14505$1HvE18) (if g$q$14505$1HvE18 (begin '#f ((case-lambda ((g$r$14506$1HvE18) (if g$r$14506$1HvE18 (begin '#f (append g$q$14505$1HvE18 g$r$14506$1HvE18)) '#f))) ((case-lambda ((g$x$14507$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14507$1HvE18) (begin '#f ((case-lambda ((g$q$14508$1HvE18) (if g$q$14508$1HvE18 (begin '#f ((case-lambda ((g$r$14509$1HvE18) (if g$r$14509$1HvE18 (begin '#f (append g$q$14508$1HvE18 g$r$14509$1HvE18)) '#f))) ((case-lambda ((g$x$14510$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14510$1HvE18) (begin '#f ((case-lambda ((g$q$14511$1HvE18) (if g$q$14511$1HvE18 (begin '#f ((case-lambda ((g$r$14512$1HvE18) (if g$r$14512$1HvE18 (begin '#f (append g$q$14511$1HvE18 g$r$14512$1HvE18)) '#f))) ((case-lambda ((g$x$14513$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14513$1HvE18) (begin '#f ((case-lambda ((g$q$14514$1HvE18) (if g$q$14514$1HvE18 (begin '#f ((case-lambda ((g$r$14515$1HvE18) (if g$r$14515$1HvE18 (begin '#f (append g$q$14514$1HvE18 g$r$14515$1HvE18)) '#f))) ((letrec ((g$f$14516$1HvE18 (case-lambda ((g$x$14517$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14517$1HvE18) ((case-lambda ((g$cars/f$14518$1HvE18) (if g$cars/f$14518$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14519$1HvE18) (if g$cdrs/f$14519$1HvE18 (begin '#f (map cons g$cars/f$14518$1HvE18 g$cdrs/f$14519$1HvE18)) '#f))) (g$f$14516$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14517$1HvE18)))) '#f))) ((case-lambda ((g$x$14520$1HvE18) (list g$x$14520$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14517$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14517$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$14516$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14513$1HvE18)))) '#f))) ((case-lambda ((g$x$14521$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14521$1HvE18) (begin '#f ((case-lambda ((g$q$14522$1HvE18) (if g$q$14522$1HvE18 (begin '#f ((case-lambda ((g$r$14523$1HvE18) (if g$r$14523$1HvE18 (begin '#f (append g$q$14522$1HvE18 g$r$14523$1HvE18)) '#f))) ((letrec ((g$f$14524$1HvE18 (case-lambda ((g$x$14525$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14525$1HvE18) ((case-lambda ((g$cars/f$14526$1HvE18) (if g$cars/f$14526$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14527$1HvE18) (if g$cdrs/f$14527$1HvE18 (begin '#f (map cons g$cars/f$14526$1HvE18 g$cdrs/f$14527$1HvE18)) '#f))) (g$f$14524$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14525$1HvE18)))) '#f))) ((case-lambda ((g$x$14528$1HvE18) (list g$x$14528$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14525$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14525$1HvE18) (list (begin 'imp* '())) '#f)))))) g$f$14524$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14521$1HvE18)))) '#f))) ((case-lambda ((g$x$14529$1HvE18) (list g$x$14529$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14521$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$14513$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14510$1HvE18)))) '#f))) ((case-lambda ((g$x$14530$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14530$1HvE18) (begin '#f ((case-lambda ((g$q$14531$1HvE18) (if g$q$14531$1HvE18 (begin '#f ((case-lambda ((g$r$14532$1HvE18) (if g$r$14532$1HvE18 (begin '#f (append g$q$14531$1HvE18 g$r$14532$1HvE18)) '#f))) ((letrec ((g$f$14533$1HvE18 (case-lambda ((g$x$14534$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14534$1HvE18) ((case-lambda ((g$cars/f$14535$1HvE18) (if g$cars/f$14535$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14536$1HvE18) (if g$cdrs/f$14536$1HvE18 (begin '#f (map cons g$cars/f$14535$1HvE18 g$cdrs/f$14536$1HvE18)) '#f))) (g$f$14533$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14534$1HvE18)))) '#f))) ((case-lambda ((g$x$14537$1HvE18) (list g$x$14537$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14534$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14534$1HvE18) (list (begin 'exp* '())) '#f)))))) g$f$14533$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14530$1HvE18)))) '#f))) ((case-lambda ((g$x$14538$1HvE18) (list g$x$14538$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14530$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$14510$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14507$1HvE18)))) '#f))) ((letrec ((g$f$14539$1HvE18 (case-lambda ((g$x$14540$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14540$1HvE18) ((case-lambda ((g$cars/f$14541$1HvE18) (if g$cars/f$14541$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14542$1HvE18) (if g$cdrs/f$14542$1HvE18 (begin '#f (map cons g$cars/f$14541$1HvE18 g$cdrs/f$14542$1HvE18)) '#f))) (g$f$14539$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14540$1HvE18)))) '#f))) ((case-lambda ((g$x$14543$1HvE18) (list g$x$14543$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14540$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14540$1HvE18) (list (begin 'name* '())) '#f)))))) g$f$14539$1HvE18) (g$syntax-car$9309$1HvE18 g$x$14507$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14504$1HvE18)))) '#f))) ((case-lambda ((g$x$14544$1HvE18) (list g$x$14544$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14504$1HvE18)))) '#f))) g$t$14485$1HvE18)))) g$e$14484$1HvE18)))) (g$parse-import-spec*$9638$1HvE18 g$parse-import-spec*$15743$1HvE18 (case-lambda ((g$imp*$14545$1HvE18) (letrec* ((g$idsyn?$14546$1HvE18 (case-lambda ((g$x$14997$1HvE18) (symbol? (g$syntax->datum$9698$1HvE18 g$x$14997$1HvE18))))) (g$dup-error$14547$1HvE18 (case-lambda ((g$name$14996$1HvE18) (g$syntax-violation$9695$1HvE18 'import '"two imports with different bindings" g$name$14996$1HvE18)))) (g$merge-substs$14548$1HvE18 (case-lambda ((g$s$14987$1HvE18 g$subst$14988$1HvE18) (letrec* ((g$insert-to-subst$14989$1HvE18 (case-lambda ((g$a$14990$1HvE18 g$subst$14991$1HvE18) ((case-lambda ((g$name$14992$1HvE18 g$label$14993$1HvE18) ((case-lambda ((g$t$14994$1HvE18) (if g$t$14994$1HvE18 ((case-lambda ((g$x$14995$1HvE18) (if (eq? (cdr g$x$14995$1HvE18) g$label$14993$1HvE18) g$subst$14991$1HvE18 (g$dup-error$14547$1HvE18 g$name$14992$1HvE18)))) g$t$14994$1HvE18) (cons g$a$14990$1HvE18 g$subst$14991$1HvE18)))) (assq g$name$14992$1HvE18 g$subst$14991$1HvE18)))) (car g$a$14990$1HvE18) (cdr g$a$14990$1HvE18)))))) (if (null? g$s$14987$1HvE18) g$subst$14988$1HvE18 (g$insert-to-subst$14989$1HvE18 (car g$s$14987$1HvE18) (g$merge-substs$14548$1HvE18 (cdr g$s$14987$1HvE18) g$subst$14988$1HvE18))))))) (g$exclude*$14549$1HvE18 (case-lambda ((g$sym*$14963$1HvE18 g$subst$14964$1HvE18) (letrec* ((g$exclude$14965$1HvE18 (case-lambda ((g$sym$14978$1HvE18 g$subst$14979$1HvE18) (if (null? g$subst$14979$1HvE18) (g$syntax-violation$9695$1HvE18 'import '"cannot rename unbound identifier" g$sym$14978$1HvE18) (if (eq? g$sym$14978$1HvE18 (g$caar$7544$1HvE18 g$subst$14979$1HvE18)) (values (g$cdar$7546$1HvE18 g$subst$14979$1HvE18) (cdr g$subst$14979$1HvE18)) ((case-lambda ((g$a$14980$1HvE18) (call-with-values (case-lambda (() (g$exclude$14965$1HvE18 g$sym$14978$1HvE18 (cdr g$subst$14979$1HvE18)))) (case-lambda ((g$old$14983$1HvE18 g$subst$14984$1HvE18) ((case-lambda ((g$subst$14985$1HvE18 g$old$14986$1HvE18) (values g$old$14986$1HvE18 (cons g$a$14980$1HvE18 g$subst$14985$1HvE18)))) g$subst$14984$1HvE18 g$old$14983$1HvE18)))))) (car g$subst$14979$1HvE18)))))))) (if (null? g$sym*$14963$1HvE18) (values '() g$subst$14964$1HvE18) (call-with-values (case-lambda (() (g$exclude$14965$1HvE18 (car g$sym*$14963$1HvE18) g$subst$14964$1HvE18))) (case-lambda ((g$old$14968$1HvE18 g$subst$14969$1HvE18) ((case-lambda ((g$subst$14970$1HvE18 g$old$14971$1HvE18) (call-with-values (case-lambda (() (g$exclude*$14549$1HvE18 (cdr g$sym*$14963$1HvE18) g$subst$14970$1HvE18))) (case-lambda ((g$old*$14974$1HvE18 g$subst$14975$1HvE18) ((case-lambda ((g$subst$14976$1HvE18 g$old*$14977$1HvE18) (values (cons g$old$14971$1HvE18 g$old*$14977$1HvE18) g$subst$14976$1HvE18))) g$subst$14975$1HvE18 g$old*$14974$1HvE18)))))) g$subst$14969$1HvE18 g$old$14968$1HvE18))))))))) (g$find*$14550$1HvE18 (case-lambda ((g$sym*$14959$1HvE18 g$subst$14960$1HvE18) (map (case-lambda ((g$x$14961$1HvE18) ((case-lambda ((g$t$14962$1HvE18) (if g$t$14962$1HvE18 (cdr g$t$14962$1HvE18) (g$syntax-violation$9695$1HvE18 'import '"cannot find identifier" g$x$14961$1HvE18)))) (assq g$x$14961$1HvE18 g$subst$14960$1HvE18)))) g$sym*$14959$1HvE18)))) (g$rem*$14551$1HvE18 (case-lambda ((g$sym*$14955$1HvE18 g$subst$14956$1HvE18) ((letrec ((g$f$14957$1HvE18 (case-lambda ((g$subst$14958$1HvE18) (if (null? g$subst$14958$1HvE18) '() (if (memq (g$caar$7544$1HvE18 g$subst$14958$1HvE18) g$sym*$14955$1HvE18) (g$f$14957$1HvE18 (cdr g$subst$14958$1HvE18)) (cons (car g$subst$14958$1HvE18) (g$f$14957$1HvE18 (cdr g$subst$14958$1HvE18))))))))) g$f$14957$1HvE18) g$subst$14956$1HvE18)))) (g$remove-dups$14552$1HvE18 (case-lambda ((g$ls$14954$1HvE18) (if (null? g$ls$14954$1HvE18) '() (if (memq (car g$ls$14954$1HvE18) (cdr g$ls$14954$1HvE18)) (g$remove-dups$14552$1HvE18 (cdr g$ls$14954$1HvE18)) (cons (car g$ls$14954$1HvE18) (g$remove-dups$14552$1HvE18 (cdr g$ls$14954$1HvE18)))))))) (g$parse-library-name$14553$1HvE18 (case-lambda ((g$spec$14740$1HvE18) (letrec* ((g$subversion?$14741$1HvE18 (case-lambda ((g$x$14953$1HvE18) (if (integer? g$x$14953$1HvE18) (if (exact? g$x$14953$1HvE18) (begin '#f (>= g$x$14953$1HvE18 '0)) '#f) '#f)))) (g$subversion-pred$14742$1HvE18 (case-lambda ((g$x*$14858$1HvE18) ((case-lambda ((g$t$14859$1HvE18) ((case-lambda ((g$ls/false$14860$1HvE18) (if (if g$ls/false$14860$1HvE18 (begin '#f (apply (case-lambda ((g$n$14861$1HvE18) (g$subversion?$14741$1HvE18 (g$syntax->datum$9698$1HvE18 g$n$14861$1HvE18)))) g$ls/false$14860$1HvE18)) '#f) (apply (case-lambda ((g$n$14862$1HvE18) (case-lambda ((g$x$14863$1HvE18) (= g$x$14863$1HvE18 (g$syntax->datum$9698$1HvE18 g$n$14862$1HvE18)))))) g$ls/false$14860$1HvE18) ((case-lambda ((g$t$14864$1HvE18) ((case-lambda ((g$ls/false$14865$1HvE18) (if (if g$ls/false$14865$1HvE18 (begin '#f (apply (case-lambda ((g$p?$14866$1HvE18 g$sub*$14867$1HvE18) (eq? (g$syntax->datum$9698$1HvE18 g$p?$14866$1HvE18) 'and))) g$ls/false$14865$1HvE18)) '#f) (apply (case-lambda ((g$p?$14868$1HvE18 g$sub*$14869$1HvE18) ((case-lambda ((g$p*$14870$1HvE18) (case-lambda ((g$x$14871$1HvE18) (g$for-all$7965$1HvE18 (case-lambda ((g$p$14872$1HvE18) (g$p$14872$1HvE18 g$x$14871$1HvE18))) g$p*$14870$1HvE18))))) (map g$subversion-pred$14742$1HvE18 g$sub*$14869$1HvE18)))) g$ls/false$14865$1HvE18) ((case-lambda ((g$t$14873$1HvE18) ((case-lambda ((g$ls/false$14874$1HvE18) (if (if g$ls/false$14874$1HvE18 (begin '#f (apply (case-lambda ((g$p?$14875$1HvE18 g$sub*$14876$1HvE18) (eq? (g$syntax->datum$9698$1HvE18 g$p?$14875$1HvE18) 'or))) g$ls/false$14874$1HvE18)) '#f) (apply (case-lambda ((g$p?$14877$1HvE18 g$sub*$14878$1HvE18) ((case-lambda ((g$p*$14879$1HvE18) (case-lambda ((g$x$14880$1HvE18) (g$exists$7966$1HvE18 (case-lambda ((g$p$14881$1HvE18) (g$p$14881$1HvE18 g$x$14880$1HvE18))) g$p*$14879$1HvE18))))) (map g$subversion-pred$14742$1HvE18 g$sub*$14878$1HvE18)))) g$ls/false$14874$1HvE18) ((case-lambda ((g$t$14882$1HvE18) ((case-lambda ((g$ls/false$14883$1HvE18) (if (if g$ls/false$14883$1HvE18 (begin '#f (apply (case-lambda ((g$p?$14884$1HvE18 g$sub$14885$1HvE18) (eq? (g$syntax->datum$9698$1HvE18 g$p?$14884$1HvE18) 'not))) g$ls/false$14883$1HvE18)) '#f) (apply (case-lambda ((g$p?$14886$1HvE18 g$sub$14887$1HvE18) ((case-lambda ((g$p$14888$1HvE18) (case-lambda ((g$x$14889$1HvE18) (not (g$p$14888$1HvE18 g$x$14889$1HvE18)))))) (g$subversion-pred$14742$1HvE18 g$sub$14887$1HvE18)))) g$ls/false$14883$1HvE18) ((case-lambda ((g$t$14890$1HvE18) ((case-lambda ((g$ls/false$14891$1HvE18) (if (if g$ls/false$14891$1HvE18 (begin '#f (apply (case-lambda ((g$p?$14892$1HvE18 g$n$14893$1HvE18) (if (eq? (g$syntax->datum$9698$1HvE18 g$p?$14892$1HvE18) '<=) (begin '#f (g$subversion?$14741$1HvE18 (g$syntax->datum$9698$1HvE18 g$n$14893$1HvE18))) '#f))) g$ls/false$14891$1HvE18)) '#f) (apply (case-lambda ((g$p?$14894$1HvE18 g$n$14895$1HvE18) (case-lambda ((g$x$14896$1HvE18) (<= g$x$14896$1HvE18 (g$syntax->datum$9698$1HvE18 g$n$14895$1HvE18)))))) g$ls/false$14891$1HvE18) ((case-lambda ((g$t$14897$1HvE18) ((case-lambda ((g$ls/false$14898$1HvE18) (if (if g$ls/false$14898$1HvE18 (begin '#f (apply (case-lambda ((g$p?$14899$1HvE18 g$n$14900$1HvE18) (if (eq? (g$syntax->datum$9698$1HvE18 g$p?$14899$1HvE18) '>=) (begin '#f (g$subversion?$14741$1HvE18 g$n$14900$1HvE18)) '#f))) g$ls/false$14898$1HvE18)) '#f) (apply (case-lambda ((g$p?$14901$1HvE18 g$n$14902$1HvE18) (case-lambda ((g$x$14903$1HvE18) (>= g$x$14903$1HvE18 (g$syntax->datum$9698$1HvE18 g$n$14902$1HvE18)))))) g$ls/false$14898$1HvE18) ((case-lambda ((g$t$14904$1HvE18) ((case-lambda ((g$ls/false$14905$1HvE18) (if (if g$ls/false$14905$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$14905$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 'import '"invalid sub-version spec" g$spec$14740$1HvE18 g$x*$14858$1HvE18))) g$ls/false$14905$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14904$1HvE18)))) ((case-lambda ((g$x$14906$1HvE18) '())) g$t$14904$1HvE18)))) g$t$14897$1HvE18)))) ((case-lambda ((g$x$14907$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14907$1HvE18) (begin '#f ((case-lambda ((g$q$14908$1HvE18) (if g$q$14908$1HvE18 (begin '#f ((case-lambda ((g$r$14909$1HvE18) (if g$r$14909$1HvE18 (begin '#f (append g$q$14908$1HvE18 g$r$14909$1HvE18)) '#f))) ((case-lambda ((g$x$14910$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14910$1HvE18) (begin '#f ((case-lambda ((g$q$14911$1HvE18) (if g$q$14911$1HvE18 (begin '#f ((case-lambda ((g$r$14912$1HvE18) (if g$r$14912$1HvE18 (begin '#f (append g$q$14911$1HvE18 g$r$14912$1HvE18)) '#f))) ((case-lambda ((g$x$14913$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14913$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14910$1HvE18)))) '#f))) ((case-lambda ((g$x$14914$1HvE18) (list g$x$14914$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14910$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14907$1HvE18)))) '#f))) ((case-lambda ((g$x$14915$1HvE18) (list g$x$14915$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14907$1HvE18)))) '#f))) g$t$14897$1HvE18)))) g$t$14890$1HvE18)))) ((case-lambda ((g$x$14916$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14916$1HvE18) (begin '#f ((case-lambda ((g$q$14917$1HvE18) (if g$q$14917$1HvE18 (begin '#f ((case-lambda ((g$r$14918$1HvE18) (if g$r$14918$1HvE18 (begin '#f (append g$q$14917$1HvE18 g$r$14918$1HvE18)) '#f))) ((case-lambda ((g$x$14919$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14919$1HvE18) (begin '#f ((case-lambda ((g$q$14920$1HvE18) (if g$q$14920$1HvE18 (begin '#f ((case-lambda ((g$r$14921$1HvE18) (if g$r$14921$1HvE18 (begin '#f (append g$q$14920$1HvE18 g$r$14921$1HvE18)) '#f))) ((case-lambda ((g$x$14922$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14922$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14919$1HvE18)))) '#f))) ((case-lambda ((g$x$14923$1HvE18) (list g$x$14923$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14919$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14916$1HvE18)))) '#f))) ((case-lambda ((g$x$14924$1HvE18) (list g$x$14924$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14916$1HvE18)))) '#f))) g$t$14890$1HvE18)))) g$t$14882$1HvE18)))) ((case-lambda ((g$x$14925$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14925$1HvE18) (begin '#f ((case-lambda ((g$q$14926$1HvE18) (if g$q$14926$1HvE18 (begin '#f ((case-lambda ((g$r$14927$1HvE18) (if g$r$14927$1HvE18 (begin '#f (append g$q$14926$1HvE18 g$r$14927$1HvE18)) '#f))) ((case-lambda ((g$x$14928$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14928$1HvE18) (begin '#f ((case-lambda ((g$q$14929$1HvE18) (if g$q$14929$1HvE18 (begin '#f ((case-lambda ((g$r$14930$1HvE18) (if g$r$14930$1HvE18 (begin '#f (append g$q$14929$1HvE18 g$r$14930$1HvE18)) '#f))) ((case-lambda ((g$x$14931$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14931$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14928$1HvE18)))) '#f))) ((case-lambda ((g$x$14932$1HvE18) (list g$x$14932$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14928$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14925$1HvE18)))) '#f))) ((case-lambda ((g$x$14933$1HvE18) (list g$x$14933$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14925$1HvE18)))) '#f))) g$t$14882$1HvE18)))) g$t$14873$1HvE18)))) ((case-lambda ((g$x$14934$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14934$1HvE18) (begin '#f ((case-lambda ((g$q$14935$1HvE18) (if g$q$14935$1HvE18 (begin '#f ((case-lambda ((g$r$14936$1HvE18) (if g$r$14936$1HvE18 (begin '#f (append g$q$14935$1HvE18 g$r$14936$1HvE18)) '#f))) ((letrec ((g$f$14937$1HvE18 (case-lambda ((g$x$14938$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14938$1HvE18) ((case-lambda ((g$cars/f$14939$1HvE18) (if g$cars/f$14939$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14940$1HvE18) (if g$cdrs/f$14940$1HvE18 (begin '#f (map cons g$cars/f$14939$1HvE18 g$cdrs/f$14940$1HvE18)) '#f))) (g$f$14937$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14938$1HvE18)))) '#f))) ((case-lambda ((g$x$14941$1HvE18) (list g$x$14941$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14938$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14938$1HvE18) (list (begin 'sub* '())) '#f)))))) g$f$14937$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14934$1HvE18)))) '#f))) ((case-lambda ((g$x$14942$1HvE18) (list g$x$14942$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14934$1HvE18)))) '#f))) g$t$14873$1HvE18)))) g$t$14864$1HvE18)))) ((case-lambda ((g$x$14943$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14943$1HvE18) (begin '#f ((case-lambda ((g$q$14944$1HvE18) (if g$q$14944$1HvE18 (begin '#f ((case-lambda ((g$r$14945$1HvE18) (if g$r$14945$1HvE18 (begin '#f (append g$q$14944$1HvE18 g$r$14945$1HvE18)) '#f))) ((letrec ((g$f$14946$1HvE18 (case-lambda ((g$x$14947$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14947$1HvE18) ((case-lambda ((g$cars/f$14948$1HvE18) (if g$cars/f$14948$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14949$1HvE18) (if g$cdrs/f$14949$1HvE18 (begin '#f (map cons g$cars/f$14948$1HvE18 g$cdrs/f$14949$1HvE18)) '#f))) (g$f$14946$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14947$1HvE18)))) '#f))) ((case-lambda ((g$x$14950$1HvE18) (list g$x$14950$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14947$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14947$1HvE18) (list (begin 'sub* '())) '#f)))))) g$f$14946$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14943$1HvE18)))) '#f))) ((case-lambda ((g$x$14951$1HvE18) (list g$x$14951$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14943$1HvE18)))) '#f))) g$t$14864$1HvE18)))) g$t$14859$1HvE18)))) ((case-lambda ((g$x$14952$1HvE18) (list g$x$14952$1HvE18))) g$t$14859$1HvE18)))) g$x*$14858$1HvE18)))) (g$version-pred$14743$1HvE18 (case-lambda ((g$x*$14783$1HvE18) ((case-lambda ((g$t$14784$1HvE18) ((case-lambda ((g$ls/false$14785$1HvE18) (if (if g$ls/false$14785$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$14785$1HvE18)) '#f) (apply (case-lambda (() (case-lambda ((g$x$14786$1HvE18) '#t)))) g$ls/false$14785$1HvE18) ((case-lambda ((g$t$14787$1HvE18) ((case-lambda ((g$ls/false$14788$1HvE18) (if (if g$ls/false$14788$1HvE18 (begin '#f (apply (case-lambda ((g$c$14789$1HvE18 g$ver*$14790$1HvE18) (eq? (g$syntax->datum$9698$1HvE18 g$c$14789$1HvE18) 'and))) g$ls/false$14788$1HvE18)) '#f) (apply (case-lambda ((g$c$14791$1HvE18 g$ver*$14792$1HvE18) ((case-lambda ((g$p*$14793$1HvE18) (case-lambda ((g$x$14794$1HvE18) (g$for-all$7965$1HvE18 (case-lambda ((g$p$14795$1HvE18) (g$p$14795$1HvE18 g$x$14794$1HvE18))) g$p*$14793$1HvE18))))) (map g$version-pred$14743$1HvE18 g$ver*$14792$1HvE18)))) g$ls/false$14788$1HvE18) ((case-lambda ((g$t$14796$1HvE18) ((case-lambda ((g$ls/false$14797$1HvE18) (if (if g$ls/false$14797$1HvE18 (begin '#f (apply (case-lambda ((g$c$14798$1HvE18 g$ver*$14799$1HvE18) (eq? (g$syntax->datum$9698$1HvE18 g$c$14798$1HvE18) 'or))) g$ls/false$14797$1HvE18)) '#f) (apply (case-lambda ((g$c$14800$1HvE18 g$ver*$14801$1HvE18) ((case-lambda ((g$p*$14802$1HvE18) (case-lambda ((g$x$14803$1HvE18) (g$exists$7966$1HvE18 (case-lambda ((g$p$14804$1HvE18) (g$p$14804$1HvE18 g$x$14803$1HvE18))) g$p*$14802$1HvE18))))) (map g$version-pred$14743$1HvE18 g$ver*$14801$1HvE18)))) g$ls/false$14797$1HvE18) ((case-lambda ((g$t$14805$1HvE18) ((case-lambda ((g$ls/false$14806$1HvE18) (if (if g$ls/false$14806$1HvE18 (begin '#f (apply (case-lambda ((g$c$14807$1HvE18 g$ver$14808$1HvE18) (eq? (g$syntax->datum$9698$1HvE18 g$c$14807$1HvE18) 'not))) g$ls/false$14806$1HvE18)) '#f) (apply (case-lambda ((g$c$14809$1HvE18 g$ver$14810$1HvE18) ((case-lambda ((g$p$14811$1HvE18) (case-lambda ((g$x$14812$1HvE18) (not (g$p$14811$1HvE18 g$x$14812$1HvE18)))))) (g$version-pred$14743$1HvE18 g$ver$14810$1HvE18)))) g$ls/false$14806$1HvE18) ((case-lambda ((g$t$14813$1HvE18) ((case-lambda ((g$ls/false$14814$1HvE18) (if (if g$ls/false$14814$1HvE18 (begin '#f (apply (case-lambda ((g$sub*$14815$1HvE18) '#t)) g$ls/false$14814$1HvE18)) '#f) (apply (case-lambda ((g$sub*$14816$1HvE18) ((case-lambda ((g$p*$14817$1HvE18) (case-lambda ((g$x$14818$1HvE18) ((letrec ((g$f$14819$1HvE18 (case-lambda ((g$p*$14820$1HvE18 g$x$14821$1HvE18) (if (null? g$p*$14820$1HvE18) '#t (if (null? g$x$14821$1HvE18) '#f (if ((car g$p*$14820$1HvE18) (car g$x$14821$1HvE18)) (begin '#f (g$f$14819$1HvE18 (cdr g$p*$14820$1HvE18) (cdr g$x*$14783$1HvE18))) '#f))))))) g$f$14819$1HvE18) g$p*$14817$1HvE18 g$x$14818$1HvE18))))) (map g$subversion-pred$14742$1HvE18 g$sub*$14816$1HvE18)))) g$ls/false$14814$1HvE18) ((case-lambda ((g$t$14822$1HvE18) ((case-lambda ((g$ls/false$14823$1HvE18) (if (if g$ls/false$14823$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$14823$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 'import '"invalid version spec" g$spec$14740$1HvE18 g$x*$14783$1HvE18))) g$ls/false$14823$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14822$1HvE18)))) ((case-lambda ((g$x$14824$1HvE18) '())) g$t$14822$1HvE18)))) g$t$14813$1HvE18)))) ((letrec ((g$f$14825$1HvE18 (case-lambda ((g$x$14826$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14826$1HvE18) ((case-lambda ((g$cars/f$14827$1HvE18) (if g$cars/f$14827$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14828$1HvE18) (if g$cdrs/f$14828$1HvE18 (begin '#f (map cons g$cars/f$14827$1HvE18 g$cdrs/f$14828$1HvE18)) '#f))) (g$f$14825$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14826$1HvE18)))) '#f))) ((case-lambda ((g$x$14829$1HvE18) (list g$x$14829$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14826$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14826$1HvE18) (list (begin 'sub* '())) '#f)))))) g$f$14825$1HvE18) g$t$14813$1HvE18)))) g$t$14805$1HvE18)))) ((case-lambda ((g$x$14830$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14830$1HvE18) (begin '#f ((case-lambda ((g$q$14831$1HvE18) (if g$q$14831$1HvE18 (begin '#f ((case-lambda ((g$r$14832$1HvE18) (if g$r$14832$1HvE18 (begin '#f (append g$q$14831$1HvE18 g$r$14832$1HvE18)) '#f))) ((case-lambda ((g$x$14833$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14833$1HvE18) (begin '#f ((case-lambda ((g$q$14834$1HvE18) (if g$q$14834$1HvE18 (begin '#f ((case-lambda ((g$r$14835$1HvE18) (if g$r$14835$1HvE18 (begin '#f (append g$q$14834$1HvE18 g$r$14835$1HvE18)) '#f))) ((case-lambda ((g$x$14836$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14836$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14833$1HvE18)))) '#f))) ((case-lambda ((g$x$14837$1HvE18) (list g$x$14837$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14833$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14830$1HvE18)))) '#f))) ((case-lambda ((g$x$14838$1HvE18) (list g$x$14838$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14830$1HvE18)))) '#f))) g$t$14805$1HvE18)))) g$t$14796$1HvE18)))) ((case-lambda ((g$x$14839$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14839$1HvE18) (begin '#f ((case-lambda ((g$q$14840$1HvE18) (if g$q$14840$1HvE18 (begin '#f ((case-lambda ((g$r$14841$1HvE18) (if g$r$14841$1HvE18 (begin '#f (append g$q$14840$1HvE18 g$r$14841$1HvE18)) '#f))) ((letrec ((g$f$14842$1HvE18 (case-lambda ((g$x$14843$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14843$1HvE18) ((case-lambda ((g$cars/f$14844$1HvE18) (if g$cars/f$14844$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14845$1HvE18) (if g$cdrs/f$14845$1HvE18 (begin '#f (map cons g$cars/f$14844$1HvE18 g$cdrs/f$14845$1HvE18)) '#f))) (g$f$14842$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14843$1HvE18)))) '#f))) ((case-lambda ((g$x$14846$1HvE18) (list g$x$14846$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14843$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14843$1HvE18) (list (begin 'ver* '())) '#f)))))) g$f$14842$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14839$1HvE18)))) '#f))) ((case-lambda ((g$x$14847$1HvE18) (list g$x$14847$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14839$1HvE18)))) '#f))) g$t$14796$1HvE18)))) g$t$14787$1HvE18)))) ((case-lambda ((g$x$14848$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14848$1HvE18) (begin '#f ((case-lambda ((g$q$14849$1HvE18) (if g$q$14849$1HvE18 (begin '#f ((case-lambda ((g$r$14850$1HvE18) (if g$r$14850$1HvE18 (begin '#f (append g$q$14849$1HvE18 g$r$14850$1HvE18)) '#f))) ((letrec ((g$f$14851$1HvE18 (case-lambda ((g$x$14852$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14852$1HvE18) ((case-lambda ((g$cars/f$14853$1HvE18) (if g$cars/f$14853$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14854$1HvE18) (if g$cdrs/f$14854$1HvE18 (begin '#f (map cons g$cars/f$14853$1HvE18 g$cdrs/f$14854$1HvE18)) '#f))) (g$f$14851$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14852$1HvE18)))) '#f))) ((case-lambda ((g$x$14855$1HvE18) (list g$x$14855$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14852$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14852$1HvE18) (list (begin 'ver* '())) '#f)))))) g$f$14851$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14848$1HvE18)))) '#f))) ((case-lambda ((g$x$14856$1HvE18) (list g$x$14856$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14848$1HvE18)))) '#f))) g$t$14787$1HvE18)))) g$t$14784$1HvE18)))) ((case-lambda ((g$x$14857$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14857$1HvE18) '()) (begin '#f '()) '#f))) g$t$14784$1HvE18)))) g$x*$14783$1HvE18))))) ((letrec ((g$f$14744$1HvE18 (case-lambda ((g$x$14745$1HvE18) ((case-lambda ((g$t$14746$1HvE18) ((case-lambda ((g$ls/false$14747$1HvE18) (if (if g$ls/false$14747$1HvE18 (begin '#f (apply (case-lambda ((g$version-spec*$14748$1HvE18) '#t)) g$ls/false$14747$1HvE18)) '#f) (apply (case-lambda ((g$version-spec*$14749$1HvE18) (values '() (g$version-pred$14743$1HvE18 g$version-spec*$14749$1HvE18)))) g$ls/false$14747$1HvE18) ((case-lambda ((g$t$14750$1HvE18) ((case-lambda ((g$ls/false$14751$1HvE18) (if (if g$ls/false$14751$1HvE18 (begin '#f (apply (case-lambda ((g$x$14752$1HvE18 g$x*$14753$1HvE18) (g$idsyn?$14546$1HvE18 g$x$14752$1HvE18))) g$ls/false$14751$1HvE18)) '#f) (apply (case-lambda ((g$x$14754$1HvE18 g$x*$14755$1HvE18) (call-with-values (case-lambda (() (g$f$14744$1HvE18 g$x*$14755$1HvE18))) (case-lambda ((g$name$14758$1HvE18 g$pred$14759$1HvE18) ((case-lambda ((g$pred$14760$1HvE18 g$name$14761$1HvE18) (values (cons (g$syntax->datum$9698$1HvE18 g$x$14754$1HvE18) g$name$14761$1HvE18) g$pred$14760$1HvE18))) g$pred$14759$1HvE18 g$name$14758$1HvE18)))))) g$ls/false$14751$1HvE18) ((case-lambda ((g$t$14762$1HvE18) ((case-lambda ((g$ls/false$14763$1HvE18) (if (if g$ls/false$14763$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$14763$1HvE18)) '#f) (apply (case-lambda (() (values '() (case-lambda ((g$x$14764$1HvE18) '#t))))) g$ls/false$14763$1HvE18) ((case-lambda ((g$t$14765$1HvE18) ((case-lambda ((g$ls/false$14766$1HvE18) (if (if g$ls/false$14766$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$14766$1HvE18)) '#f) (apply (case-lambda (() (g$syntax-violation$9695$1HvE18 '#f '"invalid import spec" g$spec$14740$1HvE18))) g$ls/false$14766$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14765$1HvE18)))) ((case-lambda ((g$x$14767$1HvE18) '())) g$t$14765$1HvE18)))) g$t$14762$1HvE18)))) ((case-lambda ((g$x$14768$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14768$1HvE18) '()) (begin '#f '()) '#f))) g$t$14762$1HvE18)))) g$t$14750$1HvE18)))) ((case-lambda ((g$x$14769$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14769$1HvE18) (begin '#f ((case-lambda ((g$q$14770$1HvE18) (if g$q$14770$1HvE18 (begin '#f ((case-lambda ((g$r$14771$1HvE18) (if g$r$14771$1HvE18 (begin '#f (append g$q$14770$1HvE18 g$r$14771$1HvE18)) '#f))) ((case-lambda ((g$x$14772$1HvE18) (list g$x$14772$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$14769$1HvE18)))) '#f))) ((case-lambda ((g$x$14773$1HvE18) (list g$x$14773$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14769$1HvE18)))) '#f))) g$t$14750$1HvE18)))) g$t$14746$1HvE18)))) ((case-lambda ((g$x$14774$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14774$1HvE18) (begin '#f ((case-lambda ((g$q$14775$1HvE18) (if g$q$14775$1HvE18 (begin '#f ((case-lambda ((g$r$14776$1HvE18) (if g$r$14776$1HvE18 (begin '#f (append g$q$14775$1HvE18 g$r$14776$1HvE18)) '#f))) ((case-lambda ((g$x$14777$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14777$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14774$1HvE18)))) '#f))) ((letrec ((g$f$14778$1HvE18 (case-lambda ((g$x$14779$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14779$1HvE18) ((case-lambda ((g$cars/f$14780$1HvE18) (if g$cars/f$14780$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14781$1HvE18) (if g$cdrs/f$14781$1HvE18 (begin '#f (map cons g$cars/f$14780$1HvE18 g$cdrs/f$14781$1HvE18)) '#f))) (g$f$14778$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14779$1HvE18)))) '#f))) ((case-lambda ((g$x$14782$1HvE18) (list g$x$14782$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14779$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14779$1HvE18) (list (begin 'version-spec* '())) '#f)))))) g$f$14778$1HvE18) (g$syntax-car$9309$1HvE18 g$x$14774$1HvE18)))) '#f))) g$t$14746$1HvE18)))) g$x$14745$1HvE18))))) g$f$14744$1HvE18) g$spec$14740$1HvE18))))) (g$import-library$14554$1HvE18 (case-lambda ((g$spec*$14732$1HvE18) (call-with-values (case-lambda (() (g$parse-library-name$14553$1HvE18 g$spec*$14732$1HvE18))) (case-lambda ((g$name$14735$1HvE18 g$pred$14736$1HvE18) ((case-lambda ((g$pred$14737$1HvE18 g$name$14738$1HvE18) (begin (if (null? g$name$14738$1HvE18) (g$syntax-violation$9695$1HvE18 'import '"empty library name" g$spec*$14732$1HvE18) (void)) ((case-lambda ((g$lib$14739$1HvE18) (begin (if g$lib$14739$1HvE18 (void) (g$syntax-violation$9695$1HvE18 'import '"cannot find library with required name" g$name$14738$1HvE18)) (if (g$pred$14737$1HvE18 (g$library-version$9081$1HvE18 g$lib$14739$1HvE18)) (void) (g$syntax-violation$9695$1HvE18 'import '"library does not satisfy version specification" g$spec*$14732$1HvE18 g$lib$14739$1HvE18)) ((g$imp-collector$9643$1HvE18) g$lib$14739$1HvE18) (g$library-subst$9085$1HvE18 g$lib$14739$1HvE18)))) (g$find-library-by-name$9121$1HvE18 g$name$14738$1HvE18))))) g$pred$14736$1HvE18 g$name$14735$1HvE18))))))) (g$get-import$14555$1HvE18 (case-lambda ((g$spec$14568$1HvE18) ((case-lambda ((g$t$14569$1HvE18) ((case-lambda ((g$ls/false$14570$1HvE18) (if (if g$ls/false$14570$1HvE18 (begin '#f (apply (case-lambda ((g$x$14571$1HvE18 g$x*$14572$1HvE18) (not (memq (g$syntax->datum$9698$1HvE18 g$x$14571$1HvE18) '(for rename except only prefix library))))) g$ls/false$14570$1HvE18)) '#f) (apply (case-lambda ((g$x$14573$1HvE18 g$x*$14574$1HvE18) (g$import-library$14554$1HvE18 (cons g$x$14573$1HvE18 g$x*$14574$1HvE18)))) g$ls/false$14570$1HvE18) ((case-lambda ((g$t$14575$1HvE18) ((case-lambda ((g$ls/false$14576$1HvE18) (if (if g$ls/false$14576$1HvE18 (begin '#f (apply (case-lambda ((g$rename$14577$1HvE18 g$isp$14578$1HvE18 g$old*$14579$1HvE18 g$new*$14580$1HvE18) (if (eq? (g$syntax->datum$9698$1HvE18 g$rename$14577$1HvE18) 'rename) (if (g$for-all$7965$1HvE18 g$idsyn?$14546$1HvE18 g$old*$14579$1HvE18) (begin '#f (g$for-all$7965$1HvE18 g$idsyn?$14546$1HvE18 g$new*$14580$1HvE18)) '#f) '#f))) g$ls/false$14576$1HvE18)) '#f) (apply (case-lambda ((g$rename$14581$1HvE18 g$isp$14582$1HvE18 g$old*$14583$1HvE18 g$new*$14584$1HvE18) ((case-lambda ((g$subst$14585$1HvE18 g$old*$14586$1HvE18 g$new*$14587$1HvE18) ((case-lambda ((g$old-label*$14588$1HvE18) ((case-lambda ((g$subst$14589$1HvE18) (g$merge-substs$14548$1HvE18 (map cons g$new*$14587$1HvE18 g$old-label*$14588$1HvE18) g$subst$14589$1HvE18))) (g$rem*$14551$1HvE18 g$old*$14586$1HvE18 g$subst$14585$1HvE18)))) (g$find*$14550$1HvE18 g$old*$14586$1HvE18 g$subst$14585$1HvE18)))) (g$get-import$14555$1HvE18 g$isp$14582$1HvE18) (map g$syntax->datum$9698$1HvE18 g$old*$14583$1HvE18) (map g$syntax->datum$9698$1HvE18 g$new*$14584$1HvE18)))) g$ls/false$14576$1HvE18) ((case-lambda ((g$t$14590$1HvE18) ((case-lambda ((g$ls/false$14591$1HvE18) (if (if g$ls/false$14591$1HvE18 (begin '#f (apply (case-lambda ((g$except$14592$1HvE18 g$isp$14593$1HvE18 g$sym*$14594$1HvE18) (if (eq? (g$syntax->datum$9698$1HvE18 g$except$14592$1HvE18) 'except) (begin '#f (g$for-all$7965$1HvE18 g$idsyn?$14546$1HvE18 g$sym*$14594$1HvE18)) '#f))) g$ls/false$14591$1HvE18)) '#f) (apply (case-lambda ((g$except$14595$1HvE18 g$isp$14596$1HvE18 g$sym*$14597$1HvE18) ((case-lambda ((g$subst$14598$1HvE18) (g$rem*$14551$1HvE18 (map g$syntax->datum$9698$1HvE18 g$sym*$14597$1HvE18) g$subst$14598$1HvE18))) (g$get-import$14555$1HvE18 g$isp$14596$1HvE18)))) g$ls/false$14591$1HvE18) ((case-lambda ((g$t$14599$1HvE18) ((case-lambda ((g$ls/false$14600$1HvE18) (if (if g$ls/false$14600$1HvE18 (begin '#f (apply (case-lambda ((g$only$14601$1HvE18 g$isp$14602$1HvE18 g$sym*$14603$1HvE18) (if (eq? (g$syntax->datum$9698$1HvE18 g$only$14601$1HvE18) 'only) (begin '#f (g$for-all$7965$1HvE18 g$idsyn?$14546$1HvE18 g$sym*$14603$1HvE18)) '#f))) g$ls/false$14600$1HvE18)) '#f) (apply (case-lambda ((g$only$14604$1HvE18 g$isp$14605$1HvE18 g$sym*$14606$1HvE18) ((case-lambda ((g$subst$14607$1HvE18 g$sym*$14608$1HvE18) ((case-lambda ((g$sym*$14609$1HvE18) ((case-lambda ((g$lab*$14610$1HvE18) (map cons g$sym*$14609$1HvE18 g$lab*$14610$1HvE18))) (g$find*$14550$1HvE18 g$sym*$14609$1HvE18 g$subst$14607$1HvE18)))) (g$remove-dups$14552$1HvE18 g$sym*$14608$1HvE18)))) (g$get-import$14555$1HvE18 g$isp$14605$1HvE18) (map g$syntax->datum$9698$1HvE18 g$sym*$14606$1HvE18)))) g$ls/false$14600$1HvE18) ((case-lambda ((g$t$14611$1HvE18) ((case-lambda ((g$ls/false$14612$1HvE18) (if (if g$ls/false$14612$1HvE18 (begin '#f (apply (case-lambda ((g$prefix$14613$1HvE18 g$isp$14614$1HvE18 g$p$14615$1HvE18) (if (eq? (g$syntax->datum$9698$1HvE18 g$prefix$14613$1HvE18) 'prefix) (begin '#f (g$idsyn?$14546$1HvE18 g$p$14615$1HvE18)) '#f))) g$ls/false$14612$1HvE18)) '#f) (apply (case-lambda ((g$prefix$14616$1HvE18 g$isp$14617$1HvE18 g$p$14618$1HvE18) ((case-lambda ((g$subst$14619$1HvE18 g$prefix$14620$1HvE18) (map (case-lambda ((g$x$14621$1HvE18) (cons (string->symbol (string-append g$prefix$14620$1HvE18 (symbol->string (car g$x$14621$1HvE18)))) (cdr g$x$14621$1HvE18)))) g$subst$14619$1HvE18))) (g$get-import$14555$1HvE18 g$isp$14617$1HvE18) (symbol->string (g$syntax->datum$9698$1HvE18 g$p$14618$1HvE18))))) g$ls/false$14612$1HvE18) ((case-lambda ((g$t$14622$1HvE18) ((case-lambda ((g$ls/false$14623$1HvE18) (if (if g$ls/false$14623$1HvE18 (begin '#f (apply (case-lambda ((g$library$14624$1HvE18 g$spec*$14625$1HvE18) (eq? (g$syntax->datum$9698$1HvE18 g$library$14624$1HvE18) 'library))) g$ls/false$14623$1HvE18)) '#f) (apply (case-lambda ((g$library$14626$1HvE18 g$spec*$14627$1HvE18) (g$import-library$14554$1HvE18 g$spec*$14627$1HvE18))) g$ls/false$14623$1HvE18) ((case-lambda ((g$t$14628$1HvE18) ((case-lambda ((g$ls/false$14629$1HvE18) (if (if g$ls/false$14629$1HvE18 (begin '#f (apply (case-lambda ((g$for$14630$1HvE18 g$isp$14631$1HvE18 g$rest$14632$1HvE18) (eq? (g$syntax->datum$9698$1HvE18 g$for$14630$1HvE18) 'for))) g$ls/false$14629$1HvE18)) '#f) (apply (case-lambda ((g$for$14633$1HvE18 g$isp$14634$1HvE18 g$rest$14635$1HvE18) (g$get-import$14555$1HvE18 g$isp$14634$1HvE18))) g$ls/false$14629$1HvE18) ((case-lambda ((g$t$14636$1HvE18) ((case-lambda ((g$ls/false$14637$1HvE18) (if (if g$ls/false$14637$1HvE18 (begin '#f (apply (case-lambda ((g$spec$14638$1HvE18) '#t)) g$ls/false$14637$1HvE18)) '#f) (apply (case-lambda ((g$spec$14639$1HvE18) (g$syntax-violation$9695$1HvE18 'import '"invalid import spec" g$spec$14639$1HvE18))) g$ls/false$14637$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$14636$1HvE18)))) ((case-lambda ((g$x$14640$1HvE18) (list g$x$14640$1HvE18))) g$t$14636$1HvE18)))) g$t$14628$1HvE18)))) ((case-lambda ((g$x$14641$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14641$1HvE18) (begin '#f ((case-lambda ((g$q$14642$1HvE18) (if g$q$14642$1HvE18 (begin '#f ((case-lambda ((g$r$14643$1HvE18) (if g$r$14643$1HvE18 (begin '#f (append g$q$14642$1HvE18 g$r$14643$1HvE18)) '#f))) ((case-lambda ((g$x$14644$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14644$1HvE18) (begin '#f ((case-lambda ((g$q$14645$1HvE18) (if g$q$14645$1HvE18 (begin '#f ((case-lambda ((g$r$14646$1HvE18) (if g$r$14646$1HvE18 (begin '#f (append g$q$14645$1HvE18 g$r$14646$1HvE18)) '#f))) ((case-lambda ((g$x$14647$1HvE18) (list g$x$14647$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$14644$1HvE18)))) '#f))) ((case-lambda ((g$x$14648$1HvE18) (list g$x$14648$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14644$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14641$1HvE18)))) '#f))) ((case-lambda ((g$x$14649$1HvE18) (list g$x$14649$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14641$1HvE18)))) '#f))) g$t$14628$1HvE18)))) g$t$14622$1HvE18)))) ((case-lambda ((g$x$14650$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14650$1HvE18) (begin '#f ((case-lambda ((g$q$14651$1HvE18) (if g$q$14651$1HvE18 (begin '#f ((case-lambda ((g$r$14652$1HvE18) (if g$r$14652$1HvE18 (begin '#f (append g$q$14651$1HvE18 g$r$14652$1HvE18)) '#f))) ((case-lambda ((g$x$14653$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14653$1HvE18) (begin '#f ((case-lambda ((g$q$14654$1HvE18) (if g$q$14654$1HvE18 (begin '#f ((case-lambda ((g$r$14655$1HvE18) (if g$r$14655$1HvE18 (begin '#f (append g$q$14654$1HvE18 g$r$14655$1HvE18)) '#f))) ((case-lambda ((g$x$14656$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14656$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14653$1HvE18)))) '#f))) ((letrec ((g$f$14657$1HvE18 (case-lambda ((g$x$14658$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14658$1HvE18) ((case-lambda ((g$cars/f$14659$1HvE18) (if g$cars/f$14659$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14660$1HvE18) (if g$cdrs/f$14660$1HvE18 (begin '#f (map cons g$cars/f$14659$1HvE18 g$cdrs/f$14660$1HvE18)) '#f))) (g$f$14657$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14658$1HvE18)))) '#f))) ((case-lambda ((g$x$14661$1HvE18) (list g$x$14661$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14658$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14658$1HvE18) (list (begin 'spec* '())) '#f)))))) g$f$14657$1HvE18) (g$syntax-car$9309$1HvE18 g$x$14653$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14650$1HvE18)))) '#f))) ((case-lambda ((g$x$14662$1HvE18) (list g$x$14662$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14650$1HvE18)))) '#f))) g$t$14622$1HvE18)))) g$t$14611$1HvE18)))) ((case-lambda ((g$x$14663$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14663$1HvE18) (begin '#f ((case-lambda ((g$q$14664$1HvE18) (if g$q$14664$1HvE18 (begin '#f ((case-lambda ((g$r$14665$1HvE18) (if g$r$14665$1HvE18 (begin '#f (append g$q$14664$1HvE18 g$r$14665$1HvE18)) '#f))) ((case-lambda ((g$x$14666$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14666$1HvE18) (begin '#f ((case-lambda ((g$q$14667$1HvE18) (if g$q$14667$1HvE18 (begin '#f ((case-lambda ((g$r$14668$1HvE18) (if g$r$14668$1HvE18 (begin '#f (append g$q$14667$1HvE18 g$r$14668$1HvE18)) '#f))) ((case-lambda ((g$x$14669$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14669$1HvE18) (begin '#f ((case-lambda ((g$q$14670$1HvE18) (if g$q$14670$1HvE18 (begin '#f ((case-lambda ((g$r$14671$1HvE18) (if g$r$14671$1HvE18 (begin '#f (append g$q$14670$1HvE18 g$r$14671$1HvE18)) '#f))) ((case-lambda ((g$x$14672$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14672$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14669$1HvE18)))) '#f))) ((case-lambda ((g$x$14673$1HvE18) (list g$x$14673$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14669$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14666$1HvE18)))) '#f))) ((case-lambda ((g$x$14674$1HvE18) (list g$x$14674$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14666$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14663$1HvE18)))) '#f))) ((case-lambda ((g$x$14675$1HvE18) (list g$x$14675$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14663$1HvE18)))) '#f))) g$t$14611$1HvE18)))) g$t$14599$1HvE18)))) ((case-lambda ((g$x$14676$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14676$1HvE18) (begin '#f ((case-lambda ((g$q$14677$1HvE18) (if g$q$14677$1HvE18 (begin '#f ((case-lambda ((g$r$14678$1HvE18) (if g$r$14678$1HvE18 (begin '#f (append g$q$14677$1HvE18 g$r$14678$1HvE18)) '#f))) ((case-lambda ((g$x$14679$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14679$1HvE18) (begin '#f ((case-lambda ((g$q$14680$1HvE18) (if g$q$14680$1HvE18 (begin '#f ((case-lambda ((g$r$14681$1HvE18) (if g$r$14681$1HvE18 (begin '#f (append g$q$14680$1HvE18 g$r$14681$1HvE18)) '#f))) ((letrec ((g$f$14682$1HvE18 (case-lambda ((g$x$14683$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14683$1HvE18) ((case-lambda ((g$cars/f$14684$1HvE18) (if g$cars/f$14684$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14685$1HvE18) (if g$cdrs/f$14685$1HvE18 (begin '#f (map cons g$cars/f$14684$1HvE18 g$cdrs/f$14685$1HvE18)) '#f))) (g$f$14682$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14683$1HvE18)))) '#f))) ((case-lambda ((g$x$14686$1HvE18) (list g$x$14686$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14683$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14683$1HvE18) (list (begin 'sym* '())) '#f)))))) g$f$14682$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14679$1HvE18)))) '#f))) ((case-lambda ((g$x$14687$1HvE18) (list g$x$14687$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14679$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14676$1HvE18)))) '#f))) ((case-lambda ((g$x$14688$1HvE18) (list g$x$14688$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14676$1HvE18)))) '#f))) g$t$14599$1HvE18)))) g$t$14590$1HvE18)))) ((case-lambda ((g$x$14689$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14689$1HvE18) (begin '#f ((case-lambda ((g$q$14690$1HvE18) (if g$q$14690$1HvE18 (begin '#f ((case-lambda ((g$r$14691$1HvE18) (if g$r$14691$1HvE18 (begin '#f (append g$q$14690$1HvE18 g$r$14691$1HvE18)) '#f))) ((case-lambda ((g$x$14692$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14692$1HvE18) (begin '#f ((case-lambda ((g$q$14693$1HvE18) (if g$q$14693$1HvE18 (begin '#f ((case-lambda ((g$r$14694$1HvE18) (if g$r$14694$1HvE18 (begin '#f (append g$q$14693$1HvE18 g$r$14694$1HvE18)) '#f))) ((letrec ((g$f$14695$1HvE18 (case-lambda ((g$x$14696$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14696$1HvE18) ((case-lambda ((g$cars/f$14697$1HvE18) (if g$cars/f$14697$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14698$1HvE18) (if g$cdrs/f$14698$1HvE18 (begin '#f (map cons g$cars/f$14697$1HvE18 g$cdrs/f$14698$1HvE18)) '#f))) (g$f$14695$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14696$1HvE18)))) '#f))) ((case-lambda ((g$x$14699$1HvE18) (list g$x$14699$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14696$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14696$1HvE18) (list (begin 'sym* '())) '#f)))))) g$f$14695$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14692$1HvE18)))) '#f))) ((case-lambda ((g$x$14700$1HvE18) (list g$x$14700$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14692$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14689$1HvE18)))) '#f))) ((case-lambda ((g$x$14701$1HvE18) (list g$x$14701$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14689$1HvE18)))) '#f))) g$t$14590$1HvE18)))) g$t$14575$1HvE18)))) ((case-lambda ((g$x$14702$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14702$1HvE18) (begin '#f ((case-lambda ((g$q$14703$1HvE18) (if g$q$14703$1HvE18 (begin '#f ((case-lambda ((g$r$14704$1HvE18) (if g$r$14704$1HvE18 (begin '#f (append g$q$14703$1HvE18 g$r$14704$1HvE18)) '#f))) ((case-lambda ((g$x$14705$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14705$1HvE18) (begin '#f ((case-lambda ((g$q$14706$1HvE18) (if g$q$14706$1HvE18 (begin '#f ((case-lambda ((g$r$14707$1HvE18) (if g$r$14707$1HvE18 (begin '#f (append g$q$14706$1HvE18 g$r$14707$1HvE18)) '#f))) ((letrec ((g$f$14708$1HvE18 (case-lambda ((g$x$14709$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14709$1HvE18) ((case-lambda ((g$cars/f$14710$1HvE18) (if g$cars/f$14710$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14711$1HvE18) (if g$cdrs/f$14711$1HvE18 (begin '#f (map cons g$cars/f$14710$1HvE18 g$cdrs/f$14711$1HvE18)) '#f))) (g$f$14708$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14709$1HvE18)))) '#f))) ((case-lambda ((g$x$14712$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14712$1HvE18) (begin '#f ((case-lambda ((g$q$14713$1HvE18) (if g$q$14713$1HvE18 (begin '#f ((case-lambda ((g$r$14714$1HvE18) (if g$r$14714$1HvE18 (begin '#f (append g$q$14713$1HvE18 g$r$14714$1HvE18)) '#f))) ((case-lambda ((g$x$14715$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14715$1HvE18) (begin '#f ((case-lambda ((g$q$14716$1HvE18) (if g$q$14716$1HvE18 (begin '#f ((case-lambda ((g$r$14717$1HvE18) (if g$r$14717$1HvE18 (begin '#f (append g$q$14716$1HvE18 g$r$14717$1HvE18)) '#f))) ((case-lambda ((g$x$14718$1HvE18) (if (equal? (g$stx->datum$9323$1HvE18 g$x$14718$1HvE18) '()) (begin '#f '()) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14715$1HvE18)))) '#f))) ((case-lambda ((g$x$14719$1HvE18) (list g$x$14719$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14715$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14712$1HvE18)))) '#f))) ((case-lambda ((g$x$14720$1HvE18) (list g$x$14720$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14712$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$14709$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14709$1HvE18) (list (begin 'old* '()) (begin 'new* '())) '#f)))))) g$f$14708$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14705$1HvE18)))) '#f))) ((case-lambda ((g$x$14721$1HvE18) (list g$x$14721$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14705$1HvE18)))) '#f))) (g$syntax-cdr$9310$1HvE18 g$x$14702$1HvE18)))) '#f))) ((case-lambda ((g$x$14722$1HvE18) (list g$x$14722$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14702$1HvE18)))) '#f))) g$t$14575$1HvE18)))) g$t$14569$1HvE18)))) ((case-lambda ((g$x$14723$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14723$1HvE18) (begin '#f ((case-lambda ((g$q$14724$1HvE18) (if g$q$14724$1HvE18 (begin '#f ((case-lambda ((g$r$14725$1HvE18) (if g$r$14725$1HvE18 (begin '#f (append g$q$14724$1HvE18 g$r$14725$1HvE18)) '#f))) ((letrec ((g$f$14726$1HvE18 (case-lambda ((g$x$14727$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$14727$1HvE18) ((case-lambda ((g$cars/f$14728$1HvE18) (if g$cars/f$14728$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$14729$1HvE18) (if g$cdrs/f$14729$1HvE18 (begin '#f (map cons g$cars/f$14728$1HvE18 g$cdrs/f$14729$1HvE18)) '#f))) (g$f$14726$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$14727$1HvE18)))) '#f))) ((case-lambda ((g$x$14730$1HvE18) (list g$x$14730$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14727$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$14727$1HvE18) (list (begin 'x* '())) '#f)))))) g$f$14726$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$14723$1HvE18)))) '#f))) ((case-lambda ((g$x$14731$1HvE18) (list g$x$14731$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$14723$1HvE18)))) '#f))) g$t$14569$1HvE18)))) g$spec$14568$1HvE18)))) (g$add-imports!$14556$1HvE18 (case-lambda ((g$imp$14560$1HvE18 g$h$14561$1HvE18) ((case-lambda ((g$subst$14562$1HvE18) (for-each (case-lambda ((g$x$14563$1HvE18) ((case-lambda ((g$name$14564$1HvE18 g$label$14565$1HvE18) ((case-lambda ((g$t$14566$1HvE18) (if g$t$14566$1HvE18 ((case-lambda ((g$l$14567$1HvE18) (if (eq? g$l$14567$1HvE18 g$label$14565$1HvE18) (void) (g$dup-error$14547$1HvE18 g$name$14564$1HvE18)))) g$t$14566$1HvE18) (g$hashtable-set!$7813$1HvE18 g$h$14561$1HvE18 g$name$14564$1HvE18 g$label$14565$1HvE18)))) (g$hashtable-ref$7812$1HvE18 g$h$14561$1HvE18 g$name$14564$1HvE18 '#f)))) (car g$x$14563$1HvE18) (cdr g$x$14563$1HvE18)))) g$subst$14562$1HvE18))) (g$get-import$14555$1HvE18 g$imp$14560$1HvE18)))))) ((letrec ((g$f$14557$1HvE18 (case-lambda ((g$imp*$14558$1HvE18 g$h$14559$1HvE18) (if (null? g$imp*$14558$1HvE18) (hashtable-entries g$h$14559$1HvE18) (begin (g$add-imports!$14556$1HvE18 (car g$imp*$14558$1HvE18) g$h$14559$1HvE18) (g$f$14557$1HvE18 (cdr g$imp*$14558$1HvE18) g$h$14559$1HvE18))))))) g$f$14557$1HvE18) g$imp*$14545$1HvE18 (g$make-eq-hashtable$7809$1HvE18)))))) (g$make-top-rib$9639$1HvE18 g$make-top-rib$15744$1HvE18 (case-lambda ((g$names$14998$1HvE18 g$labels$14999$1HvE18) ((case-lambda ((g$rib$15000$1HvE18) (begin (vector-for-each (case-lambda ((g$name$15001$1HvE18 g$label$15002$1HvE18) (begin (if (symbol? g$name$15001$1HvE18) (void) (error 'make-top-rib '"BUG: not a symbol" g$name$15001$1HvE18)) (g$extend-rib!$9276$1HvE18 g$rib$15000$1HvE18 (g$make-stx$9285$1HvE18 g$name$15001$1HvE18 g$top-mark*$9254$1HvE18 '() '()) g$label$15002$1HvE18)))) g$names$14998$1HvE18 g$labels$14999$1HvE18) g$rib$15000$1HvE18))) (g$make-empty-rib$9275$1HvE18))))) (g$make-collector$9640$1HvE18 g$make-collector$15745$1HvE18 (case-lambda (() ((case-lambda ((g$ls$15003$1HvE18) (case-lambda (() g$ls$15003$1HvE18) ((g$x$15004$1HvE18) (set! g$ls$15003$1HvE18 (g$set-cons$9251$1HvE18 g$x$15004$1HvE18 g$ls$15003$1HvE18)))))) '())))) (g$inv-collector$9641$1HvE18 g$inv-collector$15746$1HvE18 (g$make-parameter$8795$1HvE18 (case-lambda (g$args$15005$1HvE18 (assertion-violation 'inv-collector '"BUG: not initialized"))) (case-lambda ((g$x$15006$1HvE18) (begin (if (procedure? g$x$15006$1HvE18) (void) (assertion-violation 'inv-collector '"BUG: not a procedure" g$x$15006$1HvE18)) g$x$15006$1HvE18))))) (g$vis-collector$9642$1HvE18 g$vis-collector$15747$1HvE18 (g$make-parameter$8795$1HvE18 (case-lambda (g$args$15007$1HvE18 (assertion-violation 'vis-collector '"BUG: not initialized"))) (case-lambda ((g$x$15008$1HvE18) (begin (if (procedure? g$x$15008$1HvE18) (void) (assertion-violation 'vis-collector '"BUG: not a procedure" g$x$15008$1HvE18)) g$x$15008$1HvE18))))) (g$imp-collector$9643$1HvE18 g$imp-collector$15748$1HvE18 (g$make-parameter$8795$1HvE18 (case-lambda (g$args$15009$1HvE18 (assertion-violation 'imp-collector '"BUG: not initialized"))) (case-lambda ((g$x$15010$1HvE18) (begin (if (procedure? g$x$15010$1HvE18) (void) (assertion-violation 'imp-collector '"BUG: not a procedure" g$x$15010$1HvE18)) g$x$15010$1HvE18))))) (g$chi-library-internal$9644$1HvE18 g$chi-library-internal$15749$1HvE18 (case-lambda ((g$e*$15011$1HvE18 g$rib$15012$1HvE18 g$top?$15013$1HvE18) (call-with-values (case-lambda (() (g$chi-body*$9633$1HvE18 g$e*$15011$1HvE18 '() '() '() '() '() '() g$rib$15012$1HvE18 g$top?$15013$1HvE18))) (case-lambda ((g$e*$15021$1HvE18 g$r$15022$1HvE18 g$mr$15023$1HvE18 g$lex*$15024$1HvE18 g$rhs*$15025$1HvE18 g$mod**$15026$1HvE18 g$_kwd*$15027$1HvE18) ((case-lambda ((g$_kwd*$15028$1HvE18 g$mod**$15029$1HvE18 g$rhs*$15030$1HvE18 g$lex*$15031$1HvE18 g$mr$15032$1HvE18 g$r$15033$1HvE18 g$e*$15034$1HvE18) (values (append (apply append (reverse g$mod**$15029$1HvE18)) g$e*$15034$1HvE18) g$r$15033$1HvE18 g$mr$15032$1HvE18 (reverse g$lex*$15031$1HvE18) (reverse g$rhs*$15030$1HvE18)))) g$_kwd*$15027$1HvE18 g$mod**$15026$1HvE18 g$rhs*$15025$1HvE18 g$lex*$15024$1HvE18 g$mr$15023$1HvE18 g$r$15022$1HvE18 g$e*$15021$1HvE18))))))) (g$chi-interaction-expr$9645$1HvE18 g$chi-interaction-expr$15750$1HvE18 (case-lambda ((g$e$15035$1HvE18 g$rib$15036$1HvE18 g$r$15037$1HvE18) (call-with-values (case-lambda (() (g$chi-body*$9633$1HvE18 (list g$e$15035$1HvE18) g$r$15037$1HvE18 g$r$15037$1HvE18 '() '() '() '() g$rib$15036$1HvE18 '#t))) (case-lambda ((g$e*$15045$1HvE18 g$r$15046$1HvE18 g$mr$15047$1HvE18 g$lex*$15048$1HvE18 g$rhs*$15049$1HvE18 g$mod**$15050$1HvE18 g$_kwd*$15051$1HvE18) ((case-lambda ((g$_kwd*$15052$1HvE18 g$mod**$15053$1HvE18 g$rhs*$15054$1HvE18 g$lex*$15055$1HvE18 g$mr$15056$1HvE18 g$r$15057$1HvE18 g$e*$15058$1HvE18) ((case-lambda ((g$e*$15059$1HvE18) ((case-lambda ((g$e$15060$1HvE18) (values g$e$15060$1HvE18 g$r$15057$1HvE18))) (if (null? g$e*$15059$1HvE18) (g$build-void$9247$1HvE18) (if (null? (cdr g$e*$15059$1HvE18)) (car g$e*$15059$1HvE18) (g$build-sequence$9246$1HvE18 '#f g$e*$15059$1HvE18)))))) (g$expand-interaction-rhs*/init*$9614$1HvE18 (reverse g$lex*$15055$1HvE18) (reverse g$rhs*$15054$1HvE18) (append (apply append (reverse g$mod**$15053$1HvE18)) g$e*$15058$1HvE18) g$r$15057$1HvE18 g$mr$15056$1HvE18)))) g$_kwd*$15051$1HvE18 g$mod**$15050$1HvE18 g$rhs*$15049$1HvE18 g$lex*$15048$1HvE18 g$mr$15047$1HvE18 g$r$15046$1HvE18 g$e*$15045$1HvE18))))))) (g$library-body-expander$9646$1HvE18 g$library-body-expander$15751$1HvE18 (case-lambda ((g$exp*$15061$1HvE18 g$imp*$15062$1HvE18 g$b*$15063$1HvE18 g$top?$15064$1HvE18) (letrec* ((g$itc$15065$1HvE18 (g$make-collector$9640$1HvE18))) ((case-lambda ((g$imp-collector$15070$1HvE18 g$top-level-context$15071$1HvE18 g$imp-collector$15072$1HvE18 g$top-level-context$15073$1HvE18) ((case-lambda ((g$swap$15074$1HvE18) (dynamic-wind g$swap$15074$1HvE18 (case-lambda (() (call-with-values (case-lambda (() (g$parse-exports$9635$1HvE18 g$exp*$15061$1HvE18))) (case-lambda ((g$exp-int*$15077$1HvE18 g$exp-ext*$15078$1HvE18) ((case-lambda ((g$exp-ext*$15079$1HvE18 g$exp-int*$15080$1HvE18) (call-with-values (case-lambda (() (g$parse-import-spec*$9638$1HvE18 g$imp*$15062$1HvE18))) (case-lambda ((g$subst-names$15083$1HvE18 g$subst-labels$15084$1HvE18) ((case-lambda ((g$subst-labels$15085$1HvE18 g$subst-names$15086$1HvE18) ((case-lambda ((g$rib$15087$1HvE18) ((case-lambda ((g$b*$15088$1HvE18 g$rtc$15089$1HvE18 g$vtc$15090$1HvE18) ((case-lambda ((g$inv-collector$15095$1HvE18 g$vis-collector$15096$1HvE18 g$inv-collector$15097$1HvE18 g$vis-collector$15098$1HvE18) ((case-lambda ((g$swap$15099$1HvE18) (dynamic-wind g$swap$15099$1HvE18 (case-lambda (() (call-with-values (case-lambda (() (g$chi-library-internal$9644$1HvE18 g$b*$15088$1HvE18 g$rib$15087$1HvE18 g$top?$15064$1HvE18))) (case-lambda ((g$init*$15105$1HvE18 g$r$15106$1HvE18 g$mr$15107$1HvE18 g$lex*$15108$1HvE18 g$rhs*$15109$1HvE18) ((case-lambda ((g$rhs*$15110$1HvE18 g$lex*$15111$1HvE18 g$mr$15112$1HvE18 g$r$15113$1HvE18 g$init*$15114$1HvE18) (begin (g$seal-rib!$9277$1HvE18 g$rib$15087$1HvE18) ((case-lambda ((g$init*$15115$1HvE18) ((case-lambda ((g$rhs*$15116$1HvE18) ((case-lambda (() (begin (g$unseal-rib!$9278$1HvE18 g$rib$15087$1HvE18) ((case-lambda ((g$loc*$15117$1HvE18 g$export-subst$15118$1HvE18) (letrec* ((g$errstr$15119$1HvE18 '"attempt to export mutated variable")) (call-with-values (case-lambda (() (g$make-export-env/macros$9687$1HvE18 g$lex*$15111$1HvE18 g$loc*$15117$1HvE18 g$r$15113$1HvE18))) (case-lambda ((g$export-env$15123$1HvE18 g$global*$15124$1HvE18 g$macro*$15125$1HvE18) ((case-lambda ((g$macro*$15126$1HvE18 g$global*$15127$1HvE18 g$export-env$15128$1HvE18) (begin (for-each (case-lambda ((g$s$15129$1HvE18) ((case-lambda ((g$name$15130$1HvE18 g$label$15131$1HvE18) ((case-lambda ((g$p$15132$1HvE18) (if g$p$15132$1HvE18 ((case-lambda ((g$b$15133$1HvE18) ((case-lambda ((g$type$15134$1HvE18) (if (eq? g$type$15134$1HvE18 'mutable) (g$syntax-violation$9695$1HvE18 'export g$errstr$15119$1HvE18 g$name$15130$1HvE18) (void)))) (car g$b$15133$1HvE18)))) (cdr g$p$15132$1HvE18)) (void)))) (assq g$label$15131$1HvE18 g$export-env$15128$1HvE18)))) (car g$s$15129$1HvE18) (cdr g$s$15129$1HvE18)))) g$export-subst$15118$1HvE18) ((case-lambda ((g$invoke-body$15135$1HvE18 g$invoke-definitions$15136$1HvE18) (values (g$itc$15065$1HvE18) (g$rtc$15089$1HvE18) (g$vtc$15090$1HvE18) (g$build-sequence$9246$1HvE18 '#f (append g$invoke-definitions$15136$1HvE18 (list g$invoke-body$15135$1HvE18))) g$macro*$15126$1HvE18 g$export-subst$15118$1HvE18 g$export-env$15128$1HvE18))) (g$build-library-letrec*$9250$1HvE18 '#f g$lex*$15111$1HvE18 g$loc*$15117$1HvE18 g$rhs*$15116$1HvE18 (if (null? g$init*$15115$1HvE18) (g$build-void$9247$1HvE18) (g$build-sequence$9246$1HvE18 '#f g$init*$15115$1HvE18))) (map g$build-global-define$9242$1HvE18 (map cdr g$global*$15127$1HvE18)))))) g$macro*$15125$1HvE18 g$global*$15124$1HvE18 g$export-env$15123$1HvE18))))))) (map g$gen-global$9257$1HvE18 g$lex*$15111$1HvE18) (g$make-export-subst$9686$1HvE18 g$exp-int*$15080$1HvE18 g$exp-ext*$15079$1HvE18 g$rib$15087$1HvE18)))))))) (g$chi-rhs*$9615$1HvE18 g$rhs*$15110$1HvE18 g$r$15113$1HvE18 g$mr$15112$1HvE18)))) (g$chi-expr*$9605$1HvE18 g$init*$15114$1HvE18 g$r$15113$1HvE18 g$mr$15112$1HvE18))))) g$rhs*$15109$1HvE18 g$lex*$15108$1HvE18 g$mr$15107$1HvE18 g$r$15106$1HvE18 g$init*$15105$1HvE18)))))) g$swap$15099$1HvE18))) (case-lambda (() (begin ((case-lambda ((g$t$15137$1HvE18) (begin (g$inv-collector$15095$1HvE18 g$inv-collector$15097$1HvE18) (set! g$inv-collector$15097$1HvE18 g$t$15137$1HvE18)))) (g$inv-collector$15095$1HvE18)) ((case-lambda ((g$t$15138$1HvE18) (begin (g$vis-collector$15096$1HvE18 g$vis-collector$15098$1HvE18) (set! g$vis-collector$15098$1HvE18 g$t$15138$1HvE18)))) (g$vis-collector$15096$1HvE18)))))))) g$inv-collector$9641$1HvE18 g$vis-collector$9642$1HvE18 g$rtc$15089$1HvE18 g$vtc$15090$1HvE18))) (map (case-lambda ((g$x$15139$1HvE18) (g$mkstx$9300$1HvE18 g$x$15139$1HvE18 g$top-mark*$9254$1HvE18 (list g$rib$15087$1HvE18) '()))) g$b*$15063$1HvE18) (g$make-collector$9640$1HvE18) (g$make-collector$9640$1HvE18)))) (g$make-top-rib$9639$1HvE18 g$subst-names$15086$1HvE18 g$subst-labels$15085$1HvE18)))) g$subst-labels$15084$1HvE18 g$subst-names$15083$1HvE18)))))) g$exp-ext*$15078$1HvE18 g$exp-int*$15077$1HvE18)))))) g$swap$15074$1HvE18))) (case-lambda (() (begin ((case-lambda ((g$t$15140$1HvE18) (begin (g$imp-collector$15070$1HvE18 g$imp-collector$15072$1HvE18) (set! g$imp-collector$15072$1HvE18 g$t$15140$1HvE18)))) (g$imp-collector$15070$1HvE18)) ((case-lambda ((g$t$15141$1HvE18) (begin (g$top-level-context$15071$1HvE18 g$top-level-context$15073$1HvE18) (set! g$top-level-context$15073$1HvE18 g$t$15141$1HvE18)))) (g$top-level-context$15071$1HvE18)))))))) g$imp-collector$9643$1HvE18 g$top-level-context$9701$1HvE18 g$itc$15065$1HvE18 '#f))))) (g$core-library-expander$9647$1HvE18 g$core-library-expander$15752$1HvE18 (case-lambda ((g$e$15142$1HvE18) (call-with-values (case-lambda (() (g$parse-library$9637$1HvE18 g$e$15142$1HvE18))) (case-lambda ((g$name*$15147$1HvE18 g$exp*$15148$1HvE18 g$imp*$15149$1HvE18 g$b*$15150$1HvE18) ((case-lambda ((g$b*$15151$1HvE18 g$imp*$15152$1HvE18 g$exp*$15153$1HvE18 g$name*$15154$1HvE18) (call-with-values (case-lambda (() (g$parse-library-name$9636$1HvE18 g$name*$15154$1HvE18))) (case-lambda ((g$name$15157$1HvE18 g$ver$15158$1HvE18) ((case-lambda ((g$ver$15159$1HvE18 g$name$15160$1HvE18) (call-with-values (case-lambda (() (g$library-body-expander$9646$1HvE18 g$exp*$15153$1HvE18 g$imp*$15152$1HvE18 g$b*$15151$1HvE18 '#f))) (case-lambda ((g$imp*$15168$1HvE18 g$invoke-req*$15169$1HvE18 g$visit-req*$15170$1HvE18 g$invoke-code$15171$1HvE18 g$visit-code$15172$1HvE18 g$export-subst$15173$1HvE18 g$export-env$15174$1HvE18) ((case-lambda ((g$export-env$15175$1HvE18 g$export-subst$15176$1HvE18 g$visit-code$15177$1HvE18 g$invoke-code$15178$1HvE18 g$visit-req*$15179$1HvE18 g$invoke-req*$15180$1HvE18 g$imp*$15181$1HvE18) (values g$name$15160$1HvE18 g$ver$15159$1HvE18 g$imp*$15181$1HvE18 g$invoke-req*$15180$1HvE18 g$visit-req*$15179$1HvE18 g$invoke-code$15178$1HvE18 g$visit-code$15177$1HvE18 g$export-subst$15176$1HvE18 g$export-env$15175$1HvE18))) g$export-env$15174$1HvE18 g$export-subst$15173$1HvE18 g$visit-code$15172$1HvE18 g$invoke-code$15171$1HvE18 g$visit-req*$15170$1HvE18 g$invoke-req*$15169$1HvE18 g$imp*$15168$1HvE18)))))) g$ver$15158$1HvE18 g$name$15157$1HvE18)))))) g$b*$15150$1HvE18 g$imp*$15149$1HvE18 g$exp*$15148$1HvE18 g$name*$15147$1HvE18))))))) (g$parse-top-level-program$9648$1HvE18 g$parse-top-level-program$15753$1HvE18 (case-lambda ((g$e*$15182$1HvE18) ((case-lambda ((g$t$15183$1HvE18) ((case-lambda ((g$ls/false$15184$1HvE18) (if (if g$ls/false$15184$1HvE18 (begin '#f (apply (case-lambda ((g$import$15185$1HvE18 g$imp*$15186$1HvE18 g$b*$15187$1HvE18) (eq? (g$syntax->datum$9698$1HvE18 g$import$15185$1HvE18) 'import))) g$ls/false$15184$1HvE18)) '#f) (apply (case-lambda ((g$import$15188$1HvE18 g$imp*$15189$1HvE18 g$b*$15190$1HvE18) (values g$imp*$15189$1HvE18 g$b*$15190$1HvE18))) g$ls/false$15184$1HvE18) ((case-lambda ((g$t$15191$1HvE18) ((case-lambda ((g$ls/false$15192$1HvE18) (if (if g$ls/false$15192$1HvE18 (begin '#f (apply (case-lambda ((g$import$15193$1HvE18 g$x$15194$1HvE18 g$y$15195$1HvE18) (eq? (g$syntax->datum$9698$1HvE18 g$import$15193$1HvE18) 'import))) g$ls/false$15192$1HvE18)) '#f) (apply (case-lambda ((g$import$15196$1HvE18 g$x$15197$1HvE18 g$y$15198$1HvE18) (g$syntax-violation$9695$1HvE18 'expander '"invalid syntax of top-level program" (g$syntax-car$9309$1HvE18 g$e*$15182$1HvE18)))) g$ls/false$15192$1HvE18) ((case-lambda ((g$t$15199$1HvE18) ((case-lambda ((g$ls/false$15200$1HvE18) (if (if g$ls/false$15200$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$15200$1HvE18)) '#f) (apply (case-lambda (() (assertion-violation 'expander '"top-level program is missing an (import ---) clause"))) g$ls/false$15200$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$15199$1HvE18)))) ((case-lambda ((g$x$15201$1HvE18) '())) g$t$15199$1HvE18)))) g$t$15191$1HvE18)))) ((case-lambda ((g$x$15202$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$15202$1HvE18) (begin '#f ((case-lambda ((g$q$15203$1HvE18) (if g$q$15203$1HvE18 (begin '#f ((case-lambda ((g$r$15204$1HvE18) (if g$r$15204$1HvE18 (begin '#f (append g$q$15203$1HvE18 g$r$15204$1HvE18)) '#f))) ((case-lambda ((g$x$15205$1HvE18) (list g$x$15205$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$15202$1HvE18)))) '#f))) ((case-lambda ((g$x$15206$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$15206$1HvE18) (begin '#f ((case-lambda ((g$q$15207$1HvE18) (if g$q$15207$1HvE18 (begin '#f ((case-lambda ((g$r$15208$1HvE18) (if g$r$15208$1HvE18 (begin '#f (append g$q$15207$1HvE18 g$r$15208$1HvE18)) '#f))) ((case-lambda ((g$x$15209$1HvE18) (list g$x$15209$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$15206$1HvE18)))) '#f))) ((case-lambda ((g$x$15210$1HvE18) (list g$x$15210$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$15206$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$15202$1HvE18)))) '#f))) g$t$15191$1HvE18)))) g$t$15183$1HvE18)))) ((case-lambda ((g$x$15211$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$15211$1HvE18) (begin '#f ((case-lambda ((g$q$15212$1HvE18) (if g$q$15212$1HvE18 (begin '#f ((case-lambda ((g$r$15213$1HvE18) (if g$r$15213$1HvE18 (begin '#f (append g$q$15212$1HvE18 g$r$15213$1HvE18)) '#f))) ((letrec ((g$f$15214$1HvE18 (case-lambda ((g$x$15215$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$15215$1HvE18) ((case-lambda ((g$cars/f$15216$1HvE18) (if g$cars/f$15216$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$15217$1HvE18) (if g$cdrs/f$15217$1HvE18 (begin '#f (map cons g$cars/f$15216$1HvE18 g$cdrs/f$15217$1HvE18)) '#f))) (g$f$15214$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$15215$1HvE18)))) '#f))) ((case-lambda ((g$x$15218$1HvE18) (list g$x$15218$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$15215$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$15215$1HvE18) (list (begin 'b* '())) '#f)))))) g$f$15214$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$15211$1HvE18)))) '#f))) ((case-lambda ((g$x$15219$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$15219$1HvE18) (begin '#f ((case-lambda ((g$q$15220$1HvE18) (if g$q$15220$1HvE18 (begin '#f ((case-lambda ((g$r$15221$1HvE18) (if g$r$15221$1HvE18 (begin '#f (append g$q$15220$1HvE18 g$r$15221$1HvE18)) '#f))) ((letrec ((g$f$15222$1HvE18 (case-lambda ((g$x$15223$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$15223$1HvE18) ((case-lambda ((g$cars/f$15224$1HvE18) (if g$cars/f$15224$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$15225$1HvE18) (if g$cdrs/f$15225$1HvE18 (begin '#f (map cons g$cars/f$15224$1HvE18 g$cdrs/f$15225$1HvE18)) '#f))) (g$f$15222$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$15223$1HvE18)))) '#f))) ((case-lambda ((g$x$15226$1HvE18) (list g$x$15226$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$15223$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$15223$1HvE18) (list (begin 'imp* '())) '#f)))))) g$f$15222$1HvE18) (g$syntax-cdr$9310$1HvE18 g$x$15219$1HvE18)))) '#f))) ((case-lambda ((g$x$15227$1HvE18) (list g$x$15227$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$15219$1HvE18)))) '#f))) (g$syntax-car$9309$1HvE18 g$x$15211$1HvE18)))) '#f))) g$t$15183$1HvE18)))) g$e*$15182$1HvE18)))) (g$top-level-expander$9649$1HvE18 g$top-level-expander$15754$1HvE18 (case-lambda ((g$e*$15228$1HvE18) (call-with-values (case-lambda (() (g$parse-top-level-program$9648$1HvE18 g$e*$15228$1HvE18))) (case-lambda ((g$imp*$15231$1HvE18 g$b*$15232$1HvE18) ((case-lambda ((g$b*$15233$1HvE18 g$imp*$15234$1HvE18) (call-with-values (case-lambda (() (g$library-body-expander$9646$1HvE18 '() g$imp*$15234$1HvE18 g$b*$15233$1HvE18 '#t))) (case-lambda ((g$imp*$15242$1HvE18 g$invoke-req*$15243$1HvE18 g$visit-req*$15244$1HvE18 g$invoke-code$15245$1HvE18 g$visit-code$15246$1HvE18 g$export-subst$15247$1HvE18 g$export-env$15248$1HvE18) ((case-lambda ((g$export-env$15249$1HvE18 g$export-subst$15250$1HvE18 g$visit-code$15251$1HvE18 g$invoke-code$15252$1HvE18 g$visit-req*$15253$1HvE18 g$invoke-req*$15254$1HvE18 g$imp*$15255$1HvE18) (values g$invoke-req*$15254$1HvE18 g$invoke-code$15252$1HvE18))) g$export-env$15248$1HvE18 g$export-subst$15247$1HvE18 g$visit-code$15246$1HvE18 g$invoke-code$15245$1HvE18 g$visit-req*$15244$1HvE18 g$invoke-req*$15243$1HvE18 g$imp*$15242$1HvE18)))))) g$b*$15232$1HvE18 g$imp*$15231$1HvE18))))))) (g$10412$9650$1HvE18 g$10412$15755$1HvE18 (make-record-type-descriptor 'env '#f 'g$10415$1HvE18 '#t '#t '#((mutable names) (mutable labels) (mutable itc)))) (g$10414$9651$1HvE18 g$10414$15756$1HvE18 '#f) (g$10413$9652$1HvE18 g$10413$15757$1HvE18 (make-record-constructor-descriptor g$10412$9650$1HvE18 '#f g$10414$9651$1HvE18)) (g$env?$9653$1HvE18 g$env?$15758$1HvE18 (record-predicate g$10412$9650$1HvE18)) (g$make-env$9654$1HvE18 g$make-env$15759$1HvE18 (record-constructor g$10413$9652$1HvE18)) (g$env-names$9655$1HvE18 g$env-names$15760$1HvE18 (record-accessor g$10412$9650$1HvE18 '0)) (g$env-labels$9656$1HvE18 g$env-labels$15761$1HvE18 (record-accessor g$10412$9650$1HvE18 '1)) (g$env-itc$9657$1HvE18 g$env-itc$15762$1HvE18 (record-accessor g$10412$9650$1HvE18 '2)) (g$set-env-names!$9658$1HvE18 g$set-env-names!$15763$1HvE18 (record-mutator g$10412$9650$1HvE18 '0)) (g$set-env-labels!$9659$1HvE18 g$set-env-labels!$15764$1HvE18 (record-mutator g$10412$9650$1HvE18 '1)) (g$set-env-itc!$9660$1HvE18 g$set-env-itc!$15765$1HvE18 (record-mutator g$10412$9650$1HvE18 '2)) (g$rp$9661$1HvE18 g$rp$15766$1HvE18 (make-record-printer 'env (case-lambda ((g$x$15256$1HvE18 g$p$15257$1HvE18) (display '"#<environment>" g$p$15257$1HvE18))))) (g$10431$9662$1HvE18 g$10431$15767$1HvE18 (make-record-type-descriptor 'interaction-env '#f 'g$10434$1HvE18 '#t '#t '#((mutable rib) (mutable r) (mutable locs)))) (g$10433$9663$1HvE18 g$10433$15768$1HvE18 '#f) (g$10432$9664$1HvE18 g$10432$15769$1HvE18 (make-record-constructor-descriptor g$10431$9662$1HvE18 '#f g$10433$9663$1HvE18)) (g$interaction-env?$9665$1HvE18 g$interaction-env?$15770$1HvE18 (record-predicate g$10431$9662$1HvE18)) (g$make-interaction-env$9666$1HvE18 g$make-interaction-env$15771$1HvE18 (record-constructor g$10432$9664$1HvE18)) (g$interaction-env-rib$9667$1HvE18 g$interaction-env-rib$15772$1HvE18 (record-accessor g$10431$9662$1HvE18 '0)) (g$interaction-env-r$9668$1HvE18 g$interaction-env-r$15773$1HvE18 (record-accessor g$10431$9662$1HvE18 '1)) (g$interaction-env-locs$9669$1HvE18 g$interaction-env-locs$15774$1HvE18 (record-accessor g$10431$9662$1HvE18 '2)) (g$set-interaction-env-rib!$9670$1HvE18 g$set-interaction-env-rib!$15775$1HvE18 (record-mutator g$10431$9662$1HvE18 '0)) (g$set-interaction-env-r!$9671$1HvE18 g$set-interaction-env-r!$15776$1HvE18 (record-mutator g$10431$9662$1HvE18 '1)) (g$set-interaction-env-locs!$9672$1HvE18 g$set-interaction-env-locs!$15777$1HvE18 (record-mutator g$10431$9662$1HvE18 '2)) (g$rp$9673$1HvE18 g$rp$15778$1HvE18 (make-record-printer 'interaction-env (case-lambda ((g$x$15258$1HvE18 g$p$15259$1HvE18) (display '"#<environment>" g$p$15259$1HvE18))))) (g$interaction-environment-symbols$9674$1HvE18 g$interaction-environment-symbols$15779$1HvE18 (case-lambda (() (map (case-lambda ((g$x$15260$1HvE18) g$x$15260$1HvE18)) (g$rib-sym*$9267$1HvE18 (g$interaction-env-rib$9667$1HvE18 (g$interaction-environment$9700$1HvE18))))))) (g$environment-symbols$9675$1HvE18 g$environment-symbols$15780$1HvE18 (case-lambda ((g$e$15261$1HvE18) (vector->list (g$env-names$9655$1HvE18 g$e$15261$1HvE18))))) (g$environment?$9676$1HvE18 g$environment?$15781$1HvE18 (case-lambda ((g$x$15262$1HvE18) ((case-lambda ((g$t$15263$1HvE18) (if g$t$15263$1HvE18 g$t$15263$1HvE18 (begin '#f (g$interaction-env?$9665$1HvE18 g$x$15262$1HvE18))))) (g$env?$9653$1HvE18 g$x$15262$1HvE18))))) (g$environment$9677$1HvE18 g$environment$15782$1HvE18 (case-lambda (g$imp*$15264$1HvE18 ((case-lambda ((g$itc$15265$1HvE18) ((case-lambda ((g$imp-collector$15268$1HvE18 g$imp-collector$15269$1HvE18) ((case-lambda ((g$swap$15270$1HvE18) (dynamic-wind g$swap$15270$1HvE18 (case-lambda (() (call-with-values (case-lambda (() (g$parse-import-spec*$9638$1HvE18 g$imp*$15264$1HvE18))) (case-lambda ((g$subst-names$15273$1HvE18 g$subst-labels$15274$1HvE18) ((case-lambda ((g$subst-labels$15275$1HvE18 g$subst-names$15276$1HvE18) (g$make-env$9654$1HvE18 g$subst-names$15276$1HvE18 g$subst-labels$15275$1HvE18 g$itc$15265$1HvE18))) g$subst-labels$15274$1HvE18 g$subst-names$15273$1HvE18)))))) g$swap$15270$1HvE18))) (case-lambda (() ((case-lambda ((g$t$15277$1HvE18) (begin (g$imp-collector$15268$1HvE18 g$imp-collector$15269$1HvE18) (set! g$imp-collector$15269$1HvE18 g$t$15277$1HvE18)))) (g$imp-collector$15268$1HvE18))))))) g$imp-collector$9643$1HvE18 g$itc$15265$1HvE18))) (g$make-collector$9640$1HvE18))))) (g$null-environment$9678$1HvE18 g$null-environment$15783$1HvE18 (case-lambda ((g$n$15278$1HvE18) (begin (if (eqv? g$n$15278$1HvE18 '5) (void) (assertion-violation 'null-environment '"not 5" g$n$15278$1HvE18)) (g$environment$9677$1HvE18 '(psyntax null-environment-5)))))) (g$scheme-report-environment$9679$1HvE18 g$scheme-report-environment$15784$1HvE18 (case-lambda ((g$n$15279$1HvE18) (begin (if (eqv? g$n$15279$1HvE18 '5) (void) (assertion-violation 'scheme-report-environment '"not 5" g$n$15279$1HvE18)) (g$environment$9677$1HvE18 '(psyntax scheme-report-environment-5)))))) (g$expand$9680$1HvE18 g$expand$15785$1HvE18 (case-lambda ((g$x$15280$1HvE18 g$env$15281$1HvE18) (if (g$env?$9653$1HvE18 g$env$15281$1HvE18) ((case-lambda ((g$rib$15282$1HvE18) ((case-lambda ((g$x$15283$1HvE18 g$itc$15284$1HvE18 g$rtc$15285$1HvE18 g$vtc$15286$1HvE18) ((case-lambda ((g$x$15287$1HvE18) (begin (g$seal-rib!$9277$1HvE18 g$rib$15282$1HvE18) (values g$x$15287$1HvE18 (g$rtc$15285$1HvE18))))) ((case-lambda ((g$inv-collector$15294$1HvE18 g$vis-collector$15295$1HvE18 g$imp-collector$15296$1HvE18 g$inv-collector$15297$1HvE18 g$vis-collector$15298$1HvE18 g$imp-collector$15299$1HvE18) ((case-lambda ((g$swap$15300$1HvE18) (dynamic-wind g$swap$15300$1HvE18 (case-lambda (() (g$chi-expr$9607$1HvE18 g$x$15283$1HvE18 '() '()))) g$swap$15300$1HvE18))) (case-lambda (() (begin ((case-lambda ((g$t$15301$1HvE18) (begin (g$inv-collector$15294$1HvE18 g$inv-collector$15297$1HvE18) (set! g$inv-collector$15297$1HvE18 g$t$15301$1HvE18)))) (g$inv-collector$15294$1HvE18)) ((case-lambda ((g$t$15302$1HvE18) (begin (g$vis-collector$15295$1HvE18 g$vis-collector$15298$1HvE18) (set! g$vis-collector$15298$1HvE18 g$t$15302$1HvE18)))) (g$vis-collector$15295$1HvE18)) ((case-lambda ((g$t$15303$1HvE18) (begin (g$imp-collector$15296$1HvE18 g$imp-collector$15299$1HvE18) (set! g$imp-collector$15299$1HvE18 g$t$15303$1HvE18)))) (g$imp-collector$15296$1HvE18)))))))) g$inv-collector$9641$1HvE18 g$vis-collector$9642$1HvE18 g$imp-collector$9643$1HvE18 g$rtc$15285$1HvE18 g$vtc$15286$1HvE18 g$itc$15284$1HvE18)))) (g$mkstx$9300$1HvE18 g$x$15280$1HvE18 g$top-mark*$9254$1HvE18 (list g$rib$15282$1HvE18) '()) (g$env-itc$9657$1HvE18 g$env$15281$1HvE18) (g$make-collector$9640$1HvE18) (g$make-collector$9640$1HvE18)))) (g$make-top-rib$9639$1HvE18 (g$env-names$9655$1HvE18 g$env$15281$1HvE18) (g$env-labels$9656$1HvE18 g$env$15281$1HvE18))) (if (g$interaction-env?$9665$1HvE18 g$env$15281$1HvE18) ((case-lambda ((g$rib$15304$1HvE18 g$r$15305$1HvE18 g$rtc$15306$1HvE18) ((case-lambda ((g$x$15307$1HvE18) (call-with-values (case-lambda (() ((case-lambda ((g$top-level-context$15318$1HvE18 g$inv-collector$15319$1HvE18 g$vis-collector$15320$1HvE18 g$imp-collector$15321$1HvE18 g$top-level-context$15322$1HvE18 g$inv-collector$15323$1HvE18 g$vis-collector$15324$1HvE18 g$imp-collector$15325$1HvE18) ((case-lambda ((g$swap$15326$1HvE18) (dynamic-wind g$swap$15326$1HvE18 (case-lambda (() (g$chi-interaction-expr$9645$1HvE18 g$x$15307$1HvE18 g$rib$15304$1HvE18 g$r$15305$1HvE18))) g$swap$15326$1HvE18))) (case-lambda (() (begin ((case-lambda ((g$t$15327$1HvE18) (begin (g$top-level-context$15318$1HvE18 g$top-level-context$15322$1HvE18) (set! g$top-level-context$15322$1HvE18 g$t$15327$1HvE18)))) (g$top-level-context$15318$1HvE18)) ((case-lambda ((g$t$15328$1HvE18) (begin (g$inv-collector$15319$1HvE18 g$inv-collector$15323$1HvE18) (set! g$inv-collector$15323$1HvE18 g$t$15328$1HvE18)))) (g$inv-collector$15319$1HvE18)) ((case-lambda ((g$t$15329$1HvE18) (begin (g$vis-collector$15320$1HvE18 g$vis-collector$15324$1HvE18) (set! g$vis-collector$15324$1HvE18 g$t$15329$1HvE18)))) (g$vis-collector$15320$1HvE18)) ((case-lambda ((g$t$15330$1HvE18) (begin (g$imp-collector$15321$1HvE18 g$imp-collector$15325$1HvE18) (set! g$imp-collector$15325$1HvE18 g$t$15330$1HvE18)))) (g$imp-collector$15321$1HvE18)))))))) g$top-level-context$9701$1HvE18 g$inv-collector$9641$1HvE18 g$vis-collector$9642$1HvE18 g$imp-collector$9643$1HvE18 g$env$15281$1HvE18 g$rtc$15306$1HvE18 (g$make-collector$9640$1HvE18) (g$make-collector$9640$1HvE18)))) (case-lambda ((g$e$15331$1HvE18 g$r^$15332$1HvE18) ((case-lambda ((g$r^$15333$1HvE18 g$e$15334$1HvE18) (begin (g$set-interaction-env-r!$9671$1HvE18 g$env$15281$1HvE18 g$r^$15333$1HvE18) (values g$e$15334$1HvE18 (g$rtc$15306$1HvE18))))) g$r^$15332$1HvE18 g$e$15331$1HvE18)))))) (g$make-stx$9285$1HvE18 g$x$15280$1HvE18 g$top-mark*$9254$1HvE18 (list g$rib$15304$1HvE18) '())))) (g$interaction-env-rib$9667$1HvE18 g$env$15281$1HvE18) (g$interaction-env-r$9668$1HvE18 g$env$15281$1HvE18) (g$make-collector$9640$1HvE18)) (assertion-violation 'expand '"not an environment" g$env$15281$1HvE18)))))) (g$eval$9681$1HvE18 g$eval$15786$1HvE18 (case-lambda ((g$x$15335$1HvE18 g$env$15336$1HvE18) (begin (if (g$environment?$9676$1HvE18 g$env$15336$1HvE18) (void) (error 'eval '"not an environment" g$env$15336$1HvE18)) (call-with-values (case-lambda (() (g$expand$9680$1HvE18 g$x$15335$1HvE18 g$env$15336$1HvE18))) (case-lambda ((g$x$15339$1HvE18 g$invoke-req*$15340$1HvE18) ((case-lambda ((g$invoke-req*$15341$1HvE18 g$x$15342$1HvE18) (begin (for-each g$invoke-library$9128$1HvE18 g$invoke-req*$15341$1HvE18) (eval-core (g$expanded->core$8840$1HvE18 g$x$15342$1HvE18))))) g$invoke-req*$15340$1HvE18 g$x$15339$1HvE18)))))))) (g$library-expander$9682$1HvE18 g$library-expander$15787$1HvE18 (case-lambda ((g$x$15343$1HvE18 g$filename$15344$1HvE18) (letrec* ((g$build-visit-code$15345$1HvE18 (case-lambda ((g$macro*$15388$1HvE18) (if (null? g$macro*$15388$1HvE18) (g$build-void$9247$1HvE18) (g$build-sequence$9246$1HvE18 '#f (map (case-lambda ((g$x$15389$1HvE18) ((case-lambda ((g$loc$15390$1HvE18 g$src$15391$1HvE18) (list 'set! g$loc$15390$1HvE18 g$src$15391$1HvE18))) (car g$x$15389$1HvE18) (g$cddr$7547$1HvE18 g$x$15389$1HvE18)))) g$macro*$15388$1HvE18)))))) (g$visit!$15346$1HvE18 (case-lambda ((g$macro*$15384$1HvE18) (for-each (case-lambda ((g$x$15385$1HvE18) ((case-lambda ((g$loc$15386$1HvE18 g$proc$15387$1HvE18) (set-symbol-value! g$loc$15386$1HvE18 g$proc$15387$1HvE18))) (car g$x$15385$1HvE18) (g$cadr$7545$1HvE18 g$x$15385$1HvE18)))) g$macro*$15384$1HvE18))))) (call-with-values (case-lambda (() (g$core-library-expander$9647$1HvE18 g$x$15343$1HvE18))) (case-lambda ((g$name$15356$1HvE18 g$ver$15357$1HvE18 g$imp*$15358$1HvE18 g$inv*$15359$1HvE18 g$vis*$15360$1HvE18 g$invoke-code$15361$1HvE18 g$macro*$15362$1HvE18 g$export-subst$15363$1HvE18 g$export-env$15364$1HvE18) ((case-lambda ((g$export-env$15365$1HvE18 g$export-subst$15366$1HvE18 g$macro*$15367$1HvE18 g$invoke-code$15368$1HvE18 g$vis*$15369$1HvE18 g$inv*$15370$1HvE18 g$imp*$15371$1HvE18 g$ver$15372$1HvE18 g$name$15373$1HvE18) ((case-lambda ((g$id$15374$1HvE18 g$name$15375$1HvE18 g$ver$15376$1HvE18 g$imp*$15377$1HvE18 g$vis*$15378$1HvE18 g$inv*$15379$1HvE18 g$visit-proc$15380$1HvE18 g$invoke-proc$15381$1HvE18 g$visit-code$15382$1HvE18 g$invoke-code$15383$1HvE18) (begin (g$install-library$9126$1HvE18 g$id$15374$1HvE18 g$name$15375$1HvE18 g$ver$15376$1HvE18 g$imp*$15377$1HvE18 g$vis*$15378$1HvE18 g$inv*$15379$1HvE18 g$export-subst$15366$1HvE18 g$export-env$15365$1HvE18 g$visit-proc$15380$1HvE18 g$invoke-proc$15381$1HvE18 g$visit-code$15382$1HvE18 g$invoke-code$15383$1HvE18 '#t g$filename$15344$1HvE18) (values g$id$15374$1HvE18 g$name$15375$1HvE18 g$ver$15376$1HvE18 g$imp*$15377$1HvE18 g$vis*$15378$1HvE18 g$inv*$15379$1HvE18 g$invoke-code$15383$1HvE18 g$visit-code$15382$1HvE18 g$export-subst$15366$1HvE18 g$export-env$15365$1HvE18)))) (gensym) g$name$15373$1HvE18 g$ver$15372$1HvE18 (map g$library-spec$9132$1HvE18 g$imp*$15371$1HvE18) (map g$library-spec$9132$1HvE18 g$vis*$15369$1HvE18) (map g$library-spec$9132$1HvE18 g$inv*$15370$1HvE18) (case-lambda (() (g$visit!$15346$1HvE18 g$macro*$15367$1HvE18))) (case-lambda (() (eval-core (g$expanded->core$8840$1HvE18 g$invoke-code$15368$1HvE18)))) (g$build-visit-code$15345$1HvE18 g$macro*$15367$1HvE18) g$invoke-code$15368$1HvE18))) g$export-env$15364$1HvE18 g$export-subst$15363$1HvE18 g$macro*$15362$1HvE18 g$invoke-code$15361$1HvE18 g$vis*$15360$1HvE18 g$inv*$15359$1HvE18 g$imp*$15358$1HvE18 g$ver$15357$1HvE18 g$name$15356$1HvE18)))))) ((g$x$15392$1HvE18) (g$library-expander$9682$1HvE18 g$x$15392$1HvE18 '#f)))) (g$boot-library-expand$9683$1HvE18 g$boot-library-expand$15788$1HvE18 (case-lambda ((g$x$15393$1HvE18) (call-with-values (case-lambda (() (g$library-expander$9682$1HvE18 g$x$15393$1HvE18))) (case-lambda ((g$id$15404$1HvE18 g$name$15405$1HvE18 g$ver$15406$1HvE18 g$imp*$15407$1HvE18 g$vis*$15408$1HvE18 g$inv*$15409$1HvE18 g$invoke-code$15410$1HvE18 g$visit-code$15411$1HvE18 g$export-subst$15412$1HvE18 g$export-env$15413$1HvE18) ((case-lambda ((g$export-env$15414$1HvE18 g$export-subst$15415$1HvE18 g$visit-code$15416$1HvE18 g$invoke-code$15417$1HvE18 g$inv*$15418$1HvE18 g$vis*$15419$1HvE18 g$imp*$15420$1HvE18 g$ver$15421$1HvE18 g$name$15422$1HvE18 g$id$15423$1HvE18) (values g$invoke-code$15417$1HvE18 g$export-subst$15415$1HvE18 g$export-env$15414$1HvE18))) g$export-env$15413$1HvE18 g$export-subst$15412$1HvE18 g$visit-code$15411$1HvE18 g$invoke-code$15410$1HvE18 g$inv*$15409$1HvE18 g$vis*$15408$1HvE18 g$imp*$15407$1HvE18 g$ver$15406$1HvE18 g$name$15405$1HvE18 g$id$15404$1HvE18))))))) (g$rev-map-append$9684$1HvE18 g$rev-map-append$15789$1HvE18 (case-lambda ((g$f$15424$1HvE18 g$ls$15425$1HvE18 g$ac$15426$1HvE18) (if (null? g$ls$15425$1HvE18) g$ac$15426$1HvE18 (g$rev-map-append$9684$1HvE18 g$f$15424$1HvE18 (cdr g$ls$15425$1HvE18) (cons (g$f$15424$1HvE18 (car g$ls$15425$1HvE18)) g$ac$15426$1HvE18)))))) (g$build-exports$9685$1HvE18 g$build-exports$15790$1HvE18 (case-lambda ((g$lex*+loc*$15427$1HvE18 g$init*$15428$1HvE18) (g$build-sequence$9246$1HvE18 '#f (cons (g$build-void$9247$1HvE18) (g$rev-map-append$9684$1HvE18 (case-lambda ((g$x$15429$1HvE18) (list 'set! (cdr g$x$15429$1HvE18) (car g$x$15429$1HvE18)))) g$lex*+loc*$15427$1HvE18 g$init*$15428$1HvE18)))))) (g$make-export-subst$9686$1HvE18 g$make-export-subst$15791$1HvE18 (case-lambda ((g$int*$15430$1HvE18 g$ext*$15431$1HvE18 g$rib$15432$1HvE18) (map (case-lambda ((g$int$15433$1HvE18 g$ext$15434$1HvE18) ((case-lambda ((g$id$15435$1HvE18) ((case-lambda ((g$label$15436$1HvE18) ((case-lambda (() (begin (if g$label$15436$1HvE18 (void) (g$syntax-violation$9695$1HvE18 '#f '"cannot export unbound identifier" g$id$15435$1HvE18)) (cons g$ext$15434$1HvE18 g$label$15436$1HvE18))))))) (g$id->label$9324$1HvE18 g$id$15435$1HvE18)))) (g$mkstx$9300$1HvE18 g$int$15433$1HvE18 g$top-mark*$9254$1HvE18 (list g$rib$15432$1HvE18) '())))) g$int*$15430$1HvE18 g$ext*$15431$1HvE18)))) (g$make-export-env/macros$9687$1HvE18 g$make-export-env/macros$15792$1HvE18 (case-lambda ((g$lex*$15437$1HvE18 g$loc*$15438$1HvE18 g$r$15439$1HvE18) (letrec* ((g$lookup$15440$1HvE18 (case-lambda ((g$x$15455$1HvE18) ((letrec ((g$f$15456$1HvE18 (case-lambda ((g$x$15457$1HvE18 g$lex*$15458$1HvE18 g$loc*$15459$1HvE18) (if (pair? g$lex*$15458$1HvE18) (if (eq? g$x$15457$1HvE18 (car g$lex*$15458$1HvE18)) (car g$loc*$15459$1HvE18) (g$f$15456$1HvE18 g$x$15457$1HvE18 (cdr g$lex*$15458$1HvE18) (cdr g$loc*$15459$1HvE18))) (assertion-violation 'lookup-make-export '"BUG")))))) g$f$15456$1HvE18) g$x$15455$1HvE18 g$lex*$15437$1HvE18 g$loc*$15438$1HvE18))))) ((letrec ((g$f$15441$1HvE18 (case-lambda ((g$r$15442$1HvE18 g$env$15443$1HvE18 g$global*$15444$1HvE18 g$macro*$15445$1HvE18) (if (null? g$r$15442$1HvE18) (values g$env$15443$1HvE18 g$global*$15444$1HvE18 g$macro*$15445$1HvE18) ((case-lambda ((g$x$15446$1HvE18) ((case-lambda ((g$label$15447$1HvE18 g$b$15448$1HvE18) ((case-lambda ((g$t$15449$1HvE18) (if (memv g$t$15449$1HvE18 '(lexical)) ((case-lambda ((g$v$15452$1HvE18) ((case-lambda ((g$loc$15453$1HvE18 g$type$15454$1HvE18) (g$f$15441$1HvE18 (cdr g$r$15442$1HvE18) (cons (g$cons*$7967$1HvE18 g$label$15447$1HvE18 g$type$15454$1HvE18 g$loc$15453$1HvE18) g$env$15443$1HvE18) (cons (cons (g$lexical-var$9538$1HvE18 g$v$15452$1HvE18) g$loc$15453$1HvE18) g$global*$15444$1HvE18) g$macro*$15445$1HvE18))) (g$lookup$15440$1HvE18 (g$lexical-var$9538$1HvE18 g$v$15452$1HvE18)) (if (g$lexical-mutable?$9539$1HvE18 g$v$15452$1HvE18) 'mutable 'global)))) (g$binding-value$9329$1HvE18 g$b$15448$1HvE18)) (if (memv g$t$15449$1HvE18 '(local-macro)) ((case-lambda ((g$loc$15451$1HvE18) (g$f$15441$1HvE18 (cdr g$r$15442$1HvE18) (cons (g$cons*$7967$1HvE18 g$label$15447$1HvE18 'global-macro g$loc$15451$1HvE18) g$env$15443$1HvE18) g$global*$15444$1HvE18 (cons (cons g$loc$15451$1HvE18 (g$binding-value$9329$1HvE18 g$b$15448$1HvE18)) g$macro*$15445$1HvE18)))) (gensym)) (if (memv g$t$15449$1HvE18 '(local-macro!)) ((case-lambda ((g$loc$15450$1HvE18) (g$f$15441$1HvE18 (cdr g$r$15442$1HvE18) (cons (g$cons*$7967$1HvE18 g$label$15447$1HvE18 'global-macro! g$loc$15450$1HvE18) g$env$15443$1HvE18) g$global*$15444$1HvE18 (cons (cons g$loc$15450$1HvE18 (g$binding-value$9329$1HvE18 g$b$15448$1HvE18)) g$macro*$15445$1HvE18)))) (gensym)) (if (memv g$t$15449$1HvE18 '($rtd $module)) (g$f$15441$1HvE18 (cdr g$r$15442$1HvE18) (cons g$x$15446$1HvE18 g$env$15443$1HvE18) g$global*$15444$1HvE18 g$macro*$15445$1HvE18) (assertion-violation 'expander '"BUG: do not know how to export" (g$binding-type$9328$1HvE18 g$b$15448$1HvE18) (g$binding-value$9329$1HvE18 g$b$15448$1HvE18)))))))) (g$binding-type$9328$1HvE18 g$b$15448$1HvE18)))) (car g$x$15446$1HvE18) (cdr g$x$15446$1HvE18)))) (car g$r$15442$1HvE18))))))) g$f$15441$1HvE18) g$r$15439$1HvE18 '() '() '()))))) (g$generate-temporaries$9688$1HvE18 g$generate-temporaries$15793$1HvE18 (case-lambda ((g$ls$15460$1HvE18) ((case-lambda ((g$t$15461$1HvE18) ((case-lambda ((g$ls/false$15462$1HvE18) (if (if g$ls/false$15462$1HvE18 (begin '#f (apply (case-lambda ((g$ls$15463$1HvE18) '#t)) g$ls/false$15462$1HvE18)) '#f) (apply (case-lambda ((g$ls$15464$1HvE18) (map (case-lambda ((g$x$15465$1HvE18) (g$make-stx$9285$1HvE18 ((case-lambda ((g$x$15466$1HvE18) (if ((case-lambda ((g$t$15467$1HvE18) (if g$t$15467$1HvE18 g$t$15467$1HvE18 (begin '#f (string? g$x$15466$1HvE18))))) (symbol? g$x$15466$1HvE18)) (gensym g$x$15466$1HvE18) (gensym 't)))) (g$syntax->datum$9698$1HvE18 g$x$15465$1HvE18)) g$top-mark*$9254$1HvE18 '() '()))) g$ls$15464$1HvE18))) g$ls/false$15462$1HvE18) ((case-lambda ((g$t$15468$1HvE18) ((case-lambda ((g$ls/false$15469$1HvE18) (if (if g$ls/false$15469$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$15469$1HvE18)) '#f) (apply (case-lambda (() (assertion-violation 'generate-temporaries '"not a list"))) g$ls/false$15469$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$15468$1HvE18)))) ((case-lambda ((g$x$15470$1HvE18) '())) g$t$15468$1HvE18)))) g$t$15461$1HvE18)))) ((letrec ((g$f$15471$1HvE18 (case-lambda ((g$x$15472$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$15472$1HvE18) ((case-lambda ((g$cars/f$15473$1HvE18) (if g$cars/f$15473$1HvE18 (begin '#f ((case-lambda ((g$cdrs/f$15474$1HvE18) (if g$cdrs/f$15474$1HvE18 (begin '#f (map cons g$cars/f$15473$1HvE18 g$cdrs/f$15474$1HvE18)) '#f))) (g$f$15471$1HvE18 (g$syntax-cdr$9310$1HvE18 g$x$15472$1HvE18)))) '#f))) ((case-lambda ((g$x$15475$1HvE18) (list g$x$15475$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$15472$1HvE18))) (if (g$syntax-null?$9307$1HvE18 g$x$15472$1HvE18) (list (begin 'ls '())) '#f)))))) g$f$15471$1HvE18) g$t$15461$1HvE18)))) g$ls$15460$1HvE18)))) (g$free-identifier=?$9689$1HvE18 g$free-identifier=?$15794$1HvE18 (case-lambda ((g$x$15476$1HvE18 g$y$15477$1HvE18) (if (g$id?$9312$1HvE18 g$x$15476$1HvE18) (if (g$id?$9312$1HvE18 g$y$15477$1HvE18) (g$free-id=?$9316$1HvE18 g$x$15476$1HvE18 g$y$15477$1HvE18) (assertion-violation 'free-identifier=? '"not an identifier" g$y$15477$1HvE18)) (assertion-violation 'free-identifier=? '"not an identifier" g$x$15476$1HvE18))))) (g$bound-identifier=?$9690$1HvE18 g$bound-identifier=?$15795$1HvE18 (case-lambda ((g$x$15478$1HvE18 g$y$15479$1HvE18) (if (g$id?$9312$1HvE18 g$x$15478$1HvE18) (if (g$id?$9312$1HvE18 g$y$15479$1HvE18) (g$bound-id=?$9315$1HvE18 g$x$15478$1HvE18 g$y$15479$1HvE18) (assertion-violation 'bound-identifier=? '"not an identifier" g$y$15479$1HvE18)) (assertion-violation 'bound-identifier=? '"not an identifier" g$x$15478$1HvE18))))) (g$extract-position-condition$9691$1HvE18 g$extract-position-condition$15796$1HvE18 (case-lambda ((g$x$15480$1HvE18) (letrec* ((g$15976$15481$1HvE18 (make-record-type-descriptor '&source-information &condition-rtd 'g$15979$1HvE18 '#f '#f '#((immutable file-name) (immutable character)))) (g$15978$15482$1HvE18 '#f) (g$15977$15483$1HvE18 (make-record-constructor-descriptor g$15976$15481$1HvE18 &condition-rcd g$15978$15482$1HvE18)) (g$15975$15484$1HvE18 (record-predicate g$15976$15481$1HvE18)) (g$make-source-condition$15485$1HvE18 (record-constructor g$15977$15483$1HvE18)) (g$15973$15486$1HvE18 (record-accessor g$15976$15481$1HvE18 '0)) (g$15974$15487$1HvE18 (record-accessor g$15976$15481$1HvE18 '1)) (g$source-condition?$15488$1HvE18 (condition-predicate g$15976$15481$1HvE18)) (g$source-filename$15489$1HvE18 (condition-accessor g$15976$15481$1HvE18 g$15973$15486$1HvE18)) (g$source-character$15490$1HvE18 (condition-accessor g$15976$15481$1HvE18 g$15974$15487$1HvE18))) (if (g$stx?$9284$1HvE18 g$x$15480$1HvE18) ((case-lambda ((g$x$15491$1HvE18) (if (annotation? g$x$15491$1HvE18) ((case-lambda ((g$src$15492$1HvE18) (if (pair? g$src$15492$1HvE18) (g$make-source-condition$15485$1HvE18 (car g$src$15492$1HvE18) (cdr g$src$15492$1HvE18)) (condition)))) (annotation-source g$x$15491$1HvE18)) (condition)))) (g$stx-expr$9286$1HvE18 g$x$15480$1HvE18)) (condition)))))) (g$syntax-error$9692$1HvE18 g$syntax-error$15797$1HvE18 (case-lambda ((g$x$15493$1HvE18 . g$args$15494$1HvE18) (begin (if (g$for-all$7965$1HvE18 string? g$args$15494$1HvE18) (void) (assertion-violation 'syntax-error '"invalid argument" g$args$15494$1HvE18)) (raise (condition (g$make-message-condition$8219$1HvE18 (if (null? g$args$15494$1HvE18) '"invalid syntax" (apply string-append g$args$15494$1HvE18))) (g$make-syntax-violation$8291$1HvE18 (g$syntax->datum$9698$1HvE18 g$x$15493$1HvE18) '#f) (g$extract-position-condition$9691$1HvE18 g$x$15493$1HvE18) (g$extract-trace$9693$1HvE18 g$x$15493$1HvE18))))))) (g$extract-trace$9693$1HvE18 g$extract-trace$15798$1HvE18 (case-lambda ((g$x$15495$1HvE18) (letrec* ((g$16000$15496$1HvE18 (make-record-type-descriptor '&trace &condition-rtd 'g$16003$1HvE18 '#f '#f '#((immutable form)))) (g$16002$15497$1HvE18 '#f) (g$16001$15498$1HvE18 (make-record-constructor-descriptor g$16000$15496$1HvE18 &condition-rcd g$16002$15497$1HvE18)) (g$15999$15499$1HvE18 (record-predicate g$16000$15496$1HvE18)) (g$make-trace$15500$1HvE18 (record-constructor g$16001$15498$1HvE18)) (g$15998$15501$1HvE18 (record-accessor g$16000$15496$1HvE18 '0)) (g$trace?$15502$1HvE18 (condition-predicate g$16000$15496$1HvE18)) (g$trace-form$15503$1HvE18 (condition-accessor g$16000$15496$1HvE18 g$15998$15501$1HvE18))) ((letrec ((g$f$15504$1HvE18 (case-lambda ((g$x$15505$1HvE18) (if (g$stx?$9284$1HvE18 g$x$15505$1HvE18) (apply condition (g$make-trace$15500$1HvE18 g$x$15505$1HvE18) (map g$f$15504$1HvE18 (g$stx-ae*$9289$1HvE18 g$x$15505$1HvE18))) (if (annotation? g$x$15505$1HvE18) (g$make-trace$15500$1HvE18 g$x$15505$1HvE18) (condition))))))) g$f$15504$1HvE18) g$x$15495$1HvE18))))) (g$syntax-violation*$9694$1HvE18 g$syntax-violation*$15799$1HvE18 (case-lambda ((g$who$15506$1HvE18 g$msg$15507$1HvE18 g$form$15508$1HvE18 g$condition-object$15509$1HvE18) (begin (if (string? g$msg$15507$1HvE18) (void) (assertion-violation 'syntax-violation '"message is not a string" g$msg$15507$1HvE18)) ((case-lambda ((g$who$15510$1HvE18) (raise (condition (if g$who$15510$1HvE18 (g$make-who-condition$8265$1HvE18 g$who$15510$1HvE18) (condition)) (g$make-message-condition$8219$1HvE18 g$msg$15507$1HvE18) g$condition-object$15509$1HvE18 (g$extract-position-condition$9691$1HvE18 g$form$15508$1HvE18) (g$extract-trace$9693$1HvE18 g$form$15508$1HvE18))))) (if ((case-lambda ((g$t$15511$1HvE18) (if g$t$15511$1HvE18 g$t$15511$1HvE18 (begin '#f (symbol? g$who$15506$1HvE18))))) (string? g$who$15506$1HvE18)) g$who$15506$1HvE18 (if (not g$who$15506$1HvE18) ((case-lambda ((g$t$15512$1HvE18) ((case-lambda ((g$ls/false$15513$1HvE18) (if (if g$ls/false$15513$1HvE18 (begin '#f (apply (case-lambda ((g$id$15514$1HvE18) (g$id?$9312$1HvE18 g$id$15514$1HvE18))) g$ls/false$15513$1HvE18)) '#f) (apply (case-lambda ((g$id$15515$1HvE18) (g$syntax->datum$9698$1HvE18 g$id$15515$1HvE18))) g$ls/false$15513$1HvE18) ((case-lambda ((g$t$15516$1HvE18) ((case-lambda ((g$ls/false$15517$1HvE18) (if (if g$ls/false$15517$1HvE18 (begin '#f (apply (case-lambda ((g$id$15518$1HvE18 g$rest$15519$1HvE18) (g$id?$9312$1HvE18 g$id$15518$1HvE18))) g$ls/false$15517$1HvE18)) '#f) (apply (case-lambda ((g$id$15520$1HvE18 g$rest$15521$1HvE18) (g$syntax->datum$9698$1HvE18 g$id$15520$1HvE18))) g$ls/false$15517$1HvE18) ((case-lambda ((g$t$15522$1HvE18) ((case-lambda ((g$ls/false$15523$1HvE18) (if (if g$ls/false$15523$1HvE18 (begin '#f (apply (case-lambda (() '#t)) g$ls/false$15523$1HvE18)) '#f) (apply (case-lambda (() '#f)) g$ls/false$15523$1HvE18) (g$syntax-violation$9695$1HvE18 '#f '"invalid syntax" g$t$15522$1HvE18)))) ((case-lambda ((g$x$15524$1HvE18) '())) g$t$15522$1HvE18)))) g$t$15516$1HvE18)))) ((case-lambda ((g$x$15525$1HvE18) (if (g$syntax-pair?$9305$1HvE18 g$x$15525$1HvE18) (begin '#f ((case-lambda ((g$q$15526$1HvE18) (if g$q$15526$1HvE18 (begin '#f ((case-lambda ((g$r$15527$1HvE18) (if g$r$15527$1HvE18 (begin '#f (append g$q$15526$1HvE18 g$r$15527$1HvE18)) '#f))) ((case-lambda ((g$x$15528$1HvE18) (list g$x$15528$1HvE18))) (g$syntax-cdr$9310$1HvE18 g$x$15525$1HvE18)))) '#f))) ((case-lambda ((g$x$15529$1HvE18) (list g$x$15529$1HvE18))) (g$syntax-car$9309$1HvE18 g$x$15525$1HvE18)))) '#f))) g$t$15516$1HvE18)))) g$t$15512$1HvE18)))) ((case-lambda ((g$x$15530$1HvE18) (list g$x$15530$1HvE18))) g$t$15512$1HvE18)))) g$form$15508$1HvE18) (assertion-violation 'syntax-violation '"invalid who argument" g$who$15506$1HvE18)))))))) (g$syntax-violation$9695$1HvE18 g$syntax-violation$15800$1HvE18 (case-lambda ((g$who$15531$1HvE18 g$msg$15532$1HvE18 g$form$15533$1HvE18) (g$syntax-violation$9695$1HvE18 g$who$15531$1HvE18 g$msg$15532$1HvE18 g$form$15533$1HvE18 '#f)) ((g$who$15534$1HvE18 g$msg$15535$1HvE18 g$form$15536$1HvE18 g$subform$15537$1HvE18) (g$syntax-violation*$9694$1HvE18 g$who$15534$1HvE18 g$msg$15535$1HvE18 g$form$15536$1HvE18 (g$make-syntax-violation$8291$1HvE18 (g$syntax->datum$9698$1HvE18 g$form$15536$1HvE18) (g$syntax->datum$9698$1HvE18 g$subform$15537$1HvE18)))))) (g$identifier?$9696$1HvE18 g$identifier?$15801$1HvE18 (case-lambda ((g$x$15538$1HvE18) (g$id?$9312$1HvE18 g$x$15538$1HvE18)))) (g$datum->syntax$9697$1HvE18 g$datum->syntax$15802$1HvE18 (case-lambda ((g$id$15539$1HvE18 g$datum$15540$1HvE18) (if (g$id?$9312$1HvE18 g$id$15539$1HvE18) (g$datum->stx$9295$1HvE18 g$id$15539$1HvE18 g$datum$15540$1HvE18) (assertion-violation 'datum->syntax '"not an identifier" g$id$15539$1HvE18))))) (g$syntax->datum$9698$1HvE18 g$syntax->datum$15803$1HvE18 (case-lambda ((g$x$15541$1HvE18) (g$stx->datum$9323$1HvE18 g$x$15541$1HvE18)))) (g$compile-r6rs-top-level$9699$1HvE18 g$compile-r6rs-top-level$15804$1HvE18 (case-lambda ((g$x*$15542$1HvE18) (call-with-values (case-lambda (() (g$top-level-expander$9649$1HvE18 g$x*$15542$1HvE18))) (case-lambda ((g$lib*$15545$1HvE18 g$invoke-code$15546$1HvE18) ((case-lambda ((g$invoke-code$15547$1HvE18 g$lib*$15548$1HvE18) (case-lambda (() (begin (for-each g$invoke-library$9128$1HvE18 g$lib*$15548$1HvE18) (eval-core (g$expanded->core$8840$1HvE18 g$invoke-code$15547$1HvE18))))))) g$invoke-code$15546$1HvE18 g$lib*$15545$1HvE18))))))) (g$interaction-environment$9700$1HvE18 g$interaction-environment$15805$1HvE18 ((case-lambda ((g$the-env$15549$1HvE18) (case-lambda (() ((case-lambda ((g$t$15550$1HvE18) (if g$t$15550$1HvE18 g$t$15550$1HvE18 (begin '#f ((case-lambda ((g$lib$15551$1HvE18 g$rib$15552$1HvE18) (begin ((case-lambda ((g$subst$15553$1HvE18) (begin (g$set-rib-sym*!$9271$1HvE18 g$rib$15552$1HvE18 (map car g$subst$15553$1HvE18)) (g$set-rib-mark**!$9272$1HvE18 g$rib$15552$1HvE18 (map (case-lambda ((g$x$15554$1HvE18) g$top-mark*$9254$1HvE18)) g$subst$15553$1HvE18)) (g$set-rib-label*!$9273$1HvE18 g$rib$15552$1HvE18 (map cdr g$subst$15553$1HvE18))))) (g$library-subst$9085$1HvE18 g$lib$15551$1HvE18)) ((case-lambda ((g$env$15555$1HvE18) (begin (set! g$the-env$15549$1HvE18 g$env$15555$1HvE18) g$env$15555$1HvE18))) (g$make-interaction-env$9666$1HvE18 g$rib$15552$1HvE18 '() '()))))) (g$find-library-by-name$9121$1HvE18 '(ironscheme)) (g$make-empty-rib$9275$1HvE18)))))) g$the-env$15549$1HvE18))))) '#f)) (g$top-level-context$9701$1HvE18 g$top-level-context$15806$1HvE18 (g$make-parameter$8795$1HvE18 '#f))) (g$current-library-expander$9118$1HvE18 g$library-expander$9682$1HvE18))
(library-letrec* () (begin (g$current-primitive-locations$8836$1HvE18 (case-lambda ((g$x$15840$1HvE18) ((case-lambda ((g$t$15841$1HvE18) (if g$t$15841$1HvE18 (cdr g$t$15841$1HvE18) '#f))) (assq g$x$15840$1HvE18 '((ellipsis-map . g$ellipsis-map$15699$1HvE18) (ironscheme-build . g$ironscheme-build$15834$1HvE18) (syntax-error . g$syntax-error$15797$1HvE18) (syntax-dispatch . g$syntax-dispatch$15696$1HvE18) (compile-system-libraries . g$compile-system-libraries$15836$1HvE18) (compile->closure . g$compile->closure$15838$1HvE18) (compile . g$compile$15837$1HvE18) (load . g$load$15833$1HvE18) (interaction-environment . g$interaction-environment$15805$1HvE18) (make-variable-transformer . g$make-variable-transformer$15637$1HvE18) (identifier? . g$identifier?$15801$1HvE18) (generate-temporaries . g$generate-temporaries$15793$1HvE18) (free-identifier=? . g$free-identifier=?$15794$1HvE18) (syntax->datum . g$syntax->datum$15803$1HvE18) (datum->syntax . g$datum->syntax$15802$1HvE18) (bound-identifier=? . g$bound-identifier=?$15795$1HvE18) (delete-file . g$delete-file$7890$1HvE18) (file-exists? . g$file-exists?$7889$1HvE18) (list-sort . g$list-sort$8346$1HvE18) (hashtable-equivalence-function . g$hashtable-equivalence-function$7818$1HvE18) (hashtable-hash-function . g$hashtable-hash-function$7819$1HvE18) (make-eqv-hashtable . g$make-eqv-hashtable$7810$1HvE18) (make-eq-hashtable . g$make-eq-hashtable$7809$1HvE18) (hashtable-update! . g$hashtable-update!$7816$1HvE18) (hashtable-size . g$hashtable-size$7811$1HvE18) (hashtable-set! . g$hashtable-set!$7813$1HvE18) (hashtable-ref . g$hashtable-ref$7812$1HvE18) (hashtable-delete! . g$hashtable-delete!$7814$1HvE18) (hashtable-contains? . g$hashtable-contains?$7815$1HvE18) (hashtable-clear! . g$hashtable-clear!$7817$1HvE18) (open-string-output-port . g$open-string-output-port$8688$1HvE18) (make-i/o-write-error . g$make-i/o-write-error$8617$1HvE18) (make-i/o-read-error . g$make-i/o-read-error$8611$1HvE18) (make-i/o-port-error . g$make-i/o-port-error$8663$1HvE18) (make-i/o-invalid-position-error . g$make-i/o-invalid-position-error$8623$1HvE18) (make-i/o-filename-error . g$make-i/o-filename-error$8631$1HvE18) (make-i/o-file-protection-error . g$make-i/o-file-protection-error$8639$1HvE18) (make-i/o-file-is-read-only-error . g$make-i/o-file-is-read-only-error$8645$1HvE18) (make-i/o-file-does-not-exist-error . g$make-i/o-file-does-not-exist-error$8657$1HvE18) (make-i/o-file-already-exists-error . g$make-i/o-file-already-exists-error$8651$1HvE18) (make-i/o-error . g$make-i/o-error$8605$1HvE18) (make-i/o-encoding-error . g$make-i/o-encoding-error$8677$1HvE18) (make-i/o-decoding-error . g$make-i/o-decoding-error$8671$1HvE18) (i/o-write-error? . g$i/o-write-error?$8618$1HvE18) (i/o-read-error? . g$i/o-read-error?$8612$1HvE18) (i/o-port-error? . g$i/o-port-error?$8665$1HvE18) (i/o-invalid-position-error? . g$i/o-invalid-position-error?$8625$1HvE18) (i/o-filename-error? . g$i/o-filename-error?$8633$1HvE18) (i/o-file-protection-error? . g$i/o-file-protection-error?$8640$1HvE18) (i/o-file-is-read-only-error? . g$i/o-file-is-read-only-error?$8646$1HvE18) (i/o-file-does-not-exist-error? . g$i/o-file-does-not-exist-error?$8658$1HvE18) (i/o-file-already-exists-error? . g$i/o-file-already-exists-error?$8652$1HvE18) (i/o-error? . g$i/o-error?$8606$1HvE18) (i/o-error-port . g$i/o-error-port$8666$1HvE18) (i/o-error-filename . g$i/o-error-filename$8634$1HvE18) (i/o-encoding-error? . g$i/o-encoding-error?$8679$1HvE18) (i/o-encoding-error-char . g$i/o-encoding-error-char$8680$1HvE18) (i/o-decoding-error? . g$i/o-decoding-error?$8672$1HvE18) (scheme-report-environment . g$scheme-report-environment$15784$1HvE18) (quotient . g$quotient$8315$1HvE18) (null-environment . g$null-environment$15783$1HvE18) (remainder . g$remainder$8316$1HvE18) (modulo . g$modulo$8317$1HvE18) (remove . g$remove$7970$1HvE18) (remv . g$remv$7971$1HvE18) (remq . g$remq$7972$1HvE18) (exists . g$exists$7966$1HvE18) (for-all . g$for-all$7965$1HvE18) (fold-right . g$fold-right$7969$1HvE18) (fold-left . g$fold-left$7968$1HvE18) (cons* . g$cons*$7967$1HvE18) (eval . g$eval$15786$1HvE18) (environment . g$environment$15782$1HvE18) (who-condition? . g$who-condition?$8267$1HvE18) (warning? . g$warning?$8228$1HvE18) (violation? . g$violation?$8246$1HvE18) (undefined-violation? . g$undefined-violation?$8302$1HvE18) (syntax-violation? . g$syntax-violation?$8294$1HvE18) (syntax-violation-subform . g$syntax-violation-subform$8296$1HvE18) (syntax-violation-form . g$syntax-violation-form$8295$1HvE18) (syntax-violation . g$syntax-violation$15800$1HvE18) (serious-condition? . g$serious-condition?$8234$1HvE18) (non-continuable-violation? . g$non-continuable-violation?$8274$1HvE18) (message-condition? . g$message-condition?$8221$1HvE18) (make-who-condition . g$make-who-condition$8265$1HvE18) (make-warning . g$make-warning$8227$1HvE18) (make-violation . g$make-violation$8245$1HvE18) (make-undefined-violation . g$make-undefined-violation$8301$1HvE18) (make-syntax-violation . g$make-syntax-violation$8291$1HvE18) (make-serious-condition . g$make-serious-condition$8233$1HvE18) (make-non-continuable-violation . g$make-non-continuable-violation$8273$1HvE18) (make-message-condition . g$make-message-condition$8219$1HvE18) (make-lexical-violation . g$make-lexical-violation$8285$1HvE18) (make-irritants-condition . g$make-irritants-condition$8257$1HvE18) (make-implementation-restriction-violation . g$make-implementation-restriction-violation$8279$1HvE18) (make-error . g$make-error$8239$1HvE18) (make-assertion-violation . g$make-assertion-violation$8251$1HvE18) (lexical-violation? . g$lexical-violation?$8286$1HvE18) (irritants-condition? . g$irritants-condition?$8259$1HvE18) (implementation-restriction-violation? . g$implementation-restriction-violation?$8280$1HvE18) (error? . g$error?$8240$1HvE18) (condition-who . g$condition-who$8268$1HvE18) (condition-message . g$condition-message$8222$1HvE18) (condition-irritants . g$condition-irritants$8260$1HvE18) (assertion-violation? . g$assertion-violation?$8252$1HvE18) (native-endianness . g$native-endianness$8084$1HvE18) (bytevector-u64-set! . g$bytevector-u64-set!$8105$1HvE18) (bytevector-u64-ref . g$bytevector-u64-ref$8101$1HvE18) (bytevector-u64-native-set! . g$bytevector-u64-native-set!$8107$1HvE18) (bytevector-u64-native-ref . g$bytevector-u64-native-ref$8103$1HvE18) (bytevector-u32-set! . g$bytevector-u32-set!$8097$1HvE18) (bytevector-u32-ref . g$bytevector-u32-ref$8093$1HvE18) (bytevector-u32-native-set! . g$bytevector-u32-native-set!$8099$1HvE18) (bytevector-u32-native-ref . g$bytevector-u32-native-ref$8095$1HvE18) (bytevector-u16-set! . g$bytevector-u16-set!$8089$1HvE18) (bytevector-u16-ref . g$bytevector-u16-ref$8085$1HvE18) (bytevector-u16-native-set! . g$bytevector-u16-native-set!$8091$1HvE18) (bytevector-u16-native-ref . g$bytevector-u16-native-ref$8087$1HvE18) (bytevector-s64-set! . g$bytevector-s64-set!$8106$1HvE18) (bytevector-s64-ref . g$bytevector-s64-ref$8102$1HvE18) (bytevector-s64-native-set! . g$bytevector-s64-native-set!$8108$1HvE18) (bytevector-s64-native-ref . g$bytevector-s64-native-ref$8104$1HvE18) (bytevector-s32-set! . g$bytevector-s32-set!$8098$1HvE18) (bytevector-s32-ref . g$bytevector-s32-ref$8094$1HvE18) (bytevector-s32-native-set! . g$bytevector-s32-native-set!$8100$1HvE18) (bytevector-s32-native-ref . g$bytevector-s32-native-ref$8096$1HvE18) (bytevector-s16-set! . g$bytevector-s16-set!$8090$1HvE18) (bytevector-s16-ref . g$bytevector-s16-ref$8086$1HvE18) (bytevector-s16-native-set! . g$bytevector-s16-native-set!$8092$1HvE18) (bytevector-s16-native-ref . g$bytevector-s16-native-ref$8088$1HvE18) (bytevector-ieee-single-native-set! . g$bytevector-ieee-single-native-set!$8111$1HvE18) (bytevector-ieee-single-native-ref . g$bytevector-ieee-single-native-ref$8109$1HvE18) (bytevector-ieee-double-native-set! . g$bytevector-ieee-double-native-set!$8112$1HvE18) (bytevector-ieee-double-native-ref . g$bytevector-ieee-double-native-ref$8110$1HvE18) (no-nans-violation? . g$no-nans-violation?$8520$1HvE18) (no-infinities-violation? . g$no-infinities-violation?$8514$1HvE18) (make-no-nans-violation . g$make-no-nans-violation$8519$1HvE18) (make-no-infinities-violation . g$make-no-infinities-violation$8513$1HvE18) (fxrotate-bit-field . g$fxrotate-bit-field$8496$1HvE18) (fxif . g$fxif$8490$1HvE18) (fxcopy-bit-field . g$fxcopy-bit-field$8493$1HvE18) (fxcopy-bit . g$fxcopy-bit$8491$1HvE18) (fxbit-field . g$fxbit-field$8492$1HvE18) (fxarithmetic-shift-right . g$fxarithmetic-shift-right$8495$1HvE18) (fxarithmetic-shift-left . g$fxarithmetic-shift-left$8494$1HvE18) (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$8441$1HvE18) (bitwise-reverse-bit-field . g$bitwise-reverse-bit-field$8442$1HvE18) (bitwise-if . g$bitwise-if$8435$1HvE18) (bitwise-copy-bit-field . g$bitwise-copy-bit-field$8438$1HvE18) (bitwise-copy-bit . g$bitwise-copy-bit$8436$1HvE18) (bitwise-arithmetic-shift-right . g$bitwise-arithmetic-shift-right$8440$1HvE18) (bitwise-arithmetic-shift-left . g$bitwise-arithmetic-shift-left$8439$1HvE18) (rationalize . g$rationalize$7572$1HvE18) (cddddr . g$cddddr$7571$1HvE18) (cdddar . g$cdddar$7570$1HvE18) (cddadr . g$cddadr$7569$1HvE18) (cddaar . g$cddaar$7568$1HvE18) (cdaddr . g$cdaddr$7567$1HvE18) (cdadar . g$cdadar$7566$1HvE18) (cdaadr . g$cdaadr$7565$1HvE18) (cdaaar . g$cdaaar$7564$1HvE18) (cadddr . g$cadddr$7563$1HvE18) (caddar . g$caddar$7562$1HvE18) (cadadr . g$cadadr$7561$1HvE18) (cadaar . g$cadaar$7560$1HvE18) (caaddr . g$caaddr$7559$1HvE18) (caadar . g$caadar$7558$1HvE18) (caaadr . g$caaadr$7557$1HvE18) (caaaar . g$caaaar$7556$1HvE18) (cdddr . g$cdddr$7555$1HvE18) (cddar . g$cddar$7554$1HvE18) (cdadr . g$cdadr$7553$1HvE18) (cdaar . g$cdaar$7552$1HvE18) (caddr . g$caddr$7551$1HvE18) (cadar . g$cadar$7550$1HvE18) (caadr . g$caadr$7549$1HvE18) (caaar . g$caaar$7548$1HvE18) (cddr . g$cddr$7547$1HvE18) (cdar . g$cdar$7546$1HvE18) (cadr . g$cadr$7545$1HvE18) (caar . g$caar$7544$1HvE18) (make-parameter . g$make-parameter$8795$1HvE18) (environment-symbols . g$environment-symbols$15780$1HvE18) (interaction-environment-symbols . g$interaction-environment-symbols$15779$1HvE18) (library-path . g$library-path$9110$1HvE18) (library-extensions . g$library-extensions$9111$1HvE18) (installed-libraries . g$installed-libraries$9131$1HvE18) (expand . g$expand$15785$1HvE18))))))) (g$install-library$9126$1HvE18 'g$16746$1HvE18 '(ironscheme) '() '() '() '() '((tanh . g$16683$1HvE18) (cosh . g$16682$1HvE18) (sinh . g$16681$1HvE18) (make-guid . g$16680$1HvE18) (unspecified? . g$16679$1HvE18) (make-trace . g$16678$1HvE18) (make-list . g$16677$1HvE18) (last-pair . g$16676$1HvE18) (load-r5rs . g$16675$1HvE18) (license . g$16674$1HvE18) (stacktrace . g$16673$1HvE18) (ironscheme-build . g$16071$1HvE18) (set-symbol-value! . g$16660$1HvE18) (symbol-value . g$16659$1HvE18) (ungensym . g$16658$1HvE18) (gensym . g$16657$1HvE18) (void . g$16656$1HvE18) (compile-system-libraries . g$16073$1HvE18) (compile->closure . g$16075$1HvE18) (compile . g$16074$1HvE18) (load . g$16070$1HvE18) (interaction-environment . g$10476$1HvE18) (string-upcase . g$16652$1HvE18) (string-titlecase . g$16651$1HvE18) (string-normalize-nfkd . g$16650$1HvE18) (string-normalize-nfkc . g$16649$1HvE18) (string-normalize-nfd . g$16648$1HvE18) (string-normalize-nfc . g$16647$1HvE18) (string-foldcase . g$16646$1HvE18) (string-downcase . g$16645$1HvE18) (string-ci>? . g$16644$1HvE18) (string-ci>=? . g$16643$1HvE18) (string-ci=? . g$16642$1HvE18) (string-ci<? . g$16641$1HvE18) (string-ci<=? . g$16640$1HvE18) (char-whitespace? . g$16639$1HvE18) (char-upper-case? . g$16638$1HvE18) (char-title-case? . g$16637$1HvE18) (char-numeric? . g$16636$1HvE18) (char-lower-case? . g$16635$1HvE18) (char-general-category . g$16634$1HvE18) (char-upcase . g$16633$1HvE18) (char-titlecase . g$16632$1HvE18) (char-foldcase . g$16631$1HvE18) (char-downcase . g$16630$1HvE18) (char-ci>? . g$16629$1HvE18) (char-ci>=? . g$16628$1HvE18) (char-ci=? . g$16627$1HvE18) (char-ci<? . g$16626$1HvE18) (char-ci<=? . g$16625$1HvE18) (char-alphabetic? . g$16624$1HvE18) (make-variable-transformer . g$10011$1HvE18) (identifier? . g$10472$1HvE18) (generate-temporaries . g$10464$1HvE18) (free-identifier=? . g$10465$1HvE18) (syntax->datum . g$10474$1HvE18) (datum->syntax . g$10473$1HvE18) (bound-identifier=? . g$10466$1HvE18) (record-type-descriptor? . g$16623$1HvE18) (record-predicate . g$16622$1HvE18) (record-mutator . g$16621$1HvE18) (record-constructor . g$16620$1HvE18) (record-accessor . g$16619$1HvE18) (make-record-type-descriptor . g$16618$1HvE18) (make-record-constructor-descriptor . g$16617$1HvE18) (record? . g$16616$1HvE18) (record-type-uid . g$16615$1HvE18) (record-type-sealed? . g$16614$1HvE18) (record-type-parent . g$16613$1HvE18) (record-type-opaque? . g$16612$1HvE18) (record-type-name . g$16611$1HvE18) (record-type-generative? . g$16610$1HvE18) (record-type-field-names . g$16609$1HvE18) (record-rtd . g$16608$1HvE18) (record-field-mutable? . g$16607$1HvE18) (delete-file . g$8455$1HvE18) (file-exists? . g$8454$1HvE18) (vector-sort! . g$16606$1HvE18) (vector-sort . g$16605$1HvE18) (list-sort . g$8912$1HvE18) (symbol-hash . g$16604$1HvE18) (string-ci-hash . g$16603$1HvE18) (string-hash . g$16602$1HvE18) (equal-hash . g$16601$1HvE18) (hashtable-equivalence-function . g$8428$1HvE18) (make-hashtable . g$16600$1HvE18) (hashtable-hash-function . g$8429$1HvE18) (make-eqv-hashtable . g$8420$1HvE18) (make-eq-hashtable . g$8419$1HvE18) (hashtable? . g$16599$1HvE18) (hashtable-update! . g$8426$1HvE18) (hashtable-size . g$8421$1HvE18) (hashtable-set! . g$8423$1HvE18) (hashtable-ref . g$8422$1HvE18) (hashtable-mutable? . g$16598$1HvE18) (hashtable-keys . g$16597$1HvE18) (hashtable-entries . g$16596$1HvE18) (hashtable-delete! . g$8424$1HvE18) (hashtable-copy . g$16595$1HvE18) (hashtable-contains? . g$8425$1HvE18) (hashtable-clear! . g$8427$1HvE18) (call-with-output-file . g$16594$1HvE18) (call-with-input-file . g$16593$1HvE18) (write-char . g$16592$1HvE18) (write . g$16591$1HvE18) (with-output-to-file . g$16590$1HvE18) (with-input-from-file . g$16589$1HvE18) (read-char . g$16588$1HvE18) (read . g$16587$1HvE18) (peek-char . g$16586$1HvE18) (open-output-file . g$16585$1HvE18) (open-input-file . g$16584$1HvE18) (newline . g$16583$1HvE18) (display . g$16582$1HvE18) (close-output-port . g$16581$1HvE18) (close-input-port . g$16580$1HvE18) (eof-object? . g$16579$1HvE18) (eof-object . g$16578$1HvE18) (current-error-port . g$16577$1HvE18) (current-output-port . g$16576$1HvE18) (current-input-port . g$16575$1HvE18) (output-port? . g$16574$1HvE18) (input-port? . g$16573$1HvE18) (utf-8-codec . g$16572$1HvE18) (utf-16-codec . g$16571$1HvE18) (transcoder-error-handling-mode . g$16570$1HvE18) (transcoder-eol-style . g$16569$1HvE18) (transcoder-codec . g$16568$1HvE18) (transcoded-port . g$16567$1HvE18) (textual-port? . g$16566$1HvE18) (string->bytevector . g$16565$1HvE18) (standard-output-port . g$16564$1HvE18) (standard-input-port . g$16563$1HvE18) (standard-error-port . g$16562$1HvE18) (set-port-position! . g$16561$1HvE18) (put-u8 . g$16560$1HvE18) (put-string . g$16559$1HvE18) (put-datum . g$16558$1HvE18) (put-char . g$16557$1HvE18) (put-bytevector . g$16556$1HvE18) (port? . g$16555$1HvE18) (port-transcoder . g$16554$1HvE18) (port-position . g$16553$1HvE18) (port-has-set-port-position!? . g$16552$1HvE18) (port-has-port-position? . g$16551$1HvE18) (port-eof? . g$16550$1HvE18) (output-port-buffer-mode . g$16549$1HvE18) (open-string-output-port . g$9303$1HvE18) (open-string-input-port . g$16548$1HvE18) (open-file-output-port . g$16547$1HvE18) (open-file-input/output-port . g$16546$1HvE18) (open-file-input-port . g$16545$1HvE18) (open-bytevector-output-port . g$16544$1HvE18) (open-bytevector-input-port . g$16543$1HvE18) (native-transcoder . g$16542$1HvE18) (native-eol-style . g$16541$1HvE18) (make-transcoder . g$16540$1HvE18) (latin-1-codec . g$16539$1HvE18) (make-i/o-write-error . g$9160$1HvE18) (make-i/o-read-error . g$9146$1HvE18) (make-i/o-port-error . g$9265$1HvE18) (make-i/o-invalid-position-error . g$9175$1HvE18) (make-i/o-filename-error . g$9192$1HvE18) (make-i/o-file-protection-error . g$9208$1HvE18) (make-i/o-file-is-read-only-error . g$9222$1HvE18) (make-i/o-file-does-not-exist-error . g$9250$1HvE18) (make-i/o-file-already-exists-error . g$9236$1HvE18) (make-i/o-error . g$9132$1HvE18) (make-i/o-encoding-error . g$9296$1HvE18) (make-i/o-decoding-error . g$9281$1HvE18) (make-custom-textual-output-port . g$16538$1HvE18) (make-custom-textual-input/output-port . g$16537$1HvE18) (make-custom-textual-input-port . g$16536$1HvE18) (make-custom-binary-output-port . g$16535$1HvE18) (make-custom-binary-input/output-port . g$16534$1HvE18) (make-custom-binary-input-port . g$16533$1HvE18) (make-bytevector . g$16532$1HvE18) (lookahead-u8 . g$16531$1HvE18) (lookahead-char . g$16530$1HvE18) (i/o-write-error? . g$9161$1HvE18) (i/o-read-error? . g$9147$1HvE18) (i/o-port-error? . g$9267$1HvE18) (i/o-invalid-position-error? . g$9177$1HvE18) (i/o-filename-error? . g$9194$1HvE18) (i/o-file-protection-error? . g$9209$1HvE18) (i/o-file-is-read-only-error? . g$9223$1HvE18) (i/o-file-does-not-exist-error? . g$9251$1HvE18) (i/o-file-already-exists-error? . g$9237$1HvE18) (i/o-error? . g$9133$1HvE18) (i/o-error-port . g$9268$1HvE18) (i/o-error-filename . g$9195$1HvE18) (i/o-encoding-error? . g$9298$1HvE18) (i/o-encoding-error-char . g$9299$1HvE18) (i/o-decoding-error? . g$9282$1HvE18) (get-u8 . g$16529$1HvE18) (get-string-n! . g$16528$1HvE18) (get-string-n . g$16527$1HvE18) (get-string-all . g$16526$1HvE18) (get-line . g$16525$1HvE18) (get-datum . g$16524$1HvE18) (get-char . g$16523$1HvE18) (get-bytevector-some . g$16522$1HvE18) (get-bytevector-n! . g$16521$1HvE18) (get-bytevector-n . g$16520$1HvE18) (get-bytevector-all . g$16519$1HvE18) (flush-output-port . g$16518$1HvE18) (close-port . g$16517$1HvE18) (call-with-string-output-port . g$16516$1HvE18) (call-with-port . g$16515$1HvE18) (call-with-bytevector-output-port . g$16514$1HvE18) (bytevector->string . g$16513$1HvE18) (buffer-mode? . g$16512$1HvE18) (binary-port? . g$16511$1HvE18) (scheme-report-environment . g$10455$1HvE18) (quotient . g$8899$1HvE18) (null-environment . g$10454$1HvE18) (remainder . g$8900$1HvE18) (modulo . g$8901$1HvE18) (inexact->exact . g$16510$1HvE18) (force . g$16509$1HvE18) (exact->inexact . g$16508$1HvE18) (exit . g$16507$1HvE18) (command-line . g$16506$1HvE18) (string-fill! . g$16505$1HvE18) (string-set! . g$16504$1HvE18) (set-cdr! . g$16503$1HvE18) (set-car! . g$16502$1HvE18) (remove . g$8526$1HvE18) (remv . g$8527$1HvE18) (remp . g$16501$1HvE18) (remq . g$8528$1HvE18) (partition . g$16500$1HvE18) (memv . g$16499$1HvE18) (memq . g$16498$1HvE18) (memp . g$16497$1HvE18) (member . g$16496$1HvE18) (exists . g$8522$1HvE18) (for-all . g$8521$1HvE18) (fold-right . g$8525$1HvE18) (fold-left . g$8524$1HvE18) (find . g$16495$1HvE18) (filter . g$16494$1HvE18) (cons* . g$8523$1HvE18) (assv . g$16493$1HvE18) (assq . g$16492$1HvE18) (assp . g$16491$1HvE18) (assoc . g$16490$1HvE18) (with-exception-handler . g$16489$1HvE18) (raise-continuable . g$16488$1HvE18) (raise . g$16487$1HvE18) (eval . g$10457$1HvE18) (environment . g$10453$1HvE18) (make-enumeration . g$16486$1HvE18) (enum-set=? . g$16485$1HvE18) (enum-set-universe . g$16484$1HvE18) (enum-set-union . g$16483$1HvE18) (enum-set-subset? . g$16482$1HvE18) (enum-set-projection . g$16481$1HvE18) (enum-set-member? . g$16480$1HvE18) (enum-set-intersection . g$16479$1HvE18) (enum-set-indexer . g$16478$1HvE18) (enum-set-difference . g$16477$1HvE18) (enum-set-constructor . g$16476$1HvE18) (enum-set-complement . g$16475$1HvE18) (enum-set->list . g$16474$1HvE18) (who-condition? . g$8816$1HvE18) (warning? . g$8727$1HvE18) (violation? . g$8769$1HvE18) (undefined-violation? . g$8893$1HvE18) (syntax-violation? . g$8877$1HvE18) (syntax-violation-subform . g$8879$1HvE18) (syntax-violation-form . g$8878$1HvE18) (syntax-violation . g$10471$1HvE18) (simple-conditions . g$16473$1HvE18) (serious-condition? . g$8741$1HvE18) (non-continuable-violation? . g$8831$1HvE18) (message-condition? . g$8712$1HvE18) (make-who-condition . g$8814$1HvE18) (make-warning . g$8726$1HvE18) (make-violation . g$8768$1HvE18) (make-undefined-violation . g$8892$1HvE18) (make-syntax-violation . g$8874$1HvE18) (make-serious-condition . g$8740$1HvE18) (make-non-continuable-violation . g$8830$1HvE18) (make-message-condition . g$8710$1HvE18) (make-lexical-violation . g$8858$1HvE18) (make-irritants-condition . g$8797$1HvE18) (make-implementation-restriction-violation . g$8844$1HvE18) (make-error . g$8754$1HvE18) (make-assertion-violation . g$8782$1HvE18) (lexical-violation? . g$8859$1HvE18) (irritants-condition? . g$8799$1HvE18) (implementation-restriction-violation? . g$8845$1HvE18) (error? . g$8755$1HvE18) (condition-who . g$8817$1HvE18) (condition-predicate . g$16472$1HvE18) (condition-message . g$8713$1HvE18) (condition-irritants . g$8800$1HvE18) (condition-accessor . g$16471$1HvE18) (condition . g$16470$1HvE18) (assertion-violation? . g$8783$1HvE18) (condition? . g$16469$1HvE18) (utf32->string . g$16468$1HvE18) (utf16->string . g$16467$1HvE18) (utf8->string . g$16466$1HvE18) (uint-list->bytevector . g$16465$1HvE18) (u8-list->bytevector . g$16464$1HvE18) (string->utf8 . g$16463$1HvE18) (string->utf32 . g$16462$1HvE18) (string->utf16 . g$16461$1HvE18) (sint-list->bytevector . g$16460$1HvE18) (native-endianness . g$8567$1HvE18) (bytevector? . g$16459$1HvE18) (bytevector=? . g$16458$1HvE18) (bytevector-uint-set! . g$16457$1HvE18) (bytevector-uint-ref . g$16456$1HvE18) (bytevector-u8-set! . g$16455$1HvE18) (bytevector-u8-ref . g$16454$1HvE18) (bytevector-u64-set! . g$8588$1HvE18) (bytevector-u64-ref . g$8584$1HvE18) (bytevector-u64-native-set! . g$8590$1HvE18) (bytevector-u64-native-ref . g$8586$1HvE18) (bytevector-u32-set! . g$8580$1HvE18) (bytevector-u32-ref . g$8576$1HvE18) (bytevector-u32-native-set! . g$8582$1HvE18) (bytevector-u32-native-ref . g$8578$1HvE18) (bytevector-u16-set! . g$8572$1HvE18) (bytevector-u16-ref . g$8568$1HvE18) (bytevector-u16-native-set! . g$8574$1HvE18) (bytevector-u16-native-ref . g$8570$1HvE18) (bytevector-sint-set! . g$16453$1HvE18) (bytevector-sint-ref . g$16452$1HvE18) (bytevector-s8-set! . g$16451$1HvE18) (bytevector-s8-ref . g$16450$1HvE18) (bytevector-s64-set! . g$8589$1HvE18) (bytevector-s64-ref . g$8585$1HvE18) (bytevector-s64-native-set! . g$8591$1HvE18) (bytevector-s64-native-ref . g$8587$1HvE18) (bytevector-s32-set! . g$8581$1HvE18) (bytevector-s32-ref . g$8577$1HvE18) (bytevector-s32-native-set! . g$8583$1HvE18) (bytevector-s32-native-ref . g$8579$1HvE18) (bytevector-s16-set! . g$8573$1HvE18) (bytevector-s16-ref . g$8569$1HvE18) (bytevector-s16-native-set! . g$8575$1HvE18) (bytevector-s16-native-ref . g$8571$1HvE18) (bytevector-length . g$16449$1HvE18) (bytevector-ieee-single-set! . g$16448$1HvE18) (bytevector-ieee-single-ref . g$16447$1HvE18) (bytevector-ieee-single-native-set! . g$8594$1HvE18) (bytevector-ieee-single-native-ref . g$8592$1HvE18) (bytevector-ieee-double-set! . g$16446$1HvE18) (bytevector-ieee-double-ref . g$16445$1HvE18) (bytevector-ieee-double-native-set! . g$8595$1HvE18) (bytevector-ieee-double-native-ref . g$8593$1HvE18) (bytevector-fill! . g$16444$1HvE18) (bytevector-copy! . g$16443$1HvE18) (bytevector-copy . g$16442$1HvE18) (bytevector->uint-list . g$16441$1HvE18) (bytevector->u8-list . g$16440$1HvE18) (bytevector->sint-list . g$16439$1HvE18) (no-nans-violation? . g$9118$1HvE18) (no-infinities-violation? . g$9104$1HvE18) (make-no-nans-violation . g$9117$1HvE18) (make-no-infinities-violation . g$9103$1HvE18) (real->flonum . g$16438$1HvE18) (flzero? . g$16437$1HvE18) (fltruncate . g$16436$1HvE18) (fltan . g$16435$1HvE18) (flsqrt . g$16434$1HvE18) (flsin . g$16433$1HvE18) (flround . g$16432$1HvE18) (flpositive? . g$16431$1HvE18) (flonum? . g$16430$1HvE18) (flodd? . g$16429$1HvE18) (flnumerator . g$16428$1HvE18) (flnegative? . g$16427$1HvE18) (flnan? . g$16426$1HvE18) (flmod0 . g$16425$1HvE18) (flmod . g$16424$1HvE18) (flmin . g$16423$1HvE18) (flmax . g$16422$1HvE18) (fllog . g$16421$1HvE18) (flinteger? . g$16420$1HvE18) (flinfinite? . g$16419$1HvE18) (flfloor . g$16418$1HvE18) (flfinite? . g$16417$1HvE18) (flexpt . g$16416$1HvE18) (flexp . g$16415$1HvE18) (fleven? . g$16414$1HvE18) (fldiv0-and-mod0 . g$16413$1HvE18) (fldiv0 . g$16412$1HvE18) (fldiv-and-mod . g$16411$1HvE18) (fldiv . g$16410$1HvE18) (fldenominator . g$16409$1HvE18) (flcos . g$16408$1HvE18) (flceiling . g$16407$1HvE18) (flatan . g$16406$1HvE18) (flasin . g$16405$1HvE18) (flacos . g$16404$1HvE18) (flabs . g$16403$1HvE18) (fl>? . g$16402$1HvE18) (fl>=? . g$16401$1HvE18) (fl=? . g$16400$1HvE18) (fl<? . g$16399$1HvE18) (fl<=? . g$16398$1HvE18) (fl/ . g$16397$1HvE18) (fl- . g$16396$1HvE18) (fl+ . g$16395$1HvE18) (fl* . g$16394$1HvE18) (fixnum->flonum . g$16393$1HvE18) (fxzero? . g$16392$1HvE18) (fxxor . g$16391$1HvE18) (fxrotate-bit-field . g$9049$1HvE18) (fxreverse-bit-field . g$16390$1HvE18) (fxpositive? . g$16389$1HvE18) (fxodd? . g$16388$1HvE18) (fxnot . g$16387$1HvE18) (fxnegative? . g$16386$1HvE18) (fxmod0 . g$16385$1HvE18) (fxmod . g$16384$1HvE18) (fxmin . g$16383$1HvE18) (fxmax . g$16382$1HvE18) (fxlength . g$16381$1HvE18) (fxior . g$16380$1HvE18) (fxif . g$9043$1HvE18) (fxfirst-bit-set . g$16379$1HvE18) (fxeven? . g$16378$1HvE18) (fxdiv0-and-mod0 . g$16377$1HvE18) (fxdiv0 . g$16376$1HvE18) (fxdiv-and-mod . g$16375$1HvE18) (fxdiv . g$16374$1HvE18) (fxcopy-bit-field . g$9046$1HvE18) (fxcopy-bit . g$9044$1HvE18) (fxbit-set? . g$16373$1HvE18) (fxbit-field . g$9045$1HvE18) (fxbit-count . g$16372$1HvE18) (fxarithmetic-shift-right . g$9048$1HvE18) (fxarithmetic-shift-left . g$9047$1HvE18) (fxarithmetic-shift . g$16371$1HvE18) (fxand . g$16370$1HvE18) (fx>? . g$16369$1HvE18) (fx>=? . g$16368$1HvE18) (fx=? . g$16367$1HvE18) (fx<? . g$16366$1HvE18) (fx<=? . g$16365$1HvE18) (fx-/carry . g$16364$1HvE18) (fx- . g$16363$1HvE18) (fx+/carry . g$16362$1HvE18) (fx+ . g$16361$1HvE18) (fx*/carry . g$16360$1HvE18) (fx* . g$16359$1HvE18) (greatest-fixnum . g$16358$1HvE18) (least-fixnum . g$16357$1HvE18) (fixnum-width . g$16356$1HvE18) (fixnum? . g$16355$1HvE18) (bitwise-rotate-bit-field . g$8997$1HvE18) (bitwise-reverse-bit-field . g$8998$1HvE18) (bitwise-length . g$16354$1HvE18) (bitwise-if . g$8991$1HvE18) (bitwise-first-bit-set . g$16353$1HvE18) (bitwise-copy-bit-field . g$8994$1HvE18) (bitwise-copy-bit . g$8992$1HvE18) (bitwise-bit-set? . g$16352$1HvE18) (bitwise-bit-field . g$16351$1HvE18) (bitwise-bit-count . g$16350$1HvE18) (bitwise-xor . g$16349$1HvE18) (bitwise-ior . g$16348$1HvE18) (bitwise-and . g$16347$1HvE18) (bitwise-not . g$16346$1HvE18) (bitwise-arithmetic-shift-right . g$8996$1HvE18) (bitwise-arithmetic-shift-left . g$8995$1HvE18) (bitwise-arithmetic-shift . g$16345$1HvE18) (zero? . g$16344$1HvE18) (vector? . g$16343$1HvE18) (vector-set! . g$16342$1HvE18) (vector-ref . g$16341$1HvE18) (vector-map . g$16340$1HvE18) (vector-length . g$16339$1HvE18) (vector-for-each . g$16338$1HvE18) (vector-fill! . g$16337$1HvE18) (vector->list . g$16336$1HvE18) (vector . g$16335$1HvE18) (values . g$16334$1HvE18) (truncate . g$16333$1HvE18) (tan . g$16332$1HvE18) (symbol? . g$16331$1HvE18) (symbol=? . g$16330$1HvE18) (symbol->string . g$16329$1HvE18) (substring . g$16328$1HvE18) (string? . g$16327$1HvE18) (string>? . g$16326$1HvE18) (string>=? . g$16325$1HvE18) (string=? . g$16324$1HvE18) (string<? . g$16323$1HvE18) (string<=? . g$16322$1HvE18) (string-ref . g$16321$1HvE18) (string-length . g$16320$1HvE18) (string-for-each . g$16319$1HvE18) (string-copy . g$16318$1HvE18) (string-append . g$16317$1HvE18) (string->symbol . g$16316$1HvE18) (string->number . g$16315$1HvE18) (string->list . g$16314$1HvE18) (string . g$16313$1HvE18) (sqrt . g$16312$1HvE18) (sin . g$16311$1HvE18) (round . g$16310$1HvE18) (reverse . g$16309$1HvE18) (real? . g$16308$1HvE18) (real-valued? . g$16307$1HvE18) (real-part . g$16306$1HvE18) (rationalize . g$8070$1HvE18) (rational? . g$16305$1HvE18) (rational-valued? . g$16304$1HvE18) (procedure? . g$16303$1HvE18) (positive? . g$16302$1HvE18) (pair? . g$16301$1HvE18) (odd? . g$16300$1HvE18) (numerator . g$16299$1HvE18) (number? . g$16298$1HvE18) (number->string . g$16297$1HvE18) (null? . g$16296$1HvE18) (not . g$16295$1HvE18) (negative? . g$16294$1HvE18) (nan? . g$16293$1HvE18) (min . g$16292$1HvE18) (max . g$16291$1HvE18) (map . g$16290$1HvE18) (make-vector . g$16289$1HvE18) (make-string . g$16288$1HvE18) (make-rectangular . g$16287$1HvE18) (make-polar . g$16286$1HvE18) (magnitude . g$16285$1HvE18) (log . g$16284$1HvE18) (list? . g$16283$1HvE18) (list-tail . g$16282$1HvE18) (list-ref . g$16281$1HvE18) (list->vector . g$16280$1HvE18) (list->string . g$16279$1HvE18) (list . g$16278$1HvE18) (length . g$16277$1HvE18) (lcm . g$16276$1HvE18) (integer? . g$16275$1HvE18) (integer-valued? . g$16274$1HvE18) (integer->char . g$16273$1HvE18) (infinite? . g$16272$1HvE18) (inexact? . g$16271$1HvE18) (inexact . g$16270$1HvE18) (imag-part . g$16269$1HvE18) (gcd . g$16268$1HvE18) (for-each . g$16267$1HvE18) (floor . g$16266$1HvE18) (finite? . g$16265$1HvE18) (expt . g$16264$1HvE18) (exp . g$16263$1HvE18) (exact? . g$16262$1HvE18) (exact-integer-sqrt . g$16261$1HvE18) (exact . g$16260$1HvE18) (even? . g$16259$1HvE18) (error . g$16258$1HvE18) (eqv? . g$16257$1HvE18) (equal? . g$16256$1HvE18) (eq? . g$16255$1HvE18) (dynamic-wind . g$16254$1HvE18) (div0-and-mod0 . g$16253$1HvE18) (mod0 . g$16252$1HvE18) (div0 . g$16251$1HvE18) (div-and-mod . g$16250$1HvE18) (mod . g$16249$1HvE18) (div . g$16248$1HvE18) (denominator . g$16247$1HvE18) (cos . g$16246$1HvE18) (cons . g$16245$1HvE18) (complex? . g$16244$1HvE18) (char? . g$16243$1HvE18) (char>? . g$16242$1HvE18) (char>=? . g$16241$1HvE18) (char=? . g$16240$1HvE18) (char<? . g$16239$1HvE18) (char<=? . g$16238$1HvE18) (char->integer . g$16237$1HvE18) (ceiling . g$16236$1HvE18) (call-with-values . g$16235$1HvE18) (call/cc . g$16234$1HvE18) (call-with-current-continuation . g$16233$1HvE18) (cddddr . g$8069$1HvE18) (cdddar . g$8068$1HvE18) (cddadr . g$8067$1HvE18) (cddaar . g$8066$1HvE18) (cdaddr . g$8065$1HvE18) (cdadar . g$8064$1HvE18) (cdaadr . g$8063$1HvE18) (cdaaar . g$8062$1HvE18) (cadddr . g$8061$1HvE18) (caddar . g$8060$1HvE18) (cadadr . g$8059$1HvE18) (cadaar . g$8058$1HvE18) (caaddr . g$8057$1HvE18) (caadar . g$8056$1HvE18) (caaadr . g$8055$1HvE18) (caaaar . g$8054$1HvE18) (cdddr . g$8053$1HvE18) (cddar . g$8052$1HvE18) (cdadr . g$8051$1HvE18) (cdaar . g$8050$1HvE18) (caddr . g$8049$1HvE18) (cadar . g$8048$1HvE18) (caadr . g$8047$1HvE18) (caaar . g$8046$1HvE18) (cddr . g$8045$1HvE18) (cdar . g$8044$1HvE18) (cadr . g$8043$1HvE18) (caar . g$8042$1HvE18) (cdr . g$16232$1HvE18) (car . g$16231$1HvE18) (boolean? . g$16230$1HvE18) (boolean=? . g$16229$1HvE18) (atan . g$16228$1HvE18) (assertion-violation . g$16227$1HvE18) (asin . g$16226$1HvE18) (apply . g$16225$1HvE18) (append . g$16224$1HvE18) (angle . g$16223$1HvE18) (acos . g$16222$1HvE18) (abs . g$16221$1HvE18) (/ . g$16220$1HvE18) (* . g$16219$1HvE18) (- . g$16218$1HvE18) (+ . g$16217$1HvE18) (>= . g$16216$1HvE18) (> . g$16215$1HvE18) (= . g$16214$1HvE18) (<= . g$16213$1HvE18) (< . g$16212$1HvE18) (vector-append . g$16210$1HvE18) (vector-filter . g$16209$1HvE18) (vector-reverse! . g$16208$1HvE18) (vector-contains? . g$16207$1HvE18) (vector-index-of . g$16206$1HvE18) (vector-copy . g$16205$1HvE18) (vector-binary-search . g$16204$1HvE18) (get-output-string . g$16203$1HvE18) (open-output-string . g$16202$1HvE18) (open-input-string . g$16201$1HvE18) (string-format . g$16200$1HvE18) (make-traced-procedure . g$16199$1HvE18) (pmap . g$16198$1HvE18) (time-it . g$16197$1HvE18) (make-parameter . g$9334$1HvE18) (library-locator . g$16196$1HvE18) (get-library-paths . g$16195$1HvE18) (environment-symbols . g$10451$1HvE18) (interaction-environment-symbols . g$10450$1HvE18) (library-path . g$9559$1HvE18) (library-extensions . g$9560$1HvE18) (installed-libraries . g$9580$1HvE18) (expand . g$10456$1HvE18) (&no-nans . g$16194$1HvE18) (&no-infinities . g$16193$1HvE18) (&i/o-encoding . g$16192$1HvE18) (&i/o-decoding . g$16191$1HvE18) (&i/o-port . g$16190$1HvE18) (&i/o-file-does-not-exist . g$16189$1HvE18) (&i/o-file-already-exists . g$16188$1HvE18) (&i/o-file-is-read-only . g$16187$1HvE18) (&i/o-file-protection . g$16186$1HvE18) (&i/o-filename . g$16185$1HvE18) (&i/o-invalid-position . g$16184$1HvE18) (&i/o-write . g$16183$1HvE18) (&i/o-read . g$16182$1HvE18) (&i/o . g$16181$1HvE18) (&non-continuable . g$16180$1HvE18) (&undefined . g$16179$1HvE18) (&syntax . g$16178$1HvE18) (&lexical . g$16177$1HvE18) (&implementation-restriction . g$16176$1HvE18) (&who . g$16174$1HvE18) (&irritants . g$16173$1HvE18) (&assertion . g$16172$1HvE18) (&violation . g$16171$1HvE18) (&error . g$16170$1HvE18) (&serious . g$16169$1HvE18) (&warning . g$16168$1HvE18) (&message . g$16167$1HvE18) (&condition . g$16166$1HvE18) (define-condition-type . g$16165$1HvE18) (define-enumeration . g$16164$1HvE18) (define-record-type . g$16163$1HvE18) (parent-rtd . g$16162$1HvE18) (nongenerative . g$16161$1HvE18) (opaque . g$16160$1HvE18) (sealed . g$16159$1HvE18) (protocol . g$16158$1HvE18) (parent . g$16157$1HvE18) (immutable . g$16156$1HvE18) (mutable . g$16155$1HvE18) (fields . g$16154$1HvE18) (error-handling-mode . g$16153$1HvE18) (file-options . g$16152$1HvE18) (buffer-mode . g$16151$1HvE18) (eol-style . g$16150$1HvE18) (guard . g$16149$1HvE18) (trace-define-syntax . g$16148$1HvE18) (trace-define . g$16147$1HvE18) (trace-lambda . g$16146$1HvE18) (unsyntax-splicing . g$16145$1HvE18) (unsyntax . g$16144$1HvE18) (unquote-splicing . g$16143$1HvE18) (unquote . g$16142$1HvE18) (_ . g$16141$1HvE18) (else . g$16140$1HvE18) (=> . g$16139$1HvE18) (... . g$16138$1HvE18) (assert . g$16137$1HvE18) (endianness . g$16136$1HvE18) (delay . g$16135$1HvE18) (time . g$16134$1HvE18) (or . g$16133$1HvE18) (and . g$16132$1HvE18) (do . g$16131$1HvE18) (cond . g$16130$1HvE18) (let* . g$16129$1HvE18) (let . g$16128$1HvE18) (identifier-syntax . g$16127$1HvE18) (with-syntax . g$16126$1HvE18) (quasisyntax . g$16125$1HvE18) (quasiquote . g$16124$1HvE18) (syntax-rules . g$16123$1HvE18) (include-into . g$16122$1HvE18) (include . g$16121$1HvE18) (let-values . g$16119$1HvE18) (let*-values . g$16118$1HvE18) (record-constructor-descriptor . g$16117$1HvE18) (record-type-descriptor . g$16116$1HvE18) (fluid-let-syntax . g$16115$1HvE18) (case . g$16114$1HvE18) (parameterize . g$16113$1HvE18) (unless . g$16112$1HvE18) (when . g$16111$1HvE18) (if . g$16110$1HvE18) (letrec* . g$16109$1HvE18) (letrec . g$16108$1HvE18) (case-lambda . g$16106$1HvE18) (lambda . g$16105$1HvE18) (syntax . g$16104$1HvE18) (syntax-case . g$16103$1HvE18) (quote . g$16102$1HvE18) (letrec-syntax . g$16100$1HvE18) (let-syntax . g$16099$1HvE18) (set! . g$16098$1HvE18) (import . g$16097$1HvE18) (library . g$16096$1HvE18) (begin . g$16095$1HvE18) (module . g$16094$1HvE18) (define-syntax . g$16093$1HvE18) (define . g$16092$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16747$1HvE18 '(ironscheme library) '() '() '() '() '((get-library-paths . g$16195$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16748$1HvE18 '(ironscheme reader) '() '() '() '() '((annotation-stripped . g$16688$1HvE18) (annotation-source . g$16687$1HvE18) (annotation-expression . g$16686$1HvE18) (annotation? . g$16685$1HvE18) (read-annotated . g$16684$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16749$1HvE18 '(ironscheme serialization) '() '() '() '() '((load-serialized-library . g$16655$1HvE18) (serialize-library . g$16654$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16750$1HvE18 '(ironscheme records printer) '() '() '() '() '((make-record-printer . g$16211$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16751$1HvE18 '(ironscheme clr internal) '() '() '() '() '((define-clr-class-internal . g$16672$1HvE18) (clr-field-set!-internal . g$16671$1HvE18) (clr-field-get-internal . g$16670$1HvE18) (clr-cast-internal . g$16669$1HvE18) (clr-call-internal . g$16668$1HvE18) (clr-new-internal . g$16667$1HvE18) (clr-new-array-internal . g$16666$1HvE18) (clr-is-internal . g$16665$1HvE18) (clr-reference-internal . g$16664$1HvE18) (clr-using-internal . g$16663$1HvE18) (clr-clear-usings-internal . g$16662$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16752$1HvE18 '(psyntax null-environment-5) '() '() '() '() '((unquote-splicing . g$16143$1HvE18) (unquote . g$16142$1HvE18) (delay . g$16135$1HvE18) (or . g$16133$1HvE18) (and . g$16132$1HvE18) (do . g$16131$1HvE18) (cond . g$16130$1HvE18) (let* . g$16129$1HvE18) (let . g$16128$1HvE18) (quasiquote . g$16124$1HvE18) (syntax-rules . g$16123$1HvE18) (case . g$16114$1HvE18) (if . g$16110$1HvE18) (letrec . g$16108$1HvE18) (lambda . g$16105$1HvE18) (quote . g$16102$1HvE18) (letrec-syntax . g$16100$1HvE18) (let-syntax . g$16099$1HvE18) (set! . g$16098$1HvE18) (begin . g$16095$1HvE18) (define-syntax . g$16093$1HvE18) (define . g$16092$1HvE18)) '() values values '#f '#f '#f '#f) (g$install-library$9126$1HvE18 'g$16753$1HvE18 '(psyntax scheme-report-environment-5) '() '() '() '() '((interaction-environment . g$10476$1HvE18) (char-ready? . g$16653$1HvE18) (string-ci>? . g$16644$1HvE18) (string-ci>=? . g$16643$1HvE18) (string-ci=? . g$16642$1HvE18) (string-ci<? . g$16641$1HvE18) (string-ci<=? . g$16640$1HvE18) (char-whitespace? . g$16639$1HvE18) (char-upper-case? . g$16638$1HvE18) (char-numeric? . g$16636$1HvE18) (char-lower-case? . g$16635$1HvE18) (char-upcase . g$16633$1HvE18) (char-downcase . g$16630$1HvE18) (char-ci>? . g$16629$1HvE18) (char-ci>=? . g$16628$1HvE18) (char-ci=? . g$16627$1HvE18) (char-ci<? . g$16626$1HvE18) (char-ci<=? . g$16625$1HvE18) (char-alphabetic? . g$16624$1HvE18) (call-with-output-file . g$16594$1HvE18) (call-with-input-file . g$16593$1HvE18) (write-char . g$16592$1HvE18) (write . g$16591$1HvE18) (with-output-to-file . g$16590$1HvE18) (with-input-from-file . g$16589$1HvE18) (read-char . g$16588$1HvE18) (read . g$16587$1HvE18) (peek-char . g$16586$1HvE18) (open-output-file . g$16585$1HvE18) (open-input-file . g$16584$1HvE18) (newline . g$16583$1HvE18) (display . g$16582$1HvE18) (close-output-port . g$16581$1HvE18) (close-input-port . g$16580$1HvE18) (eof-object? . g$16579$1HvE18) (eof-object . g$16578$1HvE18) (current-error-port . g$16577$1HvE18) (current-output-port . g$16576$1HvE18) (current-input-port . g$16575$1HvE18) (output-port? . g$16574$1HvE18) (input-port? . g$16573$1HvE18) (scheme-report-environment . g$10455$1HvE18) (quotient . g$8899$1HvE18) (null-environment . g$10454$1HvE18) (remainder . g$8900$1HvE18) (modulo . g$8901$1HvE18) (inexact->exact . g$16510$1HvE18) (force . g$16509$1HvE18) (exact->inexact . g$16508$1HvE18) (string-fill! . g$16505$1HvE18) (string-set! . g$16504$1HvE18) (set-cdr! . g$16503$1HvE18) (set-car! . g$16502$1HvE18) (memv . g$16499$1HvE18) (memq . g$16498$1HvE18) (member . g$16496$1HvE18) (assv . g$16493$1HvE18) (assq . g$16492$1HvE18) (assoc . g$16490$1HvE18) (eval . g$10457$1HvE18) (zero? . g$16344$1HvE18) (vector? . g$16343$1HvE18) (vector-set! . g$16342$1HvE18) (vector-ref . g$16341$1HvE18) (vector-length . g$16339$1HvE18) (vector-fill! . g$16337$1HvE18) (vector->list . g$16336$1HvE18) (vector . g$16335$1HvE18) (values . g$16334$1HvE18) (truncate . g$16333$1HvE18) (tan . g$16332$1HvE18) (symbol? . g$16331$1HvE18) (symbol->string . g$16329$1HvE18) (substring . g$16328$1HvE18) (string? . g$16327$1HvE18) (string>? . g$16326$1HvE18) (string>=? . g$16325$1HvE18) (string=? . g$16324$1HvE18) (string<? . g$16323$1HvE18) (string<=? . g$16322$1HvE18) (string-ref . g$16321$1HvE18) (string-length . g$16320$1HvE18) (string-copy . g$16318$1HvE18) (string-append . g$16317$1HvE18) (string->symbol . g$16316$1HvE18) (string->number . g$16315$1HvE18) (string->list . g$16314$1HvE18) (string . g$16313$1HvE18) (sqrt . g$16312$1HvE18) (sin . g$16311$1HvE18) (round . g$16310$1HvE18) (reverse . g$16309$1HvE18) (real? . g$16308$1HvE18) (real-part . g$16306$1HvE18) (rationalize . g$8070$1HvE18) (rational? . g$16305$1HvE18) (procedure? . g$16303$1HvE18) (positive? . g$16302$1HvE18) (pair? . g$16301$1HvE18) (odd? . g$16300$1HvE18) (numerator . g$16299$1HvE18) (number? . g$16298$1HvE18) (number->string . g$16297$1HvE18) (null? . g$16296$1HvE18) (not . g$16295$1HvE18) (negative? . g$16294$1HvE18) (min . g$16292$1HvE18) (max . g$16291$1HvE18) (map . g$16290$1HvE18) (make-vector . g$16289$1HvE18) (make-string . g$16288$1HvE18) (make-rectangular . g$16287$1HvE18) (make-polar . g$16286$1HvE18) (magnitude . g$16285$1HvE18) (log . g$16284$1HvE18) (list? . g$16283$1HvE18) (list-tail . g$16282$1HvE18) (list-ref . g$16281$1HvE18) (list->vector . g$16280$1HvE18) (list->string . g$16279$1HvE18) (list . g$16278$1HvE18) (length . g$16277$1HvE18) (lcm . g$16276$1HvE18) (integer? . g$16275$1HvE18) (integer->char . g$16273$1HvE18) (inexact? . g$16271$1HvE18) (imag-part . g$16269$1HvE18) (gcd . g$16268$1HvE18) (for-each . g$16267$1HvE18) (floor . g$16266$1HvE18) (expt . g$16264$1HvE18) (exp . g$16263$1HvE18) (exact? . g$16262$1HvE18) (even? . g$16259$1HvE18) (eqv? . g$16257$1HvE18) (equal? . g$16256$1HvE18) (eq? . g$16255$1HvE18) (dynamic-wind . g$16254$1HvE18) (denominator . g$16247$1HvE18) (cos . g$16246$1HvE18) (cons . g$16245$1HvE18) (complex? . g$16244$1HvE18) (char? . g$16243$1HvE18) (char>? . g$16242$1HvE18) (char>=? . g$16241$1HvE18) (char=? . g$16240$1HvE18) (char<? . g$16239$1HvE18) (char<=? . g$16238$1HvE18) (char->integer . g$16237$1HvE18) (ceiling . g$16236$1HvE18) (call-with-values . g$16235$1HvE18) (call-with-current-continuation . g$16233$1HvE18) (cddddr . g$8069$1HvE18) (cdddar . g$8068$1HvE18) (cddadr . g$8067$1HvE18) (cddaar . g$8066$1HvE18) (cdaddr . g$8065$1HvE18) (cdadar . g$8064$1HvE18) (cdaadr . g$8063$1HvE18) (cdaaar . g$8062$1HvE18) (cadddr . g$8061$1HvE18) (caddar . g$8060$1HvE18) (cadadr . g$8059$1HvE18) (cadaar . g$8058$1HvE18) (caaddr . g$8057$1HvE18) (caadar . g$8056$1HvE18) (caaadr . g$8055$1HvE18) (caaaar . g$8054$1HvE18) (cdddr . g$8053$1HvE18) (cddar . g$8052$1HvE18) (cdadr . g$8051$1HvE18) (cdaar . g$8050$1HvE18) (caddr . g$8049$1HvE18) (cadar . g$8048$1HvE18) (caadr . g$8047$1HvE18) (caaar . g$8046$1HvE18) (cddr . g$8045$1HvE18) (cdar . g$8044$1HvE18) (cadr . g$8043$1HvE18) (caar . g$8042$1HvE18) (cdr . g$16232$1HvE18) (car . g$16231$1HvE18) (boolean? . g$16230$1HvE18) (atan . g$16228$1HvE18) (asin . g$16226$1HvE18) (apply . g$16225$1HvE18) (append . g$16224$1HvE18) (angle . g$16223$1HvE18) (acos . g$16222$1HvE18) (abs . g$16221$1HvE18) (/ . g$16220$1HvE18) (* . g$16219$1HvE18) (- . g$16218$1HvE18) (+ . g$16217$1HvE18) (>= . g$16216$1HvE18) (> . g$16215$1HvE18) (= . g$16214$1HvE18) (<= . g$16213$1HvE18) (< . g$16212$1HvE18) (unquote-splicing . g$16143$1HvE18) (unquote . g$16142$1HvE18) (else . g$16140$1HvE18) (=> . g$16139$1HvE18) (... . g$16138$1HvE18) (delay . g$16135$1HvE18) (or . g$16133$1HvE18) (and . g$16132$1HvE18) (do . g$16131$1HvE18) (cond . g$16130$1HvE18) (let* . g$16129$1HvE18) (let . g$16128$1HvE18) (quasiquote . g$16124$1HvE18) (syntax-rules . g$16123$1HvE18) (case . g$16114$1HvE18) (if . g$16110$1HvE18) (letrec . g$16108$1HvE18) (lambda . g$16105$1HvE18) (quote . g$16102$1HvE18) (letrec-syntax . g$16100$1HvE18) (let-syntax . g$16099$1HvE18) (set! . g$16098$1HvE18) (begin . g$16095$1HvE18) (define-syntax . g$16093$1HvE18) (define . g$16092$1HvE18)) '() values values '#f '#f '#f '#f) (g$install-library$9126$1HvE18 'g$16754$1HvE18 '(rnrs) '(6) '() '() '() '((string-upcase . g$16652$1HvE18) (string-titlecase . g$16651$1HvE18) (string-normalize-nfkd . g$16650$1HvE18) (string-normalize-nfkc . g$16649$1HvE18) (string-normalize-nfd . g$16648$1HvE18) (string-normalize-nfc . g$16647$1HvE18) (string-foldcase . g$16646$1HvE18) (string-downcase . g$16645$1HvE18) (string-ci>? . g$16644$1HvE18) (string-ci>=? . g$16643$1HvE18) (string-ci=? . g$16642$1HvE18) (string-ci<? . g$16641$1HvE18) (string-ci<=? . g$16640$1HvE18) (char-whitespace? . g$16639$1HvE18) (char-upper-case? . g$16638$1HvE18) (char-title-case? . g$16637$1HvE18) (char-numeric? . g$16636$1HvE18) (char-lower-case? . g$16635$1HvE18) (char-general-category . g$16634$1HvE18) (char-upcase . g$16633$1HvE18) (char-titlecase . g$16632$1HvE18) (char-foldcase . g$16631$1HvE18) (char-downcase . g$16630$1HvE18) (char-ci>? . g$16629$1HvE18) (char-ci>=? . g$16628$1HvE18) (char-ci=? . g$16627$1HvE18) (char-ci<? . g$16626$1HvE18) (char-ci<=? . g$16625$1HvE18) (char-alphabetic? . g$16624$1HvE18) (make-variable-transformer . g$10011$1HvE18) (identifier? . g$10472$1HvE18) (generate-temporaries . g$10464$1HvE18) (free-identifier=? . g$10465$1HvE18) (syntax->datum . g$10474$1HvE18) (datum->syntax . g$10473$1HvE18) (bound-identifier=? . g$10466$1HvE18) (record-type-descriptor? . g$16623$1HvE18) (record-predicate . g$16622$1HvE18) (record-mutator . g$16621$1HvE18) (record-constructor . g$16620$1HvE18) (record-accessor . g$16619$1HvE18) (make-record-type-descriptor . g$16618$1HvE18) (make-record-constructor-descriptor . g$16617$1HvE18) (record? . g$16616$1HvE18) (record-type-uid . g$16615$1HvE18) (record-type-sealed? . g$16614$1HvE18) (record-type-parent . g$16613$1HvE18) (record-type-opaque? . g$16612$1HvE18) (record-type-name . g$16611$1HvE18) (record-type-generative? . g$16610$1HvE18) (record-type-field-names . g$16609$1HvE18) (record-rtd . g$16608$1HvE18) (record-field-mutable? . g$16607$1HvE18) (delete-file . g$8455$1HvE18) (file-exists? . g$8454$1HvE18) (vector-sort! . g$16606$1HvE18) (vector-sort . g$16605$1HvE18) (list-sort . g$8912$1HvE18) (symbol-hash . g$16604$1HvE18) (string-ci-hash . g$16603$1HvE18) (string-hash . g$16602$1HvE18) (equal-hash . g$16601$1HvE18) (hashtable-equivalence-function . g$8428$1HvE18) (make-hashtable . g$16600$1HvE18) (hashtable-hash-function . g$8429$1HvE18) (make-eqv-hashtable . g$8420$1HvE18) (make-eq-hashtable . g$8419$1HvE18) (hashtable? . g$16599$1HvE18) (hashtable-update! . g$8426$1HvE18) (hashtable-size . g$8421$1HvE18) (hashtable-set! . g$8423$1HvE18) (hashtable-ref . g$8422$1HvE18) (hashtable-mutable? . g$16598$1HvE18) (hashtable-keys . g$16597$1HvE18) (hashtable-entries . g$16596$1HvE18) (hashtable-delete! . g$8424$1HvE18) (hashtable-copy . g$16595$1HvE18) (hashtable-contains? . g$8425$1HvE18) (hashtable-clear! . g$8427$1HvE18) (call-with-output-file . g$16594$1HvE18) (call-with-input-file . g$16593$1HvE18) (write-char . g$16592$1HvE18) (write . g$16591$1HvE18) (with-output-to-file . g$16590$1HvE18) (with-input-from-file . g$16589$1HvE18) (read-char . g$16588$1HvE18) (read . g$16587$1HvE18) (peek-char . g$16586$1HvE18) (open-output-file . g$16585$1HvE18) (open-input-file . g$16584$1HvE18) (newline . g$16583$1HvE18) (display . g$16582$1HvE18) (close-output-port . g$16581$1HvE18) (close-input-port . g$16580$1HvE18) (eof-object? . g$16579$1HvE18) (eof-object . g$16578$1HvE18) (current-error-port . g$16577$1HvE18) (current-output-port . g$16576$1HvE18) (current-input-port . g$16575$1HvE18) (output-port? . g$16574$1HvE18) (input-port? . g$16573$1HvE18) (utf-8-codec . g$16572$1HvE18) (utf-16-codec . g$16571$1HvE18) (transcoder-error-handling-mode . g$16570$1HvE18) (transcoder-eol-style . g$16569$1HvE18) (transcoder-codec . g$16568$1HvE18) (transcoded-port . g$16567$1HvE18) (textual-port? . g$16566$1HvE18) (string->bytevector . g$16565$1HvE18) (standard-output-port . g$16564$1HvE18) (standard-input-port . g$16563$1HvE18) (standard-error-port . g$16562$1HvE18) (set-port-position! . g$16561$1HvE18) (put-u8 . g$16560$1HvE18) (put-string . g$16559$1HvE18) (put-datum . g$16558$1HvE18) (put-char . g$16557$1HvE18) (put-bytevector . g$16556$1HvE18) (port? . g$16555$1HvE18) (port-transcoder . g$16554$1HvE18) (port-position . g$16553$1HvE18) (port-has-set-port-position!? . g$16552$1HvE18) (port-has-port-position? . g$16551$1HvE18) (port-eof? . g$16550$1HvE18) (output-port-buffer-mode . g$16549$1HvE18) (open-string-output-port . g$9303$1HvE18) (open-string-input-port . g$16548$1HvE18) (open-file-output-port . g$16547$1HvE18) (open-file-input/output-port . g$16546$1HvE18) (open-file-input-port . g$16545$1HvE18) (open-bytevector-output-port . g$16544$1HvE18) (open-bytevector-input-port . g$16543$1HvE18) (native-transcoder . g$16542$1HvE18) (native-eol-style . g$16541$1HvE18) (make-transcoder . g$16540$1HvE18) (latin-1-codec . g$16539$1HvE18) (make-i/o-write-error . g$9160$1HvE18) (make-i/o-read-error . g$9146$1HvE18) (make-i/o-port-error . g$9265$1HvE18) (make-i/o-invalid-position-error . g$9175$1HvE18) (make-i/o-filename-error . g$9192$1HvE18) (make-i/o-file-protection-error . g$9208$1HvE18) (make-i/o-file-is-read-only-error . g$9222$1HvE18) (make-i/o-file-does-not-exist-error . g$9250$1HvE18) (make-i/o-file-already-exists-error . g$9236$1HvE18) (make-i/o-error . g$9132$1HvE18) (make-i/o-encoding-error . g$9296$1HvE18) (make-i/o-decoding-error . g$9281$1HvE18) (make-custom-textual-output-port . g$16538$1HvE18) (make-custom-textual-input/output-port . g$16537$1HvE18) (make-custom-textual-input-port . g$16536$1HvE18) (make-custom-binary-output-port . g$16535$1HvE18) (make-custom-binary-input/output-port . g$16534$1HvE18) (make-custom-binary-input-port . g$16533$1HvE18) (make-bytevector . g$16532$1HvE18) (lookahead-u8 . g$16531$1HvE18) (lookahead-char . g$16530$1HvE18) (i/o-write-error? . g$9161$1HvE18) (i/o-read-error? . g$9147$1HvE18) (i/o-port-error? . g$9267$1HvE18) (i/o-invalid-position-error? . g$9177$1HvE18) (i/o-filename-error? . g$9194$1HvE18) (i/o-file-protection-error? . g$9209$1HvE18) (i/o-file-is-read-only-error? . g$9223$1HvE18) (i/o-file-does-not-exist-error? . g$9251$1HvE18) (i/o-file-already-exists-error? . g$9237$1HvE18) (i/o-error? . g$9133$1HvE18) (i/o-error-port . g$9268$1HvE18) (i/o-error-filename . g$9195$1HvE18) (i/o-encoding-error? . g$9298$1HvE18) (i/o-encoding-error-char . g$9299$1HvE18) (i/o-decoding-error? . g$9282$1HvE18) (get-u8 . g$16529$1HvE18) (get-string-n! . g$16528$1HvE18) (get-string-n . g$16527$1HvE18) (get-string-all . g$16526$1HvE18) (get-line . g$16525$1HvE18) (get-datum . g$16524$1HvE18) (get-char . g$16523$1HvE18) (get-bytevector-some . g$16522$1HvE18) (get-bytevector-n! . g$16521$1HvE18) (get-bytevector-n . g$16520$1HvE18) (get-bytevector-all . g$16519$1HvE18) (flush-output-port . g$16518$1HvE18) (close-port . g$16517$1HvE18) (call-with-string-output-port . g$16516$1HvE18) (call-with-port . g$16515$1HvE18) (call-with-bytevector-output-port . g$16514$1HvE18) (bytevector->string . g$16513$1HvE18) (buffer-mode? . g$16512$1HvE18) (binary-port? . g$16511$1HvE18) (exit . g$16507$1HvE18) (command-line . g$16506$1HvE18) (remove . g$8526$1HvE18) (remv . g$8527$1HvE18) (remp . g$16501$1HvE18) (remq . g$8528$1HvE18) (partition . g$16500$1HvE18) (memv . g$16499$1HvE18) (memq . g$16498$1HvE18) (memp . g$16497$1HvE18) (member . g$16496$1HvE18) (exists . g$8522$1HvE18) (for-all . g$8521$1HvE18) (fold-right . g$8525$1HvE18) (fold-left . g$8524$1HvE18) (find . g$16495$1HvE18) (filter . g$16494$1HvE18) (cons* . g$8523$1HvE18) (assv . g$16493$1HvE18) (assq . g$16492$1HvE18) (assp . g$16491$1HvE18) (assoc . g$16490$1HvE18) (with-exception-handler . g$16489$1HvE18) (raise-continuable . g$16488$1HvE18) (raise . g$16487$1HvE18) (make-enumeration . g$16486$1HvE18) (enum-set=? . g$16485$1HvE18) (enum-set-universe . g$16484$1HvE18) (enum-set-union . g$16483$1HvE18) (enum-set-subset? . g$16482$1HvE18) (enum-set-projection . g$16481$1HvE18) (enum-set-member? . g$16480$1HvE18) (enum-set-intersection . g$16479$1HvE18) (enum-set-indexer . g$16478$1HvE18) (enum-set-difference . g$16477$1HvE18) (enum-set-constructor . g$16476$1HvE18) (enum-set-complement . g$16475$1HvE18) (enum-set->list . g$16474$1HvE18) (who-condition? . g$8816$1HvE18) (warning? . g$8727$1HvE18) (violation? . g$8769$1HvE18) (undefined-violation? . g$8893$1HvE18) (syntax-violation? . g$8877$1HvE18) (syntax-violation-subform . g$8879$1HvE18) (syntax-violation-form . g$8878$1HvE18) (syntax-violation . g$10471$1HvE18) (simple-conditions . g$16473$1HvE18) (serious-condition? . g$8741$1HvE18) (non-continuable-violation? . g$8831$1HvE18) (message-condition? . g$8712$1HvE18) (make-who-condition . g$8814$1HvE18) (make-warning . g$8726$1HvE18) (make-violation . g$8768$1HvE18) (make-undefined-violation . g$8892$1HvE18) (make-syntax-violation . g$8874$1HvE18) (make-serious-condition . g$8740$1HvE18) (make-non-continuable-violation . g$8830$1HvE18) (make-message-condition . g$8710$1HvE18) (make-lexical-violation . g$8858$1HvE18) (make-irritants-condition . g$8797$1HvE18) (make-implementation-restriction-violation . g$8844$1HvE18) (make-error . g$8754$1HvE18) (make-assertion-violation . g$8782$1HvE18) (lexical-violation? . g$8859$1HvE18) (irritants-condition? . g$8799$1HvE18) (implementation-restriction-violation? . g$8845$1HvE18) (error? . g$8755$1HvE18) (condition-who . g$8817$1HvE18) (condition-predicate . g$16472$1HvE18) (condition-message . g$8713$1HvE18) (condition-irritants . g$8800$1HvE18) (condition-accessor . g$16471$1HvE18) (condition . g$16470$1HvE18) (assertion-violation? . g$8783$1HvE18) (condition? . g$16469$1HvE18) (utf32->string . g$16468$1HvE18) (utf16->string . g$16467$1HvE18) (utf8->string . g$16466$1HvE18) (uint-list->bytevector . g$16465$1HvE18) (u8-list->bytevector . g$16464$1HvE18) (string->utf8 . g$16463$1HvE18) (string->utf32 . g$16462$1HvE18) (string->utf16 . g$16461$1HvE18) (sint-list->bytevector . g$16460$1HvE18) (native-endianness . g$8567$1HvE18) (bytevector? . g$16459$1HvE18) (bytevector=? . g$16458$1HvE18) (bytevector-uint-set! . g$16457$1HvE18) (bytevector-uint-ref . g$16456$1HvE18) (bytevector-u8-set! . g$16455$1HvE18) (bytevector-u8-ref . g$16454$1HvE18) (bytevector-u64-set! . g$8588$1HvE18) (bytevector-u64-ref . g$8584$1HvE18) (bytevector-u64-native-set! . g$8590$1HvE18) (bytevector-u64-native-ref . g$8586$1HvE18) (bytevector-u32-set! . g$8580$1HvE18) (bytevector-u32-ref . g$8576$1HvE18) (bytevector-u32-native-set! . g$8582$1HvE18) (bytevector-u32-native-ref . g$8578$1HvE18) (bytevector-u16-set! . g$8572$1HvE18) (bytevector-u16-ref . g$8568$1HvE18) (bytevector-u16-native-set! . g$8574$1HvE18) (bytevector-u16-native-ref . g$8570$1HvE18) (bytevector-sint-set! . g$16453$1HvE18) (bytevector-sint-ref . g$16452$1HvE18) (bytevector-s8-set! . g$16451$1HvE18) (bytevector-s8-ref . g$16450$1HvE18) (bytevector-s64-set! . g$8589$1HvE18) (bytevector-s64-ref . g$8585$1HvE18) (bytevector-s64-native-set! . g$8591$1HvE18) (bytevector-s64-native-ref . g$8587$1HvE18) (bytevector-s32-set! . g$8581$1HvE18) (bytevector-s32-ref . g$8577$1HvE18) (bytevector-s32-native-set! . g$8583$1HvE18) (bytevector-s32-native-ref . g$8579$1HvE18) (bytevector-s16-set! . g$8573$1HvE18) (bytevector-s16-ref . g$8569$1HvE18) (bytevector-s16-native-set! . g$8575$1HvE18) (bytevector-s16-native-ref . g$8571$1HvE18) (bytevector-length . g$16449$1HvE18) (bytevector-ieee-single-set! . g$16448$1HvE18) (bytevector-ieee-single-ref . g$16447$1HvE18) (bytevector-ieee-single-native-set! . g$8594$1HvE18) (bytevector-ieee-single-native-ref . g$8592$1HvE18) (bytevector-ieee-double-set! . g$16446$1HvE18) (bytevector-ieee-double-ref . g$16445$1HvE18) (bytevector-ieee-double-native-set! . g$8595$1HvE18) (bytevector-ieee-double-native-ref . g$8593$1HvE18) (bytevector-fill! . g$16444$1HvE18) (bytevector-copy! . g$16443$1HvE18) (bytevector-copy . g$16442$1HvE18) (bytevector->uint-list . g$16441$1HvE18) (bytevector->u8-list . g$16440$1HvE18) (bytevector->sint-list . g$16439$1HvE18) (no-nans-violation? . g$9118$1HvE18) (no-infinities-violation? . g$9104$1HvE18) (make-no-nans-violation . g$9117$1HvE18) (make-no-infinities-violation . g$9103$1HvE18) (real->flonum . g$16438$1HvE18) (flzero? . g$16437$1HvE18) (fltruncate . g$16436$1HvE18) (fltan . g$16435$1HvE18) (flsqrt . g$16434$1HvE18) (flsin . g$16433$1HvE18) (flround . g$16432$1HvE18) (flpositive? . g$16431$1HvE18) (flonum? . g$16430$1HvE18) (flodd? . g$16429$1HvE18) (flnumerator . g$16428$1HvE18) (flnegative? . g$16427$1HvE18) (flnan? . g$16426$1HvE18) (flmod0 . g$16425$1HvE18) (flmod . g$16424$1HvE18) (flmin . g$16423$1HvE18) (flmax . g$16422$1HvE18) (fllog . g$16421$1HvE18) (flinteger? . g$16420$1HvE18) (flinfinite? . g$16419$1HvE18) (flfloor . g$16418$1HvE18) (flfinite? . g$16417$1HvE18) (flexpt . g$16416$1HvE18) (flexp . g$16415$1HvE18) (fleven? . g$16414$1HvE18) (fldiv0-and-mod0 . g$16413$1HvE18) (fldiv0 . g$16412$1HvE18) (fldiv-and-mod . g$16411$1HvE18) (fldiv . g$16410$1HvE18) (fldenominator . g$16409$1HvE18) (flcos . g$16408$1HvE18) (flceiling . g$16407$1HvE18) (flatan . g$16406$1HvE18) (flasin . g$16405$1HvE18) (flacos . g$16404$1HvE18) (flabs . g$16403$1HvE18) (fl>? . g$16402$1HvE18) (fl>=? . g$16401$1HvE18) (fl=? . g$16400$1HvE18) (fl<? . g$16399$1HvE18) (fl<=? . g$16398$1HvE18) (fl/ . g$16397$1HvE18) (fl- . g$16396$1HvE18) (fl+ . g$16395$1HvE18) (fl* . g$16394$1HvE18) (fixnum->flonum . g$16393$1HvE18) (fxzero? . g$16392$1HvE18) (fxxor . g$16391$1HvE18) (fxrotate-bit-field . g$9049$1HvE18) (fxreverse-bit-field . g$16390$1HvE18) (fxpositive? . g$16389$1HvE18) (fxodd? . g$16388$1HvE18) (fxnot . g$16387$1HvE18) (fxnegative? . g$16386$1HvE18) (fxmod0 . g$16385$1HvE18) (fxmod . g$16384$1HvE18) (fxmin . g$16383$1HvE18) (fxmax . g$16382$1HvE18) (fxlength . g$16381$1HvE18) (fxior . g$16380$1HvE18) (fxif . g$9043$1HvE18) (fxfirst-bit-set . g$16379$1HvE18) (fxeven? . g$16378$1HvE18) (fxdiv0-and-mod0 . g$16377$1HvE18) (fxdiv0 . g$16376$1HvE18) (fxdiv-and-mod . g$16375$1HvE18) (fxdiv . g$16374$1HvE18) (fxcopy-bit-field . g$9046$1HvE18) (fxcopy-bit . g$9044$1HvE18) (fxbit-set? . g$16373$1HvE18) (fxbit-field . g$9045$1HvE18) (fxbit-count . g$16372$1HvE18) (fxarithmetic-shift-right . g$9048$1HvE18) (fxarithmetic-shift-left . g$9047$1HvE18) (fxarithmetic-shift . g$16371$1HvE18) (fxand . g$16370$1HvE18) (fx>? . g$16369$1HvE18) (fx>=? . g$16368$1HvE18) (fx=? . g$16367$1HvE18) (fx<? . g$16366$1HvE18) (fx<=? . g$16365$1HvE18) (fx-/carry . g$16364$1HvE18) (fx- . g$16363$1HvE18) (fx+/carry . g$16362$1HvE18) (fx+ . g$16361$1HvE18) (fx*/carry . g$16360$1HvE18) (fx* . g$16359$1HvE18) (greatest-fixnum . g$16358$1HvE18) (least-fixnum . g$16357$1HvE18) (fixnum-width . g$16356$1HvE18) (fixnum? . g$16355$1HvE18) (bitwise-rotate-bit-field . g$8997$1HvE18) (bitwise-reverse-bit-field . g$8998$1HvE18) (bitwise-length . g$16354$1HvE18) (bitwise-if . g$8991$1HvE18) (bitwise-first-bit-set . g$16353$1HvE18) (bitwise-copy-bit-field . g$8994$1HvE18) (bitwise-copy-bit . g$8992$1HvE18) (bitwise-bit-set? . g$16352$1HvE18) (bitwise-bit-field . g$16351$1HvE18) (bitwise-bit-count . g$16350$1HvE18) (bitwise-xor . g$16349$1HvE18) (bitwise-ior . g$16348$1HvE18) (bitwise-and . g$16347$1HvE18) (bitwise-not . g$16346$1HvE18) (bitwise-arithmetic-shift-right . g$8996$1HvE18) (bitwise-arithmetic-shift-left . g$8995$1HvE18) (bitwise-arithmetic-shift . g$16345$1HvE18) (zero? . g$16344$1HvE18) (vector? . g$16343$1HvE18) (vector-set! . g$16342$1HvE18) (vector-ref . g$16341$1HvE18) (vector-map . g$16340$1HvE18) (vector-length . g$16339$1HvE18) (vector-for-each . g$16338$1HvE18) (vector-fill! . g$16337$1HvE18) (vector->list . g$16336$1HvE18) (vector . g$16335$1HvE18) (values . g$16334$1HvE18) (truncate . g$16333$1HvE18) (tan . g$16332$1HvE18) (symbol? . g$16331$1HvE18) (symbol=? . g$16330$1HvE18) (symbol->string . g$16329$1HvE18) (substring . g$16328$1HvE18) (string? . g$16327$1HvE18) (string>? . g$16326$1HvE18) (string>=? . g$16325$1HvE18) (string=? . g$16324$1HvE18) (string<? . g$16323$1HvE18) (string<=? . g$16322$1HvE18) (string-ref . g$16321$1HvE18) (string-length . g$16320$1HvE18) (string-for-each . g$16319$1HvE18) (string-copy . g$16318$1HvE18) (string-append . g$16317$1HvE18) (string->symbol . g$16316$1HvE18) (string->number . g$16315$1HvE18) (string->list . g$16314$1HvE18) (string . g$16313$1HvE18) (sqrt . g$16312$1HvE18) (sin . g$16311$1HvE18) (round . g$16310$1HvE18) (reverse . g$16309$1HvE18) (real? . g$16308$1HvE18) (real-valued? . g$16307$1HvE18) (real-part . g$16306$1HvE18) (rationalize . g$8070$1HvE18) (rational? . g$16305$1HvE18) (rational-valued? . g$16304$1HvE18) (procedure? . g$16303$1HvE18) (positive? . g$16302$1HvE18) (pair? . g$16301$1HvE18) (odd? . g$16300$1HvE18) (numerator . g$16299$1HvE18) (number? . g$16298$1HvE18) (number->string . g$16297$1HvE18) (null? . g$16296$1HvE18) (not . g$16295$1HvE18) (negative? . g$16294$1HvE18) (nan? . g$16293$1HvE18) (min . g$16292$1HvE18) (max . g$16291$1HvE18) (map . g$16290$1HvE18) (make-vector . g$16289$1HvE18) (make-string . g$16288$1HvE18) (make-rectangular . g$16287$1HvE18) (make-polar . g$16286$1HvE18) (magnitude . g$16285$1HvE18) (log . g$16284$1HvE18) (list? . g$16283$1HvE18) (list-tail . g$16282$1HvE18) (list-ref . g$16281$1HvE18) (list->vector . g$16280$1HvE18) (list->string . g$16279$1HvE18) (list . g$16278$1HvE18) (length . g$16277$1HvE18) (lcm . g$16276$1HvE18) (integer? . g$16275$1HvE18) (integer-valued? . g$16274$1HvE18) (integer->char . g$16273$1HvE18) (infinite? . g$16272$1HvE18) (inexact? . g$16271$1HvE18) (inexact . g$16270$1HvE18) (imag-part . g$16269$1HvE18) (gcd . g$16268$1HvE18) (for-each . g$16267$1HvE18) (floor . g$16266$1HvE18) (finite? . g$16265$1HvE18) (expt . g$16264$1HvE18) (exp . g$16263$1HvE18) (exact? . g$16262$1HvE18) (exact-integer-sqrt . g$16261$1HvE18) (exact . g$16260$1HvE18) (even? . g$16259$1HvE18) (error . g$16258$1HvE18) (eqv? . g$16257$1HvE18) (equal? . g$16256$1HvE18) (eq? . g$16255$1HvE18) (dynamic-wind . g$16254$1HvE18) (div0-and-mod0 . g$16253$1HvE18) (mod0 . g$16252$1HvE18) (div0 . g$16251$1HvE18) (div-and-mod . g$16250$1HvE18) (mod . g$16249$1HvE18) (div . g$16248$1HvE18) (denominator . g$16247$1HvE18) (cos . g$16246$1HvE18) (cons . g$16245$1HvE18) (complex? . g$16244$1HvE18) (char? . g$16243$1HvE18) (char>? . g$16242$1HvE18) (char>=? . g$16241$1HvE18) (char=? . g$16240$1HvE18) (char<? . g$16239$1HvE18) (char<=? . g$16238$1HvE18) (char->integer . g$16237$1HvE18) (ceiling . g$16236$1HvE18) (call-with-values . g$16235$1HvE18) (call/cc . g$16234$1HvE18) (call-with-current-continuation . g$16233$1HvE18) (cddddr . g$8069$1HvE18) (cdddar . g$8068$1HvE18) (cddadr . g$8067$1HvE18) (cddaar . g$8066$1HvE18) (cdaddr . g$8065$1HvE18) (cdadar . g$8064$1HvE18) (cdaadr . g$8063$1HvE18) (cdaaar . g$8062$1HvE18) (cadddr . g$8061$1HvE18) (caddar . g$8060$1HvE18) (cadadr . g$8059$1HvE18) (cadaar . g$8058$1HvE18) (caaddr . g$8057$1HvE18) (caadar . g$8056$1HvE18) (caaadr . g$8055$1HvE18) (caaaar . g$8054$1HvE18) (cdddr . g$8053$1HvE18) (cddar . g$8052$1HvE18) (cdadr . g$8051$1HvE18) (cdaar . g$8050$1HvE18) (caddr . g$8049$1HvE18) (cadar . g$8048$1HvE18) (caadr . g$8047$1HvE18) (caaar . g$8046$1HvE18) (cddr . g$8045$1HvE18) (cdar . g$8044$1HvE18) (cadr . g$8043$1HvE18) (caar . g$8042$1HvE18) (cdr . g$16232$1HvE18) (car . g$16231$1HvE18) (boolean? . g$16230$1HvE18) (boolean=? . g$16229$1HvE18) (atan . g$16228$1HvE18) (assertion-violation . g$16227$1HvE18) (asin . g$16226$1HvE18) (apply . g$16225$1HvE18) (append . g$16224$1HvE18) (angle . g$16223$1HvE18) (acos . g$16222$1HvE18) (abs . g$16221$1HvE18) (/ . g$16220$1HvE18) (* . g$16219$1HvE18) (- . g$16218$1HvE18) (+ . g$16217$1HvE18) (>= . g$16216$1HvE18) (> . g$16215$1HvE18) (= . g$16214$1HvE18) (<= . g$16213$1HvE18) (< . g$16212$1HvE18) (&no-nans . g$16194$1HvE18) (&no-infinities . g$16193$1HvE18) (&i/o-encoding . g$16192$1HvE18) (&i/o-decoding . g$16191$1HvE18) (&i/o-port . g$16190$1HvE18) (&i/o-file-does-not-exist . g$16189$1HvE18) (&i/o-file-already-exists . g$16188$1HvE18) (&i/o-file-is-read-only . g$16187$1HvE18) (&i/o-file-protection . g$16186$1HvE18) (&i/o-filename . g$16185$1HvE18) (&i/o-invalid-position . g$16184$1HvE18) (&i/o-write . g$16183$1HvE18) (&i/o-read . g$16182$1HvE18) (&i/o . g$16181$1HvE18) (&non-continuable . g$16180$1HvE18) (&undefined . g$16179$1HvE18) (&syntax . g$16178$1HvE18) (&lexical . g$16177$1HvE18) (&implementation-restriction . g$16176$1HvE18) (&who . g$16174$1HvE18) (&irritants . g$16173$1HvE18) (&assertion . g$16172$1HvE18) (&violation . g$16171$1HvE18) (&error . g$16170$1HvE18) (&serious . g$16169$1HvE18) (&warning . g$16168$1HvE18) (&message . g$16167$1HvE18) (&condition . g$16166$1HvE18) (define-condition-type . g$16165$1HvE18) (define-enumeration . g$16164$1HvE18) (define-record-type . g$16163$1HvE18) (parent-rtd . g$16162$1HvE18) (nongenerative . g$16161$1HvE18) (opaque . g$16160$1HvE18) (sealed . g$16159$1HvE18) (protocol . g$16158$1HvE18) (parent . g$16157$1HvE18) (immutable . g$16156$1HvE18) (mutable . g$16155$1HvE18) (fields . g$16154$1HvE18) (error-handling-mode . g$16153$1HvE18) (file-options . g$16152$1HvE18) (buffer-mode . g$16151$1HvE18) (eol-style . g$16150$1HvE18) (guard . g$16149$1HvE18) (unsyntax-splicing . g$16145$1HvE18) (unsyntax . g$16144$1HvE18) (unquote-splicing . g$16143$1HvE18) (unquote . g$16142$1HvE18) (_ . g$16141$1HvE18) (else . g$16140$1HvE18) (=> . g$16139$1HvE18) (... . g$16138$1HvE18) (assert . g$16137$1HvE18) (endianness . g$16136$1HvE18) (or . g$16133$1HvE18) (and . g$16132$1HvE18) (do . g$16131$1HvE18) (cond . g$16130$1HvE18) (let* . g$16129$1HvE18) (let . g$16128$1HvE18) (identifier-syntax . g$16127$1HvE18) (with-syntax . g$16126$1HvE18) (quasisyntax . g$16125$1HvE18) (quasiquote . g$16124$1HvE18) (syntax-rules . g$16123$1HvE18) (let-values . g$16119$1HvE18) (let*-values . g$16118$1HvE18) (record-constructor-descriptor . g$16117$1HvE18) (record-type-descriptor . g$16116$1HvE18) (case . g$16114$1HvE18) (unless . g$16112$1HvE18) (when . g$16111$1HvE18) (if . g$16110$1HvE18) (letrec* . g$16109$1HvE18) (letrec . g$16108$1HvE18) (case-lambda . g$16106$1HvE18) (lambda . g$16105$1HvE18) (syntax . g$16104$1HvE18) (syntax-case . g$16103$1HvE18) (quote . g$16102$1HvE18) (letrec-syntax . g$16100$1HvE18) (let-syntax . g$16099$1HvE18) (set! . g$16098$1HvE18) (import . g$16097$1HvE18) (library . g$16096$1HvE18) (begin . g$16095$1HvE18) (define-syntax . g$16093$1HvE18) (define . g$16092$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16755$1HvE18 '(rnrs r5rs) '(6) '() '() '() '((interaction-environment . g$10476$1HvE18) (scheme-report-environment . g$10455$1HvE18) (quotient . g$8899$1HvE18) (null-environment . g$10454$1HvE18) (remainder . g$8900$1HvE18) (modulo . g$8901$1HvE18) (inexact->exact . g$16510$1HvE18) (force . g$16509$1HvE18) (exact->inexact . g$16508$1HvE18) (delay . g$16135$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16756$1HvE18 '(rnrs control) '(6) '() '() '() '((do . g$16131$1HvE18) (unless . g$16112$1HvE18) (when . g$16111$1HvE18) (case-lambda . g$16106$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16757$1HvE18 '(rnrs eval) '(6) '() '() '() '((eval . g$10457$1HvE18) (environment . g$10453$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16758$1HvE18 '(rnrs mutable-pairs) '(6) '() '() '() '((set-cdr! . g$16503$1HvE18) (set-car! . g$16502$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16759$1HvE18 '(rnrs mutable-strings) '(6) '() '() '() '((string-fill! . g$16505$1HvE18) (string-set! . g$16504$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16760$1HvE18 '(rnrs programs) '(6) '() '() '() '((exit . g$16507$1HvE18) (command-line . g$16506$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16761$1HvE18 '(rnrs syntax-case) '(6) '() '() '() '((make-variable-transformer . g$10011$1HvE18) (identifier? . g$10472$1HvE18) (generate-temporaries . g$10464$1HvE18) (free-identifier=? . g$10465$1HvE18) (syntax->datum . g$10474$1HvE18) (datum->syntax . g$10473$1HvE18) (bound-identifier=? . g$10466$1HvE18) (syntax-violation . g$10471$1HvE18) (unsyntax-splicing . g$16145$1HvE18) (unsyntax . g$16144$1HvE18) (_ . g$16141$1HvE18) (... . g$16138$1HvE18) (with-syntax . g$16126$1HvE18) (quasisyntax . g$16125$1HvE18) (syntax . g$16104$1HvE18) (syntax-case . g$16103$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16762$1HvE18 '(rnrs files) '(6) '() '() '() '((delete-file . g$8455$1HvE18) (file-exists? . g$8454$1HvE18) (make-i/o-write-error . g$9160$1HvE18) (make-i/o-read-error . g$9146$1HvE18) (make-i/o-port-error . g$9265$1HvE18) (make-i/o-invalid-position-error . g$9175$1HvE18) (make-i/o-filename-error . g$9192$1HvE18) (make-i/o-file-protection-error . g$9208$1HvE18) (make-i/o-file-is-read-only-error . g$9222$1HvE18) (make-i/o-file-does-not-exist-error . g$9250$1HvE18) (make-i/o-file-already-exists-error . g$9236$1HvE18) (make-i/o-error . g$9132$1HvE18) (i/o-write-error? . g$9161$1HvE18) (i/o-read-error? . g$9147$1HvE18) (i/o-port-error? . g$9267$1HvE18) (i/o-invalid-position-error? . g$9177$1HvE18) (i/o-filename-error? . g$9194$1HvE18) (i/o-file-protection-error? . g$9209$1HvE18) (i/o-file-is-read-only-error? . g$9223$1HvE18) (i/o-file-does-not-exist-error? . g$9251$1HvE18) (i/o-file-already-exists-error? . g$9237$1HvE18) (i/o-error? . g$9133$1HvE18) (i/o-error-port . g$9268$1HvE18) (i/o-error-filename . g$9195$1HvE18) (&i/o-port . g$16190$1HvE18) (&i/o-file-does-not-exist . g$16189$1HvE18) (&i/o-file-already-exists . g$16188$1HvE18) (&i/o-file-is-read-only . g$16187$1HvE18) (&i/o-file-protection . g$16186$1HvE18) (&i/o-filename . g$16185$1HvE18) (&i/o-invalid-position . g$16184$1HvE18) (&i/o-write . g$16183$1HvE18) (&i/o-read . g$16182$1HvE18) (&i/o . g$16181$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16763$1HvE18 '(rnrs sorting) '(6) '() '() '() '((vector-sort! . g$16606$1HvE18) (vector-sort . g$16605$1HvE18) (list-sort . g$8912$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16764$1HvE18 '(rnrs base) '(6) '() '() '() '((zero? . g$16344$1HvE18) (vector? . g$16343$1HvE18) (vector-set! . g$16342$1HvE18) (vector-ref . g$16341$1HvE18) (vector-map . g$16340$1HvE18) (vector-length . g$16339$1HvE18) (vector-for-each . g$16338$1HvE18) (vector-fill! . g$16337$1HvE18) (vector->list . g$16336$1HvE18) (vector . g$16335$1HvE18) (values . g$16334$1HvE18) (truncate . g$16333$1HvE18) (tan . g$16332$1HvE18) (symbol? . g$16331$1HvE18) (symbol=? . g$16330$1HvE18) (symbol->string . g$16329$1HvE18) (substring . g$16328$1HvE18) (string? . g$16327$1HvE18) (string>? . g$16326$1HvE18) (string>=? . g$16325$1HvE18) (string=? . g$16324$1HvE18) (string<? . g$16323$1HvE18) (string<=? . g$16322$1HvE18) (string-ref . g$16321$1HvE18) (string-length . g$16320$1HvE18) (string-for-each . g$16319$1HvE18) (string-copy . g$16318$1HvE18) (string-append . g$16317$1HvE18) (string->symbol . g$16316$1HvE18) (string->number . g$16315$1HvE18) (string->list . g$16314$1HvE18) (string . g$16313$1HvE18) (sqrt . g$16312$1HvE18) (sin . g$16311$1HvE18) (round . g$16310$1HvE18) (reverse . g$16309$1HvE18) (real? . g$16308$1HvE18) (real-valued? . g$16307$1HvE18) (real-part . g$16306$1HvE18) (rationalize . g$8070$1HvE18) (rational? . g$16305$1HvE18) (rational-valued? . g$16304$1HvE18) (procedure? . g$16303$1HvE18) (positive? . g$16302$1HvE18) (pair? . g$16301$1HvE18) (odd? . g$16300$1HvE18) (numerator . g$16299$1HvE18) (number? . g$16298$1HvE18) (number->string . g$16297$1HvE18) (null? . g$16296$1HvE18) (not . g$16295$1HvE18) (negative? . g$16294$1HvE18) (nan? . g$16293$1HvE18) (min . g$16292$1HvE18) (max . g$16291$1HvE18) (map . g$16290$1HvE18) (make-vector . g$16289$1HvE18) (make-string . g$16288$1HvE18) (make-rectangular . g$16287$1HvE18) (make-polar . g$16286$1HvE18) (magnitude . g$16285$1HvE18) (log . g$16284$1HvE18) (list? . g$16283$1HvE18) (list-tail . g$16282$1HvE18) (list-ref . g$16281$1HvE18) (list->vector . g$16280$1HvE18) (list->string . g$16279$1HvE18) (list . g$16278$1HvE18) (length . g$16277$1HvE18) (lcm . g$16276$1HvE18) (integer? . g$16275$1HvE18) (integer-valued? . g$16274$1HvE18) (integer->char . g$16273$1HvE18) (infinite? . g$16272$1HvE18) (inexact? . g$16271$1HvE18) (inexact . g$16270$1HvE18) (imag-part . g$16269$1HvE18) (gcd . g$16268$1HvE18) (for-each . g$16267$1HvE18) (floor . g$16266$1HvE18) (finite? . g$16265$1HvE18) (expt . g$16264$1HvE18) (exp . g$16263$1HvE18) (exact? . g$16262$1HvE18) (exact-integer-sqrt . g$16261$1HvE18) (exact . g$16260$1HvE18) (even? . g$16259$1HvE18) (error . g$16258$1HvE18) (eqv? . g$16257$1HvE18) (equal? . g$16256$1HvE18) (eq? . g$16255$1HvE18) (dynamic-wind . g$16254$1HvE18) (div0-and-mod0 . g$16253$1HvE18) (mod0 . g$16252$1HvE18) (div0 . g$16251$1HvE18) (div-and-mod . g$16250$1HvE18) (mod . g$16249$1HvE18) (div . g$16248$1HvE18) (denominator . g$16247$1HvE18) (cos . g$16246$1HvE18) (cons . g$16245$1HvE18) (complex? . g$16244$1HvE18) (char? . g$16243$1HvE18) (char>? . g$16242$1HvE18) (char>=? . g$16241$1HvE18) (char=? . g$16240$1HvE18) (char<? . g$16239$1HvE18) (char<=? . g$16238$1HvE18) (char->integer . g$16237$1HvE18) (ceiling . g$16236$1HvE18) (call-with-values . g$16235$1HvE18) (call/cc . g$16234$1HvE18) (call-with-current-continuation . g$16233$1HvE18) (cddddr . g$8069$1HvE18) (cdddar . g$8068$1HvE18) (cddadr . g$8067$1HvE18) (cddaar . g$8066$1HvE18) (cdaddr . g$8065$1HvE18) (cdadar . g$8064$1HvE18) (cdaadr . g$8063$1HvE18) (cdaaar . g$8062$1HvE18) (cadddr . g$8061$1HvE18) (caddar . g$8060$1HvE18) (cadadr . g$8059$1HvE18) (cadaar . g$8058$1HvE18) (caaddr . g$8057$1HvE18) (caadar . g$8056$1HvE18) (caaadr . g$8055$1HvE18) (caaaar . g$8054$1HvE18) (cdddr . g$8053$1HvE18) (cddar . g$8052$1HvE18) (cdadr . g$8051$1HvE18) (cdaar . g$8050$1HvE18) (caddr . g$8049$1HvE18) (cadar . g$8048$1HvE18) (caadr . g$8047$1HvE18) (caaar . g$8046$1HvE18) (cddr . g$8045$1HvE18) (cdar . g$8044$1HvE18) (cadr . g$8043$1HvE18) (caar . g$8042$1HvE18) (cdr . g$16232$1HvE18) (car . g$16231$1HvE18) (boolean? . g$16230$1HvE18) (boolean=? . g$16229$1HvE18) (atan . g$16228$1HvE18) (assertion-violation . g$16227$1HvE18) (asin . g$16226$1HvE18) (apply . g$16225$1HvE18) (append . g$16224$1HvE18) (angle . g$16223$1HvE18) (acos . g$16222$1HvE18) (abs . g$16221$1HvE18) (/ . g$16220$1HvE18) (* . g$16219$1HvE18) (- . g$16218$1HvE18) (+ . g$16217$1HvE18) (>= . g$16216$1HvE18) (> . g$16215$1HvE18) (= . g$16214$1HvE18) (<= . g$16213$1HvE18) (< . g$16212$1HvE18) (unquote-splicing . g$16143$1HvE18) (unquote . g$16142$1HvE18) (_ . g$16141$1HvE18) (else . g$16140$1HvE18) (=> . g$16139$1HvE18) (... . g$16138$1HvE18) (assert . g$16137$1HvE18) (or . g$16133$1HvE18) (and . g$16132$1HvE18) (cond . g$16130$1HvE18) (let* . g$16129$1HvE18) (let . g$16128$1HvE18) (identifier-syntax . g$16127$1HvE18) (quasiquote . g$16124$1HvE18) (syntax-rules . g$16123$1HvE18) (let-values . g$16119$1HvE18) (let*-values . g$16118$1HvE18) (case . g$16114$1HvE18) (if . g$16110$1HvE18) (letrec* . g$16109$1HvE18) (letrec . g$16108$1HvE18) (lambda . g$16105$1HvE18) (quote . g$16102$1HvE18) (letrec-syntax . g$16100$1HvE18) (let-syntax . g$16099$1HvE18) (set! . g$16098$1HvE18) (begin . g$16095$1HvE18) (define-syntax . g$16093$1HvE18) (define . g$16092$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16765$1HvE18 '(rnrs lists) '(6) '() '() '() '((remove . g$8526$1HvE18) (remv . g$8527$1HvE18) (remp . g$16501$1HvE18) (remq . g$8528$1HvE18) (partition . g$16500$1HvE18) (memv . g$16499$1HvE18) (memq . g$16498$1HvE18) (memp . g$16497$1HvE18) (member . g$16496$1HvE18) (exists . g$8522$1HvE18) (for-all . g$8521$1HvE18) (fold-right . g$8525$1HvE18) (fold-left . g$8524$1HvE18) (find . g$16495$1HvE18) (filter . g$16494$1HvE18) (cons* . g$8523$1HvE18) (assv . g$16493$1HvE18) (assq . g$16492$1HvE18) (assp . g$16491$1HvE18) (assoc . g$16490$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16766$1HvE18 '(rnrs io simple) '(6) '() '() '() '((call-with-output-file . g$16594$1HvE18) (call-with-input-file . g$16593$1HvE18) (write-char . g$16592$1HvE18) (write . g$16591$1HvE18) (with-output-to-file . g$16590$1HvE18) (with-input-from-file . g$16589$1HvE18) (read-char . g$16588$1HvE18) (read . g$16587$1HvE18) (peek-char . g$16586$1HvE18) (open-output-file . g$16585$1HvE18) (open-input-file . g$16584$1HvE18) (newline . g$16583$1HvE18) (display . g$16582$1HvE18) (close-output-port . g$16581$1HvE18) (close-input-port . g$16580$1HvE18) (eof-object? . g$16579$1HvE18) (eof-object . g$16578$1HvE18) (current-error-port . g$16577$1HvE18) (current-output-port . g$16576$1HvE18) (current-input-port . g$16575$1HvE18) (output-port? . g$16574$1HvE18) (input-port? . g$16573$1HvE18) (make-i/o-write-error . g$9160$1HvE18) (make-i/o-read-error . g$9146$1HvE18) (make-i/o-port-error . g$9265$1HvE18) (make-i/o-invalid-position-error . g$9175$1HvE18) (make-i/o-filename-error . g$9192$1HvE18) (make-i/o-file-protection-error . g$9208$1HvE18) (make-i/o-file-is-read-only-error . g$9222$1HvE18) (make-i/o-file-does-not-exist-error . g$9250$1HvE18) (make-i/o-file-already-exists-error . g$9236$1HvE18) (make-i/o-error . g$9132$1HvE18) (i/o-write-error? . g$9161$1HvE18) (i/o-read-error? . g$9147$1HvE18) (i/o-port-error? . g$9267$1HvE18) (i/o-invalid-position-error? . g$9177$1HvE18) (i/o-filename-error? . g$9194$1HvE18) (i/o-file-protection-error? . g$9209$1HvE18) (i/o-file-is-read-only-error? . g$9223$1HvE18) (i/o-file-does-not-exist-error? . g$9251$1HvE18) (i/o-file-already-exists-error? . g$9237$1HvE18) (i/o-error? . g$9133$1HvE18) (i/o-error-port . g$9268$1HvE18) (i/o-error-filename . g$9195$1HvE18) (&i/o-port . g$16190$1HvE18) (&i/o-file-does-not-exist . g$16189$1HvE18) (&i/o-file-already-exists . g$16188$1HvE18) (&i/o-file-is-read-only . g$16187$1HvE18) (&i/o-file-protection . g$16186$1HvE18) (&i/o-filename . g$16185$1HvE18) (&i/o-invalid-position . g$16184$1HvE18) (&i/o-write . g$16183$1HvE18) (&i/o-read . g$16182$1HvE18) (&i/o . g$16181$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16767$1HvE18 '(rnrs bytevectors) '(6) '() '() '() '((make-bytevector . g$16532$1HvE18) (utf32->string . g$16468$1HvE18) (utf16->string . g$16467$1HvE18) (utf8->string . g$16466$1HvE18) (uint-list->bytevector . g$16465$1HvE18) (u8-list->bytevector . g$16464$1HvE18) (string->utf8 . g$16463$1HvE18) (string->utf32 . g$16462$1HvE18) (string->utf16 . g$16461$1HvE18) (sint-list->bytevector . g$16460$1HvE18) (native-endianness . g$8567$1HvE18) (bytevector? . g$16459$1HvE18) (bytevector=? . g$16458$1HvE18) (bytevector-uint-set! . g$16457$1HvE18) (bytevector-uint-ref . g$16456$1HvE18) (bytevector-u8-set! . g$16455$1HvE18) (bytevector-u8-ref . g$16454$1HvE18) (bytevector-u64-set! . g$8588$1HvE18) (bytevector-u64-ref . g$8584$1HvE18) (bytevector-u64-native-set! . g$8590$1HvE18) (bytevector-u64-native-ref . g$8586$1HvE18) (bytevector-u32-set! . g$8580$1HvE18) (bytevector-u32-ref . g$8576$1HvE18) (bytevector-u32-native-set! . g$8582$1HvE18) (bytevector-u32-native-ref . g$8578$1HvE18) (bytevector-u16-set! . g$8572$1HvE18) (bytevector-u16-ref . g$8568$1HvE18) (bytevector-u16-native-set! . g$8574$1HvE18) (bytevector-u16-native-ref . g$8570$1HvE18) (bytevector-sint-set! . g$16453$1HvE18) (bytevector-sint-ref . g$16452$1HvE18) (bytevector-s8-set! . g$16451$1HvE18) (bytevector-s8-ref . g$16450$1HvE18) (bytevector-s64-set! . g$8589$1HvE18) (bytevector-s64-ref . g$8585$1HvE18) (bytevector-s64-native-set! . g$8591$1HvE18) (bytevector-s64-native-ref . g$8587$1HvE18) (bytevector-s32-set! . g$8581$1HvE18) (bytevector-s32-ref . g$8577$1HvE18) (bytevector-s32-native-set! . g$8583$1HvE18) (bytevector-s32-native-ref . g$8579$1HvE18) (bytevector-s16-set! . g$8573$1HvE18) (bytevector-s16-ref . g$8569$1HvE18) (bytevector-s16-native-set! . g$8575$1HvE18) (bytevector-s16-native-ref . g$8571$1HvE18) (bytevector-length . g$16449$1HvE18) (bytevector-ieee-single-set! . g$16448$1HvE18) (bytevector-ieee-single-ref . g$16447$1HvE18) (bytevector-ieee-single-native-set! . g$8594$1HvE18) (bytevector-ieee-single-native-ref . g$8592$1HvE18) (bytevector-ieee-double-set! . g$16446$1HvE18) (bytevector-ieee-double-ref . g$16445$1HvE18) (bytevector-ieee-double-native-set! . g$8595$1HvE18) (bytevector-ieee-double-native-ref . g$8593$1HvE18) (bytevector-fill! . g$16444$1HvE18) (bytevector-copy! . g$16443$1HvE18) (bytevector-copy . g$16442$1HvE18) (bytevector->uint-list . g$16441$1HvE18) (bytevector->u8-list . g$16440$1HvE18) (bytevector->sint-list . g$16439$1HvE18) (endianness . g$16136$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16768$1HvE18 '(rnrs unicode) '(6) '() '() '() '((string-upcase . g$16652$1HvE18) (string-titlecase . g$16651$1HvE18) (string-normalize-nfkd . g$16650$1HvE18) (string-normalize-nfkc . g$16649$1HvE18) (string-normalize-nfd . g$16648$1HvE18) (string-normalize-nfc . g$16647$1HvE18) (string-foldcase . g$16646$1HvE18) (string-downcase . g$16645$1HvE18) (string-ci>? . g$16644$1HvE18) (string-ci>=? . g$16643$1HvE18) (string-ci=? . g$16642$1HvE18) (string-ci<? . g$16641$1HvE18) (string-ci<=? . g$16640$1HvE18) (char-whitespace? . g$16639$1HvE18) (char-upper-case? . g$16638$1HvE18) (char-title-case? . g$16637$1HvE18) (char-numeric? . g$16636$1HvE18) (char-lower-case? . g$16635$1HvE18) (char-general-category . g$16634$1HvE18) (char-upcase . g$16633$1HvE18) (char-titlecase . g$16632$1HvE18) (char-foldcase . g$16631$1HvE18) (char-downcase . g$16630$1HvE18) (char-ci>? . g$16629$1HvE18) (char-ci>=? . g$16628$1HvE18) (char-ci=? . g$16627$1HvE18) (char-ci<? . g$16626$1HvE18) (char-ci<=? . g$16625$1HvE18) (char-alphabetic? . g$16624$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16769$1HvE18 '(rnrs exceptions) '(6) '() '() '() '((with-exception-handler . g$16489$1HvE18) (raise-continuable . g$16488$1HvE18) (raise . g$16487$1HvE18) (guard . g$16149$1HvE18) (else . g$16140$1HvE18) (=> . g$16139$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16770$1HvE18 '(rnrs arithmetic bitwise) '(6) '() '() '() '((bitwise-rotate-bit-field . g$8997$1HvE18) (bitwise-reverse-bit-field . g$8998$1HvE18) (bitwise-length . g$16354$1HvE18) (bitwise-if . g$8991$1HvE18) (bitwise-first-bit-set . g$16353$1HvE18) (bitwise-copy-bit-field . g$8994$1HvE18) (bitwise-copy-bit . g$8992$1HvE18) (bitwise-bit-set? . g$16352$1HvE18) (bitwise-bit-field . g$16351$1HvE18) (bitwise-bit-count . g$16350$1HvE18) (bitwise-xor . g$16349$1HvE18) (bitwise-ior . g$16348$1HvE18) (bitwise-and . g$16347$1HvE18) (bitwise-not . g$16346$1HvE18) (bitwise-arithmetic-shift-right . g$8996$1HvE18) (bitwise-arithmetic-shift-left . g$8995$1HvE18) (bitwise-arithmetic-shift . g$16345$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16771$1HvE18 '(rnrs arithmetic fixnums) '(6) '() '() '() '((fxzero? . g$16392$1HvE18) (fxxor . g$16391$1HvE18) (fxrotate-bit-field . g$9049$1HvE18) (fxreverse-bit-field . g$16390$1HvE18) (fxpositive? . g$16389$1HvE18) (fxodd? . g$16388$1HvE18) (fxnot . g$16387$1HvE18) (fxnegative? . g$16386$1HvE18) (fxmod0 . g$16385$1HvE18) (fxmod . g$16384$1HvE18) (fxmin . g$16383$1HvE18) (fxmax . g$16382$1HvE18) (fxlength . g$16381$1HvE18) (fxior . g$16380$1HvE18) (fxif . g$9043$1HvE18) (fxfirst-bit-set . g$16379$1HvE18) (fxeven? . g$16378$1HvE18) (fxdiv0-and-mod0 . g$16377$1HvE18) (fxdiv0 . g$16376$1HvE18) (fxdiv-and-mod . g$16375$1HvE18) (fxdiv . g$16374$1HvE18) (fxcopy-bit-field . g$9046$1HvE18) (fxcopy-bit . g$9044$1HvE18) (fxbit-set? . g$16373$1HvE18) (fxbit-field . g$9045$1HvE18) (fxbit-count . g$16372$1HvE18) (fxarithmetic-shift-right . g$9048$1HvE18) (fxarithmetic-shift-left . g$9047$1HvE18) (fxarithmetic-shift . g$16371$1HvE18) (fxand . g$16370$1HvE18) (fx>? . g$16369$1HvE18) (fx>=? . g$16368$1HvE18) (fx=? . g$16367$1HvE18) (fx<? . g$16366$1HvE18) (fx<=? . g$16365$1HvE18) (fx-/carry . g$16364$1HvE18) (fx- . g$16363$1HvE18) (fx+/carry . g$16362$1HvE18) (fx+ . g$16361$1HvE18) (fx*/carry . g$16360$1HvE18) (fx* . g$16359$1HvE18) (greatest-fixnum . g$16358$1HvE18) (least-fixnum . g$16357$1HvE18) (fixnum-width . g$16356$1HvE18) (fixnum? . g$16355$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16772$1HvE18 '(rnrs arithmetic flonums) '(6) '() '() '() '((no-nans-violation? . g$9118$1HvE18) (no-infinities-violation? . g$9104$1HvE18) (make-no-nans-violation . g$9117$1HvE18) (make-no-infinities-violation . g$9103$1HvE18) (real->flonum . g$16438$1HvE18) (flzero? . g$16437$1HvE18) (fltruncate . g$16436$1HvE18) (fltan . g$16435$1HvE18) (flsqrt . g$16434$1HvE18) (flsin . g$16433$1HvE18) (flround . g$16432$1HvE18) (flpositive? . g$16431$1HvE18) (flonum? . g$16430$1HvE18) (flodd? . g$16429$1HvE18) (flnumerator . g$16428$1HvE18) (flnegative? . g$16427$1HvE18) (flnan? . g$16426$1HvE18) (flmod0 . g$16425$1HvE18) (flmod . g$16424$1HvE18) (flmin . g$16423$1HvE18) (flmax . g$16422$1HvE18) (fllog . g$16421$1HvE18) (flinteger? . g$16420$1HvE18) (flinfinite? . g$16419$1HvE18) (flfloor . g$16418$1HvE18) (flfinite? . g$16417$1HvE18) (flexpt . g$16416$1HvE18) (flexp . g$16415$1HvE18) (fleven? . g$16414$1HvE18) (fldiv0-and-mod0 . g$16413$1HvE18) (fldiv0 . g$16412$1HvE18) (fldiv-and-mod . g$16411$1HvE18) (fldiv . g$16410$1HvE18) (fldenominator . g$16409$1HvE18) (flcos . g$16408$1HvE18) (flceiling . g$16407$1HvE18) (flatan . g$16406$1HvE18) (flasin . g$16405$1HvE18) (flacos . g$16404$1HvE18) (flabs . g$16403$1HvE18) (fl>? . g$16402$1HvE18) (fl>=? . g$16401$1HvE18) (fl=? . g$16400$1HvE18) (fl<? . g$16399$1HvE18) (fl<=? . g$16398$1HvE18) (fl/ . g$16397$1HvE18) (fl- . g$16396$1HvE18) (fl+ . g$16395$1HvE18) (fl* . g$16394$1HvE18) (fixnum->flonum . g$16393$1HvE18) (&no-nans . g$16194$1HvE18) (&no-infinities . g$16193$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16773$1HvE18 '(rnrs hashtables) '(6) '() '() '() '((symbol-hash . g$16604$1HvE18) (string-ci-hash . g$16603$1HvE18) (string-hash . g$16602$1HvE18) (equal-hash . g$16601$1HvE18) (hashtable-equivalence-function . g$8428$1HvE18) (make-hashtable . g$16600$1HvE18) (hashtable-hash-function . g$8429$1HvE18) (make-eqv-hashtable . g$8420$1HvE18) (make-eq-hashtable . g$8419$1HvE18) (hashtable? . g$16599$1HvE18) (hashtable-update! . g$8426$1HvE18) (hashtable-size . g$8421$1HvE18) (hashtable-set! . g$8423$1HvE18) (hashtable-ref . g$8422$1HvE18) (hashtable-mutable? . g$16598$1HvE18) (hashtable-keys . g$16597$1HvE18) (hashtable-entries . g$16596$1HvE18) (hashtable-delete! . g$8424$1HvE18) (hashtable-copy . g$16595$1HvE18) (hashtable-contains? . g$8425$1HvE18) (hashtable-clear! . g$8427$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16774$1HvE18 '(rnrs io ports) '(6) '() '() '() '((eof-object? . g$16579$1HvE18) (eof-object . g$16578$1HvE18) (current-error-port . g$16577$1HvE18) (current-output-port . g$16576$1HvE18) (current-input-port . g$16575$1HvE18) (output-port? . g$16574$1HvE18) (input-port? . g$16573$1HvE18) (utf-8-codec . g$16572$1HvE18) (utf-16-codec . g$16571$1HvE18) (transcoder-error-handling-mode . g$16570$1HvE18) (transcoder-eol-style . g$16569$1HvE18) (transcoder-codec . g$16568$1HvE18) (transcoded-port . g$16567$1HvE18) (textual-port? . g$16566$1HvE18) (string->bytevector . g$16565$1HvE18) (standard-output-port . g$16564$1HvE18) (standard-input-port . g$16563$1HvE18) (standard-error-port . g$16562$1HvE18) (set-port-position! . g$16561$1HvE18) (put-u8 . g$16560$1HvE18) (put-string . g$16559$1HvE18) (put-datum . g$16558$1HvE18) (put-char . g$16557$1HvE18) (put-bytevector . g$16556$1HvE18) (port? . g$16555$1HvE18) (port-transcoder . g$16554$1HvE18) (port-position . g$16553$1HvE18) (port-has-set-port-position!? . g$16552$1HvE18) (port-has-port-position? . g$16551$1HvE18) (port-eof? . g$16550$1HvE18) (output-port-buffer-mode . g$16549$1HvE18) (open-string-output-port . g$9303$1HvE18) (open-string-input-port . g$16548$1HvE18) (open-file-output-port . g$16547$1HvE18) (open-file-input/output-port . g$16546$1HvE18) (open-file-input-port . g$16545$1HvE18) (open-bytevector-output-port . g$16544$1HvE18) (open-bytevector-input-port . g$16543$1HvE18) (native-transcoder . g$16542$1HvE18) (native-eol-style . g$16541$1HvE18) (make-transcoder . g$16540$1HvE18) (latin-1-codec . g$16539$1HvE18) (make-i/o-write-error . g$9160$1HvE18) (make-i/o-read-error . g$9146$1HvE18) (make-i/o-port-error . g$9265$1HvE18) (make-i/o-invalid-position-error . g$9175$1HvE18) (make-i/o-filename-error . g$9192$1HvE18) (make-i/o-file-protection-error . g$9208$1HvE18) (make-i/o-file-is-read-only-error . g$9222$1HvE18) (make-i/o-file-does-not-exist-error . g$9250$1HvE18) (make-i/o-file-already-exists-error . g$9236$1HvE18) (make-i/o-error . g$9132$1HvE18) (make-i/o-encoding-error . g$9296$1HvE18) (make-i/o-decoding-error . g$9281$1HvE18) (make-custom-textual-output-port . g$16538$1HvE18) (make-custom-textual-input/output-port . g$16537$1HvE18) (make-custom-textual-input-port . g$16536$1HvE18) (make-custom-binary-output-port . g$16535$1HvE18) (make-custom-binary-input/output-port . g$16534$1HvE18) (make-custom-binary-input-port . g$16533$1HvE18) (lookahead-u8 . g$16531$1HvE18) (lookahead-char . g$16530$1HvE18) (i/o-write-error? . g$9161$1HvE18) (i/o-read-error? . g$9147$1HvE18) (i/o-port-error? . g$9267$1HvE18) (i/o-invalid-position-error? . g$9177$1HvE18) (i/o-filename-error? . g$9194$1HvE18) (i/o-file-protection-error? . g$9209$1HvE18) (i/o-file-is-read-only-error? . g$9223$1HvE18) (i/o-file-does-not-exist-error? . g$9251$1HvE18) (i/o-file-already-exists-error? . g$9237$1HvE18) (i/o-error? . g$9133$1HvE18) (i/o-error-port . g$9268$1HvE18) (i/o-error-filename . g$9195$1HvE18) (i/o-encoding-error? . g$9298$1HvE18) (i/o-encoding-error-char . g$9299$1HvE18) (i/o-decoding-error? . g$9282$1HvE18) (get-u8 . g$16529$1HvE18) (get-string-n! . g$16528$1HvE18) (get-string-n . g$16527$1HvE18) (get-string-all . g$16526$1HvE18) (get-line . g$16525$1HvE18) (get-datum . g$16524$1HvE18) (get-char . g$16523$1HvE18) (get-bytevector-some . g$16522$1HvE18) (get-bytevector-n! . g$16521$1HvE18) (get-bytevector-n . g$16520$1HvE18) (get-bytevector-all . g$16519$1HvE18) (flush-output-port . g$16518$1HvE18) (close-port . g$16517$1HvE18) (call-with-string-output-port . g$16516$1HvE18) (call-with-port . g$16515$1HvE18) (call-with-bytevector-output-port . g$16514$1HvE18) (bytevector->string . g$16513$1HvE18) (buffer-mode? . g$16512$1HvE18) (binary-port? . g$16511$1HvE18) (&i/o-encoding . g$16192$1HvE18) (&i/o-decoding . g$16191$1HvE18) (&i/o-port . g$16190$1HvE18) (&i/o-file-does-not-exist . g$16189$1HvE18) (&i/o-file-already-exists . g$16188$1HvE18) (&i/o-file-is-read-only . g$16187$1HvE18) (&i/o-file-protection . g$16186$1HvE18) (&i/o-filename . g$16185$1HvE18) (&i/o-invalid-position . g$16184$1HvE18) (&i/o-write . g$16183$1HvE18) (&i/o-read . g$16182$1HvE18) (&i/o . g$16181$1HvE18) (error-handling-mode . g$16153$1HvE18) (file-options . g$16152$1HvE18) (buffer-mode . g$16151$1HvE18) (eol-style . g$16150$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16775$1HvE18 '(rnrs enums) '(6) '() '() '() '((make-enumeration . g$16486$1HvE18) (enum-set=? . g$16485$1HvE18) (enum-set-universe . g$16484$1HvE18) (enum-set-union . g$16483$1HvE18) (enum-set-subset? . g$16482$1HvE18) (enum-set-projection . g$16481$1HvE18) (enum-set-member? . g$16480$1HvE18) (enum-set-intersection . g$16479$1HvE18) (enum-set-indexer . g$16478$1HvE18) (enum-set-difference . g$16477$1HvE18) (enum-set-constructor . g$16476$1HvE18) (enum-set-complement . g$16475$1HvE18) (enum-set->list . g$16474$1HvE18) (define-enumeration . g$16164$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16776$1HvE18 '(rnrs conditions) '(6) '() '() '() '((who-condition? . g$8816$1HvE18) (warning? . g$8727$1HvE18) (violation? . g$8769$1HvE18) (undefined-violation? . g$8893$1HvE18) (syntax-violation? . g$8877$1HvE18) (syntax-violation-subform . g$8879$1HvE18) (syntax-violation-form . g$8878$1HvE18) (syntax-violation . g$10471$1HvE18) (simple-conditions . g$16473$1HvE18) (serious-condition? . g$8741$1HvE18) (non-continuable-violation? . g$8831$1HvE18) (message-condition? . g$8712$1HvE18) (make-who-condition . g$8814$1HvE18) (make-warning . g$8726$1HvE18) (make-violation . g$8768$1HvE18) (make-undefined-violation . g$8892$1HvE18) (make-syntax-violation . g$8874$1HvE18) (make-serious-condition . g$8740$1HvE18) (make-non-continuable-violation . g$8830$1HvE18) (make-message-condition . g$8710$1HvE18) (make-lexical-violation . g$8858$1HvE18) (make-irritants-condition . g$8797$1HvE18) (make-implementation-restriction-violation . g$8844$1HvE18) (make-error . g$8754$1HvE18) (make-assertion-violation . g$8782$1HvE18) (lexical-violation? . g$8859$1HvE18) (irritants-condition? . g$8799$1HvE18) (implementation-restriction-violation? . g$8845$1HvE18) (error? . g$8755$1HvE18) (condition-who . g$8817$1HvE18) (condition-predicate . g$16472$1HvE18) (condition-message . g$8713$1HvE18) (condition-irritants . g$8800$1HvE18) (condition-accessor . g$16471$1HvE18) (condition . g$16470$1HvE18) (assertion-violation? . g$8783$1HvE18) (condition? . g$16469$1HvE18) (&non-continuable . g$16180$1HvE18) (&undefined . g$16179$1HvE18) (&syntax . g$16178$1HvE18) (&lexical . g$16177$1HvE18) (&implementation-restriction . g$16176$1HvE18) (&who . g$16174$1HvE18) (&irritants . g$16173$1HvE18) (&assertion . g$16172$1HvE18) (&violation . g$16171$1HvE18) (&error . g$16170$1HvE18) (&serious . g$16169$1HvE18) (&warning . g$16168$1HvE18) (&message . g$16167$1HvE18) (&condition . g$16166$1HvE18) (define-condition-type . g$16165$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16777$1HvE18 '(rnrs records inspection) '(6) '() '() '() '((record? . g$16616$1HvE18) (record-type-uid . g$16615$1HvE18) (record-type-sealed? . g$16614$1HvE18) (record-type-parent . g$16613$1HvE18) (record-type-opaque? . g$16612$1HvE18) (record-type-name . g$16611$1HvE18) (record-type-generative? . g$16610$1HvE18) (record-type-field-names . g$16609$1HvE18) (record-rtd . g$16608$1HvE18) (record-field-mutable? . g$16607$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16778$1HvE18 '(rnrs records procedural) '(6) '() '() '() '((record-type-descriptor? . g$16623$1HvE18) (record-predicate . g$16622$1HvE18) (record-mutator . g$16621$1HvE18) (record-constructor . g$16620$1HvE18) (record-accessor . g$16619$1HvE18) (make-record-type-descriptor . g$16618$1HvE18) (make-record-constructor-descriptor . g$16617$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16779$1HvE18 '(rnrs records syntactic) '(6) '() '() '() '((define-record-type . g$16163$1HvE18) (parent-rtd . g$16162$1HvE18) (nongenerative . g$16161$1HvE18) (opaque . g$16160$1HvE18) (sealed . g$16159$1HvE18) (protocol . g$16158$1HvE18) (parent . g$16157$1HvE18) (immutable . g$16156$1HvE18) (mutable . g$16155$1HvE18) (fields . g$16154$1HvE18) (record-constructor-descriptor . g$16117$1HvE18) (record-type-descriptor . g$16116$1HvE18)) '() values values '#f '#f '#t '#f) (g$install-library$9126$1HvE18 'g$16780$1HvE18 '(psyntax system $all) '() '() '() '() '((ellipsis-map . g$10349$1HvE18) (&no-nans-rcd . g$16745$1HvE18) (&no-nans-rtd . g$16744$1HvE18) (&no-infinities-rcd . g$16743$1HvE18) (&no-infinities-rtd . g$16742$1HvE18) (&i/o-encoding-rcd . g$16741$1HvE18) (&i/o-encoding-rtd . g$16740$1HvE18) (&i/o-decoding-rcd . g$16739$1HvE18) (&i/o-decoding-rtd . g$16738$1HvE18) (&i/o-port-rcd . g$16737$1HvE18) (&i/o-port-rtd . g$16736$1HvE18) (&i/o-file-does-not-exist-rcd . g$16735$1HvE18) (&i/o-file-does-not-exist-rtd . g$16734$1HvE18) (&i/o-file-already-exists-rcd . g$16733$1HvE18) (&i/o-file-already-exists-rtd . g$16732$1HvE18) (&i/o-fie-is-read-only-rcd . g$16731$1HvE18) (&i/o-fie-is-read-only-rtd . g$16730$1HvE18) (&i/o-file-protection-rcd . g$16729$1HvE18) (&i/o-file-protection-rtd . g$16728$1HvE18) (&i/o-filename-rcd . g$16727$1HvE18) (&i/o-filename-rtd . g$16726$1HvE18) (&i/o-invalid-position-rcd . g$16725$1HvE18) (&i/o-invalid-position-rtd . g$16724$1HvE18) (&i/o-write-rcd . g$16723$1HvE18) (&i/o-write-rtd . g$16722$1HvE18) (&i/o-read-rcd . g$16721$1HvE18) (&i/o-read-rtd . g$16720$1HvE18) (&i/o-rcd . g$16719$1HvE18) (&i/o-rtd . g$16718$1HvE18) (&undefined-rcd . g$16717$1HvE18) (&undefined-rtd . g$16716$1HvE18) (&syntax-rcd . g$16715$1HvE18) (&syntax-rtd . g$16714$1HvE18) (&lexical-rcd . g$16713$1HvE18) (&lexical-rtd . g$16712$1HvE18) (&implementation-restriction-rcd . g$16711$1HvE18) (&implementation-restriction-rtd . g$16710$1HvE18) (&non-continuable-rcd . g$16709$1HvE18) (&non-continuable-rtd . g$16708$1HvE18) (&who-rcd . g$16707$1HvE18) (&who-rtd . g$16706$1HvE18) (&irritants-rcd . g$16705$1HvE18) (&irritants-rtd . g$16704$1HvE18) (&assertion-rcd . g$16703$1HvE18) (&assertion-rtd . g$16702$1HvE18) (&violation-rcd . g$16701$1HvE18) (&violation-rtd . g$16700$1HvE18) (&error-rcd . g$16699$1HvE18) (&error-rtd . g$16698$1HvE18) (&serious-rcd . g$16697$1HvE18) (&serious-rtd . g$16696$1HvE18) (&warning-rcd . g$16695$1HvE18) (&warning-rtd . g$16694$1HvE18) (&message-rcd . g$16693$1HvE18) (&message-rtd . g$16692$1HvE18) (&condition-rcd . g$16691$1HvE18) (&condition-rtd . g$16690$1HvE18) (library-letrec* . g$16689$1HvE18) (annotation-stripped . g$16688$1HvE18) (annotation-source . g$16687$1HvE18) (annotation-expression . g$16686$1HvE18) (annotation? . g$16685$1HvE18) (read-annotated . g$16684$1HvE18) (tanh . g$16683$1HvE18) (cosh . g$16682$1HvE18) (sinh . g$16681$1HvE18) (make-guid . g$16680$1HvE18) (unspecified? . g$16679$1HvE18) (make-trace . g$16678$1HvE18) (make-list . g$16677$1HvE18) (last-pair . g$16676$1HvE18) (load-r5rs . g$16675$1HvE18) (license . g$16674$1HvE18) (stacktrace . g$16673$1HvE18) (ironscheme-build . g$16071$1HvE18) (define-clr-class-internal . g$16672$1HvE18) (clr-field-set!-internal . g$16671$1HvE18) (clr-field-get-internal . g$16670$1HvE18) (clr-cast-internal . g$16669$1HvE18) (clr-call-internal . g$16668$1HvE18) (clr-new-internal . g$16667$1HvE18) (clr-new-array-internal . g$16666$1HvE18) (clr-is-internal . g$16665$1HvE18) (clr-reference-internal . g$16664$1HvE18) (clr-using-internal . g$16663$1HvE18) (clr-clear-usings-internal . g$16662$1HvE18) (syntax-error . g$10468$1HvE18) (syntax-dispatch . g$10346$1HvE18) (eval-core . g$16661$1HvE18) (set-symbol-value! . g$16660$1HvE18) (symbol-value . g$16659$1HvE18) (ungensym . g$16658$1HvE18) (gensym . g$16657$1HvE18) (void . g$16656$1HvE18) (load-serialized-library . g$16655$1HvE18) (serialize-library . g$16654$1HvE18) (compile-system-libraries . g$16073$1HvE18) (compile->closure . g$16075$1HvE18) (compile . g$16074$1HvE18) (load . g$16070$1HvE18) (interaction-environment . g$10476$1HvE18) (char-ready? . g$16653$1HvE18) (string-upcase . g$16652$1HvE18) (string-titlecase . g$16651$1HvE18) (string-normalize-nfkd . g$16650$1HvE18) (string-normalize-nfkc . g$16649$1HvE18) (string-normalize-nfd . g$16648$1HvE18) (string-normalize-nfc . g$16647$1HvE18) (string-foldcase . g$16646$1HvE18) (string-downcase . g$16645$1HvE18) (string-ci>? . g$16644$1HvE18) (string-ci>=? . g$16643$1HvE18) (string-ci=? . g$16642$1HvE18) (string-ci<? . g$16641$1HvE18) (string-ci<=? . g$16640$1HvE18) (char-whitespace? . g$16639$1HvE18) (char-upper-case? . g$16638$1HvE18) (char-title-case? . g$16637$1HvE18) (char-numeric? . g$16636$1HvE18) (char-lower-case? . g$16635$1HvE18) (char-general-category . g$16634$1HvE18) (char-upcase . g$16633$1HvE18) (char-titlecase . g$16632$1HvE18) (char-foldcase . g$16631$1HvE18) (char-downcase . g$16630$1HvE18) (char-ci>? . g$16629$1HvE18) (char-ci>=? . g$16628$1HvE18) (char-ci=? . g$16627$1HvE18) (char-ci<? . g$16626$1HvE18) (char-ci<=? . g$16625$1HvE18) (char-alphabetic? . g$16624$1HvE18) (make-variable-transformer . g$10011$1HvE18) (identifier? . g$10472$1HvE18) (generate-temporaries . g$10464$1HvE18) (free-identifier=? . g$10465$1HvE18) (syntax->datum . g$10474$1HvE18) (datum->syntax . g$10473$1HvE18) (bound-identifier=? . g$10466$1HvE18) (record-type-descriptor? . g$16623$1HvE18) (record-predicate . g$16622$1HvE18) (record-mutator . g$16621$1HvE18) (record-constructor . g$16620$1HvE18) (record-accessor . g$16619$1HvE18) (make-record-type-descriptor . g$16618$1HvE18) (make-record-constructor-descriptor . g$16617$1HvE18) (record? . g$16616$1HvE18) (record-type-uid . g$16615$1HvE18) (record-type-sealed? . g$16614$1HvE18) (record-type-parent . g$16613$1HvE18) (record-type-opaque? . g$16612$1HvE18) (record-type-name . g$16611$1HvE18) (record-type-generative? . g$16610$1HvE18) (record-type-field-names . g$16609$1HvE18) (record-rtd . g$16608$1HvE18) (record-field-mutable? . g$16607$1HvE18) (delete-file . g$8455$1HvE18) (file-exists? . g$8454$1HvE18) (vector-sort! . g$16606$1HvE18) (vector-sort . g$16605$1HvE18) (list-sort . g$8912$1HvE18) (symbol-hash . g$16604$1HvE18) (string-ci-hash . g$16603$1HvE18) (string-hash . g$16602$1HvE18) (equal-hash . g$16601$1HvE18) (hashtable-equivalence-function . g$8428$1HvE18) (make-hashtable . g$16600$1HvE18) (hashtable-hash-function . g$8429$1HvE18) (make-eqv-hashtable . g$8420$1HvE18) (make-eq-hashtable . g$8419$1HvE18) (hashtable? . g$16599$1HvE18) (hashtable-update! . g$8426$1HvE18) (hashtable-size . g$8421$1HvE18) (hashtable-set! . g$8423$1HvE18) (hashtable-ref . g$8422$1HvE18) (hashtable-mutable? . g$16598$1HvE18) (hashtable-keys . g$16597$1HvE18) (hashtable-entries . g$16596$1HvE18) (hashtable-delete! . g$8424$1HvE18) (hashtable-copy . g$16595$1HvE18) (hashtable-contains? . g$8425$1HvE18) (hashtable-clear! . g$8427$1HvE18) (call-with-output-file . g$16594$1HvE18) (call-with-input-file . g$16593$1HvE18) (write-char . g$16592$1HvE18) (write . g$16591$1HvE18) (with-output-to-file . g$16590$1HvE18) (with-input-from-file . g$16589$1HvE18) (read-char . g$16588$1HvE18) (read . g$16587$1HvE18) (peek-char . g$16586$1HvE18) (open-output-file . g$16585$1HvE18) (open-input-file . g$16584$1HvE18) (newline . g$16583$1HvE18) (display . g$16582$1HvE18) (close-output-port . g$16581$1HvE18) (close-input-port . g$16580$1HvE18) (eof-object? . g$16579$1HvE18) (eof-object . g$16578$1HvE18) (current-error-port . g$16577$1HvE18) (current-output-port . g$16576$1HvE18) (current-input-port . g$16575$1HvE18) (output-port? . g$16574$1HvE18) (input-port? . g$16573$1HvE18) (utf-8-codec . g$16572$1HvE18) (utf-16-codec . g$16571$1HvE18) (transcoder-error-handling-mode . g$16570$1HvE18) (transcoder-eol-style . g$16569$1HvE18) (transcoder-codec . g$16568$1HvE18) (transcoded-port . g$16567$1HvE18) (textual-port? . g$16566$1HvE18) (string->bytevector . g$16565$1HvE18) (standard-output-port . g$16564$1HvE18) (standard-input-port . g$16563$1HvE18) (standard-error-port . g$16562$1HvE18) (set-port-position! . g$16561$1HvE18) (put-u8 . g$16560$1HvE18) (put-string . g$16559$1HvE18) (put-datum . g$16558$1HvE18) (put-char . g$16557$1HvE18) (put-bytevector . g$16556$1HvE18) (port? . g$16555$1HvE18) (port-transcoder . g$16554$1HvE18) (port-position . g$16553$1HvE18) (port-has-set-port-position!? . g$16552$1HvE18) (port-has-port-position? . g$16551$1HvE18) (port-eof? . g$16550$1HvE18) (output-port-buffer-mode . g$16549$1HvE18) (open-string-output-port . g$9303$1HvE18) (open-string-input-port . g$16548$1HvE18) (open-file-output-port . g$16547$1HvE18) (open-file-input/output-port . g$16546$1HvE18) (open-file-input-port . g$16545$1HvE18) (open-bytevector-output-port . g$16544$1HvE18) (open-bytevector-input-port . g$16543$1HvE18) (native-transcoder . g$16542$1HvE18) (native-eol-style . g$16541$1HvE18) (make-transcoder . g$16540$1HvE18) (latin-1-codec . g$16539$1HvE18) (make-i/o-write-error . g$9160$1HvE18) (make-i/o-read-error . g$9146$1HvE18) (make-i/o-port-error . g$9265$1HvE18) (make-i/o-invalid-position-error . g$9175$1HvE18) (make-i/o-filename-error . g$9192$1HvE18) (make-i/o-file-protection-error . g$9208$1HvE18) (make-i/o-file-is-read-only-error . g$9222$1HvE18) (make-i/o-file-does-not-exist-error . g$9250$1HvE18) (make-i/o-file-already-exists-error . g$9236$1HvE18) (make-i/o-error . g$9132$1HvE18) (make-i/o-encoding-error . g$9296$1HvE18) (make-i/o-decoding-error . g$9281$1HvE18) (make-custom-textual-output-port . g$16538$1HvE18) (make-custom-textual-input/output-port . g$16537$1HvE18) (make-custom-textual-input-port . g$16536$1HvE18) (make-custom-binary-output-port . g$16535$1HvE18) (make-custom-binary-input/output-port . g$16534$1HvE18) (make-custom-binary-input-port . g$16533$1HvE18) (make-bytevector . g$16532$1HvE18) (lookahead-u8 . g$16531$1HvE18) (lookahead-char . g$16530$1HvE18) (i/o-write-error? . g$9161$1HvE18) (i/o-read-error? . g$9147$1HvE18) (i/o-port-error? . g$9267$1HvE18) (i/o-invalid-position-error? . g$9177$1HvE18) (i/o-filename-error? . g$9194$1HvE18) (i/o-file-protection-error? . g$9209$1HvE18) (i/o-file-is-read-only-error? . g$9223$1HvE18) (i/o-file-does-not-exist-error? . g$9251$1HvE18) (i/o-file-already-exists-error? . g$9237$1HvE18) (i/o-error? . g$9133$1HvE18) (i/o-error-port . g$9268$1HvE18) (i/o-error-filename . g$9195$1HvE18) (i/o-encoding-error? . g$9298$1HvE18) (i/o-encoding-error-char . g$9299$1HvE18) (i/o-decoding-error? . g$9282$1HvE18) (get-u8 . g$16529$1HvE18) (get-string-n! . g$16528$1HvE18) (get-string-n . g$16527$1HvE18) (get-string-all . g$16526$1HvE18) (get-line . g$16525$1HvE18) (get-datum . g$16524$1HvE18) (get-char . g$16523$1HvE18) (get-bytevector-some . g$16522$1HvE18) (get-bytevector-n! . g$16521$1HvE18) (get-bytevector-n . g$16520$1HvE18) (get-bytevector-all . g$16519$1HvE18) (flush-output-port . g$16518$1HvE18) (close-port . g$16517$1HvE18) (call-with-string-output-port . g$16516$1HvE18) (call-with-port . g$16515$1HvE18) (call-with-bytevector-output-port . g$16514$1HvE18) (bytevector->string . g$16513$1HvE18) (buffer-mode? . g$16512$1HvE18) (binary-port? . g$16511$1HvE18) (scheme-report-environment . g$10455$1HvE18) (quotient . g$8899$1HvE18) (null-environment . g$10454$1HvE18) (remainder . g$8900$1HvE18) (modulo . g$8901$1HvE18) (inexact->exact . g$16510$1HvE18) (force . g$16509$1HvE18) (exact->inexact . g$16508$1HvE18) (exit . g$16507$1HvE18) (command-line . g$16506$1HvE18) (string-fill! . g$16505$1HvE18) (string-set! . g$16504$1HvE18) (set-cdr! . g$16503$1HvE18) (set-car! . g$16502$1HvE18) (remove . g$8526$1HvE18) (remv . g$8527$1HvE18) (remp . g$16501$1HvE18) (remq . g$8528$1HvE18) (partition . g$16500$1HvE18) (memv . g$16499$1HvE18) (memq . g$16498$1HvE18) (memp . g$16497$1HvE18) (member . g$16496$1HvE18) (exists . g$8522$1HvE18) (for-all . g$8521$1HvE18) (fold-right . g$8525$1HvE18) (fold-left . g$8524$1HvE18) (find . g$16495$1HvE18) (filter . g$16494$1HvE18) (cons* . g$8523$1HvE18) (assv . g$16493$1HvE18) (assq . g$16492$1HvE18) (assp . g$16491$1HvE18) (assoc . g$16490$1HvE18) (with-exception-handler . g$16489$1HvE18) (raise-continuable . g$16488$1HvE18) (raise . g$16487$1HvE18) (eval . g$10457$1HvE18) (environment . g$10453$1HvE18) (make-enumeration . g$16486$1HvE18) (enum-set=? . g$16485$1HvE18) (enum-set-universe . g$16484$1HvE18) (enum-set-union . g$16483$1HvE18) (enum-set-subset? . g$16482$1HvE18) (enum-set-projection . g$16481$1HvE18) (enum-set-member? . g$16480$1HvE18) (enum-set-intersection . g$16479$1HvE18) (enum-set-indexer . g$16478$1HvE18) (enum-set-difference . g$16477$1HvE18) (enum-set-constructor . g$16476$1HvE18) (enum-set-complement . g$16475$1HvE18) (enum-set->list . g$16474$1HvE18) (who-condition? . g$8816$1HvE18) (warning? . g$8727$1HvE18) (violation? . g$8769$1HvE18) (undefined-violation? . g$8893$1HvE18) (syntax-violation? . g$8877$1HvE18) (syntax-violation-subform . g$8879$1HvE18) (syntax-violation-form . g$8878$1HvE18) (syntax-violation . g$10471$1HvE18) (simple-conditions . g$16473$1HvE18) (serious-condition? . g$8741$1HvE18) (non-continuable-violation? . g$8831$1HvE18) (message-condition? . g$8712$1HvE18) (make-who-condition . g$8814$1HvE18) (make-warning . g$8726$1HvE18) (make-violation . g$8768$1HvE18) (make-undefined-violation . g$8892$1HvE18) (make-syntax-violation . g$8874$1HvE18) (make-serious-condition . g$8740$1HvE18) (make-non-continuable-violation . g$8830$1HvE18) (make-message-condition . g$8710$1HvE18) (make-lexical-violation . g$8858$1HvE18) (make-irritants-condition . g$8797$1HvE18) (make-implementation-restriction-violation . g$8844$1HvE18) (make-error . g$8754$1HvE18) (make-assertion-violation . g$8782$1HvE18) (lexical-violation? . g$8859$1HvE18) (irritants-condition? . g$8799$1HvE18) (implementation-restriction-violation? . g$8845$1HvE18) (error? . g$8755$1HvE18) (condition-who . g$8817$1HvE18) (condition-predicate . g$16472$1HvE18) (condition-message . g$8713$1HvE18) (condition-irritants . g$8800$1HvE18) (condition-accessor . g$16471$1HvE18) (condition . g$16470$1HvE18) (assertion-violation? . g$8783$1HvE18) (condition? . g$16469$1HvE18) (utf32->string . g$16468$1HvE18) (utf16->string . g$16467$1HvE18) (utf8->string . g$16466$1HvE18) (uint-list->bytevector . g$16465$1HvE18) (u8-list->bytevector . g$16464$1HvE18) (string->utf8 . g$16463$1HvE18) (string->utf32 . g$16462$1HvE18) (string->utf16 . g$16461$1HvE18) (sint-list->bytevector . g$16460$1HvE18) (native-endianness . g$8567$1HvE18) (bytevector? . g$16459$1HvE18) (bytevector=? . g$16458$1HvE18) (bytevector-uint-set! . g$16457$1HvE18) (bytevector-uint-ref . g$16456$1HvE18) (bytevector-u8-set! . g$16455$1HvE18) (bytevector-u8-ref . g$16454$1HvE18) (bytevector-u64-set! . g$8588$1HvE18) (bytevector-u64-ref . g$8584$1HvE18) (bytevector-u64-native-set! . g$8590$1HvE18) (bytevector-u64-native-ref . g$8586$1HvE18) (bytevector-u32-set! . g$8580$1HvE18) (bytevector-u32-ref . g$8576$1HvE18) (bytevector-u32-native-set! . g$8582$1HvE18) (bytevector-u32-native-ref . g$8578$1HvE18) (bytevector-u16-set! . g$8572$1HvE18) (bytevector-u16-ref . g$8568$1HvE18) (bytevector-u16-native-set! . g$8574$1HvE18) (bytevector-u16-native-ref . g$8570$1HvE18) (bytevector-sint-set! . g$16453$1HvE18) (bytevector-sint-ref . g$16452$1HvE18) (bytevector-s8-set! . g$16451$1HvE18) (bytevector-s8-ref . g$16450$1HvE18) (bytevector-s64-set! . g$8589$1HvE18) (bytevector-s64-ref . g$8585$1HvE18) (bytevector-s64-native-set! . g$8591$1HvE18) (bytevector-s64-native-ref . g$8587$1HvE18) (bytevector-s32-set! . g$8581$1HvE18) (bytevector-s32-ref . g$8577$1HvE18) (bytevector-s32-native-set! . g$8583$1HvE18) (bytevector-s32-native-ref . g$8579$1HvE18) (bytevector-s16-set! . g$8573$1HvE18) (bytevector-s16-ref . g$8569$1HvE18) (bytevector-s16-native-set! . g$8575$1HvE18) (bytevector-s16-native-ref . g$8571$1HvE18) (bytevector-length . g$16449$1HvE18) (bytevector-ieee-single-set! . g$16448$1HvE18) (bytevector-ieee-single-ref . g$16447$1HvE18) (bytevector-ieee-single-native-set! . g$8594$1HvE18) (bytevector-ieee-single-native-ref . g$8592$1HvE18) (bytevector-ieee-double-set! . g$16446$1HvE18) (bytevector-ieee-double-ref . g$16445$1HvE18) (bytevector-ieee-double-native-set! . g$8595$1HvE18) (bytevector-ieee-double-native-ref . g$8593$1HvE18) (bytevector-fill! . g$16444$1HvE18) (bytevector-copy! . g$16443$1HvE18) (bytevector-copy . g$16442$1HvE18) (bytevector->uint-list . g$16441$1HvE18) (bytevector->u8-list . g$16440$1HvE18) (bytevector->sint-list . g$16439$1HvE18) (no-nans-violation? . g$9118$1HvE18) (no-infinities-violation? . g$9104$1HvE18) (make-no-nans-violation . g$9117$1HvE18) (make-no-infinities-violation . g$9103$1HvE18) (real->flonum . g$16438$1HvE18) (flzero? . g$16437$1HvE18) (fltruncate . g$16436$1HvE18) (fltan . g$16435$1HvE18) (flsqrt . g$16434$1HvE18) (flsin . g$16433$1HvE18) (flround . g$16432$1HvE18) (flpositive? . g$16431$1HvE18) (flonum? . g$16430$1HvE18) (flodd? . g$16429$1HvE18) (flnumerator . g$16428$1HvE18) (flnegative? . g$16427$1HvE18) (flnan? . g$16426$1HvE18) (flmod0 . g$16425$1HvE18) (flmod . g$16424$1HvE18) (flmin . g$16423$1HvE18) (flmax . g$16422$1HvE18) (fllog . g$16421$1HvE18) (flinteger? . g$16420$1HvE18) (flinfinite? . g$16419$1HvE18) (flfloor . g$16418$1HvE18) (flfinite? . g$16417$1HvE18) (flexpt . g$16416$1HvE18) (flexp . g$16415$1HvE18) (fleven? . g$16414$1HvE18) (fldiv0-and-mod0 . g$16413$1HvE18) (fldiv0 . g$16412$1HvE18) (fldiv-and-mod . g$16411$1HvE18) (fldiv . g$16410$1HvE18) (fldenominator . g$16409$1HvE18) (flcos . g$16408$1HvE18) (flceiling . g$16407$1HvE18) (flatan . g$16406$1HvE18) (flasin . g$16405$1HvE18) (flacos . g$16404$1HvE18) (flabs . g$16403$1HvE18) (fl>? . g$16402$1HvE18) (fl>=? . g$16401$1HvE18) (fl=? . g$16400$1HvE18) (fl<? . g$16399$1HvE18) (fl<=? . g$16398$1HvE18) (fl/ . g$16397$1HvE18) (fl- . g$16396$1HvE18) (fl+ . g$16395$1HvE18) (fl* . g$16394$1HvE18) (fixnum->flonum . g$16393$1HvE18) (fxzero? . g$16392$1HvE18) (fxxor . g$16391$1HvE18) (fxrotate-bit-field . g$9049$1HvE18) (fxreverse-bit-field . g$16390$1HvE18) (fxpositive? . g$16389$1HvE18) (fxodd? . g$16388$1HvE18) (fxnot . g$16387$1HvE18) (fxnegative? . g$16386$1HvE18) (fxmod0 . g$16385$1HvE18) (fxmod . g$16384$1HvE18) (fxmin . g$16383$1HvE18) (fxmax . g$16382$1HvE18) (fxlength . g$16381$1HvE18) (fxior . g$16380$1HvE18) (fxif . g$9043$1HvE18) (fxfirst-bit-set . g$16379$1HvE18) (fxeven? . g$16378$1HvE18) (fxdiv0-and-mod0 . g$16377$1HvE18) (fxdiv0 . g$16376$1HvE18) (fxdiv-and-mod . g$16375$1HvE18) (fxdiv . g$16374$1HvE18) (fxcopy-bit-field . g$9046$1HvE18) (fxcopy-bit . g$9044$1HvE18) (fxbit-set? . g$16373$1HvE18) (fxbit-field . g$9045$1HvE18) (fxbit-count . g$16372$1HvE18) (fxarithmetic-shift-right . g$9048$1HvE18) (fxarithmetic-shift-left . g$9047$1HvE18) (fxarithmetic-shift . g$16371$1HvE18) (fxand . g$16370$1HvE18) (fx>? . g$16369$1HvE18) (fx>=? . g$16368$1HvE18) (fx=? . g$16367$1HvE18) (fx<? . g$16366$1HvE18) (fx<=? . g$16365$1HvE18) (fx-/carry . g$16364$1HvE18) (fx- . g$16363$1HvE18) (fx+/carry . g$16362$1HvE18) (fx+ . g$16361$1HvE18) (fx*/carry . g$16360$1HvE18) (fx* . g$16359$1HvE18) (greatest-fixnum . g$16358$1HvE18) (least-fixnum . g$16357$1HvE18) (fixnum-width . g$16356$1HvE18) (fixnum? . g$16355$1HvE18) (bitwise-rotate-bit-field . g$8997$1HvE18) (bitwise-reverse-bit-field . g$8998$1HvE18) (bitwise-length . g$16354$1HvE18) (bitwise-if . g$8991$1HvE18) (bitwise-first-bit-set . g$16353$1HvE18) (bitwise-copy-bit-field . g$8994$1HvE18) (bitwise-copy-bit . g$8992$1HvE18) (bitwise-bit-set? . g$16352$1HvE18) (bitwise-bit-field . g$16351$1HvE18) (bitwise-bit-count . g$16350$1HvE18) (bitwise-xor . g$16349$1HvE18) (bitwise-ior . g$16348$1HvE18) (bitwise-and . g$16347$1HvE18) (bitwise-not . g$16346$1HvE18) (bitwise-arithmetic-shift-right . g$8996$1HvE18) (bitwise-arithmetic-shift-left . g$8995$1HvE18) (bitwise-arithmetic-shift . g$16345$1HvE18) (zero? . g$16344$1HvE18) (vector? . g$16343$1HvE18) (vector-set! . g$16342$1HvE18) (vector-ref . g$16341$1HvE18) (vector-map . g$16340$1HvE18) (vector-length . g$16339$1HvE18) (vector-for-each . g$16338$1HvE18) (vector-fill! . g$16337$1HvE18) (vector->list . g$16336$1HvE18) (vector . g$16335$1HvE18) (values . g$16334$1HvE18) (truncate . g$16333$1HvE18) (tan . g$16332$1HvE18) (symbol? . g$16331$1HvE18) (symbol=? . g$16330$1HvE18) (symbol->string . g$16329$1HvE18) (substring . g$16328$1HvE18) (string? . g$16327$1HvE18) (string>? . g$16326$1HvE18) (string>=? . g$16325$1HvE18) (string=? . g$16324$1HvE18) (string<? . g$16323$1HvE18) (string<=? . g$16322$1HvE18) (string-ref . g$16321$1HvE18) (string-length . g$16320$1HvE18) (string-for-each . g$16319$1HvE18) (string-copy . g$16318$1HvE18) (string-append . g$16317$1HvE18) (string->symbol . g$16316$1HvE18) (string->number . g$16315$1HvE18) (string->list . g$16314$1HvE18) (string . g$16313$1HvE18) (sqrt . g$16312$1HvE18) (sin . g$16311$1HvE18) (round . g$16310$1HvE18) (reverse . g$16309$1HvE18) (real? . g$16308$1HvE18) (real-valued? . g$16307$1HvE18) (real-part . g$16306$1HvE18) (rationalize . g$8070$1HvE18) (rational? . g$16305$1HvE18) (rational-valued? . g$16304$1HvE18) (procedure? . g$16303$1HvE18) (positive? . g$16302$1HvE18) (pair? . g$16301$1HvE18) (odd? . g$16300$1HvE18) (numerator . g$16299$1HvE18) (number? . g$16298$1HvE18) (number->string . g$16297$1HvE18) (null? . g$16296$1HvE18) (not . g$16295$1HvE18) (negative? . g$16294$1HvE18) (nan? . g$16293$1HvE18) (min . g$16292$1HvE18) (max . g$16291$1HvE18) (map . g$16290$1HvE18) (make-vector . g$16289$1HvE18) (make-string . g$16288$1HvE18) (make-rectangular . g$16287$1HvE18) (make-polar . g$16286$1HvE18) (magnitude . g$16285$1HvE18) (log . g$16284$1HvE18) (list? . g$16283$1HvE18) (list-tail . g$16282$1HvE18) (list-ref . g$16281$1HvE18) (list->vector . g$16280$1HvE18) (list->string . g$16279$1HvE18) (list . g$16278$1HvE18) (length . g$16277$1HvE18) (lcm . g$16276$1HvE18) (integer? . g$16275$1HvE18) (integer-valued? . g$16274$1HvE18) (integer->char . g$16273$1HvE18) (infinite? . g$16272$1HvE18) (inexact? . g$16271$1HvE18) (inexact . g$16270$1HvE18) (imag-part . g$16269$1HvE18) (gcd . g$16268$1HvE18) (for-each . g$16267$1HvE18) (floor . g$16266$1HvE18) (finite? . g$16265$1HvE18) (expt . g$16264$1HvE18) (exp . g$16263$1HvE18) (exact? . g$16262$1HvE18) (exact-integer-sqrt . g$16261$1HvE18) (exact . g$16260$1HvE18) (even? . g$16259$1HvE18) (error . g$16258$1HvE18) (eqv? . g$16257$1HvE18) (equal? . g$16256$1HvE18) (eq? . g$16255$1HvE18) (dynamic-wind . g$16254$1HvE18) (div0-and-mod0 . g$16253$1HvE18) (mod0 . g$16252$1HvE18) (div0 . g$16251$1HvE18) (div-and-mod . g$16250$1HvE18) (mod . g$16249$1HvE18) (div . g$16248$1HvE18) (denominator . g$16247$1HvE18) (cos . g$16246$1HvE18) (cons . g$16245$1HvE18) (complex? . g$16244$1HvE18) (char? . g$16243$1HvE18) (char>? . g$16242$1HvE18) (char>=? . g$16241$1HvE18) (char=? . g$16240$1HvE18) (char<? . g$16239$1HvE18) (char<=? . g$16238$1HvE18) (char->integer . g$16237$1HvE18) (ceiling . g$16236$1HvE18) (call-with-values . g$16235$1HvE18) (call/cc . g$16234$1HvE18) (call-with-current-continuation . g$16233$1HvE18) (cddddr . g$8069$1HvE18) (cdddar . g$8068$1HvE18) (cddadr . g$8067$1HvE18) (cddaar . g$8066$1HvE18) (cdaddr . g$8065$1HvE18) (cdadar . g$8064$1HvE18) (cdaadr . g$8063$1HvE18) (cdaaar . g$8062$1HvE18) (cadddr . g$8061$1HvE18) (caddar . g$8060$1HvE18) (cadadr . g$8059$1HvE18) (cadaar . g$8058$1HvE18) (caaddr . g$8057$1HvE18) (caadar . g$8056$1HvE18) (caaadr . g$8055$1HvE18) (caaaar . g$8054$1HvE18) (cdddr . g$8053$1HvE18) (cddar . g$8052$1HvE18) (cdadr . g$8051$1HvE18) (cdaar . g$8050$1HvE18) (caddr . g$8049$1HvE18) (cadar . g$8048$1HvE18) (caadr . g$8047$1HvE18) (caaar . g$8046$1HvE18) (cddr . g$8045$1HvE18) (cdar . g$8044$1HvE18) (cadr . g$8043$1HvE18) (caar . g$8042$1HvE18) (cdr . g$16232$1HvE18) (car . g$16231$1HvE18) (boolean? . g$16230$1HvE18) (boolean=? . g$16229$1HvE18) (atan . g$16228$1HvE18) (assertion-violation . g$16227$1HvE18) (asin . g$16226$1HvE18) (apply . g$16225$1HvE18) (append . g$16224$1HvE18) (angle . g$16223$1HvE18) (acos . g$16222$1HvE18) (abs . g$16221$1HvE18) (/ . g$16220$1HvE18) (* . g$16219$1HvE18) (- . g$16218$1HvE18) (+ . g$16217$1HvE18) (>= . g$16216$1HvE18) (> . g$16215$1HvE18) (= . g$16214$1HvE18) (<= . g$16213$1HvE18) (< . g$16212$1HvE18) (make-record-printer . g$16211$1HvE18) (vector-append . g$16210$1HvE18) (vector-filter . g$16209$1HvE18) (vector-reverse! . g$16208$1HvE18) (vector-contains? . g$16207$1HvE18) (vector-index-of . g$16206$1HvE18) (vector-copy . g$16205$1HvE18) (vector-binary-search . g$16204$1HvE18) (get-output-string . g$16203$1HvE18) (open-output-string . g$16202$1HvE18) (open-input-string . g$16201$1HvE18) (string-format . g$16200$1HvE18) (make-traced-procedure . g$16199$1HvE18) (pmap . g$16198$1HvE18) (time-it . g$16197$1HvE18) (make-parameter . g$9334$1HvE18) (library-locator . g$16196$1HvE18) (get-library-paths . g$16195$1HvE18) (environment-symbols . g$10451$1HvE18) (interaction-environment-symbols . g$10450$1HvE18) (library-path . g$9559$1HvE18) (library-extensions . g$9560$1HvE18) (installed-libraries . g$9580$1HvE18) (expand . g$10456$1HvE18) (&no-nans . g$16194$1HvE18) (&no-infinities . g$16193$1HvE18) (&i/o-encoding . g$16192$1HvE18) (&i/o-decoding . g$16191$1HvE18) (&i/o-port . g$16190$1HvE18) (&i/o-file-does-not-exist . g$16189$1HvE18) (&i/o-file-already-exists . g$16188$1HvE18) (&i/o-file-is-read-only . g$16187$1HvE18) (&i/o-file-protection . g$16186$1HvE18) (&i/o-filename . g$16185$1HvE18) (&i/o-invalid-position . g$16184$1HvE18) (&i/o-write . g$16183$1HvE18) (&i/o-read . g$16182$1HvE18) (&i/o . g$16181$1HvE18) (&non-continuable . g$16180$1HvE18) (&undefined . g$16179$1HvE18) (&syntax . g$16178$1HvE18) (&lexical . g$16177$1HvE18) (&implementation-restriction . g$16176$1HvE18) (&non . g$16175$1HvE18) (&who . g$16174$1HvE18) (&irritants . g$16173$1HvE18) (&assertion . g$16172$1HvE18) (&violation . g$16171$1HvE18) (&error . g$16170$1HvE18) (&serious . g$16169$1HvE18) (&warning . g$16168$1HvE18) (&message . g$16167$1HvE18) (&condition . g$16166$1HvE18) (define-condition-type . g$16165$1HvE18) (define-enumeration . g$16164$1HvE18) (define-record-type . g$16163$1HvE18) (parent-rtd . g$16162$1HvE18) (nongenerative . g$16161$1HvE18) (opaque . g$16160$1HvE18) (sealed . g$16159$1HvE18) (protocol . g$16158$1HvE18) (parent . g$16157$1HvE18) (immutable . g$16156$1HvE18) (mutable . g$16155$1HvE18) (fields . g$16154$1HvE18) (error-handling-mode . g$16153$1HvE18) (file-options . g$16152$1HvE18) (buffer-mode . g$16151$1HvE18) (eol-style . g$16150$1HvE18) (guard . g$16149$1HvE18) (trace-define-syntax . g$16148$1HvE18) (trace-define . g$16147$1HvE18) (trace-lambda . g$16146$1HvE18) (unsyntax-splicing . g$16145$1HvE18) (unsyntax . g$16144$1HvE18) (unquote-splicing . g$16143$1HvE18) (unquote . g$16142$1HvE18) (_ . g$16141$1HvE18) (else . g$16140$1HvE18) (=> . g$16139$1HvE18) (... . g$16138$1HvE18) (assert . g$16137$1HvE18) (endianness . g$16136$1HvE18) (delay . g$16135$1HvE18) (time . g$16134$1HvE18) (or . g$16133$1HvE18) (and . g$16132$1HvE18) (do . g$16131$1HvE18) (cond . g$16130$1HvE18) (let* . g$16129$1HvE18) (let . g$16128$1HvE18) (identifier-syntax . g$16127$1HvE18) (with-syntax . g$16126$1HvE18) (quasisyntax . g$16125$1HvE18) (quasiquote . g$16124$1HvE18) (syntax-rules . g$16123$1HvE18) (include-into . g$16122$1HvE18) (include . g$16121$1HvE18) (define-struct . g$16120$1HvE18) (let-values . g$16119$1HvE18) (let*-values . g$16118$1HvE18) (record-constructor-descriptor . g$16117$1HvE18) (record-type-descriptor . g$16116$1HvE18) (fluid-let-syntax . g$16115$1HvE18) (case . g$16114$1HvE18) (parameterize . g$16113$1HvE18) (unless . g$16112$1HvE18) (when . g$16111$1HvE18) (if . g$16110$1HvE18) (letrec* . g$16109$1HvE18) (letrec . g$16108$1HvE18) (type-descriptor . g$16107$1HvE18) (case-lambda . g$16106$1HvE18) (lambda . g$16105$1HvE18) (syntax . g$16104$1HvE18) (syntax-case . g$16103$1HvE18) (quote . g$16102$1HvE18) (foreign-call . g$16101$1HvE18) (letrec-syntax . g$16100$1HvE18) (let-syntax . g$16099$1HvE18) (set! . g$16098$1HvE18) (import . g$16097$1HvE18) (library . g$16096$1HvE18) (begin . g$16095$1HvE18) (module . g$16094$1HvE18) (define-syntax . g$16093$1HvE18) (define . g$16092$1HvE18)) '((g$10349$1HvE18 core-prim . ellipsis-map) (g$16745$1HvE18 core-prim . &no-nans-rcd) (g$16744$1HvE18 core-prim . &no-nans-rtd) (g$16743$1HvE18 core-prim . &no-infinities-rcd) (g$16742$1HvE18 core-prim . &no-infinities-rtd) (g$16741$1HvE18 core-prim . &i/o-encoding-rcd) (g$16740$1HvE18 core-prim . &i/o-encoding-rtd) (g$16739$1HvE18 core-prim . &i/o-decoding-rcd) (g$16738$1HvE18 core-prim . &i/o-decoding-rtd) (g$16737$1HvE18 core-prim . &i/o-port-rcd) (g$16736$1HvE18 core-prim . &i/o-port-rtd) (g$16735$1HvE18 core-prim . &i/o-file-does-not-exist-rcd) (g$16734$1HvE18 core-prim . &i/o-file-does-not-exist-rtd) (g$16733$1HvE18 core-prim . &i/o-file-already-exists-rcd) (g$16732$1HvE18 core-prim . &i/o-file-already-exists-rtd) (g$16731$1HvE18 core-prim . &i/o-fie-is-read-only-rcd) (g$16730$1HvE18 core-prim . &i/o-fie-is-read-only-rtd) (g$16729$1HvE18 core-prim . &i/o-file-protection-rcd) (g$16728$1HvE18 core-prim . &i/o-file-protection-rtd) (g$16727$1HvE18 core-prim . &i/o-filename-rcd) (g$16726$1HvE18 core-prim . &i/o-filename-rtd) (g$16725$1HvE18 core-prim . &i/o-invalid-position-rcd) (g$16724$1HvE18 core-prim . &i/o-invalid-position-rtd) (g$16723$1HvE18 core-prim . &i/o-write-rcd) (g$16722$1HvE18 core-prim . &i/o-write-rtd) (g$16721$1HvE18 core-prim . &i/o-read-rcd) (g$16720$1HvE18 core-prim . &i/o-read-rtd) (g$16719$1HvE18 core-prim . &i/o-rcd) (g$16718$1HvE18 core-prim . &i/o-rtd) (g$16717$1HvE18 core-prim . &undefined-rcd) (g$16716$1HvE18 core-prim . &undefined-rtd) (g$16715$1HvE18 core-prim . &syntax-rcd) (g$16714$1HvE18 core-prim . &syntax-rtd) (g$16713$1HvE18 core-prim . &lexical-rcd) (g$16712$1HvE18 core-prim . &lexical-rtd) (g$16711$1HvE18 core-prim . &implementation-restriction-rcd) (g$16710$1HvE18 core-prim . &implementation-restriction-rtd) (g$16709$1HvE18 core-prim . &non-continuable-rcd) (g$16708$1HvE18 core-prim . &non-continuable-rtd) (g$16707$1HvE18 core-prim . &who-rcd) (g$16706$1HvE18 core-prim . &who-rtd) (g$16705$1HvE18 core-prim . &irritants-rcd) (g$16704$1HvE18 core-prim . &irritants-rtd) (g$16703$1HvE18 core-prim . &assertion-rcd) (g$16702$1HvE18 core-prim . &assertion-rtd) (g$16701$1HvE18 core-prim . &violation-rcd) (g$16700$1HvE18 core-prim . &violation-rtd) (g$16699$1HvE18 core-prim . &error-rcd) (g$16698$1HvE18 core-prim . &error-rtd) (g$16697$1HvE18 core-prim . &serious-rcd) (g$16696$1HvE18 core-prim . &serious-rtd) (g$16695$1HvE18 core-prim . &warning-rcd) (g$16694$1HvE18 core-prim . &warning-rtd) (g$16693$1HvE18 core-prim . &message-rcd) (g$16692$1HvE18 core-prim . &message-rtd) (g$16691$1HvE18 core-prim . &condition-rcd) (g$16690$1HvE18 core-prim . &condition-rtd) (g$16689$1HvE18 core-prim . library-letrec*) (g$16688$1HvE18 core-prim . annotation-stripped) (g$16687$1HvE18 core-prim . annotation-source) (g$16686$1HvE18 core-prim . annotation-expression) (g$16685$1HvE18 core-prim . annotation?) (g$16684$1HvE18 core-prim . read-annotated) (g$16683$1HvE18 core-prim . tanh) (g$16682$1HvE18 core-prim . cosh) (g$16681$1HvE18 core-prim . sinh) (g$16680$1HvE18 core-prim . make-guid) (g$16679$1HvE18 core-prim . unspecified?) (g$16678$1HvE18 core-prim . make-trace) (g$16677$1HvE18 core-prim . make-list) (g$16676$1HvE18 core-prim . last-pair) (g$16675$1HvE18 core-prim . load-r5rs) (g$16674$1HvE18 core-prim . license) (g$16673$1HvE18 core-prim . stacktrace) (g$16071$1HvE18 core-prim . ironscheme-build) (g$16672$1HvE18 core-prim . define-clr-class-internal) (g$16671$1HvE18 core-prim . clr-field-set!-internal) (g$16670$1HvE18 core-prim . clr-field-get-internal) (g$16669$1HvE18 core-prim . clr-cast-internal) (g$16668$1HvE18 core-prim . clr-call-internal) (g$16667$1HvE18 core-prim . clr-new-internal) (g$16666$1HvE18 core-prim . clr-new-array-internal) (g$16665$1HvE18 core-prim . clr-is-internal) (g$16664$1HvE18 core-prim . clr-reference-internal) (g$16663$1HvE18 core-prim . clr-using-internal) (g$16662$1HvE18 core-prim . clr-clear-usings-internal) (g$10468$1HvE18 core-prim . syntax-error) (g$10346$1HvE18 core-prim . syntax-dispatch) (g$16661$1HvE18 core-prim . eval-core) (g$16660$1HvE18 core-prim . set-symbol-value!) (g$16659$1HvE18 core-prim . symbol-value) (g$16658$1HvE18 core-prim . ungensym) (g$16657$1HvE18 core-prim . gensym) (g$16656$1HvE18 core-prim . void) (g$16655$1HvE18 core-prim . load-serialized-library) (g$16654$1HvE18 core-prim . serialize-library) (g$16073$1HvE18 core-prim . compile-system-libraries) (g$16075$1HvE18 core-prim . compile->closure) (g$16074$1HvE18 core-prim . compile) (g$16070$1HvE18 core-prim . load) (g$10476$1HvE18 core-prim . interaction-environment) (g$16653$1HvE18 core-prim . char-ready?) (g$16652$1HvE18 core-prim . string-upcase) (g$16651$1HvE18 core-prim . string-titlecase) (g$16650$1HvE18 core-prim . string-normalize-nfkd) (g$16649$1HvE18 core-prim . string-normalize-nfkc) (g$16648$1HvE18 core-prim . string-normalize-nfd) (g$16647$1HvE18 core-prim . string-normalize-nfc) (g$16646$1HvE18 core-prim . string-foldcase) (g$16645$1HvE18 core-prim . string-downcase) (g$16644$1HvE18 core-prim . string-ci>?) (g$16643$1HvE18 core-prim . string-ci>=?) (g$16642$1HvE18 core-prim . string-ci=?) (g$16641$1HvE18 core-prim . string-ci<?) (g$16640$1HvE18 core-prim . string-ci<=?) (g$16639$1HvE18 core-prim . char-whitespace?) (g$16638$1HvE18 core-prim . char-upper-case?) (g$16637$1HvE18 core-prim . char-title-case?) (g$16636$1HvE18 core-prim . char-numeric?) (g$16635$1HvE18 core-prim . char-lower-case?) (g$16634$1HvE18 core-prim . char-general-category) (g$16633$1HvE18 core-prim . char-upcase) (g$16632$1HvE18 core-prim . char-titlecase) (g$16631$1HvE18 core-prim . char-foldcase) (g$16630$1HvE18 core-prim . char-downcase) (g$16629$1HvE18 core-prim . char-ci>?) (g$16628$1HvE18 core-prim . char-ci>=?) (g$16627$1HvE18 core-prim . char-ci=?) (g$16626$1HvE18 core-prim . char-ci<?) (g$16625$1HvE18 core-prim . char-ci<=?) (g$16624$1HvE18 core-prim . char-alphabetic?) (g$10011$1HvE18 core-prim . make-variable-transformer) (g$10472$1HvE18 core-prim . identifier?) (g$10464$1HvE18 core-prim . generate-temporaries) (g$10465$1HvE18 core-prim . free-identifier=?) (g$10474$1HvE18 core-prim . syntax->datum) (g$10473$1HvE18 core-prim . datum->syntax) (g$10466$1HvE18 core-prim . bound-identifier=?) (g$16623$1HvE18 core-prim . record-type-descriptor?) (g$16622$1HvE18 core-prim . record-predicate) (g$16621$1HvE18 core-prim . record-mutator) (g$16620$1HvE18 core-prim . record-constructor) (g$16619$1HvE18 core-prim . record-accessor) (g$16618$1HvE18 core-prim . make-record-type-descriptor) (g$16617$1HvE18 core-prim . make-record-constructor-descriptor) (g$16616$1HvE18 core-prim . record?) (g$16615$1HvE18 core-prim . record-type-uid) (g$16614$1HvE18 core-prim . record-type-sealed?) (g$16613$1HvE18 core-prim . record-type-parent) (g$16612$1HvE18 core-prim . record-type-opaque?) (g$16611$1HvE18 core-prim . record-type-name) (g$16610$1HvE18 core-prim . record-type-generative?) (g$16609$1HvE18 core-prim . record-type-field-names) (g$16608$1HvE18 core-prim . record-rtd) (g$16607$1HvE18 core-prim . record-field-mutable?) (g$8455$1HvE18 core-prim . delete-file) (g$8454$1HvE18 core-prim . file-exists?) (g$16606$1HvE18 core-prim . vector-sort!) (g$16605$1HvE18 core-prim . vector-sort) (g$8912$1HvE18 core-prim . list-sort) (g$16604$1HvE18 core-prim . symbol-hash) (g$16603$1HvE18 core-prim . string-ci-hash) (g$16602$1HvE18 core-prim . string-hash) (g$16601$1HvE18 core-prim . equal-hash) (g$8428$1HvE18 core-prim . hashtable-equivalence-function) (g$16600$1HvE18 core-prim . make-hashtable) (g$8429$1HvE18 core-prim . hashtable-hash-function) (g$8420$1HvE18 core-prim . make-eqv-hashtable) (g$8419$1HvE18 core-prim . make-eq-hashtable) (g$16599$1HvE18 core-prim . hashtable?) (g$8426$1HvE18 core-prim . hashtable-update!) (g$8421$1HvE18 core-prim . hashtable-size) (g$8423$1HvE18 core-prim . hashtable-set!) (g$8422$1HvE18 core-prim . hashtable-ref) (g$16598$1HvE18 core-prim . hashtable-mutable?) (g$16597$1HvE18 core-prim . hashtable-keys) (g$16596$1HvE18 core-prim . hashtable-entries) (g$8424$1HvE18 core-prim . hashtable-delete!) (g$16595$1HvE18 core-prim . hashtable-copy) (g$8425$1HvE18 core-prim . hashtable-contains?) (g$8427$1HvE18 core-prim . hashtable-clear!) (g$16594$1HvE18 core-prim . call-with-output-file) (g$16593$1HvE18 core-prim . call-with-input-file) (g$16592$1HvE18 core-prim . write-char) (g$16591$1HvE18 core-prim . write) (g$16590$1HvE18 core-prim . with-output-to-file) (g$16589$1HvE18 core-prim . with-input-from-file) (g$16588$1HvE18 core-prim . read-char) (g$16587$1HvE18 core-prim . read) (g$16586$1HvE18 core-prim . peek-char) (g$16585$1HvE18 core-prim . open-output-file) (g$16584$1HvE18 core-prim . open-input-file) (g$16583$1HvE18 core-prim . newline) (g$16582$1HvE18 core-prim . display) (g$16581$1HvE18 core-prim . close-output-port) (g$16580$1HvE18 core-prim . close-input-port) (g$16579$1HvE18 core-prim . eof-object?) (g$16578$1HvE18 core-prim . eof-object) (g$16577$1HvE18 core-prim . current-error-port) (g$16576$1HvE18 core-prim . current-output-port) (g$16575$1HvE18 core-prim . current-input-port) (g$16574$1HvE18 core-prim . output-port?) (g$16573$1HvE18 core-prim . input-port?) (g$16572$1HvE18 core-prim . utf-8-codec) (g$16571$1HvE18 core-prim . utf-16-codec) (g$16570$1HvE18 core-prim . transcoder-error-handling-mode) (g$16569$1HvE18 core-prim . transcoder-eol-style) (g$16568$1HvE18 core-prim . transcoder-codec) (g$16567$1HvE18 core-prim . transcoded-port) (g$16566$1HvE18 core-prim . textual-port?) (g$16565$1HvE18 core-prim . string->bytevector) (g$16564$1HvE18 core-prim . standard-output-port) (g$16563$1HvE18 core-prim . standard-input-port) (g$16562$1HvE18 core-prim . standard-error-port) (g$16561$1HvE18 core-prim . set-port-position!) (g$16560$1HvE18 core-prim . put-u8) (g$16559$1HvE18 core-prim . put-string) (g$16558$1HvE18 core-prim . put-datum) (g$16557$1HvE18 core-prim . put-char) (g$16556$1HvE18 core-prim . put-bytevector) (g$16555$1HvE18 core-prim . port?) (g$16554$1HvE18 core-prim . port-transcoder) (g$16553$1HvE18 core-prim . port-position) (g$16552$1HvE18 core-prim . port-has-set-port-position!?) (g$16551$1HvE18 core-prim . port-has-port-position?) (g$16550$1HvE18 core-prim . port-eof?) (g$16549$1HvE18 core-prim . output-port-buffer-mode) (g$9303$1HvE18 core-prim . open-string-output-port) (g$16548$1HvE18 core-prim . open-string-input-port) (g$16547$1HvE18 core-prim . open-file-output-port) (g$16546$1HvE18 core-prim . open-file-input/output-port) (g$16545$1HvE18 core-prim . open-file-input-port) (g$16544$1HvE18 core-prim . open-bytevector-output-port) (g$16543$1HvE18 core-prim . open-bytevector-input-port) (g$16542$1HvE18 core-prim . native-transcoder) (g$16541$1HvE18 core-prim . native-eol-style) (g$16540$1HvE18 core-prim . make-transcoder) (g$16539$1HvE18 core-prim . latin-1-codec) (g$9160$1HvE18 core-prim . make-i/o-write-error) (g$9146$1HvE18 core-prim . make-i/o-read-error) (g$9265$1HvE18 core-prim . make-i/o-port-error) (g$9175$1HvE18 core-prim . make-i/o-invalid-position-error) (g$9192$1HvE18 core-prim . make-i/o-filename-error) (g$9208$1HvE18 core-prim . make-i/o-file-protection-error) (g$9222$1HvE18 core-prim . make-i/o-file-is-read-only-error) (g$9250$1HvE18 core-prim . make-i/o-file-does-not-exist-error) (g$9236$1HvE18 core-prim . make-i/o-file-already-exists-error) (g$9132$1HvE18 core-prim . make-i/o-error) (g$9296$1HvE18 core-prim . make-i/o-encoding-error) (g$9281$1HvE18 core-prim . make-i/o-decoding-error) (g$16538$1HvE18 core-prim . make-custom-textual-output-port) (g$16537$1HvE18 core-prim . make-custom-textual-input/output-port) (g$16536$1HvE18 core-prim . make-custom-textual-input-port) (g$16535$1HvE18 core-prim . make-custom-binary-output-port) (g$16534$1HvE18 core-prim . make-custom-binary-input/output-port) (g$16533$1HvE18 core-prim . make-custom-binary-input-port) (g$16532$1HvE18 core-prim . make-bytevector) (g$16531$1HvE18 core-prim . lookahead-u8) (g$16530$1HvE18 core-prim . lookahead-char) (g$9161$1HvE18 core-prim . i/o-write-error?) (g$9147$1HvE18 core-prim . i/o-read-error?) (g$9267$1HvE18 core-prim . i/o-port-error?) (g$9177$1HvE18 core-prim . i/o-invalid-position-error?) (g$9194$1HvE18 core-prim . i/o-filename-error?) (g$9209$1HvE18 core-prim . i/o-file-protection-error?) (g$9223$1HvE18 core-prim . i/o-file-is-read-only-error?) (g$9251$1HvE18 core-prim . i/o-file-does-not-exist-error?) (g$9237$1HvE18 core-prim . i/o-file-already-exists-error?) (g$9133$1HvE18 core-prim . i/o-error?) (g$9268$1HvE18 core-prim . i/o-error-port) (g$9195$1HvE18 core-prim . i/o-error-filename) (g$9298$1HvE18 core-prim . i/o-encoding-error?) (g$9299$1HvE18 core-prim . i/o-encoding-error-char) (g$9282$1HvE18 core-prim . i/o-decoding-error?) (g$16529$1HvE18 core-prim . get-u8) (g$16528$1HvE18 core-prim . get-string-n!) (g$16527$1HvE18 core-prim . get-string-n) (g$16526$1HvE18 core-prim . get-string-all) (g$16525$1HvE18 core-prim . get-line) (g$16524$1HvE18 core-prim . get-datum) (g$16523$1HvE18 core-prim . get-char) (g$16522$1HvE18 core-prim . get-bytevector-some) (g$16521$1HvE18 core-prim . get-bytevector-n!) (g$16520$1HvE18 core-prim . get-bytevector-n) (g$16519$1HvE18 core-prim . get-bytevector-all) (g$16518$1HvE18 core-prim . flush-output-port) (g$16517$1HvE18 core-prim . close-port) (g$16516$1HvE18 core-prim . call-with-string-output-port) (g$16515$1HvE18 core-prim . call-with-port) (g$16514$1HvE18 core-prim . call-with-bytevector-output-port) (g$16513$1HvE18 core-prim . bytevector->string) (g$16512$1HvE18 core-prim . buffer-mode?) (g$16511$1HvE18 core-prim . binary-port?) (g$10455$1HvE18 core-prim . scheme-report-environment) (g$8899$1HvE18 core-prim . quotient) (g$10454$1HvE18 core-prim . null-environment) (g$8900$1HvE18 core-prim . remainder) (g$8901$1HvE18 core-prim . modulo) (g$16510$1HvE18 core-prim . inexact->exact) (g$16509$1HvE18 core-prim . force) (g$16508$1HvE18 core-prim . exact->inexact) (g$16507$1HvE18 core-prim . exit) (g$16506$1HvE18 core-prim . command-line) (g$16505$1HvE18 core-prim . string-fill!) (g$16504$1HvE18 core-prim . string-set!) (g$16503$1HvE18 core-prim . set-cdr!) (g$16502$1HvE18 core-prim . set-car!) (g$8526$1HvE18 core-prim . remove) (g$8527$1HvE18 core-prim . remv) (g$16501$1HvE18 core-prim . remp) (g$8528$1HvE18 core-prim . remq) (g$16500$1HvE18 core-prim . partition) (g$16499$1HvE18 core-prim . memv) (g$16498$1HvE18 core-prim . memq) (g$16497$1HvE18 core-prim . memp) (g$16496$1HvE18 core-prim . member) (g$8522$1HvE18 core-prim . exists) (g$8521$1HvE18 core-prim . for-all) (g$8525$1HvE18 core-prim . fold-right) (g$8524$1HvE18 core-prim . fold-left) (g$16495$1HvE18 core-prim . find) (g$16494$1HvE18 core-prim . filter) (g$8523$1HvE18 core-prim . cons*) (g$16493$1HvE18 core-prim . assv) (g$16492$1HvE18 core-prim . assq) (g$16491$1HvE18 core-prim . assp) (g$16490$1HvE18 core-prim . assoc) (g$16489$1HvE18 core-prim . with-exception-handler) (g$16488$1HvE18 core-prim . raise-continuable) (g$16487$1HvE18 core-prim . raise) (g$10457$1HvE18 core-prim . eval) (g$10453$1HvE18 core-prim . environment) (g$16486$1HvE18 core-prim . make-enumeration) (g$16485$1HvE18 core-prim . enum-set=?) (g$16484$1HvE18 core-prim . enum-set-universe) (g$16483$1HvE18 core-prim . enum-set-union) (g$16482$1HvE18 core-prim . enum-set-subset?) (g$16481$1HvE18 core-prim . enum-set-projection) (g$16480$1HvE18 core-prim . enum-set-member?) (g$16479$1HvE18 core-prim . enum-set-intersection) (g$16478$1HvE18 core-prim . enum-set-indexer) (g$16477$1HvE18 core-prim . enum-set-difference) (g$16476$1HvE18 core-prim . enum-set-constructor) (g$16475$1HvE18 core-prim . enum-set-complement) (g$16474$1HvE18 core-prim . enum-set->list) (g$8816$1HvE18 core-prim . who-condition?) (g$8727$1HvE18 core-prim . warning?) (g$8769$1HvE18 core-prim . violation?) (g$8893$1HvE18 core-prim . undefined-violation?) (g$8877$1HvE18 core-prim . syntax-violation?) (g$8879$1HvE18 core-prim . syntax-violation-subform) (g$8878$1HvE18 core-prim . syntax-violation-form) (g$10471$1HvE18 core-prim . syntax-violation) (g$16473$1HvE18 core-prim . simple-conditions) (g$8741$1HvE18 core-prim . serious-condition?) (g$8831$1HvE18 core-prim . non-continuable-violation?) (g$8712$1HvE18 core-prim . message-condition?) (g$8814$1HvE18 core-prim . make-who-condition) (g$8726$1HvE18 core-prim . make-warning) (g$8768$1HvE18 core-prim . make-violation) (g$8892$1HvE18 core-prim . make-undefined-violation) (g$8874$1HvE18 core-prim . make-syntax-violation) (g$8740$1HvE18 core-prim . make-serious-condition) (g$8830$1HvE18 core-prim . make-non-continuable-violation) (g$8710$1HvE18 core-prim . make-message-condition) (g$8858$1HvE18 core-prim . make-lexical-violation) (g$8797$1HvE18 core-prim . make-irritants-condition) (g$8844$1HvE18 core-prim . make-implementation-restriction-violation) (g$8754$1HvE18 core-prim . make-error) (g$8782$1HvE18 core-prim . make-assertion-violation) (g$8859$1HvE18 core-prim . lexical-violation?) (g$8799$1HvE18 core-prim . irritants-condition?) (g$8845$1HvE18 core-prim . implementation-restriction-violation?) (g$8755$1HvE18 core-prim . error?) (g$8817$1HvE18 core-prim . condition-who) (g$16472$1HvE18 core-prim . condition-predicate) (g$8713$1HvE18 core-prim . condition-message) (g$8800$1HvE18 core-prim . condition-irritants) (g$16471$1HvE18 core-prim . condition-accessor) (g$16470$1HvE18 core-prim . condition) (g$8783$1HvE18 core-prim . assertion-violation?) (g$16469$1HvE18 core-prim . condition?) (g$16468$1HvE18 core-prim . utf32->string) (g$16467$1HvE18 core-prim . utf16->string) (g$16466$1HvE18 core-prim . utf8->string) (g$16465$1HvE18 core-prim . uint-list->bytevector) (g$16464$1HvE18 core-prim . u8-list->bytevector) (g$16463$1HvE18 core-prim . string->utf8) (g$16462$1HvE18 core-prim . string->utf32) (g$16461$1HvE18 core-prim . string->utf16) (g$16460$1HvE18 core-prim . sint-list->bytevector) (g$8567$1HvE18 core-prim . native-endianness) (g$16459$1HvE18 core-prim . bytevector?) (g$16458$1HvE18 core-prim . bytevector=?) (g$16457$1HvE18 core-prim . bytevector-uint-set!) (g$16456$1HvE18 core-prim . bytevector-uint-ref) (g$16455$1HvE18 core-prim . bytevector-u8-set!) (g$16454$1HvE18 core-prim . bytevector-u8-ref) (g$8588$1HvE18 core-prim . bytevector-u64-set!) (g$8584$1HvE18 core-prim . bytevector-u64-ref) (g$8590$1HvE18 core-prim . bytevector-u64-native-set!) (g$8586$1HvE18 core-prim . bytevector-u64-native-ref) (g$8580$1HvE18 core-prim . bytevector-u32-set!) (g$8576$1HvE18 core-prim . bytevector-u32-ref) (g$8582$1HvE18 core-prim . bytevector-u32-native-set!) (g$8578$1HvE18 core-prim . bytevector-u32-native-ref) (g$8572$1HvE18 core-prim . bytevector-u16-set!) (g$8568$1HvE18 core-prim . bytevector-u16-ref) (g$8574$1HvE18 core-prim . bytevector-u16-native-set!) (g$8570$1HvE18 core-prim . bytevector-u16-native-ref) (g$16453$1HvE18 core-prim . bytevector-sint-set!) (g$16452$1HvE18 core-prim . bytevector-sint-ref) (g$16451$1HvE18 core-prim . bytevector-s8-set!) (g$16450$1HvE18 core-prim . bytevector-s8-ref) (g$8589$1HvE18 core-prim . bytevector-s64-set!) (g$8585$1HvE18 core-prim . bytevector-s64-ref) (g$8591$1HvE18 core-prim . bytevector-s64-native-set!) (g$8587$1HvE18 core-prim . bytevector-s64-native-ref) (g$8581$1HvE18 core-prim . bytevector-s32-set!) (g$8577$1HvE18 core-prim . bytevector-s32-ref) (g$8583$1HvE18 core-prim . bytevector-s32-native-set!) (g$8579$1HvE18 core-prim . bytevector-s32-native-ref) (g$8573$1HvE18 core-prim . bytevector-s16-set!) (g$8569$1HvE18 core-prim . bytevector-s16-ref) (g$8575$1HvE18 core-prim . bytevector-s16-native-set!) (g$8571$1HvE18 core-prim . bytevector-s16-native-ref) (g$16449$1HvE18 core-prim . bytevector-length) (g$16448$1HvE18 core-prim . bytevector-ieee-single-set!) (g$16447$1HvE18 core-prim . bytevector-ieee-single-ref) (g$8594$1HvE18 core-prim . bytevector-ieee-single-native-set!) (g$8592$1HvE18 core-prim . bytevector-ieee-single-native-ref) (g$16446$1HvE18 core-prim . bytevector-ieee-double-set!) (g$16445$1HvE18 core-prim . bytevector-ieee-double-ref) (g$8595$1HvE18 core-prim . bytevector-ieee-double-native-set!) (g$8593$1HvE18 core-prim . bytevector-ieee-double-native-ref) (g$16444$1HvE18 core-prim . bytevector-fill!) (g$16443$1HvE18 core-prim . bytevector-copy!) (g$16442$1HvE18 core-prim . bytevector-copy) (g$16441$1HvE18 core-prim . bytevector->uint-list) (g$16440$1HvE18 core-prim . bytevector->u8-list) (g$16439$1HvE18 core-prim . bytevector->sint-list) (g$9118$1HvE18 core-prim . no-nans-violation?) (g$9104$1HvE18 core-prim . no-infinities-violation?) (g$9117$1HvE18 core-prim . make-no-nans-violation) (g$9103$1HvE18 core-prim . make-no-infinities-violation) (g$16438$1HvE18 core-prim . real->flonum) (g$16437$1HvE18 core-prim . flzero?) (g$16436$1HvE18 core-prim . fltruncate) (g$16435$1HvE18 core-prim . fltan) (g$16434$1HvE18 core-prim . flsqrt) (g$16433$1HvE18 core-prim . flsin) (g$16432$1HvE18 core-prim . flround) (g$16431$1HvE18 core-prim . flpositive?) (g$16430$1HvE18 core-prim . flonum?) (g$16429$1HvE18 core-prim . flodd?) (g$16428$1HvE18 core-prim . flnumerator) (g$16427$1HvE18 core-prim . flnegative?) (g$16426$1HvE18 core-prim . flnan?) (g$16425$1HvE18 core-prim . flmod0) (g$16424$1HvE18 core-prim . flmod) (g$16423$1HvE18 core-prim . flmin) (g$16422$1HvE18 core-prim . flmax) (g$16421$1HvE18 core-prim . fllog) (g$16420$1HvE18 core-prim . flinteger?) (g$16419$1HvE18 core-prim . flinfinite?) (g$16418$1HvE18 core-prim . flfloor) (g$16417$1HvE18 core-prim . flfinite?) (g$16416$1HvE18 core-prim . flexpt) (g$16415$1HvE18 core-prim . flexp) (g$16414$1HvE18 core-prim . fleven?) (g$16413$1HvE18 core-prim . fldiv0-and-mod0) (g$16412$1HvE18 core-prim . fldiv0) (g$16411$1HvE18 core-prim . fldiv-and-mod) (g$16410$1HvE18 core-prim . fldiv) (g$16409$1HvE18 core-prim . fldenominator) (g$16408$1HvE18 core-prim . flcos) (g$16407$1HvE18 core-prim . flceiling) (g$16406$1HvE18 core-prim . flatan) (g$16405$1HvE18 core-prim . flasin) (g$16404$1HvE18 core-prim . flacos) (g$16403$1HvE18 core-prim . flabs) (g$16402$1HvE18 core-prim . fl>?) (g$16401$1HvE18 core-prim . fl>=?) (g$16400$1HvE18 core-prim . fl=?) (g$16399$1HvE18 core-prim . fl<?) (g$16398$1HvE18 core-prim . fl<=?) (g$16397$1HvE18 core-prim . fl/) (g$16396$1HvE18 core-prim . fl-) (g$16395$1HvE18 core-prim . fl+) (g$16394$1HvE18 core-prim . fl*) (g$16393$1HvE18 core-prim . fixnum->flonum) (g$16392$1HvE18 core-prim . fxzero?) (g$16391$1HvE18 core-prim . fxxor) (g$9049$1HvE18 core-prim . fxrotate-bit-field) (g$16390$1HvE18 core-prim . fxreverse-bit-field) (g$16389$1HvE18 core-prim . fxpositive?) (g$16388$1HvE18 core-prim . fxodd?) (g$16387$1HvE18 core-prim . fxnot) (g$16386$1HvE18 core-prim . fxnegative?) (g$16385$1HvE18 core-prim . fxmod0) (g$16384$1HvE18 core-prim . fxmod) (g$16383$1HvE18 core-prim . fxmin) (g$16382$1HvE18 core-prim . fxmax) (g$16381$1HvE18 core-prim . fxlength) (g$16380$1HvE18 core-prim . fxior) (g$9043$1HvE18 core-prim . fxif) (g$16379$1HvE18 core-prim . fxfirst-bit-set) (g$16378$1HvE18 core-prim . fxeven?) (g$16377$1HvE18 core-prim . fxdiv0-and-mod0) (g$16376$1HvE18 core-prim . fxdiv0) (g$16375$1HvE18 core-prim . fxdiv-and-mod) (g$16374$1HvE18 core-prim . fxdiv) (g$9046$1HvE18 core-prim . fxcopy-bit-field) (g$9044$1HvE18 core-prim . fxcopy-bit) (g$16373$1HvE18 core-prim . fxbit-set?) (g$9045$1HvE18 core-prim . fxbit-field) (g$16372$1HvE18 core-prim . fxbit-count) (g$9048$1HvE18 core-prim . fxarithmetic-shift-right) (g$9047$1HvE18 core-prim . fxarithmetic-shift-left) (g$16371$1HvE18 core-prim . fxarithmetic-shift) (g$16370$1HvE18 core-prim . fxand) (g$16369$1HvE18 core-prim . fx>?) (g$16368$1HvE18 core-prim . fx>=?) (g$16367$1HvE18 core-prim . fx=?) (g$16366$1HvE18 core-prim . fx<?) (g$16365$1HvE18 core-prim . fx<=?) (g$16364$1HvE18 core-prim . fx-/carry) (g$16363$1HvE18 core-prim . fx-) (g$16362$1HvE18 core-prim . fx+/carry) (g$16361$1HvE18 core-prim . fx+) (g$16360$1HvE18 core-prim . fx*/carry) (g$16359$1HvE18 core-prim . fx*) (g$16358$1HvE18 core-prim . greatest-fixnum) (g$16357$1HvE18 core-prim . least-fixnum) (g$16356$1HvE18 core-prim . fixnum-width) (g$16355$1HvE18 core-prim . fixnum?) (g$8997$1HvE18 core-prim . bitwise-rotate-bit-field) (g$8998$1HvE18 core-prim . bitwise-reverse-bit-field) (g$16354$1HvE18 core-prim . bitwise-length) (g$8991$1HvE18 core-prim . bitwise-if) (g$16353$1HvE18 core-prim . bitwise-first-bit-set) (g$8994$1HvE18 core-prim . bitwise-copy-bit-field) (g$8992$1HvE18 core-prim . bitwise-copy-bit) (g$16352$1HvE18 core-prim . bitwise-bit-set?) (g$16351$1HvE18 core-prim . bitwise-bit-field) (g$16350$1HvE18 core-prim . bitwise-bit-count) (g$16349$1HvE18 core-prim . bitwise-xor) (g$16348$1HvE18 core-prim . bitwise-ior) (g$16347$1HvE18 core-prim . bitwise-and) (g$16346$1HvE18 core-prim . bitwise-not) (g$8996$1HvE18 core-prim . bitwise-arithmetic-shift-right) (g$8995$1HvE18 core-prim . bitwise-arithmetic-shift-left) (g$16345$1HvE18 core-prim . bitwise-arithmetic-shift) (g$16344$1HvE18 core-prim . zero?) (g$16343$1HvE18 core-prim . vector?) (g$16342$1HvE18 core-prim . vector-set!) (g$16341$1HvE18 core-prim . vector-ref) (g$16340$1HvE18 core-prim . vector-map) (g$16339$1HvE18 core-prim . vector-length) (g$16338$1HvE18 core-prim . vector-for-each) (g$16337$1HvE18 core-prim . vector-fill!) (g$16336$1HvE18 core-prim . vector->list) (g$16335$1HvE18 core-prim . vector) (g$16334$1HvE18 core-prim . values) (g$16333$1HvE18 core-prim . truncate) (g$16332$1HvE18 core-prim . tan) (g$16331$1HvE18 core-prim . symbol?) (g$16330$1HvE18 core-prim . symbol=?) (g$16329$1HvE18 core-prim . symbol->string) (g$16328$1HvE18 core-prim . substring) (g$16327$1HvE18 core-prim . string?) (g$16326$1HvE18 core-prim . string>?) (g$16325$1HvE18 core-prim . string>=?) (g$16324$1HvE18 core-prim . string=?) (g$16323$1HvE18 core-prim . string<?) (g$16322$1HvE18 core-prim . string<=?) (g$16321$1HvE18 core-prim . string-ref) (g$16320$1HvE18 core-prim . string-length) (g$16319$1HvE18 core-prim . string-for-each) (g$16318$1HvE18 core-prim . string-copy) (g$16317$1HvE18 core-prim . string-append) (g$16316$1HvE18 core-prim . string->symbol) (g$16315$1HvE18 core-prim . string->number) (g$16314$1HvE18 core-prim . string->list) (g$16313$1HvE18 core-prim . string) (g$16312$1HvE18 core-prim . sqrt) (g$16311$1HvE18 core-prim . sin) (g$16310$1HvE18 core-prim . round) (g$16309$1HvE18 core-prim . reverse) (g$16308$1HvE18 core-prim . real?) (g$16307$1HvE18 core-prim . real-valued?) (g$16306$1HvE18 core-prim . real-part) (g$8070$1HvE18 core-prim . rationalize) (g$16305$1HvE18 core-prim . rational?) (g$16304$1HvE18 core-prim . rational-valued?) (g$16303$1HvE18 core-prim . procedure?) (g$16302$1HvE18 core-prim . positive?) (g$16301$1HvE18 core-prim . pair?) (g$16300$1HvE18 core-prim . odd?) (g$16299$1HvE18 core-prim . numerator) (g$16298$1HvE18 core-prim . number?) (g$16297$1HvE18 core-prim . number->string) (g$16296$1HvE18 core-prim . null?) (g$16295$1HvE18 core-prim . not) (g$16294$1HvE18 core-prim . negative?) (g$16293$1HvE18 core-prim . nan?) (g$16292$1HvE18 core-prim . min) (g$16291$1HvE18 core-prim . max) (g$16290$1HvE18 core-prim . map) (g$16289$1HvE18 core-prim . make-vector) (g$16288$1HvE18 core-prim . make-string) (g$16287$1HvE18 core-prim . make-rectangular) (g$16286$1HvE18 core-prim . make-polar) (g$16285$1HvE18 core-prim . magnitude) (g$16284$1HvE18 core-prim . log) (g$16283$1HvE18 core-prim . list?) (g$16282$1HvE18 core-prim . list-tail) (g$16281$1HvE18 core-prim . list-ref) (g$16280$1HvE18 core-prim . list->vector) (g$16279$1HvE18 core-prim . list->string) (g$16278$1HvE18 core-prim . list) (g$16277$1HvE18 core-prim . length) (g$16276$1HvE18 core-prim . lcm) (g$16275$1HvE18 core-prim . integer?) (g$16274$1HvE18 core-prim . integer-valued?) (g$16273$1HvE18 core-prim . integer->char) (g$16272$1HvE18 core-prim . infinite?) (g$16271$1HvE18 core-prim . inexact?) (g$16270$1HvE18 core-prim . inexact) (g$16269$1HvE18 core-prim . imag-part) (g$16268$1HvE18 core-prim . gcd) (g$16267$1HvE18 core-prim . for-each) (g$16266$1HvE18 core-prim . floor) (g$16265$1HvE18 core-prim . finite?) (g$16264$1HvE18 core-prim . expt) (g$16263$1HvE18 core-prim . exp) (g$16262$1HvE18 core-prim . exact?) (g$16261$1HvE18 core-prim . exact-integer-sqrt) (g$16260$1HvE18 core-prim . exact) (g$16259$1HvE18 core-prim . even?) (g$16258$1HvE18 core-prim . error) (g$16257$1HvE18 core-prim . eqv?) (g$16256$1HvE18 core-prim . equal?) (g$16255$1HvE18 core-prim . eq?) (g$16254$1HvE18 core-prim . dynamic-wind) (g$16253$1HvE18 core-prim . div0-and-mod0) (g$16252$1HvE18 core-prim . mod0) (g$16251$1HvE18 core-prim . div0) (g$16250$1HvE18 core-prim . div-and-mod) (g$16249$1HvE18 core-prim . mod) (g$16248$1HvE18 core-prim . div) (g$16247$1HvE18 core-prim . denominator) (g$16246$1HvE18 core-prim . cos) (g$16245$1HvE18 core-prim . cons) (g$16244$1HvE18 core-prim . complex?) (g$16243$1HvE18 core-prim . char?) (g$16242$1HvE18 core-prim . char>?) (g$16241$1HvE18 core-prim . char>=?) (g$16240$1HvE18 core-prim . char=?) (g$16239$1HvE18 core-prim . char<?) (g$16238$1HvE18 core-prim . char<=?) (g$16237$1HvE18 core-prim . char->integer) (g$16236$1HvE18 core-prim . ceiling) (g$16235$1HvE18 core-prim . call-with-values) (g$16234$1HvE18 core-prim . call/cc) (g$16233$1HvE18 core-prim . call-with-current-continuation) (g$8069$1HvE18 core-prim . cddddr) (g$8068$1HvE18 core-prim . cdddar) (g$8067$1HvE18 core-prim . cddadr) (g$8066$1HvE18 core-prim . cddaar) (g$8065$1HvE18 core-prim . cdaddr) (g$8064$1HvE18 core-prim . cdadar) (g$8063$1HvE18 core-prim . cdaadr) (g$8062$1HvE18 core-prim . cdaaar) (g$8061$1HvE18 core-prim . cadddr) (g$8060$1HvE18 core-prim . caddar) (g$8059$1HvE18 core-prim . cadadr) (g$8058$1HvE18 core-prim . cadaar) (g$8057$1HvE18 core-prim . caaddr) (g$8056$1HvE18 core-prim . caadar) (g$8055$1HvE18 core-prim . caaadr) (g$8054$1HvE18 core-prim . caaaar) (g$8053$1HvE18 core-prim . cdddr) (g$8052$1HvE18 core-prim . cddar) (g$8051$1HvE18 core-prim . cdadr) (g$8050$1HvE18 core-prim . cdaar) (g$8049$1HvE18 core-prim . caddr) (g$8048$1HvE18 core-prim . cadar) (g$8047$1HvE18 core-prim . caadr) (g$8046$1HvE18 core-prim . caaar) (g$8045$1HvE18 core-prim . cddr) (g$8044$1HvE18 core-prim . cdar) (g$8043$1HvE18 core-prim . cadr) (g$8042$1HvE18 core-prim . caar) (g$16232$1HvE18 core-prim . cdr) (g$16231$1HvE18 core-prim . car) (g$16230$1HvE18 core-prim . boolean?) (g$16229$1HvE18 core-prim . boolean=?) (g$16228$1HvE18 core-prim . atan) (g$16227$1HvE18 core-prim . assertion-violation) (g$16226$1HvE18 core-prim . asin) (g$16225$1HvE18 core-prim . apply) (g$16224$1HvE18 core-prim . append) (g$16223$1HvE18 core-prim . angle) (g$16222$1HvE18 core-prim . acos) (g$16221$1HvE18 core-prim . abs) (g$16220$1HvE18 core-prim . /) (g$16219$1HvE18 core-prim . *) (g$16218$1HvE18 core-prim . -) (g$16217$1HvE18 core-prim . +) (g$16216$1HvE18 core-prim . >=) (g$16215$1HvE18 core-prim . >) (g$16214$1HvE18 core-prim . =) (g$16213$1HvE18 core-prim . <=) (g$16212$1HvE18 core-prim . <) (g$16211$1HvE18 core-prim . make-record-printer) (g$16210$1HvE18 core-prim . vector-append) (g$16209$1HvE18 core-prim . vector-filter) (g$16208$1HvE18 core-prim . vector-reverse!) (g$16207$1HvE18 core-prim . vector-contains?) (g$16206$1HvE18 core-prim . vector-index-of) (g$16205$1HvE18 core-prim . vector-copy) (g$16204$1HvE18 core-prim . vector-binary-search) (g$16203$1HvE18 core-prim . get-output-string) (g$16202$1HvE18 core-prim . open-output-string) (g$16201$1HvE18 core-prim . open-input-string) (g$16200$1HvE18 core-prim . string-format) (g$16199$1HvE18 core-prim . make-traced-procedure) (g$16198$1HvE18 core-prim . pmap) (g$16197$1HvE18 core-prim . time-it) (g$9334$1HvE18 core-prim . make-parameter) (g$16196$1HvE18 core-prim . library-locator) (g$16195$1HvE18 core-prim . get-library-paths) (g$10451$1HvE18 core-prim . environment-symbols) (g$10450$1HvE18 core-prim . interaction-environment-symbols) (g$9559$1HvE18 core-prim . library-path) (g$9560$1HvE18 core-prim . library-extensions) (g$9580$1HvE18 core-prim . installed-libraries) (g$10456$1HvE18 core-prim . expand) (g$16194$1HvE18 $core-rtd &no-nans-rtd &no-nans-rcd) (g$16193$1HvE18 $core-rtd &no-infinities-rtd &no-infinities-rcd) (g$16192$1HvE18 $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd) (g$16191$1HvE18 $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd) (g$16190$1HvE18 $core-rtd &i/o-port-rtd &i/o-port-rcd) (g$16189$1HvE18 $core-rtd &i/o-file-does-not-exist-rtd &i/o-file-does-not-exist-rcd) (g$16188$1HvE18 $core-rtd &i/o-file-already-exists-rtd &i/o-file-already-exists-rcd) (g$16187$1HvE18 $core-rtd &i/o-file-is-read-only-rtd &i/o-fie-is-read-only-rcd) (g$16186$1HvE18 $core-rtd &i/o-file-protection-rtd &i/o-file-protection-rcd) (g$16185$1HvE18 $core-rtd &i/o-filename-rtd &i/o-filename-rcd) (g$16184$1HvE18 $core-rtd &i/o-invalid-position-rtd &i/o-invalid-position-rcd) (g$16183$1HvE18 $core-rtd &i/o-write-rtd &i/o-write-rcd) (g$16182$1HvE18 $core-rtd &i/o-read-rtd &i/o-read-rcd) (g$16181$1HvE18 $core-rtd &i/o-rtd &i/o-rcd) (g$16180$1HvE18 $core-rtd &non-continuable-rtd &non-continuable-rcd) (g$16179$1HvE18 $core-rtd &undefined-rtd &undefined-rcd) (g$16178$1HvE18 $core-rtd &syntax-rtd &syntax-rcd) (g$16177$1HvE18 $core-rtd &lexical-rtd &lexical-rcd) (g$16176$1HvE18 $core-rtd &implementation-restriction-rtd &implementation-restriction-rcd) (g$16175$1HvE18 $core-rtd &non-continuable-rtd &non-continuable-rcd) (g$16174$1HvE18 $core-rtd &who-rtd &who-rcd) (g$16173$1HvE18 $core-rtd &irritants-rtd &irritants-rcd) (g$16172$1HvE18 $core-rtd &assertion-rtd &assertion-rcd) (g$16171$1HvE18 $core-rtd &violation-rtd &violation-rcd) (g$16170$1HvE18 $core-rtd &error-rtd &error-rcd) (g$16169$1HvE18 $core-rtd &serious-rtd &serious-rcd) (g$16168$1HvE18 $core-rtd &warning-rtd &warning-rcd) (g$16167$1HvE18 $core-rtd &message-rtd &message-rcd) (g$16166$1HvE18 $core-rtd &condition-rtd &condition-rcd) (g$16165$1HvE18 macro . define-condition-type) (g$16164$1HvE18 macro . define-enumeration) (g$16163$1HvE18 macro . define-record-type) (g$16162$1HvE18 macro . parent-rtd) (g$16161$1HvE18 macro . nongenerative) (g$16160$1HvE18 macro . opaque) (g$16159$1HvE18 macro . sealed) (g$16158$1HvE18 macro . protocol) (g$16157$1HvE18 macro . parent) (g$16156$1HvE18 macro . immutable) (g$16155$1HvE18 macro . mutable) (g$16154$1HvE18 macro . fields) (g$16153$1HvE18 macro . error-handling-mode) (g$16152$1HvE18 macro . file-options) (g$16151$1HvE18 macro . buffer-mode) (g$16150$1HvE18 macro . eol-style) (g$16149$1HvE18 macro . guard) (g$16148$1HvE18 macro . trace-define-syntax) (g$16147$1HvE18 macro . trace-define) (g$16146$1HvE18 macro . trace-lambda) (g$16145$1HvE18 macro . unsyntax-splicing) (g$16144$1HvE18 macro . unsyntax) (g$16143$1HvE18 macro . unquote-splicing) (g$16142$1HvE18 macro . unquote) (g$16141$1HvE18 macro . _) (g$16140$1HvE18 macro . else) (g$16139$1HvE18 macro . =>) (g$16138$1HvE18 macro . ...) (g$16137$1HvE18 macro . assert) (g$16136$1HvE18 macro . endianness) (g$16135$1HvE18 macro . delay) (g$16134$1HvE18 macro . time) (g$16133$1HvE18 macro . or) (g$16132$1HvE18 macro . and) (g$16131$1HvE18 macro . do) (g$16130$1HvE18 macro . cond) (g$16129$1HvE18 macro . let*) (g$16128$1HvE18 macro . let) (g$16127$1HvE18 macro . identifier-syntax) (g$16126$1HvE18 macro . with-syntax) (g$16125$1HvE18 macro . quasisyntax) (g$16124$1HvE18 macro . quasiquote) (g$16123$1HvE18 macro . syntax-rules) (g$16122$1HvE18 macro . include-into) (g$16121$1HvE18 macro . include) (g$16120$1HvE18 macro . define-struct) (g$16119$1HvE18 macro . let-values) (g$16118$1HvE18 macro . let*-values) (g$16117$1HvE18 core-macro . record-constructor-descriptor) (g$16116$1HvE18 core-macro . record-type-descriptor) (g$16115$1HvE18 core-macro . fluid-let-syntax) (g$16114$1HvE18 core-macro . case) (g$16113$1HvE18 core-macro . parameterize) (g$16112$1HvE18 core-macro . unless) (g$16111$1HvE18 core-macro . when) (g$16110$1HvE18 core-macro . if) (g$16109$1HvE18 core-macro . letrec*) (g$16108$1HvE18 core-macro . letrec) (g$16107$1HvE18 core-macro . type-descriptor) (g$16106$1HvE18 core-macro . case-lambda) (g$16105$1HvE18 core-macro . lambda) (g$16104$1HvE18 core-macro . syntax) (g$16103$1HvE18 core-macro . syntax-case) (g$16102$1HvE18 core-macro . quote) (g$16101$1HvE18 core-macro . foreign-call) (g$16100$1HvE18 letrec-syntax) (g$16099$1HvE18 let-syntax) (g$16098$1HvE18 set!) (g$16097$1HvE18 import) (g$16096$1HvE18 library) (g$16095$1HvE18 begin) (g$16094$1HvE18 module) (g$16093$1HvE18 define-syntax) (g$16092$1HvE18 define)) values values '#f '#f '#f '#f) (g$install-library$9126$1HvE18 'g$16781$1HvE18 '(psyntax system $bootstrap) '() '() '() '() '((eval-core . g$16661$1HvE18) (set-symbol-value! . g$16660$1HvE18) (symbol-value . g$16659$1HvE18) (gensym . g$16657$1HvE18) (void . g$16656$1HvE18)) '() values values '#f '#f '#f '#f)))
(library-letrec* ((g$local-library-path$15807$1HvE18 g$local-library-path$15832$1HvE18 (case-lambda ((g$filename$15815$1HvE18) (cons (g$get-directory-name$7904$1HvE18 g$filename$15815$1HvE18) (g$library-path$9110$1HvE18))))) (g$load$15808$1HvE18 g$load$15833$1HvE18 (case-lambda ((g$filename$15816$1HvE18) (begin (g$load-r6rs-top-level$15814$1HvE18 g$filename$15816$1HvE18 'load) (void))))) (g$ironscheme-build$15809$1HvE18 g$ironscheme-build$15834$1HvE18 (case-lambda (() (g$load$15808$1HvE18 '"ironscheme-buildscript.ss")))) (g$eval-top-level$15810$1HvE18 g$eval-top-level$15835$1HvE18 (case-lambda ((g$x$15817$1HvE18) (g$eval$15786$1HvE18 g$x$15817$1HvE18 (g$interaction-environment$15805$1HvE18))))) (g$compile-system-libraries$15811$1HvE18 g$compile-system-libraries$15836$1HvE18 (case-lambda (() (g$eval-top-level$15810$1HvE18 '(begin (include "system-libraries.ss") (compile "system-libraries.ss")))))) (g$compile$15812$1HvE18 g$compile$15837$1HvE18 (case-lambda ((g$filename$15818$1HvE18) (g$load-r6rs-top-level$15814$1HvE18 g$filename$15818$1HvE18 'compile)))) (g$compile->closure$15813$1HvE18 g$compile->closure$15838$1HvE18 (case-lambda ((g$filename$15819$1HvE18) (g$load-r6rs-top-level$15814$1HvE18 g$filename$15819$1HvE18 'closure)))) (g$load-r6rs-top-level$15814$1HvE18 g$load-r6rs-top-level$15839$1HvE18 (case-lambda ((g$filename$15820$1HvE18 g$how$15821$1HvE18) ((case-lambda ((g$library-path$15824$1HvE18 g$library-path$15825$1HvE18) ((case-lambda ((g$swap$15826$1HvE18) (dynamic-wind g$swap$15826$1HvE18 (case-lambda (() ((case-lambda ((g$x*$15827$1HvE18) ((case-lambda ((g$t$15828$1HvE18) (if (memv g$t$15828$1HvE18 '(closure)) (g$compile-r6rs-top-level$15804$1HvE18 g$x*$15827$1HvE18) (if (memv g$t$15828$1HvE18 '(load)) ((g$compile-r6rs-top-level$15804$1HvE18 g$x*$15827$1HvE18)) (if (memv g$t$15828$1HvE18 '(compile)) (begin (g$compile-r6rs-top-level$15804$1HvE18 g$x*$15827$1HvE18) (g$serialize-all$9114$1HvE18 serialize-library g$compile-core-expr$8841$1HvE18)) (void)))))) g$how$15821$1HvE18))) (with-input-from-file g$filename$15820$1HvE18 (case-lambda (() ((letrec ((g$f$15829$1HvE18 (case-lambda (() ((case-lambda ((g$x$15830$1HvE18) (if (eof-object? g$x$15830$1HvE18) '() (cons g$x$15830$1HvE18 (g$f$15829$1HvE18))))) (read-annotated)))))) g$f$15829$1HvE18)))))))) g$swap$15826$1HvE18))) (case-lambda (() ((case-lambda ((g$t$15831$1HvE18) (begin (g$library-path$15824$1HvE18 g$library-path$15825$1HvE18) (set! g$library-path$15825$1HvE18 g$t$15831$1HvE18)))) (g$library-path$15824$1HvE18))))))) g$library-path$9110$1HvE18 (g$local-library-path$15807$1HvE18 g$filename$15820$1HvE18)))))) (begin (g$current-precompiled-library-loader$9115$1HvE18 load-serialized-library) (set-symbol-value! 'load g$load$15808$1HvE18) (set-symbol-value! 'compile g$compile$15812$1HvE18) (set-symbol-value! 'compile->closure g$compile->closure$15813$1HvE18) (set-symbol-value! 'eval-r6rs g$eval-top-level$15810$1HvE18) (set-symbol-value! 'int-env-syms g$interaction-environment-symbols$15779$1HvE18) (g$library-path$9110$1HvE18 (get-library-paths))))
