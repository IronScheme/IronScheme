;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4813$14YGsk
     g$caar$4886$14YGsk
     (case-lambda ((g$x$4844$14YGsk) (car (car g$x$4844$14YGsk)))))
   (g$cadr$4814$14YGsk
     g$cadr$4887$14YGsk
     (case-lambda ((g$x$4845$14YGsk) (car (cdr g$x$4845$14YGsk)))))
   (g$cdar$4815$14YGsk
     g$cdar$4888$14YGsk
     (case-lambda ((g$x$4846$14YGsk) (cdr (car g$x$4846$14YGsk)))))
   (g$cddr$4816$14YGsk
     g$cddr$4889$14YGsk
     (case-lambda ((g$x$4847$14YGsk) (cdr (cdr g$x$4847$14YGsk)))))
   (g$caaar$4817$14YGsk
     g$caaar$4890$14YGsk
     (case-lambda
       ((g$x$4848$14YGsk) (g$caar$4813$14YGsk (car g$x$4848$14YGsk)))))
   (g$caadr$4818$14YGsk
     g$caadr$4891$14YGsk
     (case-lambda
       ((g$x$4849$14YGsk) (g$caar$4813$14YGsk (cdr g$x$4849$14YGsk)))))
   (g$cadar$4819$14YGsk
     g$cadar$4892$14YGsk
     (case-lambda
       ((g$x$4850$14YGsk) (g$cadr$4814$14YGsk (car g$x$4850$14YGsk)))))
   (g$caddr$4820$14YGsk
     g$caddr$4893$14YGsk
     (case-lambda
       ((g$x$4851$14YGsk) (g$cadr$4814$14YGsk (cdr g$x$4851$14YGsk)))))
   (g$cdaar$4821$14YGsk
     g$cdaar$4894$14YGsk
     (case-lambda
       ((g$x$4852$14YGsk) (g$cdar$4815$14YGsk (car g$x$4852$14YGsk)))))
   (g$cdadr$4822$14YGsk
     g$cdadr$4895$14YGsk
     (case-lambda
       ((g$x$4853$14YGsk) (g$cdar$4815$14YGsk (cdr g$x$4853$14YGsk)))))
   (g$cddar$4823$14YGsk
     g$cddar$4896$14YGsk
     (case-lambda
       ((g$x$4854$14YGsk) (g$cddr$4816$14YGsk (car g$x$4854$14YGsk)))))
   (g$cdddr$4824$14YGsk
     g$cdddr$4897$14YGsk
     (case-lambda
       ((g$x$4855$14YGsk) (g$cddr$4816$14YGsk (cdr g$x$4855$14YGsk)))))
   (g$caaaar$4825$14YGsk
     g$caaaar$4898$14YGsk
     (case-lambda
       ((g$x$4856$14YGsk) (g$caaar$4817$14YGsk (car g$x$4856$14YGsk)))))
   (g$caaadr$4826$14YGsk
     g$caaadr$4899$14YGsk
     (case-lambda
       ((g$x$4857$14YGsk) (g$caaar$4817$14YGsk (cdr g$x$4857$14YGsk)))))
   (g$caadar$4827$14YGsk
     g$caadar$4900$14YGsk
     (case-lambda
       ((g$x$4858$14YGsk) (g$caadr$4818$14YGsk (car g$x$4858$14YGsk)))))
   (g$caaddr$4828$14YGsk
     g$caaddr$4901$14YGsk
     (case-lambda
       ((g$x$4859$14YGsk) (g$caadr$4818$14YGsk (cdr g$x$4859$14YGsk)))))
   (g$cadaar$4829$14YGsk
     g$cadaar$4902$14YGsk
     (case-lambda
       ((g$x$4860$14YGsk) (g$cadar$4819$14YGsk (car g$x$4860$14YGsk)))))
   (g$cadadr$4830$14YGsk
     g$cadadr$4903$14YGsk
     (case-lambda
       ((g$x$4861$14YGsk) (g$cadar$4819$14YGsk (cdr g$x$4861$14YGsk)))))
   (g$caddar$4831$14YGsk
     g$caddar$4904$14YGsk
     (case-lambda
       ((g$x$4862$14YGsk) (g$caddr$4820$14YGsk (car g$x$4862$14YGsk)))))
   (g$cadddr$4832$14YGsk
     g$cadddr$4905$14YGsk
     (case-lambda
       ((g$x$4863$14YGsk) (g$caddr$4820$14YGsk (cdr g$x$4863$14YGsk)))))
   (g$cdaaar$4833$14YGsk
     g$cdaaar$4906$14YGsk
     (case-lambda
       ((g$x$4864$14YGsk) (g$cdaar$4821$14YGsk (car g$x$4864$14YGsk)))))
   (g$cdaadr$4834$14YGsk
     g$cdaadr$4907$14YGsk
     (case-lambda
       ((g$x$4865$14YGsk) (g$cdaar$4821$14YGsk (cdr g$x$4865$14YGsk)))))
   (g$cdadar$4835$14YGsk
     g$cdadar$4908$14YGsk
     (case-lambda
       ((g$x$4866$14YGsk) (g$cdadr$4822$14YGsk (car g$x$4866$14YGsk)))))
   (g$cdaddr$4836$14YGsk
     g$cdaddr$4909$14YGsk
     (case-lambda
       ((g$x$4867$14YGsk) (g$cdadr$4822$14YGsk (cdr g$x$4867$14YGsk)))))
   (g$cddaar$4837$14YGsk
     g$cddaar$4910$14YGsk
     (case-lambda
       ((g$x$4868$14YGsk) (g$cddar$4823$14YGsk (car g$x$4868$14YGsk)))))
   (g$cddadr$4838$14YGsk
     g$cddadr$4911$14YGsk
     (case-lambda
       ((g$x$4869$14YGsk) (g$cddar$4823$14YGsk (cdr g$x$4869$14YGsk)))))
   (g$cdddar$4839$14YGsk
     g$cdddar$4912$14YGsk
     (case-lambda
       ((g$x$4870$14YGsk) (g$cdddr$4824$14YGsk (car g$x$4870$14YGsk)))))
   (g$cddddr$4840$14YGsk
     g$cddddr$4913$14YGsk
     (case-lambda
       ((g$x$4871$14YGsk) (g$cdddr$4824$14YGsk (cdr g$x$4871$14YGsk)))))
   (g$rationalize$4841$14YGsk
     g$rationalize$4914$14YGsk
     (case-lambda
       ((g$x$4872$14YGsk g$e$4873$14YGsk)
        (if (if (infinite? g$x$4872$14YGsk)
              (begin '#f (infinite? g$e$4873$14YGsk))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$4874$14YGsk)
              (if (if (exact? g$x$4872$14YGsk)
                    (begin '#f (exact? g$e$4873$14YGsk))
                    '#f)
                g$r$4874$14YGsk
                (inexact g$r$4874$14YGsk))))
           (apply
             /
             (g$find-ratio$4842$14YGsk g$x$4872$14YGsk g$e$4873$14YGsk)))))))
   (g$find-ratio$4842$14YGsk
     g$find-ratio$4915$14YGsk
     (case-lambda
       ((g$x$4875$14YGsk g$e$4876$14YGsk)
        (g$find-ratio-between$4843$14YGsk
          (- g$x$4875$14YGsk g$e$4876$14YGsk)
          (+ g$x$4875$14YGsk g$e$4876$14YGsk)))))
   (g$find-ratio-between$4843$14YGsk
     g$find-ratio-between$4916$14YGsk
     (case-lambda
       ((g$x$4877$14YGsk g$y$4878$14YGsk)
        (letrec* ((g$sr$4879$14YGsk
                    (case-lambda
                      ((g$x$4881$14YGsk g$y$4882$14YGsk)
                       ((case-lambda
                          ((g$fx$4883$14YGsk g$fy$4884$14YGsk)
                           (if (>= g$fx$4883$14YGsk g$x$4881$14YGsk)
                             (list g$fx$4883$14YGsk '1)
                             (if (= g$fx$4883$14YGsk g$fy$4884$14YGsk)
                               ((case-lambda
                                  ((g$rat$4885$14YGsk)
                                   (list
                                     (+ (g$cadr$4814$14YGsk g$rat$4885$14YGsk)
                                        (* g$fx$4883$14YGsk
                                           (car g$rat$4885$14YGsk)))
                                     (car g$rat$4885$14YGsk))))
                                (g$sr$4879$14YGsk
                                  (/ (- g$y$4882$14YGsk g$fy$4884$14YGsk))
                                  (/ (- g$x$4881$14YGsk g$fx$4883$14YGsk))))
                               (list (+ '1 g$fx$4883$14YGsk) '1)))))
                        (exact (floor g$x$4881$14YGsk))
                        (exact (floor g$y$4882$14YGsk)))))))
          (if (< g$y$4878$14YGsk g$x$4877$14YGsk)
            (g$find-ratio-between$4843$14YGsk g$y$4878$14YGsk g$x$4877$14YGsk)
            (if (>= g$x$4877$14YGsk g$y$4878$14YGsk)
              (list g$x$4877$14YGsk '1)
              (if (positive? g$x$4877$14YGsk)
                (g$sr$4879$14YGsk g$x$4877$14YGsk g$y$4878$14YGsk)
                (if (negative? g$y$4878$14YGsk)
                  ((case-lambda
                     ((g$rat$4880$14YGsk)
                      (list
                        (- (car g$rat$4880$14YGsk))
                        (g$cadr$4814$14YGsk g$rat$4880$14YGsk))))
                   (g$sr$4879$14YGsk (- g$y$4878$14YGsk) (- g$x$4877$14YGsk)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5112$14YGsk g$using$5147$14YGsk (clr-using-internal 'system))
   (g$using$5114$14YGsk
     g$using$5148$14YGsk
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5115$14YGsk
     g$make-eq-hashtable$5149$14YGsk
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5126$14YGsk)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5126$14YGsk)))))
   (g$make-eqv-hashtable$5116$14YGsk
     g$make-eqv-hashtable$5150$14YGsk
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5127$14YGsk) (make-hashtable eqv-hash eqv? g$k$5127$14YGsk))))
   (g$hashtable-size$5117$14YGsk
     g$hashtable-size$5151$14YGsk
     (case-lambda
       ((g$ht$5128$14YGsk)
        (clr-call-internal 'hashtable 'get_count g$ht$5128$14YGsk))))
   (g$hashtable-ref$5118$14YGsk
     g$hashtable-ref$5152$14YGsk
     (case-lambda
       ((g$ht$5129$14YGsk g$key$5130$14YGsk g$default$5131$14YGsk)
        (letrec* ((g$r$5132$14YGsk
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5129$14YGsk
                      g$key$5130$14YGsk)))
          (if (not (null? g$r$5132$14YGsk))
            g$r$5132$14YGsk
            g$default$5131$14YGsk)))))
   (g$hashtable-set!$5119$14YGsk
     g$hashtable-set!$5153$14YGsk
     (case-lambda
       ((g$ht$5133$14YGsk g$key$5134$14YGsk g$obj$5135$14YGsk)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5133$14YGsk
          g$key$5134$14YGsk
          g$obj$5135$14YGsk))))
   (g$hashtable-delete!$5120$14YGsk
     g$hashtable-delete!$5154$14YGsk
     (case-lambda
       ((g$ht$5136$14YGsk g$key$5137$14YGsk)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5136$14YGsk
          g$key$5137$14YGsk))))
   (g$hashtable-contains?$5121$14YGsk
     g$hashtable-contains?$5155$14YGsk
     (case-lambda
       ((g$ht$5138$14YGsk g$key$5139$14YGsk)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5138$14YGsk
          g$key$5139$14YGsk))))
   (g$hashtable-update!$5122$14YGsk
     g$hashtable-update!$5156$14YGsk
     (case-lambda
       ((g$ht$5140$14YGsk
          g$key$5141$14YGsk
          g$proc$5142$14YGsk
          g$default$5143$14YGsk)
        (g$hashtable-set!$5119$14YGsk
          g$ht$5140$14YGsk
          g$key$5141$14YGsk
          (g$proc$5142$14YGsk
            (g$hashtable-ref$5118$14YGsk
              g$ht$5140$14YGsk
              g$key$5141$14YGsk
              g$default$5143$14YGsk))))))
   (g$hashtable-clear!$5123$14YGsk
     g$hashtable-clear!$5157$14YGsk
     (case-lambda
       ((g$ht$5144$14YGsk)
        (clr-call-internal 'hashtable 'clear g$ht$5144$14YGsk))
       ((g$ht$5145$14YGsk g$k$5146$14YGsk)
        (clr-call-internal 'hashtable 'clear g$ht$5145$14YGsk))))
   (g$clear-usings$5125$14YGsk
     g$clear-usings$5158$14YGsk
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5160$14YGsk
     g$using$5226$14YGsk
     (clr-using-internal 'system.io))
   (g$file-exists?$5161$14YGsk
     g$file-exists?$5227$14YGsk
     (case-lambda
       ((g$fn$5189$14YGsk)
        (clr-call-internal 'file 'exists '() g$fn$5189$14YGsk))))
   (g$delete-file$5162$14YGsk
     g$delete-file$5228$14YGsk
     (case-lambda
       ((g$fn$5190$14YGsk)
        (clr-call-internal 'file 'delete '() g$fn$5190$14YGsk))))
   (g$file-copy$5163$14YGsk
     g$file-copy$5229$14YGsk
     (case-lambda
       ((g$from$5191$14YGsk g$to$5192$14YGsk)
        (g$file-copy$5163$14YGsk g$from$5191$14YGsk g$to$5192$14YGsk '#f))
       ((g$from$5193$14YGsk g$to$5194$14YGsk g$overwrite?$5195$14YGsk)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5193$14YGsk
          g$to$5194$14YGsk
          g$overwrite?$5195$14YGsk))))
   (g$file-move$5164$14YGsk
     g$file-move$5230$14YGsk
     (case-lambda
       ((g$from$5196$14YGsk g$to$5197$14YGsk)
        (clr-call-internal
          'file
          'move
          '()
          g$from$5196$14YGsk
          g$to$5197$14YGsk))))
   (g$file-create-time$5165$14YGsk
     g$file-create-time$5231$14YGsk
     (case-lambda
       ((g$fn$5198$14YGsk)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5198$14YGsk))))
   (g$file-access-time$5166$14YGsk
     g$file-access-time$5232$14YGsk
     (case-lambda
       ((g$fn$5199$14YGsk)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5199$14YGsk))))
   (g$file-modified-time$5167$14YGsk
     g$file-modified-time$5233$14YGsk
     (case-lambda
       ((g$fn$5200$14YGsk)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5200$14YGsk))))
   (g$directory-exists?$5168$14YGsk
     g$directory-exists?$5234$14YGsk
     (case-lambda
       ((g$fn$5201$14YGsk)
        (clr-call-internal 'directory 'exists '() g$fn$5201$14YGsk))))
   (g$delete-directory$5169$14YGsk
     g$delete-directory$5235$14YGsk
     (case-lambda
       ((g$dir$5202$14YGsk)
        (g$delete-directory$5169$14YGsk g$dir$5202$14YGsk '#f))
       ((g$dir$5203$14YGsk g$recursive?$5204$14YGsk)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5203$14YGsk
          g$recursive?$5204$14YGsk))))
   (g$directory-move$5170$14YGsk
     g$directory-move$5236$14YGsk
     (case-lambda
       ((g$from$5205$14YGsk g$to$5206$14YGsk)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5205$14YGsk
          g$to$5206$14YGsk))))
   (g$create-directory$5171$14YGsk
     g$create-directory$5237$14YGsk
     (case-lambda
       ((g$name$5207$14YGsk)
        (clr-call-internal
          'directory
          'createdirectory
          '()
          g$name$5207$14YGsk))))
   (g$get-files$5172$14YGsk
     g$get-files$5238$14YGsk
     (case-lambda
       ((g$dir$5208$14YGsk) (g$get-files$5172$14YGsk g$dir$5208$14YGsk '"*"))
       ((g$dir$5209$14YGsk g$pattern$5210$14YGsk)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5209$14YGsk
          g$pattern$5210$14YGsk))))
   (g$get-directories$5173$14YGsk
     g$get-directories$5239$14YGsk
     (case-lambda
       ((g$dir$5211$14YGsk)
        (g$get-directories$5173$14YGsk g$dir$5211$14YGsk '"*"))
       ((g$dir$5212$14YGsk g$pattern$5213$14YGsk)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5212$14YGsk
          g$pattern$5213$14YGsk))))
   (g$change-extension$5174$14YGsk
     g$change-extension$5240$14YGsk
     (case-lambda
       ((g$path$5214$14YGsk g$extension$5215$14YGsk)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5214$14YGsk
          g$extension$5215$14YGsk))))
   (g$path-combine$5175$14YGsk
     g$path-combine$5241$14YGsk
     (case-lambda
       ((g$path1$5216$14YGsk g$path2$5217$14YGsk)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5216$14YGsk
          g$path2$5217$14YGsk))))
   (g$get-directory-name$5176$14YGsk
     g$get-directory-name$5242$14YGsk
     (case-lambda
       ((g$path$5218$14YGsk)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5218$14YGsk))))
   (g$get-extension$5177$14YGsk
     g$get-extension$5243$14YGsk
     (case-lambda
       ((g$path$5219$14YGsk)
        (clr-call-internal 'path 'getextension '() g$path$5219$14YGsk))))
   (g$get-filename$5178$14YGsk
     g$get-filename$5244$14YGsk
     (case-lambda
       ((g$path$5220$14YGsk)
        (clr-call-internal 'path 'getfilename '() g$path$5220$14YGsk))))
   (g$get-filename-without-extension$5179$14YGsk
     g$get-filename-without-extension$5245$14YGsk
     (case-lambda
       ((g$path$5221$14YGsk)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5221$14YGsk))))
   (g$get-full-path$5180$14YGsk
     g$get-full-path$5246$14YGsk
     (case-lambda
       ((g$path$5222$14YGsk)
        (clr-call-internal 'path 'getfullpath '() g$path$5222$14YGsk))))
   (g$get-path-root$5181$14YGsk
     g$get-path-root$5247$14YGsk
     (case-lambda
       ((g$path$5223$14YGsk)
        (clr-call-internal 'path 'getpathroot '() g$path$5223$14YGsk))))
   (g$get-random-filename$5182$14YGsk
     g$get-random-filename$5248$14YGsk
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5183$14YGsk
     g$get-temp-filename$5249$14YGsk
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5184$14YGsk
     g$get-temp-path$5250$14YGsk
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5185$14YGsk
     g$path-rooted?$5251$14YGsk
     (case-lambda
       ((g$path$5224$14YGsk)
        (clr-call-internal 'path 'ispathrooted '() g$path$5224$14YGsk))))
   (g$path-has-extension?$5186$14YGsk
     g$path-has-extension?$5252$14YGsk
     (case-lambda
       ((g$path$5225$14YGsk)
        (clr-call-internal 'path 'hasextension '() g$path$5225$14YGsk))))
   (g$clear-usings$5188$14YGsk
     g$clear-usings$5253$14YGsk
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5254$14YGsk
     g$find$5345$14YGsk
     (case-lambda
       ((g$proc$5273$14YGsk g$l$5274$14YGsk)
        (if (null? g$l$5274$14YGsk)
          '#f
          ((case-lambda
             ((g$e$5275$14YGsk)
              (if (g$proc$5273$14YGsk g$e$5275$14YGsk)
                g$e$5275$14YGsk
                (g$find$5254$14YGsk g$proc$5273$14YGsk (cdr g$l$5274$14YGsk)))))
           (car g$l$5274$14YGsk))))))
   (g$partition$5255$14YGsk
     g$partition$5346$14YGsk
     (case-lambda
       ((g$proc$5276$14YGsk g$l$5277$14YGsk)
        ((letrec ((g$f$5278$14YGsk
                    (case-lambda
                      ((g$l$5279$14YGsk g$a$5280$14YGsk g$b$5281$14YGsk)
                       (if (null? g$l$5279$14YGsk)
                         (values
                           (reverse! g$a$5280$14YGsk)
                           (reverse! g$b$5281$14YGsk))
                         ((case-lambda
                            ((g$e$5282$14YGsk)
                             (if (g$proc$5276$14YGsk g$e$5282$14YGsk)
                               (g$f$5278$14YGsk
                                 (cdr g$l$5279$14YGsk)
                                 (cons g$e$5282$14YGsk g$a$5280$14YGsk)
                                 g$b$5281$14YGsk)
                               (g$f$5278$14YGsk
                                 (cdr g$l$5279$14YGsk)
                                 g$a$5280$14YGsk
                                 (cons g$e$5282$14YGsk g$b$5281$14YGsk)))))
                          (car g$l$5279$14YGsk)))))))
           g$f$5278$14YGsk)
         g$l$5277$14YGsk
         '()
         '()))))
   (g$remp$5256$14YGsk
     g$remp$5347$14YGsk
     (case-lambda
       ((g$proc$5283$14YGsk g$l$5284$14YGsk)
        ((letrec ((g$f$5285$14YGsk
                    (case-lambda
                      ((g$l$5286$14YGsk g$a$5287$14YGsk)
                       (if (null? g$l$5286$14YGsk)
                         (reverse! g$a$5287$14YGsk)
                         ((case-lambda
                            ((g$e$5288$14YGsk)
                             (if (g$proc$5283$14YGsk g$e$5288$14YGsk)
                               (g$f$5285$14YGsk
                                 (cdr g$l$5286$14YGsk)
                                 g$a$5287$14YGsk)
                               (g$f$5285$14YGsk
                                 (cdr g$l$5286$14YGsk)
                                 (cons g$e$5288$14YGsk g$a$5287$14YGsk)))))
                          (car g$l$5286$14YGsk)))))))
           g$f$5285$14YGsk)
         g$l$5284$14YGsk
         '()))))
   (g$filter$5257$14YGsk
     g$filter$5348$14YGsk
     (case-lambda
       ((g$proc$5289$14YGsk g$l$5290$14YGsk)
        ((letrec ((g$f$5291$14YGsk
                    (case-lambda
                      ((g$l$5292$14YGsk g$a$5293$14YGsk)
                       (if (null? g$l$5292$14YGsk)
                         (reverse! g$a$5293$14YGsk)
                         ((case-lambda
                            ((g$e$5294$14YGsk)
                             (if (g$proc$5289$14YGsk g$e$5294$14YGsk)
                               (g$f$5291$14YGsk
                                 (cdr g$l$5292$14YGsk)
                                 (cons g$e$5294$14YGsk g$a$5293$14YGsk))
                               (g$f$5291$14YGsk
                                 (cdr g$l$5292$14YGsk)
                                 g$a$5293$14YGsk))))
                          (car g$l$5292$14YGsk)))))))
           g$f$5291$14YGsk)
         g$l$5290$14YGsk
         '()))))
   (g$assv$5258$14YGsk
     g$assv$5349$14YGsk
     (case-lambda
       ((g$obj$5295$14YGsk g$lst$5296$14YGsk)
        (if (null? g$lst$5296$14YGsk)
          '#f
          ((case-lambda
             ((g$c$5297$14YGsk)
              (if (eqv? g$obj$5295$14YGsk (car g$c$5297$14YGsk))
                g$c$5297$14YGsk
                (g$assv$5258$14YGsk
                  g$obj$5295$14YGsk
                  (cdr g$lst$5296$14YGsk)))))
           (car g$lst$5296$14YGsk))))))
   (g$assoc$5259$14YGsk
     g$assoc$5350$14YGsk
     (case-lambda
       ((g$obj$5298$14YGsk g$lst$5299$14YGsk)
        (if (null? g$lst$5299$14YGsk)
          '#f
          ((case-lambda
             ((g$c$5300$14YGsk)
              (if (equal? g$obj$5298$14YGsk (car g$c$5300$14YGsk))
                g$c$5300$14YGsk
                (g$assoc$5259$14YGsk
                  g$obj$5298$14YGsk
                  (cdr g$lst$5299$14YGsk)))))
           (car g$lst$5299$14YGsk))))))
   (g$assp$5260$14YGsk
     g$assp$5351$14YGsk
     (case-lambda
       ((g$p?$5301$14YGsk g$lst$5302$14YGsk)
        (if (null? g$lst$5302$14YGsk)
          '#f
          ((case-lambda
             ((g$c$5303$14YGsk)
              (if (g$p?$5301$14YGsk (car g$c$5303$14YGsk))
                g$c$5303$14YGsk
                (g$assp$5260$14YGsk g$p?$5301$14YGsk (cdr g$lst$5302$14YGsk)))))
           (car g$lst$5302$14YGsk))))))
   (g$member$5261$14YGsk
     g$member$5352$14YGsk
     (case-lambda
       ((g$obj$5304$14YGsk g$lst$5305$14YGsk)
        (if (null? g$lst$5305$14YGsk)
          '#f
          (if (equal? g$obj$5304$14YGsk (car g$lst$5305$14YGsk))
            g$lst$5305$14YGsk
            (g$member$5261$14YGsk
              g$obj$5304$14YGsk
              (cdr g$lst$5305$14YGsk)))))))
   (g$memp$5262$14YGsk
     g$memp$5353$14YGsk
     (case-lambda
       ((g$p?$5306$14YGsk g$lst$5307$14YGsk)
        (if (null? g$lst$5307$14YGsk)
          '#f
          (if (g$p?$5306$14YGsk (car g$lst$5307$14YGsk))
            g$lst$5307$14YGsk
            (g$memp$5262$14YGsk g$p?$5306$14YGsk (cdr g$lst$5307$14YGsk)))))))
   (g$all-empty?$5263$14YGsk
     g$all-empty?$5354$14YGsk
     (case-lambda
       ((g$ls$5308$14YGsk)
        ((case-lambda
           ((g$t$5309$14YGsk)
            (if g$t$5309$14YGsk
              g$t$5309$14YGsk
              (begin
                '#f
                (if (null? (car g$ls$5308$14YGsk))
                  (begin '#f (g$all-empty?$5263$14YGsk (cdr g$ls$5308$14YGsk)))
                  '#f)))))
         (null? g$ls$5308$14YGsk)))))
   (g$split$5264$14YGsk
     g$split$5355$14YGsk
     (case-lambda
       ((g$ls$5310$14YGsk)
        (if (null? g$ls$5310$14YGsk)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5264$14YGsk (cdr g$ls$5310$14YGsk))))
            (case-lambda
              ((g$cars$5311$14YGsk g$cdrs$5312$14YGsk)
               ((case-lambda
                  ((g$a$5313$14YGsk)
                   (values
                     (cons (car g$a$5313$14YGsk) g$cars$5311$14YGsk)
                     (cons (cdr g$a$5313$14YGsk) g$cdrs$5312$14YGsk))))
                (car g$ls$5310$14YGsk)))))))))
   (g$for-all$5265$14YGsk
     g$for-all$5356$14YGsk
     (case-lambda
       ((g$f$5314$14YGsk . g$args$5315$14YGsk)
        (if (g$all-empty?$5263$14YGsk g$args$5315$14YGsk)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5264$14YGsk g$args$5315$14YGsk)))
            (case-lambda
              ((g$cars$5316$14YGsk g$cdrs$5317$14YGsk)
               (if (g$all-empty?$5263$14YGsk g$cdrs$5317$14YGsk)
                 (apply g$f$5314$14YGsk g$cars$5316$14YGsk)
                 (if (apply g$f$5314$14YGsk g$cars$5316$14YGsk)
                   (begin
                     '#f
                     (apply
                       g$for-all$5265$14YGsk
                       g$f$5314$14YGsk
                       g$cdrs$5317$14YGsk))
                   '#f)))))))))
   (g$exists$5266$14YGsk
     g$exists$5357$14YGsk
     (case-lambda
       ((g$f$5318$14YGsk . g$args$5319$14YGsk)
        (if (g$all-empty?$5263$14YGsk g$args$5319$14YGsk)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5264$14YGsk g$args$5319$14YGsk)))
            (case-lambda
              ((g$cars$5320$14YGsk g$cdrs$5321$14YGsk)
               ((case-lambda
                  ((g$t$5322$14YGsk)
                   (if g$t$5322$14YGsk
                     g$t$5322$14YGsk
                     (begin
                       '#f
                       (apply
                         g$exists$5266$14YGsk
                         g$f$5318$14YGsk
                         g$cdrs$5321$14YGsk)))))
                (apply g$f$5318$14YGsk g$cars$5320$14YGsk)))))))))
   (g$cons*$5267$14YGsk
     g$cons*$5358$14YGsk
     (case-lambda
       ((g$a$5323$14YGsk . g$rest$5324$14YGsk)
        ((letrec ((g$f$5325$14YGsk
                    (case-lambda
                      ((g$a$5326$14YGsk g$rest$5327$14YGsk)
                       (if (null? g$rest$5327$14YGsk)
                         g$a$5326$14YGsk
                         (cons
                           g$a$5326$14YGsk
                           (g$f$5325$14YGsk
                             (car g$rest$5327$14YGsk)
                             (cdr g$rest$5327$14YGsk))))))))
           g$f$5325$14YGsk)
         g$a$5323$14YGsk
         g$rest$5324$14YGsk))))
   (g$fold-left$5268$14YGsk
     g$fold-left$5359$14YGsk
     (case-lambda
       ((g$combine$5328$14YGsk
          g$nil$5329$14YGsk
          g$list1$5330$14YGsk
          .
          g$lists$5331$14YGsk)
        (if (null? g$list1$5330$14YGsk)
          g$nil$5329$14YGsk
          (apply
            g$fold-left$5268$14YGsk
            (g$cons*$5267$14YGsk
              g$combine$5328$14YGsk
              (apply
                g$combine$5328$14YGsk
                (g$cons*$5267$14YGsk
                  g$nil$5329$14YGsk
                  (car g$list1$5330$14YGsk)
                  (map car g$lists$5331$14YGsk)))
              (cdr g$list1$5330$14YGsk)
              (map cdr g$lists$5331$14YGsk)))))))
   (g$fold-right$5269$14YGsk
     g$fold-right$5360$14YGsk
     (case-lambda
       ((g$combine$5332$14YGsk
          g$nil$5333$14YGsk
          g$list1$5334$14YGsk
          .
          g$lists$5335$14YGsk)
        (if (null? g$list1$5334$14YGsk)
          g$nil$5333$14YGsk
          (apply
            g$combine$5332$14YGsk
            (append
              (list (car g$list1$5334$14YGsk))
              (map car g$lists$5335$14YGsk)
              (list
                (apply
                  g$fold-right$5269$14YGsk
                  (g$cons*$5267$14YGsk
                    g$combine$5332$14YGsk
                    g$nil$5333$14YGsk
                    (cdr g$list1$5334$14YGsk)
                    (map cdr g$lists$5335$14YGsk))))))))))
   (g$remove$5270$14YGsk
     g$remove$5361$14YGsk
     (case-lambda
       ((g$obj$5336$14YGsk g$list$5337$14YGsk)
        (g$remp$5256$14YGsk
          (case-lambda
            ((g$x$5338$14YGsk) (equal? g$obj$5336$14YGsk g$x$5338$14YGsk)))
          g$list$5337$14YGsk))))
   (g$remv$5271$14YGsk
     g$remv$5362$14YGsk
     (case-lambda
       ((g$obj$5339$14YGsk g$list$5340$14YGsk)
        (g$remp$5256$14YGsk
          (case-lambda
            ((g$x$5341$14YGsk) (eqv? g$obj$5339$14YGsk g$x$5341$14YGsk)))
          g$list$5340$14YGsk))))
   (g$remq$5272$14YGsk
     g$remq$5363$14YGsk
     (case-lambda
       ((g$obj$5342$14YGsk g$list$5343$14YGsk)
        (g$remp$5256$14YGsk
          (case-lambda
            ((g$x$5344$14YGsk) (eq? g$obj$5342$14YGsk g$x$5344$14YGsk)))
          g$list$5343$14YGsk)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5364$14YGsk
     g$native-endianness$5475$14YGsk
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5365$14YGsk
     g$bytevector-u16-ref$5476$14YGsk
     (case-lambda
       ((g$bytevector$5393$14YGsk g$k$5394$14YGsk g$endianness$5395$14YGsk)
        (bytevector-uint-ref
          g$bytevector$5393$14YGsk
          g$k$5394$14YGsk
          g$endianness$5395$14YGsk
          '2))))
   (g$bytevector-s16-ref$5366$14YGsk
     g$bytevector-s16-ref$5477$14YGsk
     (case-lambda
       ((g$bytevector$5396$14YGsk g$k$5397$14YGsk g$endianness$5398$14YGsk)
        (bytevector-sint-ref
          g$bytevector$5396$14YGsk
          g$k$5397$14YGsk
          g$endianness$5398$14YGsk
          '2))))
   (g$bytevector-u16-native-ref$5367$14YGsk
     g$bytevector-u16-native-ref$5478$14YGsk
     (case-lambda
       ((g$bytevector$5399$14YGsk g$k$5400$14YGsk)
        (bytevector-uint-ref
          g$bytevector$5399$14YGsk
          g$k$5400$14YGsk
          (g$native-endianness$5364$14YGsk)
          '2))))
   (g$bytevector-s16-native-ref$5368$14YGsk
     g$bytevector-s16-native-ref$5479$14YGsk
     (case-lambda
       ((g$bytevector$5401$14YGsk g$k$5402$14YGsk)
        (bytevector-sint-ref
          g$bytevector$5401$14YGsk
          g$k$5402$14YGsk
          (g$native-endianness$5364$14YGsk)
          '2))))
   (g$bytevector-u16-set!$5369$14YGsk
     g$bytevector-u16-set!$5480$14YGsk
     (case-lambda
       ((g$bytevector$5403$14YGsk
          g$k$5404$14YGsk
          g$n$5405$14YGsk
          g$endianness$5406$14YGsk)
        (bytevector-uint-set!
          g$bytevector$5403$14YGsk
          g$k$5404$14YGsk
          g$n$5405$14YGsk
          g$endianness$5406$14YGsk
          '2))))
   (g$bytevector-s16-set!$5370$14YGsk
     g$bytevector-s16-set!$5481$14YGsk
     (case-lambda
       ((g$bytevector$5407$14YGsk
          g$k$5408$14YGsk
          g$n$5409$14YGsk
          g$endianness$5410$14YGsk)
        (bytevector-sint-set!
          g$bytevector$5407$14YGsk
          g$k$5408$14YGsk
          g$n$5409$14YGsk
          g$endianness$5410$14YGsk
          '2))))
   (g$bytevector-u16-native-set!$5371$14YGsk
     g$bytevector-u16-native-set!$5482$14YGsk
     (case-lambda
       ((g$bytevector$5411$14YGsk g$k$5412$14YGsk g$n$5413$14YGsk)
        (bytevector-uint-set!
          g$bytevector$5411$14YGsk
          g$k$5412$14YGsk
          g$n$5413$14YGsk
          (g$native-endianness$5364$14YGsk)
          '2))))
   (g$bytevector-s16-native-set!$5372$14YGsk
     g$bytevector-s16-native-set!$5483$14YGsk
     (case-lambda
       ((g$bytevector$5414$14YGsk g$k$5415$14YGsk g$n$5416$14YGsk)
        (bytevector-sint-set!
          g$bytevector$5414$14YGsk
          g$k$5415$14YGsk
          g$n$5416$14YGsk
          (g$native-endianness$5364$14YGsk)
          '2))))
   (g$bytevector-u32-ref$5373$14YGsk
     g$bytevector-u32-ref$5484$14YGsk
     (case-lambda
       ((g$bytevector$5417$14YGsk g$k$5418$14YGsk g$endianness$5419$14YGsk)
        (bytevector-uint-ref
          g$bytevector$5417$14YGsk
          g$k$5418$14YGsk
          g$endianness$5419$14YGsk
          '4))))
   (g$bytevector-s32-ref$5374$14YGsk
     g$bytevector-s32-ref$5485$14YGsk
     (case-lambda
       ((g$bytevector$5420$14YGsk g$k$5421$14YGsk g$endianness$5422$14YGsk)
        (bytevector-sint-ref
          g$bytevector$5420$14YGsk
          g$k$5421$14YGsk
          g$endianness$5422$14YGsk
          '4))))
   (g$bytevector-u32-native-ref$5375$14YGsk
     g$bytevector-u32-native-ref$5486$14YGsk
     (case-lambda
       ((g$bytevector$5423$14YGsk g$k$5424$14YGsk)
        (bytevector-uint-ref
          g$bytevector$5423$14YGsk
          g$k$5424$14YGsk
          (g$native-endianness$5364$14YGsk)
          '4))))
   (g$bytevector-s32-native-ref$5376$14YGsk
     g$bytevector-s32-native-ref$5487$14YGsk
     (case-lambda
       ((g$bytevector$5425$14YGsk g$k$5426$14YGsk)
        (bytevector-sint-ref
          g$bytevector$5425$14YGsk
          g$k$5426$14YGsk
          (g$native-endianness$5364$14YGsk)
          '4))))
   (g$bytevector-u32-set!$5377$14YGsk
     g$bytevector-u32-set!$5488$14YGsk
     (case-lambda
       ((g$bytevector$5427$14YGsk
          g$k$5428$14YGsk
          g$n$5429$14YGsk
          g$endianness$5430$14YGsk)
        (bytevector-uint-set!
          g$bytevector$5427$14YGsk
          g$k$5428$14YGsk
          g$n$5429$14YGsk
          g$endianness$5430$14YGsk
          '4))))
   (g$bytevector-s32-set!$5378$14YGsk
     g$bytevector-s32-set!$5489$14YGsk
     (case-lambda
       ((g$bytevector$5431$14YGsk
          g$k$5432$14YGsk
          g$n$5433$14YGsk
          g$endianness$5434$14YGsk)
        (bytevector-sint-set!
          g$bytevector$5431$14YGsk
          g$k$5432$14YGsk
          g$n$5433$14YGsk
          g$endianness$5434$14YGsk
          '4))))
   (g$bytevector-u32-native-set!$5379$14YGsk
     g$bytevector-u32-native-set!$5490$14YGsk
     (case-lambda
       ((g$bytevector$5435$14YGsk g$k$5436$14YGsk g$n$5437$14YGsk)
        (bytevector-uint-set!
          g$bytevector$5435$14YGsk
          g$k$5436$14YGsk
          g$n$5437$14YGsk
          (g$native-endianness$5364$14YGsk)
          '4))))
   (g$bytevector-s32-native-set!$5380$14YGsk
     g$bytevector-s32-native-set!$5491$14YGsk
     (case-lambda
       ((g$bytevector$5438$14YGsk g$k$5439$14YGsk g$n$5440$14YGsk)
        (bytevector-sint-set!
          g$bytevector$5438$14YGsk
          g$k$5439$14YGsk
          g$n$5440$14YGsk
          (g$native-endianness$5364$14YGsk)
          '4))))
   (g$bytevector-u64-ref$5381$14YGsk
     g$bytevector-u64-ref$5492$14YGsk
     (case-lambda
       ((g$bytevector$5441$14YGsk g$k$5442$14YGsk g$endianness$5443$14YGsk)
        (bytevector-uint-ref
          g$bytevector$5441$14YGsk
          g$k$5442$14YGsk
          g$endianness$5443$14YGsk
          '8))))
   (g$bytevector-s64-ref$5382$14YGsk
     g$bytevector-s64-ref$5493$14YGsk
     (case-lambda
       ((g$bytevector$5444$14YGsk g$k$5445$14YGsk g$endianness$5446$14YGsk)
        (bytevector-sint-ref
          g$bytevector$5444$14YGsk
          g$k$5445$14YGsk
          g$endianness$5446$14YGsk
          '8))))
   (g$bytevector-u64-native-ref$5383$14YGsk
     g$bytevector-u64-native-ref$5494$14YGsk
     (case-lambda
       ((g$bytevector$5447$14YGsk g$k$5448$14YGsk)
        (bytevector-uint-ref
          g$bytevector$5447$14YGsk
          g$k$5448$14YGsk
          (g$native-endianness$5364$14YGsk)
          '8))))
   (g$bytevector-s64-native-ref$5384$14YGsk
     g$bytevector-s64-native-ref$5495$14YGsk
     (case-lambda
       ((g$bytevector$5449$14YGsk g$k$5450$14YGsk)
        (bytevector-sint-ref
          g$bytevector$5449$14YGsk
          g$k$5450$14YGsk
          (g$native-endianness$5364$14YGsk)
          '8))))
   (g$bytevector-u64-set!$5385$14YGsk
     g$bytevector-u64-set!$5496$14YGsk
     (case-lambda
       ((g$bytevector$5451$14YGsk
          g$k$5452$14YGsk
          g$n$5453$14YGsk
          g$endianness$5454$14YGsk)
        (bytevector-uint-set!
          g$bytevector$5451$14YGsk
          g$k$5452$14YGsk
          g$n$5453$14YGsk
          g$endianness$5454$14YGsk
          '8))))
   (g$bytevector-s64-set!$5386$14YGsk
     g$bytevector-s64-set!$5497$14YGsk
     (case-lambda
       ((g$bytevector$5455$14YGsk
          g$k$5456$14YGsk
          g$n$5457$14YGsk
          g$endianness$5458$14YGsk)
        (bytevector-sint-set!
          g$bytevector$5455$14YGsk
          g$k$5456$14YGsk
          g$n$5457$14YGsk
          g$endianness$5458$14YGsk
          '8))))
   (g$bytevector-u64-native-set!$5387$14YGsk
     g$bytevector-u64-native-set!$5498$14YGsk
     (case-lambda
       ((g$bytevector$5459$14YGsk g$k$5460$14YGsk g$n$5461$14YGsk)
        (bytevector-uint-set!
          g$bytevector$5459$14YGsk
          g$k$5460$14YGsk
          g$n$5461$14YGsk
          (g$native-endianness$5364$14YGsk)
          '8))))
   (g$bytevector-s64-native-set!$5388$14YGsk
     g$bytevector-s64-native-set!$5499$14YGsk
     (case-lambda
       ((g$bytevector$5462$14YGsk g$k$5463$14YGsk g$n$5464$14YGsk)
        (bytevector-sint-set!
          g$bytevector$5462$14YGsk
          g$k$5463$14YGsk
          g$n$5464$14YGsk
          (g$native-endianness$5364$14YGsk)
          '8))))
   (g$bytevector-ieee-single-native-ref$5389$14YGsk
     g$bytevector-ieee-single-native-ref$5500$14YGsk
     (case-lambda
       ((g$bytevector$5465$14YGsk g$k$5466$14YGsk)
        (if (not (zero? (mod g$k$5466$14YGsk '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5466$14YGsk)
          (bytevector-ieee-single-ref
            g$bytevector$5465$14YGsk
            g$k$5466$14YGsk
            (g$native-endianness$5364$14YGsk))))))
   (g$bytevector-ieee-double-native-ref$5390$14YGsk
     g$bytevector-ieee-double-native-ref$5501$14YGsk
     (case-lambda
       ((g$bytevector$5467$14YGsk g$k$5468$14YGsk)
        (if (not (zero? (mod g$k$5468$14YGsk '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5468$14YGsk)
          (bytevector-ieee-double-ref
            g$bytevector$5467$14YGsk
            g$k$5468$14YGsk
            (g$native-endianness$5364$14YGsk))))))
   (g$bytevector-ieee-single-native-set!$5391$14YGsk
     g$bytevector-ieee-single-native-set!$5502$14YGsk
     (case-lambda
       ((g$bytevector$5469$14YGsk g$k$5470$14YGsk g$x$5471$14YGsk)
        (if (not (zero? (mod g$k$5470$14YGsk '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5470$14YGsk)
          (bytevector-ieee-single-set!
            g$bytevector$5469$14YGsk
            g$k$5470$14YGsk
            g$x$5471$14YGsk
            (g$native-endianness$5364$14YGsk))))))
   (g$bytevector-ieee-double-native-set!$5392$14YGsk
     g$bytevector-ieee-double-native-set!$5503$14YGsk
     (case-lambda
       ((g$bytevector$5472$14YGsk g$k$5473$14YGsk g$x$5474$14YGsk)
        (if (not (zero? (mod g$k$5473$14YGsk '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5473$14YGsk)
          (bytevector-ieee-double-set!
            g$bytevector$5472$14YGsk
            g$k$5473$14YGsk
            g$x$5474$14YGsk
            (g$native-endianness$5364$14YGsk)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6441$5504$14YGsk
     g$6441$5599$14YGsk
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6444$14YGsk
       '#f
       '#f
       '#()))
   (g$6443$5505$14YGsk g$6443$5600$14YGsk '#f)
   (g$6442$5506$14YGsk
     g$6442$5601$14YGsk
     (make-record-constructor-descriptor
       g$6441$5504$14YGsk
       '#f
       g$6443$5505$14YGsk))
   (g$&condition?$5507$14YGsk
     g$&condition?$5602$14YGsk
     (record-predicate g$6441$5504$14YGsk))
   (g$make-&condition$5508$14YGsk
     g$make-&condition$5603$14YGsk
     (record-constructor g$6442$5506$14YGsk))
   (g$&condition-rtd$5509$14YGsk
     g$&condition-rtd$5604$14YGsk
     g$6441$5504$14YGsk)
   (g$&condition-rcd$5510$14YGsk
     g$&condition-rcd$5605$14YGsk
     g$6442$5506$14YGsk)
   (g$6457$5511$14YGsk
     g$6457$5606$14YGsk
     (make-record-type-descriptor
       '&message
       g$6441$5504$14YGsk
       'g$6460$14YGsk
       '#f
       '#f
       '#((immutable message))))
   (g$6459$5512$14YGsk g$6459$5607$14YGsk '#f)
   (g$6458$5513$14YGsk
     g$6458$5608$14YGsk
     (make-record-constructor-descriptor
       g$6457$5511$14YGsk
       g$6442$5506$14YGsk
       g$6459$5512$14YGsk))
   (g$6456$5514$14YGsk
     g$6456$5609$14YGsk
     (record-predicate g$6457$5511$14YGsk))
   (g$make-message-condition$5515$14YGsk
     g$make-message-condition$5610$14YGsk
     (record-constructor g$6458$5513$14YGsk))
   (g$6455$5516$14YGsk
     g$6455$5611$14YGsk
     (record-accessor g$6457$5511$14YGsk '0))
   (g$message-condition?$5517$14YGsk
     g$message-condition?$5612$14YGsk
     (condition-predicate g$6457$5511$14YGsk))
   (g$condition-message$5518$14YGsk
     g$condition-message$5613$14YGsk
     (condition-accessor g$6457$5511$14YGsk g$6455$5516$14YGsk))
   (g$6473$5519$14YGsk
     g$6473$5614$14YGsk
     (make-record-type-descriptor
       '&warning
       g$6441$5504$14YGsk
       'g$6476$14YGsk
       '#f
       '#f
       '#()))
   (g$6475$5520$14YGsk g$6475$5615$14YGsk '#f)
   (g$6474$5521$14YGsk
     g$6474$5616$14YGsk
     (make-record-constructor-descriptor
       g$6473$5519$14YGsk
       g$6442$5506$14YGsk
       g$6475$5520$14YGsk))
   (g$6472$5522$14YGsk
     g$6472$5617$14YGsk
     (record-predicate g$6473$5519$14YGsk))
   (g$make-warning$5523$14YGsk
     g$make-warning$5618$14YGsk
     (record-constructor g$6474$5521$14YGsk))
   (g$warning?$5524$14YGsk
     g$warning?$5619$14YGsk
     (condition-predicate g$6473$5519$14YGsk))
   (g$6487$5525$14YGsk
     g$6487$5620$14YGsk
     (make-record-type-descriptor
       '&serious
       g$6441$5504$14YGsk
       'g$6490$14YGsk
       '#f
       '#f
       '#()))
   (g$6489$5526$14YGsk g$6489$5621$14YGsk '#f)
   (g$6488$5527$14YGsk
     g$6488$5622$14YGsk
     (make-record-constructor-descriptor
       g$6487$5525$14YGsk
       g$6442$5506$14YGsk
       g$6489$5526$14YGsk))
   (g$6486$5528$14YGsk
     g$6486$5623$14YGsk
     (record-predicate g$6487$5525$14YGsk))
   (g$make-serious-condition$5529$14YGsk
     g$make-serious-condition$5624$14YGsk
     (record-constructor g$6488$5527$14YGsk))
   (g$serious-condition?$5530$14YGsk
     g$serious-condition?$5625$14YGsk
     (condition-predicate g$6487$5525$14YGsk))
   (g$6501$5531$14YGsk
     g$6501$5626$14YGsk
     (make-record-type-descriptor
       '&error
       g$6487$5525$14YGsk
       'g$6504$14YGsk
       '#f
       '#f
       '#()))
   (g$6503$5532$14YGsk g$6503$5627$14YGsk '#f)
   (g$6502$5533$14YGsk
     g$6502$5628$14YGsk
     (make-record-constructor-descriptor
       g$6501$5531$14YGsk
       g$6488$5527$14YGsk
       g$6503$5532$14YGsk))
   (g$6500$5534$14YGsk
     g$6500$5629$14YGsk
     (record-predicate g$6501$5531$14YGsk))
   (g$make-error$5535$14YGsk
     g$make-error$5630$14YGsk
     (record-constructor g$6502$5533$14YGsk))
   (g$error?$5536$14YGsk
     g$error?$5631$14YGsk
     (condition-predicate g$6501$5531$14YGsk))
   (g$6515$5537$14YGsk
     g$6515$5632$14YGsk
     (make-record-type-descriptor
       '&violation
       g$6487$5525$14YGsk
       'g$6518$14YGsk
       '#f
       '#f
       '#()))
   (g$6517$5538$14YGsk g$6517$5633$14YGsk '#f)
   (g$6516$5539$14YGsk
     g$6516$5634$14YGsk
     (make-record-constructor-descriptor
       g$6515$5537$14YGsk
       g$6488$5527$14YGsk
       g$6517$5538$14YGsk))
   (g$6514$5540$14YGsk
     g$6514$5635$14YGsk
     (record-predicate g$6515$5537$14YGsk))
   (g$make-violation$5541$14YGsk
     g$make-violation$5636$14YGsk
     (record-constructor g$6516$5539$14YGsk))
   (g$violation?$5542$14YGsk
     g$violation?$5637$14YGsk
     (condition-predicate g$6515$5537$14YGsk))
   (g$6529$5543$14YGsk
     g$6529$5638$14YGsk
     (make-record-type-descriptor
       '&assertion
       g$6515$5537$14YGsk
       'g$6532$14YGsk
       '#f
       '#f
       '#()))
   (g$6531$5544$14YGsk g$6531$5639$14YGsk '#f)
   (g$6530$5545$14YGsk
     g$6530$5640$14YGsk
     (make-record-constructor-descriptor
       g$6529$5543$14YGsk
       g$6516$5539$14YGsk
       g$6531$5544$14YGsk))
   (g$6528$5546$14YGsk
     g$6528$5641$14YGsk
     (record-predicate g$6529$5543$14YGsk))
   (g$make-assertion-violation$5547$14YGsk
     g$make-assertion-violation$5642$14YGsk
     (record-constructor g$6530$5545$14YGsk))
   (g$assertion-violation?$5548$14YGsk
     g$assertion-violation?$5643$14YGsk
     (condition-predicate g$6529$5543$14YGsk))
   (g$6544$5549$14YGsk
     g$6544$5644$14YGsk
     (make-record-type-descriptor
       '&irritants
       g$6441$5504$14YGsk
       'g$6547$14YGsk
       '#f
       '#f
       '#((immutable irritants))))
   (g$6546$5550$14YGsk g$6546$5645$14YGsk '#f)
   (g$6545$5551$14YGsk
     g$6545$5646$14YGsk
     (make-record-constructor-descriptor
       g$6544$5549$14YGsk
       g$6442$5506$14YGsk
       g$6546$5550$14YGsk))
   (g$6543$5552$14YGsk
     g$6543$5647$14YGsk
     (record-predicate g$6544$5549$14YGsk))
   (g$make-irritants-condition$5553$14YGsk
     g$make-irritants-condition$5648$14YGsk
     (record-constructor g$6545$5551$14YGsk))
   (g$6542$5554$14YGsk
     g$6542$5649$14YGsk
     (record-accessor g$6544$5549$14YGsk '0))
   (g$irritants-condition?$5555$14YGsk
     g$irritants-condition?$5650$14YGsk
     (condition-predicate g$6544$5549$14YGsk))
   (g$condition-irritants$5556$14YGsk
     g$condition-irritants$5651$14YGsk
     (condition-accessor g$6544$5549$14YGsk g$6542$5554$14YGsk))
   (g$6561$5557$14YGsk
     g$6561$5652$14YGsk
     (make-record-type-descriptor
       '&who
       g$6441$5504$14YGsk
       'g$6564$14YGsk
       '#f
       '#f
       '#((immutable who))))
   (g$6563$5558$14YGsk g$6563$5653$14YGsk '#f)
   (g$6562$5559$14YGsk
     g$6562$5654$14YGsk
     (make-record-constructor-descriptor
       g$6561$5557$14YGsk
       g$6442$5506$14YGsk
       g$6563$5558$14YGsk))
   (g$6560$5560$14YGsk
     g$6560$5655$14YGsk
     (record-predicate g$6561$5557$14YGsk))
   (g$make-who-condition$5561$14YGsk
     g$make-who-condition$5656$14YGsk
     (record-constructor g$6562$5559$14YGsk))
   (g$6559$5562$14YGsk
     g$6559$5657$14YGsk
     (record-accessor g$6561$5557$14YGsk '0))
   (g$who-condition?$5563$14YGsk
     g$who-condition?$5658$14YGsk
     (condition-predicate g$6561$5557$14YGsk))
   (g$condition-who$5564$14YGsk
     g$condition-who$5659$14YGsk
     (condition-accessor g$6561$5557$14YGsk g$6559$5562$14YGsk))
   (g$6577$5565$14YGsk
     g$6577$5660$14YGsk
     (make-record-type-descriptor
       '&non-continuable
       g$6515$5537$14YGsk
       'g$6580$14YGsk
       '#f
       '#f
       '#()))
   (g$6579$5566$14YGsk g$6579$5661$14YGsk '#f)
   (g$6578$5567$14YGsk
     g$6578$5662$14YGsk
     (make-record-constructor-descriptor
       g$6577$5565$14YGsk
       g$6516$5539$14YGsk
       g$6579$5566$14YGsk))
   (g$6576$5568$14YGsk
     g$6576$5663$14YGsk
     (record-predicate g$6577$5565$14YGsk))
   (g$make-non-continuable-violation$5569$14YGsk
     g$make-non-continuable-violation$5664$14YGsk
     (record-constructor g$6578$5567$14YGsk))
   (g$non-continuable-violation?$5570$14YGsk
     g$non-continuable-violation?$5665$14YGsk
     (condition-predicate g$6577$5565$14YGsk))
   (g$6591$5571$14YGsk
     g$6591$5666$14YGsk
     (make-record-type-descriptor
       '&implementation-restriction
       g$6515$5537$14YGsk
       'g$6594$14YGsk
       '#f
       '#f
       '#()))
   (g$6593$5572$14YGsk g$6593$5667$14YGsk '#f)
   (g$6592$5573$14YGsk
     g$6592$5668$14YGsk
     (make-record-constructor-descriptor
       g$6591$5571$14YGsk
       g$6516$5539$14YGsk
       g$6593$5572$14YGsk))
   (g$6590$5574$14YGsk
     g$6590$5669$14YGsk
     (record-predicate g$6591$5571$14YGsk))
   (g$make-implementation-restriction-violation$5575$14YGsk
     g$make-implementation-restriction-violation$5670$14YGsk
     (record-constructor g$6592$5573$14YGsk))
   (g$implementation-restriction-violation?$5576$14YGsk
     g$implementation-restriction-violation?$5671$14YGsk
     (condition-predicate g$6591$5571$14YGsk))
   (g$6605$5577$14YGsk
     g$6605$5672$14YGsk
     (make-record-type-descriptor
       '&lexical
       g$6515$5537$14YGsk
       'g$6608$14YGsk
       '#f
       '#f
       '#()))
   (g$6607$5578$14YGsk g$6607$5673$14YGsk '#f)
   (g$6606$5579$14YGsk
     g$6606$5674$14YGsk
     (make-record-constructor-descriptor
       g$6605$5577$14YGsk
       g$6516$5539$14YGsk
       g$6607$5578$14YGsk))
   (g$6604$5580$14YGsk
     g$6604$5675$14YGsk
     (record-predicate g$6605$5577$14YGsk))
   (g$make-lexical-violation$5581$14YGsk
     g$make-lexical-violation$5676$14YGsk
     (record-constructor g$6606$5579$14YGsk))
   (g$lexical-violation?$5582$14YGsk
     g$lexical-violation?$5677$14YGsk
     (condition-predicate g$6605$5577$14YGsk))
   (g$6621$5583$14YGsk
     g$6621$5678$14YGsk
     (make-record-type-descriptor
       '&syntax
       g$6515$5537$14YGsk
       'g$6624$14YGsk
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6623$5584$14YGsk g$6623$5679$14YGsk '#f)
   (g$6622$5585$14YGsk
     g$6622$5680$14YGsk
     (make-record-constructor-descriptor
       g$6621$5583$14YGsk
       g$6516$5539$14YGsk
       g$6623$5584$14YGsk))
   (g$6620$5586$14YGsk
     g$6620$5681$14YGsk
     (record-predicate g$6621$5583$14YGsk))
   (g$make-syntax-violation$5587$14YGsk
     g$make-syntax-violation$5682$14YGsk
     (record-constructor g$6622$5585$14YGsk))
   (g$6618$5588$14YGsk
     g$6618$5683$14YGsk
     (record-accessor g$6621$5583$14YGsk '0))
   (g$6619$5589$14YGsk
     g$6619$5684$14YGsk
     (record-accessor g$6621$5583$14YGsk '1))
   (g$syntax-violation?$5590$14YGsk
     g$syntax-violation?$5685$14YGsk
     (condition-predicate g$6621$5583$14YGsk))
   (g$syntax-violation-form$5591$14YGsk
     g$syntax-violation-form$5686$14YGsk
     (condition-accessor g$6621$5583$14YGsk g$6618$5588$14YGsk))
   (g$syntax-violation-subform$5592$14YGsk
     g$syntax-violation-subform$5687$14YGsk
     (condition-accessor g$6621$5583$14YGsk g$6619$5589$14YGsk))
   (g$6639$5593$14YGsk
     g$6639$5688$14YGsk
     (make-record-type-descriptor
       '&undefined
       g$6515$5537$14YGsk
       'g$6642$14YGsk
       '#f
       '#f
       '#()))
   (g$6641$5594$14YGsk g$6641$5689$14YGsk '#f)
   (g$6640$5595$14YGsk
     g$6640$5690$14YGsk
     (make-record-constructor-descriptor
       g$6639$5593$14YGsk
       g$6516$5539$14YGsk
       g$6641$5594$14YGsk))
   (g$6638$5596$14YGsk
     g$6638$5691$14YGsk
     (record-predicate g$6639$5593$14YGsk))
   (g$make-undefined-violation$5597$14YGsk
     g$make-undefined-violation$5692$14YGsk
     (record-constructor g$6640$5595$14YGsk))
   (g$undefined-violation?$5598$14YGsk
     g$undefined-violation?$5693$14YGsk
     (condition-predicate g$6639$5593$14YGsk)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5694$14YGsk
     g$append!$5700$14YGsk
     (case-lambda
       ((g$a$5695$14YGsk . g$b$5696$14YGsk)
        (if (null? g$a$5695$14YGsk)
          g$b$5696$14YGsk
          (if (null? g$b$5696$14YGsk)
            g$a$5695$14YGsk
            (begin
              ((letrec ((g$f$5697$14YGsk
                          (case-lambda
                            ((g$a$5698$14YGsk)
                             ((case-lambda
                                ((g$n$5699$14YGsk)
                                 (if (null? g$n$5699$14YGsk)
                                   (set-cdr! g$a$5698$14YGsk g$b$5696$14YGsk)
                                   (g$f$5697$14YGsk g$n$5699$14YGsk))))
                              (cdr g$a$5698$14YGsk))))))
                 g$f$5697$14YGsk)
               g$a$5695$14YGsk)
              g$a$5695$14YGsk)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5701$14YGsk
     g$sign$5719$14YGsk
     (case-lambda
       ((g$n$5707$14YGsk)
        (if (> g$n$5707$14YGsk '0) '1 (if (< g$n$5707$14YGsk '0) '-1 '0)))))
   (g$quotient$5702$14YGsk
     g$quotient$5720$14YGsk
     (case-lambda
       ((g$n1$5708$14YGsk g$n2$5709$14YGsk)
        (* (g$sign$5701$14YGsk g$n1$5708$14YGsk)
           (g$sign$5701$14YGsk g$n2$5709$14YGsk)
           (div (abs g$n1$5708$14YGsk) (abs g$n2$5709$14YGsk))))))
   (g$remainder$5703$14YGsk
     g$remainder$5721$14YGsk
     (case-lambda
       ((g$n1$5710$14YGsk g$n2$5711$14YGsk)
        (* (g$sign$5701$14YGsk g$n1$5710$14YGsk)
           (mod (abs g$n1$5710$14YGsk) (abs g$n2$5711$14YGsk))))))
   (g$modulo$5704$14YGsk
     g$modulo$5722$14YGsk
     (case-lambda
       ((g$n1$5712$14YGsk g$n2$5713$14YGsk)
        (* (g$sign$5701$14YGsk g$n2$5713$14YGsk)
           (mod (* (g$sign$5701$14YGsk g$n2$5713$14YGsk) g$n1$5712$14YGsk)
                (abs g$n2$5713$14YGsk))))))
   (g$make-promise$5705$14YGsk
     g$make-promise$5723$14YGsk
     (case-lambda
       ((g$proc$5714$14YGsk)
        ((case-lambda
           ((g$result-ready?$5715$14YGsk g$result$5716$14YGsk)
            (case-lambda
              (()
               (if g$result-ready?$5715$14YGsk
                 g$result$5716$14YGsk
                 ((case-lambda
                    ((g$x$5717$14YGsk)
                     (if g$result-ready?$5715$14YGsk
                       g$result$5716$14YGsk
                       (begin
                         (set! g$result-ready?$5715$14YGsk '#t)
                         (set! g$result$5716$14YGsk g$x$5717$14YGsk)
                         g$result$5716$14YGsk))))
                  (g$proc$5714$14YGsk)))))))
         '#f
         '#f))))
   (g$force$5706$14YGsk
     g$force$5724$14YGsk
     (case-lambda ((g$object$5718$14YGsk) (g$object$5718$14YGsk)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5725$14YGsk
     g$split$5751$14YGsk
     (case-lambda
       ((g$ls$5728$14YGsk)
        ((letrec ((g$loop$5729$14YGsk
                    (case-lambda
                      ((g$rest$5730$14YGsk
                         g$left$5731$14YGsk
                         g$right$5732$14YGsk)
                       (if (null? g$rest$5730$14YGsk)
                         (cons g$left$5731$14YGsk g$right$5732$14YGsk)
                         (if (null? (cdr g$rest$5730$14YGsk))
                           (cons
                             (cons (car g$rest$5730$14YGsk) g$left$5731$14YGsk)
                             g$right$5732$14YGsk)
                           (g$loop$5729$14YGsk
                             (g$cddr$4889$14YGsk g$rest$5730$14YGsk)
                             (cons (car g$rest$5730$14YGsk) g$left$5731$14YGsk)
                             (cons
                               (g$cadr$4887$14YGsk g$rest$5730$14YGsk)
                               g$right$5732$14YGsk))))))))
           g$loop$5729$14YGsk)
         g$ls$5728$14YGsk
         '()
         '()))))
   (g$reverse-it$5726$14YGsk
     g$reverse-it$5752$14YGsk
     (case-lambda
       ((g$head$5733$14YGsk g$tail$5734$14YGsk)
        (if (null? g$head$5733$14YGsk)
          g$tail$5734$14YGsk
          ((case-lambda
             ((g$hd$5735$14YGsk g$tl$5736$14YGsk)
              (g$reverse-it$5726$14YGsk
                g$tl$5736$14YGsk
                (cons g$hd$5735$14YGsk g$tail$5734$14YGsk))))
           (car g$head$5733$14YGsk)
           (cdr g$head$5733$14YGsk))))))
   (g$list-sort$5727$14YGsk
     g$list-sort$5753$14YGsk
     (case-lambda
       ((g$precedes?$5737$14YGsk g$ls$5738$14YGsk)
        ((case-lambda
           ((g$merge$5739$14YGsk)
            ((case-lambda
               (()
                (if (null? g$ls$5738$14YGsk)
                  '()
                  ((letrec ((g$helper$5740$14YGsk
                              (case-lambda
                                ((g$piece$5741$14YGsk)
                                 (if (null? (cdr g$piece$5741$14YGsk))
                                   g$piece$5741$14YGsk
                                   ((case-lambda
                                      ((g$parts$5742$14YGsk)
                                       (g$merge$5739$14YGsk
                                         (g$helper$5740$14YGsk
                                           (car g$parts$5742$14YGsk))
                                         (g$helper$5740$14YGsk
                                           (cdr g$parts$5742$14YGsk)))))
                                    (g$split$5725$14YGsk
                                      g$piece$5741$14YGsk)))))))
                     g$helper$5740$14YGsk)
                   g$ls$5738$14YGsk)))))))
         (case-lambda
           ((g$list-1$5743$14YGsk g$list-2$5744$14YGsk)
            ((letrec ((g$loop$5745$14YGsk
                        (case-lambda
                          ((g$source-1$5746$14YGsk
                             g$source-2$5747$14YGsk
                             g$so-far$5748$14YGsk)
                           (if (null? g$source-1$5746$14YGsk)
                             (g$reverse-it$5726$14YGsk
                               g$so-far$5748$14YGsk
                               g$source-2$5747$14YGsk)
                             (if (null? g$source-2$5747$14YGsk)
                               (g$reverse-it$5726$14YGsk
                                 g$so-far$5748$14YGsk
                                 g$source-1$5746$14YGsk)
                               ((case-lambda
                                  ((g$car-1$5749$14YGsk g$car-2$5750$14YGsk)
                                   (if (g$precedes?$5737$14YGsk
                                         g$car-2$5750$14YGsk
                                         g$car-1$5749$14YGsk)
                                     (g$loop$5745$14YGsk
                                       g$source-1$5746$14YGsk
                                       (cdr g$source-2$5747$14YGsk)
                                       (cons
                                         g$car-2$5750$14YGsk
                                         g$so-far$5748$14YGsk))
                                     (g$loop$5745$14YGsk
                                       g$source-2$5747$14YGsk
                                       (cdr g$source-1$5746$14YGsk)
                                       (cons
                                         g$car-1$5749$14YGsk
                                         g$so-far$5748$14YGsk)))))
                                (car g$source-1$5746$14YGsk)
                                (car g$source-2$5747$14YGsk))))))))
               g$loop$5745$14YGsk)
             g$list-1$5743$14YGsk
             g$list-2$5744$14YGsk
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$5791$14YGsk
     g$bitwise-if$5838$14YGsk
     (case-lambda
       ((g$ei1$5798$14YGsk g$ei2$5799$14YGsk g$ei3$5800$14YGsk)
        (bitwise-ior
          (bitwise-and g$ei1$5798$14YGsk g$ei2$5799$14YGsk)
          (bitwise-and (bitwise-not g$ei1$5798$14YGsk) g$ei3$5800$14YGsk)))))
   (g$bitwise-copy-bit$5792$14YGsk
     g$bitwise-copy-bit$5839$14YGsk
     (case-lambda
       ((g$ei1$5801$14YGsk g$ei2$5802$14YGsk g$ei3$5803$14YGsk)
        ((case-lambda
           ((g$mask$5804$14YGsk)
            ((case-lambda
               (()
                (g$bitwise-if$5791$14YGsk
                  g$mask$5804$14YGsk
                  (g$bitwise-arithmetic-shift-left$5795$14YGsk
                    g$ei3$5803$14YGsk
                    g$ei2$5802$14YGsk)
                  g$ei1$5801$14YGsk))))))
         (g$bitwise-arithmetic-shift-left$5795$14YGsk '1 g$ei2$5802$14YGsk)))))
   (g$bitwise-bit-field$5793$14YGsk
     g$bitwise-bit-field$5840$14YGsk
     (case-lambda
       ((g$ei1$5805$14YGsk g$ei2$5806$14YGsk g$ei3$5807$14YGsk)
        ((case-lambda
           ((g$mask$5808$14YGsk)
            (g$bitwise-arithmetic-shift-right$5796$14YGsk
              (bitwise-and g$ei1$5805$14YGsk g$mask$5808$14YGsk)
              g$ei2$5806$14YGsk)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$5795$14YGsk
             '-1
             g$ei3$5807$14YGsk))))))
   (g$bitwise-copy-bit-field$5794$14YGsk
     g$bitwise-copy-bit-field$5841$14YGsk
     (case-lambda
       ((g$ei1$5809$14YGsk
          g$ei2$5810$14YGsk
          g$ei3$5811$14YGsk
          g$ei4$5812$14YGsk)
        ((case-lambda
           ((g$to$5813$14YGsk)
            ((case-lambda
               ((g$start$5814$14YGsk)
                ((case-lambda
                   ((g$end$5815$14YGsk)
                    ((case-lambda
                       ((g$from$5816$14YGsk)
                        ((case-lambda
                           ((g$mask1$5817$14YGsk)
                            ((case-lambda
                               ((g$mask2$5818$14YGsk)
                                ((case-lambda
                                   ((g$mask$5819$14YGsk)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$5791$14YGsk
                                          g$mask$5819$14YGsk
                                          (g$bitwise-arithmetic-shift-left$5795$14YGsk
                                            g$from$5816$14YGsk
                                            g$start$5814$14YGsk)
                                          g$to$5813$14YGsk))))))
                                 (bitwise-and
                                   g$mask1$5817$14YGsk
                                   g$mask2$5818$14YGsk))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$5795$14YGsk
                                 '-1
                                 g$end$5815$14YGsk)))))
                         (g$bitwise-arithmetic-shift-left$5795$14YGsk
                           '-1
                           g$start$5814$14YGsk))))
                     g$ei4$5812$14YGsk)))
                 g$ei3$5811$14YGsk)))
             g$ei2$5810$14YGsk)))
         g$ei1$5809$14YGsk))))
   (g$bitwise-arithmetic-shift-left$5795$14YGsk
     g$bitwise-arithmetic-shift-left$5842$14YGsk
     (case-lambda
       ((g$ei1$5820$14YGsk g$ei2$5821$14YGsk)
        (bitwise-arithmetic-shift g$ei1$5820$14YGsk g$ei2$5821$14YGsk))))
   (g$bitwise-arithmetic-shift-right$5796$14YGsk
     g$bitwise-arithmetic-shift-right$5843$14YGsk
     (case-lambda
       ((g$ei1$5822$14YGsk g$ei2$5823$14YGsk)
        (bitwise-arithmetic-shift g$ei1$5822$14YGsk (- g$ei2$5823$14YGsk)))))
   (g$bitwise-rotate-bit-field$5797$14YGsk
     g$bitwise-rotate-bit-field$5844$14YGsk
     (case-lambda
       ((g$ei1$5824$14YGsk
          g$ei2$5825$14YGsk
          g$ei3$5826$14YGsk
          g$ei4$5827$14YGsk)
        ((case-lambda
           ((g$n$5828$14YGsk)
            ((case-lambda
               ((g$start$5829$14YGsk)
                ((case-lambda
                   ((g$end$5830$14YGsk)
                    ((case-lambda
                       ((g$count$5831$14YGsk)
                        ((case-lambda
                           ((g$width$5832$14YGsk)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5832$14YGsk)
                                  ((case-lambda
                                     ((g$count$5833$14YGsk)
                                      ((case-lambda
                                         ((g$field0$5834$14YGsk)
                                          ((case-lambda
                                             ((g$field1$5835$14YGsk)
                                              ((case-lambda
                                                 ((g$field2$5836$14YGsk)
                                                  ((case-lambda
                                                     ((g$field$5837$14YGsk)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$5794$14YGsk
                                                            g$n$5828$14YGsk
                                                            g$start$5829$14YGsk
                                                            g$end$5830$14YGsk
                                                            g$field$5837$14YGsk))))))
                                                   (bitwise-ior
                                                     g$field1$5835$14YGsk
                                                     g$field2$5836$14YGsk))))
                                               (g$bitwise-arithmetic-shift-right$5796$14YGsk
                                                 g$field0$5834$14YGsk
                                                 (- g$width$5832$14YGsk
                                                    g$count$5833$14YGsk)))))
                                           (g$bitwise-arithmetic-shift-left$5795$14YGsk
                                             g$field0$5834$14YGsk
                                             g$count$5833$14YGsk))))
                                       (g$bitwise-bit-field$5793$14YGsk
                                         g$n$5828$14YGsk
                                         g$start$5829$14YGsk
                                         g$end$5830$14YGsk))))
                                   (mod g$count$5831$14YGsk
                                        g$width$5832$14YGsk))
                                  g$n$5828$14YGsk))))))
                         (- g$end$5830$14YGsk g$start$5829$14YGsk))))
                     g$ei4$5827$14YGsk)))
                 g$ei3$5826$14YGsk)))
             g$ei2$5825$14YGsk)))
         g$ei1$5824$14YGsk)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$5845$14YGsk
     g$fxif$5892$14YGsk
     (case-lambda
       ((g$fx1$5852$14YGsk g$fx2$5853$14YGsk g$fx3$5854$14YGsk)
        (fxior
          (fxand g$fx1$5852$14YGsk g$fx2$5853$14YGsk)
          (fxand (fxnot g$fx1$5852$14YGsk) g$fx3$5854$14YGsk)))))
   (g$fxcopy-bit$5846$14YGsk
     g$fxcopy-bit$5893$14YGsk
     (case-lambda
       ((g$fx1$5855$14YGsk g$fx2$5856$14YGsk g$fx3$5857$14YGsk)
        ((case-lambda
           ((g$mask$5858$14YGsk)
            ((case-lambda
               (()
                (g$fxif$5845$14YGsk
                  g$mask$5858$14YGsk
                  (g$fxarithmetic-shift-left$5849$14YGsk
                    g$fx3$5857$14YGsk
                    g$fx2$5856$14YGsk)
                  g$fx1$5855$14YGsk))))))
         (g$fxarithmetic-shift-left$5849$14YGsk '1 g$fx2$5856$14YGsk)))))
   (g$fxbit-field$5847$14YGsk
     g$fxbit-field$5894$14YGsk
     (case-lambda
       ((g$fx1$5859$14YGsk g$fx2$5860$14YGsk g$fx3$5861$14YGsk)
        ((case-lambda
           ((g$mask$5862$14YGsk)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$5850$14YGsk
                  (fxand g$fx1$5859$14YGsk g$mask$5862$14YGsk)
                  g$fx2$5860$14YGsk))))))
         (fxnot
           (g$fxarithmetic-shift-left$5849$14YGsk '-1 g$fx3$5861$14YGsk))))))
   (g$fxcopy-bit-field$5848$14YGsk
     g$fxcopy-bit-field$5895$14YGsk
     (case-lambda
       ((g$fx1$5863$14YGsk
          g$fx2$5864$14YGsk
          g$fx3$5865$14YGsk
          g$fx4$5866$14YGsk)
        ((case-lambda
           ((g$to$5867$14YGsk)
            ((case-lambda
               ((g$start$5868$14YGsk)
                ((case-lambda
                   ((g$end$5869$14YGsk)
                    ((case-lambda
                       ((g$from$5870$14YGsk)
                        ((case-lambda
                           ((g$mask1$5871$14YGsk)
                            ((case-lambda
                               ((g$mask2$5872$14YGsk)
                                ((case-lambda
                                   ((g$mask$5873$14YGsk)
                                    ((case-lambda
                                       (()
                                        (g$fxif$5845$14YGsk
                                          g$mask$5873$14YGsk
                                          (g$fxarithmetic-shift-left$5849$14YGsk
                                            g$from$5870$14YGsk
                                            g$start$5868$14YGsk)
                                          g$to$5867$14YGsk))))))
                                 (fxand
                                   g$mask1$5871$14YGsk
                                   g$mask2$5872$14YGsk))))
                             (fxnot
                               (g$fxarithmetic-shift-left$5849$14YGsk
                                 '-1
                                 g$end$5869$14YGsk)))))
                         (g$fxarithmetic-shift-left$5849$14YGsk
                           '-1
                           g$start$5868$14YGsk))))
                     g$fx4$5866$14YGsk)))
                 g$fx3$5865$14YGsk)))
             g$fx2$5864$14YGsk)))
         g$fx1$5863$14YGsk))))
   (g$fxarithmetic-shift-left$5849$14YGsk
     g$fxarithmetic-shift-left$5896$14YGsk
     (case-lambda
       ((g$fx1$5874$14YGsk g$fx2$5875$14YGsk)
        (fxarithmetic-shift g$fx1$5874$14YGsk g$fx2$5875$14YGsk))))
   (g$fxarithmetic-shift-right$5850$14YGsk
     g$fxarithmetic-shift-right$5897$14YGsk
     (case-lambda
       ((g$fx1$5876$14YGsk g$fx2$5877$14YGsk)
        (fxarithmetic-shift g$fx1$5876$14YGsk (- g$fx2$5877$14YGsk)))))
   (g$fxrotate-bit-field$5851$14YGsk
     g$fxrotate-bit-field$5898$14YGsk
     (case-lambda
       ((g$fx1$5878$14YGsk
          g$fx2$5879$14YGsk
          g$fx3$5880$14YGsk
          g$fx4$5881$14YGsk)
        ((case-lambda
           ((g$n$5882$14YGsk)
            ((case-lambda
               ((g$start$5883$14YGsk)
                ((case-lambda
                   ((g$end$5884$14YGsk)
                    ((case-lambda
                       ((g$count$5885$14YGsk)
                        ((case-lambda
                           ((g$width$5886$14YGsk)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5886$14YGsk)
                                  ((case-lambda
                                     ((g$count$5887$14YGsk)
                                      ((case-lambda
                                         ((g$field0$5888$14YGsk)
                                          ((case-lambda
                                             ((g$field1$5889$14YGsk)
                                              ((case-lambda
                                                 ((g$field2$5890$14YGsk)
                                                  ((case-lambda
                                                     ((g$field$5891$14YGsk)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$5848$14YGsk
                                                            g$n$5882$14YGsk
                                                            g$start$5883$14YGsk
                                                            g$end$5884$14YGsk
                                                            g$field$5891$14YGsk))))))
                                                   (fxior
                                                     g$field1$5889$14YGsk
                                                     g$field2$5890$14YGsk))))
                                               (g$fxarithmetic-shift-right$5850$14YGsk
                                                 g$field0$5888$14YGsk
                                                 (- g$width$5886$14YGsk
                                                    g$count$5887$14YGsk)))))
                                           (g$fxarithmetic-shift-left$5849$14YGsk
                                             g$field0$5888$14YGsk
                                             g$count$5887$14YGsk))))
                                       (g$fxbit-field$5847$14YGsk
                                         g$n$5882$14YGsk
                                         g$start$5883$14YGsk
                                         g$end$5884$14YGsk))))
                                   (mod g$count$5885$14YGsk
                                        g$width$5886$14YGsk))
                                  g$n$5882$14YGsk))))))
                         (- g$end$5884$14YGsk g$start$5883$14YGsk))))
                     g$fx4$5881$14YGsk)))
                 g$fx3$5880$14YGsk)))
             g$fx2$5879$14YGsk)))
         g$fx1$5878$14YGsk)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$6859$5899$14YGsk
     g$6859$5911$14YGsk
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$6862$14YGsk
       '#f
       '#f
       '#()))
   (g$6861$5900$14YGsk g$6861$5912$14YGsk '#f)
   (g$6860$5901$14YGsk
     g$6860$5913$14YGsk
     (make-record-constructor-descriptor
       g$6859$5899$14YGsk
       &implementation-restriction-rcd
       g$6861$5900$14YGsk))
   (g$6858$5902$14YGsk
     g$6858$5914$14YGsk
     (record-predicate g$6859$5899$14YGsk))
   (g$make-no-infinities-violation$5903$14YGsk
     g$make-no-infinities-violation$5915$14YGsk
     (record-constructor g$6860$5901$14YGsk))
   (g$no-infinities-violation?$5904$14YGsk
     g$no-infinities-violation?$5916$14YGsk
     (condition-predicate g$6859$5899$14YGsk))
   (g$6873$5905$14YGsk
     g$6873$5917$14YGsk
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$6876$14YGsk
       '#f
       '#f
       '#()))
   (g$6875$5906$14YGsk g$6875$5918$14YGsk '#f)
   (g$6874$5907$14YGsk
     g$6874$5919$14YGsk
     (make-record-constructor-descriptor
       g$6873$5905$14YGsk
       &implementation-restriction-rcd
       g$6875$5906$14YGsk))
   (g$6872$5908$14YGsk
     g$6872$5920$14YGsk
     (record-predicate g$6873$5905$14YGsk))
   (g$make-no-nans-violation$5909$14YGsk
     g$make-no-nans-violation$5921$14YGsk
     (record-constructor g$6874$5907$14YGsk))
   (g$no-nans-violation?$5910$14YGsk
     g$no-nans-violation?$5922$14YGsk
     (condition-predicate g$6873$5905$14YGsk)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$6888$5923$14YGsk
     g$6888$6003$14YGsk
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$6891$14YGsk
       '#f
       '#f
       '#()))
   (g$6890$5924$14YGsk g$6890$6004$14YGsk '#f)
   (g$6889$5925$14YGsk
     g$6889$6005$14YGsk
     (make-record-constructor-descriptor
       g$6888$5923$14YGsk
       &error-rcd
       g$6890$5924$14YGsk))
   (g$6887$5926$14YGsk
     g$6887$6006$14YGsk
     (record-predicate g$6888$5923$14YGsk))
   (g$make-i/o-error$5927$14YGsk
     g$make-i/o-error$6007$14YGsk
     (record-constructor g$6889$5925$14YGsk))
   (g$i/o-error?$5928$14YGsk
     g$i/o-error?$6008$14YGsk
     (condition-predicate g$6888$5923$14YGsk))
   (g$6902$5929$14YGsk
     g$6902$6009$14YGsk
     (make-record-type-descriptor
       '&i/o-read
       g$6888$5923$14YGsk
       'g$6905$14YGsk
       '#f
       '#f
       '#()))
   (g$6904$5930$14YGsk g$6904$6010$14YGsk '#f)
   (g$6903$5931$14YGsk
     g$6903$6011$14YGsk
     (make-record-constructor-descriptor
       g$6902$5929$14YGsk
       g$6889$5925$14YGsk
       g$6904$5930$14YGsk))
   (g$6901$5932$14YGsk
     g$6901$6012$14YGsk
     (record-predicate g$6902$5929$14YGsk))
   (g$make-i/o-read-error$5933$14YGsk
     g$make-i/o-read-error$6013$14YGsk
     (record-constructor g$6903$5931$14YGsk))
   (g$i/o-read-error?$5934$14YGsk
     g$i/o-read-error?$6014$14YGsk
     (condition-predicate g$6902$5929$14YGsk))
   (g$6916$5935$14YGsk
     g$6916$6015$14YGsk
     (make-record-type-descriptor
       '&i/o-write
       g$6888$5923$14YGsk
       'g$6919$14YGsk
       '#f
       '#f
       '#()))
   (g$6918$5936$14YGsk g$6918$6016$14YGsk '#f)
   (g$6917$5937$14YGsk
     g$6917$6017$14YGsk
     (make-record-constructor-descriptor
       g$6916$5935$14YGsk
       g$6889$5925$14YGsk
       g$6918$5936$14YGsk))
   (g$6915$5938$14YGsk
     g$6915$6018$14YGsk
     (record-predicate g$6916$5935$14YGsk))
   (g$make-i/o-write-error$5939$14YGsk
     g$make-i/o-write-error$6019$14YGsk
     (record-constructor g$6917$5937$14YGsk))
   (g$i/o-write-error?$5940$14YGsk
     g$i/o-write-error?$6020$14YGsk
     (condition-predicate g$6916$5935$14YGsk))
   (g$6931$5941$14YGsk
     g$6931$6021$14YGsk
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6888$5923$14YGsk
       'g$6934$14YGsk
       '#f
       '#f
       '#((immutable position))))
   (g$6933$5942$14YGsk g$6933$6022$14YGsk '#f)
   (g$6932$5943$14YGsk
     g$6932$6023$14YGsk
     (make-record-constructor-descriptor
       g$6931$5941$14YGsk
       g$6889$5925$14YGsk
       g$6933$5942$14YGsk))
   (g$6930$5944$14YGsk
     g$6930$6024$14YGsk
     (record-predicate g$6931$5941$14YGsk))
   (g$make-i/o-invalid-position-error$5945$14YGsk
     g$make-i/o-invalid-position-error$6025$14YGsk
     (record-constructor g$6932$5943$14YGsk))
   (g$6929$5946$14YGsk
     g$6929$6026$14YGsk
     (record-accessor g$6931$5941$14YGsk '0))
   (g$i/o-invalid-position-error?$5947$14YGsk
     g$i/o-invalid-position-error?$6027$14YGsk
     (condition-predicate g$6931$5941$14YGsk))
   (g$i/o-error-position$5948$14YGsk
     g$i/o-error-position$6028$14YGsk
     (condition-accessor g$6931$5941$14YGsk g$6929$5946$14YGsk))
   (g$6948$5949$14YGsk
     g$6948$6029$14YGsk
     (make-record-type-descriptor
       '&i/o-filename
       g$6888$5923$14YGsk
       'g$6951$14YGsk
       '#f
       '#f
       '#((immutable filename))))
   (g$6950$5950$14YGsk g$6950$6030$14YGsk '#f)
   (g$6949$5951$14YGsk
     g$6949$6031$14YGsk
     (make-record-constructor-descriptor
       g$6948$5949$14YGsk
       g$6889$5925$14YGsk
       g$6950$5950$14YGsk))
   (g$6947$5952$14YGsk
     g$6947$6032$14YGsk
     (record-predicate g$6948$5949$14YGsk))
   (g$make-i/o-filename-error$5953$14YGsk
     g$make-i/o-filename-error$6033$14YGsk
     (record-constructor g$6949$5951$14YGsk))
   (g$6946$5954$14YGsk
     g$6946$6034$14YGsk
     (record-accessor g$6948$5949$14YGsk '0))
   (g$i/o-filename-error?$5955$14YGsk
     g$i/o-filename-error?$6035$14YGsk
     (condition-predicate g$6948$5949$14YGsk))
   (g$i/o-error-filename$5956$14YGsk
     g$i/o-error-filename$6036$14YGsk
     (condition-accessor g$6948$5949$14YGsk g$6946$5954$14YGsk))
   (g$6964$5957$14YGsk
     g$6964$6037$14YGsk
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6948$5949$14YGsk
       'g$6967$14YGsk
       '#f
       '#f
       '#()))
   (g$6966$5958$14YGsk g$6966$6038$14YGsk '#f)
   (g$6965$5959$14YGsk
     g$6965$6039$14YGsk
     (make-record-constructor-descriptor
       g$6964$5957$14YGsk
       g$6949$5951$14YGsk
       g$6966$5958$14YGsk))
   (g$6963$5960$14YGsk
     g$6963$6040$14YGsk
     (record-predicate g$6964$5957$14YGsk))
   (g$make-i/o-file-protection-error$5961$14YGsk
     g$make-i/o-file-protection-error$6041$14YGsk
     (record-constructor g$6965$5959$14YGsk))
   (g$i/o-file-protection-error?$5962$14YGsk
     g$i/o-file-protection-error?$6042$14YGsk
     (condition-predicate g$6964$5957$14YGsk))
   (g$6978$5963$14YGsk
     g$6978$6043$14YGsk
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6964$5957$14YGsk
       'g$6981$14YGsk
       '#f
       '#f
       '#()))
   (g$6980$5964$14YGsk g$6980$6044$14YGsk '#f)
   (g$6979$5965$14YGsk
     g$6979$6045$14YGsk
     (make-record-constructor-descriptor
       g$6978$5963$14YGsk
       g$6965$5959$14YGsk
       g$6980$5964$14YGsk))
   (g$6977$5966$14YGsk
     g$6977$6046$14YGsk
     (record-predicate g$6978$5963$14YGsk))
   (g$make-i/o-file-is-read-only-error$5967$14YGsk
     g$make-i/o-file-is-read-only-error$6047$14YGsk
     (record-constructor g$6979$5965$14YGsk))
   (g$i/o-file-is-read-only-error?$5968$14YGsk
     g$i/o-file-is-read-only-error?$6048$14YGsk
     (condition-predicate g$6978$5963$14YGsk))
   (g$6992$5969$14YGsk
     g$6992$6049$14YGsk
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6948$5949$14YGsk
       'g$6995$14YGsk
       '#f
       '#f
       '#()))
   (g$6994$5970$14YGsk g$6994$6050$14YGsk '#f)
   (g$6993$5971$14YGsk
     g$6993$6051$14YGsk
     (make-record-constructor-descriptor
       g$6992$5969$14YGsk
       g$6949$5951$14YGsk
       g$6994$5970$14YGsk))
   (g$6991$5972$14YGsk
     g$6991$6052$14YGsk
     (record-predicate g$6992$5969$14YGsk))
   (g$make-i/o-file-already-exists-error$5973$14YGsk
     g$make-i/o-file-already-exists-error$6053$14YGsk
     (record-constructor g$6993$5971$14YGsk))
   (g$i/o-file-already-exists-error?$5974$14YGsk
     g$i/o-file-already-exists-error?$6054$14YGsk
     (condition-predicate g$6992$5969$14YGsk))
   (g$7006$5975$14YGsk
     g$7006$6055$14YGsk
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6948$5949$14YGsk
       'g$7009$14YGsk
       '#f
       '#f
       '#()))
   (g$7008$5976$14YGsk g$7008$6056$14YGsk '#f)
   (g$7007$5977$14YGsk
     g$7007$6057$14YGsk
     (make-record-constructor-descriptor
       g$7006$5975$14YGsk
       g$6949$5951$14YGsk
       g$7008$5976$14YGsk))
   (g$7005$5978$14YGsk
     g$7005$6058$14YGsk
     (record-predicate g$7006$5975$14YGsk))
   (g$make-i/o-file-does-not-exist-error$5979$14YGsk
     g$make-i/o-file-does-not-exist-error$6059$14YGsk
     (record-constructor g$7007$5977$14YGsk))
   (g$i/o-file-does-not-exist-error?$5980$14YGsk
     g$i/o-file-does-not-exist-error?$6060$14YGsk
     (condition-predicate g$7006$5975$14YGsk))
   (g$7021$5981$14YGsk
     g$7021$6061$14YGsk
     (make-record-type-descriptor
       '&i/o-port
       g$6888$5923$14YGsk
       'g$7024$14YGsk
       '#f
       '#f
       '#((immutable port))))
   (g$7023$5982$14YGsk g$7023$6062$14YGsk '#f)
   (g$7022$5983$14YGsk
     g$7022$6063$14YGsk
     (make-record-constructor-descriptor
       g$7021$5981$14YGsk
       g$6889$5925$14YGsk
       g$7023$5982$14YGsk))
   (g$7020$5984$14YGsk
     g$7020$6064$14YGsk
     (record-predicate g$7021$5981$14YGsk))
   (g$make-i/o-port-error$5985$14YGsk
     g$make-i/o-port-error$6065$14YGsk
     (record-constructor g$7022$5983$14YGsk))
   (g$7019$5986$14YGsk
     g$7019$6066$14YGsk
     (record-accessor g$7021$5981$14YGsk '0))
   (g$i/o-port-error?$5987$14YGsk
     g$i/o-port-error?$6067$14YGsk
     (condition-predicate g$7021$5981$14YGsk))
   (g$i/o-error-port$5988$14YGsk
     g$i/o-error-port$6068$14YGsk
     (condition-accessor g$7021$5981$14YGsk g$7019$5986$14YGsk))
   (g$7037$5989$14YGsk
     g$7037$6069$14YGsk
     (make-record-type-descriptor
       '&i/o-decoding
       g$7021$5981$14YGsk
       'g$7040$14YGsk
       '#f
       '#f
       '#()))
   (g$7039$5990$14YGsk g$7039$6070$14YGsk '#f)
   (g$7038$5991$14YGsk
     g$7038$6071$14YGsk
     (make-record-constructor-descriptor
       g$7037$5989$14YGsk
       g$7022$5983$14YGsk
       g$7039$5990$14YGsk))
   (g$7036$5992$14YGsk
     g$7036$6072$14YGsk
     (record-predicate g$7037$5989$14YGsk))
   (g$make-i/o-decoding-error$5993$14YGsk
     g$make-i/o-decoding-error$6073$14YGsk
     (record-constructor g$7038$5991$14YGsk))
   (g$i/o-decoding-error?$5994$14YGsk
     g$i/o-decoding-error?$6074$14YGsk
     (condition-predicate g$7037$5989$14YGsk))
   (g$7052$5995$14YGsk
     g$7052$6075$14YGsk
     (make-record-type-descriptor
       '&i/o-encoding
       g$7021$5981$14YGsk
       'g$7055$14YGsk
       '#f
       '#f
       '#((immutable char))))
   (g$7054$5996$14YGsk g$7054$6076$14YGsk '#f)
   (g$7053$5997$14YGsk
     g$7053$6077$14YGsk
     (make-record-constructor-descriptor
       g$7052$5995$14YGsk
       g$7022$5983$14YGsk
       g$7054$5996$14YGsk))
   (g$7051$5998$14YGsk
     g$7051$6078$14YGsk
     (record-predicate g$7052$5995$14YGsk))
   (g$make-i/o-encoding-error$5999$14YGsk
     g$make-i/o-encoding-error$6079$14YGsk
     (record-constructor g$7053$5997$14YGsk))
   (g$7050$6000$14YGsk
     g$7050$6080$14YGsk
     (record-accessor g$7052$5995$14YGsk '0))
   (g$i/o-encoding-error?$6001$14YGsk
     g$i/o-encoding-error?$6081$14YGsk
     (condition-predicate g$7052$5995$14YGsk))
   (g$i/o-encoding-error-char$6002$14YGsk
     g$i/o-encoding-error-char$6082$14YGsk
     (condition-accessor g$7052$5995$14YGsk g$7050$6000$14YGsk)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6083$14YGsk
     g$get-output-string$6092$14YGsk
     (case-lambda
       ((g$port$6087$14YGsk)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6087$14YGsk))))
   (g$open-output-string$6084$14YGsk
     g$open-output-string$6093$14YGsk
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6085$14YGsk
     g$open-string-output-port$6094$14YGsk
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6088$14YGsk)
            (values
              g$p$6088$14YGsk
              (case-lambda
                (()
                 (if g$p$6088$14YGsk
                   ((case-lambda
                      ((g$r$6089$14YGsk)
                       (begin (set! g$p$6088$14YGsk '#f) g$r$6089$14YGsk)))
                    (g$get-output-string$6083$14YGsk g$p$6088$14YGsk))
                   '""))))))
         (g$open-output-string$6084$14YGsk)))))
   (g$port?$6086$14YGsk
     g$port?$6095$14YGsk
     (case-lambda
       ((g$obj$6090$14YGsk)
        ((case-lambda
           ((g$t$6091$14YGsk)
            (if g$t$6091$14YGsk
              g$t$6091$14YGsk
              (begin '#f (binary-port? g$obj$6090$14YGsk)))))
         (textual-port? g$obj$6090$14YGsk))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6102$14YGsk
     g$with-input-from-file$6128$14YGsk
     (case-lambda
       ((g$filename$6106$14YGsk g$thunk$6107$14YGsk)
        ((case-lambda
           ((g$current-input-port$6110$14YGsk g$t$6111$14YGsk)
            ((case-lambda
               ((g$swap$6112$14YGsk)
                (dynamic-wind
                  g$swap$6112$14YGsk
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6107$14YGsk)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6112$14YGsk)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6113$14YGsk)
                    (begin
                      (g$current-input-port$6110$14YGsk g$t$6111$14YGsk)
                      (set! g$t$6111$14YGsk g$t$6113$14YGsk))))
                 (g$current-input-port$6110$14YGsk)))))))
         current-input-port
         (open-input-file g$filename$6106$14YGsk)))))
   (g$with-output-to-file$6103$14YGsk
     g$with-output-to-file$6129$14YGsk
     (case-lambda
       ((g$filename$6114$14YGsk g$thunk$6115$14YGsk)
        ((case-lambda
           ((g$current-output-port$6118$14YGsk g$t$6119$14YGsk)
            ((case-lambda
               ((g$swap$6120$14YGsk)
                (dynamic-wind
                  g$swap$6120$14YGsk
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6115$14YGsk)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6120$14YGsk)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6121$14YGsk)
                    (begin
                      (g$current-output-port$6118$14YGsk g$t$6119$14YGsk)
                      (set! g$t$6119$14YGsk g$t$6121$14YGsk))))
                 (g$current-output-port$6118$14YGsk)))))))
         current-output-port
         (open-output-file g$filename$6114$14YGsk)))))
   (g$call-with-input-file$6104$14YGsk
     g$call-with-input-file$6130$14YGsk
     (case-lambda
       ((g$filename$6122$14YGsk g$proc$6123$14YGsk)
        ((case-lambda
           ((g$p$6124$14YGsk)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6123$14YGsk g$p$6124$14YGsk)))
              (case-lambda (() (close-input-port g$p$6124$14YGsk))))))
         (open-input-file g$filename$6122$14YGsk)))))
   (g$call-with-output-file$6105$14YGsk
     g$call-with-output-file$6131$14YGsk
     (case-lambda
       ((g$filename$6125$14YGsk g$proc$6126$14YGsk)
        ((case-lambda
           ((g$p$6127$14YGsk)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6126$14YGsk g$p$6127$14YGsk)))
              (case-lambda (() (close-output-port g$p$6127$14YGsk))))))
         (open-output-file g$filename$6125$14YGsk))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7120$6132$14YGsk
     g$7120$6238$14YGsk
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7122$6133$14YGsk g$7122$6239$14YGsk '#f)
   (g$7121$6134$14YGsk
     g$7121$6240$14YGsk
     (make-record-constructor-descriptor
       g$7120$6132$14YGsk
       '#f
       g$7122$6133$14YGsk))
   (g$enum?$6135$14YGsk
     g$enum?$6241$14YGsk
     (record-predicate g$7120$6132$14YGsk))
   (g$make-enum$6136$14YGsk
     g$make-enum$6242$14YGsk
     (record-constructor g$7121$6134$14YGsk))
   (g$enum-value$6137$14YGsk
     g$enum-value$6243$14YGsk
     (record-accessor g$7120$6132$14YGsk '0))
   (g$enum-info$6138$14YGsk
     g$enum-info$6244$14YGsk
     (record-accessor g$7120$6132$14YGsk '1))
   (g$7133$6139$14YGsk
     g$7133$6245$14YGsk
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7135$6140$14YGsk g$7135$6246$14YGsk '#f)
   (g$7134$6141$14YGsk
     g$7134$6247$14YGsk
     (make-record-constructor-descriptor
       g$7133$6139$14YGsk
       '#f
       g$7135$6140$14YGsk))
   (g$enum-universe?$6142$14YGsk
     g$enum-universe?$6248$14YGsk
     (record-predicate g$7133$6139$14YGsk))
   (g$make-enum-universe$6143$14YGsk
     g$make-enum-universe$6249$14YGsk
     (record-constructor g$7134$6141$14YGsk))
   (g$enum-universe-id$6144$14YGsk
     g$enum-universe-id$6250$14YGsk
     (record-accessor g$7133$6139$14YGsk '0))
   (g$enum-universe-symbols$6145$14YGsk
     g$enum-universe-symbols$6251$14YGsk
     (record-accessor g$7133$6139$14YGsk '1))
   (g$enum-universe-mapping$6146$14YGsk
     g$enum-universe-mapping$6252$14YGsk
     (record-accessor g$7133$6139$14YGsk '2))
   (g$enum-universe-value$6147$14YGsk
     g$enum-universe-value$6253$14YGsk
     (record-accessor g$7133$6139$14YGsk '3))
   (g$enum-type=?$6148$14YGsk
     g$enum-type=?$6254$14YGsk
     (case-lambda
       ((g$enumset1$6168$14YGsk g$enumset2$6169$14YGsk)
        (eq? (g$enum-universe-id$6144$14YGsk
               (g$enum-info$6138$14YGsk g$enumset1$6168$14YGsk))
             (g$enum-universe-id$6144$14YGsk
               (g$enum-info$6138$14YGsk g$enumset2$6169$14YGsk))))))
   (g$get-symbols$6149$14YGsk
     g$get-symbols$6255$14YGsk
     (case-lambda
       ((g$enumset$6170$14YGsk)
        (g$enum-universe-symbols$6145$14YGsk
          (g$enum-info$6138$14YGsk g$enumset$6170$14YGsk)))))
   (g$get-value$6150$14YGsk
     g$get-value$6256$14YGsk
     (case-lambda
       ((g$enumset$6171$14YGsk g$s$6172$14YGsk)
        (g$hashtable-ref$5152$14YGsk
          (g$enum-universe-mapping$6146$14YGsk
            (g$enum-info$6138$14YGsk g$enumset$6171$14YGsk))
          g$s$6172$14YGsk
          '#f))))
   (g$assert-enum$6151$14YGsk
     g$assert-enum$6257$14YGsk
     (case-lambda
       ((g$who$6173$14YGsk g$enumset$6174$14YGsk)
        (if (not (g$enum?$6135$14YGsk g$enumset$6174$14YGsk))
          (assertion-violation
            g$who$6173$14YGsk
            '"not an enumeration"
            g$enumset$6174$14YGsk)
          (void)))))
   (g$make-info$6152$14YGsk
     g$make-info$6258$14YGsk
     (case-lambda
       ((g$symbols$6175$14YGsk)
        ((case-lambda
           ((g$ht$6176$14YGsk)
            ((letrec ((g$f$6177$14YGsk
                        (case-lambda
                          ((g$s$6178$14YGsk g$a$6179$14YGsk g$mask$6180$14YGsk)
                           (if (null? g$s$6178$14YGsk)
                             (values
                               (reverse! g$a$6179$14YGsk)
                               g$ht$6176$14YGsk
                               (- g$mask$6180$14YGsk '1))
                             ((case-lambda
                                ((g$n$6181$14YGsk)
                                 (if (symbol? g$n$6181$14YGsk)
                                   (if (g$hashtable-contains?$5155$14YGsk
                                         g$ht$6176$14YGsk
                                         g$n$6181$14YGsk)
                                     (g$f$6177$14YGsk
                                       (cdr g$s$6178$14YGsk)
                                       g$a$6179$14YGsk
                                       g$mask$6180$14YGsk)
                                     (begin
                                       (g$hashtable-set!$5153$14YGsk
                                         g$ht$6176$14YGsk
                                         g$n$6181$14YGsk
                                         g$mask$6180$14YGsk)
                                       (g$f$6177$14YGsk
                                         (cdr g$s$6178$14YGsk)
                                         (cons g$n$6181$14YGsk g$a$6179$14YGsk)
                                         (g$bitwise-arithmetic-shift-left$5842$14YGsk
                                           g$mask$6180$14YGsk
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6181$14YGsk))))
                              (car g$s$6178$14YGsk)))))))
               g$f$6177$14YGsk)
             g$symbols$6175$14YGsk
             '()
             '1)))
         (g$make-eq-hashtable$5149$14YGsk)))))
   (g$make-enumeration$6153$14YGsk
     g$make-enumeration$6259$14YGsk
     (case-lambda
       ((g$symbols$6182$14YGsk)
        (call-with-values
          (case-lambda (() (g$make-info$6152$14YGsk g$symbols$6182$14YGsk)))
          (case-lambda
            ((g$s$6186$14YGsk g$mapping$6187$14YGsk g$mask$6188$14YGsk)
             ((case-lambda
                ((g$mask$6189$14YGsk g$mapping$6190$14YGsk g$s$6191$14YGsk)
                 (g$make-enum$6136$14YGsk
                   g$mask$6189$14YGsk
                   (g$make-enum-universe$6143$14YGsk
                     (gensym)
                     g$s$6191$14YGsk
                     g$mapping$6190$14YGsk
                     g$mask$6189$14YGsk))))
              g$mask$6188$14YGsk
              g$mapping$6187$14YGsk
              g$s$6186$14YGsk)))))))
   (g$enum-set-universe$6154$14YGsk
     g$enum-set-universe$6260$14YGsk
     (case-lambda
       ((g$enumset$6192$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk 'enum-set-universe g$enumset$6192$14YGsk)
          ((case-lambda
             ((g$ei$6193$14YGsk)
              (g$make-enum$6136$14YGsk
                (g$enum-universe-value$6147$14YGsk g$ei$6193$14YGsk)
                g$ei$6193$14YGsk)))
           (g$enum-info$6138$14YGsk g$enumset$6192$14YGsk))))))
   (g$enum-set-indexer$6155$14YGsk
     g$enum-set-indexer$6261$14YGsk
     (case-lambda
       ((g$enumset$6194$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk 'enum-set-indexer g$enumset$6194$14YGsk)
          (case-lambda
            ((g$symbol$6195$14YGsk)
             (begin
               (if (not (symbol? g$symbol$6195$14YGsk))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6195$14YGsk)
                 (void))
               ((case-lambda
                  ((g$v$6196$14YGsk)
                   (if g$v$6196$14YGsk
                     (- (bitwise-length g$v$6196$14YGsk) '1)
                     '#f)))
                (g$get-value$6150$14YGsk
                  g$enumset$6194$14YGsk
                  g$symbol$6195$14YGsk)))))))))
   (g$enum-set-constructor$6156$14YGsk
     g$enum-set-constructor$6262$14YGsk
     (case-lambda
       ((g$enumset$6197$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk
            'enum-set-constructor
            g$enumset$6197$14YGsk)
          (case-lambda
            ((g$symbols$6198$14YGsk)
             ((letrec ((g$f$6199$14YGsk
                         (case-lambda
                           ((g$v$6200$14YGsk g$s$6201$14YGsk)
                            (if (null? g$s$6201$14YGsk)
                              (g$make-enum$6136$14YGsk
                                g$v$6200$14YGsk
                                (g$enum-info$6138$14YGsk g$enumset$6197$14YGsk))
                              ((case-lambda
                                 ((g$n$6202$14YGsk)
                                  (if (symbol? g$n$6202$14YGsk)
                                    ((case-lambda
                                       ((g$v*$6203$14YGsk)
                                        (if g$v*$6203$14YGsk
                                          (g$f$6199$14YGsk
                                            (bitwise-ior
                                              g$v$6200$14YGsk
                                              g$v*$6203$14YGsk)
                                            (cdr g$s$6201$14YGsk))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6202$14YGsk))))
                                     (g$get-value$6150$14YGsk
                                       g$enumset$6197$14YGsk
                                       g$n$6202$14YGsk))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6202$14YGsk))))
                               (car g$s$6201$14YGsk)))))))
                g$f$6199$14YGsk)
              '0
              g$symbols$6198$14YGsk)))))))
   (g$enum-set->list$6157$14YGsk
     g$enum-set->list$6263$14YGsk
     (case-lambda
       ((g$enumset$6204$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk 'enum-set->list g$enumset$6204$14YGsk)
          ((case-lambda
             ((g$value$6205$14YGsk)
              ((letrec ((g$f$6206$14YGsk
                          (case-lambda
                            ((g$s$6207$14YGsk g$l$6208$14YGsk)
                             (if (null? g$s$6207$14YGsk)
                               (reverse! g$l$6208$14YGsk)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6150$14YGsk
                                         g$enumset$6204$14YGsk
                                         (car g$s$6207$14YGsk))
                                       g$value$6205$14YGsk))
                                 (g$f$6206$14YGsk
                                   (cdr g$s$6207$14YGsk)
                                   g$l$6208$14YGsk)
                                 (g$f$6206$14YGsk
                                   (cdr g$s$6207$14YGsk)
                                   (cons
                                     (car g$s$6207$14YGsk)
                                     g$l$6208$14YGsk))))))))
                 g$f$6206$14YGsk)
               (g$get-symbols$6149$14YGsk g$enumset$6204$14YGsk)
               '())))
           (g$enum-value$6137$14YGsk g$enumset$6204$14YGsk))))))
   (g$enum-set-member?$6158$14YGsk
     g$enum-set-member?$6264$14YGsk
     (case-lambda
       ((g$symbol$6209$14YGsk g$enumset$6210$14YGsk)
        (begin
          (if (not (symbol? g$symbol$6209$14YGsk))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6209$14YGsk)
            (void))
          (g$assert-enum$6151$14YGsk 'enum-set-member? g$enumset$6210$14YGsk)
          ((case-lambda
             ((g$v$6211$14YGsk)
              (if g$v$6211$14YGsk
                (not (zero?
                       (bitwise-and
                         g$v$6211$14YGsk
                         (g$enum-value$6137$14YGsk g$enumset$6210$14YGsk))))
                '#f)))
           (g$get-value$6150$14YGsk
             g$enumset$6210$14YGsk
             g$symbol$6209$14YGsk))))))
   (g$enum-set-subset?$6159$14YGsk
     g$enum-set-subset?$6265$14YGsk
     (case-lambda
       ((g$enumset1$6212$14YGsk g$enumset2$6213$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk 'enum-set-subset? g$enumset1$6212$14YGsk)
          (g$assert-enum$6151$14YGsk 'enum-set-subset? g$enumset2$6213$14YGsk)
          ((case-lambda
             ((g$v1$6214$14YGsk g$v2$6215$14YGsk)
              (if (g$enum-type=?$6148$14YGsk
                    g$enumset1$6212$14YGsk
                    g$enumset2$6213$14YGsk)
                (= (bitwise-and g$v1$6214$14YGsk g$v2$6215$14YGsk)
                   g$v1$6214$14YGsk)
                ((letrec ((g$f$6216$14YGsk
                            (case-lambda
                              ((g$s$6217$14YGsk)
                               (if (null? g$s$6217$14YGsk)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6218$14YGsk g$v2*$6219$14YGsk)
                                     (if g$v2*$6219$14YGsk
                                       ((case-lambda
                                          ((g$has1$6220$14YGsk
                                             g$has2$6221$14YGsk)
                                           (if (if g$has1$6220$14YGsk
                                                 (begin
                                                   '#f
                                                   (not g$has2$6221$14YGsk))
                                                 '#f)
                                             '#f
                                             (g$f$6216$14YGsk
                                               (cdr g$s$6217$14YGsk)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6214$14YGsk
                                                 g$v1*$6218$14YGsk)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6215$14YGsk
                                                 g$v2*$6219$14YGsk))))
                                       '#f)))
                                  (g$get-value$6150$14YGsk
                                    g$enumset1$6212$14YGsk
                                    (car g$s$6217$14YGsk))
                                  (g$get-value$6150$14YGsk
                                    g$enumset2$6213$14YGsk
                                    (car g$s$6217$14YGsk))))))))
                   g$f$6216$14YGsk)
                 (g$get-symbols$6149$14YGsk g$enumset1$6212$14YGsk)))))
           (g$enum-value$6137$14YGsk g$enumset1$6212$14YGsk)
           (g$enum-value$6137$14YGsk g$enumset2$6213$14YGsk))))))
   (g$enum-set=?$6160$14YGsk
     g$enum-set=?$6266$14YGsk
     (case-lambda
       ((g$enumset1$6222$14YGsk g$enumset2$6223$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk 'enum-set=? g$enumset1$6222$14YGsk)
          (g$assert-enum$6151$14YGsk 'enum-set=? g$enumset2$6223$14YGsk)
          (if (g$enum-set-subset?$6159$14YGsk
                g$enumset1$6222$14YGsk
                g$enumset2$6223$14YGsk)
            (begin
              '#f
              (g$enum-set-subset?$6159$14YGsk
                g$enumset2$6223$14YGsk
                g$enumset1$6222$14YGsk))
            '#f)))))
   (g$enum-set-union$6161$14YGsk
     g$enum-set-union$6267$14YGsk
     (case-lambda
       ((g$enumset1$6224$14YGsk g$enumset2$6225$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk 'enum-set-union g$enumset1$6224$14YGsk)
          (g$assert-enum$6151$14YGsk 'enum-set-union g$enumset2$6225$14YGsk)
          (if (g$enum-type=?$6148$14YGsk
                g$enumset1$6224$14YGsk
                g$enumset2$6225$14YGsk)
            (g$make-enum$6136$14YGsk
              (bitwise-ior
                (g$enum-value$6137$14YGsk g$enumset1$6224$14YGsk)
                (g$enum-value$6137$14YGsk g$enumset2$6225$14YGsk))
              (g$enum-info$6138$14YGsk g$enumset1$6224$14YGsk))
            '#f)))))
   (g$enum-set-intersection$6162$14YGsk
     g$enum-set-intersection$6268$14YGsk
     (case-lambda
       ((g$enumset1$6226$14YGsk g$enumset2$6227$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk
            'enum-set-intersection
            g$enumset1$6226$14YGsk)
          (g$assert-enum$6151$14YGsk
            'enum-set-intersection
            g$enumset2$6227$14YGsk)
          (if (g$enum-type=?$6148$14YGsk
                g$enumset1$6226$14YGsk
                g$enumset2$6227$14YGsk)
            (g$make-enum$6136$14YGsk
              (bitwise-and
                (g$enum-value$6137$14YGsk g$enumset1$6226$14YGsk)
                (g$enum-value$6137$14YGsk g$enumset2$6227$14YGsk))
              (g$enum-info$6138$14YGsk g$enumset1$6226$14YGsk))
            '#f)))))
   (g$enum-set-difference$6163$14YGsk
     g$enum-set-difference$6269$14YGsk
     (case-lambda
       ((g$enumset1$6228$14YGsk g$enumset2$6229$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk
            'enum-set-difference
            g$enumset1$6228$14YGsk)
          (g$assert-enum$6151$14YGsk
            'enum-set-difference
            g$enumset2$6229$14YGsk)
          (if (g$enum-type=?$6148$14YGsk
                g$enumset1$6228$14YGsk
                g$enumset2$6229$14YGsk)
            (g$make-enum$6136$14YGsk
              (bitwise-and
                (g$enum-value$6137$14YGsk g$enumset1$6228$14YGsk)
                (bitwise-not (g$enum-value$6137$14YGsk g$enumset2$6229$14YGsk)))
              (g$enum-info$6138$14YGsk g$enumset1$6228$14YGsk))
            '#f)))))
   (g$enum-set-complement$6164$14YGsk
     g$enum-set-complement$6270$14YGsk
     (case-lambda
       ((g$enumset$6230$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk 'enum-set-complement g$enumset$6230$14YGsk)
          (g$make-enum$6136$14YGsk
            (bitwise-not (g$enum-value$6137$14YGsk g$enumset$6230$14YGsk))
            (g$enum-info$6138$14YGsk g$enumset$6230$14YGsk))))))
   (g$enum-set-projection$6165$14YGsk
     g$enum-set-projection$6271$14YGsk
     (case-lambda
       ((g$enumset1$6231$14YGsk g$enumset2$6232$14YGsk)
        (begin
          (g$assert-enum$6151$14YGsk
            'enum-set-projection
            g$enumset1$6231$14YGsk)
          (g$assert-enum$6151$14YGsk
            'enum-set-projection
            g$enumset2$6232$14YGsk)
          ((case-lambda
             ((g$v1$6233$14YGsk)
              ((letrec ((g$f$6234$14YGsk
                          (case-lambda
                            ((g$s$6235$14YGsk g$v$6236$14YGsk)
                             (if (null? g$s$6235$14YGsk)
                               (g$make-enum$6136$14YGsk
                                 g$v$6236$14YGsk
                                 (g$enum-info$6138$14YGsk
                                   g$enumset2$6232$14YGsk))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6233$14YGsk
                                       (g$get-value$6150$14YGsk
                                         g$enumset1$6231$14YGsk
                                         (car g$s$6235$14YGsk))))
                                 (g$f$6234$14YGsk
                                   (cdr g$s$6235$14YGsk)
                                   g$v$6236$14YGsk)
                                 ((case-lambda
                                    ((g$v2$6237$14YGsk)
                                     (if g$v2$6237$14YGsk
                                       (g$f$6234$14YGsk
                                         (cdr g$s$6235$14YGsk)
                                         (bitwise-ior
                                           g$v$6236$14YGsk
                                           g$v2$6237$14YGsk))
                                       (g$f$6234$14YGsk
                                         (cdr g$s$6235$14YGsk)
                                         g$v$6236$14YGsk))))
                                  (g$get-value$6150$14YGsk
                                    g$enumset2$6232$14YGsk
                                    (car g$s$6235$14YGsk)))))))))
                 g$f$6234$14YGsk)
               (g$get-symbols$6149$14YGsk g$enumset1$6231$14YGsk)
               '0)))
           (g$enum-value$6137$14YGsk g$enumset1$6231$14YGsk)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6166$14YGsk g$p$6167$14YGsk)
       (g$fprintf$6296$14YGsk
         g$p$6167$14YGsk
         '"#[enum-set ~a]"
         (g$enum-set->list$6157$14YGsk g$x$6166$14YGsk))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6272$14YGsk
     g$dofmt$6294$14YGsk
     (case-lambda
       ((g$p$6276$14YGsk g$cntl$6277$14YGsk g$args$6278$14YGsk)
        ((case-lambda
           ((g$nmax$6279$14YGsk)
            ((letrec ((g$loop$6280$14YGsk
                        (case-lambda
                          ((g$n$6281$14YGsk g$a$6282$14YGsk)
                           (if (fx<=? g$n$6281$14YGsk g$nmax$6279$14YGsk)
                             ((case-lambda
                                ((g$c$6283$14YGsk)
                                 (if (if (char=? g$c$6283$14YGsk '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6281$14YGsk
                                           g$nmax$6279$14YGsk))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6284$14YGsk)
                                       (if (memv g$t$6284$14YGsk '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6282$14YGsk)
                                             g$p$6276$14YGsk)
                                           (g$loop$6280$14YGsk
                                             (fx+ g$n$6281$14YGsk '2)
                                             (cdr g$a$6282$14YGsk)))
                                         (if (memv g$t$6284$14YGsk '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6282$14YGsk)
                                               g$p$6276$14YGsk)
                                             (g$loop$6280$14YGsk
                                               (fx+ g$n$6281$14YGsk '2)
                                               (cdr g$a$6282$14YGsk)))
                                           (if (memv g$t$6284$14YGsk '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6282$14YGsk)
                                                   '2)
                                                 g$p$6276$14YGsk)
                                               (g$loop$6280$14YGsk
                                                 (fx+ g$n$6281$14YGsk '2)
                                                 (cdr g$a$6282$14YGsk)))
                                             (if (memv g$t$6284$14YGsk '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6282$14YGsk)
                                                     '8)
                                                   g$p$6276$14YGsk)
                                                 (g$loop$6280$14YGsk
                                                   (fx+ g$n$6281$14YGsk '2)
                                                   (cdr g$a$6282$14YGsk)))
                                               (if (memv g$t$6284$14YGsk '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6282$14YGsk)
                                                       '16)
                                                     g$p$6276$14YGsk)
                                                   (g$loop$6280$14YGsk
                                                     (fx+ g$n$6281$14YGsk '2)
                                                     (cdr g$a$6282$14YGsk)))
                                                 (if (memv
                                                       g$t$6284$14YGsk
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6282$14YGsk)
                                                         '10)
                                                       g$p$6276$14YGsk)
                                                     (g$loop$6280$14YGsk
                                                       (fx+ g$n$6281$14YGsk '2)
                                                       (cdr g$a$6282$14YGsk)))
                                                   (if (memv
                                                         g$t$6284$14YGsk
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6276$14YGsk)
                                                       (g$loop$6280$14YGsk
                                                         (fx+ g$n$6281$14YGsk
                                                              '2)
                                                         g$a$6282$14YGsk))
                                                     (begin
                                                       (write-char
                                                         g$c$6283$14YGsk
                                                         g$p$6276$14YGsk)
                                                       (g$loop$6280$14YGsk
                                                         (fx+ g$n$6281$14YGsk
                                                              '1)
                                                         g$a$6282$14YGsk)))))))))))
                                    (string-ref
                                      g$cntl$6277$14YGsk
                                      (fx+ g$n$6281$14YGsk '1)))
                                   (begin
                                     (write-char
                                       g$c$6283$14YGsk
                                       g$p$6276$14YGsk)
                                     (g$loop$6280$14YGsk
                                       (fx+ g$n$6281$14YGsk '1)
                                       g$a$6282$14YGsk)))))
                              (string-ref g$cntl$6277$14YGsk g$n$6281$14YGsk))
                             (void))))))
               g$loop$6280$14YGsk)
             '0
             g$args$6278$14YGsk)))
         (fx- (string-length g$cntl$6277$14YGsk) '1)))))
   (g$printf$6273$14YGsk
     g$printf$6295$14YGsk
     (case-lambda
       ((g$control$6285$14YGsk . g$args$6286$14YGsk)
        (g$dofmt$6272$14YGsk
          (current-output-port)
          g$control$6285$14YGsk
          g$args$6286$14YGsk))))
   (g$fprintf$6274$14YGsk
     g$fprintf$6296$14YGsk
     (case-lambda
       ((g$p$6287$14YGsk g$control$6288$14YGsk . g$args$6289$14YGsk)
        (g$dofmt$6272$14YGsk
          g$p$6287$14YGsk
          g$control$6288$14YGsk
          g$args$6289$14YGsk))))
   (g$format$6275$14YGsk
     g$format$6297$14YGsk
     (case-lambda
       ((g$control$6290$14YGsk . g$args$6291$14YGsk)
        (call-with-values
          g$open-string-output-port$6094$14YGsk
          (case-lambda
            ((g$p$6292$14YGsk g$c$6293$14YGsk)
             (begin
               (g$dofmt$6272$14YGsk
                 g$p$6292$14YGsk
                 g$control$6290$14YGsk
                 g$args$6291$14YGsk)
               (g$c$6293$14YGsk)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6298$14YGsk
     g$make-traced-macro$6301$14YGsk
     (case-lambda
       ((g$name$6299$14YGsk g$x$6300$14YGsk)
        (if (procedure? g$x$6300$14YGsk)
          (make-traced-procedure
            g$name$6299$14YGsk
            g$x$6300$14YGsk
            g$syntax->datum$10941$14YGsk)
          (if (g$variable-transformer?$10766$14YGsk g$x$6300$14YGsk)
            (g$make-variable-transformer$10765$14YGsk
              (make-traced-procedure
                g$name$6299$14YGsk
                (g$variable-transformer-procedure$10767$14YGsk g$x$6300$14YGsk)
                g$syntax->datum$10941$14YGsk))
            g$x$6300$14YGsk))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6302$14YGsk
     g$read-library-source-file$6381$14YGsk
     (case-lambda
       ((g$file-name$6373$14YGsk)
        (g$with-input-from-file$6128$14YGsk
          g$file-name$6373$14YGsk
          read-annotated))))
   (g$make-parameter$6303$14YGsk
     g$make-parameter$6382$14YGsk
     (case-lambda
       ((g$x$6374$14YGsk)
        (g$make-parameter$6303$14YGsk
          g$x$6374$14YGsk
          (case-lambda ((g$x$6375$14YGsk) g$x$6375$14YGsk))))
       ((g$x$6376$14YGsk g$fender$6377$14YGsk)
        (begin
          (if (not (procedure? g$fender$6377$14YGsk))
            (g$assertion-error$10934$14YGsk
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6378$14YGsk)
              (case-lambda
                (() g$x$6378$14YGsk)
                ((g$v$6379$14YGsk)
                 (set! g$x$6378$14YGsk
                   (g$fender$6377$14YGsk g$v$6379$14YGsk))))))
           (g$fender$6377$14YGsk g$x$6376$14YGsk))))))
   (g$file-options-constructor$6371$14YGsk
     g$file-options-constructor$6383$14YGsk
     (g$make-parameter$6303$14YGsk '#f))
   (g$file-options-spec$6372$14YGsk
     g$file-options-spec$6384$14YGsk
     (case-lambda
       ((g$x$6380$14YGsk)
        ((g$file-options-constructor$6371$14YGsk) g$x$6380$14YGsk)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6581$14YGsk
     g$current-primitive-locations$6626$14YGsk
     (g$make-parameter$6382$14YGsk
       (case-lambda ((g$x$6587$14YGsk) '#f))
       (case-lambda
         ((g$p$6588$14YGsk)
          (begin
            (if (not (procedure? g$p$6588$14YGsk))
              (g$assertion-error$10934$14YGsk
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6588$14YGsk)))))
   (g$mutable?$6582$14YGsk
     g$mutable?$6627$14YGsk
     (case-lambda
       ((g$x$6589$14YGsk)
        (letrec* ((g$simple?$6590$14YGsk
                    (case-lambda
                      ((g$x$6591$14YGsk)
                       ((case-lambda
                          ((g$t$6592$14YGsk)
                           (if g$t$6592$14YGsk
                             g$t$6592$14YGsk
                             ((case-lambda
                                ((g$t$6593$14YGsk)
                                 (if g$t$6593$14YGsk
                                   g$t$6593$14YGsk
                                   ((case-lambda
                                      ((g$t$6594$14YGsk)
                                       (if g$t$6594$14YGsk
                                         g$t$6594$14YGsk
                                         ((case-lambda
                                            ((g$t$6595$14YGsk)
                                             (if g$t$6595$14YGsk
                                               g$t$6595$14YGsk
                                               ((case-lambda
                                                  ((g$t$6596$14YGsk)
                                                   (if g$t$6596$14YGsk
                                                     g$t$6596$14YGsk
                                                     ((case-lambda
                                                        ((g$t$6597$14YGsk)
                                                         (if g$t$6597$14YGsk
                                                           g$t$6597$14YGsk
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6591$14YGsk)))))
                                                      (bytevector?
                                                        g$x$6591$14YGsk)))))
                                                (string? g$x$6591$14YGsk)))))
                                          (boolean? g$x$6591$14YGsk)))))
                                    (symbol? g$x$6591$14YGsk)))))
                              (char? g$x$6591$14YGsk)))))
                        (null? g$x$6591$14YGsk))))))
          (not (g$simple?$6590$14YGsk g$x$6589$14YGsk))))))
   (g$rewriter$6583$14YGsk
     g$rewriter$6628$14YGsk
     (case-lambda
       ((g$quote-hack?$6598$14YGsk)
        (letrec* ((g$f$6599$14YGsk
                    (case-lambda
                      ((g$x$6600$14YGsk)
                       (if (pair? g$x$6600$14YGsk)
                         ((case-lambda
                            ((g$t$6601$14YGsk)
                             (if (memv g$t$6601$14YGsk '(quote))
                               (if (if g$quote-hack?$6598$14YGsk
                                     (begin
                                       '#f
                                       (g$mutable?$6582$14YGsk
                                         (g$cadr$4887$14YGsk g$x$6600$14YGsk)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6602$14YGsk)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6602$14YGsk
                                         (g$cadr$4887$14YGsk g$x$6600$14YGsk))
                                       g$g$6602$14YGsk)))
                                  (gensym))
                                 g$x$6600$14YGsk)
                               (if (memv g$t$6601$14YGsk '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6603$14YGsk)
                                           (cons
                                             (car g$x$6603$14YGsk)
                                             (map g$f$6599$14YGsk
                                                  (cdr g$x$6603$14YGsk)))))
                                        (cdr g$x$6600$14YGsk)))
                                 (if (memv g$t$6601$14YGsk '(lambda))
                                   (g$cons*$5358$14YGsk
                                     'lambda
                                     (g$cadr$4887$14YGsk g$x$6600$14YGsk)
                                     (map g$f$6599$14YGsk
                                          (g$cddr$4889$14YGsk g$x$6600$14YGsk)))
                                   (if (memv g$t$6601$14YGsk '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6604$14YGsk
                                           g$body*$6605$14YGsk)
                                         ((case-lambda
                                            ((g$lhs*$6606$14YGsk
                                               g$rhs*$6607$14YGsk)
                                             (g$cons*$5358$14YGsk
                                               'letrec
                                               (map list
                                                    g$lhs*$6606$14YGsk
                                                    (map g$f$6599$14YGsk
                                                         g$rhs*$6607$14YGsk))
                                               (map g$f$6599$14YGsk
                                                    g$body*$6605$14YGsk))))
                                          (map car g$bindings$6604$14YGsk)
                                          (map g$cadr$4887$14YGsk
                                               g$bindings$6604$14YGsk))))
                                      (g$cadr$4887$14YGsk g$x$6600$14YGsk)
                                      (g$cddr$4889$14YGsk g$x$6600$14YGsk))
                                     (if (memv g$t$6601$14YGsk '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6608$14YGsk
                                             g$body*$6609$14YGsk)
                                           ((case-lambda
                                              ((g$lhs*$6610$14YGsk
                                                 g$rhs*$6611$14YGsk)
                                               (g$cons*$5358$14YGsk
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6610$14YGsk
                                                      (map g$f$6599$14YGsk
                                                           g$rhs*$6611$14YGsk))
                                                 (map g$f$6599$14YGsk
                                                      g$body*$6609$14YGsk))))
                                            (map car g$bindings$6608$14YGsk)
                                            (map g$cadr$4887$14YGsk
                                                 g$bindings$6608$14YGsk))))
                                        (g$cadr$4887$14YGsk g$x$6600$14YGsk)
                                        (g$cddr$4889$14YGsk g$x$6600$14YGsk))
                                       (if (memv
                                             g$t$6601$14YGsk
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6612$14YGsk
                                               g$x$6613$14YGsk)
                                             ((case-lambda
                                                ((g$bindings$6614$14YGsk
                                                   g$body*$6615$14YGsk)
                                                 ((case-lambda
                                                    ((g$lhs*$6616$14YGsk
                                                       g$lhs**$6617$14YGsk
                                                       g$rhs*$6618$14YGsk)
                                                     (g$cons*$5358$14YGsk
                                                       'library-letrec*
                                                       g$name$6612$14YGsk
                                                       (map list
                                                            g$lhs*$6616$14YGsk
                                                            g$lhs**$6617$14YGsk
                                                            (map g$f$6599$14YGsk
                                                                 g$rhs*$6618$14YGsk))
                                                       (map g$f$6599$14YGsk
                                                            g$body*$6615$14YGsk))))
                                                  (map car
                                                       g$bindings$6614$14YGsk)
                                                  (map g$cadr$4887$14YGsk
                                                       g$bindings$6614$14YGsk)
                                                  (map g$caddr$4893$14YGsk
                                                       g$bindings$6614$14YGsk))))
                                              (g$cadr$4887$14YGsk
                                                g$x$6613$14YGsk)
                                              (g$cddr$4889$14YGsk
                                                g$x$6613$14YGsk))))
                                          (g$cadr$4887$14YGsk g$x$6600$14YGsk)
                                          (cdr g$x$6600$14YGsk))
                                         (if (memv g$t$6601$14YGsk '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6599$14YGsk
                                                  (cdr g$x$6600$14YGsk)))
                                           (if (memv g$t$6601$14YGsk '(set!))
                                             (list
                                               'set!
                                               (g$cadr$4887$14YGsk
                                                 g$x$6600$14YGsk)
                                               (g$f$6599$14YGsk
                                                 (g$caddr$4893$14YGsk
                                                   g$x$6600$14YGsk)))
                                             (if (memv
                                                   g$t$6601$14YGsk
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6619$14YGsk)
                                                   ((case-lambda
                                                      ((g$t$6620$14YGsk)
                                                       (if g$t$6620$14YGsk
                                                         ((case-lambda
                                                            ((g$loc$6621$14YGsk)
                                                             g$loc$6621$14YGsk))
                                                          g$t$6620$14YGsk)
                                                         g$op$6619$14YGsk)))
                                                    ((g$current-primitive-locations$6581$14YGsk)
                                                     g$op$6619$14YGsk))))
                                                (g$cadr$4887$14YGsk
                                                  g$x$6600$14YGsk))
                                               (if (memv
                                                     g$t$6601$14YGsk
                                                     '(define))
                                                 g$x$6600$14YGsk
                                                 (if (list? g$x$6600$14YGsk)
                                                   (map g$f$6599$14YGsk
                                                        g$x$6600$14YGsk)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6600$14YGsk
                                                     (list?
                                                       g$x$6600$14YGsk)))))))))))))))
                          (car g$x$6600$14YGsk))
                         g$x$6600$14YGsk)))))
          g$f$6599$14YGsk))))
   (g$expanded->core$6584$14YGsk
     g$expanded->core$6629$14YGsk
     (case-lambda
       ((g$x$6622$14YGsk) ((g$rewriter$6583$14YGsk '#t) g$x$6622$14YGsk))))
   (g$compile-core-expr$6585$14YGsk
     g$compile-core-expr$6630$14YGsk
     (case-lambda
       ((g$x$6623$14YGsk) ((g$rewriter$6583$14YGsk '#f) g$x$6623$14YGsk))))
   (g$compile-core-expr-to-port$6586$14YGsk
     g$compile-core-expr-to-port$6631$14YGsk
     (case-lambda
       ((g$x$6624$14YGsk g$p$6625$14YGsk)
        (g$pretty-print$6580$14YGsk
          ((g$rewriter$6583$14YGsk '#f) g$x$6624$14YGsk)
          g$p$6625$14YGsk)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6670$14YGsk
     g$make-collection$6874$14YGsk
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6731$14YGsk)
            (letrec* ((g$set-cons$6732$14YGsk
                        (case-lambda
                          ((g$x$6734$14YGsk g$ls$6735$14YGsk)
                           (if (memq g$x$6734$14YGsk g$ls$6735$14YGsk)
                             g$ls$6735$14YGsk
                             (cons g$x$6734$14YGsk g$ls$6735$14YGsk))))))
              (case-lambda
                (() g$set$6731$14YGsk)
                ((g$x$6733$14YGsk)
                 (set! g$set$6731$14YGsk
                   (g$set-cons$6732$14YGsk
                     g$x$6733$14YGsk
                     g$set$6731$14YGsk)))))))
         '()))))
   (g$current-library-collection$6671$14YGsk
     g$current-library-collection$6875$14YGsk
     (g$make-parameter$6382$14YGsk
       (g$make-collection$6670$14YGsk)
       (case-lambda
         ((g$x$6736$14YGsk)
          (begin
            (if (not (procedure? g$x$6736$14YGsk))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6736$14YGsk)
              (void))
            g$x$6736$14YGsk)))))
   (g$7652$6672$14YGsk
     g$7652$6876$14YGsk
     (make-record-type-descriptor
       'library
       '#f
       'g$7655$14YGsk
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7654$6673$14YGsk g$7654$6877$14YGsk '#f)
   (g$7653$6674$14YGsk
     g$7653$6878$14YGsk
     (make-record-constructor-descriptor
       g$7652$6672$14YGsk
       '#f
       g$7654$6673$14YGsk))
   (g$library?$6675$14YGsk
     g$library?$6879$14YGsk
     (record-predicate g$7652$6672$14YGsk))
   (g$make-library$6676$14YGsk
     g$make-library$6880$14YGsk
     (record-constructor g$7653$6674$14YGsk))
   (g$library-id$6677$14YGsk
     g$library-id$6881$14YGsk
     (record-accessor g$7652$6672$14YGsk '0))
   (g$library-name$6678$14YGsk
     g$library-name$6882$14YGsk
     (record-accessor g$7652$6672$14YGsk '1))
   (g$library-version$6679$14YGsk
     g$library-version$6883$14YGsk
     (record-accessor g$7652$6672$14YGsk '2))
   (g$library-imp*$6680$14YGsk
     g$library-imp*$6884$14YGsk
     (record-accessor g$7652$6672$14YGsk '3))
   (g$library-vis*$6681$14YGsk
     g$library-vis*$6885$14YGsk
     (record-accessor g$7652$6672$14YGsk '4))
   (g$library-inv*$6682$14YGsk
     g$library-inv*$6886$14YGsk
     (record-accessor g$7652$6672$14YGsk '5))
   (g$library-subst$6683$14YGsk
     g$library-subst$6887$14YGsk
     (record-accessor g$7652$6672$14YGsk '6))
   (g$library-env$6684$14YGsk
     g$library-env$6888$14YGsk
     (record-accessor g$7652$6672$14YGsk '7))
   (g$library-visit-state$6685$14YGsk
     g$library-visit-state$6889$14YGsk
     (record-accessor g$7652$6672$14YGsk '8))
   (g$library-invoke-state$6686$14YGsk
     g$library-invoke-state$6890$14YGsk
     (record-accessor g$7652$6672$14YGsk '9))
   (g$library-visit-code$6687$14YGsk
     g$library-visit-code$6891$14YGsk
     (record-accessor g$7652$6672$14YGsk '10))
   (g$library-invoke-code$6688$14YGsk
     g$library-invoke-code$6892$14YGsk
     (record-accessor g$7652$6672$14YGsk '11))
   (g$library-visible?$6689$14YGsk
     g$library-visible?$6893$14YGsk
     (record-accessor g$7652$6672$14YGsk '12))
   (g$library-source-file-name$6690$14YGsk
     g$library-source-file-name$6894$14YGsk
     (record-accessor g$7652$6672$14YGsk '13))
   (g$set-library-id!$6691$14YGsk
     g$set-library-id!$6895$14YGsk
     (record-mutator g$7652$6672$14YGsk '0))
   (g$set-library-name!$6692$14YGsk
     g$set-library-name!$6896$14YGsk
     (record-mutator g$7652$6672$14YGsk '1))
   (g$set-library-version!$6693$14YGsk
     g$set-library-version!$6897$14YGsk
     (record-mutator g$7652$6672$14YGsk '2))
   (g$set-library-imp*!$6694$14YGsk
     g$set-library-imp*!$6898$14YGsk
     (record-mutator g$7652$6672$14YGsk '3))
   (g$set-library-vis*!$6695$14YGsk
     g$set-library-vis*!$6899$14YGsk
     (record-mutator g$7652$6672$14YGsk '4))
   (g$set-library-inv*!$6696$14YGsk
     g$set-library-inv*!$6900$14YGsk
     (record-mutator g$7652$6672$14YGsk '5))
   (g$set-library-subst!$6697$14YGsk
     g$set-library-subst!$6901$14YGsk
     (record-mutator g$7652$6672$14YGsk '6))
   (g$set-library-env!$6698$14YGsk
     g$set-library-env!$6902$14YGsk
     (record-mutator g$7652$6672$14YGsk '7))
   (g$set-library-visit-state!$6699$14YGsk
     g$set-library-visit-state!$6903$14YGsk
     (record-mutator g$7652$6672$14YGsk '8))
   (g$set-library-invoke-state!$6700$14YGsk
     g$set-library-invoke-state!$6904$14YGsk
     (record-mutator g$7652$6672$14YGsk '9))
   (g$set-library-visit-code!$6701$14YGsk
     g$set-library-visit-code!$6905$14YGsk
     (record-mutator g$7652$6672$14YGsk '10))
   (g$set-library-invoke-code!$6702$14YGsk
     g$set-library-invoke-code!$6906$14YGsk
     (record-mutator g$7652$6672$14YGsk '11))
   (g$set-library-visible?!$6703$14YGsk
     g$set-library-visible?!$6907$14YGsk
     (record-mutator g$7652$6672$14YGsk '12))
   (g$set-library-source-file-name!$6704$14YGsk
     g$set-library-source-file-name!$6908$14YGsk
     (record-mutator g$7652$6672$14YGsk '13))
   (g$rp$6705$14YGsk
     g$rp$6909$14YGsk
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6737$14YGsk g$p$6738$14YGsk)
          (begin
            (if (not (g$library?$6675$14YGsk g$x$6737$14YGsk))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6297$14YGsk
                '"#<library ~s>"
                (if (null? (g$library-version$6679$14YGsk g$x$6737$14YGsk))
                  (g$library-name$6678$14YGsk g$x$6737$14YGsk)
                  (append
                    (g$library-name$6678$14YGsk g$x$6737$14YGsk)
                    (list (g$library-version$6679$14YGsk g$x$6737$14YGsk)))))
              g$p$6738$14YGsk))))))
   (g$find-dependencies$6706$14YGsk
     g$find-dependencies$6910$14YGsk
     (case-lambda
       ((g$ls$6739$14YGsk)
        (if (null? g$ls$6739$14YGsk)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6707$14YGsk
     g$find-library-by$6911$14YGsk
     (case-lambda
       ((g$pred$6740$14YGsk)
        ((letrec ((g$f$6741$14YGsk
                    (case-lambda
                      ((g$ls$6742$14YGsk)
                       (if (null? g$ls$6742$14YGsk)
                         '#f
                         (if (g$pred$6740$14YGsk (car g$ls$6742$14YGsk))
                           (car g$ls$6742$14YGsk)
                           (g$f$6741$14YGsk (cdr g$ls$6742$14YGsk))))))))
           g$f$6741$14YGsk)
         ((g$current-library-collection$6671$14YGsk))))))
   (g$library-path$6708$14YGsk
     g$library-path$6912$14YGsk
     (g$make-parameter$6382$14YGsk
       '(".")
       (case-lambda
         ((g$x$6743$14YGsk)
          (if (if (list? g$x$6743$14YGsk)
                (begin '#f (g$for-all$5356$14YGsk string? g$x$6743$14YGsk))
                '#f)
            (map (case-lambda ((g$x$6744$14YGsk) g$x$6744$14YGsk))
                 g$x$6743$14YGsk)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6743$14YGsk))))))
   (g$library-extensions$6709$14YGsk
     g$library-extensions$6913$14YGsk
     (g$make-parameter$6382$14YGsk
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6745$14YGsk)
          (if (if (list? g$x$6745$14YGsk)
                (begin '#f (g$for-all$5356$14YGsk string? g$x$6745$14YGsk))
                '#f)
            (map (case-lambda ((g$x$6746$14YGsk) g$x$6746$14YGsk))
                 g$x$6745$14YGsk)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6745$14YGsk))))))
   (g$library-name->file-name$6710$14YGsk
     g$library-name->file-name$6914$14YGsk
     (case-lambda
       ((g$x$6747$14YGsk)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6094$14YGsk)))
          (case-lambda
            ((g$p$6750$14YGsk g$extract$6751$14YGsk)
             ((case-lambda
                ((g$extract$6752$14YGsk g$p$6753$14YGsk)
                 (letrec* ((g$display-hex$6754$14YGsk
                             (case-lambda
                               ((g$n$6762$14YGsk)
                                (if (<= '0 g$n$6762$14YGsk '9)
                                  (display g$n$6762$14YGsk g$p$6753$14YGsk)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6762$14YGsk '10)))
                                    g$p$6753$14YGsk))))))
                   (begin
                     ((letrec ((g$f$6755$14YGsk
                                 (case-lambda
                                   ((g$ls$6756$14YGsk)
                                    (if (not (null? g$ls$6756$14YGsk))
                                      (begin
                                        (display '"/" g$p$6753$14YGsk)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6757$14YGsk)
                                             (if ((case-lambda
                                                    ((g$t$6758$14YGsk)
                                                     (if g$t$6758$14YGsk
                                                       g$t$6758$14YGsk
                                                       ((case-lambda
                                                          ((g$t$6759$14YGsk)
                                                           (if g$t$6759$14YGsk
                                                             g$t$6759$14YGsk
                                                             ((case-lambda
                                                                ((g$t$6760$14YGsk)
                                                                 (if g$t$6760$14YGsk
                                                                   g$t$6760$14YGsk
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$6757$14YGsk
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$6757$14YGsk
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$6757$14YGsk
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$6757$14YGsk
                                                    '#\z))
                                               (display
                                                 g$c$6757$14YGsk
                                                 g$p$6753$14YGsk)
                                               (begin
                                                 (display '"%" g$p$6753$14YGsk)
                                                 ((case-lambda
                                                    ((g$n$6761$14YGsk)
                                                     (begin
                                                       (g$display-hex$6754$14YGsk
                                                         (g$quotient$5720$14YGsk
                                                           g$n$6761$14YGsk
                                                           '16))
                                                       (g$display-hex$6754$14YGsk
                                                         (g$remainder$5721$14YGsk
                                                           g$n$6761$14YGsk
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6757$14YGsk))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6756$14YGsk))))
                                        (g$f$6755$14YGsk
                                          (cdr g$ls$6756$14YGsk)))
                                      (void))))))
                        g$f$6755$14YGsk)
                      g$x$6747$14YGsk)
                     (g$extract$6752$14YGsk)))))
              g$extract$6751$14YGsk
              g$p$6750$14YGsk)))))))
   (g$file-locator$6711$14YGsk
     g$file-locator$6915$14YGsk
     (g$make-parameter$6382$14YGsk
       (case-lambda
         ((g$x$6763$14YGsk)
          ((case-lambda
             ((g$str$6764$14YGsk)
              ((letrec ((g$f$6765$14YGsk
                          (case-lambda
                            ((g$ls$6766$14YGsk
                               g$exts$6767$14YGsk
                               g$failed-list$6768$14YGsk)
                             (if (null? g$ls$6766$14YGsk)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$7757$6769$14YGsk
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$7760$14YGsk
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$7759$6770$14YGsk '#f)
                                             (g$7758$6771$14YGsk
                                               (make-record-constructor-descriptor
                                                 g$7757$6769$14YGsk
                                                 &condition-rcd
                                                 g$7759$6770$14YGsk))
                                             (g$7756$6772$14YGsk
                                               (record-predicate
                                                 g$7757$6769$14YGsk))
                                             (g$make-library-resolution-condition$6773$14YGsk
                                               (record-constructor
                                                 g$7758$6771$14YGsk))
                                             (g$7754$6774$14YGsk
                                               (record-accessor
                                                 g$7757$6769$14YGsk
                                                 '0))
                                             (g$7755$6775$14YGsk
                                               (record-accessor
                                                 g$7757$6769$14YGsk
                                                 '1))
                                             (g$library-resolution-condition?$6776$14YGsk
                                               (condition-predicate
                                                 g$7757$6769$14YGsk))
                                             (g$condition-library$6777$14YGsk
                                               (condition-accessor
                                                 g$7757$6769$14YGsk
                                                 g$7754$6774$14YGsk))
                                             (g$condition-files$6778$14YGsk
                                               (condition-accessor
                                                 g$7757$6769$14YGsk
                                                 g$7755$6775$14YGsk)))
                                     (raise
                                       (condition
                                         (g$make-error$5630$14YGsk)
                                         (g$make-who-condition$5656$14YGsk
                                           'expander)
                                         (g$make-message-condition$5610$14YGsk
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6773$14YGsk
                                           g$x$6763$14YGsk
                                           (reverse
                                             g$failed-list$6768$14YGsk))))))))
                               (if (null? g$exts$6767$14YGsk)
                                 (g$f$6765$14YGsk
                                   (cdr g$ls$6766$14YGsk)
                                   (g$library-extensions$6709$14YGsk)
                                   g$failed-list$6768$14YGsk)
                                 ((case-lambda
                                    ((g$name$6779$14YGsk)
                                     (if (g$file-exists?$5227$14YGsk
                                           g$name$6779$14YGsk)
                                       g$name$6779$14YGsk
                                       (g$f$6765$14YGsk
                                         g$ls$6766$14YGsk
                                         (cdr g$exts$6767$14YGsk)
                                         (cons
                                           g$name$6779$14YGsk
                                           g$failed-list$6768$14YGsk)))))
                                  (string-append
                                    (car g$ls$6766$14YGsk)
                                    g$str$6764$14YGsk
                                    (car g$exts$6767$14YGsk)))))))))
                 g$f$6765$14YGsk)
               (g$library-path$6708$14YGsk)
               (g$library-extensions$6709$14YGsk)
               '())))
           (g$library-name->file-name$6710$14YGsk g$x$6763$14YGsk))))
       (case-lambda
         ((g$f$6780$14YGsk)
          (if (procedure? g$f$6780$14YGsk)
            g$f$6780$14YGsk
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6780$14YGsk))))))
   (g$serialize-all$6712$14YGsk
     g$serialize-all$6916$14YGsk
     (case-lambda
       ((g$serialize$6781$14YGsk g$compile$6782$14YGsk)
        (letrec* ((g$library-desc$6783$14YGsk
                    (case-lambda
                      ((g$x$6785$14YGsk)
                       (list
                         (g$library-id$6677$14YGsk g$x$6785$14YGsk)
                         (g$library-name$6678$14YGsk g$x$6785$14YGsk))))))
          (for-each
            (case-lambda
              ((g$x$6784$14YGsk)
               (if (g$library-source-file-name$6690$14YGsk g$x$6784$14YGsk)
                 (g$serialize$6781$14YGsk
                   (g$library-source-file-name$6690$14YGsk g$x$6784$14YGsk)
                   (list
                     (g$library-id$6677$14YGsk g$x$6784$14YGsk)
                     (g$library-name$6678$14YGsk g$x$6784$14YGsk)
                     (g$library-version$6679$14YGsk g$x$6784$14YGsk)
                     (map g$library-desc$6783$14YGsk
                          (g$library-imp*$6680$14YGsk g$x$6784$14YGsk))
                     (map g$library-desc$6783$14YGsk
                          (g$library-vis*$6681$14YGsk g$x$6784$14YGsk))
                     (map g$library-desc$6783$14YGsk
                          (g$library-inv*$6682$14YGsk g$x$6784$14YGsk))
                     (g$library-subst$6683$14YGsk g$x$6784$14YGsk)
                     (g$library-env$6684$14YGsk g$x$6784$14YGsk)
                     (g$compile$6782$14YGsk
                       (g$library-visit-code$6687$14YGsk g$x$6784$14YGsk))
                     (g$compile$6782$14YGsk
                       (g$library-invoke-code$6688$14YGsk g$x$6784$14YGsk))
                     (g$library-visible?$6689$14YGsk g$x$6784$14YGsk)))
                 (void))))
            ((g$current-library-collection$6671$14YGsk)))))))
   (g$current-precompiled-library-loader$6713$14YGsk
     g$current-precompiled-library-loader$6917$14YGsk
     (g$make-parameter$6382$14YGsk
       (case-lambda ((g$filename$6786$14YGsk g$sk$6787$14YGsk) '#f))))
   (g$try-load-from-file$6714$14YGsk
     g$try-load-from-file$6918$14YGsk
     (case-lambda
       ((g$filename$6788$14YGsk)
        ((g$current-precompiled-library-loader$6713$14YGsk)
         g$filename$6788$14YGsk
         (case-lambda
           ((g$id$6789$14YGsk
              g$name$6790$14YGsk
              g$ver$6791$14YGsk
              g$imp*$6792$14YGsk
              g$vis*$6793$14YGsk
              g$inv*$6794$14YGsk
              g$exp-subst$6795$14YGsk
              g$exp-env$6796$14YGsk
              g$visit-proc$6797$14YGsk
              g$invoke-proc$6798$14YGsk
              g$visible?$6799$14YGsk)
            ((letrec ((g$f$6800$14YGsk
                        (case-lambda
                          ((g$deps$6801$14YGsk)
                           (if (null? g$deps$6801$14YGsk)
                             (begin
                               (g$install-library$6724$14YGsk
                                 g$id$6789$14YGsk
                                 g$name$6790$14YGsk
                                 g$ver$6791$14YGsk
                                 g$imp*$6792$14YGsk
                                 g$vis*$6793$14YGsk
                                 g$inv*$6794$14YGsk
                                 g$exp-subst$6795$14YGsk
                                 g$exp-env$6796$14YGsk
                                 g$visit-proc$6797$14YGsk
                                 g$invoke-proc$6798$14YGsk
                                 '#f
                                 '#f
                                 g$visible?$6799$14YGsk
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$6802$14YGsk)
                                 ((case-lambda
                                    ((g$label$6803$14YGsk g$dname$6804$14YGsk)
                                     ((case-lambda
                                        ((g$l$6805$14YGsk)
                                         (if (if (g$library?$6675$14YGsk
                                                   g$l$6805$14YGsk)
                                               (begin
                                                 '#f
                                                 (eq? g$label$6803$14YGsk
                                                      (g$library-id$6677$14YGsk
                                                        g$l$6805$14YGsk)))
                                               '#f)
                                           (g$f$6800$14YGsk
                                             (cdr g$deps$6801$14YGsk))
                                           (begin
                                             (g$fprintf$6296$14YGsk
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$6790$14YGsk
                                               g$dname$6804$14YGsk
                                               g$filename$6788$14YGsk)
                                             '#f))))
                                      (g$find-library-by-name$6719$14YGsk
                                        g$dname$6804$14YGsk))))
                                  (car g$d$6802$14YGsk)
                                  (g$cadr$4887$14YGsk g$d$6802$14YGsk))))
                              (car g$deps$6801$14YGsk)))))))
               g$f$6800$14YGsk)
             (append g$imp*$6792$14YGsk g$vis*$6793$14YGsk g$inv*$6794$14YGsk)))
           (g$others$6806$14YGsk '#f))))))
   (g$library-loader$6715$14YGsk
     g$library-loader$6919$14YGsk
     (g$make-parameter$6382$14YGsk
       (case-lambda
         ((g$x$6807$14YGsk)
          ((case-lambda
             ((g$file-name$6808$14YGsk)
              (if (not g$file-name$6808$14YGsk)
                (assertion-violation '#f '"cannot file library" g$x$6807$14YGsk)
                ((case-lambda
                   ((g$t$6809$14YGsk)
                    (if g$t$6809$14YGsk
                      g$t$6809$14YGsk
                      (begin
                        '#f
                        ((g$current-library-expander$6716$14YGsk)
                         (g$read-library-source-file$6381$14YGsk
                           g$file-name$6808$14YGsk)
                         g$file-name$6808$14YGsk
                         (case-lambda
                           ((g$name$6810$14YGsk)
                            (if (not (equal?
                                       g$name$6810$14YGsk
                                       g$x$6807$14YGsk))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6094$14YGsk)))
                                  (case-lambda
                                    ((g$p$6813$14YGsk g$e$6814$14YGsk)
                                     ((case-lambda
                                        ((g$e$6815$14YGsk g$p$6816$14YGsk)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$6816$14YGsk)
                                           (write
                                             g$x$6807$14YGsk
                                             g$p$6816$14YGsk)
                                           (display
                                             '" in file "
                                             g$p$6816$14YGsk)
                                           (display
                                             g$file-name$6808$14YGsk
                                             g$p$6816$14YGsk)
                                           (display '", found " g$p$6816$14YGsk)
                                           (write
                                             g$name$6810$14YGsk
                                             g$p$6816$14YGsk)
                                           (display '" instead" g$p$6816$14YGsk)
                                           (g$e$6815$14YGsk))))
                                      g$e$6814$14YGsk
                                      g$p$6813$14YGsk)))))
                              (void)))))))))
                 (g$try-load-from-file$6714$14YGsk g$file-name$6808$14YGsk)))))
           ((g$file-locator$6711$14YGsk) g$x$6807$14YGsk))))
       (case-lambda
         ((g$f$6817$14YGsk)
          (if (procedure? g$f$6817$14YGsk)
            g$f$6817$14YGsk
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$6817$14YGsk))))))
   (g$current-library-expander$6716$14YGsk
     g$current-library-expander$6920$14YGsk
     (g$make-parameter$6382$14YGsk
       (case-lambda
         ((g$x$6818$14YGsk)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$6819$14YGsk)
          (if (procedure? g$f$6819$14YGsk)
            g$f$6819$14YGsk
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$6819$14YGsk))))))
   (g$external-pending-libraries$6717$14YGsk
     g$external-pending-libraries$6921$14YGsk
     (g$make-parameter$6382$14YGsk '()))
   (g$find-external-library$6718$14YGsk
     g$find-external-library$6922$14YGsk
     (case-lambda
       ((g$name$6820$14YGsk)
        (begin
          (if (g$member$5352$14YGsk
                g$name$6820$14YGsk
                (g$external-pending-libraries$6717$14YGsk))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$6820$14YGsk)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$6823$14YGsk
                g$external-pending-libraries$6824$14YGsk)
              ((case-lambda
                 ((g$swap$6825$14YGsk)
                  (dynamic-wind
                    g$swap$6825$14YGsk
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6715$14YGsk) g$name$6820$14YGsk)
                         ((case-lambda
                            ((g$t$6826$14YGsk)
                             (if g$t$6826$14YGsk
                               g$t$6826$14YGsk
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$6820$14YGsk)))))
                          (g$find-library-by$6707$14YGsk
                            (case-lambda
                              ((g$x$6827$14YGsk)
                               (equal?
                                 (g$library-name$6678$14YGsk g$x$6827$14YGsk)
                                 g$name$6820$14YGsk))))))))
                    g$swap$6825$14YGsk)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$6828$14YGsk)
                      (begin
                        (g$external-pending-libraries$6823$14YGsk
                          g$external-pending-libraries$6824$14YGsk)
                        (set! g$external-pending-libraries$6824$14YGsk
                          g$t$6828$14YGsk))))
                   (g$external-pending-libraries$6823$14YGsk)))))))
           g$external-pending-libraries$6717$14YGsk
           (cons
             g$name$6820$14YGsk
             (g$external-pending-libraries$6717$14YGsk)))))))
   (g$find-library-by-name$6719$14YGsk
     g$find-library-by-name$6923$14YGsk
     (case-lambda
       ((g$name$6829$14YGsk)
        ((case-lambda
           ((g$t$6830$14YGsk)
            (if g$t$6830$14YGsk
              g$t$6830$14YGsk
              (begin
                '#f
                (g$find-external-library$6718$14YGsk g$name$6829$14YGsk)))))
         (g$find-library-by$6707$14YGsk
           (case-lambda
             ((g$x$6831$14YGsk)
              (equal?
                (g$library-name$6678$14YGsk g$x$6831$14YGsk)
                g$name$6829$14YGsk))))))))
   (g$library-exists?$6720$14YGsk
     g$library-exists?$6924$14YGsk
     (case-lambda
       ((g$name$6832$14YGsk)
        (if (g$find-library-by$6707$14YGsk
              (case-lambda
                ((g$x$6833$14YGsk)
                 (equal?
                   (g$library-name$6678$14YGsk g$x$6833$14YGsk)
                   g$name$6832$14YGsk))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6721$14YGsk
     g$find-library-by-spec/die$6925$14YGsk
     (case-lambda
       ((g$spec$6834$14YGsk)
        ((case-lambda
           ((g$id$6835$14YGsk)
            ((case-lambda
               ((g$t$6836$14YGsk)
                (if g$t$6836$14YGsk
                  g$t$6836$14YGsk
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$6834$14YGsk)))))
             (g$find-library-by$6707$14YGsk
               (case-lambda
                 ((g$x$6837$14YGsk)
                  (eq? g$id$6835$14YGsk
                       (g$library-id$6677$14YGsk g$x$6837$14YGsk))))))))
         (car g$spec$6834$14YGsk)))))
   (g$label->binding-table$6722$14YGsk
     g$label->binding-table$6926$14YGsk
     (g$make-eq-hashtable$5149$14YGsk))
   (g$install-library-record$6723$14YGsk
     g$install-library-record$6927$14YGsk
     (case-lambda
       ((g$lib$6838$14YGsk)
        (begin
          ((case-lambda
             ((g$exp-env$6839$14YGsk)
              (for-each
                (case-lambda
                  ((g$x$6840$14YGsk)
                   ((case-lambda
                      ((g$label$6841$14YGsk g$binding$6842$14YGsk)
                       ((case-lambda
                          ((g$binding$6843$14YGsk)
                           (g$hashtable-set!$5153$14YGsk
                             g$label->binding-table$6722$14YGsk
                             g$label$6841$14YGsk
                             g$binding$6843$14YGsk)))
                        ((case-lambda
                           ((g$t$6844$14YGsk)
                            (if (memv g$t$6844$14YGsk '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$6838$14YGsk
                                  (cdr g$binding$6842$14YGsk)))
                              (if (memv g$t$6844$14YGsk '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$6838$14YGsk
                                    (cdr g$binding$6842$14YGsk)))
                                (if (memv g$t$6844$14YGsk '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$6838$14YGsk
                                      (cdr g$binding$6842$14YGsk)))
                                  g$binding$6842$14YGsk)))))
                         (car g$binding$6842$14YGsk)))))
                    (car g$x$6840$14YGsk)
                    (cdr g$x$6840$14YGsk))))
                g$exp-env$6839$14YGsk)))
           (g$library-env$6684$14YGsk g$lib$6838$14YGsk))
          ((g$current-library-collection$6671$14YGsk) g$lib$6838$14YGsk)))))
   (g$install-library$6724$14YGsk
     g$install-library$6928$14YGsk
     (case-lambda
       ((g$id$6845$14YGsk
          g$name$6846$14YGsk
          g$ver$6847$14YGsk
          g$imp*$6848$14YGsk
          g$vis*$6849$14YGsk
          g$inv*$6850$14YGsk
          g$exp-subst$6851$14YGsk
          g$exp-env$6852$14YGsk
          g$visit-proc$6853$14YGsk
          g$invoke-proc$6854$14YGsk
          g$visit-code$6855$14YGsk
          g$invoke-code$6856$14YGsk
          g$visible?$6857$14YGsk
          g$source-file-name$6858$14YGsk)
        ((case-lambda
           ((g$imp-lib*$6859$14YGsk
              g$vis-lib*$6860$14YGsk
              g$inv-lib*$6861$14YGsk)
            (begin
              (if (not (if (symbol? g$id$6845$14YGsk)
                         (if (list? g$name$6846$14YGsk)
                           (begin '#f (list? g$ver$6847$14YGsk))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$6845$14YGsk
                  g$name$6846$14YGsk
                  g$ver$6847$14YGsk)
                (void))
              (if (g$library-exists?$6720$14YGsk g$name$6846$14YGsk)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$6846$14YGsk)
                (void))
              ((case-lambda
                 ((g$lib$6862$14YGsk)
                  (g$install-library-record$6723$14YGsk g$lib$6862$14YGsk)))
               (g$make-library$6676$14YGsk
                 g$id$6845$14YGsk
                 g$name$6846$14YGsk
                 g$ver$6847$14YGsk
                 g$imp-lib*$6859$14YGsk
                 g$vis-lib*$6860$14YGsk
                 g$inv-lib*$6861$14YGsk
                 g$exp-subst$6851$14YGsk
                 g$exp-env$6852$14YGsk
                 g$visit-proc$6853$14YGsk
                 g$invoke-proc$6854$14YGsk
                 g$visit-code$6855$14YGsk
                 g$invoke-code$6856$14YGsk
                 g$visible?$6857$14YGsk
                 g$source-file-name$6858$14YGsk)))))
         (map g$find-library-by-spec/die$6721$14YGsk g$imp*$6848$14YGsk)
         (map g$find-library-by-spec/die$6721$14YGsk g$vis*$6849$14YGsk)
         (map g$find-library-by-spec/die$6721$14YGsk g$inv*$6850$14YGsk)))))
   (g$imported-label->binding$6725$14YGsk
     g$imported-label->binding$6929$14YGsk
     (case-lambda
       ((g$lab$6863$14YGsk)
        (g$hashtable-ref$5152$14YGsk
          g$label->binding-table$6722$14YGsk
          g$lab$6863$14YGsk
          '#f))))
   (g$invoke-library$6726$14YGsk
     g$invoke-library$6930$14YGsk
     (case-lambda
       ((g$lib$6864$14YGsk)
        ((case-lambda
           ((g$invoke$6865$14YGsk)
            (if (procedure? g$invoke$6865$14YGsk)
              (begin
                (g$set-library-invoke-state!$6700$14YGsk
                  g$lib$6864$14YGsk
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$6864$14YGsk))))
                (for-each
                  g$invoke-library$6726$14YGsk
                  (g$library-inv*$6682$14YGsk g$lib$6864$14YGsk))
                (g$set-library-invoke-state!$6700$14YGsk
                  g$lib$6864$14YGsk
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$6864$14YGsk))))
                (g$invoke$6865$14YGsk)
                (g$set-library-invoke-state!$6700$14YGsk g$lib$6864$14YGsk '#t))
              (void))))
         (g$library-invoke-state$6686$14YGsk g$lib$6864$14YGsk)))))
   (g$visit-library$6727$14YGsk
     g$visit-library$6931$14YGsk
     (case-lambda
       ((g$lib$6866$14YGsk)
        ((case-lambda
           ((g$visit$6867$14YGsk)
            (if (procedure? g$visit$6867$14YGsk)
              (begin
                (g$set-library-visit-state!$6699$14YGsk
                  g$lib$6866$14YGsk
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$6866$14YGsk))))
                (for-each
                  g$invoke-library$6726$14YGsk
                  (g$library-vis*$6681$14YGsk g$lib$6866$14YGsk))
                (g$set-library-visit-state!$6699$14YGsk
                  g$lib$6866$14YGsk
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$6866$14YGsk))))
                (g$visit$6867$14YGsk)
                (g$set-library-visit-state!$6699$14YGsk g$lib$6866$14YGsk '#t))
              (void))))
         (g$library-visit-state$6685$14YGsk g$lib$6866$14YGsk)))))
   (g$invoke-library-by-spec$6728$14YGsk
     g$invoke-library-by-spec$6932$14YGsk
     (case-lambda
       ((g$spec$6868$14YGsk)
        (g$invoke-library$6726$14YGsk
          (g$find-library-by-spec/die$6721$14YGsk g$spec$6868$14YGsk)))))
   (g$installed-libraries$6729$14YGsk
     g$installed-libraries$6933$14YGsk
     (case-lambda
       ((g$all?$6869$14YGsk)
        ((letrec ((g$f$6870$14YGsk
                    (case-lambda
                      ((g$ls$6871$14YGsk)
                       (if (null? g$ls$6871$14YGsk)
                         '()
                         (if ((case-lambda
                                ((g$t$6872$14YGsk)
                                 (if g$t$6872$14YGsk
                                   g$t$6872$14YGsk
                                   (begin
                                     '#f
                                     (g$library-visible?$6689$14YGsk
                                       (car g$ls$6871$14YGsk))))))
                              g$all?$6869$14YGsk)
                           (cons
                             (car g$ls$6871$14YGsk)
                             (g$f$6870$14YGsk (cdr g$ls$6871$14YGsk)))
                           (g$f$6870$14YGsk (cdr g$ls$6871$14YGsk))))))))
           g$f$6870$14YGsk)
         ((g$current-library-collection$6671$14YGsk))))
       (() (g$installed-libraries$6729$14YGsk '#f))))
   (g$library-spec$6730$14YGsk
     g$library-spec$6934$14YGsk
     (case-lambda
       ((g$x$6873$14YGsk)
        (begin
          (if (not (g$library?$6675$14YGsk g$x$6873$14YGsk))
            (assertion-violation 'library-spec '"not a library" g$x$6873$14YGsk)
            (void))
          (list
            (g$library-id$6677$14YGsk g$x$6873$14YGsk)
            (g$library-name$6678$14YGsk g$x$6873$14YGsk)
            (g$library-version$6679$14YGsk g$x$6873$14YGsk)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$6935$14YGsk
     g$build-global-define$7045$14YGsk
     (case-lambda ((g$x$7016$14YGsk) (g$build-void$7012$14YGsk))))
   (g$build-lambda$6984$14YGsk
     g$build-lambda$7046$14YGsk
     (case-lambda
       ((g$ae$7017$14YGsk g$vars$7018$14YGsk g$exp$7019$14YGsk)
        (list 'case-lambda (list g$vars$7018$14YGsk g$exp$7019$14YGsk)))))
   (g$build-case-lambda$6985$14YGsk
     g$build-case-lambda$7047$14YGsk
     (case-lambda
       ((g$ae$7020$14YGsk g$vars*$7021$14YGsk g$exp*$7022$14YGsk)
        (cons 'case-lambda (map list g$vars*$7021$14YGsk g$exp*$7022$14YGsk)))))
   (g$build-let$6986$14YGsk
     g$build-let$7048$14YGsk
     (case-lambda
       ((g$ae$7023$14YGsk
          g$lhs*$7024$14YGsk
          g$rhs*$7025$14YGsk
          g$body$7026$14YGsk)
        (cons
          (g$build-lambda$6984$14YGsk
            g$ae$7023$14YGsk
            g$lhs*$7024$14YGsk
            g$body$7026$14YGsk)
          g$rhs*$7025$14YGsk))))
   (g$build-sequence$7011$14YGsk
     g$build-sequence$7049$14YGsk
     (case-lambda
       ((g$ae$7027$14YGsk g$exps$7028$14YGsk)
        ((letrec ((g$loop$7029$14YGsk
                    (case-lambda
                      ((g$exps$7030$14YGsk)
                       (if (null? (cdr g$exps$7030$14YGsk))
                         (car g$exps$7030$14YGsk)
                         (if (equal?
                               (car g$exps$7030$14YGsk)
                               (g$build-void$7012$14YGsk))
                           (g$loop$7029$14YGsk (cdr g$exps$7030$14YGsk))
                           (cons 'begin g$exps$7030$14YGsk)))))))
           g$loop$7029$14YGsk)
         g$exps$7028$14YGsk))))
   (g$build-void$7012$14YGsk
     g$build-void$7050$14YGsk
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7013$14YGsk
     g$build-letrec$7051$14YGsk
     (case-lambda
       ((g$ae$7031$14YGsk
          g$vars$7032$14YGsk
          g$val-exps$7033$14YGsk
          g$body-exp$7034$14YGsk)
        (if (null? g$vars$7032$14YGsk)
          g$body-exp$7034$14YGsk
          (list
            'letrec
            (map list g$vars$7032$14YGsk g$val-exps$7033$14YGsk)
            g$body-exp$7034$14YGsk)))))
   (g$build-letrec*$7014$14YGsk
     g$build-letrec*$7052$14YGsk
     (case-lambda
       ((g$ae$7035$14YGsk
          g$vars$7036$14YGsk
          g$val-exps$7037$14YGsk
          g$body-exp$7038$14YGsk)
        (if (null? g$vars$7036$14YGsk)
          g$body-exp$7038$14YGsk
          (list
            'letrec*
            (map list g$vars$7036$14YGsk g$val-exps$7037$14YGsk)
            g$body-exp$7038$14YGsk)))))
   (g$build-library-letrec*$7015$14YGsk
     g$build-library-letrec*$7053$14YGsk
     (case-lambda
       ((g$ae$7039$14YGsk
          g$name$7040$14YGsk
          g$vars$7041$14YGsk
          g$locs$7042$14YGsk
          g$val-exps$7043$14YGsk
          g$body-exp$7044$14YGsk)
        (list
          'library-letrec*
          g$name$7040$14YGsk
          (map list
               g$vars$7041$14YGsk
               g$locs$7042$14YGsk
               g$val-exps$7043$14YGsk)
          g$body-exp$7044$14YGsk)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7054$14YGsk
     g$set-cons$10683$14YGsk
     (case-lambda
       ((g$x$7510$14YGsk g$ls$7511$14YGsk)
        (if (memq g$x$7510$14YGsk g$ls$7511$14YGsk)
          g$ls$7511$14YGsk
          (cons g$x$7510$14YGsk g$ls$7511$14YGsk)))))
   (g$set-union$7055$14YGsk
     g$set-union$10684$14YGsk
     (case-lambda
       ((g$ls1$7512$14YGsk g$ls2$7513$14YGsk)
        (if (null? g$ls1$7512$14YGsk)
          g$ls2$7513$14YGsk
          (if (memq (car g$ls1$7512$14YGsk) g$ls2$7513$14YGsk)
            (g$set-union$7055$14YGsk (cdr g$ls1$7512$14YGsk) g$ls2$7513$14YGsk)
            (cons
              (car g$ls1$7512$14YGsk)
              (g$set-union$7055$14YGsk
                (cdr g$ls1$7512$14YGsk)
                g$ls2$7513$14YGsk)))))))
   (g$top-mark*$7057$14YGsk g$top-mark*$10685$14YGsk '(top))
   (g$top-marked?$7058$14YGsk
     g$top-marked?$10686$14YGsk
     (case-lambda ((g$m*$7514$14YGsk) (memq 'top g$m*$7514$14YGsk))))
   (g$gen-lexical$7059$14YGsk
     g$gen-lexical$10687$14YGsk
     (case-lambda
       ((g$sym$7515$14YGsk)
        (if (symbol? g$sym$7515$14YGsk)
          (gensym g$sym$7515$14YGsk)
          (if (g$stx?$7087$14YGsk g$sym$7515$14YGsk)
            (g$gen-lexical$7059$14YGsk
              (g$id->sym$7116$14YGsk g$sym$7515$14YGsk))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7515$14YGsk))))))
   (g$gen-global$7060$14YGsk
     g$gen-global$10688$14YGsk
     (case-lambda
       ((g$x$7516$14YGsk) (g$gen-lexical$7059$14YGsk g$x$7516$14YGsk))))
   (g$gen-label$7061$14YGsk
     g$gen-label$10689$14YGsk
     (case-lambda ((g$_$7517$14YGsk) (gensym))))
   (g$gen-top-level-label$7062$14YGsk
     g$gen-top-level-label$10690$14YGsk
     (case-lambda
       ((g$id$7518$14YGsk g$rib$7519$14YGsk)
        (letrec* ((g$find$7520$14YGsk
                    (case-lambda
                      ((g$sym$7526$14YGsk
                         g$mark*$7527$14YGsk
                         g$sym*$7528$14YGsk
                         g$mark**$7529$14YGsk
                         g$label*$7530$14YGsk)
                       (if (pair? g$sym*$7528$14YGsk)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7526$14YGsk
                                        (car g$sym*$7528$14YGsk))
                                 (begin
                                   '#f
                                   (g$same-marks?$7117$14YGsk
                                     g$mark*$7527$14YGsk
                                     (car g$mark**$7529$14YGsk)))
                                 '#f)
                             (car g$label*$7530$14YGsk)
                             (g$find$7520$14YGsk
                               g$sym$7526$14YGsk
                               g$mark*$7527$14YGsk
                               (cdr g$sym*$7528$14YGsk)
                               (cdr g$mark**$7529$14YGsk)
                               (cdr g$label*$7530$14YGsk))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7521$14YGsk g$mark*$7522$14YGsk)
              ((case-lambda
                 ((g$sym*$7523$14YGsk)
                  ((case-lambda
                     ((g$t$7524$14YGsk)
                      (if g$t$7524$14YGsk
                        ((case-lambda
                           ((g$label$7525$14YGsk)
                            (if (g$imported-label->binding$6929$14YGsk
                                  g$label$7525$14YGsk)
                              (gensym)
                              g$label$7525$14YGsk)))
                         g$t$7524$14YGsk)
                        (gensym))))
                   (if (memq
                         g$sym$7521$14YGsk
                         (g$rib-sym*$7070$14YGsk g$rib$7519$14YGsk))
                     (begin
                       '#f
                       (g$find$7520$14YGsk
                         g$sym$7521$14YGsk
                         g$mark*$7522$14YGsk
                         g$sym*$7523$14YGsk
                         (g$rib-mark**$7071$14YGsk g$rib$7519$14YGsk)
                         (g$rib-label*$7072$14YGsk g$rib$7519$14YGsk)))
                     '#f))))
               (g$rib-sym*$7070$14YGsk g$rib$7519$14YGsk))))
           (g$id->sym$7116$14YGsk g$id$7518$14YGsk)
           (g$stx-mark*$7090$14YGsk g$id$7518$14YGsk))))))
   (g$gen-define-label+loc$7063$14YGsk
     g$gen-define-label+loc$10691$14YGsk
     (case-lambda
       ((g$id$7531$14YGsk g$rib$7532$14YGsk)
        ((case-lambda
           ((g$t$7533$14YGsk)
            (if g$t$7533$14YGsk
              ((case-lambda
                 ((g$env$7534$14YGsk)
                  ((case-lambda
                     ((g$label$7535$14YGsk g$locs$7536$14YGsk)
                      (values
                        g$label$7535$14YGsk
                        ((case-lambda
                           ((g$t$7537$14YGsk)
                            (if g$t$7537$14YGsk
                              (cdr g$t$7537$14YGsk)
                              ((case-lambda
                                 ((g$loc$7538$14YGsk)
                                  (begin
                                    (g$set-interaction-env-locs!$7476$14YGsk
                                      g$env$7534$14YGsk
                                      (cons
                                        (cons
                                          g$label$7535$14YGsk
                                          g$loc$7538$14YGsk)
                                        g$locs$7536$14YGsk))
                                    g$loc$7538$14YGsk)))
                               (g$gen-lexical$7059$14YGsk g$id$7531$14YGsk)))))
                         (assq g$label$7535$14YGsk g$locs$7536$14YGsk)))))
                   (g$gen-top-level-label$7062$14YGsk
                     g$id$7531$14YGsk
                     g$rib$7532$14YGsk)
                   (g$interaction-env-locs$7473$14YGsk g$env$7534$14YGsk))))
               g$t$7533$14YGsk)
              (values (gensym) (g$gen-lexical$7059$14YGsk g$id$7531$14YGsk)))))
         (g$top-level-context$7509$14YGsk)))))
   (g$gen-define-label$7064$14YGsk
     g$gen-define-label$10692$14YGsk
     (case-lambda
       ((g$id$7539$14YGsk g$rib$7540$14YGsk)
        (if (g$top-level-context$7509$14YGsk)
          (g$gen-top-level-label$7062$14YGsk g$id$7539$14YGsk g$rib$7540$14YGsk)
          (gensym)))))
   (g$8055$7065$14YGsk
     g$8055$10693$14YGsk
     (make-record-type-descriptor
       'rib
       '#f
       'g$8058$14YGsk
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8057$7066$14YGsk g$8057$10694$14YGsk '#f)
   (g$8056$7067$14YGsk
     g$8056$10695$14YGsk
     (make-record-constructor-descriptor
       g$8055$7065$14YGsk
       '#f
       g$8057$7066$14YGsk))
   (g$rib?$7068$14YGsk
     g$rib?$10696$14YGsk
     (record-predicate g$8055$7065$14YGsk))
   (g$make-rib$7069$14YGsk
     g$make-rib$10697$14YGsk
     (record-constructor g$8056$7067$14YGsk))
   (g$rib-sym*$7070$14YGsk
     g$rib-sym*$10698$14YGsk
     (record-accessor g$8055$7065$14YGsk '0))
   (g$rib-mark**$7071$14YGsk
     g$rib-mark**$10699$14YGsk
     (record-accessor g$8055$7065$14YGsk '1))
   (g$rib-label*$7072$14YGsk
     g$rib-label*$10700$14YGsk
     (record-accessor g$8055$7065$14YGsk '2))
   (g$rib-sealed/freq$7073$14YGsk
     g$rib-sealed/freq$10701$14YGsk
     (record-accessor g$8055$7065$14YGsk '3))
   (g$set-rib-sym*!$7074$14YGsk
     g$set-rib-sym*!$10702$14YGsk
     (record-mutator g$8055$7065$14YGsk '0))
   (g$set-rib-mark**!$7075$14YGsk
     g$set-rib-mark**!$10703$14YGsk
     (record-mutator g$8055$7065$14YGsk '1))
   (g$set-rib-label*!$7076$14YGsk
     g$set-rib-label*!$10704$14YGsk
     (record-mutator g$8055$7065$14YGsk '2))
   (g$set-rib-sealed/freq!$7077$14YGsk
     g$set-rib-sealed/freq!$10705$14YGsk
     (record-mutator g$8055$7065$14YGsk '3))
   (g$make-empty-rib$7078$14YGsk
     g$make-empty-rib$10706$14YGsk
     (case-lambda (() (g$make-rib$7069$14YGsk '() '() '() '#f))))
   (g$extend-rib!$7079$14YGsk
     g$extend-rib!$10707$14YGsk
     (case-lambda
       ((g$rib$7541$14YGsk g$id$7542$14YGsk g$label$7543$14YGsk)
        (letrec* ((g$find$7544$14YGsk
                    (case-lambda
                      ((g$sym$7550$14YGsk
                         g$mark*$7551$14YGsk
                         g$sym*$7552$14YGsk
                         g$mark**$7553$14YGsk
                         g$label*$7554$14YGsk)
                       (if (pair? g$sym*$7552$14YGsk)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7550$14YGsk
                                        (car g$sym*$7552$14YGsk))
                                 (begin
                                   '#f
                                   (g$same-marks?$7117$14YGsk
                                     g$mark*$7551$14YGsk
                                     (car g$mark**$7553$14YGsk)))
                                 '#f)
                             g$label*$7554$14YGsk
                             (g$find$7544$14YGsk
                               g$sym$7550$14YGsk
                               g$mark*$7551$14YGsk
                               (cdr g$sym*$7552$14YGsk)
                               (cdr g$mark**$7553$14YGsk)
                               (cdr g$label*$7554$14YGsk))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7073$14YGsk g$rib$7541$14YGsk)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7541$14YGsk)
              (void))
            ((case-lambda
               ((g$sym$7545$14YGsk g$mark*$7546$14YGsk)
                ((case-lambda
                   ((g$sym*$7547$14YGsk)
                    ((case-lambda
                       ((g$t$7548$14YGsk)
                        (if g$t$7548$14YGsk
                          ((case-lambda
                             ((g$p$7549$14YGsk)
                              (if (not (eq? g$label$7543$14YGsk
                                            (car g$p$7549$14YGsk)))
                                (if (g$top-level-context$7509$14YGsk)
                                  (set-car! g$p$7549$14YGsk g$label$7543$14YGsk)
                                  (g$syntax-violation$7502$14YGsk
                                    '#f
                                    '"cannot redefine"
                                    g$id$7542$14YGsk))
                                (void))))
                           g$t$7548$14YGsk)
                          (begin
                            (g$set-rib-sym*!$7074$14YGsk
                              g$rib$7541$14YGsk
                              (cons g$sym$7545$14YGsk g$sym*$7547$14YGsk))
                            (g$set-rib-mark**!$7075$14YGsk
                              g$rib$7541$14YGsk
                              (cons
                                g$mark*$7546$14YGsk
                                (g$rib-mark**$7071$14YGsk g$rib$7541$14YGsk)))
                            (g$set-rib-label*!$7076$14YGsk
                              g$rib$7541$14YGsk
                              (cons
                                g$label$7543$14YGsk
                                (g$rib-label*$7072$14YGsk
                                  g$rib$7541$14YGsk)))))))
                     (if (memq
                           g$sym$7545$14YGsk
                           (g$rib-sym*$7070$14YGsk g$rib$7541$14YGsk))
                       (begin
                         '#f
                         (g$find$7544$14YGsk
                           g$sym$7545$14YGsk
                           g$mark*$7546$14YGsk
                           g$sym*$7547$14YGsk
                           (g$rib-mark**$7071$14YGsk g$rib$7541$14YGsk)
                           (g$rib-label*$7072$14YGsk g$rib$7541$14YGsk)))
                       '#f))))
                 (g$rib-sym*$7070$14YGsk g$rib$7541$14YGsk))))
             (g$id->sym$7116$14YGsk g$id$7542$14YGsk)
             (g$stx-mark*$7090$14YGsk g$id$7542$14YGsk)))))))
   (g$make-rib-map$7080$14YGsk
     g$make-rib-map$10708$14YGsk
     (case-lambda
       ((g$sym*$7555$14YGsk)
        ((case-lambda
           ((g$ht$7556$14YGsk)
            ((letrec ((g$f$7557$14YGsk
                        (case-lambda
                          ((g$i$7558$14YGsk g$sym*$7559$14YGsk)
                           (if (null? g$sym*$7559$14YGsk)
                             g$ht$7556$14YGsk
                             (begin
                               (g$hashtable-update!$5156$14YGsk
                                 g$ht$7556$14YGsk
                                 (car g$sym*$7559$14YGsk)
                                 (case-lambda
                                   ((g$x$7560$14YGsk)
                                    (cons g$i$7558$14YGsk g$x$7560$14YGsk)))
                                 '())
                               (g$f$7557$14YGsk
                                 (+ g$i$7558$14YGsk '1)
                                 (cdr g$sym*$7559$14YGsk))))))))
               g$f$7557$14YGsk)
             '0
             g$sym*$7555$14YGsk)))
         (g$make-eq-hashtable$5149$14YGsk)))))
   (g$seal-rib!$7081$14YGsk
     g$seal-rib!$10709$14YGsk
     (case-lambda
       ((g$rib$7561$14YGsk)
        ((case-lambda
           ((g$sym*$7562$14YGsk)
            (if (not (null? g$sym*$7562$14YGsk))
              (begin
                (g$set-rib-sym*!$7074$14YGsk
                  g$rib$7561$14YGsk
                  (list->vector g$sym*$7562$14YGsk))
                (g$set-rib-mark**!$7075$14YGsk
                  g$rib$7561$14YGsk
                  (list->vector (g$rib-mark**$7071$14YGsk g$rib$7561$14YGsk)))
                (g$set-rib-label*!$7076$14YGsk
                  g$rib$7561$14YGsk
                  (list->vector (g$rib-label*$7072$14YGsk g$rib$7561$14YGsk)))
                (g$set-rib-sealed/freq!$7077$14YGsk
                  g$rib$7561$14YGsk
                  (g$make-rib-map$7080$14YGsk g$sym*$7562$14YGsk)))
              (void))))
         (g$rib-sym*$7070$14YGsk g$rib$7561$14YGsk)))))
   (g$unseal-rib!$7082$14YGsk
     g$unseal-rib!$10710$14YGsk
     (case-lambda
       ((g$rib$7563$14YGsk)
        (if (g$rib-sealed/freq$7073$14YGsk g$rib$7563$14YGsk)
          (begin
            (g$set-rib-sealed/freq!$7077$14YGsk g$rib$7563$14YGsk '#f)
            (g$set-rib-sym*!$7074$14YGsk
              g$rib$7563$14YGsk
              (vector->list (g$rib-sym*$7070$14YGsk g$rib$7563$14YGsk)))
            (g$set-rib-mark**!$7075$14YGsk
              g$rib$7563$14YGsk
              (vector->list (g$rib-mark**$7071$14YGsk g$rib$7563$14YGsk)))
            (g$set-rib-label*!$7076$14YGsk
              g$rib$7563$14YGsk
              (vector->list (g$rib-label*$7072$14YGsk g$rib$7563$14YGsk))))
          (void)))))
   (g$make-full-rib$7083$14YGsk
     g$make-full-rib$10711$14YGsk
     (case-lambda
       ((g$id*$7564$14YGsk g$label*$7565$14YGsk)
        ((case-lambda
           ((g$r$7566$14YGsk)
            (begin (g$seal-rib!$7081$14YGsk g$r$7566$14YGsk) g$r$7566$14YGsk)))
         (g$make-rib$7069$14YGsk
           (map g$id->sym$7116$14YGsk g$id*$7564$14YGsk)
           (map g$stx-mark*$7090$14YGsk g$id*$7564$14YGsk)
           g$label*$7565$14YGsk
           '#f)))))
   (g$8081$7084$14YGsk
     g$8081$10712$14YGsk
     (make-record-type-descriptor
       'stx
       '#f
       'g$8084$14YGsk
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8083$7085$14YGsk g$8083$10713$14YGsk '#f)
   (g$8082$7086$14YGsk
     g$8082$10714$14YGsk
     (make-record-constructor-descriptor
       g$8081$7084$14YGsk
       '#f
       g$8083$7085$14YGsk))
   (g$stx?$7087$14YGsk
     g$stx?$10715$14YGsk
     (record-predicate g$8081$7084$14YGsk))
   (g$make-stx$7088$14YGsk
     g$make-stx$10716$14YGsk
     (record-constructor g$8082$7086$14YGsk))
   (g$stx-expr$7089$14YGsk
     g$stx-expr$10717$14YGsk
     (record-accessor g$8081$7084$14YGsk '0))
   (g$stx-mark*$7090$14YGsk
     g$stx-mark*$10718$14YGsk
     (record-accessor g$8081$7084$14YGsk '1))
   (g$stx-subst*$7091$14YGsk
     g$stx-subst*$10719$14YGsk
     (record-accessor g$8081$7084$14YGsk '2))
   (g$stx-ae*$7092$14YGsk
     g$stx-ae*$10720$14YGsk
     (record-accessor g$8081$7084$14YGsk '3))
   (g$set-stx-expr!$7093$14YGsk
     g$set-stx-expr!$10721$14YGsk
     (record-mutator g$8081$7084$14YGsk '0))
   (g$set-stx-mark*!$7094$14YGsk
     g$set-stx-mark*!$10722$14YGsk
     (record-mutator g$8081$7084$14YGsk '1))
   (g$set-stx-subst*!$7095$14YGsk
     g$set-stx-subst*!$10723$14YGsk
     (record-mutator g$8081$7084$14YGsk '2))
   (g$set-stx-ae*!$7096$14YGsk
     g$set-stx-ae*!$10724$14YGsk
     (record-mutator g$8081$7084$14YGsk '3))
   (g$rp$7097$14YGsk
     g$rp$10725$14YGsk
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7567$14YGsk g$p$7568$14YGsk)
          (begin
            (display '"#<syntax " g$p$7568$14YGsk)
            (write (g$stx->datum$7126$14YGsk g$x$7567$14YGsk) g$p$7568$14YGsk)
            ((case-lambda
               ((g$expr$7569$14YGsk)
                (if (annotation? g$expr$7569$14YGsk)
                  ((case-lambda
                     ((g$src$7570$14YGsk)
                      (if (pair? g$src$7570$14YGsk)
                        (begin
                          (display '" [" g$p$7568$14YGsk)
                          (display (cdr g$src$7570$14YGsk) g$p$7568$14YGsk)
                          (display '" of " g$p$7568$14YGsk)
                          (display (car g$src$7570$14YGsk) g$p$7568$14YGsk)
                          (display '"]" g$p$7568$14YGsk))
                        (void))))
                   (annotation-source g$expr$7569$14YGsk))
                  (void))))
             (g$stx-expr$7089$14YGsk g$x$7567$14YGsk))
            (display '">" g$p$7568$14YGsk))))))
   (g$datum->stx$7098$14YGsk
     g$datum->stx$10726$14YGsk
     (case-lambda
       ((g$id$7571$14YGsk g$datum$7572$14YGsk)
        (g$make-stx$7088$14YGsk
          g$datum$7572$14YGsk
          (g$stx-mark*$7090$14YGsk g$id$7571$14YGsk)
          (g$stx-subst*$7091$14YGsk g$id$7571$14YGsk)
          (g$stx-ae*$7092$14YGsk g$id$7571$14YGsk)))))
   (g$gen-mark$7099$14YGsk
     g$gen-mark$10727$14YGsk
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7100$14YGsk g$anti-mark$10728$14YGsk '#f)
   (g$anti-mark?$7101$14YGsk g$anti-mark?$10729$14YGsk not)
   (g$join-wraps$7102$14YGsk
     g$join-wraps$10730$14YGsk
     (case-lambda
       ((g$m1*$7573$14YGsk
          g$s1*$7574$14YGsk
          g$ae1*$7575$14YGsk
          g$e$7576$14YGsk)
        (letrec* ((g$cancel$7577$14YGsk
                    (case-lambda
                      ((g$ls1$7581$14YGsk g$ls2$7582$14YGsk)
                       ((letrec ((g$f$7583$14YGsk
                                   (case-lambda
                                     ((g$x$7584$14YGsk g$ls1$7585$14YGsk)
                                      (if (null? g$ls1$7585$14YGsk)
                                        (cdr g$ls2$7582$14YGsk)
                                        (cons
                                          g$x$7584$14YGsk
                                          (g$f$7583$14YGsk
                                            (car g$ls1$7585$14YGsk)
                                            (cdr g$ls1$7585$14YGsk))))))))
                          g$f$7583$14YGsk)
                        (car g$ls1$7581$14YGsk)
                        (cdr g$ls1$7581$14YGsk))))))
          ((case-lambda
             ((g$m2*$7578$14YGsk g$s2*$7579$14YGsk g$ae2*$7580$14YGsk)
              (if (if (not (null? g$m1*$7573$14YGsk))
                    (if (not (null? g$m2*$7578$14YGsk))
                      (begin
                        '#f
                        (g$anti-mark?$7101$14YGsk (car g$m2*$7578$14YGsk)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7577$14YGsk g$m1*$7573$14YGsk g$m2*$7578$14YGsk)
                  (g$cancel$7577$14YGsk g$s1*$7574$14YGsk g$s2*$7579$14YGsk)
                  (g$cancel$7577$14YGsk g$ae1*$7575$14YGsk g$ae2*$7580$14YGsk))
                (values
                  (append g$m1*$7573$14YGsk g$m2*$7578$14YGsk)
                  (append g$s1*$7574$14YGsk g$s2*$7579$14YGsk)
                  (append g$ae1*$7575$14YGsk g$ae2*$7580$14YGsk)))))
           (g$stx-mark*$7090$14YGsk g$e$7576$14YGsk)
           (g$stx-subst*$7091$14YGsk g$e$7576$14YGsk)
           (g$stx-ae*$7092$14YGsk g$e$7576$14YGsk))))))
   (g$mkstx$7103$14YGsk
     g$mkstx$10731$14YGsk
     (case-lambda
       ((g$e$7586$14YGsk g$m*$7587$14YGsk g$s*$7588$14YGsk g$ae*$7589$14YGsk)
        (if (g$stx?$7087$14YGsk g$e$7586$14YGsk)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7102$14YGsk
                 g$m*$7587$14YGsk
                 g$s*$7588$14YGsk
                 g$ae*$7589$14YGsk
                 g$e$7586$14YGsk)))
            (case-lambda
              ((g$m*$7593$14YGsk g$s*$7594$14YGsk g$ae*$7595$14YGsk)
               ((case-lambda
                  ((g$ae*$7596$14YGsk g$s*$7597$14YGsk g$m*$7598$14YGsk)
                   (g$make-stx$7088$14YGsk
                     (g$stx-expr$7089$14YGsk g$e$7586$14YGsk)
                     g$m*$7598$14YGsk
                     g$s*$7597$14YGsk
                     g$ae*$7596$14YGsk)))
                g$ae*$7595$14YGsk
                g$s*$7594$14YGsk
                g$m*$7593$14YGsk))))
          (g$make-stx$7088$14YGsk
            g$e$7586$14YGsk
            g$m*$7587$14YGsk
            g$s*$7588$14YGsk
            g$ae*$7589$14YGsk)))))
   (g$add-mark$7104$14YGsk
     g$add-mark$10732$14YGsk
     (case-lambda
       ((g$m$7599$14YGsk g$e$7600$14YGsk g$ae$7601$14YGsk)
        (g$mkstx$7103$14YGsk
          g$e$7600$14YGsk
          (list g$m$7599$14YGsk)
          '(shift)
          (list g$ae$7601$14YGsk)))))
   (g$add-subst$7105$14YGsk
     g$add-subst$10733$14YGsk
     (case-lambda
       ((g$subst$7602$14YGsk g$e$7603$14YGsk)
        (g$mkstx$7103$14YGsk
          g$e$7603$14YGsk
          '()
          (list g$subst$7602$14YGsk)
          '()))))
   (g$syntax-kind?$7106$14YGsk
     g$syntax-kind?$10734$14YGsk
     (case-lambda
       ((g$x$7604$14YGsk g$p?$7605$14YGsk)
        (if (g$stx?$7087$14YGsk g$x$7604$14YGsk)
          (g$syntax-kind?$7106$14YGsk
            (g$stx-expr$7089$14YGsk g$x$7604$14YGsk)
            g$p?$7605$14YGsk)
          (if (annotation? g$x$7604$14YGsk)
            (g$syntax-kind?$7106$14YGsk
              (annotation-expression g$x$7604$14YGsk)
              g$p?$7605$14YGsk)
            (g$p?$7605$14YGsk g$x$7604$14YGsk))))))
   (g$syntax-vector->list$7107$14YGsk
     g$syntax-vector->list$10735$14YGsk
     (case-lambda
       ((g$x$7606$14YGsk)
        (if (g$stx?$7087$14YGsk g$x$7606$14YGsk)
          ((case-lambda
             ((g$ls$7607$14YGsk
                g$m*$7608$14YGsk
                g$s*$7609$14YGsk
                g$ae*$7610$14YGsk)
              (map (case-lambda
                     ((g$x$7611$14YGsk)
                      (g$mkstx$7103$14YGsk
                        g$x$7611$14YGsk
                        g$m*$7608$14YGsk
                        g$s*$7609$14YGsk
                        g$ae*$7610$14YGsk)))
                   g$ls$7607$14YGsk)))
           (g$syntax-vector->list$7107$14YGsk
             (g$stx-expr$7089$14YGsk g$x$7606$14YGsk))
           (g$stx-mark*$7090$14YGsk g$x$7606$14YGsk)
           (g$stx-subst*$7091$14YGsk g$x$7606$14YGsk)
           (g$stx-ae*$7092$14YGsk g$x$7606$14YGsk))
          (if (annotation? g$x$7606$14YGsk)
            (g$syntax-vector->list$7107$14YGsk
              (annotation-expression g$x$7606$14YGsk))
            (if (vector? g$x$7606$14YGsk)
              (vector->list g$x$7606$14YGsk)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7606$14YGsk)))))))
   (g$syntax-pair?$7108$14YGsk
     g$syntax-pair?$10736$14YGsk
     (case-lambda
       ((g$x$7612$14YGsk) (g$syntax-kind?$7106$14YGsk g$x$7612$14YGsk pair?))))
   (g$syntax-vector?$7109$14YGsk
     g$syntax-vector?$10737$14YGsk
     (case-lambda
       ((g$x$7613$14YGsk)
        (g$syntax-kind?$7106$14YGsk g$x$7613$14YGsk vector?))))
   (g$syntax-null?$7110$14YGsk
     g$syntax-null?$10738$14YGsk
     (case-lambda
       ((g$x$7614$14YGsk) (g$syntax-kind?$7106$14YGsk g$x$7614$14YGsk null?))))
   (g$syntax-list?$7111$14YGsk
     g$syntax-list?$10739$14YGsk
     (case-lambda
       ((g$x$7615$14YGsk)
        ((case-lambda
           ((g$t$7616$14YGsk)
            (if g$t$7616$14YGsk
              g$t$7616$14YGsk
              (begin
                '#f
                (if (g$syntax-pair?$7108$14YGsk g$x$7615$14YGsk)
                  (begin
                    '#f
                    (g$syntax-list?$7111$14YGsk
                      (g$syntax-cdr$7113$14YGsk g$x$7615$14YGsk)))
                  '#f)))))
         (g$syntax-null?$7110$14YGsk g$x$7615$14YGsk)))))
   (g$syntax-car$7112$14YGsk
     g$syntax-car$10740$14YGsk
     (case-lambda
       ((g$x$7617$14YGsk)
        (if (g$stx?$7087$14YGsk g$x$7617$14YGsk)
          (g$mkstx$7103$14YGsk
            (g$syntax-car$7112$14YGsk (g$stx-expr$7089$14YGsk g$x$7617$14YGsk))
            (g$stx-mark*$7090$14YGsk g$x$7617$14YGsk)
            (g$stx-subst*$7091$14YGsk g$x$7617$14YGsk)
            (g$stx-ae*$7092$14YGsk g$x$7617$14YGsk))
          (if (annotation? g$x$7617$14YGsk)
            (g$syntax-car$7112$14YGsk (annotation-expression g$x$7617$14YGsk))
            (if (pair? g$x$7617$14YGsk)
              (car g$x$7617$14YGsk)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7617$14YGsk)))))))
   (g$syntax-cdr$7113$14YGsk
     g$syntax-cdr$10741$14YGsk
     (case-lambda
       ((g$x$7618$14YGsk)
        (if (g$stx?$7087$14YGsk g$x$7618$14YGsk)
          (g$mkstx$7103$14YGsk
            (g$syntax-cdr$7113$14YGsk (g$stx-expr$7089$14YGsk g$x$7618$14YGsk))
            (g$stx-mark*$7090$14YGsk g$x$7618$14YGsk)
            (g$stx-subst*$7091$14YGsk g$x$7618$14YGsk)
            (g$stx-ae*$7092$14YGsk g$x$7618$14YGsk))
          (if (annotation? g$x$7618$14YGsk)
            (g$syntax-cdr$7113$14YGsk (annotation-expression g$x$7618$14YGsk))
            (if (pair? g$x$7618$14YGsk)
              (cdr g$x$7618$14YGsk)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7618$14YGsk)))))))
   (g$syntax->list$7114$14YGsk
     g$syntax->list$10742$14YGsk
     (case-lambda
       ((g$x$7619$14YGsk)
        (if (g$syntax-pair?$7108$14YGsk g$x$7619$14YGsk)
          (cons
            (g$syntax-car$7112$14YGsk g$x$7619$14YGsk)
            (g$syntax->list$7114$14YGsk
              (g$syntax-cdr$7113$14YGsk g$x$7619$14YGsk)))
          (if (g$syntax-null?$7110$14YGsk g$x$7619$14YGsk)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7619$14YGsk))))))
   (g$id?$7115$14YGsk
     g$id?$10743$14YGsk
     (case-lambda
       ((g$x$7620$14YGsk)
        (if (g$stx?$7087$14YGsk g$x$7620$14YGsk)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7621$14YGsk)
                (symbol?
                  (if (annotation? g$expr$7621$14YGsk)
                    (annotation-stripped g$expr$7621$14YGsk)
                    g$expr$7621$14YGsk))))
             (g$stx-expr$7089$14YGsk g$x$7620$14YGsk)))
          '#f))))
   (g$id->sym$7116$14YGsk
     g$id->sym$10744$14YGsk
     (case-lambda
       ((g$x$7622$14YGsk)
        (begin
          (if (not (g$stx?$7087$14YGsk g$x$7622$14YGsk))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7622$14YGsk)
            (void))
          ((case-lambda
             ((g$expr$7623$14YGsk)
              ((case-lambda
                 ((g$sym$7624$14YGsk)
                  (if (symbol? g$sym$7624$14YGsk)
                    g$sym$7624$14YGsk
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7622$14YGsk))))
               (if (annotation? g$expr$7623$14YGsk)
                 (annotation-stripped g$expr$7623$14YGsk)
                 g$expr$7623$14YGsk))))
           (g$stx-expr$7089$14YGsk g$x$7622$14YGsk))))))
   (g$same-marks?$7117$14YGsk
     g$same-marks?$10745$14YGsk
     (case-lambda
       ((g$x$7625$14YGsk g$y$7626$14YGsk)
        ((case-lambda
           ((g$t$7627$14YGsk)
            (if g$t$7627$14YGsk
              g$t$7627$14YGsk
              (begin
                '#f
                (if (pair? g$x$7625$14YGsk)
                  (if (pair? g$y$7626$14YGsk)
                    (if (eq? (car g$x$7625$14YGsk) (car g$y$7626$14YGsk))
                      (begin
                        '#f
                        (g$same-marks?$7117$14YGsk
                          (cdr g$x$7625$14YGsk)
                          (cdr g$y$7626$14YGsk)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7625$14YGsk)
           (begin '#f (null? g$y$7626$14YGsk))
           '#f)))))
   (g$bound-id=?$7118$14YGsk
     g$bound-id=?$10746$14YGsk
     (case-lambda
       ((g$x$7628$14YGsk g$y$7629$14YGsk)
        (if (eq? (g$id->sym$7116$14YGsk g$x$7628$14YGsk)
                 (g$id->sym$7116$14YGsk g$y$7629$14YGsk))
          (begin
            '#f
            (g$same-marks?$7117$14YGsk
              (g$stx-mark*$7090$14YGsk g$x$7628$14YGsk)
              (g$stx-mark*$7090$14YGsk g$y$7629$14YGsk)))
          '#f))))
   (g$free-id=?$7119$14YGsk
     g$free-id=?$10747$14YGsk
     (case-lambda
       ((g$i$7630$14YGsk g$j$7631$14YGsk)
        ((case-lambda
           ((g$t0$7632$14YGsk g$t1$7633$14YGsk)
            (if ((case-lambda
                   ((g$t$7634$14YGsk)
                    (if g$t$7634$14YGsk
                      g$t$7634$14YGsk
                      (begin '#f g$t1$7633$14YGsk))))
                 g$t0$7632$14YGsk)
              (eq? g$t0$7632$14YGsk g$t1$7633$14YGsk)
              (eq? (g$id->sym$7116$14YGsk g$i$7630$14YGsk)
                   (g$id->sym$7116$14YGsk g$j$7631$14YGsk)))))
         (g$id->real-label$7129$14YGsk g$i$7630$14YGsk)
         (g$id->real-label$7129$14YGsk g$j$7631$14YGsk)))))
   (g$valid-bound-ids?$7120$14YGsk
     g$valid-bound-ids?$10748$14YGsk
     (case-lambda
       ((g$id*$7635$14YGsk)
        (if (g$for-all$5356$14YGsk g$id?$7115$14YGsk g$id*$7635$14YGsk)
          (begin '#f (g$distinct-bound-ids?$7121$14YGsk g$id*$7635$14YGsk))
          '#f))))
   (g$distinct-bound-ids?$7121$14YGsk
     g$distinct-bound-ids?$10749$14YGsk
     (case-lambda
       ((g$id*$7636$14YGsk)
        ((case-lambda
           ((g$t$7637$14YGsk)
            (if g$t$7637$14YGsk
              g$t$7637$14YGsk
              (begin
                '#f
                (if (not (g$bound-id-member?$7122$14YGsk
                           (car g$id*$7636$14YGsk)
                           (cdr g$id*$7636$14YGsk)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7121$14YGsk (cdr g$id*$7636$14YGsk)))
                  '#f)))))
         (null? g$id*$7636$14YGsk)))))
   (g$bound-id-member?$7122$14YGsk
     g$bound-id-member?$10750$14YGsk
     (case-lambda
       ((g$id$7638$14YGsk g$id*$7639$14YGsk)
        (if (pair? g$id*$7639$14YGsk)
          (begin
            '#f
            ((case-lambda
               ((g$t$7640$14YGsk)
                (if g$t$7640$14YGsk
                  g$t$7640$14YGsk
                  (begin
                    '#f
                    (g$bound-id-member?$7122$14YGsk
                      g$id$7638$14YGsk
                      (cdr g$id*$7639$14YGsk))))))
             (g$bound-id=?$7118$14YGsk
               g$id$7638$14YGsk
               (car g$id*$7639$14YGsk))))
          '#f))))
   (g$self-evaluating?$7123$14YGsk
     g$self-evaluating?$10751$14YGsk
     (case-lambda
       ((g$x$7641$14YGsk)
        ((case-lambda
           ((g$t$7642$14YGsk)
            (if g$t$7642$14YGsk
              g$t$7642$14YGsk
              ((case-lambda
                 ((g$t$7643$14YGsk)
                  (if g$t$7643$14YGsk
                    g$t$7643$14YGsk
                    ((case-lambda
                       ((g$t$7644$14YGsk)
                        (if g$t$7644$14YGsk
                          g$t$7644$14YGsk
                          ((case-lambda
                             ((g$t$7645$14YGsk)
                              (if g$t$7645$14YGsk
                                g$t$7645$14YGsk
                                (begin '#f (bytevector? g$x$7641$14YGsk)))))
                           (boolean? g$x$7641$14YGsk)))))
                     (char? g$x$7641$14YGsk)))))
               (string? g$x$7641$14YGsk)))))
         (number? g$x$7641$14YGsk)))))
   (g$strip-annotations$7124$14YGsk
     g$strip-annotations$10752$14YGsk
     (case-lambda
       ((g$x$7646$14YGsk)
        (if (pair? g$x$7646$14YGsk)
          (cons
            (g$strip-annotations$7124$14YGsk (car g$x$7646$14YGsk))
            (g$strip-annotations$7124$14YGsk (cdr g$x$7646$14YGsk)))
          (if (vector? g$x$7646$14YGsk)
            (vector-map g$strip-annotations$7124$14YGsk g$x$7646$14YGsk)
            (if (annotation? g$x$7646$14YGsk)
              (annotation-stripped g$x$7646$14YGsk)
              g$x$7646$14YGsk))))))
   (g$strip$7125$14YGsk
     g$strip$10753$14YGsk
     (case-lambda
       ((g$x$7647$14YGsk g$m*$7648$14YGsk)
        (if (g$top-marked?$7058$14YGsk g$m*$7648$14YGsk)
          (if ((case-lambda
                 ((g$t$7649$14YGsk)
                  (if g$t$7649$14YGsk
                    g$t$7649$14YGsk
                    ((case-lambda
                       ((g$t$7650$14YGsk)
                        (if g$t$7650$14YGsk
                          g$t$7650$14YGsk
                          (begin
                            '#f
                            (if (vector? g$x$7647$14YGsk)
                              (if (> (vector-length g$x$7647$14YGsk) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7647$14YGsk '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7647$14YGsk)
                       (begin '#f (annotation? (car g$x$7647$14YGsk)))
                       '#f)))))
               (annotation? g$x$7647$14YGsk))
            (g$strip-annotations$7124$14YGsk g$x$7647$14YGsk)
            g$x$7647$14YGsk)
          ((letrec ((g$f$7651$14YGsk
                      (case-lambda
                        ((g$x$7652$14YGsk)
                         (if (g$stx?$7087$14YGsk g$x$7652$14YGsk)
                           (g$strip$7125$14YGsk
                             (g$stx-expr$7089$14YGsk g$x$7652$14YGsk)
                             (g$stx-mark*$7090$14YGsk g$x$7652$14YGsk))
                           (if (annotation? g$x$7652$14YGsk)
                             (annotation-stripped g$x$7652$14YGsk)
                             (if (pair? g$x$7652$14YGsk)
                               ((case-lambda
                                  ((g$a$7653$14YGsk g$d$7654$14YGsk)
                                   (if (if (eq? g$a$7653$14YGsk
                                                (car g$x$7652$14YGsk))
                                         (begin
                                           '#f
                                           (eq? g$d$7654$14YGsk
                                                (cdr g$x$7652$14YGsk)))
                                         '#f)
                                     g$x$7652$14YGsk
                                     (cons g$a$7653$14YGsk g$d$7654$14YGsk))))
                                (g$f$7651$14YGsk (car g$x$7652$14YGsk))
                                (g$f$7651$14YGsk (cdr g$x$7652$14YGsk)))
                               (if (vector? g$x$7652$14YGsk)
                                 ((case-lambda
                                    ((g$old$7655$14YGsk)
                                     ((case-lambda
                                        ((g$new$7656$14YGsk)
                                         (if (g$for-all$5356$14YGsk
                                               eq?
                                               g$old$7655$14YGsk
                                               g$new$7656$14YGsk)
                                           g$x$7652$14YGsk
                                           (list->vector g$new$7656$14YGsk))))
                                      (map g$f$7651$14YGsk g$old$7655$14YGsk))))
                                  (vector->list g$x$7652$14YGsk))
                                 g$x$7652$14YGsk))))))))
             g$f$7651$14YGsk)
           g$x$7647$14YGsk)))))
   (g$stx->datum$7126$14YGsk
     g$stx->datum$10754$14YGsk
     (case-lambda
       ((g$x$7657$14YGsk) (g$strip$7125$14YGsk g$x$7657$14YGsk '()))))
   (g$same-marks*?$7127$14YGsk
     g$same-marks*?$10755$14YGsk
     (case-lambda
       ((g$mark*$7658$14YGsk g$mark**$7659$14YGsk g$si$7660$14YGsk)
        (if (null? g$si$7660$14YGsk)
          '#f
          (if (g$same-marks?$7117$14YGsk
                g$mark*$7658$14YGsk
                (vector-ref g$mark**$7659$14YGsk (car g$si$7660$14YGsk)))
            (car g$si$7660$14YGsk)
            (g$same-marks*?$7127$14YGsk
              g$mark*$7658$14YGsk
              g$mark**$7659$14YGsk
              (cdr g$si$7660$14YGsk)))))))
   (g$id->label$7128$14YGsk
     g$id->label$10756$14YGsk
     (case-lambda
       ((g$id$7661$14YGsk)
        ((case-lambda
           ((g$t$7662$14YGsk)
            (if g$t$7662$14YGsk
              g$t$7662$14YGsk
              (begin
                '#f
                ((case-lambda
                   ((g$t$7663$14YGsk)
                    (if g$t$7663$14YGsk
                      ((case-lambda
                         ((g$env$7664$14YGsk)
                          ((case-lambda
                             ((g$rib$7665$14YGsk)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7063$14YGsk
                                     g$id$7661$14YGsk
                                     g$rib$7665$14YGsk)))
                                (case-lambda
                                  ((g$lab$7668$14YGsk g$loc_$7669$14YGsk)
                                   ((case-lambda
                                      ((g$loc_$7670$14YGsk g$lab$7671$14YGsk)
                                       (begin
                                         (g$extend-rib!$7079$14YGsk
                                           g$rib$7665$14YGsk
                                           g$id$7661$14YGsk
                                           g$lab$7671$14YGsk)
                                         g$lab$7671$14YGsk)))
                                    g$loc_$7669$14YGsk
                                    g$lab$7668$14YGsk))))))
                           (g$interaction-env-rib$7471$14YGsk
                             g$env$7664$14YGsk))))
                       g$t$7663$14YGsk)
                      '#f)))
                 (g$top-level-context$7509$14YGsk))))))
         (g$id->real-label$7129$14YGsk g$id$7661$14YGsk)))))
   (g$id->real-label$7129$14YGsk
     g$id->real-label$10757$14YGsk
     (case-lambda
       ((g$id$7672$14YGsk)
        ((case-lambda
           ((g$sym$7673$14YGsk)
            ((letrec ((g$search$7674$14YGsk
                        (case-lambda
                          ((g$subst*$7675$14YGsk g$mark*$7676$14YGsk)
                           (if (null? g$subst*$7675$14YGsk)
                             '#f
                             (if (eq? (car g$subst*$7675$14YGsk) 'shift)
                               (g$search$7674$14YGsk
                                 (cdr g$subst*$7675$14YGsk)
                                 (cdr g$mark*$7676$14YGsk))
                               ((case-lambda
                                  ((g$rib$7677$14YGsk)
                                   ((case-lambda
                                      ((g$t$7678$14YGsk)
                                       (if g$t$7678$14YGsk
                                         ((case-lambda
                                            ((g$ht$7679$14YGsk)
                                             ((case-lambda
                                                ((g$si$7680$14YGsk)
                                                 ((case-lambda
                                                    ((g$i$7681$14YGsk)
                                                     (if g$i$7681$14YGsk
                                                       (vector-ref
                                                         (g$rib-label*$7072$14YGsk
                                                           g$rib$7677$14YGsk)
                                                         g$i$7681$14YGsk)
                                                       (g$search$7674$14YGsk
                                                         (cdr g$subst*$7675$14YGsk)
                                                         g$mark*$7676$14YGsk))))
                                                  (if g$si$7680$14YGsk
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7127$14YGsk
                                                        g$mark*$7676$14YGsk
                                                        (g$rib-mark**$7071$14YGsk
                                                          g$rib$7677$14YGsk)
                                                        (reverse
                                                          g$si$7680$14YGsk)))
                                                    '#f))))
                                              (g$hashtable-ref$5152$14YGsk
                                                g$ht$7679$14YGsk
                                                g$sym$7673$14YGsk
                                                '#f))))
                                          g$t$7678$14YGsk)
                                         ((letrec ((g$f$7682$14YGsk
                                                     (case-lambda
                                                       ((g$sym*$7683$14YGsk
                                                          g$mark**$7684$14YGsk
                                                          g$label*$7685$14YGsk)
                                                        (if (null?
                                                              g$sym*$7683$14YGsk)
                                                          (g$search$7674$14YGsk
                                                            (cdr g$subst*$7675$14YGsk)
                                                            g$mark*$7676$14YGsk)
                                                          (if (if (eq? (car g$sym*$7683$14YGsk)
                                                                       g$sym$7673$14YGsk)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7117$14YGsk
                                                                    (car g$mark**$7684$14YGsk)
                                                                    g$mark*$7676$14YGsk))
                                                                '#f)
                                                            (car g$label*$7685$14YGsk)
                                                            (g$f$7682$14YGsk
                                                              (cdr g$sym*$7683$14YGsk)
                                                              (cdr g$mark**$7684$14YGsk)
                                                              (cdr g$label*$7685$14YGsk))))))))
                                            g$f$7682$14YGsk)
                                          (g$rib-sym*$7070$14YGsk
                                            g$rib$7677$14YGsk)
                                          (g$rib-mark**$7071$14YGsk
                                            g$rib$7677$14YGsk)
                                          (g$rib-label*$7072$14YGsk
                                            g$rib$7677$14YGsk)))))
                                    (g$rib-sealed/freq$7073$14YGsk
                                      g$rib$7677$14YGsk))))
                                (car g$subst*$7675$14YGsk))))))))
               g$search$7674$14YGsk)
             (g$stx-subst*$7091$14YGsk g$id$7672$14YGsk)
             (g$stx-mark*$7090$14YGsk g$id$7672$14YGsk))))
         (g$id->sym$7116$14YGsk g$id$7672$14YGsk)))))
   (g$label->binding$7130$14YGsk
     g$label->binding$10758$14YGsk
     (case-lambda
       ((g$x$7686$14YGsk g$r$7687$14YGsk)
        ((case-lambda
           ((g$t$7688$14YGsk)
            (if g$t$7688$14YGsk
              ((case-lambda
                 ((g$b$7689$14YGsk)
                  (if (if (pair? g$b$7689$14YGsk)
                        (begin '#f (eq? (car g$b$7689$14YGsk) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7356$14YGsk (cdr g$b$7689$14YGsk)))
                    (if (if (pair? g$b$7689$14YGsk)
                          (begin '#f (eq? (car g$b$7689$14YGsk) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7690$14YGsk g$loc$7691$14YGsk)
                          (cons '$rtd (symbol-value g$loc$7691$14YGsk))))
                       (g$cadr$4887$14YGsk g$b$7689$14YGsk)
                       (g$cddr$4889$14YGsk g$b$7689$14YGsk))
                      g$b$7689$14YGsk))))
               g$t$7688$14YGsk)
              ((case-lambda
                 ((g$t$7692$14YGsk)
                  (if g$t$7692$14YGsk
                    (cdr g$t$7692$14YGsk)
                    ((case-lambda
                       ((g$t$7693$14YGsk)
                        (if g$t$7693$14YGsk
                          ((case-lambda
                             ((g$env$7694$14YGsk)
                              ((case-lambda
                                 ((g$t$7695$14YGsk)
                                  (if g$t$7695$14YGsk
                                    ((case-lambda
                                       ((g$p$7696$14YGsk)
                                        (g$cons*$5358$14YGsk
                                          'lexical
                                          (cdr g$p$7696$14YGsk)
                                          '#f)))
                                     g$t$7695$14YGsk)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7686$14YGsk
                                 (g$interaction-env-locs$7473$14YGsk
                                   g$env$7694$14YGsk)))))
                           g$t$7693$14YGsk)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7509$14YGsk)))))
               (assq g$x$7686$14YGsk g$r$7687$14YGsk)))))
         (g$imported-label->binding$6929$14YGsk g$x$7686$14YGsk)))))
   (g$make-binding$7131$14YGsk g$make-binding$10759$14YGsk cons)
   (g$binding-type$7132$14YGsk g$binding-type$10760$14YGsk car)
   (g$binding-value$7133$14YGsk g$binding-value$10761$14YGsk cdr)
   (g$raise-unbound-error$7134$14YGsk
     g$raise-unbound-error$10762$14YGsk
     (case-lambda
       ((g$id$7697$14YGsk)
        (g$syntax-violation*$7501$14YGsk
          '#f
          '"unbound identifier"
          g$id$7697$14YGsk
          (g$make-undefined-violation$5692$14YGsk)))))
   (g$syntax-type$7135$14YGsk
     g$syntax-type$10763$14YGsk
     (case-lambda
       ((g$e$7698$14YGsk g$r$7699$14YGsk)
        (if (g$id?$7115$14YGsk g$e$7698$14YGsk)
          ((case-lambda
             ((g$id$7700$14YGsk)
              ((case-lambda
                 ((g$label$7701$14YGsk)
                  ((case-lambda
                     ((g$b$7702$14YGsk)
                      ((case-lambda
                         ((g$type$7703$14YGsk)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7701$14YGsk)
                                  (g$raise-unbound-error$7134$14YGsk
                                    g$id$7700$14YGsk)
                                  (void))
                                ((case-lambda
                                   ((g$t$7704$14YGsk)
                                    (if (memv
                                          g$t$7704$14YGsk
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7703$14YGsk
                                        (g$binding-value$7133$14YGsk
                                          g$b$7702$14YGsk)
                                        g$id$7700$14YGsk)
                                      (values 'other '#f '#f))))
                                 g$type$7703$14YGsk)))))))
                       (g$binding-type$7132$14YGsk g$b$7702$14YGsk))))
                   (g$label->binding$7130$14YGsk
                     g$label$7701$14YGsk
                     g$r$7699$14YGsk))))
               (g$id->label$7128$14YGsk g$id$7700$14YGsk))))
           g$e$7698$14YGsk)
          (if (g$syntax-pair?$7108$14YGsk g$e$7698$14YGsk)
            ((case-lambda
               ((g$id$7705$14YGsk)
                (if (g$id?$7115$14YGsk g$id$7705$14YGsk)
                  ((case-lambda
                     ((g$label$7706$14YGsk)
                      ((case-lambda
                         ((g$b$7707$14YGsk)
                          ((case-lambda
                             ((g$type$7708$14YGsk)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7706$14YGsk)
                                      (g$raise-unbound-error$7134$14YGsk
                                        g$id$7705$14YGsk)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7709$14YGsk)
                                        (if (memv
                                              g$t$7709$14YGsk
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7708$14YGsk
                                            (g$binding-value$7133$14YGsk
                                              g$b$7707$14YGsk)
                                            g$id$7705$14YGsk)
                                          (values 'call '#f '#f))))
                                     g$type$7708$14YGsk)))))))
                           (g$binding-type$7132$14YGsk g$b$7707$14YGsk))))
                       (g$label->binding$7130$14YGsk
                         g$label$7706$14YGsk
                         g$r$7699$14YGsk))))
                   (g$id->label$7128$14YGsk g$id$7705$14YGsk))
                  (values 'call '#f '#f))))
             (g$syntax-car$7112$14YGsk g$e$7698$14YGsk))
            ((case-lambda
               ((g$d$7710$14YGsk)
                (if (g$self-evaluating?$7123$14YGsk g$d$7710$14YGsk)
                  (values 'constant g$d$7710$14YGsk '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7126$14YGsk g$e$7698$14YGsk)))))))
   (g$sanitize-binding$7143$14YGsk
     g$sanitize-binding$10764$14YGsk
     (case-lambda
       ((g$x$7711$14YGsk g$src$7712$14YGsk)
        (if (procedure? g$x$7711$14YGsk)
          (g$cons*$5358$14YGsk 'local-macro g$x$7711$14YGsk g$src$7712$14YGsk)
          (if (if (pair? g$x$7711$14YGsk)
                (if (eq? (car g$x$7711$14YGsk) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7711$14YGsk)))
                  '#f)
                '#f)
            (g$cons*$5358$14YGsk
              'local-macro!
              (cdr g$x$7711$14YGsk)
              g$src$7712$14YGsk)
            (if (if (pair? g$x$7711$14YGsk)
                  (begin '#f (eq? (car g$x$7711$14YGsk) '$rtd))
                  '#f)
              g$x$7711$14YGsk
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7711$14YGsk)))))))
   (g$make-variable-transformer$7144$14YGsk
     g$make-variable-transformer$10765$14YGsk
     (case-lambda
       ((g$x$7713$14YGsk)
        (if (procedure? g$x$7713$14YGsk)
          (cons 'macro! g$x$7713$14YGsk)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7713$14YGsk)))))
   (g$variable-transformer?$7145$14YGsk
     g$variable-transformer?$10766$14YGsk
     (case-lambda
       ((g$x$7714$14YGsk)
        (if (pair? g$x$7714$14YGsk)
          (if (eq? (car g$x$7714$14YGsk) 'macro!)
            (begin '#f (procedure? (cdr g$x$7714$14YGsk)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7146$14YGsk
     g$variable-transformer-procedure$10767$14YGsk
     (case-lambda
       ((g$x$7715$14YGsk)
        (if (g$variable-transformer?$7145$14YGsk g$x$7715$14YGsk)
          (cdr g$x$7715$14YGsk)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7715$14YGsk)))))
   (g$make-eval-transformer$7147$14YGsk
     g$make-eval-transformer$10768$14YGsk
     (case-lambda
       ((g$x$7716$14YGsk)
        (g$sanitize-binding$7143$14YGsk
          (eval-core (g$expanded->core$6629$14YGsk g$x$7716$14YGsk))
          g$x$7716$14YGsk))))
   (g$parse-define$7333$14YGsk
     g$parse-define$10769$14YGsk
     (case-lambda
       ((g$x$7717$14YGsk)
        ((case-lambda
           ((g$t$7718$14YGsk)
            ((case-lambda
               ((g$ls/false$7719$14YGsk)
                (if (if g$ls/false$7719$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7720$14YGsk
                               g$fmls$7721$14YGsk
                               g$b$7722$14YGsk
                               g$b*$7723$14YGsk)
                             (g$id?$7115$14YGsk g$id$7720$14YGsk)))
                          g$ls/false$7719$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7724$14YGsk
                         g$fmls$7725$14YGsk
                         g$b$7726$14YGsk
                         g$b*$7727$14YGsk)
                       (begin
                         (g$verify-formals$7413$14YGsk
                           g$fmls$7725$14YGsk
                           g$x$7717$14YGsk)
                         (values
                           g$id$7724$14YGsk
                           (cons
                             'defun
                             (cons
                               g$fmls$7725$14YGsk
                               (cons g$b$7726$14YGsk g$b*$7727$14YGsk)))))))
                    g$ls/false$7719$14YGsk)
                  ((case-lambda
                     ((g$t$7728$14YGsk)
                      ((case-lambda
                         ((g$ls/false$7729$14YGsk)
                          (if (if g$ls/false$7729$14YGsk
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7730$14YGsk g$val$7731$14YGsk)
                                       (g$id?$7115$14YGsk g$id$7730$14YGsk)))
                                    g$ls/false$7729$14YGsk))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7732$14YGsk g$val$7733$14YGsk)
                                 (values
                                   g$id$7732$14YGsk
                                   (cons 'expr g$val$7733$14YGsk))))
                              g$ls/false$7729$14YGsk)
                            ((case-lambda
                               ((g$t$7734$14YGsk)
                                ((case-lambda
                                   ((g$ls/false$7735$14YGsk)
                                    (if (if g$ls/false$7735$14YGsk
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7736$14YGsk)
                                                 (g$id?$7115$14YGsk
                                                   g$id$7736$14YGsk)))
                                              g$ls/false$7735$14YGsk))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7737$14YGsk)
                                           (values
                                             g$id$7737$14YGsk
                                             (cons
                                               'expr
                                               (g$bless$7356$14YGsk '(void))))))
                                        g$ls/false$7735$14YGsk)
                                      (g$syntax-violation$7502$14YGsk
                                        '#f
                                        '"invalid syntax"
                                        g$t$7734$14YGsk))))
                                 (g$syntax-dispatch$7393$14YGsk
                                   g$t$7734$14YGsk
                                   '(_ any)))))
                             g$t$7728$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$7728$14YGsk
                         '(_ any any)))))
                   g$t$7718$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$7718$14YGsk
               '(_ (any . any) any . each-any)))))
         g$x$7717$14YGsk))))
   (g$parse-define-syntax$7334$14YGsk
     g$parse-define-syntax$10770$14YGsk
     (case-lambda
       ((g$x$7738$14YGsk)
        ((case-lambda
           ((g$t$7739$14YGsk)
            ((case-lambda
               ((g$ls/false$7740$14YGsk)
                (if (if g$ls/false$7740$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7741$14YGsk g$val$7742$14YGsk)
                             (g$id?$7115$14YGsk g$id$7741$14YGsk)))
                          g$ls/false$7740$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7743$14YGsk g$val$7744$14YGsk)
                       (values g$id$7743$14YGsk g$val$7744$14YGsk)))
                    g$ls/false$7740$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7739$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$7739$14YGsk '(_ any any)))))
         g$x$7738$14YGsk))))
   (g$scheme-stx-hashtable$7335$14YGsk
     g$scheme-stx-hashtable$10771$14YGsk
     (g$make-eq-hashtable$5149$14YGsk))
   (g$scheme-stx$7336$14YGsk
     g$scheme-stx$10772$14YGsk
     (case-lambda
       ((g$sym$7745$14YGsk)
        ((case-lambda
           ((g$t$7746$14YGsk)
            (if g$t$7746$14YGsk
              g$t$7746$14YGsk
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7747$14YGsk)
                    ((case-lambda
                       ((g$stx$7748$14YGsk)
                        ((case-lambda
                           ((g$stx$7749$14YGsk)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5153$14YGsk
                                    g$scheme-stx-hashtable$7335$14YGsk
                                    g$sym$7745$14YGsk
                                    g$stx$7749$14YGsk)
                                  g$stx$7749$14YGsk))))))
                         ((case-lambda
                            ((g$t$7750$14YGsk)
                             (if g$t$7750$14YGsk
                               ((case-lambda
                                  ((g$x$7751$14YGsk)
                                   ((case-lambda
                                      ((g$name$7752$14YGsk g$label$7753$14YGsk)
                                       (g$add-subst$7105$14YGsk
                                         (g$make-rib$7069$14YGsk
                                           (list g$name$7752$14YGsk)
                                           (list g$top-mark*$7057$14YGsk)
                                           (list g$label$7753$14YGsk)
                                           '#f)
                                         g$stx$7748$14YGsk)))
                                    (car g$x$7751$14YGsk)
                                    (cdr g$x$7751$14YGsk))))
                                g$t$7750$14YGsk)
                               g$stx$7748$14YGsk)))
                          (assq g$sym$7745$14YGsk g$subst$7747$14YGsk)))))
                     (g$make-stx$7088$14YGsk
                       g$sym$7745$14YGsk
                       g$top-mark*$7057$14YGsk
                       '()
                       '()))))
                 (g$library-subst$6887$14YGsk
                   (g$find-library-by-name$6923$14YGsk
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5152$14YGsk
           g$scheme-stx-hashtable$7335$14YGsk
           g$sym$7745$14YGsk
           '#f)))))
   (g$lexical-var$7337$14YGsk g$lexical-var$10773$14YGsk car)
   (g$lexical-mutable?$7338$14YGsk g$lexical-mutable?$10774$14YGsk cdr)
   (g$set-lexical-mutable!$7339$14YGsk
     g$set-lexical-mutable!$10775$14YGsk
     set-cdr!)
   (g$add-lexical$7340$14YGsk
     g$add-lexical$10776$14YGsk
     (case-lambda
       ((g$lab$7754$14YGsk g$lex$7755$14YGsk g$r$7756$14YGsk)
        (cons
          (g$cons*$5358$14YGsk g$lab$7754$14YGsk 'lexical g$lex$7755$14YGsk '#f)
          g$r$7756$14YGsk))))
   (g$add-lexicals$7341$14YGsk
     g$add-lexicals$10777$14YGsk
     (case-lambda
       ((g$lab*$7757$14YGsk g$lex*$7758$14YGsk g$r$7759$14YGsk)
        (if (null? g$lab*$7757$14YGsk)
          g$r$7759$14YGsk
          (g$add-lexicals$7341$14YGsk
            (cdr g$lab*$7757$14YGsk)
            (cdr g$lex*$7758$14YGsk)
            (g$add-lexical$7340$14YGsk
              (car g$lab*$7757$14YGsk)
              (car g$lex*$7758$14YGsk)
              g$r$7759$14YGsk))))))
   (g$letrec-helper$7342$14YGsk
     g$letrec-helper$10778$14YGsk
     (case-lambda
       ((g$e$7760$14YGsk g$r$7761$14YGsk g$mr$7762$14YGsk g$build$7763$14YGsk)
        ((case-lambda
           ((g$t$7764$14YGsk)
            ((case-lambda
               ((g$ls/false$7765$14YGsk)
                (if g$ls/false$7765$14YGsk
                  (apply
                    (case-lambda
                      ((g$lhs*$7766$14YGsk
                         g$rhs*$7767$14YGsk
                         g$b$7768$14YGsk
                         g$b*$7769$14YGsk)
                       (if (not (g$valid-bound-ids?$7120$14YGsk
                                  g$lhs*$7766$14YGsk))
                         (g$invalid-fmls-error$7358$14YGsk
                           g$e$7760$14YGsk
                           g$lhs*$7766$14YGsk)
                         ((case-lambda
                            ((g$lex*$7770$14YGsk g$lab*$7771$14YGsk)
                             ((case-lambda
                                ((g$rib$7772$14YGsk g$r$7773$14YGsk)
                                 ((case-lambda
                                    ((g$body$7774$14YGsk g$rhs*$7775$14YGsk)
                                     (g$build$7763$14YGsk
                                       '#f
                                       g$lex*$7770$14YGsk
                                       g$rhs*$7775$14YGsk
                                       g$body$7774$14YGsk)))
                                  (g$chi-internal$7422$14YGsk
                                    (g$add-subst$7105$14YGsk
                                      g$rib$7772$14YGsk
                                      (cons g$b$7768$14YGsk g$b*$7769$14YGsk))
                                    g$r$7773$14YGsk
                                    g$mr$7762$14YGsk)
                                  (g$chi-expr*$7409$14YGsk
                                    (map (case-lambda
                                           ((g$x$7776$14YGsk)
                                            (g$add-subst$7105$14YGsk
                                              g$rib$7772$14YGsk
                                              g$x$7776$14YGsk)))
                                         g$rhs*$7767$14YGsk)
                                    g$r$7773$14YGsk
                                    g$mr$7762$14YGsk))))
                              (g$make-full-rib$7083$14YGsk
                                g$lhs*$7766$14YGsk
                                g$lab*$7771$14YGsk)
                              (g$add-lexicals$7341$14YGsk
                                g$lab*$7771$14YGsk
                                g$lex*$7770$14YGsk
                                g$r$7761$14YGsk))))
                          (map g$gen-lexical$7059$14YGsk g$lhs*$7766$14YGsk)
                          (map g$gen-label$7061$14YGsk g$lhs*$7766$14YGsk)))))
                    g$ls/false$7765$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7764$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$7764$14YGsk
               '(_ #(each (any any)) any . each-any)))))
         g$e$7760$14YGsk))))
   (g$letrec-transformer$7343$14YGsk
     g$letrec-transformer$10779$14YGsk
     (case-lambda
       ((g$e$7777$14YGsk g$r$7778$14YGsk g$mr$7779$14YGsk)
        (g$letrec-helper$7342$14YGsk
          g$e$7777$14YGsk
          g$r$7778$14YGsk
          g$mr$7779$14YGsk
          g$build-letrec$7051$14YGsk))))
   (g$letrec*-transformer$7344$14YGsk
     g$letrec*-transformer$10780$14YGsk
     (case-lambda
       ((g$e$7780$14YGsk g$r$7781$14YGsk g$mr$7782$14YGsk)
        (g$letrec-helper$7342$14YGsk
          g$e$7780$14YGsk
          g$r$7781$14YGsk
          g$mr$7782$14YGsk
          g$build-letrec*$7052$14YGsk))))
   (g$fluid-let-syntax-transformer$7345$14YGsk
     g$fluid-let-syntax-transformer$10781$14YGsk
     (case-lambda
       ((g$e$7783$14YGsk g$r$7784$14YGsk g$mr$7785$14YGsk)
        (letrec* ((g$lookup$7786$14YGsk
                    (case-lambda
                      ((g$x$7796$14YGsk)
                       ((case-lambda
                          ((g$t$7797$14YGsk)
                           (if g$t$7797$14YGsk
                             g$t$7797$14YGsk
                             (begin
                               '#f
                               (g$syntax-violation$7502$14YGsk
                                 '#f
                                 '"unbound identifier"
                                 g$e$7783$14YGsk
                                 g$x$7796$14YGsk)))))
                        (g$id->label$7128$14YGsk g$x$7796$14YGsk))))))
          ((case-lambda
             ((g$t$7787$14YGsk)
              ((case-lambda
                 ((g$ls/false$7788$14YGsk)
                  (if g$ls/false$7788$14YGsk
                    (apply
                      (case-lambda
                        ((g$lhs*$7789$14YGsk
                           g$rhs*$7790$14YGsk
                           g$b$7791$14YGsk
                           g$b*$7792$14YGsk)
                         (if (not (g$valid-bound-ids?$7120$14YGsk
                                    g$lhs*$7789$14YGsk))
                           (g$invalid-fmls-error$7358$14YGsk
                             g$e$7783$14YGsk
                             g$lhs*$7789$14YGsk)
                           ((case-lambda
                              ((g$lab*$7793$14YGsk g$rhs*$7794$14YGsk)
                               (g$chi-internal$7422$14YGsk
                                 (cons g$b$7791$14YGsk g$b*$7792$14YGsk)
                                 (append
                                   (map cons
                                        g$lab*$7793$14YGsk
                                        g$rhs*$7794$14YGsk)
                                   g$r$7784$14YGsk)
                                 (append
                                   (map cons
                                        g$lab*$7793$14YGsk
                                        g$rhs*$7794$14YGsk)
                                   g$mr$7785$14YGsk))))
                            (map g$lookup$7786$14YGsk g$lhs*$7789$14YGsk)
                            (map (case-lambda
                                   ((g$x$7795$14YGsk)
                                    (g$make-eval-transformer$7147$14YGsk
                                      (g$expand-transformer$7438$14YGsk
                                        g$x$7795$14YGsk
                                        g$mr$7785$14YGsk))))
                                 g$rhs*$7790$14YGsk)))))
                      g$ls/false$7788$14YGsk)
                    (g$syntax-violation$7502$14YGsk
                      '#f
                      '"invalid syntax"
                      g$t$7787$14YGsk))))
               (g$syntax-dispatch$7393$14YGsk
                 g$t$7787$14YGsk
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7783$14YGsk)))))
   (g$type-descriptor-transformer$7346$14YGsk
     g$type-descriptor-transformer$10782$14YGsk
     (case-lambda
       ((g$e$7798$14YGsk g$r$7799$14YGsk g$mr$7800$14YGsk)
        ((case-lambda
           ((g$t$7801$14YGsk)
            ((case-lambda
               ((g$ls/false$7802$14YGsk)
                (if (if g$ls/false$7802$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7803$14YGsk)
                             (g$id?$7115$14YGsk g$id$7803$14YGsk)))
                          g$ls/false$7802$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7804$14YGsk)
                       ((case-lambda
                          ((g$lab$7805$14YGsk)
                           ((case-lambda
                              ((g$b$7806$14YGsk)
                               ((case-lambda
                                  ((g$type$7807$14YGsk)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7805$14YGsk)
                                           (g$raise-unbound-error$7134$14YGsk
                                             g$id$7804$14YGsk)
                                           (void))
                                         (if (not (if (eq? g$type$7807$14YGsk
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7133$14YGsk
                                                               g$b$7806$14YGsk))))
                                                    '#f))
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"not a record type"
                                             g$e$7798$14YGsk)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7133$14YGsk
                                             g$b$7806$14YGsk))))))))
                                (g$binding-type$7132$14YGsk g$b$7806$14YGsk))))
                            (g$label->binding$7130$14YGsk
                              g$lab$7805$14YGsk
                              g$r$7799$14YGsk))))
                        (g$id->label$7128$14YGsk g$id$7804$14YGsk))))
                    g$ls/false$7802$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7801$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$7801$14YGsk '(_ any)))))
         g$e$7798$14YGsk))))
   (g$record-type-descriptor-transformer$7347$14YGsk
     g$record-type-descriptor-transformer$10783$14YGsk
     (case-lambda
       ((g$e$7808$14YGsk g$r$7809$14YGsk g$mr$7810$14YGsk)
        ((case-lambda
           ((g$t$7811$14YGsk)
            ((case-lambda
               ((g$ls/false$7812$14YGsk)
                (if (if g$ls/false$7812$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7813$14YGsk)
                             (g$id?$7115$14YGsk g$id$7813$14YGsk)))
                          g$ls/false$7812$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7814$14YGsk)
                       ((case-lambda
                          ((g$lab$7815$14YGsk)
                           ((case-lambda
                              ((g$b$7816$14YGsk)
                               ((case-lambda
                                  ((g$type$7817$14YGsk)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7815$14YGsk)
                                           (g$raise-unbound-error$7134$14YGsk
                                             g$id$7814$14YGsk)
                                           (void))
                                         (if (not (if (eq? g$type$7817$14YGsk
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7133$14YGsk
                                                          g$b$7816$14YGsk)))
                                                    '#f))
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"not a record type"
                                             g$e$7808$14YGsk)
                                           (void))
                                         (g$chi-expr$7411$14YGsk
                                           (car (g$binding-value$7133$14YGsk
                                                  g$b$7816$14YGsk))
                                           g$r$7809$14YGsk
                                           g$mr$7810$14YGsk)))))))
                                (g$binding-type$7132$14YGsk g$b$7816$14YGsk))))
                            (g$label->binding$7130$14YGsk
                              g$lab$7815$14YGsk
                              g$r$7809$14YGsk))))
                        (g$id->label$7128$14YGsk g$id$7814$14YGsk))))
                    g$ls/false$7812$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7811$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$7811$14YGsk '(_ any)))))
         g$e$7808$14YGsk))))
   (g$record-constructor-descriptor-transformer$7348$14YGsk
     g$record-constructor-descriptor-transformer$10784$14YGsk
     (case-lambda
       ((g$e$7818$14YGsk g$r$7819$14YGsk g$mr$7820$14YGsk)
        ((case-lambda
           ((g$t$7821$14YGsk)
            ((case-lambda
               ((g$ls/false$7822$14YGsk)
                (if (if g$ls/false$7822$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7823$14YGsk)
                             (g$id?$7115$14YGsk g$id$7823$14YGsk)))
                          g$ls/false$7822$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7824$14YGsk)
                       ((case-lambda
                          ((g$lab$7825$14YGsk)
                           ((case-lambda
                              ((g$b$7826$14YGsk)
                               ((case-lambda
                                  ((g$type$7827$14YGsk)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7825$14YGsk)
                                           (g$raise-unbound-error$7134$14YGsk
                                             g$id$7824$14YGsk)
                                           (void))
                                         (if (not (if (eq? g$type$7827$14YGsk
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7133$14YGsk
                                                          g$b$7826$14YGsk)))
                                                    '#f))
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid type"
                                             g$e$7818$14YGsk)
                                           (void))
                                         (g$chi-expr$7411$14YGsk
                                           (g$cadr$4887$14YGsk
                                             (g$binding-value$7133$14YGsk
                                               g$b$7826$14YGsk))
                                           g$r$7819$14YGsk
                                           g$mr$7820$14YGsk)))))))
                                (g$binding-type$7132$14YGsk g$b$7826$14YGsk))))
                            (g$label->binding$7130$14YGsk
                              g$lab$7825$14YGsk
                              g$r$7819$14YGsk))))
                        (g$id->label$7128$14YGsk g$id$7824$14YGsk))))
                    g$ls/false$7822$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7821$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$7821$14YGsk '(_ any)))))
         g$e$7818$14YGsk))))
   (g$when-macro$7349$14YGsk
     g$when-macro$10785$14YGsk
     (case-lambda
       ((g$e$7828$14YGsk)
        ((case-lambda
           ((g$t$7829$14YGsk)
            ((case-lambda
               ((g$ls/false$7830$14YGsk)
                (if g$ls/false$7830$14YGsk
                  (apply
                    (case-lambda
                      ((g$test$7831$14YGsk g$e$7832$14YGsk g$e*$7833$14YGsk)
                       (g$bless$7356$14YGsk
                         (list
                           'if
                           g$test$7831$14YGsk
                           (cons
                             'begin
                             (cons g$e$7832$14YGsk g$e*$7833$14YGsk))))))
                    g$ls/false$7830$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7829$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$7829$14YGsk
               '(_ any any . each-any)))))
         g$e$7828$14YGsk))))
   (g$unless-macro$7350$14YGsk
     g$unless-macro$10786$14YGsk
     (case-lambda
       ((g$e$7834$14YGsk)
        ((case-lambda
           ((g$t$7835$14YGsk)
            ((case-lambda
               ((g$ls/false$7836$14YGsk)
                (if g$ls/false$7836$14YGsk
                  (apply
                    (case-lambda
                      ((g$test$7837$14YGsk g$e$7838$14YGsk g$e*$7839$14YGsk)
                       (g$bless$7356$14YGsk
                         (list
                           'if
                           (list 'not g$test$7837$14YGsk)
                           (cons
                             'begin
                             (cons g$e$7838$14YGsk g$e*$7839$14YGsk))))))
                    g$ls/false$7836$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7835$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$7835$14YGsk
               '(_ any any . each-any)))))
         g$e$7834$14YGsk))))
   (g$if-transformer$7351$14YGsk
     g$if-transformer$10787$14YGsk
     (case-lambda
       ((g$e$7840$14YGsk g$r$7841$14YGsk g$mr$7842$14YGsk)
        ((case-lambda
           ((g$t$7843$14YGsk)
            ((case-lambda
               ((g$ls/false$7844$14YGsk)
                (if g$ls/false$7844$14YGsk
                  (apply
                    (case-lambda
                      ((g$e0$7845$14YGsk g$e1$7846$14YGsk g$e2$7847$14YGsk)
                       (list
                         'if
                         (g$chi-expr$7411$14YGsk
                           g$e0$7845$14YGsk
                           g$r$7841$14YGsk
                           g$mr$7842$14YGsk)
                         (g$chi-expr$7411$14YGsk
                           g$e1$7846$14YGsk
                           g$r$7841$14YGsk
                           g$mr$7842$14YGsk)
                         (g$chi-expr$7411$14YGsk
                           g$e2$7847$14YGsk
                           g$r$7841$14YGsk
                           g$mr$7842$14YGsk))))
                    g$ls/false$7844$14YGsk)
                  ((case-lambda
                     ((g$t$7848$14YGsk)
                      ((case-lambda
                         ((g$ls/false$7849$14YGsk)
                          (if g$ls/false$7849$14YGsk
                            (apply
                              (case-lambda
                                ((g$e0$7850$14YGsk g$e1$7851$14YGsk)
                                 (list
                                   'if
                                   (g$chi-expr$7411$14YGsk
                                     g$e0$7850$14YGsk
                                     g$r$7841$14YGsk
                                     g$mr$7842$14YGsk)
                                   (g$chi-expr$7411$14YGsk
                                     g$e1$7851$14YGsk
                                     g$r$7841$14YGsk
                                     g$mr$7842$14YGsk)
                                   (g$build-void$7050$14YGsk))))
                              g$ls/false$7849$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$7848$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$7848$14YGsk
                         '(_ any any)))))
                   g$t$7843$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$7843$14YGsk '(_ any any any)))))
         g$e$7840$14YGsk))))
   (g$case-macro$7352$14YGsk
     g$case-macro$10788$14YGsk
     (case-lambda
       ((g$e$7852$14YGsk)
        (letrec* ((g$build-last$7853$14YGsk
                    (case-lambda
                      ((g$cls$7873$14YGsk)
                       ((case-lambda
                          ((g$t$7874$14YGsk)
                           ((case-lambda
                              ((g$ls/false$7875$14YGsk)
                               (if g$ls/false$7875$14YGsk
                                 (apply
                                   (case-lambda
                                     ((g$e$7876$14YGsk g$e*$7877$14YGsk)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$7876$14YGsk
                                          g$e*$7877$14YGsk))))
                                   g$ls/false$7875$14YGsk)
                                 ((case-lambda
                                    ((g$t$7878$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$7879$14YGsk)
                                         (if g$ls/false$7879$14YGsk
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$7854$14YGsk
                                                  g$cls$7873$14YGsk
                                                  '(if #f #f))))
                                             g$ls/false$7879$14YGsk)
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid syntax"
                                             g$t$7878$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$7878$14YGsk
                                        '_))))
                                  g$t$7874$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$7874$14YGsk
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$7873$14YGsk))))
                  (g$build-one$7854$14YGsk
                    (case-lambda
                      ((g$cls$7866$14YGsk g$k$7867$14YGsk)
                       ((case-lambda
                          ((g$t$7868$14YGsk)
                           ((case-lambda
                              ((g$ls/false$7869$14YGsk)
                               (if g$ls/false$7869$14YGsk
                                 (apply
                                   (case-lambda
                                     ((g$d*$7870$14YGsk
                                        g$e$7871$14YGsk
                                        g$e*$7872$14YGsk)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$7870$14YGsk))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$7871$14YGsk
                                            g$e*$7872$14YGsk))
                                        g$k$7867$14YGsk)))
                                   g$ls/false$7869$14YGsk)
                                 (g$syntax-violation$7502$14YGsk
                                   '#f
                                   '"invalid syntax"
                                   g$t$7868$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$7868$14YGsk
                              '(each-any any . each-any)))))
                        g$cls$7866$14YGsk)))))
          ((case-lambda
             ((g$t$7855$14YGsk)
              ((case-lambda
                 ((g$ls/false$7856$14YGsk)
                  (if g$ls/false$7856$14YGsk
                    (apply
                      (case-lambda
                        ((g$expr$7857$14YGsk)
                         (g$bless$7356$14YGsk
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$7857$14YGsk))
                               '((if #f #f)))))))
                      g$ls/false$7856$14YGsk)
                    ((case-lambda
                       ((g$t$7858$14YGsk)
                        ((case-lambda
                           ((g$ls/false$7859$14YGsk)
                            (if g$ls/false$7859$14YGsk
                              (apply
                                (case-lambda
                                  ((g$expr$7860$14YGsk
                                     g$cls$7861$14YGsk
                                     g$cls*$7862$14YGsk)
                                   (g$bless$7356$14YGsk
                                     (list
                                       'let
                                       (list (list 't g$expr$7860$14YGsk))
                                       ((letrec ((g$f$7863$14YGsk
                                                   (case-lambda
                                                     ((g$cls$7864$14YGsk
                                                        g$cls*$7865$14YGsk)
                                                      (if (null?
                                                            g$cls*$7865$14YGsk)
                                                        (g$build-last$7853$14YGsk
                                                          g$cls$7864$14YGsk)
                                                        (g$build-one$7854$14YGsk
                                                          g$cls$7864$14YGsk
                                                          (g$f$7863$14YGsk
                                                            (car g$cls*$7865$14YGsk)
                                                            (cdr g$cls*$7865$14YGsk))))))))
                                          g$f$7863$14YGsk)
                                        g$cls$7861$14YGsk
                                        g$cls*$7862$14YGsk)))))
                                g$ls/false$7859$14YGsk)
                              (g$syntax-violation$7502$14YGsk
                                '#f
                                '"invalid syntax"
                                g$t$7858$14YGsk))))
                         (g$syntax-dispatch$7393$14YGsk
                           g$t$7858$14YGsk
                           '(_ any any . each-any)))))
                     g$t$7855$14YGsk))))
               (g$syntax-dispatch$7393$14YGsk g$t$7855$14YGsk '(_ any)))))
           g$e$7852$14YGsk)))))
   (g$quote-transformer$7353$14YGsk
     g$quote-transformer$10789$14YGsk
     (case-lambda
       ((g$e$7880$14YGsk g$r$7881$14YGsk g$mr$7882$14YGsk)
        ((case-lambda
           ((g$t$7883$14YGsk)
            ((case-lambda
               ((g$ls/false$7884$14YGsk)
                (if g$ls/false$7884$14YGsk
                  (apply
                    (case-lambda
                      ((g$datum$7885$14YGsk)
                       (list
                         'quote
                         (g$stx->datum$7126$14YGsk g$datum$7885$14YGsk))))
                    g$ls/false$7884$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7883$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$7883$14YGsk '(_ any)))))
         g$e$7880$14YGsk))))
   (g$case-lambda-transformer$7354$14YGsk
     g$case-lambda-transformer$10790$14YGsk
     (case-lambda
       ((g$e$7886$14YGsk g$r$7887$14YGsk g$mr$7888$14YGsk)
        ((case-lambda
           ((g$t$7889$14YGsk)
            ((case-lambda
               ((g$ls/false$7890$14YGsk)
                (if g$ls/false$7890$14YGsk
                  (apply
                    (case-lambda
                      ((g$fmls*$7891$14YGsk g$b*$7892$14YGsk g$b**$7893$14YGsk)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7415$14YGsk
                              g$e$7886$14YGsk
                              g$fmls*$7891$14YGsk
                              (map cons g$b*$7892$14YGsk g$b**$7893$14YGsk)
                              g$r$7887$14YGsk
                              g$mr$7888$14YGsk)))
                         (case-lambda
                           ((g$fmls*$7896$14YGsk g$body*$7897$14YGsk)
                            ((case-lambda
                               ((g$body*$7898$14YGsk g$fmls*$7899$14YGsk)
                                (g$build-case-lambda$7047$14YGsk
                                  '#f
                                  g$fmls*$7899$14YGsk
                                  g$body*$7898$14YGsk)))
                             g$body*$7897$14YGsk
                             g$fmls*$7896$14YGsk))))))
                    g$ls/false$7890$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7889$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$7889$14YGsk
               '(_ . #(each (any any . each-any)))))))
         g$e$7886$14YGsk))))
   (g$lambda-transformer$7355$14YGsk
     g$lambda-transformer$10791$14YGsk
     (case-lambda
       ((g$e$7900$14YGsk g$r$7901$14YGsk g$mr$7902$14YGsk)
        ((case-lambda
           ((g$t$7903$14YGsk)
            ((case-lambda
               ((g$ls/false$7904$14YGsk)
                (if g$ls/false$7904$14YGsk
                  (apply
                    (case-lambda
                      ((g$fmls$7905$14YGsk g$b$7906$14YGsk g$b*$7907$14YGsk)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7414$14YGsk
                              g$e$7900$14YGsk
                              g$fmls$7905$14YGsk
                              (cons g$b$7906$14YGsk g$b*$7907$14YGsk)
                              g$r$7901$14YGsk
                              g$mr$7902$14YGsk)))
                         (case-lambda
                           ((g$fmls$7910$14YGsk g$body$7911$14YGsk)
                            ((case-lambda
                               ((g$body$7912$14YGsk g$fmls$7913$14YGsk)
                                (g$build-lambda$7046$14YGsk
                                  '#f
                                  g$fmls$7913$14YGsk
                                  g$body$7912$14YGsk)))
                             g$body$7911$14YGsk
                             g$fmls$7910$14YGsk))))))
                    g$ls/false$7904$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7903$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$7903$14YGsk
               '(_ any any . each-any)))))
         g$e$7900$14YGsk))))
   (g$bless$7356$14YGsk
     g$bless$10792$14YGsk
     (case-lambda
       ((g$x$7914$14YGsk)
        (g$mkstx$7103$14YGsk
          ((letrec ((g$f$7915$14YGsk
                      (case-lambda
                        ((g$x$7916$14YGsk)
                         (if (g$stx?$7087$14YGsk g$x$7916$14YGsk)
                           g$x$7916$14YGsk
                           (if (pair? g$x$7916$14YGsk)
                             (cons
                               (g$f$7915$14YGsk (car g$x$7916$14YGsk))
                               (g$f$7915$14YGsk (cdr g$x$7916$14YGsk)))
                             (if (symbol? g$x$7916$14YGsk)
                               (g$scheme-stx$7336$14YGsk g$x$7916$14YGsk)
                               (if (vector? g$x$7916$14YGsk)
                                 (vector-map g$f$7915$14YGsk g$x$7916$14YGsk)
                                 g$x$7916$14YGsk))))))))
             g$f$7915$14YGsk)
           g$x$7914$14YGsk)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7357$14YGsk
     g$with-syntax-macro$10793$14YGsk
     (case-lambda
       ((g$e$7917$14YGsk)
        ((case-lambda
           ((g$t$7918$14YGsk)
            ((case-lambda
               ((g$ls/false$7919$14YGsk)
                (if g$ls/false$7919$14YGsk
                  (apply
                    (case-lambda
                      ((g$pat*$7920$14YGsk
                         g$expr*$7921$14YGsk
                         g$b$7922$14YGsk
                         g$b*$7923$14YGsk)
                       ((case-lambda
                          ((g$idn*$7924$14YGsk)
                           (begin
                             (g$verify-formals$7413$14YGsk
                               (map car g$idn*$7924$14YGsk)
                               g$e$7917$14YGsk)
                             ((case-lambda
                                ((g$t*$7925$14YGsk)
                                 (g$bless$7356$14YGsk
                                   (list
                                     'let
                                     (map list
                                          g$t*$7925$14YGsk
                                          g$expr*$7921$14YGsk)
                                     ((letrec ((g$f$7926$14YGsk
                                                 (case-lambda
                                                   ((g$pat*$7927$14YGsk
                                                      g$t*$7928$14YGsk)
                                                    (if (null?
                                                          g$pat*$7927$14YGsk)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$7922$14YGsk
                                                            g$b*$7923$14YGsk)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$7928$14YGsk)
                                                        '()
                                                        (list
                                                          (car g$pat*$7927$14YGsk)
                                                          (g$f$7926$14YGsk
                                                            (cdr g$pat*$7927$14YGsk)
                                                            (cdr g$t*$7928$14YGsk)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$7927$14YGsk))
                                                            (car g$t*$7928$14YGsk)))))))))
                                        g$f$7926$14YGsk)
                                      g$pat*$7920$14YGsk
                                      g$t*$7925$14YGsk)))))
                              (g$generate-temporaries$7492$14YGsk
                                g$expr*$7921$14YGsk)))))
                        ((letrec ((g$f$7929$14YGsk
                                    (case-lambda
                                      ((g$pat*$7930$14YGsk)
                                       (if (null? g$pat*$7930$14YGsk)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7392$14YGsk
                                                (car g$pat*$7930$14YGsk)
                                                '())))
                                           (case-lambda
                                             ((g$pat$7933$14YGsk
                                                g$idn*$7934$14YGsk)
                                              ((case-lambda
                                                 ((g$idn*$7935$14YGsk
                                                    g$pat$7936$14YGsk)
                                                  (append
                                                    g$idn*$7935$14YGsk
                                                    (g$f$7929$14YGsk
                                                      (cdr g$pat*$7930$14YGsk)))))
                                               g$idn*$7934$14YGsk
                                               g$pat$7933$14YGsk)))))))))
                           g$f$7929$14YGsk)
                         g$pat*$7920$14YGsk))))
                    g$ls/false$7919$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$7918$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$7918$14YGsk
               '(_ #(each (any any)) any . each-any)))))
         g$e$7917$14YGsk))))
   (g$invalid-fmls-error$7358$14YGsk
     g$invalid-fmls-error$10794$14YGsk
     (case-lambda
       ((g$stx$7937$14YGsk g$fmls$7938$14YGsk)
        ((case-lambda
           ((g$t$7939$14YGsk)
            ((case-lambda
               ((g$ls/false$7940$14YGsk)
                (if g$ls/false$7940$14YGsk
                  (apply
                    (case-lambda
                      ((g$id*$7941$14YGsk g$last$7942$14YGsk)
                       ((letrec ((g$f$7943$14YGsk
                                   (case-lambda
                                     ((g$id*$7944$14YGsk)
                                      (if (null? g$id*$7944$14YGsk)
                                        (values)
                                        (if (not (g$id?$7115$14YGsk
                                                   (car g$id*$7944$14YGsk)))
                                          (g$syntax-violation$7502$14YGsk
                                            '#f
                                            '"not an identifier"
                                            g$stx$7937$14YGsk
                                            (car g$id*$7944$14YGsk))
                                          (begin
                                            (g$f$7943$14YGsk
                                              (cdr g$id*$7944$14YGsk))
                                            (if (g$bound-id-member?$7122$14YGsk
                                                  (car g$id*$7944$14YGsk)
                                                  (cdr g$id*$7944$14YGsk))
                                              (g$syntax-violation$7502$14YGsk
                                                '#f
                                                '"duplicate binding"
                                                g$stx$7937$14YGsk
                                                (car g$id*$7944$14YGsk))
                                              (void)))))))))
                          g$f$7943$14YGsk)
                        (if (g$id?$7115$14YGsk g$last$7942$14YGsk)
                          (cons g$last$7942$14YGsk g$id*$7941$14YGsk)
                          (if (g$syntax-null?$7110$14YGsk g$last$7942$14YGsk)
                            g$id*$7941$14YGsk
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"not an identifier"
                              g$stx$7937$14YGsk
                              g$last$7942$14YGsk))))))
                    g$ls/false$7940$14YGsk)
                  ((case-lambda
                     ((g$t$7945$14YGsk)
                      ((case-lambda
                         ((g$ls/false$7946$14YGsk)
                          (if g$ls/false$7946$14YGsk
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7502$14YGsk
                                   '#f
                                   '"malformed binding form"
                                   g$stx$7937$14YGsk
                                   g$fmls$7938$14YGsk)))
                              g$ls/false$7946$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$7945$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk g$t$7945$14YGsk '_))))
                   g$t$7939$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$7939$14YGsk
               '#(each+ any () any)))))
         g$fmls$7938$14YGsk))))
   (g$let-macro$7359$14YGsk
     g$let-macro$10795$14YGsk
     (case-lambda
       ((g$stx$7947$14YGsk)
        ((case-lambda
           ((g$t$7948$14YGsk)
            ((case-lambda
               ((g$ls/false$7949$14YGsk)
                (if g$ls/false$7949$14YGsk
                  (apply
                    (case-lambda
                      ((g$lhs*$7950$14YGsk
                         g$rhs*$7951$14YGsk
                         g$b$7952$14YGsk
                         g$b*$7953$14YGsk)
                       (if (g$valid-bound-ids?$7120$14YGsk g$lhs*$7950$14YGsk)
                         (g$bless$7356$14YGsk
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$7950$14YGsk
                                 (cons g$b$7952$14YGsk g$b*$7953$14YGsk)))
                             g$rhs*$7951$14YGsk))
                         (g$invalid-fmls-error$7358$14YGsk
                           g$stx$7947$14YGsk
                           g$lhs*$7950$14YGsk))))
                    g$ls/false$7949$14YGsk)
                  ((case-lambda
                     ((g$t$7954$14YGsk)
                      ((case-lambda
                         ((g$ls/false$7955$14YGsk)
                          (if (if g$ls/false$7955$14YGsk
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$7956$14YGsk
                                         g$lhs*$7957$14YGsk
                                         g$rhs*$7958$14YGsk
                                         g$b$7959$14YGsk
                                         g$b*$7960$14YGsk)
                                       (g$id?$7115$14YGsk g$f$7956$14YGsk)))
                                    g$ls/false$7955$14YGsk))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$7961$14YGsk
                                   g$lhs*$7962$14YGsk
                                   g$rhs*$7963$14YGsk
                                   g$b$7964$14YGsk
                                   g$b*$7965$14YGsk)
                                 (if (g$valid-bound-ids?$7120$14YGsk
                                       g$lhs*$7962$14YGsk)
                                   (g$bless$7356$14YGsk
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$7961$14YGsk
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$7962$14YGsk
                                                 (cons
                                                   g$b$7964$14YGsk
                                                   g$b*$7965$14YGsk)))))
                                         g$f$7961$14YGsk)
                                       g$rhs*$7963$14YGsk))
                                   (g$invalid-fmls-error$7358$14YGsk
                                     g$stx$7947$14YGsk
                                     g$lhs*$7962$14YGsk))))
                              g$ls/false$7955$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$7954$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$7954$14YGsk
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$7948$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$7948$14YGsk
               '(_ #(each (any any)) any . each-any)))))
         g$stx$7947$14YGsk))))
   (g$let-values-macro$7360$14YGsk
     g$let-values-macro$10796$14YGsk
     (case-lambda
       ((g$stx$7966$14YGsk)
        (letrec* ((g$rename$7967$14YGsk
                    (case-lambda
                      ((g$x$8018$14YGsk g$old*$8019$14YGsk g$new*$8020$14YGsk)
                       (begin
                         (if (not (g$id?$7115$14YGsk g$x$8018$14YGsk))
                           (g$syntax-violation$7502$14YGsk
                             '#f
                             '"not an indentifier"
                             g$stx$7966$14YGsk
                             g$x$8018$14YGsk)
                           (void))
                         (if (g$bound-id-member?$7122$14YGsk
                               g$x$8018$14YGsk
                               g$old*$8019$14YGsk)
                           (g$syntax-violation$7502$14YGsk
                             '#f
                             '"duplicate binding"
                             g$stx$7966$14YGsk
                             g$x$8018$14YGsk)
                           (void))
                         ((case-lambda
                            ((g$y$8021$14YGsk)
                             (values
                               g$y$8021$14YGsk
                               (cons g$x$8018$14YGsk g$old*$8019$14YGsk)
                               (cons g$y$8021$14YGsk g$new*$8020$14YGsk))))
                          (gensym
                            (g$syntax->datum$7505$14YGsk g$x$8018$14YGsk)))))))
                  (g$rename*$7968$14YGsk
                    (case-lambda
                      ((g$x*$8009$14YGsk g$old*$8010$14YGsk g$new*$8011$14YGsk)
                       (if (null? g$x*$8009$14YGsk)
                         (values '() g$old*$8010$14YGsk g$new*$8011$14YGsk)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$7967$14YGsk
                                (car g$x*$8009$14YGsk)
                                g$old*$8010$14YGsk
                                g$new*$8011$14YGsk)))
                           (case-lambda
                             ((g$x$8012$14YGsk
                                g$old*$8013$14YGsk
                                g$new*$8014$14YGsk)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$7968$14YGsk
                                     (cdr g$x*$8009$14YGsk)
                                     g$old*$8013$14YGsk
                                     g$new*$8014$14YGsk)))
                                (case-lambda
                                  ((g$x*$8015$14YGsk
                                     g$old*$8016$14YGsk
                                     g$new*$8017$14YGsk)
                                   (values
                                     (cons g$x$8012$14YGsk g$x*$8015$14YGsk)
                                     g$old*$8016$14YGsk
                                     g$new*$8017$14YGsk))))))))))))
          ((case-lambda
             ((g$t$7969$14YGsk)
              ((case-lambda
                 ((g$ls/false$7970$14YGsk)
                  (if g$ls/false$7970$14YGsk
                    (apply
                      (case-lambda
                        ((g$b$7971$14YGsk g$b*$7972$14YGsk)
                         (g$cons*$5358$14YGsk
                           (g$bless$7356$14YGsk 'let)
                           '()
                           g$b$7971$14YGsk
                           g$b*$7972$14YGsk)))
                      g$ls/false$7970$14YGsk)
                    ((case-lambda
                       ((g$t$7973$14YGsk)
                        ((case-lambda
                           ((g$ls/false$7974$14YGsk)
                            (if g$ls/false$7974$14YGsk
                              (apply
                                (case-lambda
                                  ((g$lhs*$7975$14YGsk
                                     g$rhs*$7976$14YGsk
                                     g$b$7977$14YGsk
                                     g$b*$7978$14YGsk)
                                   (g$bless$7356$14YGsk
                                     ((letrec ((g$f$7979$14YGsk
                                                 (case-lambda
                                                   ((g$lhs*$7980$14YGsk
                                                      g$rhs*$7981$14YGsk
                                                      g$old*$7982$14YGsk
                                                      g$new*$7983$14YGsk)
                                                    (if (null?
                                                          g$lhs*$7980$14YGsk)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$7982$14YGsk
                                                               g$new*$7983$14YGsk)
                                                          (cons
                                                            g$b$7977$14YGsk
                                                            g$b*$7978$14YGsk)))
                                                      ((case-lambda
                                                         ((g$t$7984$14YGsk)
                                                          ((case-lambda
                                                             ((g$ls/false$7985$14YGsk)
                                                              (if g$ls/false$7985$14YGsk
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$7986$14YGsk)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$7968$14YGsk
                                                                            g$x*$7986$14YGsk
                                                                            g$old*$7982$14YGsk
                                                                            g$new*$7983$14YGsk)))
                                                                       (case-lambda
                                                                         ((g$y*$7990$14YGsk
                                                                            g$old*$7991$14YGsk
                                                                            g$new*$7992$14YGsk)
                                                                          ((case-lambda
                                                                             ((g$new*$7993$14YGsk
                                                                                g$old*$7994$14YGsk
                                                                                g$y*$7995$14YGsk)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$7981$14YGsk))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$7995$14YGsk
                                                                                  (g$f$7979$14YGsk
                                                                                    (cdr g$lhs*$7980$14YGsk)
                                                                                    (cdr g$rhs*$7981$14YGsk)
                                                                                    g$old*$7994$14YGsk
                                                                                    g$new*$7993$14YGsk)))))
                                                                           g$new*$7992$14YGsk
                                                                           g$old*$7991$14YGsk
                                                                           g$y*$7990$14YGsk))))))
                                                                  g$ls/false$7985$14YGsk)
                                                                ((case-lambda
                                                                   ((g$t$7996$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$ls/false$7997$14YGsk)
                                                                        (if g$ls/false$7997$14YGsk
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$7998$14YGsk
                                                                                 g$x$7999$14YGsk)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$7967$14YGsk
                                                                                      g$x$7999$14YGsk
                                                                                      g$old*$7982$14YGsk
                                                                                      g$new*$7983$14YGsk)))
                                                                                 (case-lambda
                                                                                   ((g$y$8000$14YGsk
                                                                                      g$old*$8001$14YGsk
                                                                                      g$new*$8002$14YGsk)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$7968$14YGsk
                                                                                           g$x*$7998$14YGsk
                                                                                           g$old*$8001$14YGsk
                                                                                           g$new*$8002$14YGsk)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8003$14YGsk
                                                                                           g$old*$8004$14YGsk
                                                                                           g$new*$8005$14YGsk)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$7981$14YGsk))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8003$14YGsk
                                                                                               g$y$8000$14YGsk)
                                                                                             (g$f$7979$14YGsk
                                                                                               (cdr g$lhs*$7980$14YGsk)
                                                                                               (cdr g$rhs*$7981$14YGsk)
                                                                                               g$old*$8004$14YGsk
                                                                                               g$new*$8005$14YGsk)))))))))))
                                                                            g$ls/false$7997$14YGsk)
                                                                          ((case-lambda
                                                                             ((g$t$8006$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8007$14YGsk)
                                                                                  (if g$ls/false$8007$14YGsk
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8008$14YGsk)
                                                                                         (g$syntax-violation$7502$14YGsk
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$7966$14YGsk
                                                                                           g$others$8008$14YGsk)))
                                                                                      g$ls/false$8007$14YGsk)
                                                                                    (g$syntax-violation$7502$14YGsk
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8006$14YGsk))))
                                                                               (g$syntax-dispatch$7393$14YGsk
                                                                                 g$t$8006$14YGsk
                                                                                 'any))))
                                                                           g$t$7996$14YGsk))))
                                                                     (g$syntax-dispatch$7393$14YGsk
                                                                       g$t$7996$14YGsk
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$7984$14YGsk))))
                                                           (g$syntax-dispatch$7393$14YGsk
                                                             g$t$7984$14YGsk
                                                             'each-any))))
                                                       (car g$lhs*$7980$14YGsk)))))))
                                        g$f$7979$14YGsk)
                                      g$lhs*$7975$14YGsk
                                      g$rhs*$7976$14YGsk
                                      '()
                                      '()))))
                                g$ls/false$7974$14YGsk)
                              (g$syntax-violation$7502$14YGsk
                                '#f
                                '"invalid syntax"
                                g$t$7973$14YGsk))))
                         (g$syntax-dispatch$7393$14YGsk
                           g$t$7973$14YGsk
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$7969$14YGsk))))
               (g$syntax-dispatch$7393$14YGsk
                 g$t$7969$14YGsk
                 '(_ () any . each-any)))))
           g$stx$7966$14YGsk)))))
   (g$let*-values-macro$7361$14YGsk
     g$let*-values-macro$10797$14YGsk
     (case-lambda
       ((g$stx$8022$14YGsk)
        (letrec* ((g$check$8023$14YGsk
                    (case-lambda
                      ((g$x*$8047$14YGsk)
                       (if (not (null? g$x*$8047$14YGsk))
                         ((case-lambda
                            ((g$x$8048$14YGsk)
                             (begin
                               (if (not (g$id?$7115$14YGsk g$x$8048$14YGsk))
                                 (g$syntax-violation$7502$14YGsk
                                   '#f
                                   '"not an identifier"
                                   g$stx$8022$14YGsk
                                   g$x$8048$14YGsk)
                                 (void))
                               (g$check$8023$14YGsk (cdr g$x*$8047$14YGsk))
                               (if (g$bound-id-member?$7122$14YGsk
                                     g$x$8048$14YGsk
                                     (cdr g$x*$8047$14YGsk))
                                 (g$syntax-violation$7502$14YGsk
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8022$14YGsk
                                   g$x$8048$14YGsk)
                                 (void)))))
                          (car g$x*$8047$14YGsk))
                         (void))))))
          ((case-lambda
             ((g$t$8024$14YGsk)
              ((case-lambda
                 ((g$ls/false$8025$14YGsk)
                  (if g$ls/false$8025$14YGsk
                    (apply
                      (case-lambda
                        ((g$b$8026$14YGsk g$b*$8027$14YGsk)
                         (g$cons*$5358$14YGsk
                           (g$bless$7356$14YGsk 'let)
                           '()
                           g$b$8026$14YGsk
                           g$b*$8027$14YGsk)))
                      g$ls/false$8025$14YGsk)
                    ((case-lambda
                       ((g$t$8028$14YGsk)
                        ((case-lambda
                           ((g$ls/false$8029$14YGsk)
                            (if g$ls/false$8029$14YGsk
                              (apply
                                (case-lambda
                                  ((g$lhs*$8030$14YGsk
                                     g$rhs*$8031$14YGsk
                                     g$b$8032$14YGsk
                                     g$b*$8033$14YGsk)
                                   (g$bless$7356$14YGsk
                                     ((letrec ((g$f$8034$14YGsk
                                                 (case-lambda
                                                   ((g$lhs*$8035$14YGsk
                                                      g$rhs*$8036$14YGsk)
                                                    (if (null?
                                                          g$lhs*$8035$14YGsk)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8032$14YGsk
                                                          g$b*$8033$14YGsk))
                                                      ((case-lambda
                                                         ((g$t$8037$14YGsk)
                                                          ((case-lambda
                                                             ((g$ls/false$8038$14YGsk)
                                                              (if g$ls/false$8038$14YGsk
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8039$14YGsk)
                                                                     (begin
                                                                       (g$check$8023$14YGsk
                                                                         g$x*$8039$14YGsk)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8036$14YGsk))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8039$14YGsk
                                                                           (g$f$8034$14YGsk
                                                                             (cdr g$lhs*$8035$14YGsk)
                                                                             (cdr g$rhs*$8036$14YGsk)))))))
                                                                  g$ls/false$8038$14YGsk)
                                                                ((case-lambda
                                                                   ((g$t$8040$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8041$14YGsk)
                                                                        (if g$ls/false$8041$14YGsk
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8042$14YGsk
                                                                                 g$x$8043$14YGsk)
                                                                               (begin
                                                                                 (g$check$8023$14YGsk
                                                                                   (cons
                                                                                     g$x$8043$14YGsk
                                                                                     g$x*$8042$14YGsk))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8036$14YGsk))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8042$14YGsk
                                                                                       g$x$8043$14YGsk)
                                                                                     (g$f$8034$14YGsk
                                                                                       (cdr g$lhs*$8035$14YGsk)
                                                                                       (cdr g$rhs*$8036$14YGsk)))))))
                                                                            g$ls/false$8041$14YGsk)
                                                                          ((case-lambda
                                                                             ((g$t$8044$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8045$14YGsk)
                                                                                  (if g$ls/false$8045$14YGsk
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8046$14YGsk)
                                                                                         (g$syntax-violation$7502$14YGsk
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8022$14YGsk
                                                                                           g$others$8046$14YGsk)))
                                                                                      g$ls/false$8045$14YGsk)
                                                                                    (g$syntax-violation$7502$14YGsk
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8044$14YGsk))))
                                                                               (g$syntax-dispatch$7393$14YGsk
                                                                                 g$t$8044$14YGsk
                                                                                 'any))))
                                                                           g$t$8040$14YGsk))))
                                                                     (g$syntax-dispatch$7393$14YGsk
                                                                       g$t$8040$14YGsk
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8037$14YGsk))))
                                                           (g$syntax-dispatch$7393$14YGsk
                                                             g$t$8037$14YGsk
                                                             'each-any))))
                                                       (car g$lhs*$8035$14YGsk)))))))
                                        g$f$8034$14YGsk)
                                      g$lhs*$8030$14YGsk
                                      g$rhs*$8031$14YGsk))))
                                g$ls/false$8029$14YGsk)
                              (g$syntax-violation$7502$14YGsk
                                '#f
                                '"invalid syntax"
                                g$t$8028$14YGsk))))
                         (g$syntax-dispatch$7393$14YGsk
                           g$t$8028$14YGsk
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8024$14YGsk))))
               (g$syntax-dispatch$7393$14YGsk
                 g$t$8024$14YGsk
                 '(_ () any . each-any)))))
           g$stx$8022$14YGsk)))))
   (g$trace-lambda-macro$7362$14YGsk
     g$trace-lambda-macro$10798$14YGsk
     (case-lambda
       ((g$stx$8049$14YGsk)
        ((case-lambda
           ((g$t$8050$14YGsk)
            ((case-lambda
               ((g$ls/false$8051$14YGsk)
                (if g$ls/false$8051$14YGsk
                  (apply
                    (case-lambda
                      ((g$who$8052$14YGsk
                         g$fmls$8053$14YGsk
                         g$b$8054$14YGsk
                         g$b*$8055$14YGsk)
                       (if (g$valid-bound-ids?$7120$14YGsk g$fmls$8053$14YGsk)
                         (g$bless$7356$14YGsk
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8052$14YGsk)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8053$14YGsk
                                 (cons g$b$8054$14YGsk g$b*$8055$14YGsk)))))
                         (g$invalid-fmls-error$7358$14YGsk
                           g$stx$8049$14YGsk
                           g$fmls$8053$14YGsk))))
                    g$ls/false$8051$14YGsk)
                  ((case-lambda
                     ((g$t$8056$14YGsk)
                      ((case-lambda
                         ((g$ls/false$8057$14YGsk)
                          (if g$ls/false$8057$14YGsk
                            (apply
                              (case-lambda
                                ((g$who$8058$14YGsk
                                   g$fmls$8059$14YGsk
                                   g$last$8060$14YGsk
                                   g$b$8061$14YGsk
                                   g$b*$8062$14YGsk)
                                 (if (g$valid-bound-ids?$7120$14YGsk
                                       (cons
                                         g$last$8060$14YGsk
                                         g$fmls$8059$14YGsk))
                                   (g$bless$7356$14YGsk
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8058$14YGsk)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8059$14YGsk
                                             g$last$8060$14YGsk)
                                           (cons
                                             g$b$8061$14YGsk
                                             g$b*$8062$14YGsk)))))
                                   (g$invalid-fmls-error$7358$14YGsk
                                     g$stx$8049$14YGsk
                                     (append
                                       g$fmls$8059$14YGsk
                                       g$last$8060$14YGsk)))))
                              g$ls/false$8057$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$8056$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$8056$14YGsk
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8050$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$8050$14YGsk
               '(_ any each-any any . each-any)))))
         g$stx$8049$14YGsk))))
   (g$trace-define-macro$7363$14YGsk
     g$trace-define-macro$10799$14YGsk
     (case-lambda
       ((g$stx$8063$14YGsk)
        ((case-lambda
           ((g$t$8064$14YGsk)
            ((case-lambda
               ((g$ls/false$8065$14YGsk)
                (if g$ls/false$8065$14YGsk
                  (apply
                    (case-lambda
                      ((g$who$8066$14YGsk
                         g$fmls$8067$14YGsk
                         g$b$8068$14YGsk
                         g$b*$8069$14YGsk)
                       (if (g$valid-bound-ids?$7120$14YGsk g$fmls$8067$14YGsk)
                         (g$bless$7356$14YGsk
                           (list
                             'define
                             g$who$8066$14YGsk
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8066$14YGsk)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8067$14YGsk
                                   (cons g$b$8068$14YGsk g$b*$8069$14YGsk))))))
                         (g$invalid-fmls-error$7358$14YGsk
                           g$stx$8063$14YGsk
                           g$fmls$8067$14YGsk))))
                    g$ls/false$8065$14YGsk)
                  ((case-lambda
                     ((g$t$8070$14YGsk)
                      ((case-lambda
                         ((g$ls/false$8071$14YGsk)
                          (if g$ls/false$8071$14YGsk
                            (apply
                              (case-lambda
                                ((g$who$8072$14YGsk
                                   g$fmls$8073$14YGsk
                                   g$last$8074$14YGsk
                                   g$b$8075$14YGsk
                                   g$b*$8076$14YGsk)
                                 (if (g$valid-bound-ids?$7120$14YGsk
                                       (cons
                                         g$last$8074$14YGsk
                                         g$fmls$8073$14YGsk))
                                   (g$bless$7356$14YGsk
                                     (list
                                       'define
                                       g$who$8072$14YGsk
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8072$14YGsk)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8073$14YGsk
                                               g$last$8074$14YGsk)
                                             (cons
                                               g$b$8075$14YGsk
                                               g$b*$8076$14YGsk))))))
                                   (g$invalid-fmls-error$7358$14YGsk
                                     g$stx$8063$14YGsk
                                     (append
                                       g$fmls$8073$14YGsk
                                       g$last$8074$14YGsk)))))
                              g$ls/false$8071$14YGsk)
                            ((case-lambda
                               ((g$t$8077$14YGsk)
                                ((case-lambda
                                   ((g$ls/false$8078$14YGsk)
                                    (if g$ls/false$8078$14YGsk
                                      (apply
                                        (case-lambda
                                          ((g$who$8079$14YGsk
                                             g$expr$8080$14YGsk)
                                           (if (g$id?$7115$14YGsk
                                                 g$who$8079$14YGsk)
                                             (g$bless$7356$14YGsk
                                               (list
                                                 'define
                                                 g$who$8079$14YGsk
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8080$14YGsk))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8079$14YGsk)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7502$14YGsk
                                               '#f
                                               '"invalid name"
                                               g$stx$8063$14YGsk))))
                                        g$ls/false$8078$14YGsk)
                                      (g$syntax-violation$7502$14YGsk
                                        '#f
                                        '"invalid syntax"
                                        g$t$8077$14YGsk))))
                                 (g$syntax-dispatch$7393$14YGsk
                                   g$t$8077$14YGsk
                                   '(_ any any)))))
                             g$t$8070$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$8070$14YGsk
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8064$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$8064$14YGsk
               '(_ (any . each-any) any . each-any)))))
         g$stx$8063$14YGsk))))
   (g$trace-define-syntax-macro$7364$14YGsk
     g$trace-define-syntax-macro$10800$14YGsk
     (case-lambda
       ((g$stx$8081$14YGsk)
        ((case-lambda
           ((g$t$8082$14YGsk)
            ((case-lambda
               ((g$ls/false$8083$14YGsk)
                (if g$ls/false$8083$14YGsk
                  (apply
                    (case-lambda
                      ((g$who$8084$14YGsk g$expr$8085$14YGsk)
                       (if (g$id?$7115$14YGsk g$who$8084$14YGsk)
                         (g$bless$7356$14YGsk
                           (list
                             'define-syntax
                             g$who$8084$14YGsk
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8084$14YGsk)
                               g$expr$8085$14YGsk)))
                         (g$syntax-violation$7502$14YGsk
                           '#f
                           '"invalid name"
                           g$stx$8081$14YGsk))))
                    g$ls/false$8083$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8082$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$8082$14YGsk '(_ any any)))))
         g$stx$8081$14YGsk))))
   (g$trace-let/rec-syntax$7365$14YGsk
     g$trace-let/rec-syntax$10801$14YGsk
     (case-lambda
       ((g$who$8086$14YGsk)
        (case-lambda
          ((g$stx$8087$14YGsk)
           ((case-lambda
              ((g$t$8088$14YGsk)
               ((case-lambda
                  ((g$ls/false$8089$14YGsk)
                   (if g$ls/false$8089$14YGsk
                     (apply
                       (case-lambda
                         ((g$lhs*$8090$14YGsk
                            g$rhs*$8091$14YGsk
                            g$b$8092$14YGsk
                            g$b*$8093$14YGsk)
                          (if (g$valid-bound-ids?$7120$14YGsk
                                g$lhs*$8090$14YGsk)
                            ((case-lambda
                               ((g$rhs*$8094$14YGsk)
                                (g$bless$7356$14YGsk
                                  (cons
                                    g$who$8086$14YGsk
                                    (cons
                                      (map list
                                           g$lhs*$8090$14YGsk
                                           g$rhs*$8094$14YGsk)
                                      (cons
                                        g$b$8092$14YGsk
                                        g$b*$8093$14YGsk))))))
                             (map (case-lambda
                                    ((g$lhs$8095$14YGsk g$rhs$8096$14YGsk)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8095$14YGsk)
                                       g$rhs$8096$14YGsk)))
                                  g$lhs*$8090$14YGsk
                                  g$rhs*$8091$14YGsk))
                            (g$invalid-fmls-error$7358$14YGsk
                              g$stx$8087$14YGsk
                              g$lhs*$8090$14YGsk))))
                       g$ls/false$8089$14YGsk)
                     (g$syntax-violation$7502$14YGsk
                       '#f
                       '"invalid syntax"
                       g$t$8088$14YGsk))))
                (g$syntax-dispatch$7393$14YGsk
                  g$t$8088$14YGsk
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8087$14YGsk))))))
   (g$trace-let-syntax-macro$7366$14YGsk
     g$trace-let-syntax-macro$10802$14YGsk
     (g$trace-let/rec-syntax$7365$14YGsk 'let-syntax))
   (g$trace-letrec-syntax-macro$7367$14YGsk
     g$trace-letrec-syntax-macro$10803$14YGsk
     (g$trace-let/rec-syntax$7365$14YGsk 'letrec-syntax))
   (g$guard-macro$7368$14YGsk
     g$guard-macro$10804$14YGsk
     (case-lambda
       ((g$x$8097$14YGsk)
        (letrec* ((g$gen-clauses$8098$14YGsk
                    (case-lambda
                      ((g$con$8110$14YGsk
                         g$outerk$8111$14YGsk
                         g$clause*$8112$14YGsk)
                       (letrec* ((g$f$8113$14YGsk
                                   (case-lambda
                                     ((g$x$8141$14YGsk g$k$8142$14YGsk)
                                      ((case-lambda
                                         ((g$t$8143$14YGsk)
                                          ((case-lambda
                                             ((g$ls/false$8144$14YGsk)
                                              (if g$ls/false$8144$14YGsk
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8145$14YGsk
                                                       g$p$8146$14YGsk)
                                                     ((case-lambda
                                                        ((g$t$8147$14YGsk)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8147$14YGsk
                                                               g$e$8145$14YGsk))
                                                           (list
                                                             'if
                                                             g$t$8147$14YGsk
                                                             (list
                                                               g$p$8146$14YGsk
                                                               g$t$8147$14YGsk)
                                                             g$k$8142$14YGsk))))
                                                      (gensym))))
                                                  g$ls/false$8144$14YGsk)
                                                ((case-lambda
                                                   ((g$t$8148$14YGsk)
                                                    ((case-lambda
                                                       ((g$ls/false$8149$14YGsk)
                                                        (if g$ls/false$8149$14YGsk
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8150$14YGsk)
                                                               ((case-lambda
                                                                  ((g$t$8151$14YGsk)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8151$14YGsk
                                                                         g$e$8150$14YGsk))
                                                                     (list
                                                                       'if
                                                                       g$t$8151$14YGsk
                                                                       g$t$8151$14YGsk
                                                                       g$k$8142$14YGsk))))
                                                                (gensym))))
                                                            g$ls/false$8149$14YGsk)
                                                          ((case-lambda
                                                             ((g$t$8152$14YGsk)
                                                              ((case-lambda
                                                                 ((g$ls/false$8153$14YGsk)
                                                                  (if g$ls/false$8153$14YGsk
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8154$14YGsk
                                                                           g$v$8155$14YGsk
                                                                           g$v*$8156$14YGsk)
                                                                         (list
                                                                           'if
                                                                           g$e$8154$14YGsk
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8155$14YGsk
                                                                               g$v*$8156$14YGsk))
                                                                           g$k$8142$14YGsk)))
                                                                      g$ls/false$8153$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$t$8157$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8158$14YGsk)
                                                                            (if g$ls/false$8158$14YGsk
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7502$14YGsk
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8141$14YGsk)))
                                                                                g$ls/false$8158$14YGsk)
                                                                              (g$syntax-violation$7502$14YGsk
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8157$14YGsk))))
                                                                         (g$syntax-dispatch$7393$14YGsk
                                                                           g$t$8157$14YGsk
                                                                           '_))))
                                                                     g$t$8152$14YGsk))))
                                                               (g$syntax-dispatch$7393$14YGsk
                                                                 g$t$8152$14YGsk
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8148$14YGsk))))
                                                     (g$syntax-dispatch$7393$14YGsk
                                                       g$t$8148$14YGsk
                                                       '(any)))))
                                                 g$t$8143$14YGsk))))
                                           (g$syntax-dispatch$7393$14YGsk
                                             g$t$8143$14YGsk
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8141$14YGsk))))
                                 (g$f*$8114$14YGsk
                                   (case-lambda
                                     ((g$x*$8121$14YGsk)
                                      ((case-lambda
                                         ((g$t$8122$14YGsk)
                                          ((case-lambda
                                             ((g$ls/false$8123$14YGsk)
                                              (if g$ls/false$8123$14YGsk
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8110$14YGsk)
                                                       '#t)))
                                                  g$ls/false$8123$14YGsk)
                                                ((case-lambda
                                                   ((g$t$8124$14YGsk)
                                                    ((case-lambda
                                                       ((g$ls/false$8125$14YGsk)
                                                        (if g$ls/false$8125$14YGsk
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8126$14YGsk
                                                                 g$e*$8127$14YGsk)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8126$14YGsk
                                                                     g$e*$8127$14YGsk))
                                                                 '#f)))
                                                            g$ls/false$8125$14YGsk)
                                                          ((case-lambda
                                                             ((g$t$8128$14YGsk)
                                                              ((case-lambda
                                                                 ((g$ls/false$8129$14YGsk)
                                                                  (if g$ls/false$8129$14YGsk
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8130$14YGsk
                                                                           g$cls*$8131$14YGsk)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8114$14YGsk
                                                                                g$cls*$8131$14YGsk)))
                                                                           (case-lambda
                                                                             ((g$e$8134$14YGsk
                                                                                g$g$8135$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$g$8136$14YGsk
                                                                                    g$e$8137$14YGsk)
                                                                                  (values
                                                                                    (g$f$8113$14YGsk
                                                                                      g$cls$8130$14YGsk
                                                                                      g$e$8137$14YGsk)
                                                                                    g$g$8136$14YGsk)))
                                                                               g$g$8135$14YGsk
                                                                               g$e$8134$14YGsk))))))
                                                                      g$ls/false$8129$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$t$8138$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8139$14YGsk)
                                                                            (if g$ls/false$8139$14YGsk
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8140$14YGsk)
                                                                                   (g$syntax-violation$7502$14YGsk
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8140$14YGsk)))
                                                                                g$ls/false$8139$14YGsk)
                                                                              (g$syntax-violation$7502$14YGsk
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8138$14YGsk))))
                                                                         (g$syntax-dispatch$7393$14YGsk
                                                                           g$t$8138$14YGsk
                                                                           'any))))
                                                                     g$t$8128$14YGsk))))
                                                               (g$syntax-dispatch$7393$14YGsk
                                                                 g$t$8128$14YGsk
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8124$14YGsk))))
                                                     (g$syntax-dispatch$7393$14YGsk
                                                       g$t$8124$14YGsk
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8122$14YGsk))))
                                           (g$syntax-dispatch$7393$14YGsk
                                             g$t$8122$14YGsk
                                             '()))))
                                       g$x*$8121$14YGsk)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8114$14YGsk g$clause*$8112$14YGsk)))
                           (case-lambda
                             ((g$code$8117$14YGsk g$raisek$8118$14YGsk)
                              ((case-lambda
                                 ((g$raisek$8119$14YGsk g$code$8120$14YGsk)
                                  (if g$raisek$8119$14YGsk
                                    (list
                                      g$outerk$8111$14YGsk
                                      g$code$8120$14YGsk)
                                    g$code$8120$14YGsk)))
                               g$raisek$8118$14YGsk
                               g$code$8117$14YGsk)))))))))
          ((case-lambda
             ((g$t$8099$14YGsk)
              ((case-lambda
                 ((g$ls/false$8100$14YGsk)
                  (if (if g$ls/false$8100$14YGsk
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8101$14YGsk
                                 g$clause*$8102$14YGsk
                                 g$b$8103$14YGsk
                                 g$b*$8104$14YGsk)
                               (g$id?$7115$14YGsk g$con$8101$14YGsk)))
                            g$ls/false$8100$14YGsk))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8105$14YGsk
                           g$clause*$8106$14YGsk
                           g$b$8107$14YGsk
                           g$b*$8108$14YGsk)
                         ((case-lambda
                            ((g$outerk$8109$14YGsk)
                             (g$bless$7356$14YGsk
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8109$14YGsk)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8105$14YGsk)
                                           (g$gen-clauses$8098$14YGsk
                                             g$con$8105$14YGsk
                                             g$outerk$8109$14YGsk
                                             g$clause*$8106$14YGsk))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8107$14YGsk
                                                 g$b*$8108$14YGsk))))))))))))
                          (gensym))))
                      g$ls/false$8100$14YGsk)
                    (g$syntax-violation$7502$14YGsk
                      '#f
                      '"invalid syntax"
                      g$t$8099$14YGsk))))
               (g$syntax-dispatch$7393$14YGsk
                 g$t$8099$14YGsk
                 '(_ (any . each-any) any . each-any)))))
           g$x$8097$14YGsk)))))
   (g$define-enumeration-macro$7369$14YGsk
     g$define-enumeration-macro$10805$14YGsk
     (case-lambda
       ((g$stx$8159$14YGsk)
        (letrec* ((g$set?$8160$14YGsk
                    (case-lambda
                      ((g$x$8173$14YGsk)
                       ((case-lambda
                          ((g$t$8174$14YGsk)
                           (if g$t$8174$14YGsk
                             g$t$8174$14YGsk
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8173$14YGsk)
                                          (cdr g$x$8173$14YGsk)))
                                 (begin
                                   '#f
                                   (g$set?$8160$14YGsk (cdr g$x$8173$14YGsk)))
                                 '#f)))))
                        (null? g$x$8173$14YGsk)))))
                  (g$remove-dups$8161$14YGsk
                    (case-lambda
                      ((g$ls$8172$14YGsk)
                       (if (null? g$ls$8172$14YGsk)
                         '()
                         (cons
                           (car g$ls$8172$14YGsk)
                           (g$remove-dups$8161$14YGsk
                             (g$remq$5363$14YGsk
                               (car g$ls$8172$14YGsk)
                               (cdr g$ls$8172$14YGsk)))))))))
          ((case-lambda
             ((g$t$8162$14YGsk)
              ((case-lambda
                 ((g$ls/false$8163$14YGsk)
                  (if (if g$ls/false$8163$14YGsk
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8164$14YGsk
                                 g$id*$8165$14YGsk
                                 g$maker$8166$14YGsk)
                               (if (g$id?$7115$14YGsk g$name$8164$14YGsk)
                                 (if (g$id?$7115$14YGsk g$maker$8166$14YGsk)
                                   (begin
                                     '#f
                                     (g$for-all$5356$14YGsk
                                       g$id?$7115$14YGsk
                                       g$id*$8165$14YGsk))
                                   '#f)
                                 '#f)))
                            g$ls/false$8163$14YGsk))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8167$14YGsk
                           g$id*$8168$14YGsk
                           g$maker$8169$14YGsk)
                         ((case-lambda
                            ((g$name*$8170$14YGsk g$mk$8171$14YGsk)
                             (g$bless$7356$14YGsk
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8171$14YGsk
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8170$14YGsk))))
                                 (list
                                   'define-syntax
                                   g$name$8167$14YGsk
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8170$14YGsk))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8167$14YGsk)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8169$14YGsk
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8169$14YGsk)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8170$14YGsk))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8169$14YGsk)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8171$14YGsk
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8161$14YGsk
                            (g$syntax->datum$7505$14YGsk g$id*$8168$14YGsk))
                          (gensym))))
                      g$ls/false$8163$14YGsk)
                    (g$syntax-violation$7502$14YGsk
                      '#f
                      '"invalid syntax"
                      g$t$8162$14YGsk))))
               (g$syntax-dispatch$7393$14YGsk
                 g$t$8162$14YGsk
                 '(_ any each-any any)))))
           g$stx$8159$14YGsk)))))
   (g$time-macro$7370$14YGsk
     g$time-macro$10806$14YGsk
     (case-lambda
       ((g$stx$8175$14YGsk)
        ((case-lambda
           ((g$t$8176$14YGsk)
            ((case-lambda
               ((g$ls/false$8177$14YGsk)
                (if g$ls/false$8177$14YGsk
                  (apply
                    (case-lambda
                      ((g$expr$8178$14YGsk)
                       ((case-lambda
                          ((g$str$8179$14YGsk)
                           (g$bless$7356$14YGsk
                             (list
                               'time-it
                               g$str$8179$14YGsk
                               (list 'lambda '() g$expr$8178$14YGsk)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6094$14YGsk)))
                          (case-lambda
                            ((g$p$8182$14YGsk g$e$8183$14YGsk)
                             ((case-lambda
                                ((g$e$8184$14YGsk g$p$8185$14YGsk)
                                 (begin
                                   (write
                                     (g$syntax->datum$7505$14YGsk
                                       g$expr$8178$14YGsk)
                                     g$p$8185$14YGsk)
                                   (g$e$8184$14YGsk))))
                              g$e$8183$14YGsk
                              g$p$8182$14YGsk)))))))
                    g$ls/false$8177$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8176$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$8176$14YGsk '(_ any)))))
         g$stx$8175$14YGsk))))
   (g$delay-macro$7371$14YGsk
     g$delay-macro$10807$14YGsk
     (case-lambda
       ((g$stx$8186$14YGsk)
        ((case-lambda
           ((g$t$8187$14YGsk)
            ((case-lambda
               ((g$ls/false$8188$14YGsk)
                (if g$ls/false$8188$14YGsk
                  (apply
                    (case-lambda
                      ((g$expr$8189$14YGsk)
                       (g$bless$7356$14YGsk
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8189$14YGsk)))))
                    g$ls/false$8188$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8187$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$8187$14YGsk '(_ any)))))
         g$stx$8186$14YGsk))))
   (g$assert-macro$7372$14YGsk
     g$assert-macro$10808$14YGsk
     (case-lambda
       ((g$stx$8190$14YGsk)
        ((case-lambda
           ((g$t$8191$14YGsk)
            ((case-lambda
               ((g$ls/false$8192$14YGsk)
                (if g$ls/false$8192$14YGsk
                  (apply
                    (case-lambda
                      ((g$expr$8193$14YGsk)
                       ((case-lambda
                          ((g$pos$8194$14YGsk)
                           (g$bless$7356$14YGsk
                             (list
                               'unless
                               g$expr$8193$14YGsk
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8193$14YGsk)
                                 (list 'quote g$pos$8194$14YGsk))))))
                        ((case-lambda
                           ((g$t$8195$14YGsk)
                            (if g$t$8195$14YGsk
                              g$t$8195$14YGsk
                              (begin
                                '#f
                                (g$expression-position$7497$14YGsk
                                  g$expr$8193$14YGsk)))))
                         (g$expression-position$7497$14YGsk
                           g$stx$8190$14YGsk)))))
                    g$ls/false$8192$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8191$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$8191$14YGsk '(_ any)))))
         g$stx$8190$14YGsk))))
   (g$endianness-macro$7373$14YGsk
     g$endianness-macro$10809$14YGsk
     (case-lambda
       ((g$stx$8196$14YGsk)
        ((case-lambda
           ((g$t$8197$14YGsk)
            ((case-lambda
               ((g$ls/false$8198$14YGsk)
                (if g$ls/false$8198$14YGsk
                  (apply
                    (case-lambda
                      ((g$e$8199$14YGsk)
                       ((case-lambda
                          ((g$t$8200$14YGsk)
                           (if (memv g$t$8200$14YGsk '(little))
                             (g$bless$7356$14YGsk ''little)
                             (if (memv g$t$8200$14YGsk '(big))
                               (g$bless$7356$14YGsk ''big)
                               (g$syntax-violation$7502$14YGsk
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8196$14YGsk)))))
                        (g$syntax->datum$7505$14YGsk g$e$8199$14YGsk))))
                    g$ls/false$8198$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8197$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$8197$14YGsk '(_ any)))))
         g$stx$8196$14YGsk))))
   (g$identifier-syntax-macro$7374$14YGsk
     g$identifier-syntax-macro$10810$14YGsk
     (case-lambda
       ((g$stx$8201$14YGsk)
        ((case-lambda
           ((g$t$8202$14YGsk)
            ((case-lambda
               ((g$ls/false$8203$14YGsk)
                (if g$ls/false$8203$14YGsk
                  (apply
                    (case-lambda
                      ((g$expr$8204$14YGsk)
                       (g$bless$7356$14YGsk
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8204$14YGsk))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8204$14YGsk)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8203$14YGsk)
                  ((case-lambda
                     ((g$t$8205$14YGsk)
                      ((case-lambda
                         ((g$ls/false$8206$14YGsk)
                          (if (if g$ls/false$8206$14YGsk
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8207$14YGsk
                                         g$expr1$8208$14YGsk
                                         g$id2$8209$14YGsk
                                         g$expr2$8210$14YGsk
                                         g$expr3$8211$14YGsk)
                                       (if (g$id?$7115$14YGsk g$id1$8207$14YGsk)
                                         (if (g$id?$7115$14YGsk
                                               g$id2$8209$14YGsk)
                                           (begin
                                             '#f
                                             (g$id?$7115$14YGsk
                                               g$expr2$8210$14YGsk))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8206$14YGsk))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8212$14YGsk
                                   g$expr1$8213$14YGsk
                                   g$id2$8214$14YGsk
                                   g$expr2$8215$14YGsk
                                   g$expr3$8216$14YGsk)
                                 (g$bless$7356$14YGsk
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8213$14YGsk))
                                         (list
                                           (list 'set! 'id g$expr2$8215$14YGsk)
                                           (list 'syntax g$expr3$8216$14YGsk))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8213$14YGsk
                                               '(e* ...))))))))))
                              g$ls/false$8206$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$8205$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$8205$14YGsk
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8202$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$8202$14YGsk '(_ any)))))
         g$stx$8201$14YGsk))))
   (g$do-macro$7375$14YGsk
     g$do-macro$10811$14YGsk
     (case-lambda
       ((g$stx$8217$14YGsk)
        (letrec* ((g$bind$8218$14YGsk
                    (case-lambda
                      ((g$x$8230$14YGsk)
                       ((case-lambda
                          ((g$t$8231$14YGsk)
                           ((case-lambda
                              ((g$ls/false$8232$14YGsk)
                               (if g$ls/false$8232$14YGsk
                                 (apply
                                   (case-lambda
                                     ((g$x$8233$14YGsk g$init$8234$14YGsk)
                                      (list
                                        g$x$8233$14YGsk
                                        g$init$8234$14YGsk
                                        g$x$8233$14YGsk)))
                                   g$ls/false$8232$14YGsk)
                                 ((case-lambda
                                    ((g$t$8235$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8236$14YGsk)
                                         (if g$ls/false$8236$14YGsk
                                           (apply
                                             (case-lambda
                                               ((g$x$8237$14YGsk
                                                  g$init$8238$14YGsk
                                                  g$step$8239$14YGsk)
                                                (list
                                                  g$x$8237$14YGsk
                                                  g$init$8238$14YGsk
                                                  g$step$8239$14YGsk)))
                                             g$ls/false$8236$14YGsk)
                                           ((case-lambda
                                              ((g$t$8240$14YGsk)
                                               ((case-lambda
                                                  ((g$ls/false$8241$14YGsk)
                                                   (if g$ls/false$8241$14YGsk
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7502$14YGsk
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8217$14YGsk)))
                                                       g$ls/false$8241$14YGsk)
                                                     (g$syntax-violation$7502$14YGsk
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8240$14YGsk))))
                                                (g$syntax-dispatch$7393$14YGsk
                                                  g$t$8240$14YGsk
                                                  '_))))
                                            g$t$8235$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8235$14YGsk
                                        '(any any any)))))
                                  g$t$8231$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$8231$14YGsk
                              '(any any)))))
                        g$x$8230$14YGsk)))))
          ((case-lambda
             ((g$t$8219$14YGsk)
              ((case-lambda
                 ((g$ls/false$8220$14YGsk)
                  (if g$ls/false$8220$14YGsk
                    (apply
                      (case-lambda
                        ((g$binding*$8221$14YGsk
                           g$test$8222$14YGsk
                           g$expr*$8223$14YGsk
                           g$command*$8224$14YGsk)
                         ((case-lambda
                            ((g$t$8225$14YGsk)
                             ((case-lambda
                                ((g$ls/false$8226$14YGsk)
                                 (if g$ls/false$8226$14YGsk
                                   (apply
                                     (case-lambda
                                       ((g$x*$8227$14YGsk
                                          g$init*$8228$14YGsk
                                          g$step*$8229$14YGsk)
                                        (if (g$valid-bound-ids?$7120$14YGsk
                                              g$x*$8227$14YGsk)
                                          (g$bless$7356$14YGsk
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8227$14YGsk
                                                    (list
                                                      'if
                                                      g$test$8222$14YGsk
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8223$14YGsk))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8224$14YGsk
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8229$14YGsk))))))))
                                              (cons 'loop g$init*$8228$14YGsk)))
                                          (g$syntax-violation$7502$14YGsk
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8217$14YGsk))))
                                     g$ls/false$8226$14YGsk)
                                   (g$syntax-violation$7502$14YGsk
                                     '#f
                                     '"invalid syntax"
                                     g$t$8225$14YGsk))))
                              (g$syntax-dispatch$7393$14YGsk
                                g$t$8225$14YGsk
                                '#(each (any any any))))))
                          (map g$bind$8218$14YGsk g$binding*$8221$14YGsk))))
                      g$ls/false$8220$14YGsk)
                    (g$syntax-violation$7502$14YGsk
                      '#f
                      '"invalid syntax"
                      g$t$8219$14YGsk))))
               (g$syntax-dispatch$7393$14YGsk
                 g$t$8219$14YGsk
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8217$14YGsk)))))
   (g$let*-macro$7376$14YGsk
     g$let*-macro$10812$14YGsk
     (case-lambda
       ((g$stx$8242$14YGsk)
        ((case-lambda
           ((g$t$8243$14YGsk)
            ((case-lambda
               ((g$ls/false$8244$14YGsk)
                (if (if g$ls/false$8244$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8245$14YGsk
                               g$rhs*$8246$14YGsk
                               g$b$8247$14YGsk
                               g$b*$8248$14YGsk)
                             (g$for-all$5356$14YGsk
                               g$id?$7115$14YGsk
                               g$lhs*$8245$14YGsk)))
                          g$ls/false$8244$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8249$14YGsk
                         g$rhs*$8250$14YGsk
                         g$b$8251$14YGsk
                         g$b*$8252$14YGsk)
                       (g$bless$7356$14YGsk
                         ((letrec ((g$f$8253$14YGsk
                                     (case-lambda
                                       ((g$x*$8254$14YGsk)
                                        (if (null? g$x*$8254$14YGsk)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8251$14YGsk
                                                g$b*$8252$14YGsk)))
                                          (list
                                            'let
                                            (list (car g$x*$8254$14YGsk))
                                            (g$f$8253$14YGsk
                                              (cdr g$x*$8254$14YGsk))))))))
                            g$f$8253$14YGsk)
                          (map list g$lhs*$8249$14YGsk g$rhs*$8250$14YGsk)))))
                    g$ls/false$8244$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8243$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$8243$14YGsk
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8242$14YGsk))))
   (g$or-macro$7377$14YGsk
     g$or-macro$10813$14YGsk
     (case-lambda
       ((g$stx$8255$14YGsk)
        ((case-lambda
           ((g$t$8256$14YGsk)
            ((case-lambda
               ((g$ls/false$8257$14YGsk)
                (if g$ls/false$8257$14YGsk
                  (apply (case-lambda (() '#f)) g$ls/false$8257$14YGsk)
                  ((case-lambda
                     ((g$t$8258$14YGsk)
                      ((case-lambda
                         ((g$ls/false$8259$14YGsk)
                          (if g$ls/false$8259$14YGsk
                            (apply
                              (case-lambda
                                ((g$e$8260$14YGsk g$e*$8261$14YGsk)
                                 (g$bless$7356$14YGsk
                                   ((letrec ((g$f$8262$14YGsk
                                               (case-lambda
                                                 ((g$e$8263$14YGsk
                                                    g$e*$8264$14YGsk)
                                                  (if (null? g$e*$8264$14YGsk)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8263$14YGsk)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8263$14YGsk))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8262$14YGsk
                                                          (car g$e*$8264$14YGsk)
                                                          (cdr g$e*$8264$14YGsk)))))))))
                                      g$f$8262$14YGsk)
                                    g$e$8260$14YGsk
                                    g$e*$8261$14YGsk))))
                              g$ls/false$8259$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$8258$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$8258$14YGsk
                         '(_ any . each-any)))))
                   g$t$8256$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$8256$14YGsk '(_)))))
         g$stx$8255$14YGsk))))
   (g$and-macro$7378$14YGsk
     g$and-macro$10814$14YGsk
     (case-lambda
       ((g$stx$8265$14YGsk)
        ((case-lambda
           ((g$t$8266$14YGsk)
            ((case-lambda
               ((g$ls/false$8267$14YGsk)
                (if g$ls/false$8267$14YGsk
                  (apply (case-lambda (() '#t)) g$ls/false$8267$14YGsk)
                  ((case-lambda
                     ((g$t$8268$14YGsk)
                      ((case-lambda
                         ((g$ls/false$8269$14YGsk)
                          (if g$ls/false$8269$14YGsk
                            (apply
                              (case-lambda
                                ((g$e$8270$14YGsk g$e*$8271$14YGsk)
                                 (g$bless$7356$14YGsk
                                   ((letrec ((g$f$8272$14YGsk
                                               (case-lambda
                                                 ((g$e$8273$14YGsk
                                                    g$e*$8274$14YGsk)
                                                  (if (null? g$e*$8274$14YGsk)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8273$14YGsk)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8273$14YGsk
                                                        (cons
                                                          (g$f$8272$14YGsk
                                                            (car g$e*$8274$14YGsk)
                                                            (cdr g$e*$8274$14YGsk))
                                                          '(#f)))))))))
                                      g$f$8272$14YGsk)
                                    g$e$8270$14YGsk
                                    g$e*$8271$14YGsk))))
                              g$ls/false$8269$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$8268$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$8268$14YGsk
                         '(_ any . each-any)))))
                   g$t$8266$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$8266$14YGsk '(_)))))
         g$stx$8265$14YGsk))))
   (g$cond-macro$7379$14YGsk
     g$cond-macro$10815$14YGsk
     (case-lambda
       ((g$stx$8275$14YGsk)
        ((case-lambda
           ((g$t$8276$14YGsk)
            ((case-lambda
               ((g$ls/false$8277$14YGsk)
                (if g$ls/false$8277$14YGsk
                  (apply
                    (case-lambda
                      ((g$cls$8278$14YGsk g$cls*$8279$14YGsk)
                       (g$bless$7356$14YGsk
                         ((letrec ((g$f$8280$14YGsk
                                     (case-lambda
                                       ((g$cls$8281$14YGsk g$cls*$8282$14YGsk)
                                        (if (null? g$cls*$8282$14YGsk)
                                          ((case-lambda
                                             ((g$t$8283$14YGsk)
                                              ((case-lambda
                                                 ((g$ls/false$8284$14YGsk)
                                                  (if g$ls/false$8284$14YGsk
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8285$14YGsk
                                                           g$e*$8286$14YGsk)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8285$14YGsk
                                                             g$e*$8286$14YGsk))))
                                                      g$ls/false$8284$14YGsk)
                                                    ((case-lambda
                                                       ((g$t$8287$14YGsk)
                                                        ((case-lambda
                                                           ((g$ls/false$8288$14YGsk)
                                                            (if g$ls/false$8288$14YGsk
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8289$14YGsk
                                                                     g$p$8290$14YGsk)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8289$14YGsk))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8290$14YGsk
                                                                         '(t))))))
                                                                g$ls/false$8288$14YGsk)
                                                              ((case-lambda
                                                                 ((g$t$8291$14YGsk)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8292$14YGsk)
                                                                      (if g$ls/false$8292$14YGsk
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8293$14YGsk)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8293$14YGsk
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8292$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$t$8294$14YGsk)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8295$14YGsk)
                                                                                (if g$ls/false$8295$14YGsk
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8296$14YGsk
                                                                                         g$e*$8297$14YGsk)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8296$14YGsk
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8297$14YGsk))))
                                                                                    g$ls/false$8295$14YGsk)
                                                                                  ((case-lambda
                                                                                     ((g$t$8298$14YGsk)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8299$14YGsk)
                                                                                          (if g$ls/false$8299$14YGsk
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7502$14YGsk
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8275$14YGsk)))
                                                                                              g$ls/false$8299$14YGsk)
                                                                                            (g$syntax-violation$7502$14YGsk
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8298$14YGsk))))
                                                                                       (g$syntax-dispatch$7393$14YGsk
                                                                                         g$t$8298$14YGsk
                                                                                         '_))))
                                                                                   g$t$8294$14YGsk))))
                                                                             (g$syntax-dispatch$7393$14YGsk
                                                                               g$t$8294$14YGsk
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8291$14YGsk))))
                                                                   (g$syntax-dispatch$7393$14YGsk
                                                                     g$t$8291$14YGsk
                                                                     '(any)))))
                                                               g$t$8287$14YGsk))))
                                                         (g$syntax-dispatch$7393$14YGsk
                                                           g$t$8287$14YGsk
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8283$14YGsk))))
                                               (g$syntax-dispatch$7393$14YGsk
                                                 g$t$8283$14YGsk
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8281$14YGsk)
                                          ((case-lambda
                                             ((g$t$8300$14YGsk)
                                              ((case-lambda
                                                 ((g$ls/false$8301$14YGsk)
                                                  (if g$ls/false$8301$14YGsk
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8302$14YGsk
                                                           g$e*$8303$14YGsk)
                                                         (g$syntax-violation$7502$14YGsk
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8275$14YGsk)))
                                                      g$ls/false$8301$14YGsk)
                                                    ((case-lambda
                                                       ((g$t$8304$14YGsk)
                                                        ((case-lambda
                                                           ((g$ls/false$8305$14YGsk)
                                                            (if g$ls/false$8305$14YGsk
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8306$14YGsk
                                                                     g$p$8307$14YGsk)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8306$14YGsk))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8307$14YGsk
                                                                         '(t))
                                                                       (g$f$8280$14YGsk
                                                                         (car g$cls*$8282$14YGsk)
                                                                         (cdr g$cls*$8282$14YGsk))))))
                                                                g$ls/false$8305$14YGsk)
                                                              ((case-lambda
                                                                 ((g$t$8308$14YGsk)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8309$14YGsk)
                                                                      (if g$ls/false$8309$14YGsk
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8310$14YGsk)
                                                                             (list
                                                                               'or
                                                                               g$e$8310$14YGsk
                                                                               (g$f$8280$14YGsk
                                                                                 (car g$cls*$8282$14YGsk)
                                                                                 (cdr g$cls*$8282$14YGsk)))))
                                                                          g$ls/false$8309$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$t$8311$14YGsk)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8312$14YGsk)
                                                                                (if g$ls/false$8312$14YGsk
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8313$14YGsk
                                                                                         g$e*$8314$14YGsk)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8313$14YGsk
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8314$14YGsk)
                                                                                         (g$f$8280$14YGsk
                                                                                           (car g$cls*$8282$14YGsk)
                                                                                           (cdr g$cls*$8282$14YGsk)))))
                                                                                    g$ls/false$8312$14YGsk)
                                                                                  ((case-lambda
                                                                                     ((g$t$8315$14YGsk)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8316$14YGsk)
                                                                                          (if g$ls/false$8316$14YGsk
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7502$14YGsk
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8275$14YGsk)))
                                                                                              g$ls/false$8316$14YGsk)
                                                                                            (g$syntax-violation$7502$14YGsk
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8315$14YGsk))))
                                                                                       (g$syntax-dispatch$7393$14YGsk
                                                                                         g$t$8315$14YGsk
                                                                                         '_))))
                                                                                   g$t$8311$14YGsk))))
                                                                             (g$syntax-dispatch$7393$14YGsk
                                                                               g$t$8311$14YGsk
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8308$14YGsk))))
                                                                   (g$syntax-dispatch$7393$14YGsk
                                                                     g$t$8308$14YGsk
                                                                     '(any)))))
                                                               g$t$8304$14YGsk))))
                                                         (g$syntax-dispatch$7393$14YGsk
                                                           g$t$8304$14YGsk
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8300$14YGsk))))
                                               (g$syntax-dispatch$7393$14YGsk
                                                 g$t$8300$14YGsk
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8281$14YGsk))))))
                            g$f$8280$14YGsk)
                          g$cls$8278$14YGsk
                          g$cls*$8279$14YGsk))))
                    g$ls/false$8277$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8276$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$8276$14YGsk
               '(_ any . each-any)))))
         g$stx$8275$14YGsk))))
   (g$do-include$7380$14YGsk
     g$do-include$10816$14YGsk
     (case-lambda
       ((g$stx$8317$14YGsk g$id$8318$14YGsk g$filename$8319$14YGsk)
        ((case-lambda
           ((g$filename$8320$14YGsk)
            (begin
              (if (not (if (string? g$filename$8320$14YGsk)
                         (begin '#f (g$id?$7115$14YGsk g$id$8318$14YGsk))
                         '#f))
                (g$syntax-violation$7502$14YGsk
                  '#f
                  '"invalid syntax"
                  g$stx$8317$14YGsk)
                (void))
              (cons
                (g$bless$7356$14YGsk 'begin)
                (g$with-input-from-file$6128$14YGsk
                  g$filename$8320$14YGsk
                  (case-lambda
                    (()
                     ((letrec ((g$f$8321$14YGsk
                                 (case-lambda
                                   ((g$ls$8322$14YGsk)
                                    ((case-lambda
                                       ((g$x$8323$14YGsk)
                                        (if (eof-object? g$x$8323$14YGsk)
                                          (reverse g$ls$8322$14YGsk)
                                          (g$f$8321$14YGsk
                                            (cons
                                              (g$datum->stx$7098$14YGsk
                                                g$id$8318$14YGsk
                                                g$x$8323$14YGsk)
                                              g$ls$8322$14YGsk)))))
                                     (read-annotated))))))
                        g$f$8321$14YGsk)
                      '()))))))))
         (g$stx->datum$7126$14YGsk g$filename$8319$14YGsk)))))
   (g$include-macro$7381$14YGsk
     g$include-macro$10817$14YGsk
     (case-lambda
       ((g$e$8324$14YGsk)
        ((case-lambda
           ((g$t$8325$14YGsk)
            ((case-lambda
               ((g$ls/false$8326$14YGsk)
                (if g$ls/false$8326$14YGsk
                  (apply
                    (case-lambda
                      ((g$id$8327$14YGsk g$filename$8328$14YGsk)
                       (g$do-include$7380$14YGsk
                         g$e$8324$14YGsk
                         g$id$8327$14YGsk
                         g$filename$8328$14YGsk)))
                    g$ls/false$8326$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8325$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$8325$14YGsk '(any any)))))
         g$e$8324$14YGsk))))
   (g$include-into-macro$7382$14YGsk
     g$include-into-macro$10818$14YGsk
     (case-lambda
       ((g$e$8329$14YGsk)
        ((case-lambda
           ((g$t$8330$14YGsk)
            ((case-lambda
               ((g$ls/false$8331$14YGsk)
                (if g$ls/false$8331$14YGsk
                  (apply
                    (case-lambda
                      ((g$id$8332$14YGsk g$filename$8333$14YGsk)
                       (g$do-include$7380$14YGsk
                         g$e$8329$14YGsk
                         g$id$8332$14YGsk
                         g$filename$8333$14YGsk)))
                    g$ls/false$8331$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8330$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$8330$14YGsk '(_ any any)))))
         g$e$8329$14YGsk))))
   (g$syntax-rules-macro$7383$14YGsk
     g$syntax-rules-macro$10819$14YGsk
     (case-lambda
       ((g$e$8334$14YGsk)
        ((case-lambda
           ((g$t$8335$14YGsk)
            ((case-lambda
               ((g$ls/false$8336$14YGsk)
                (if g$ls/false$8336$14YGsk
                  (apply
                    (case-lambda
                      ((g$lits$8337$14YGsk
                         g$pat*$8338$14YGsk
                         g$tmp*$8339$14YGsk)
                       (begin
                         (g$verify-literals$7396$14YGsk
                           g$lits$8337$14YGsk
                           g$e$8334$14YGsk)
                         (g$bless$7356$14YGsk
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8337$14YGsk
                                   (map (case-lambda
                                          ((g$pat$8340$14YGsk g$tmp$8341$14YGsk)
                                           ((case-lambda
                                              ((g$t$8342$14YGsk)
                                               ((case-lambda
                                                  ((g$ls/false$8343$14YGsk)
                                                   (if g$ls/false$8343$14YGsk
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8344$14YGsk)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8344$14YGsk)
                                                            (list
                                                              'syntax
                                                              g$tmp$8341$14YGsk))))
                                                       g$ls/false$8343$14YGsk)
                                                     ((case-lambda
                                                        ((g$t$8345$14YGsk)
                                                         ((case-lambda
                                                            ((g$ls/false$8346$14YGsk)
                                                             (if g$ls/false$8346$14YGsk
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7502$14YGsk
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8334$14YGsk
                                                                      g$pat$8340$14YGsk)))
                                                                 g$ls/false$8346$14YGsk)
                                                               (g$syntax-violation$7502$14YGsk
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8345$14YGsk))))
                                                          (g$syntax-dispatch$7393$14YGsk
                                                            g$t$8345$14YGsk
                                                            '_))))
                                                      g$t$8342$14YGsk))))
                                                (g$syntax-dispatch$7393$14YGsk
                                                  g$t$8342$14YGsk
                                                  '(_ . any)))))
                                            g$pat$8340$14YGsk)))
                                        g$pat*$8338$14YGsk
                                        g$tmp*$8339$14YGsk)))))))))
                    g$ls/false$8336$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8335$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$8335$14YGsk
               '(_ each-any . #(each (any any)))))))
         g$e$8334$14YGsk))))
   (g$quasiquote-macro$7384$14YGsk
     g$quasiquote-macro$10820$14YGsk
     ((case-lambda
        (()
         (letrec* ((g$datum$8347$14YGsk
                     (case-lambda
                       ((g$x$8478$14YGsk)
                        (list
                          (g$scheme-stx$7336$14YGsk 'quote)
                          (g$mkstx$7103$14YGsk g$x$8478$14YGsk '() '() '())))))
                   (g$quasicons*$8363$14YGsk
                     (case-lambda
                       ((g$x$8474$14YGsk g$y$8475$14YGsk)
                        ((letrec ((g$f$8476$14YGsk
                                    (case-lambda
                                      ((g$x$8477$14YGsk)
                                       (if (null? g$x$8477$14YGsk)
                                         g$y$8475$14YGsk
                                         (g$quasicons$8364$14YGsk
                                           (car g$x$8477$14YGsk)
                                           (g$f$8476$14YGsk
                                             (cdr g$x$8477$14YGsk))))))))
                           g$f$8476$14YGsk)
                         g$x$8474$14YGsk))))
                   (g$quasicons$8364$14YGsk
                     (case-lambda
                       ((g$x$8455$14YGsk g$y$8456$14YGsk)
                        ((case-lambda
                           ((g$t$8457$14YGsk)
                            ((case-lambda
                               ((g$ls/false$8458$14YGsk)
                                (if g$ls/false$8458$14YGsk
                                  (apply
                                    (case-lambda
                                      ((g$dy$8459$14YGsk)
                                       ((case-lambda
                                          ((g$t$8460$14YGsk)
                                           ((case-lambda
                                              ((g$ls/false$8461$14YGsk)
                                               (if g$ls/false$8461$14YGsk
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8462$14YGsk)
                                                      (list
                                                        (g$scheme-stx$7336$14YGsk
                                                          'quote)
                                                        (cons
                                                          g$dx$8462$14YGsk
                                                          g$dy$8459$14YGsk))))
                                                   g$ls/false$8461$14YGsk)
                                                 ((case-lambda
                                                    ((g$t$8463$14YGsk)
                                                     ((case-lambda
                                                        ((g$ls/false$8464$14YGsk)
                                                         (if g$ls/false$8464$14YGsk
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8465$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8466$14YGsk)
                                                                        (if g$ls/false$8466$14YGsk
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7336$14YGsk
                                                                                   'list)
                                                                                 g$x$8455$14YGsk)))
                                                                            g$ls/false$8466$14YGsk)
                                                                          ((case-lambda
                                                                             ((g$t$8467$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8468$14YGsk)
                                                                                  (if g$ls/false$8468$14YGsk
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7336$14YGsk
                                                                                             'cons)
                                                                                           g$x$8455$14YGsk
                                                                                           g$y$8456$14YGsk)))
                                                                                      g$ls/false$8468$14YGsk)
                                                                                    (g$syntax-violation$7502$14YGsk
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8467$14YGsk))))
                                                                               (g$syntax-dispatch$7393$14YGsk
                                                                                 g$t$8467$14YGsk
                                                                                 '_))))
                                                                           g$t$8465$14YGsk))))
                                                                     (g$syntax-dispatch$7393$14YGsk
                                                                       g$t$8465$14YGsk
                                                                       '()))))
                                                                 g$dy$8459$14YGsk)))
                                                             g$ls/false$8464$14YGsk)
                                                           (g$syntax-violation$7502$14YGsk
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8463$14YGsk))))
                                                      (g$syntax-dispatch$7393$14YGsk
                                                        g$t$8463$14YGsk
                                                        '_))))
                                                  g$t$8460$14YGsk))))
                                            (g$syntax-dispatch$7393$14YGsk
                                              g$t$8460$14YGsk
                                              '(#(scheme-id quote) any)))))
                                        g$x$8455$14YGsk)))
                                    g$ls/false$8458$14YGsk)
                                  ((case-lambda
                                     ((g$t$8469$14YGsk)
                                      ((case-lambda
                                         ((g$ls/false$8470$14YGsk)
                                          (if g$ls/false$8470$14YGsk
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8471$14YGsk)
                                                 (g$cons*$5358$14YGsk
                                                   (g$scheme-stx$7336$14YGsk
                                                     'list)
                                                   g$x$8455$14YGsk
                                                   g$stuff$8471$14YGsk)))
                                              g$ls/false$8470$14YGsk)
                                            ((case-lambda
                                               ((g$t$8472$14YGsk)
                                                ((case-lambda
                                                   ((g$ls/false$8473$14YGsk)
                                                    (if g$ls/false$8473$14YGsk
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7336$14YGsk
                                                               'cons)
                                                             g$x$8455$14YGsk
                                                             g$y$8456$14YGsk)))
                                                        g$ls/false$8473$14YGsk)
                                                      (g$syntax-violation$7502$14YGsk
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8472$14YGsk))))
                                                 (g$syntax-dispatch$7393$14YGsk
                                                   g$t$8472$14YGsk
                                                   '_))))
                                             g$t$8469$14YGsk))))
                                       (g$syntax-dispatch$7393$14YGsk
                                         g$t$8469$14YGsk
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8457$14YGsk))))
                             (g$syntax-dispatch$7393$14YGsk
                               g$t$8457$14YGsk
                               '(#(scheme-id quote) any)))))
                         g$y$8456$14YGsk))))
                   (g$quasiappend$8365$14YGsk
                     (case-lambda
                       ((g$x$8442$14YGsk g$y$8443$14YGsk)
                        ((case-lambda
                           ((g$ls$8444$14YGsk)
                            (if (null? g$ls$8444$14YGsk)
                              (list (g$scheme-stx$7336$14YGsk 'quote) '())
                              (if (null? (cdr g$ls$8444$14YGsk))
                                (car g$ls$8444$14YGsk)
                                (g$cons*$5358$14YGsk
                                  (g$scheme-stx$7336$14YGsk 'append)
                                  g$ls$8444$14YGsk)))))
                         ((letrec ((g$f$8445$14YGsk
                                     (case-lambda
                                       ((g$x$8446$14YGsk)
                                        (if (null? g$x$8446$14YGsk)
                                          ((case-lambda
                                             ((g$t$8447$14YGsk)
                                              ((case-lambda
                                                 ((g$ls/false$8448$14YGsk)
                                                  (if g$ls/false$8448$14YGsk
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8448$14YGsk)
                                                    ((case-lambda
                                                       ((g$t$8449$14YGsk)
                                                        ((case-lambda
                                                           ((g$ls/false$8450$14YGsk)
                                                            (if g$ls/false$8450$14YGsk
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8443$14YGsk)))
                                                                g$ls/false$8450$14YGsk)
                                                              (g$syntax-violation$7502$14YGsk
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8449$14YGsk))))
                                                         (g$syntax-dispatch$7393$14YGsk
                                                           g$t$8449$14YGsk
                                                           '_))))
                                                     g$t$8447$14YGsk))))
                                               (g$syntax-dispatch$7393$14YGsk
                                                 g$t$8447$14YGsk
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8443$14YGsk)
                                          ((case-lambda
                                             ((g$t$8451$14YGsk)
                                              ((case-lambda
                                                 ((g$ls/false$8452$14YGsk)
                                                  (if g$ls/false$8452$14YGsk
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8445$14YGsk
                                                           (cdr g$x$8446$14YGsk))))
                                                      g$ls/false$8452$14YGsk)
                                                    ((case-lambda
                                                       ((g$t$8453$14YGsk)
                                                        ((case-lambda
                                                           ((g$ls/false$8454$14YGsk)
                                                            (if g$ls/false$8454$14YGsk
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8446$14YGsk)
                                                                     (g$f$8445$14YGsk
                                                                       (cdr g$x$8446$14YGsk)))))
                                                                g$ls/false$8454$14YGsk)
                                                              (g$syntax-violation$7502$14YGsk
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8453$14YGsk))))
                                                         (g$syntax-dispatch$7393$14YGsk
                                                           g$t$8453$14YGsk
                                                           '_))))
                                                     g$t$8451$14YGsk))))
                                               (g$syntax-dispatch$7393$14YGsk
                                                 g$t$8451$14YGsk
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8446$14YGsk)))))))
                            g$f$8445$14YGsk)
                          g$x$8442$14YGsk)))))
                   (g$quasivector$8366$14YGsk
                     (case-lambda
                       ((g$x$8417$14YGsk)
                        ((case-lambda
                           ((g$pat-x$8418$14YGsk)
                            ((case-lambda
                               ((g$t$8419$14YGsk)
                                ((case-lambda
                                   ((g$ls/false$8420$14YGsk)
                                    (if g$ls/false$8420$14YGsk
                                      (apply
                                        (case-lambda
                                          ((g$x*$8421$14YGsk)
                                           (list
                                             (g$scheme-stx$7336$14YGsk 'quote)
                                             (list->vector g$x*$8421$14YGsk))))
                                        g$ls/false$8420$14YGsk)
                                      ((case-lambda
                                         ((g$t$8422$14YGsk)
                                          ((case-lambda
                                             ((g$ls/false$8423$14YGsk)
                                              (if g$ls/false$8423$14YGsk
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8424$14YGsk
                                                                 (case-lambda
                                                                   ((g$x$8425$14YGsk
                                                                      g$k$8426$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$t$8427$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8428$14YGsk)
                                                                            (if g$ls/false$8428$14YGsk
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8429$14YGsk)
                                                                                   (g$k$8426$14YGsk
                                                                                     (map (case-lambda
                                                                                            ((g$x$8430$14YGsk)
                                                                                             (list
                                                                                               (g$scheme-stx$7336$14YGsk
                                                                                                 'quote)
                                                                                               g$x$8430$14YGsk)))
                                                                                          g$x*$8429$14YGsk))))
                                                                                g$ls/false$8428$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$t$8431$14YGsk)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8432$14YGsk)
                                                                                      (if g$ls/false$8432$14YGsk
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8433$14YGsk)
                                                                                             (g$k$8426$14YGsk
                                                                                               g$x*$8433$14YGsk)))
                                                                                          g$ls/false$8432$14YGsk)
                                                                                        ((case-lambda
                                                                                           ((g$t$8434$14YGsk)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8435$14YGsk)
                                                                                                (if g$ls/false$8435$14YGsk
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8436$14YGsk
                                                                                                         g$y$8437$14YGsk)
                                                                                                       (g$f$8424$14YGsk
                                                                                                         g$y$8437$14YGsk
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8438$14YGsk)
                                                                                                            (g$k$8426$14YGsk
                                                                                                              (cons
                                                                                                                g$x$8436$14YGsk
                                                                                                                g$ls$8438$14YGsk)))))))
                                                                                                    g$ls/false$8435$14YGsk)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8439$14YGsk)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8440$14YGsk)
                                                                                                          (if g$ls/false$8440$14YGsk
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7336$14YGsk
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8418$14YGsk)))
                                                                                                              g$ls/false$8440$14YGsk)
                                                                                                            (g$syntax-violation$7502$14YGsk
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8439$14YGsk))))
                                                                                                       (g$syntax-dispatch$7393$14YGsk
                                                                                                         g$t$8439$14YGsk
                                                                                                         '_))))
                                                                                                   g$t$8434$14YGsk))))
                                                                                             (g$syntax-dispatch$7393$14YGsk
                                                                                               g$t$8434$14YGsk
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8431$14YGsk))))
                                                                                   (g$syntax-dispatch$7393$14YGsk
                                                                                     g$t$8431$14YGsk
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8427$14YGsk))))
                                                                         (g$syntax-dispatch$7393$14YGsk
                                                                           g$t$8427$14YGsk
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8425$14YGsk)))))
                                                        g$f$8424$14YGsk)
                                                      g$x$8417$14YGsk
                                                      (case-lambda
                                                        ((g$ls$8441$14YGsk)
                                                         (g$cons*$5358$14YGsk
                                                           (g$scheme-stx$7336$14YGsk
                                                             'vector)
                                                           g$ls$8441$14YGsk))))))
                                                  g$ls/false$8423$14YGsk)
                                                (g$syntax-violation$7502$14YGsk
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8422$14YGsk))))
                                           (g$syntax-dispatch$7393$14YGsk
                                             g$t$8422$14YGsk
                                             '_))))
                                       g$t$8419$14YGsk))))
                                 (g$syntax-dispatch$7393$14YGsk
                                   g$t$8419$14YGsk
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8418$14YGsk)))
                         g$x$8417$14YGsk))))
                   (g$vquasi$8367$14YGsk
                     (case-lambda
                       ((g$p$8400$14YGsk g$lev$8401$14YGsk)
                        ((case-lambda
                           ((g$t$8402$14YGsk)
                            ((case-lambda
                               ((g$ls/false$8403$14YGsk)
                                (if g$ls/false$8403$14YGsk
                                  (apply
                                    (case-lambda
                                      ((g$p$8404$14YGsk g$q$8405$14YGsk)
                                       ((case-lambda
                                          ((g$t$8406$14YGsk)
                                           ((case-lambda
                                              ((g$ls/false$8407$14YGsk)
                                               (if g$ls/false$8407$14YGsk
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8408$14YGsk)
                                                      (if (= g$lev$8401$14YGsk
                                                             '0)
                                                        (g$quasicons*$8363$14YGsk
                                                          g$p$8408$14YGsk
                                                          (g$vquasi$8367$14YGsk
                                                            g$q$8405$14YGsk
                                                            g$lev$8401$14YGsk))
                                                        (g$quasicons$8364$14YGsk
                                                          (g$quasicons$8364$14YGsk
                                                            (g$datum$8347$14YGsk
                                                              'unquote)
                                                            (g$quasi$8368$14YGsk
                                                              g$p$8408$14YGsk
                                                              (- g$lev$8401$14YGsk
                                                                 '1)))
                                                          (g$vquasi$8367$14YGsk
                                                            g$q$8405$14YGsk
                                                            g$lev$8401$14YGsk)))))
                                                   g$ls/false$8407$14YGsk)
                                                 ((case-lambda
                                                    ((g$t$8409$14YGsk)
                                                     ((case-lambda
                                                        ((g$ls/false$8410$14YGsk)
                                                         (if g$ls/false$8410$14YGsk
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8411$14YGsk)
                                                                (if (= g$lev$8401$14YGsk
                                                                       '0)
                                                                  (g$quasiappend$8365$14YGsk
                                                                    g$p$8411$14YGsk
                                                                    (g$vquasi$8367$14YGsk
                                                                      g$q$8405$14YGsk
                                                                      g$lev$8401$14YGsk))
                                                                  (g$quasicons$8364$14YGsk
                                                                    (g$quasicons$8364$14YGsk
                                                                      (g$datum$8347$14YGsk
                                                                        'unquote-splicing)
                                                                      (g$quasi$8368$14YGsk
                                                                        g$p$8411$14YGsk
                                                                        (- g$lev$8401$14YGsk
                                                                           '1)))
                                                                    (g$vquasi$8367$14YGsk
                                                                      g$q$8405$14YGsk
                                                                      g$lev$8401$14YGsk)))))
                                                             g$ls/false$8410$14YGsk)
                                                           ((case-lambda
                                                              ((g$t$8412$14YGsk)
                                                               ((case-lambda
                                                                  ((g$ls/false$8413$14YGsk)
                                                                   (if g$ls/false$8413$14YGsk
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8414$14YGsk)
                                                                          (g$quasicons$8364$14YGsk
                                                                            (g$quasi$8368$14YGsk
                                                                              g$p$8414$14YGsk
                                                                              g$lev$8401$14YGsk)
                                                                            (g$vquasi$8367$14YGsk
                                                                              g$q$8405$14YGsk
                                                                              g$lev$8401$14YGsk))))
                                                                       g$ls/false$8413$14YGsk)
                                                                     (g$syntax-violation$7502$14YGsk
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8412$14YGsk))))
                                                                (g$syntax-dispatch$7393$14YGsk
                                                                  g$t$8412$14YGsk
                                                                  'any))))
                                                            g$t$8409$14YGsk))))
                                                      (g$syntax-dispatch$7393$14YGsk
                                                        g$t$8409$14YGsk
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8406$14YGsk))))
                                            (g$syntax-dispatch$7393$14YGsk
                                              g$t$8406$14YGsk
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8404$14YGsk)))
                                    g$ls/false$8403$14YGsk)
                                  ((case-lambda
                                     ((g$t$8415$14YGsk)
                                      ((case-lambda
                                         ((g$ls/false$8416$14YGsk)
                                          (if g$ls/false$8416$14YGsk
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7336$14YGsk
                                                     'quote)
                                                   '())))
                                              g$ls/false$8416$14YGsk)
                                            (g$syntax-violation$7502$14YGsk
                                              '#f
                                              '"invalid syntax"
                                              g$t$8415$14YGsk))))
                                       (g$syntax-dispatch$7393$14YGsk
                                         g$t$8415$14YGsk
                                         '()))))
                                   g$t$8402$14YGsk))))
                             (g$syntax-dispatch$7393$14YGsk
                               g$t$8402$14YGsk
                               '(any . any)))))
                         g$p$8400$14YGsk))))
                   (g$quasi$8368$14YGsk
                     (case-lambda
                       ((g$p$8373$14YGsk g$lev$8374$14YGsk)
                        ((case-lambda
                           ((g$t$8375$14YGsk)
                            ((case-lambda
                               ((g$ls/false$8376$14YGsk)
                                (if g$ls/false$8376$14YGsk
                                  (apply
                                    (case-lambda
                                      ((g$p$8377$14YGsk)
                                       (if (= g$lev$8374$14YGsk '0)
                                         g$p$8377$14YGsk
                                         (g$quasicons$8364$14YGsk
                                           (g$datum$8347$14YGsk 'unquote)
                                           (g$quasi$8368$14YGsk
                                             (list g$p$8377$14YGsk)
                                             (- g$lev$8374$14YGsk '1))))))
                                    g$ls/false$8376$14YGsk)
                                  ((case-lambda
                                     ((g$t$8378$14YGsk)
                                      ((case-lambda
                                         ((g$ls/false$8379$14YGsk)
                                          (if g$ls/false$8379$14YGsk
                                            (apply
                                              (case-lambda
                                                ((g$p$8380$14YGsk
                                                   g$q$8381$14YGsk)
                                                 (if (= g$lev$8374$14YGsk '0)
                                                   (g$quasicons*$8363$14YGsk
                                                     g$p$8380$14YGsk
                                                     (g$quasi$8368$14YGsk
                                                       g$q$8381$14YGsk
                                                       g$lev$8374$14YGsk))
                                                   (g$quasicons$8364$14YGsk
                                                     (g$quasicons$8364$14YGsk
                                                       (g$datum$8347$14YGsk
                                                         'unquote)
                                                       (g$quasi$8368$14YGsk
                                                         g$p$8380$14YGsk
                                                         (- g$lev$8374$14YGsk
                                                            '1)))
                                                     (g$quasi$8368$14YGsk
                                                       g$q$8381$14YGsk
                                                       g$lev$8374$14YGsk)))))
                                              g$ls/false$8379$14YGsk)
                                            ((case-lambda
                                               ((g$t$8382$14YGsk)
                                                ((case-lambda
                                                   ((g$ls/false$8383$14YGsk)
                                                    (if g$ls/false$8383$14YGsk
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8384$14YGsk
                                                             g$q$8385$14YGsk)
                                                           (if (= g$lev$8374$14YGsk
                                                                  '0)
                                                             (g$quasiappend$8365$14YGsk
                                                               g$p$8384$14YGsk
                                                               (g$quasi$8368$14YGsk
                                                                 g$q$8385$14YGsk
                                                                 g$lev$8374$14YGsk))
                                                             (g$quasicons$8364$14YGsk
                                                               (g$quasicons$8364$14YGsk
                                                                 (g$datum$8347$14YGsk
                                                                   'unquote-splicing)
                                                                 (g$quasi$8368$14YGsk
                                                                   g$p$8384$14YGsk
                                                                   (- g$lev$8374$14YGsk
                                                                      '1)))
                                                               (g$quasi$8368$14YGsk
                                                                 g$q$8385$14YGsk
                                                                 g$lev$8374$14YGsk)))))
                                                        g$ls/false$8383$14YGsk)
                                                      ((case-lambda
                                                         ((g$t$8386$14YGsk)
                                                          ((case-lambda
                                                             ((g$ls/false$8387$14YGsk)
                                                              (if g$ls/false$8387$14YGsk
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8388$14YGsk)
                                                                     (g$quasicons$8364$14YGsk
                                                                       (g$datum$8347$14YGsk
                                                                         'quasiquote)
                                                                       (g$quasi$8368$14YGsk
                                                                         (list
                                                                           g$p$8388$14YGsk)
                                                                         (+ g$lev$8374$14YGsk
                                                                            '1)))))
                                                                  g$ls/false$8387$14YGsk)
                                                                ((case-lambda
                                                                   ((g$t$8389$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8390$14YGsk)
                                                                        (if g$ls/false$8390$14YGsk
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8391$14YGsk
                                                                                 g$q$8392$14YGsk)
                                                                               (g$quasicons$8364$14YGsk
                                                                                 (g$quasi$8368$14YGsk
                                                                                   g$p$8391$14YGsk
                                                                                   g$lev$8374$14YGsk)
                                                                                 (g$quasi$8368$14YGsk
                                                                                   g$q$8392$14YGsk
                                                                                   g$lev$8374$14YGsk))))
                                                                            g$ls/false$8390$14YGsk)
                                                                          ((case-lambda
                                                                             ((g$t$8393$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8394$14YGsk)
                                                                                  (if (if g$ls/false$8394$14YGsk
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8395$14YGsk)
                                                                                               (not (g$stx?$7087$14YGsk
                                                                                                      g$x$8395$14YGsk))))
                                                                                            g$ls/false$8394$14YGsk))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8396$14YGsk)
                                                                                         (g$quasivector$8366$14YGsk
                                                                                           (g$vquasi$8367$14YGsk
                                                                                             g$x$8396$14YGsk
                                                                                             g$lev$8374$14YGsk))))
                                                                                      g$ls/false$8394$14YGsk)
                                                                                    ((case-lambda
                                                                                       ((g$t$8397$14YGsk)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8398$14YGsk)
                                                                                            (if g$ls/false$8398$14YGsk
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8399$14YGsk)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7336$14YGsk
                                                                                                       'quote)
                                                                                                     g$p$8399$14YGsk)))
                                                                                                g$ls/false$8398$14YGsk)
                                                                                              (g$syntax-violation$7502$14YGsk
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8397$14YGsk))))
                                                                                         (g$syntax-dispatch$7393$14YGsk
                                                                                           g$t$8397$14YGsk
                                                                                           'any))))
                                                                                     g$t$8393$14YGsk))))
                                                                               (g$syntax-dispatch$7393$14YGsk
                                                                                 g$t$8393$14YGsk
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8389$14YGsk))))
                                                                     (g$syntax-dispatch$7393$14YGsk
                                                                       g$t$8389$14YGsk
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8386$14YGsk))))
                                                           (g$syntax-dispatch$7393$14YGsk
                                                             g$t$8386$14YGsk
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8382$14YGsk))))
                                                 (g$syntax-dispatch$7393$14YGsk
                                                   g$t$8382$14YGsk
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8378$14YGsk))))
                                       (g$syntax-dispatch$7393$14YGsk
                                         g$t$8378$14YGsk
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8375$14YGsk))))
                             (g$syntax-dispatch$7393$14YGsk
                               g$t$8375$14YGsk
                               '(#(scheme-id unquote) any)))))
                         g$p$8373$14YGsk)))))
           (case-lambda
             ((g$x$8369$14YGsk)
              ((case-lambda
                 ((g$t$8370$14YGsk)
                  ((case-lambda
                     ((g$ls/false$8371$14YGsk)
                      (if g$ls/false$8371$14YGsk
                        (apply
                          (case-lambda
                            ((g$e$8372$14YGsk)
                             (g$quasi$8368$14YGsk g$e$8372$14YGsk '0)))
                          g$ls/false$8371$14YGsk)
                        (g$syntax-violation$7502$14YGsk
                          '#f
                          '"invalid syntax"
                          g$t$8370$14YGsk))))
                   (g$syntax-dispatch$7393$14YGsk g$t$8370$14YGsk '(_ any)))))
               g$x$8369$14YGsk))))))))
   (g$quasisyntax-macro$7385$14YGsk
     g$quasisyntax-macro$10821$14YGsk
     ((case-lambda
        (()
         (letrec* ((g$quasi$8479$14YGsk
                     (case-lambda
                       ((g$p$8493$14YGsk g$lev$8494$14YGsk)
                        ((case-lambda
                           ((g$t$8495$14YGsk)
                            ((case-lambda
                               ((g$ls/false$8496$14YGsk)
                                (if g$ls/false$8496$14YGsk
                                  (apply
                                    (case-lambda
                                      ((g$p$8497$14YGsk)
                                       (if (= g$lev$8494$14YGsk '0)
                                         ((case-lambda
                                            ((g$g$8498$14YGsk)
                                             (values
                                               (list g$g$8498$14YGsk)
                                               (list g$p$8497$14YGsk)
                                               g$g$8498$14YGsk)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8479$14YGsk
                                                g$p$8497$14YGsk
                                                (- g$lev$8494$14YGsk '1))))
                                           (case-lambda
                                             ((g$lhs*$8502$14YGsk
                                                g$rhs*$8503$14YGsk
                                                g$p$8504$14YGsk)
                                              ((case-lambda
                                                 ((g$p$8505$14YGsk
                                                    g$rhs*$8506$14YGsk
                                                    g$lhs*$8507$14YGsk)
                                                  (values
                                                    g$lhs*$8507$14YGsk
                                                    g$rhs*$8506$14YGsk
                                                    (list
                                                      'unsyntax
                                                      g$p$8505$14YGsk))))
                                               g$p$8504$14YGsk
                                               g$rhs*$8503$14YGsk
                                               g$lhs*$8502$14YGsk)))))))
                                    g$ls/false$8496$14YGsk)
                                  ((case-lambda
                                     ((g$t$8508$14YGsk)
                                      ((case-lambda
                                         ((g$ls/false$8509$14YGsk)
                                          (if (if g$ls/false$8509$14YGsk
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8494$14YGsk
                                                          '0)))
                                                    g$ls/false$8509$14YGsk))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7502$14YGsk
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8493$14YGsk)))
                                              g$ls/false$8509$14YGsk)
                                            ((case-lambda
                                               ((g$t$8510$14YGsk)
                                                ((case-lambda
                                                   ((g$ls/false$8511$14YGsk)
                                                    (if g$ls/false$8511$14YGsk
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8512$14YGsk
                                                             g$q$8513$14YGsk)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8479$14YGsk
                                                                  g$q$8513$14YGsk
                                                                  g$lev$8494$14YGsk)))
                                                             (case-lambda
                                                               ((g$lhs*$8517$14YGsk
                                                                  g$rhs*$8518$14YGsk
                                                                  g$q$8519$14YGsk)
                                                                ((case-lambda
                                                                   ((g$q$8520$14YGsk
                                                                      g$rhs*$8521$14YGsk
                                                                      g$lhs*$8522$14YGsk)
                                                                    (if (= g$lev$8494$14YGsk
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8523$14YGsk)
                                                                          (values
                                                                            (append
                                                                              g$g*$8523$14YGsk
                                                                              g$lhs*$8522$14YGsk)
                                                                            (append
                                                                              g$p*$8512$14YGsk
                                                                              g$rhs*$8521$14YGsk)
                                                                            (append
                                                                              g$g*$8523$14YGsk
                                                                              g$q$8520$14YGsk))))
                                                                       (map (case-lambda
                                                                              ((g$x$8524$14YGsk)
                                                                               (gensym)))
                                                                            g$p*$8512$14YGsk))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8479$14YGsk
                                                                             g$p*$8512$14YGsk
                                                                             (- g$lev$8494$14YGsk
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8528$14YGsk
                                                                             g$rhs2*$8529$14YGsk
                                                                             g$p*$8530$14YGsk)
                                                                           ((case-lambda
                                                                              ((g$p*$8531$14YGsk
                                                                                 g$rhs2*$8532$14YGsk
                                                                                 g$lhs2*$8533$14YGsk)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8533$14YGsk
                                                                                   g$lhs*$8522$14YGsk)
                                                                                 (append
                                                                                   g$rhs2*$8532$14YGsk
                                                                                   g$rhs*$8521$14YGsk)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8531$14YGsk)
                                                                                   g$q$8520$14YGsk))))
                                                                            g$p*$8530$14YGsk
                                                                            g$rhs2*$8529$14YGsk
                                                                            g$lhs2*$8528$14YGsk)))))))
                                                                 g$q$8519$14YGsk
                                                                 g$rhs*$8518$14YGsk
                                                                 g$lhs*$8517$14YGsk))))))
                                                        g$ls/false$8511$14YGsk)
                                                      ((case-lambda
                                                         ((g$t$8534$14YGsk)
                                                          ((case-lambda
                                                             ((g$ls/false$8535$14YGsk)
                                                              (if g$ls/false$8535$14YGsk
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8536$14YGsk
                                                                       g$q$8537$14YGsk)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8479$14YGsk
                                                                            g$q$8537$14YGsk
                                                                            g$lev$8494$14YGsk)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8541$14YGsk
                                                                            g$rhs*$8542$14YGsk
                                                                            g$q$8543$14YGsk)
                                                                          ((case-lambda
                                                                             ((g$q$8544$14YGsk
                                                                                g$rhs*$8545$14YGsk
                                                                                g$lhs*$8546$14YGsk)
                                                                              (if (= g$lev$8494$14YGsk
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8547$14YGsk)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8548$14YGsk)
                                                                                                (cons
                                                                                                  g$g$8548$14YGsk
                                                                                                  '(...))))
                                                                                             g$g*$8547$14YGsk)
                                                                                        g$lhs*$8546$14YGsk)
                                                                                      (append
                                                                                        g$p*$8536$14YGsk
                                                                                        g$rhs*$8545$14YGsk)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8549$14YGsk)
                                                                                                  (cons
                                                                                                    g$g$8549$14YGsk
                                                                                                    '(...))))
                                                                                               g$g*$8547$14YGsk))
                                                                                        g$q$8544$14YGsk))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8550$14YGsk)
                                                                                         (gensym)))
                                                                                      g$p*$8536$14YGsk))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8479$14YGsk
                                                                                       g$p*$8536$14YGsk
                                                                                       (- g$lev$8494$14YGsk
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8554$14YGsk
                                                                                       g$rhs2*$8555$14YGsk
                                                                                       g$p*$8556$14YGsk)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8557$14YGsk
                                                                                           g$rhs2*$8558$14YGsk
                                                                                           g$lhs2*$8559$14YGsk)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8559$14YGsk
                                                                                             g$lhs*$8546$14YGsk)
                                                                                           (append
                                                                                             g$rhs2*$8558$14YGsk
                                                                                             g$rhs*$8545$14YGsk)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8557$14YGsk)
                                                                                             g$q$8544$14YGsk))))
                                                                                      g$p*$8556$14YGsk
                                                                                      g$rhs2*$8555$14YGsk
                                                                                      g$lhs2*$8554$14YGsk)))))))
                                                                           g$q$8543$14YGsk
                                                                           g$rhs*$8542$14YGsk
                                                                           g$lhs*$8541$14YGsk))))))
                                                                  g$ls/false$8535$14YGsk)
                                                                ((case-lambda
                                                                   ((g$t$8560$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8561$14YGsk)
                                                                        (if (if g$ls/false$8561$14YGsk
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8494$14YGsk
                                                                                        '0)))
                                                                                  g$ls/false$8561$14YGsk))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7502$14YGsk
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8493$14YGsk)))
                                                                            g$ls/false$8561$14YGsk)
                                                                          ((case-lambda
                                                                             ((g$t$8562$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8563$14YGsk)
                                                                                  (if g$ls/false$8563$14YGsk
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8564$14YGsk)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8479$14YGsk
                                                                                                g$p$8564$14YGsk
                                                                                                (+ g$lev$8494$14YGsk
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8568$14YGsk
                                                                                                g$rhs*$8569$14YGsk
                                                                                                g$p$8570$14YGsk)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8571$14YGsk
                                                                                                    g$rhs*$8572$14YGsk
                                                                                                    g$lhs*$8573$14YGsk)
                                                                                                  (values
                                                                                                    g$lhs*$8573$14YGsk
                                                                                                    g$rhs*$8572$14YGsk
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8571$14YGsk))))
                                                                                               g$p$8570$14YGsk
                                                                                               g$rhs*$8569$14YGsk
                                                                                               g$lhs*$8568$14YGsk))))))
                                                                                      g$ls/false$8563$14YGsk)
                                                                                    ((case-lambda
                                                                                       ((g$t$8574$14YGsk)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8575$14YGsk)
                                                                                            (if g$ls/false$8575$14YGsk
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8576$14YGsk
                                                                                                     g$q$8577$14YGsk)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8479$14YGsk
                                                                                                          g$p$8576$14YGsk
                                                                                                          g$lev$8494$14YGsk)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8584$14YGsk
                                                                                                          g$rhs*$8585$14YGsk
                                                                                                          g$p$8586$14YGsk)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8479$14YGsk
                                                                                                               g$q$8577$14YGsk
                                                                                                               g$lev$8494$14YGsk)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8587$14YGsk
                                                                                                               g$rhs2*$8588$14YGsk
                                                                                                               g$q$8589$14YGsk)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8590$14YGsk
                                                                                                                   g$rhs2*$8591$14YGsk
                                                                                                                   g$lhs2*$8592$14YGsk
                                                                                                                   g$p$8593$14YGsk
                                                                                                                   g$rhs*$8594$14YGsk
                                                                                                                   g$lhs*$8595$14YGsk)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8592$14YGsk
                                                                                                                     g$lhs*$8595$14YGsk)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8591$14YGsk
                                                                                                                     g$rhs*$8594$14YGsk)
                                                                                                                   (cons
                                                                                                                     g$p$8593$14YGsk
                                                                                                                     g$q$8590$14YGsk))))
                                                                                                              g$q$8589$14YGsk
                                                                                                              g$rhs2*$8588$14YGsk
                                                                                                              g$lhs2*$8587$14YGsk
                                                                                                              g$p$8586$14YGsk
                                                                                                              g$rhs*$8585$14YGsk
                                                                                                              g$lhs*$8584$14YGsk)))))))))
                                                                                                g$ls/false$8575$14YGsk)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8596$14YGsk)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8597$14YGsk)
                                                                                                      (if g$ls/false$8597$14YGsk
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8598$14YGsk)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8479$14YGsk
                                                                                                                    g$x*$8598$14YGsk
                                                                                                                    g$lev$8494$14YGsk)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8602$14YGsk
                                                                                                                    g$rhs*$8603$14YGsk
                                                                                                                    g$x*$8604$14YGsk)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8605$14YGsk
                                                                                                                        g$rhs*$8606$14YGsk
                                                                                                                        g$lhs*$8607$14YGsk)
                                                                                                                      (values
                                                                                                                        g$lhs*$8607$14YGsk
                                                                                                                        g$rhs*$8606$14YGsk
                                                                                                                        (list->vector
                                                                                                                          g$x*$8605$14YGsk))))
                                                                                                                   g$x*$8604$14YGsk
                                                                                                                   g$rhs*$8603$14YGsk
                                                                                                                   g$lhs*$8602$14YGsk))))))
                                                                                                          g$ls/false$8597$14YGsk)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8608$14YGsk)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8609$14YGsk)
                                                                                                                (if g$ls/false$8609$14YGsk
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8493$14YGsk)))
                                                                                                                    g$ls/false$8609$14YGsk)
                                                                                                                  (g$syntax-violation$7502$14YGsk
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8608$14YGsk))))
                                                                                                             (g$syntax-dispatch$7393$14YGsk
                                                                                                               g$t$8608$14YGsk
                                                                                                               '_))))
                                                                                                         g$t$8596$14YGsk))))
                                                                                                   (g$syntax-dispatch$7393$14YGsk
                                                                                                     g$t$8596$14YGsk
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8574$14YGsk))))
                                                                                         (g$syntax-dispatch$7393$14YGsk
                                                                                           g$t$8574$14YGsk
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8562$14YGsk))))
                                                                               (g$syntax-dispatch$7393$14YGsk
                                                                                 g$t$8562$14YGsk
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8560$14YGsk))))
                                                                     (g$syntax-dispatch$7393$14YGsk
                                                                       g$t$8560$14YGsk
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8534$14YGsk))))
                                                           (g$syntax-dispatch$7393$14YGsk
                                                             g$t$8534$14YGsk
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8510$14YGsk))))
                                                 (g$syntax-dispatch$7393$14YGsk
                                                   g$t$8510$14YGsk
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8508$14YGsk))))
                                       (g$syntax-dispatch$7393$14YGsk
                                         g$t$8508$14YGsk
                                         '#(scheme-id unsyntax)))))
                                   g$t$8495$14YGsk))))
                             (g$syntax-dispatch$7393$14YGsk
                               g$t$8495$14YGsk
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8493$14YGsk)))))
           (case-lambda
             ((g$x$8480$14YGsk)
              ((case-lambda
                 ((g$t$8481$14YGsk)
                  ((case-lambda
                     ((g$ls/false$8482$14YGsk)
                      (if g$ls/false$8482$14YGsk
                        (apply
                          (case-lambda
                            ((g$e$8483$14YGsk)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8479$14YGsk g$e$8483$14YGsk '0)))
                               (case-lambda
                                 ((g$lhs*$8487$14YGsk
                                    g$rhs*$8488$14YGsk
                                    g$v$8489$14YGsk)
                                  ((case-lambda
                                     ((g$v$8490$14YGsk
                                        g$rhs*$8491$14YGsk
                                        g$lhs*$8492$14YGsk)
                                      (g$bless$7356$14YGsk
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8491$14YGsk)
                                          '()
                                          (list
                                            g$lhs*$8492$14YGsk
                                            (list 'syntax g$v$8490$14YGsk))))))
                                   g$v$8489$14YGsk
                                   g$rhs*$8488$14YGsk
                                   g$lhs*$8487$14YGsk))))))
                          g$ls/false$8482$14YGsk)
                        (g$syntax-violation$7502$14YGsk
                          '#f
                          '"invalid syntax"
                          g$t$8481$14YGsk))))
                   (g$syntax-dispatch$7393$14YGsk g$t$8481$14YGsk '(_ any)))))
               g$x$8480$14YGsk))))))))
   (g$define-struct-macro$7386$14YGsk
     g$define-struct-macro$10822$14YGsk
     (case-lambda
       ((g$stx$8610$14YGsk)
        (g$syntax-violation$7502$14YGsk
          '#f
          '"define-struct not supported"
          g$stx$8610$14YGsk))))
   (g$define-record-type-macro$7387$14YGsk
     g$define-record-type-macro$10823$14YGsk
     (case-lambda
       ((g$x$8611$14YGsk)
        (letrec* ((g$id$8612$14YGsk
                    (case-lambda
                      ((g$ctxt$8864$14YGsk . g$str*$8865$14YGsk)
                       (g$datum->syntax$7504$14YGsk
                         g$ctxt$8864$14YGsk
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$8866$14YGsk)
                                     (if (symbol? g$x$8866$14YGsk)
                                       (symbol->string g$x$8866$14YGsk)
                                       (if (string? g$x$8866$14YGsk)
                                         g$x$8866$14YGsk
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$8865$14YGsk)))))))
                  (g$get-record-name$8613$14YGsk
                    (case-lambda
                      ((g$spec$8855$14YGsk)
                       ((case-lambda
                          ((g$t$8856$14YGsk)
                           ((case-lambda
                              ((g$ls/false$8857$14YGsk)
                               (if g$ls/false$8857$14YGsk
                                 (apply
                                   (case-lambda
                                     ((g$foo$8858$14YGsk
                                        g$make-foo$8859$14YGsk
                                        g$foo?$8860$14YGsk)
                                      g$foo$8858$14YGsk))
                                   g$ls/false$8857$14YGsk)
                                 ((case-lambda
                                    ((g$t$8861$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8862$14YGsk)
                                         (if g$ls/false$8862$14YGsk
                                           (apply
                                             (case-lambda
                                               ((g$foo$8863$14YGsk)
                                                g$foo$8863$14YGsk))
                                             g$ls/false$8862$14YGsk)
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid syntax"
                                             g$t$8861$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8861$14YGsk
                                        'any))))
                                  g$t$8856$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$8856$14YGsk
                              '(any any any)))))
                        g$spec$8855$14YGsk))))
                  (g$get-record-constructor-name$8614$14YGsk
                    (case-lambda
                      ((g$spec$8845$14YGsk)
                       ((case-lambda
                          ((g$t$8846$14YGsk)
                           ((case-lambda
                              ((g$ls/false$8847$14YGsk)
                               (if g$ls/false$8847$14YGsk
                                 (apply
                                   (case-lambda
                                     ((g$foo$8848$14YGsk
                                        g$make-foo$8849$14YGsk
                                        g$foo?$8850$14YGsk)
                                      g$make-foo$8849$14YGsk))
                                   g$ls/false$8847$14YGsk)
                                 ((case-lambda
                                    ((g$t$8851$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8852$14YGsk)
                                         (if (if g$ls/false$8852$14YGsk
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8853$14YGsk)
                                                      (g$id?$7115$14YGsk
                                                        g$foo$8853$14YGsk)))
                                                   g$ls/false$8852$14YGsk))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8854$14YGsk)
                                                (g$id$8612$14YGsk
                                                  g$foo$8854$14YGsk
                                                  '"make-"
                                                  (g$stx->datum$7126$14YGsk
                                                    g$foo$8854$14YGsk))))
                                             g$ls/false$8852$14YGsk)
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid syntax"
                                             g$t$8851$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8851$14YGsk
                                        'any))))
                                  g$t$8846$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$8846$14YGsk
                              '(any any any)))))
                        g$spec$8845$14YGsk))))
                  (g$get-record-predicate-name$8615$14YGsk
                    (case-lambda
                      ((g$spec$8835$14YGsk)
                       ((case-lambda
                          ((g$t$8836$14YGsk)
                           ((case-lambda
                              ((g$ls/false$8837$14YGsk)
                               (if g$ls/false$8837$14YGsk
                                 (apply
                                   (case-lambda
                                     ((g$foo$8838$14YGsk
                                        g$make-foo$8839$14YGsk
                                        g$foo?$8840$14YGsk)
                                      g$foo?$8840$14YGsk))
                                   g$ls/false$8837$14YGsk)
                                 ((case-lambda
                                    ((g$t$8841$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8842$14YGsk)
                                         (if (if g$ls/false$8842$14YGsk
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8843$14YGsk)
                                                      (g$id?$7115$14YGsk
                                                        g$foo$8843$14YGsk)))
                                                   g$ls/false$8842$14YGsk))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8844$14YGsk)
                                                (g$id$8612$14YGsk
                                                  g$foo$8844$14YGsk
                                                  (g$stx->datum$7126$14YGsk
                                                    g$foo$8844$14YGsk)
                                                  '"?")))
                                             g$ls/false$8842$14YGsk)
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid syntax"
                                             g$t$8841$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8841$14YGsk
                                        'any))))
                                  g$t$8836$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$8836$14YGsk
                              '(any any any)))))
                        g$spec$8835$14YGsk))))
                  (g$get-clause$8616$14YGsk
                    (case-lambda
                      ((g$id$8826$14YGsk g$ls$8827$14YGsk)
                       ((case-lambda
                          ((g$t$8828$14YGsk)
                           ((case-lambda
                              ((g$ls/false$8829$14YGsk)
                               (if g$ls/false$8829$14YGsk
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$8829$14YGsk)
                                 ((case-lambda
                                    ((g$t$8830$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8831$14YGsk)
                                         (if g$ls/false$8831$14YGsk
                                           (apply
                                             (case-lambda
                                               ((g$x$8832$14YGsk
                                                  g$rest$8833$14YGsk
                                                  g$ls$8834$14YGsk)
                                                (if (g$free-id=?$7119$14YGsk
                                                      (g$bless$7356$14YGsk
                                                        g$id$8826$14YGsk)
                                                      g$x$8832$14YGsk)
                                                  (cons
                                                    g$x$8832$14YGsk
                                                    g$rest$8833$14YGsk)
                                                  (g$get-clause$8616$14YGsk
                                                    g$id$8826$14YGsk
                                                    g$ls$8834$14YGsk))))
                                             g$ls/false$8831$14YGsk)
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid syntax"
                                             g$t$8830$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8830$14YGsk
                                        '((any . any) . any)))))
                                  g$t$8828$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$8828$14YGsk
                              '()))))
                        g$ls$8827$14YGsk))))
                  (g$foo-rtd-code$8617$14YGsk
                    (case-lambda
                      ((g$name$8785$14YGsk
                         g$clause*$8786$14YGsk
                         g$parent-rtd-code$8787$14YGsk)
                       (letrec* ((g$convert-field-spec*$8788$14YGsk
                                   (case-lambda
                                     ((g$ls$8813$14YGsk)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$8814$14YGsk)
                                                ((case-lambda
                                                   ((g$t$8815$14YGsk)
                                                    ((case-lambda
                                                       ((g$ls/false$8816$14YGsk)
                                                        (if g$ls/false$8816$14YGsk
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$8817$14YGsk
                                                                 g$rest$8818$14YGsk)
                                                               (list
                                                                 'mutable
                                                                 g$name$8817$14YGsk)))
                                                            g$ls/false$8816$14YGsk)
                                                          ((case-lambda
                                                             ((g$t$8819$14YGsk)
                                                              ((case-lambda
                                                                 ((g$ls/false$8820$14YGsk)
                                                                  (if g$ls/false$8820$14YGsk
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$8821$14YGsk
                                                                           g$rest$8822$14YGsk)
                                                                         (list
                                                                           'immutable
                                                                           g$name$8821$14YGsk)))
                                                                      g$ls/false$8820$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$t$8823$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8824$14YGsk)
                                                                            (if g$ls/false$8824$14YGsk
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$8825$14YGsk)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$8825$14YGsk)))
                                                                                g$ls/false$8824$14YGsk)
                                                                              (g$syntax-violation$7502$14YGsk
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8823$14YGsk))))
                                                                         (g$syntax-dispatch$7393$14YGsk
                                                                           g$t$8823$14YGsk
                                                                           'any))))
                                                                     g$t$8819$14YGsk))))
                                                               (g$syntax-dispatch$7393$14YGsk
                                                                 g$t$8819$14YGsk
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$8815$14YGsk))))
                                                     (g$syntax-dispatch$7393$14YGsk
                                                       g$t$8815$14YGsk
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$8814$14YGsk)))
                                             g$ls$8813$14YGsk))))))
                         ((case-lambda
                            ((g$uid-code$8789$14YGsk
                               g$sealed?$8790$14YGsk
                               g$opaque?$8791$14YGsk
                               g$fields$8792$14YGsk)
                             (g$bless$7356$14YGsk
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8785$14YGsk)
                                 g$parent-rtd-code$8787$14YGsk
                                 g$uid-code$8789$14YGsk
                                 g$sealed?$8790$14YGsk
                                 g$opaque?$8791$14YGsk
                                 g$fields$8792$14YGsk))))
                          ((case-lambda
                             ((g$t$8793$14YGsk)
                              ((case-lambda
                                 ((g$ls/false$8794$14YGsk)
                                  (if g$ls/false$8794$14YGsk
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$8794$14YGsk)
                                    ((case-lambda
                                       ((g$t$8795$14YGsk)
                                        ((case-lambda
                                           ((g$ls/false$8796$14YGsk)
                                            (if g$ls/false$8796$14YGsk
                                              (apply
                                                (case-lambda
                                                  ((g$uid$8797$14YGsk)
                                                   (list
                                                     'quote
                                                     g$uid$8797$14YGsk)))
                                                g$ls/false$8796$14YGsk)
                                              ((case-lambda
                                                 ((g$t$8798$14YGsk)
                                                  ((case-lambda
                                                     ((g$ls/false$8799$14YGsk)
                                                      (if g$ls/false$8799$14YGsk
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$8799$14YGsk)
                                                        (g$syntax-violation$7502$14YGsk
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$8798$14YGsk))))
                                                   (g$syntax-dispatch$7393$14YGsk
                                                     g$t$8798$14YGsk
                                                     '_))))
                                               g$t$8795$14YGsk))))
                                         (g$syntax-dispatch$7393$14YGsk
                                           g$t$8795$14YGsk
                                           '(_ any)))))
                                     g$t$8793$14YGsk))))
                               (g$syntax-dispatch$7393$14YGsk
                                 g$t$8793$14YGsk
                                 '(_)))))
                           (g$get-clause$8616$14YGsk
                             'nongenerative
                             g$clause*$8786$14YGsk))
                          ((case-lambda
                             ((g$t$8800$14YGsk)
                              ((case-lambda
                                 ((g$ls/false$8801$14YGsk)
                                  (if g$ls/false$8801$14YGsk
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8801$14YGsk)
                                    ((case-lambda
                                       ((g$t$8802$14YGsk)
                                        ((case-lambda
                                           ((g$ls/false$8803$14YGsk)
                                            (if g$ls/false$8803$14YGsk
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8803$14YGsk)
                                              (g$syntax-violation$7502$14YGsk
                                                '#f
                                                '"invalid syntax"
                                                g$t$8802$14YGsk))))
                                         (g$syntax-dispatch$7393$14YGsk
                                           g$t$8802$14YGsk
                                           '_))))
                                     g$t$8800$14YGsk))))
                               (g$syntax-dispatch$7393$14YGsk
                                 g$t$8800$14YGsk
                                 '(_ #(atom #t))))))
                           (g$get-clause$8616$14YGsk
                             'sealed
                             g$clause*$8786$14YGsk))
                          ((case-lambda
                             ((g$t$8804$14YGsk)
                              ((case-lambda
                                 ((g$ls/false$8805$14YGsk)
                                  (if g$ls/false$8805$14YGsk
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8805$14YGsk)
                                    ((case-lambda
                                       ((g$t$8806$14YGsk)
                                        ((case-lambda
                                           ((g$ls/false$8807$14YGsk)
                                            (if g$ls/false$8807$14YGsk
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8807$14YGsk)
                                              (g$syntax-violation$7502$14YGsk
                                                '#f
                                                '"invalid syntax"
                                                g$t$8806$14YGsk))))
                                         (g$syntax-dispatch$7393$14YGsk
                                           g$t$8806$14YGsk
                                           '_))))
                                     g$t$8804$14YGsk))))
                               (g$syntax-dispatch$7393$14YGsk
                                 g$t$8804$14YGsk
                                 '(_ #(atom #t))))))
                           (g$get-clause$8616$14YGsk
                             'opaque
                             g$clause*$8786$14YGsk))
                          ((case-lambda
                             ((g$t$8808$14YGsk)
                              ((case-lambda
                                 ((g$ls/false$8809$14YGsk)
                                  (if g$ls/false$8809$14YGsk
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$8810$14YGsk)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8788$14YGsk
                                             g$field-spec*$8810$14YGsk))))
                                      g$ls/false$8809$14YGsk)
                                    ((case-lambda
                                       ((g$t$8811$14YGsk)
                                        ((case-lambda
                                           ((g$ls/false$8812$14YGsk)
                                            (if g$ls/false$8812$14YGsk
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$8812$14YGsk)
                                              (g$syntax-violation$7502$14YGsk
                                                '#f
                                                '"invalid syntax"
                                                g$t$8811$14YGsk))))
                                         (g$syntax-dispatch$7393$14YGsk
                                           g$t$8811$14YGsk
                                           '_))))
                                     g$t$8808$14YGsk))))
                               (g$syntax-dispatch$7393$14YGsk
                                 g$t$8808$14YGsk
                                 '(_ . each-any)))))
                           (g$get-clause$8616$14YGsk
                             'fields
                             g$clause*$8786$14YGsk)))))))
                  (g$parent-rtd-code$8618$14YGsk
                    (case-lambda
                      ((g$clause*$8773$14YGsk)
                       ((case-lambda
                          ((g$t$8774$14YGsk)
                           ((case-lambda
                              ((g$ls/false$8775$14YGsk)
                               (if g$ls/false$8775$14YGsk
                                 (apply
                                   (case-lambda
                                     ((g$name$8776$14YGsk)
                                      (list
                                        'record-type-descriptor
                                        g$name$8776$14YGsk)))
                                   g$ls/false$8775$14YGsk)
                                 ((case-lambda
                                    ((g$t$8777$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8778$14YGsk)
                                         (if g$ls/false$8778$14YGsk
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8779$14YGsk)
                                                    ((case-lambda
                                                       ((g$ls/false$8780$14YGsk)
                                                        (if g$ls/false$8780$14YGsk
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8781$14YGsk
                                                                 g$rcd$8782$14YGsk)
                                                               g$rtd$8781$14YGsk))
                                                            g$ls/false$8780$14YGsk)
                                                          ((case-lambda
                                                             ((g$t$8783$14YGsk)
                                                              ((case-lambda
                                                                 ((g$ls/false$8784$14YGsk)
                                                                  (if g$ls/false$8784$14YGsk
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8784$14YGsk)
                                                                    (g$syntax-violation$7502$14YGsk
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8783$14YGsk))))
                                                               (g$syntax-dispatch$7393$14YGsk
                                                                 g$t$8783$14YGsk
                                                                 '#(atom #f)))))
                                                           g$t$8779$14YGsk))))
                                                     (g$syntax-dispatch$7393$14YGsk
                                                       g$t$8779$14YGsk
                                                       '(_ any any)))))
                                                 (g$get-clause$8616$14YGsk
                                                   'parent-rtd
                                                   g$clause*$8773$14YGsk))))
                                             g$ls/false$8778$14YGsk)
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid syntax"
                                             g$t$8777$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8777$14YGsk
                                        '#(atom #f)))))
                                  g$t$8774$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$8774$14YGsk
                              '(_ any)))))
                        (g$get-clause$8616$14YGsk
                          'parent
                          g$clause*$8773$14YGsk)))))
                  (g$parent-rcd-code$8619$14YGsk
                    (case-lambda
                      ((g$clause*$8761$14YGsk)
                       ((case-lambda
                          ((g$t$8762$14YGsk)
                           ((case-lambda
                              ((g$ls/false$8763$14YGsk)
                               (if g$ls/false$8763$14YGsk
                                 (apply
                                   (case-lambda
                                     ((g$name$8764$14YGsk)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$8764$14YGsk)))
                                   g$ls/false$8763$14YGsk)
                                 ((case-lambda
                                    ((g$t$8765$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8766$14YGsk)
                                         (if g$ls/false$8766$14YGsk
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8767$14YGsk)
                                                    ((case-lambda
                                                       ((g$ls/false$8768$14YGsk)
                                                        (if g$ls/false$8768$14YGsk
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8769$14YGsk
                                                                 g$rcd$8770$14YGsk)
                                                               g$rcd$8770$14YGsk))
                                                            g$ls/false$8768$14YGsk)
                                                          ((case-lambda
                                                             ((g$t$8771$14YGsk)
                                                              ((case-lambda
                                                                 ((g$ls/false$8772$14YGsk)
                                                                  (if g$ls/false$8772$14YGsk
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8772$14YGsk)
                                                                    (g$syntax-violation$7502$14YGsk
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8771$14YGsk))))
                                                               (g$syntax-dispatch$7393$14YGsk
                                                                 g$t$8771$14YGsk
                                                                 '#(atom #f)))))
                                                           g$t$8767$14YGsk))))
                                                     (g$syntax-dispatch$7393$14YGsk
                                                       g$t$8767$14YGsk
                                                       '(_ any any)))))
                                                 (g$get-clause$8616$14YGsk
                                                   'parent-rtd
                                                   g$clause*$8761$14YGsk))))
                                             g$ls/false$8766$14YGsk)
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid syntax"
                                             g$t$8765$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8765$14YGsk
                                        '#(atom #f)))))
                                  g$t$8762$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$8762$14YGsk
                              '(_ any)))))
                        (g$get-clause$8616$14YGsk
                          'parent
                          g$clause*$8761$14YGsk)))))
                  (g$foo-rcd-code$8620$14YGsk
                    (case-lambda
                      ((g$clause*$8757$14YGsk
                         g$foo-rtd$8758$14YGsk
                         g$protocol$8759$14YGsk
                         g$parent-rcd-code$8760$14YGsk)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$8758$14YGsk
                         g$parent-rcd-code$8760$14YGsk
                         g$protocol$8759$14YGsk))))
                  (g$get-protocol-code$8621$14YGsk
                    (case-lambda
                      ((g$clause*$8751$14YGsk)
                       ((case-lambda
                          ((g$t$8752$14YGsk)
                           ((case-lambda
                              ((g$ls/false$8753$14YGsk)
                               (if g$ls/false$8753$14YGsk
                                 (apply
                                   (case-lambda
                                     ((g$expr$8754$14YGsk) g$expr$8754$14YGsk))
                                   g$ls/false$8753$14YGsk)
                                 ((case-lambda
                                    ((g$t$8755$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8756$14YGsk)
                                         (if g$ls/false$8756$14YGsk
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8756$14YGsk)
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid syntax"
                                             g$t$8755$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8755$14YGsk
                                        '_))))
                                  g$t$8752$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$8752$14YGsk
                              '(_ any)))))
                        (g$get-clause$8616$14YGsk
                          'protocol
                          g$clause*$8751$14YGsk)))))
                  (g$get-fields$8622$14YGsk
                    (case-lambda
                      ((g$clause*$8742$14YGsk)
                       ((case-lambda
                          ((g$t$8743$14YGsk)
                           ((case-lambda
                              ((g$ls/false$8744$14YGsk)
                               (if g$ls/false$8744$14YGsk
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8744$14YGsk)
                                 ((case-lambda
                                    ((g$t$8745$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8746$14YGsk)
                                         (if g$ls/false$8746$14YGsk
                                           (apply
                                             (case-lambda
                                               ((g$f*$8747$14YGsk)
                                                g$f*$8747$14YGsk))
                                             g$ls/false$8746$14YGsk)
                                           ((case-lambda
                                              ((g$t$8748$14YGsk)
                                               ((case-lambda
                                                  ((g$ls/false$8749$14YGsk)
                                                   (if g$ls/false$8749$14YGsk
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8750$14YGsk)
                                                          (g$get-fields$8622$14YGsk
                                                            g$rest$8750$14YGsk)))
                                                       g$ls/false$8749$14YGsk)
                                                     (g$syntax-violation$7502$14YGsk
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8748$14YGsk))))
                                                (g$syntax-dispatch$7393$14YGsk
                                                  g$t$8748$14YGsk
                                                  '(_ . any)))))
                                            g$t$8745$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8745$14YGsk
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8743$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$8743$14YGsk
                              '()))))
                        g$clause*$8742$14YGsk))))
                  (g$get-mutator-indices$8623$14YGsk
                    (case-lambda
                      ((g$fields$8730$14YGsk)
                       ((letrec ((g$f$8731$14YGsk
                                   (case-lambda
                                     ((g$fields$8732$14YGsk g$i$8733$14YGsk)
                                      ((case-lambda
                                         ((g$t$8734$14YGsk)
                                          ((case-lambda
                                             ((g$ls/false$8735$14YGsk)
                                              (if g$ls/false$8735$14YGsk
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8735$14YGsk)
                                                ((case-lambda
                                                   ((g$t$8736$14YGsk)
                                                    ((case-lambda
                                                       ((g$ls/false$8737$14YGsk)
                                                        (if g$ls/false$8737$14YGsk
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8738$14YGsk)
                                                               (cons
                                                                 g$i$8733$14YGsk
                                                                 (g$f$8731$14YGsk
                                                                   g$rest$8738$14YGsk
                                                                   (+ g$i$8733$14YGsk
                                                                      '1)))))
                                                            g$ls/false$8737$14YGsk)
                                                          ((case-lambda
                                                             ((g$t$8739$14YGsk)
                                                              ((case-lambda
                                                                 ((g$ls/false$8740$14YGsk)
                                                                  (if g$ls/false$8740$14YGsk
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8741$14YGsk)
                                                                         (g$f$8731$14YGsk
                                                                           g$rest$8741$14YGsk
                                                                           (+ g$i$8733$14YGsk
                                                                              '1))))
                                                                      g$ls/false$8740$14YGsk)
                                                                    (g$syntax-violation$7502$14YGsk
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8739$14YGsk))))
                                                               (g$syntax-dispatch$7393$14YGsk
                                                                 g$t$8739$14YGsk
                                                                 '(_ . any)))))
                                                           g$t$8736$14YGsk))))
                                                     (g$syntax-dispatch$7393$14YGsk
                                                       g$t$8736$14YGsk
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8734$14YGsk))))
                                           (g$syntax-dispatch$7393$14YGsk
                                             g$t$8734$14YGsk
                                             '()))))
                                       g$fields$8732$14YGsk)))))
                          g$f$8731$14YGsk)
                        g$fields$8730$14YGsk
                        '0))))
                  (g$get-mutators$8624$14YGsk
                    (case-lambda
                      ((g$foo$8709$14YGsk g$fields$8710$14YGsk)
                       (letrec* ((g$gen-name$8711$14YGsk
                                   (case-lambda
                                     ((g$x$8729$14YGsk)
                                      (g$datum->syntax$7504$14YGsk
                                        g$foo$8709$14YGsk
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7505$14YGsk
                                                g$foo$8709$14YGsk))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7505$14YGsk
                                                g$x$8729$14YGsk))
                                            '"-set!")))))))
                         ((letrec ((g$f$8712$14YGsk
                                     (case-lambda
                                       ((g$fields$8713$14YGsk)
                                        ((case-lambda
                                           ((g$t$8714$14YGsk)
                                            ((case-lambda
                                               ((g$ls/false$8715$14YGsk)
                                                (if g$ls/false$8715$14YGsk
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8715$14YGsk)
                                                  ((case-lambda
                                                     ((g$t$8716$14YGsk)
                                                      ((case-lambda
                                                         ((g$ls/false$8717$14YGsk)
                                                          (if g$ls/false$8717$14YGsk
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8718$14YGsk
                                                                   g$accessor$8719$14YGsk
                                                                   g$mutator$8720$14YGsk
                                                                   g$rest$8721$14YGsk)
                                                                 (cons
                                                                   g$mutator$8720$14YGsk
                                                                   (g$f$8712$14YGsk
                                                                     g$rest$8721$14YGsk))))
                                                              g$ls/false$8717$14YGsk)
                                                            ((case-lambda
                                                               ((g$t$8722$14YGsk)
                                                                ((case-lambda
                                                                   ((g$ls/false$8723$14YGsk)
                                                                    (if g$ls/false$8723$14YGsk
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8724$14YGsk
                                                                             g$rest$8725$14YGsk)
                                                                           (cons
                                                                             (g$gen-name$8711$14YGsk
                                                                               g$name$8724$14YGsk)
                                                                             (g$f$8712$14YGsk
                                                                               g$rest$8725$14YGsk))))
                                                                        g$ls/false$8723$14YGsk)
                                                                      ((case-lambda
                                                                         ((g$t$8726$14YGsk)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8727$14YGsk)
                                                                              (if g$ls/false$8727$14YGsk
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8728$14YGsk)
                                                                                     (g$f$8712$14YGsk
                                                                                       g$rest$8728$14YGsk)))
                                                                                  g$ls/false$8727$14YGsk)
                                                                                (g$syntax-violation$7502$14YGsk
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8726$14YGsk))))
                                                                           (g$syntax-dispatch$7393$14YGsk
                                                                             g$t$8726$14YGsk
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8722$14YGsk))))
                                                                 (g$syntax-dispatch$7393$14YGsk
                                                                   g$t$8722$14YGsk
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8716$14YGsk))))
                                                       (g$syntax-dispatch$7393$14YGsk
                                                         g$t$8716$14YGsk
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8714$14YGsk))))
                                             (g$syntax-dispatch$7393$14YGsk
                                               g$t$8714$14YGsk
                                               '()))))
                                         g$fields$8713$14YGsk)))))
                            g$f$8712$14YGsk)
                          g$fields$8710$14YGsk)))))
                  (g$get-accessors$8625$14YGsk
                    (case-lambda
                      ((g$foo$8675$14YGsk g$fields$8676$14YGsk)
                       (letrec* ((g$gen-name$8677$14YGsk
                                   (case-lambda
                                     ((g$x$8708$14YGsk)
                                      (g$datum->syntax$7504$14YGsk
                                        g$foo$8675$14YGsk
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7505$14YGsk
                                                g$foo$8675$14YGsk))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7505$14YGsk
                                                g$x$8708$14YGsk)))))))))
                         (map (case-lambda
                                ((g$field$8678$14YGsk)
                                 ((case-lambda
                                    ((g$t$8679$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8680$14YGsk)
                                         (if (if g$ls/false$8680$14YGsk
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8681$14YGsk
                                                        g$accessor$8682$14YGsk
                                                        g$mutator$8683$14YGsk)
                                                      (g$id?$7115$14YGsk
                                                        g$accessor$8682$14YGsk)))
                                                   g$ls/false$8680$14YGsk))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8684$14YGsk
                                                  g$accessor$8685$14YGsk
                                                  g$mutator$8686$14YGsk)
                                                g$accessor$8685$14YGsk))
                                             g$ls/false$8680$14YGsk)
                                           ((case-lambda
                                              ((g$t$8687$14YGsk)
                                               ((case-lambda
                                                  ((g$ls/false$8688$14YGsk)
                                                   (if (if g$ls/false$8688$14YGsk
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8689$14YGsk
                                                                  g$accessor$8690$14YGsk)
                                                                (g$id?$7115$14YGsk
                                                                  g$accessor$8690$14YGsk)))
                                                             g$ls/false$8688$14YGsk))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8691$14YGsk
                                                            g$accessor$8692$14YGsk)
                                                          g$accessor$8692$14YGsk))
                                                       g$ls/false$8688$14YGsk)
                                                     ((case-lambda
                                                        ((g$t$8693$14YGsk)
                                                         ((case-lambda
                                                            ((g$ls/false$8694$14YGsk)
                                                             (if (if g$ls/false$8694$14YGsk
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8695$14YGsk)
                                                                          (g$id?$7115$14YGsk
                                                                            g$name$8695$14YGsk)))
                                                                       g$ls/false$8694$14YGsk))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8696$14YGsk)
                                                                    (g$gen-name$8677$14YGsk
                                                                      g$name$8696$14YGsk)))
                                                                 g$ls/false$8694$14YGsk)
                                                               ((case-lambda
                                                                  ((g$t$8697$14YGsk)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8698$14YGsk)
                                                                       (if (if g$ls/false$8698$14YGsk
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8699$14YGsk)
                                                                                    (g$id?$7115$14YGsk
                                                                                      g$name$8699$14YGsk)))
                                                                                 g$ls/false$8698$14YGsk))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8700$14YGsk)
                                                                              (g$gen-name$8677$14YGsk
                                                                                g$name$8700$14YGsk)))
                                                                           g$ls/false$8698$14YGsk)
                                                                         ((case-lambda
                                                                            ((g$t$8701$14YGsk)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8702$14YGsk)
                                                                                 (if (if g$ls/false$8702$14YGsk
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8703$14YGsk)
                                                                                              (g$id?$7115$14YGsk
                                                                                                g$name$8703$14YGsk)))
                                                                                           g$ls/false$8702$14YGsk))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8704$14YGsk)
                                                                                        (g$gen-name$8677$14YGsk
                                                                                          g$name$8704$14YGsk)))
                                                                                     g$ls/false$8702$14YGsk)
                                                                                   ((case-lambda
                                                                                      ((g$t$8705$14YGsk)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8706$14YGsk)
                                                                                           (if g$ls/false$8706$14YGsk
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8707$14YGsk)
                                                                                                  (g$syntax-violation$7502$14YGsk
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8678$14YGsk)))
                                                                                               g$ls/false$8706$14YGsk)
                                                                                             (g$syntax-violation$7502$14YGsk
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8705$14YGsk))))
                                                                                        (g$syntax-dispatch$7393$14YGsk
                                                                                          g$t$8705$14YGsk
                                                                                          'any))))
                                                                                    g$t$8701$14YGsk))))
                                                                              (g$syntax-dispatch$7393$14YGsk
                                                                                g$t$8701$14YGsk
                                                                                'any))))
                                                                          g$t$8697$14YGsk))))
                                                                    (g$syntax-dispatch$7393$14YGsk
                                                                      g$t$8697$14YGsk
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8693$14YGsk))))
                                                          (g$syntax-dispatch$7393$14YGsk
                                                            g$t$8693$14YGsk
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8687$14YGsk))))
                                                (g$syntax-dispatch$7393$14YGsk
                                                  g$t$8687$14YGsk
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8679$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8679$14YGsk
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8678$14YGsk)))
                              g$fields$8676$14YGsk)))))
                  (g$enumerate$8626$14YGsk
                    (case-lambda
                      ((g$ls$8671$14YGsk)
                       ((letrec ((g$f$8672$14YGsk
                                   (case-lambda
                                     ((g$ls$8673$14YGsk g$i$8674$14YGsk)
                                      (if (null? g$ls$8673$14YGsk)
                                        '()
                                        (cons
                                          g$i$8674$14YGsk
                                          (g$f$8672$14YGsk
                                            (cdr g$ls$8673$14YGsk)
                                            (+ g$i$8674$14YGsk '1))))))))
                          g$f$8672$14YGsk)
                        g$ls$8671$14YGsk
                        '0))))
                  (g$do-define-record$8627$14YGsk
                    (case-lambda
                      ((g$namespec$8651$14YGsk g$clause*$8652$14YGsk)
                       ((case-lambda
                          ((g$foo$8653$14YGsk)
                           ((case-lambda
                              ((g$foo-rtd$8654$14YGsk)
                               ((case-lambda
                                  ((g$foo-rcd$8655$14YGsk)
                                   ((case-lambda
                                      ((g$protocol$8656$14YGsk)
                                       ((case-lambda
                                          ((g$make-foo$8657$14YGsk)
                                           ((case-lambda
                                              ((g$fields$8658$14YGsk)
                                               ((case-lambda
                                                  ((g$idx*$8659$14YGsk)
                                                   ((case-lambda
                                                      ((g$foo-x*$8660$14YGsk)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8661$14YGsk)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8662$14YGsk)
                                                               ((case-lambda
                                                                  ((g$foo?$8663$14YGsk)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8664$14YGsk)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8665$14YGsk)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8666$14YGsk)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7356$14YGsk
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8654$14YGsk
                                                                                           g$foo-rtd-code$8664$14YGsk)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8656$14YGsk
                                                                                             g$protocol-code$8666$14YGsk)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8655$14YGsk
                                                                                               g$foo-rcd-code$8665$14YGsk)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8653$14YGsk
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8654$14YGsk)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8655$14YGsk)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8663$14YGsk
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8654$14YGsk))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8657$14YGsk
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8655$14YGsk))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8667$14YGsk
                                                                                                               g$idx$8668$14YGsk)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8667$14YGsk
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8654$14YGsk
                                                                                                                 g$idx$8668$14YGsk))))
                                                                                                          g$foo-x*$8660$14YGsk
                                                                                                          g$idx*$8659$14YGsk)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8669$14YGsk
                                                                                                               g$idx$8670$14YGsk)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8669$14YGsk
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8654$14YGsk
                                                                                                                 g$idx$8670$14YGsk))))
                                                                                                          g$set-foo-x!*$8661$14YGsk
                                                                                                          g$set-foo-idx*$8662$14YGsk)))))))))))))))
                                                                            (g$get-protocol-code$8621$14YGsk
                                                                              g$clause*$8652$14YGsk))))
                                                                        (g$foo-rcd-code$8620$14YGsk
                                                                          g$clause*$8652$14YGsk
                                                                          g$foo-rtd$8654$14YGsk
                                                                          g$protocol$8656$14YGsk
                                                                          (g$parent-rcd-code$8619$14YGsk
                                                                            g$clause*$8652$14YGsk)))))
                                                                    (g$foo-rtd-code$8617$14YGsk
                                                                      g$foo$8653$14YGsk
                                                                      g$clause*$8652$14YGsk
                                                                      (g$parent-rtd-code$8618$14YGsk
                                                                        g$clause*$8652$14YGsk)))))
                                                                (g$get-record-predicate-name$8615$14YGsk
                                                                  g$namespec$8651$14YGsk))))
                                                            (g$get-mutator-indices$8623$14YGsk
                                                              g$fields$8658$14YGsk))))
                                                        (g$get-mutators$8624$14YGsk
                                                          g$foo$8653$14YGsk
                                                          g$fields$8658$14YGsk))))
                                                    (g$get-accessors$8625$14YGsk
                                                      g$foo$8653$14YGsk
                                                      g$fields$8658$14YGsk))))
                                                (g$enumerate$8626$14YGsk
                                                  g$fields$8658$14YGsk))))
                                            (g$get-fields$8622$14YGsk
                                              g$clause*$8652$14YGsk))))
                                        (g$get-record-constructor-name$8614$14YGsk
                                          g$namespec$8651$14YGsk))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8613$14YGsk
                          g$namespec$8651$14YGsk)))))
                  (g$verify-clauses$8628$14YGsk
                    (case-lambda
                      ((g$x$8633$14YGsk g$cls*$8634$14YGsk)
                       (letrec* ((g$valid-kwds$8635$14YGsk
                                   (map g$bless$7356$14YGsk
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8636$14YGsk
                                   (case-lambda
                                     ((g$x$8648$14YGsk g$ls$8649$14YGsk)
                                      (if (pair? g$ls$8649$14YGsk)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8650$14YGsk)
                                              (if g$t$8650$14YGsk
                                                g$t$8650$14YGsk
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8636$14YGsk
                                                    g$x$8648$14YGsk
                                                    (cdr g$ls$8649$14YGsk))))))
                                           (g$free-id=?$7119$14YGsk
                                             g$x$8648$14YGsk
                                             (car g$ls$8649$14YGsk))))
                                        '#f)))))
                         ((letrec ((g$f$8637$14YGsk
                                     (case-lambda
                                       ((g$cls*$8638$14YGsk g$seen*$8639$14YGsk)
                                        (if (not (null? g$cls*$8638$14YGsk))
                                          ((case-lambda
                                             ((g$t$8640$14YGsk)
                                              ((case-lambda
                                                 ((g$ls/false$8641$14YGsk)
                                                  (if g$ls/false$8641$14YGsk
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8642$14YGsk
                                                           g$rest$8643$14YGsk)
                                                         (if ((case-lambda
                                                                ((g$t$8644$14YGsk)
                                                                 (if g$t$8644$14YGsk
                                                                   g$t$8644$14YGsk
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8636$14YGsk
                                                                            g$kwd$8642$14YGsk
                                                                            g$valid-kwds$8635$14YGsk))))))
                                                              (not (g$id?$7115$14YGsk
                                                                     g$kwd$8642$14YGsk)))
                                                           (g$syntax-violation$7502$14YGsk
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8642$14YGsk)
                                                           (if (g$bound-id-member?$7122$14YGsk
                                                                 g$kwd$8642$14YGsk
                                                                 g$seen*$8639$14YGsk)
                                                             (g$syntax-violation$7502$14YGsk
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8633$14YGsk
                                                               g$kwd$8642$14YGsk)
                                                             (g$f$8637$14YGsk
                                                               (cdr g$cls*$8638$14YGsk)
                                                               (cons
                                                                 g$kwd$8642$14YGsk
                                                                 g$seen*$8639$14YGsk))))))
                                                      g$ls/false$8641$14YGsk)
                                                    ((case-lambda
                                                       ((g$t$8645$14YGsk)
                                                        ((case-lambda
                                                           ((g$ls/false$8646$14YGsk)
                                                            (if g$ls/false$8646$14YGsk
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8647$14YGsk)
                                                                   (g$syntax-violation$7502$14YGsk
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8647$14YGsk)))
                                                                g$ls/false$8646$14YGsk)
                                                              (g$syntax-violation$7502$14YGsk
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8645$14YGsk))))
                                                         (g$syntax-dispatch$7393$14YGsk
                                                           g$t$8645$14YGsk
                                                           'any))))
                                                     g$t$8640$14YGsk))))
                                               (g$syntax-dispatch$7393$14YGsk
                                                 g$t$8640$14YGsk
                                                 '(any . any)))))
                                           (car g$cls*$8638$14YGsk))
                                          (void))))))
                            g$f$8637$14YGsk)
                          g$cls*$8634$14YGsk
                          '()))))))
          ((case-lambda
             ((g$t$8629$14YGsk)
              ((case-lambda
                 ((g$ls/false$8630$14YGsk)
                  (if g$ls/false$8630$14YGsk
                    (apply
                      (case-lambda
                        ((g$namespec$8631$14YGsk g$clause*$8632$14YGsk)
                         (begin
                           (g$verify-clauses$8628$14YGsk
                             g$x$8611$14YGsk
                             g$clause*$8632$14YGsk)
                           (g$do-define-record$8627$14YGsk
                             g$namespec$8631$14YGsk
                             g$clause*$8632$14YGsk))))
                      g$ls/false$8630$14YGsk)
                    (g$syntax-violation$7502$14YGsk
                      '#f
                      '"invalid syntax"
                      g$t$8629$14YGsk))))
               (g$syntax-dispatch$7393$14YGsk
                 g$t$8629$14YGsk
                 '(_ any . each-any)))))
           g$x$8611$14YGsk)))))
   (g$define-condition-type-macro$7388$14YGsk
     g$define-condition-type-macro$10824$14YGsk
     (case-lambda
       ((g$x$8867$14YGsk)
        (letrec* ((g$mkname$8868$14YGsk
                    (case-lambda
                      ((g$name$8891$14YGsk g$suffix$8892$14YGsk)
                       (g$datum->syntax$7504$14YGsk
                         g$name$8891$14YGsk
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7505$14YGsk g$name$8891$14YGsk))
                             g$suffix$8892$14YGsk)))))))
          ((case-lambda
             ((g$t$8869$14YGsk)
              ((case-lambda
                 ((g$ls/false$8870$14YGsk)
                  (if (if g$ls/false$8870$14YGsk
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$8871$14YGsk
                                 g$name$8872$14YGsk
                                 g$super$8873$14YGsk
                                 g$constructor$8874$14YGsk
                                 g$predicate$8875$14YGsk
                                 g$field*$8876$14YGsk
                                 g$accessor*$8877$14YGsk)
                               (if (g$id?$7115$14YGsk g$name$8872$14YGsk)
                                 (if (g$id?$7115$14YGsk g$super$8873$14YGsk)
                                   (if (g$id?$7115$14YGsk
                                         g$constructor$8874$14YGsk)
                                     (if (g$id?$7115$14YGsk
                                           g$predicate$8875$14YGsk)
                                       (if (g$for-all$5356$14YGsk
                                             g$id?$7115$14YGsk
                                             g$field*$8876$14YGsk)
                                         (begin
                                           '#f
                                           (g$for-all$5356$14YGsk
                                             g$id?$7115$14YGsk
                                             g$accessor*$8877$14YGsk))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$8870$14YGsk))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$8878$14YGsk
                           g$name$8879$14YGsk
                           g$super$8880$14YGsk
                           g$constructor$8881$14YGsk
                           g$predicate$8882$14YGsk
                           g$field*$8883$14YGsk
                           g$accessor*$8884$14YGsk)
                         ((case-lambda
                            ((g$aux-accessor*$8885$14YGsk)
                             (g$bless$7356$14YGsk
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$8879$14YGsk
                                         g$constructor$8881$14YGsk
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$8880$14YGsk)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$8886$14YGsk
                                                       g$aux$8887$14YGsk)
                                                     (list
                                                       'immutable
                                                       g$field$8886$14YGsk
                                                       g$aux$8887$14YGsk)))
                                                  g$field*$8883$14YGsk
                                                  g$aux-accessor*$8885$14YGsk))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$8882$14YGsk
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$8879$14YGsk)))
                                     (map (case-lambda
                                            ((g$accessor$8888$14YGsk
                                               g$aux$8889$14YGsk)
                                             (list
                                               'define
                                               g$accessor$8888$14YGsk
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$8879$14YGsk)
                                                 g$aux$8889$14YGsk))))
                                          g$accessor*$8884$14YGsk
                                          g$aux-accessor*$8885$14YGsk)))))))
                          (map (case-lambda ((g$x$8890$14YGsk) (gensym)))
                               g$accessor*$8884$14YGsk))))
                      g$ls/false$8870$14YGsk)
                    (g$syntax-violation$7502$14YGsk
                      '#f
                      '"invalid syntax"
                      g$t$8869$14YGsk))))
               (g$syntax-dispatch$7393$14YGsk
                 g$t$8869$14YGsk
                 '(any any any any any . #(each (any any)))))))
           g$x$8867$14YGsk)))))
   (g$incorrect-usage-macro$7389$14YGsk
     g$incorrect-usage-macro$10825$14YGsk
     (case-lambda
       ((g$e$8893$14YGsk)
        (g$syntax-violation$7502$14YGsk
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$8893$14YGsk))))
   (g$parameterize-macro$7390$14YGsk
     g$parameterize-macro$10826$14YGsk
     (case-lambda
       ((g$e$8894$14YGsk)
        ((case-lambda
           ((g$t$8895$14YGsk)
            ((case-lambda
               ((g$ls/false$8896$14YGsk)
                (if g$ls/false$8896$14YGsk
                  (apply
                    (case-lambda
                      ((g$b$8897$14YGsk g$b*$8898$14YGsk)
                       (g$bless$7356$14YGsk
                         (cons
                           'begin
                           (cons g$b$8897$14YGsk g$b*$8898$14YGsk)))))
                    g$ls/false$8896$14YGsk)
                  ((case-lambda
                     ((g$t$8899$14YGsk)
                      ((case-lambda
                         ((g$ls/false$8900$14YGsk)
                          (if g$ls/false$8900$14YGsk
                            (apply
                              (case-lambda
                                ((g$olhs*$8901$14YGsk
                                   g$orhs*$8902$14YGsk
                                   g$b$8903$14YGsk
                                   g$b*$8904$14YGsk)
                                 ((case-lambda
                                    ((g$lhs*$8905$14YGsk g$rhs*$8906$14YGsk)
                                     (g$bless$7356$14YGsk
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$8905$14YGsk
                                             g$rhs*$8906$14YGsk)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$8907$14YGsk
                                                               g$rhs$8908$14YGsk)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$8907$14YGsk)))
                                                               (list
                                                                 g$lhs$8907$14YGsk
                                                                 g$rhs$8908$14YGsk)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$8908$14YGsk
                                                                   '(t))))))
                                                          g$lhs*$8905$14YGsk
                                                          g$rhs*$8906$14YGsk)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$8903$14YGsk
                                                         g$b*$8904$14YGsk)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$8901$14YGsk
                                           g$orhs*$8902$14YGsk)))))
                                  (g$generate-temporaries$7492$14YGsk
                                    g$olhs*$8901$14YGsk)
                                  (g$generate-temporaries$7492$14YGsk
                                    g$orhs*$8902$14YGsk))))
                              g$ls/false$8900$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$8899$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$8899$14YGsk
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$8895$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$8895$14YGsk
               '(_ () any . each-any)))))
         g$e$8894$14YGsk))))
   (g$foreign-call-transformer$7391$14YGsk
     g$foreign-call-transformer$10827$14YGsk
     (case-lambda
       ((g$e$8909$14YGsk g$r$8910$14YGsk g$mr$8911$14YGsk)
        ((case-lambda
           ((g$t$8912$14YGsk)
            ((case-lambda
               ((g$ls/false$8913$14YGsk)
                (if g$ls/false$8913$14YGsk
                  (apply
                    (case-lambda
                      ((g$name$8914$14YGsk g$arg*$8915$14YGsk)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7411$14YGsk
                             g$name$8914$14YGsk
                             g$r$8910$14YGsk
                             g$mr$8911$14YGsk)
                           (g$chi-expr*$7409$14YGsk
                             g$arg*$8915$14YGsk
                             g$r$8910$14YGsk
                             g$mr$8911$14YGsk)))))
                    g$ls/false$8913$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$8912$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$8912$14YGsk
               '(_ any . each-any)))))
         g$e$8909$14YGsk))))
   (g$convert-pattern$7392$14YGsk
     g$convert-pattern$10828$14YGsk
     (case-lambda
       ((g$pattern$8916$14YGsk g$keys$8917$14YGsk)
        (letrec* ((g$cvt*$8918$14YGsk
                    (case-lambda
                      ((g$p*$8998$14YGsk g$n$8999$14YGsk g$ids$9000$14YGsk)
                       (if (null? g$p*$8998$14YGsk)
                         (values '() g$ids$9000$14YGsk)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$8918$14YGsk
                                (cdr g$p*$8998$14YGsk)
                                g$n$8999$14YGsk
                                g$ids$9000$14YGsk)))
                           (case-lambda
                             ((g$y$9003$14YGsk g$ids$9004$14YGsk)
                              ((case-lambda
                                 ((g$ids$9005$14YGsk g$y$9006$14YGsk)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$8919$14YGsk
                                         (car g$p*$8998$14YGsk)
                                         g$n$8999$14YGsk
                                         g$ids$9005$14YGsk)))
                                    (case-lambda
                                      ((g$x$9009$14YGsk g$ids$9010$14YGsk)
                                       ((case-lambda
                                          ((g$ids$9011$14YGsk g$x$9012$14YGsk)
                                           (values
                                             (cons
                                               g$x$9012$14YGsk
                                               g$y$9006$14YGsk)
                                             g$ids$9011$14YGsk)))
                                        g$ids$9010$14YGsk
                                        g$x$9009$14YGsk))))))
                               g$ids$9004$14YGsk
                               g$y$9003$14YGsk))))))))
                  (g$cvt$8919$14YGsk
                    (case-lambda
                      ((g$p$8920$14YGsk g$n$8921$14YGsk g$ids$8922$14YGsk)
                       ((case-lambda
                          ((g$t$8923$14YGsk)
                           ((case-lambda
                              ((g$ls/false$8924$14YGsk)
                               (if (if g$ls/false$8924$14YGsk
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$8925$14YGsk)
                                            (g$id?$7115$14YGsk
                                              g$id$8925$14YGsk)))
                                         g$ls/false$8924$14YGsk))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$8926$14YGsk)
                                      (if (g$bound-id-member?$7122$14YGsk
                                            g$p$8920$14YGsk
                                            g$keys$8917$14YGsk)
                                        (values
                                          (vector 'free-id g$p$8920$14YGsk)
                                          g$ids$8922$14YGsk)
                                        (if (g$free-id=?$7119$14YGsk
                                              g$p$8920$14YGsk
                                              (g$scheme-stx$7336$14YGsk '_))
                                          (values '_ g$ids$8922$14YGsk)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$8920$14YGsk
                                                g$n$8921$14YGsk)
                                              g$ids$8922$14YGsk))))))
                                   g$ls/false$8924$14YGsk)
                                 ((case-lambda
                                    ((g$t$8927$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$8928$14YGsk)
                                         (if (if g$ls/false$8928$14YGsk
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8929$14YGsk
                                                        g$dots$8930$14YGsk)
                                                      (g$ellipsis?$7394$14YGsk
                                                        g$dots$8930$14YGsk)))
                                                   g$ls/false$8928$14YGsk))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$8931$14YGsk
                                                  g$dots$8932$14YGsk)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$8919$14YGsk
                                                       g$p$8931$14YGsk
                                                       (+ g$n$8921$14YGsk '1)
                                                       g$ids$8922$14YGsk)))
                                                  (case-lambda
                                                    ((g$p$8935$14YGsk
                                                       g$ids$8936$14YGsk)
                                                     ((case-lambda
                                                        ((g$ids$8937$14YGsk
                                                           g$p$8938$14YGsk)
                                                         (values
                                                           (if (eq? g$p$8938$14YGsk
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$8938$14YGsk))
                                                           g$ids$8937$14YGsk)))
                                                      g$ids$8936$14YGsk
                                                      g$p$8935$14YGsk))))))
                                             g$ls/false$8928$14YGsk)
                                           ((case-lambda
                                              ((g$t$8939$14YGsk)
                                               ((case-lambda
                                                  ((g$ls/false$8940$14YGsk)
                                                   (if (if g$ls/false$8940$14YGsk
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$8941$14YGsk
                                                                  g$dots$8942$14YGsk
                                                                  g$ys$8943$14YGsk
                                                                  g$z$8944$14YGsk)
                                                                (g$ellipsis?$7394$14YGsk
                                                                  g$dots$8942$14YGsk)))
                                                             g$ls/false$8940$14YGsk))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$8945$14YGsk
                                                            g$dots$8946$14YGsk
                                                            g$ys$8947$14YGsk
                                                            g$z$8948$14YGsk)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$8919$14YGsk
                                                                 g$z$8948$14YGsk
                                                                 g$n$8921$14YGsk
                                                                 g$ids$8922$14YGsk)))
                                                            (case-lambda
                                                              ((g$z$8951$14YGsk
                                                                 g$ids$8952$14YGsk)
                                                               ((case-lambda
                                                                  ((g$ids$8953$14YGsk
                                                                     g$z$8954$14YGsk)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$8918$14YGsk
                                                                          g$ys$8947$14YGsk
                                                                          g$n$8921$14YGsk
                                                                          g$ids$8953$14YGsk)))
                                                                     (case-lambda
                                                                       ((g$ys$8957$14YGsk
                                                                          g$ids$8958$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$ids$8959$14YGsk
                                                                              g$ys$8960$14YGsk)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$8919$14YGsk
                                                                                   g$x$8945$14YGsk
                                                                                   (+ g$n$8921$14YGsk
                                                                                      '1)
                                                                                   g$ids$8959$14YGsk)))
                                                                              (case-lambda
                                                                                ((g$x$8963$14YGsk
                                                                                   g$ids$8964$14YGsk)
                                                                                 ((case-lambda
                                                                                    ((g$ids$8965$14YGsk
                                                                                       g$x$8966$14YGsk)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$8966$14YGsk
                                                                                         (reverse
                                                                                           g$ys$8960$14YGsk)
                                                                                         g$z$8954$14YGsk)
                                                                                       g$ids$8965$14YGsk)))
                                                                                  g$ids$8964$14YGsk
                                                                                  g$x$8963$14YGsk))))))
                                                                         g$ids$8958$14YGsk
                                                                         g$ys$8957$14YGsk))))))
                                                                g$ids$8952$14YGsk
                                                                g$z$8951$14YGsk))))))
                                                       g$ls/false$8940$14YGsk)
                                                     ((case-lambda
                                                        ((g$t$8967$14YGsk)
                                                         ((case-lambda
                                                            ((g$ls/false$8968$14YGsk)
                                                             (if g$ls/false$8968$14YGsk
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$8969$14YGsk
                                                                      g$y$8970$14YGsk)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$8919$14YGsk
                                                                           g$y$8970$14YGsk
                                                                           g$n$8921$14YGsk
                                                                           g$ids$8922$14YGsk)))
                                                                      (case-lambda
                                                                        ((g$y$8973$14YGsk
                                                                           g$ids$8974$14YGsk)
                                                                         ((case-lambda
                                                                            ((g$ids$8975$14YGsk
                                                                               g$y$8976$14YGsk)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$8919$14YGsk
                                                                                    g$x$8969$14YGsk
                                                                                    g$n$8921$14YGsk
                                                                                    g$ids$8975$14YGsk)))
                                                                               (case-lambda
                                                                                 ((g$x$8979$14YGsk
                                                                                    g$ids$8980$14YGsk)
                                                                                  ((case-lambda
                                                                                     ((g$ids$8981$14YGsk
                                                                                        g$x$8982$14YGsk)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$8982$14YGsk
                                                                                          g$y$8976$14YGsk)
                                                                                        g$ids$8981$14YGsk)))
                                                                                   g$ids$8980$14YGsk
                                                                                   g$x$8979$14YGsk))))))
                                                                          g$ids$8974$14YGsk
                                                                          g$y$8973$14YGsk))))))
                                                                 g$ls/false$8968$14YGsk)
                                                               ((case-lambda
                                                                  ((g$t$8983$14YGsk)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8984$14YGsk)
                                                                       (if g$ls/false$8984$14YGsk
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$8922$14YGsk)))
                                                                           g$ls/false$8984$14YGsk)
                                                                         ((case-lambda
                                                                            ((g$t$8985$14YGsk)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8986$14YGsk)
                                                                                 (if (if g$ls/false$8986$14YGsk
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$8987$14YGsk)
                                                                                              (not (g$stx?$7087$14YGsk
                                                                                                     g$p$8987$14YGsk))))
                                                                                           g$ls/false$8986$14YGsk))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$8988$14YGsk)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$8919$14YGsk
                                                                                               g$p$8988$14YGsk
                                                                                               g$n$8921$14YGsk
                                                                                               g$ids$8922$14YGsk)))
                                                                                          (case-lambda
                                                                                            ((g$p$8991$14YGsk
                                                                                               g$ids$8992$14YGsk)
                                                                                             ((case-lambda
                                                                                                ((g$ids$8993$14YGsk
                                                                                                   g$p$8994$14YGsk)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$8994$14YGsk)
                                                                                                   g$ids$8993$14YGsk)))
                                                                                              g$ids$8992$14YGsk
                                                                                              g$p$8991$14YGsk))))))
                                                                                     g$ls/false$8986$14YGsk)
                                                                                   ((case-lambda
                                                                                      ((g$t$8995$14YGsk)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8996$14YGsk)
                                                                                           (if g$ls/false$8996$14YGsk
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$8997$14YGsk)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7126$14YGsk
                                                                                                        g$datum$8997$14YGsk))
                                                                                                    g$ids$8922$14YGsk)))
                                                                                               g$ls/false$8996$14YGsk)
                                                                                             (g$syntax-violation$7502$14YGsk
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8995$14YGsk))))
                                                                                        (g$syntax-dispatch$7393$14YGsk
                                                                                          g$t$8995$14YGsk
                                                                                          'any))))
                                                                                    g$t$8985$14YGsk))))
                                                                              (g$syntax-dispatch$7393$14YGsk
                                                                                g$t$8985$14YGsk
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$8983$14YGsk))))
                                                                    (g$syntax-dispatch$7393$14YGsk
                                                                      g$t$8983$14YGsk
                                                                      '()))))
                                                                g$t$8967$14YGsk))))
                                                          (g$syntax-dispatch$7393$14YGsk
                                                            g$t$8967$14YGsk
                                                            '(any . any)))))
                                                      g$t$8939$14YGsk))))
                                                (g$syntax-dispatch$7393$14YGsk
                                                  g$t$8939$14YGsk
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$8927$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$8927$14YGsk
                                        '(any any)))))
                                  g$t$8923$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$8923$14YGsk
                              'any))))
                        g$p$8920$14YGsk)))))
          (g$cvt$8919$14YGsk g$pattern$8916$14YGsk '0 '())))))
   (g$syntax-dispatch$7393$14YGsk
     g$syntax-dispatch$10829$14YGsk
     (case-lambda
       ((g$e$9013$14YGsk g$p$9014$14YGsk)
        (letrec* ((g$stx^$9015$14YGsk
                    (case-lambda
                      ((g$e$9123$14YGsk
                         g$m*$9124$14YGsk
                         g$s*$9125$14YGsk
                         g$ae*$9126$14YGsk)
                       (if (if (null? g$m*$9124$14YGsk)
                             (if (null? g$s*$9125$14YGsk)
                               (begin '#f (null? g$ae*$9126$14YGsk))
                               '#f)
                             '#f)
                         g$e$9123$14YGsk
                         (g$mkstx$7103$14YGsk
                           g$e$9123$14YGsk
                           g$m*$9124$14YGsk
                           g$s*$9125$14YGsk
                           g$ae*$9126$14YGsk)))))
                  (g$match-each$9016$14YGsk
                    (case-lambda
                      ((g$e$9107$14YGsk
                         g$p$9108$14YGsk
                         g$m*$9109$14YGsk
                         g$s*$9110$14YGsk
                         g$ae*$9111$14YGsk)
                       (if (pair? g$e$9107$14YGsk)
                         ((case-lambda
                            ((g$first$9112$14YGsk)
                             (if g$first$9112$14YGsk
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9113$14YGsk)
                                     (if g$rest$9113$14YGsk
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9112$14YGsk
                                           g$rest$9113$14YGsk))
                                       '#f)))
                                  (g$match-each$9016$14YGsk
                                    (cdr g$e$9107$14YGsk)
                                    g$p$9108$14YGsk
                                    g$m*$9109$14YGsk
                                    g$s*$9110$14YGsk
                                    g$ae*$9111$14YGsk)))
                               '#f)))
                          (g$match$9022$14YGsk
                            (car g$e$9107$14YGsk)
                            g$p$9108$14YGsk
                            g$m*$9109$14YGsk
                            g$s*$9110$14YGsk
                            g$ae*$9111$14YGsk
                            '()))
                         (if (null? g$e$9107$14YGsk)
                           '()
                           (if (g$stx?$7087$14YGsk g$e$9107$14YGsk)
                             (if (not (g$top-marked?$7058$14YGsk
                                        g$m*$9109$14YGsk))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7102$14YGsk
                                        g$m*$9109$14YGsk
                                        g$s*$9110$14YGsk
                                        g$ae*$9111$14YGsk
                                        g$e$9107$14YGsk)))
                                   (case-lambda
                                     ((g$m*$9117$14YGsk
                                        g$s*$9118$14YGsk
                                        g$ae*$9119$14YGsk)
                                      ((case-lambda
                                         ((g$ae*$9120$14YGsk
                                            g$s*$9121$14YGsk
                                            g$m*$9122$14YGsk)
                                          (g$match-each$9016$14YGsk
                                            (g$stx-expr$7089$14YGsk
                                              g$e$9107$14YGsk)
                                            g$p$9108$14YGsk
                                            g$m*$9122$14YGsk
                                            g$s*$9121$14YGsk
                                            g$ae*$9120$14YGsk)))
                                       g$ae*$9119$14YGsk
                                       g$s*$9118$14YGsk
                                       g$m*$9117$14YGsk)))))
                               '#f)
                             (if (annotation? g$e$9107$14YGsk)
                               (g$match-each$9016$14YGsk
                                 (annotation-expression g$e$9107$14YGsk)
                                 g$p$9108$14YGsk
                                 g$m*$9109$14YGsk
                                 g$s*$9110$14YGsk
                                 g$ae*$9111$14YGsk)
                               '#f)))))))
                  (g$match-each+$9017$14YGsk
                    (case-lambda
                      ((g$e$9075$14YGsk
                         g$x-pat$9076$14YGsk
                         g$y-pat$9077$14YGsk
                         g$z-pat$9078$14YGsk
                         g$m*$9079$14YGsk
                         g$s*$9080$14YGsk
                         g$ae*$9081$14YGsk
                         g$r$9082$14YGsk)
                       ((letrec ((g$f$9083$14YGsk
                                   (case-lambda
                                     ((g$e$9084$14YGsk
                                        g$m*$9085$14YGsk
                                        g$s*$9086$14YGsk
                                        g$ae*$9087$14YGsk)
                                      (if (pair? g$e$9084$14YGsk)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9083$14YGsk
                                               (cdr g$e$9084$14YGsk)
                                               g$m*$9085$14YGsk
                                               g$s*$9086$14YGsk
                                               g$ae*$9087$14YGsk)))
                                          (case-lambda
                                            ((g$xr*$9091$14YGsk
                                               g$y-pat$9092$14YGsk
                                               g$r$9093$14YGsk)
                                             ((case-lambda
                                                ((g$r$9094$14YGsk
                                                   g$y-pat$9095$14YGsk
                                                   g$xr*$9096$14YGsk)
                                                 (if g$r$9094$14YGsk
                                                   (if (null?
                                                         g$y-pat$9095$14YGsk)
                                                     ((case-lambda
                                                        ((g$xr$9097$14YGsk)
                                                         (if g$xr$9097$14YGsk
                                                           (values
                                                             (cons
                                                               g$xr$9097$14YGsk
                                                               g$xr*$9096$14YGsk)
                                                             g$y-pat$9095$14YGsk
                                                             g$r$9094$14YGsk)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9022$14YGsk
                                                        (car g$e$9084$14YGsk)
                                                        g$x-pat$9076$14YGsk
                                                        g$m*$9085$14YGsk
                                                        g$s*$9086$14YGsk
                                                        g$ae*$9087$14YGsk
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9095$14YGsk)
                                                       (g$match$9022$14YGsk
                                                         (car g$e$9084$14YGsk)
                                                         (car g$y-pat$9095$14YGsk)
                                                         g$m*$9085$14YGsk
                                                         g$s*$9086$14YGsk
                                                         g$ae*$9087$14YGsk
                                                         g$r$9094$14YGsk)))
                                                   (values '#f '#f '#f))))
                                              g$r$9093$14YGsk
                                              g$y-pat$9092$14YGsk
                                              g$xr*$9091$14YGsk))))
                                        (if (g$stx?$7087$14YGsk g$e$9084$14YGsk)
                                          (if (g$top-marked?$7058$14YGsk
                                                g$m*$9085$14YGsk)
                                            (values
                                              '()
                                              g$y-pat$9077$14YGsk
                                              (g$match$9022$14YGsk
                                                g$e$9084$14YGsk
                                                g$z-pat$9078$14YGsk
                                                g$m*$9085$14YGsk
                                                g$s*$9086$14YGsk
                                                g$ae*$9087$14YGsk
                                                g$r$9082$14YGsk))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7102$14YGsk
                                                   g$m*$9085$14YGsk
                                                   g$s*$9086$14YGsk
                                                   g$ae*$9087$14YGsk
                                                   g$e$9084$14YGsk)))
                                              (case-lambda
                                                ((g$m*$9101$14YGsk
                                                   g$s*$9102$14YGsk
                                                   g$ae*$9103$14YGsk)
                                                 ((case-lambda
                                                    ((g$ae*$9104$14YGsk
                                                       g$s*$9105$14YGsk
                                                       g$m*$9106$14YGsk)
                                                     (g$f$9083$14YGsk
                                                       (g$stx-expr$7089$14YGsk
                                                         g$e$9084$14YGsk)
                                                       g$m*$9106$14YGsk
                                                       g$s*$9105$14YGsk
                                                       g$ae*$9104$14YGsk)))
                                                  g$ae*$9103$14YGsk
                                                  g$s*$9102$14YGsk
                                                  g$m*$9101$14YGsk)))))
                                          (if (annotation? g$e$9084$14YGsk)
                                            (g$f$9083$14YGsk
                                              (annotation-expression
                                                g$e$9084$14YGsk)
                                              g$m*$9085$14YGsk
                                              g$s*$9086$14YGsk
                                              g$ae*$9087$14YGsk)
                                            (values
                                              '()
                                              g$y-pat$9077$14YGsk
                                              (g$match$9022$14YGsk
                                                g$e$9084$14YGsk
                                                g$z-pat$9078$14YGsk
                                                g$m*$9085$14YGsk
                                                g$s*$9086$14YGsk
                                                g$ae*$9087$14YGsk
                                                g$r$9082$14YGsk)))))))))
                          g$f$9083$14YGsk)
                        g$e$9075$14YGsk
                        g$m*$9079$14YGsk
                        g$s*$9080$14YGsk
                        g$ae*$9081$14YGsk))))
                  (g$match-each-any$9018$14YGsk
                    (case-lambda
                      ((g$e$9061$14YGsk
                         g$m*$9062$14YGsk
                         g$s*$9063$14YGsk
                         g$ae*$9064$14YGsk)
                       (if (pair? g$e$9061$14YGsk)
                         ((case-lambda
                            ((g$l$9065$14YGsk)
                             (if g$l$9065$14YGsk
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9015$14YGsk
                                     (car g$e$9061$14YGsk)
                                     g$m*$9062$14YGsk
                                     g$s*$9063$14YGsk
                                     g$ae*$9064$14YGsk)
                                   g$l$9065$14YGsk))
                               '#f)))
                          (g$match-each-any$9018$14YGsk
                            (cdr g$e$9061$14YGsk)
                            g$m*$9062$14YGsk
                            g$s*$9063$14YGsk
                            g$ae*$9064$14YGsk))
                         (if (null? g$e$9061$14YGsk)
                           '()
                           (if (g$stx?$7087$14YGsk g$e$9061$14YGsk)
                             (if (not (g$top-marked?$7058$14YGsk
                                        g$m*$9062$14YGsk))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7102$14YGsk
                                        g$m*$9062$14YGsk
                                        g$s*$9063$14YGsk
                                        g$ae*$9064$14YGsk
                                        g$e$9061$14YGsk)))
                                   (case-lambda
                                     ((g$m*$9069$14YGsk
                                        g$s*$9070$14YGsk
                                        g$ae*$9071$14YGsk)
                                      ((case-lambda
                                         ((g$ae*$9072$14YGsk
                                            g$s*$9073$14YGsk
                                            g$m*$9074$14YGsk)
                                          (g$match-each-any$9018$14YGsk
                                            (g$stx-expr$7089$14YGsk
                                              g$e$9061$14YGsk)
                                            g$m*$9074$14YGsk
                                            g$s*$9073$14YGsk
                                            g$ae*$9072$14YGsk)))
                                       g$ae*$9071$14YGsk
                                       g$s*$9070$14YGsk
                                       g$m*$9069$14YGsk)))))
                               '#f)
                             (if (annotation? g$e$9061$14YGsk)
                               (g$match-each-any$9018$14YGsk
                                 (annotation-expression g$e$9061$14YGsk)
                                 g$m*$9062$14YGsk
                                 g$s*$9063$14YGsk
                                 g$ae*$9064$14YGsk)
                               '#f)))))))
                  (g$match-empty$9019$14YGsk
                    (case-lambda
                      ((g$p$9058$14YGsk g$r$9059$14YGsk)
                       (if (null? g$p$9058$14YGsk)
                         g$r$9059$14YGsk
                         (if (eq? g$p$9058$14YGsk '_)
                           g$r$9059$14YGsk
                           (if (eq? g$p$9058$14YGsk 'any)
                             (cons '() g$r$9059$14YGsk)
                             (if (pair? g$p$9058$14YGsk)
                               (g$match-empty$9019$14YGsk
                                 (car g$p$9058$14YGsk)
                                 (g$match-empty$9019$14YGsk
                                   (cdr g$p$9058$14YGsk)
                                   g$r$9059$14YGsk))
                               (if (eq? g$p$9058$14YGsk 'each-any)
                                 (cons '() g$r$9059$14YGsk)
                                 ((case-lambda
                                    ((g$t$9060$14YGsk)
                                     (if (memv g$t$9060$14YGsk '(each))
                                       (g$match-empty$9019$14YGsk
                                         (vector-ref g$p$9058$14YGsk '1)
                                         g$r$9059$14YGsk)
                                       (if (memv g$t$9060$14YGsk '(each+))
                                         (g$match-empty$9019$14YGsk
                                           (vector-ref g$p$9058$14YGsk '1)
                                           (g$match-empty$9019$14YGsk
                                             (reverse
                                               (vector-ref g$p$9058$14YGsk '2))
                                             (g$match-empty$9019$14YGsk
                                               (vector-ref g$p$9058$14YGsk '3)
                                               g$r$9059$14YGsk)))
                                         (if (memv
                                               g$t$9060$14YGsk
                                               '(free-id atom))
                                           g$r$9059$14YGsk
                                           (if (memv
                                                 g$t$9060$14YGsk
                                                 '(scheme-id atom))
                                             g$r$9059$14YGsk
                                             (if (memv
                                                   g$t$9060$14YGsk
                                                   '(vector))
                                               (g$match-empty$9019$14YGsk
                                                 (vector-ref g$p$9058$14YGsk '1)
                                                 g$r$9059$14YGsk)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9058$14YGsk))))))))
                                  (vector-ref g$p$9058$14YGsk '0))))))))))
                  (g$combine$9020$14YGsk
                    (case-lambda
                      ((g$r*$9056$14YGsk g$r$9057$14YGsk)
                       (if (null? (car g$r*$9056$14YGsk))
                         g$r$9057$14YGsk
                         (cons
                           (map car g$r*$9056$14YGsk)
                           (g$combine$9020$14YGsk
                             (map cdr g$r*$9056$14YGsk)
                             g$r$9057$14YGsk))))))
                  (g$match*$9021$14YGsk
                    (case-lambda
                      ((g$e$9038$14YGsk
                         g$p$9039$14YGsk
                         g$m*$9040$14YGsk
                         g$s*$9041$14YGsk
                         g$ae*$9042$14YGsk
                         g$r$9043$14YGsk)
                       (if (null? g$p$9039$14YGsk)
                         (if (null? g$e$9038$14YGsk)
                           (begin '#f g$r$9043$14YGsk)
                           '#f)
                         (if (pair? g$p$9039$14YGsk)
                           (if (pair? g$e$9038$14YGsk)
                             (begin
                               '#f
                               (g$match$9022$14YGsk
                                 (car g$e$9038$14YGsk)
                                 (car g$p$9039$14YGsk)
                                 g$m*$9040$14YGsk
                                 g$s*$9041$14YGsk
                                 g$ae*$9042$14YGsk
                                 (g$match$9022$14YGsk
                                   (cdr g$e$9038$14YGsk)
                                   (cdr g$p$9039$14YGsk)
                                   g$m*$9040$14YGsk
                                   g$s*$9041$14YGsk
                                   g$ae*$9042$14YGsk
                                   g$r$9043$14YGsk)))
                             '#f)
                           (if (eq? g$p$9039$14YGsk 'each-any)
                             ((case-lambda
                                ((g$l$9044$14YGsk)
                                 (if g$l$9044$14YGsk
                                   (begin
                                     '#f
                                     (cons g$l$9044$14YGsk g$r$9043$14YGsk))
                                   '#f)))
                              (g$match-each-any$9018$14YGsk
                                g$e$9038$14YGsk
                                g$m*$9040$14YGsk
                                g$s*$9041$14YGsk
                                g$ae*$9042$14YGsk))
                             ((case-lambda
                                ((g$t$9045$14YGsk)
                                 (if (memv g$t$9045$14YGsk '(each))
                                   (if (null? g$e$9038$14YGsk)
                                     (g$match-empty$9019$14YGsk
                                       (vector-ref g$p$9039$14YGsk '1)
                                       g$r$9043$14YGsk)
                                     ((case-lambda
                                        ((g$r*$9046$14YGsk)
                                         (if g$r*$9046$14YGsk
                                           (begin
                                             '#f
                                             (g$combine$9020$14YGsk
                                               g$r*$9046$14YGsk
                                               g$r$9043$14YGsk))
                                           '#f)))
                                      (g$match-each$9016$14YGsk
                                        g$e$9038$14YGsk
                                        (vector-ref g$p$9039$14YGsk '1)
                                        g$m*$9040$14YGsk
                                        g$s*$9041$14YGsk
                                        g$ae*$9042$14YGsk)))
                                   (if (memv g$t$9045$14YGsk '(free-id))
                                     (if (symbol? g$e$9038$14YGsk)
                                       (if (g$top-marked?$7058$14YGsk
                                             g$m*$9040$14YGsk)
                                         (if (g$free-id=?$7119$14YGsk
                                               (g$stx^$9015$14YGsk
                                                 g$e$9038$14YGsk
                                                 g$m*$9040$14YGsk
                                                 g$s*$9041$14YGsk
                                                 g$ae*$9042$14YGsk)
                                               (vector-ref g$p$9039$14YGsk '1))
                                           (begin '#f g$r$9043$14YGsk)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (memv g$t$9045$14YGsk '(scheme-id))
                                       (if (symbol? g$e$9038$14YGsk)
                                         (if (g$top-marked?$7058$14YGsk
                                               g$m*$9040$14YGsk)
                                           (if (g$free-id=?$7119$14YGsk
                                                 (g$stx^$9015$14YGsk
                                                   g$e$9038$14YGsk
                                                   g$m*$9040$14YGsk
                                                   g$s*$9041$14YGsk
                                                   g$ae*$9042$14YGsk)
                                                 (g$scheme-stx$7336$14YGsk
                                                   (vector-ref
                                                     g$p$9039$14YGsk
                                                     '1)))
                                             (begin '#f g$r$9043$14YGsk)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (memv g$t$9045$14YGsk '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9017$14YGsk
                                                g$e$9038$14YGsk
                                                (vector-ref g$p$9039$14YGsk '1)
                                                (vector-ref g$p$9039$14YGsk '2)
                                                (vector-ref g$p$9039$14YGsk '3)
                                                g$m*$9040$14YGsk
                                                g$s*$9041$14YGsk
                                                g$ae*$9042$14YGsk
                                                g$r$9043$14YGsk)))
                                           (case-lambda
                                             ((g$xr*$9050$14YGsk
                                                g$y-pat$9051$14YGsk
                                                g$r$9052$14YGsk)
                                              ((case-lambda
                                                 ((g$r$9053$14YGsk
                                                    g$y-pat$9054$14YGsk
                                                    g$xr*$9055$14YGsk)
                                                  (if g$r$9053$14YGsk
                                                    (if (null?
                                                          g$y-pat$9054$14YGsk)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9055$14YGsk)
                                                          (g$match-empty$9019$14YGsk
                                                            (vector-ref
                                                              g$p$9039$14YGsk
                                                              '1)
                                                            g$r$9053$14YGsk)
                                                          (g$combine$9020$14YGsk
                                                            g$xr*$9055$14YGsk
                                                            g$r$9053$14YGsk)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9052$14YGsk
                                               g$y-pat$9051$14YGsk
                                               g$xr*$9050$14YGsk))))
                                         (if (memv g$t$9045$14YGsk '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9039$14YGsk '1)
                                                 (g$strip$7125$14YGsk
                                                   g$e$9038$14YGsk
                                                   g$m*$9040$14YGsk))
                                             (begin '#f g$r$9043$14YGsk)
                                             '#f)
                                           (if (memv g$t$9045$14YGsk '(vector))
                                             (if (vector? g$e$9038$14YGsk)
                                               (begin
                                                 '#f
                                                 (g$match$9022$14YGsk
                                                   (vector->list
                                                     g$e$9038$14YGsk)
                                                   (vector-ref
                                                     g$p$9039$14YGsk
                                                     '1)
                                                   g$m*$9040$14YGsk
                                                   g$s*$9041$14YGsk
                                                   g$ae*$9042$14YGsk
                                                   g$r$9043$14YGsk))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9039$14YGsk)))))))))
                              (vector-ref g$p$9039$14YGsk '0))))))))
                  (g$match$9022$14YGsk
                    (case-lambda
                      ((g$e$9023$14YGsk
                         g$p$9024$14YGsk
                         g$m*$9025$14YGsk
                         g$s*$9026$14YGsk
                         g$ae*$9027$14YGsk
                         g$r$9028$14YGsk)
                       (if (not g$r$9028$14YGsk)
                         '#f
                         (if (eq? g$p$9024$14YGsk '_)
                           g$r$9028$14YGsk
                           (if (eq? g$p$9024$14YGsk 'any)
                             (cons
                               (g$stx^$9015$14YGsk
                                 g$e$9023$14YGsk
                                 g$m*$9025$14YGsk
                                 g$s*$9026$14YGsk
                                 g$ae*$9027$14YGsk)
                               g$r$9028$14YGsk)
                             (if (g$stx?$7087$14YGsk g$e$9023$14YGsk)
                               (if (not (g$top-marked?$7058$14YGsk
                                          g$m*$9025$14YGsk))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7102$14YGsk
                                          g$m*$9025$14YGsk
                                          g$s*$9026$14YGsk
                                          g$ae*$9027$14YGsk
                                          g$e$9023$14YGsk)))
                                     (case-lambda
                                       ((g$m*$9032$14YGsk
                                          g$s*$9033$14YGsk
                                          g$ae*$9034$14YGsk)
                                        ((case-lambda
                                           ((g$ae*$9035$14YGsk
                                              g$s*$9036$14YGsk
                                              g$m*$9037$14YGsk)
                                            (g$match$9022$14YGsk
                                              (g$stx-expr$7089$14YGsk
                                                g$e$9023$14YGsk)
                                              g$p$9024$14YGsk
                                              g$m*$9037$14YGsk
                                              g$s*$9036$14YGsk
                                              g$ae*$9035$14YGsk
                                              g$r$9028$14YGsk)))
                                         g$ae*$9034$14YGsk
                                         g$s*$9033$14YGsk
                                         g$m*$9032$14YGsk)))))
                                 '#f)
                               (if (annotation? g$e$9023$14YGsk)
                                 (g$match$9022$14YGsk
                                   (annotation-expression g$e$9023$14YGsk)
                                   g$p$9024$14YGsk
                                   g$m*$9025$14YGsk
                                   g$s*$9026$14YGsk
                                   g$ae*$9027$14YGsk
                                   g$r$9028$14YGsk)
                                 (g$match*$9021$14YGsk
                                   g$e$9023$14YGsk
                                   g$p$9024$14YGsk
                                   g$m*$9025$14YGsk
                                   g$s*$9026$14YGsk
                                   g$ae*$9027$14YGsk
                                   g$r$9028$14YGsk))))))))))
          (g$match$9022$14YGsk
            g$e$9013$14YGsk
            g$p$9014$14YGsk
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7394$14YGsk
     g$ellipsis?$10830$14YGsk
     (case-lambda
       ((g$x$9127$14YGsk)
        (if (g$id?$7115$14YGsk g$x$9127$14YGsk)
          (begin
            '#f
            (g$free-id=?$7119$14YGsk
              g$x$9127$14YGsk
              (g$scheme-stx$7336$14YGsk '...)))
          '#f))))
   (g$underscore?$7395$14YGsk
     g$underscore?$10831$14YGsk
     (case-lambda
       ((g$x$9128$14YGsk)
        (if (g$id?$7115$14YGsk g$x$9128$14YGsk)
          (begin
            '#f
            (g$free-id=?$7119$14YGsk
              g$x$9128$14YGsk
              (g$scheme-stx$7336$14YGsk '_)))
          '#f))))
   (g$verify-literals$7396$14YGsk
     g$verify-literals$10832$14YGsk
     (case-lambda
       ((g$lits$9129$14YGsk g$expr$9130$14YGsk)
        (for-each
          (case-lambda
            ((g$x$9131$14YGsk)
             (if ((case-lambda
                    ((g$t$9132$14YGsk)
                     (if g$t$9132$14YGsk
                       g$t$9132$14YGsk
                       ((case-lambda
                          ((g$t$9133$14YGsk)
                           (if g$t$9133$14YGsk
                             g$t$9133$14YGsk
                             (begin
                               '#f
                               (g$underscore?$7395$14YGsk g$x$9131$14YGsk)))))
                        (g$ellipsis?$7394$14YGsk g$x$9131$14YGsk)))))
                  (not (g$id?$7115$14YGsk g$x$9131$14YGsk)))
               (g$syntax-violation$7502$14YGsk
                 '#f
                 '"invalid literal"
                 g$expr$9130$14YGsk
                 g$x$9131$14YGsk)
               (void))))
          g$lits$9129$14YGsk))))
   (g$syntax-case-transformer$7397$14YGsk
     g$syntax-case-transformer$10833$14YGsk
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9134$14YGsk
                     (case-lambda
                       ((g$pvars$9191$14YGsk
                          g$expr$9192$14YGsk
                          g$y$9193$14YGsk
                          g$r$9194$14YGsk
                          g$mr$9195$14YGsk)
                        ((case-lambda
                           ((g$ids$9196$14YGsk g$levels$9197$14YGsk)
                            ((case-lambda
                               ((g$labels$9198$14YGsk g$new-vars$9199$14YGsk)
                                ((case-lambda
                                   ((g$body$9200$14YGsk)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7046$14YGsk
                                        '#f
                                        g$new-vars$9199$14YGsk
                                        g$body$9200$14YGsk)
                                      g$y$9193$14YGsk)))
                                 (g$chi-expr$7411$14YGsk
                                   (g$add-subst$7105$14YGsk
                                     (g$make-full-rib$7083$14YGsk
                                       g$ids$9196$14YGsk
                                       g$labels$9198$14YGsk)
                                     g$expr$9192$14YGsk)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9201$14YGsk
                                               g$var$9202$14YGsk
                                               g$level$9203$14YGsk)
                                             (cons
                                               g$label$9201$14YGsk
                                               (g$make-binding$7131$14YGsk
                                                 'syntax
                                                 (cons
                                                   g$var$9202$14YGsk
                                                   g$level$9203$14YGsk)))))
                                          g$labels$9198$14YGsk
                                          g$new-vars$9199$14YGsk
                                          (map cdr g$pvars$9191$14YGsk))
                                     g$r$9194$14YGsk)
                                   g$mr$9195$14YGsk))))
                             (map g$gen-label$7061$14YGsk g$ids$9196$14YGsk)
                             (map g$gen-lexical$7059$14YGsk
                                  g$ids$9196$14YGsk))))
                         (map car g$pvars$9191$14YGsk)
                         (map cdr g$pvars$9191$14YGsk)))))
                   (g$invalid-ids-error$9135$14YGsk
                     (case-lambda
                       ((g$id*$9185$14YGsk g$e$9186$14YGsk g$class$9187$14YGsk)
                        ((letrec ((g$find$9188$14YGsk
                                    (case-lambda
                                      ((g$id*$9189$14YGsk g$ok*$9190$14YGsk)
                                       (if (null? g$id*$9189$14YGsk)
                                         (g$syntax-violation$7502$14YGsk
                                           '#f
                                           '"invalid syntax"
                                           g$e$9186$14YGsk)
                                         (if (g$id?$7115$14YGsk
                                               (car g$id*$9189$14YGsk))
                                           (if (g$bound-id-member?$7122$14YGsk
                                                 (car g$id*$9189$14YGsk)
                                                 g$ok*$9190$14YGsk)
                                             (g$syntax-error$7499$14YGsk
                                               (car g$id*$9189$14YGsk)
                                               '"duplicate "
                                               g$class$9187$14YGsk)
                                             (g$find$9188$14YGsk
                                               (cdr g$id*$9189$14YGsk)
                                               (cons
                                                 (car g$id*$9189$14YGsk)
                                                 g$ok*$9190$14YGsk)))
                                           (g$syntax-error$7499$14YGsk
                                             (car g$id*$9189$14YGsk)
                                             '"invalid "
                                             g$class$9187$14YGsk)))))))
                           g$find$9188$14YGsk)
                         g$id*$9185$14YGsk
                         '()))))
                   (g$gen-clause$9136$14YGsk
                     (case-lambda
                       ((g$x$9165$14YGsk
                          g$keys$9166$14YGsk
                          g$clauses$9167$14YGsk
                          g$r$9168$14YGsk
                          g$mr$9169$14YGsk
                          g$pat$9170$14YGsk
                          g$fender$9171$14YGsk
                          g$expr$9172$14YGsk)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7392$14YGsk
                               g$pat$9170$14YGsk
                               g$keys$9166$14YGsk)))
                          (case-lambda
                            ((g$p$9175$14YGsk g$pvars$9176$14YGsk)
                             ((case-lambda
                                ((g$pvars$9177$14YGsk g$p$9178$14YGsk)
                                 (if (not (g$distinct-bound-ids?$7121$14YGsk
                                            (map car g$pvars$9177$14YGsk)))
                                   (g$invalid-ids-error$9135$14YGsk
                                     (map car g$pvars$9177$14YGsk)
                                     g$pat$9170$14YGsk
                                     '"pattern variable")
                                   (if (not (g$for-all$5356$14YGsk
                                              (case-lambda
                                                ((g$x$9179$14YGsk)
                                                 (not (g$ellipsis?$7394$14YGsk
                                                        (car g$x$9179$14YGsk)))))
                                              g$pvars$9177$14YGsk))
                                     (g$syntax-violation$7502$14YGsk
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9170$14YGsk)
                                     ((case-lambda
                                        ((g$y$9180$14YGsk)
                                         ((case-lambda
                                            ((g$test$9181$14YGsk)
                                             ((case-lambda
                                                ((g$conseq$9182$14YGsk)
                                                 ((case-lambda
                                                    ((g$altern$9183$14YGsk)
                                                     (list
                                                       (g$build-lambda$7046$14YGsk
                                                         '#f
                                                         (list g$y$9180$14YGsk)
                                                         (list
                                                           'if
                                                           g$test$9181$14YGsk
                                                           g$conseq$9182$14YGsk
                                                           g$altern$9183$14YGsk))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9165$14YGsk
                                                         (list
                                                           'quote
                                                           g$p$9178$14YGsk)))))
                                                  (g$gen-syntax-case$9137$14YGsk
                                                    g$x$9165$14YGsk
                                                    g$keys$9166$14YGsk
                                                    g$clauses$9167$14YGsk
                                                    g$r$9168$14YGsk
                                                    g$mr$9169$14YGsk))))
                                              (g$build-dispatch-call$9134$14YGsk
                                                g$pvars$9177$14YGsk
                                                g$expr$9172$14YGsk
                                                g$y$9180$14YGsk
                                                g$r$9168$14YGsk
                                                g$mr$9169$14YGsk))))
                                          (if (eq? g$fender$9171$14YGsk '#t)
                                            g$y$9180$14YGsk
                                            ((case-lambda
                                               ((g$call$9184$14YGsk)
                                                (list
                                                  'if
                                                  g$y$9180$14YGsk
                                                  g$call$9184$14YGsk
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9134$14YGsk
                                               g$pvars$9177$14YGsk
                                               g$fender$9171$14YGsk
                                               g$y$9180$14YGsk
                                               g$r$9168$14YGsk
                                               g$mr$9169$14YGsk))))))
                                      (g$gen-lexical$7059$14YGsk 'tmp))))))
                              g$pvars$9176$14YGsk
                              g$p$9175$14YGsk)))))))
                   (g$gen-syntax-case$9137$14YGsk
                     (case-lambda
                       ((g$x$9148$14YGsk
                          g$keys$9149$14YGsk
                          g$clauses$9150$14YGsk
                          g$r$9151$14YGsk
                          g$mr$9152$14YGsk)
                        (if (null? g$clauses$9150$14YGsk)
                          (list '(primitive syntax-error) g$x$9148$14YGsk)
                          ((case-lambda
                             ((g$t$9153$14YGsk)
                              ((case-lambda
                                 ((g$ls/false$9154$14YGsk)
                                  (if g$ls/false$9154$14YGsk
                                    (apply
                                      (case-lambda
                                        ((g$pat$9155$14YGsk g$expr$9156$14YGsk)
                                         (if (if (g$id?$7115$14YGsk
                                                   g$pat$9155$14YGsk)
                                               (if (not (g$bound-id-member?$7122$14YGsk
                                                          g$pat$9155$14YGsk
                                                          g$keys$9149$14YGsk))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7394$14YGsk
                                                          g$pat$9155$14YGsk)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7119$14YGsk
                                                 g$pat$9155$14YGsk
                                                 (g$scheme-stx$7336$14YGsk '_))
                                             (g$chi-expr$7411$14YGsk
                                               g$expr$9156$14YGsk
                                               g$r$9151$14YGsk
                                               g$mr$9152$14YGsk)
                                             ((case-lambda
                                                ((g$lab$9157$14YGsk
                                                   g$lex$9158$14YGsk)
                                                 ((case-lambda
                                                    ((g$body$9159$14YGsk)
                                                     (list
                                                       (g$build-lambda$7046$14YGsk
                                                         '#f
                                                         (list
                                                           g$lex$9158$14YGsk)
                                                         g$body$9159$14YGsk)
                                                       g$x$9148$14YGsk)))
                                                  (g$chi-expr$7411$14YGsk
                                                    (g$add-subst$7105$14YGsk
                                                      (g$make-full-rib$7083$14YGsk
                                                        (list g$pat$9155$14YGsk)
                                                        (list
                                                          g$lab$9157$14YGsk))
                                                      g$expr$9156$14YGsk)
                                                    (cons
                                                      (cons
                                                        g$lab$9157$14YGsk
                                                        (g$make-binding$7131$14YGsk
                                                          'syntax
                                                          (cons
                                                            g$lex$9158$14YGsk
                                                            '0)))
                                                      g$r$9151$14YGsk)
                                                    g$mr$9152$14YGsk))))
                                              (g$gen-label$7061$14YGsk
                                                g$pat$9155$14YGsk)
                                              (g$gen-lexical$7059$14YGsk
                                                g$pat$9155$14YGsk)))
                                           (g$gen-clause$9136$14YGsk
                                             g$x$9148$14YGsk
                                             g$keys$9149$14YGsk
                                             (cdr g$clauses$9150$14YGsk)
                                             g$r$9151$14YGsk
                                             g$mr$9152$14YGsk
                                             g$pat$9155$14YGsk
                                             '#t
                                             g$expr$9156$14YGsk))))
                                      g$ls/false$9154$14YGsk)
                                    ((case-lambda
                                       ((g$t$9160$14YGsk)
                                        ((case-lambda
                                           ((g$ls/false$9161$14YGsk)
                                            (if g$ls/false$9161$14YGsk
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9162$14YGsk
                                                     g$fender$9163$14YGsk
                                                     g$expr$9164$14YGsk)
                                                   (g$gen-clause$9136$14YGsk
                                                     g$x$9148$14YGsk
                                                     g$keys$9149$14YGsk
                                                     (cdr g$clauses$9150$14YGsk)
                                                     g$r$9151$14YGsk
                                                     g$mr$9152$14YGsk
                                                     g$pat$9162$14YGsk
                                                     g$fender$9163$14YGsk
                                                     g$expr$9164$14YGsk)))
                                                g$ls/false$9161$14YGsk)
                                              (g$syntax-violation$7502$14YGsk
                                                '#f
                                                '"invalid syntax"
                                                g$t$9160$14YGsk))))
                                         (g$syntax-dispatch$7393$14YGsk
                                           g$t$9160$14YGsk
                                           '(any any any)))))
                                     g$t$9153$14YGsk))))
                               (g$syntax-dispatch$7393$14YGsk
                                 g$t$9153$14YGsk
                                 '(any any)))))
                           (car g$clauses$9150$14YGsk)))))))
           (case-lambda
             ((g$e$9138$14YGsk g$r$9139$14YGsk g$mr$9140$14YGsk)
              ((case-lambda
                 ((g$t$9141$14YGsk)
                  ((case-lambda
                     ((g$ls/false$9142$14YGsk)
                      (if g$ls/false$9142$14YGsk
                        (apply
                          (case-lambda
                            ((g$expr$9143$14YGsk
                               g$keys$9144$14YGsk
                               g$clauses$9145$14YGsk)
                             (begin
                               (g$verify-literals$7396$14YGsk
                                 g$keys$9144$14YGsk
                                 g$e$9138$14YGsk)
                               ((case-lambda
                                  ((g$x$9146$14YGsk)
                                   ((case-lambda
                                      ((g$body$9147$14YGsk)
                                       (list
                                         (g$build-lambda$7046$14YGsk
                                           '#f
                                           (list g$x$9146$14YGsk)
                                           g$body$9147$14YGsk)
                                         (g$chi-expr$7411$14YGsk
                                           g$expr$9143$14YGsk
                                           g$r$9139$14YGsk
                                           g$mr$9140$14YGsk))))
                                    (g$gen-syntax-case$9137$14YGsk
                                      g$x$9146$14YGsk
                                      g$keys$9144$14YGsk
                                      g$clauses$9145$14YGsk
                                      g$r$9139$14YGsk
                                      g$mr$9140$14YGsk))))
                                (g$gen-lexical$7059$14YGsk 'tmp)))))
                          g$ls/false$9142$14YGsk)
                        (g$syntax-violation$7502$14YGsk
                          '#f
                          '"invalid syntax"
                          g$t$9141$14YGsk))))
                   (g$syntax-dispatch$7393$14YGsk
                     g$t$9141$14YGsk
                     '(_ any each-any . each-any)))))
               g$e$9138$14YGsk))))))))
   (g$ellipsis-map$7398$14YGsk
     g$ellipsis-map$10834$14YGsk
     (case-lambda
       ((g$proc$9204$14YGsk g$ls$9205$14YGsk . g$ls*$9206$14YGsk)
        (letrec* ((g$who$9207$14YGsk '...))
          (begin
            (if (not (list? g$ls$9205$14YGsk))
              (assertion-violation
                g$who$9207$14YGsk
                '"not a list"
                g$ls$9205$14YGsk)
              (void))
            (if (not (null? g$ls*$9206$14YGsk))
              ((case-lambda
                 ((g$n$9208$14YGsk)
                  (for-each
                    (case-lambda
                      ((g$x$9209$14YGsk)
                       (begin
                         (if (not (list? g$x$9209$14YGsk))
                           (assertion-violation
                             g$who$9207$14YGsk
                             '"not a list"
                             g$x$9209$14YGsk)
                           (void))
                         (if (not (= (length g$x$9209$14YGsk) g$n$9208$14YGsk))
                           (assertion-violation
                             g$who$9207$14YGsk
                             '"length mismatch"
                             g$ls$9205$14YGsk
                             g$x$9209$14YGsk)
                           (void)))))
                    g$ls*$9206$14YGsk)))
               (length g$ls$9205$14YGsk))
              (void))
            (apply
              map
              g$proc$9204$14YGsk
              g$ls$9205$14YGsk
              g$ls*$9206$14YGsk))))))
   (g$syntax-transformer$7399$14YGsk
     g$syntax-transformer$10835$14YGsk
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9210$14YGsk
                     (case-lambda
                       ((g$src$9270$14YGsk
                          g$e$9271$14YGsk
                          g$r$9272$14YGsk
                          g$maps$9273$14YGsk
                          g$ellipsis?$9274$14YGsk
                          g$vec?$9275$14YGsk)
                        ((case-lambda
                           ((g$t$9276$14YGsk)
                            ((case-lambda
                               ((g$ls/false$9277$14YGsk)
                                (if (if g$ls/false$9277$14YGsk
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9278$14YGsk)
                                             (g$ellipsis?$9274$14YGsk
                                               g$dots$9278$14YGsk)))
                                          g$ls/false$9277$14YGsk))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9279$14YGsk)
                                       (g$syntax-violation$7502$14YGsk
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9270$14YGsk)))
                                    g$ls/false$9277$14YGsk)
                                  ((case-lambda
                                     ((g$t$9280$14YGsk)
                                      ((case-lambda
                                         ((g$ls/false$9281$14YGsk)
                                          (if (if g$ls/false$9281$14YGsk
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9282$14YGsk)
                                                       (g$id?$7115$14YGsk
                                                         g$id$9282$14YGsk)))
                                                    g$ls/false$9281$14YGsk))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9283$14YGsk)
                                                 ((case-lambda
                                                    ((g$label$9284$14YGsk)
                                                     ((case-lambda
                                                        ((g$b$9285$14YGsk)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7132$14YGsk
                                                                        g$b$9285$14YGsk)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9288$14YGsk)
                                                                        (g$gen-ref$9211$14YGsk
                                                                          g$src$9270$14YGsk
                                                                          (car g$var.lev$9288$14YGsk)
                                                                          (cdr g$var.lev$9288$14YGsk)
                                                                          g$maps$9273$14YGsk)))
                                                                     (g$binding-value$7133$14YGsk
                                                                       g$b$9285$14YGsk))))
                                                                 (case-lambda
                                                                   ((g$var$9289$14YGsk
                                                                      g$maps$9290$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$maps$9291$14YGsk
                                                                          g$var$9292$14YGsk)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9292$14YGsk)
                                                                          g$maps$9291$14YGsk)))
                                                                     g$maps$9290$14YGsk
                                                                     g$var$9289$14YGsk))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9271$14YGsk)
                                                                 g$maps$9273$14YGsk)))))))
                                                      (g$label->binding$7130$14YGsk
                                                        g$label$9284$14YGsk
                                                        g$r$9272$14YGsk))))
                                                  (g$id->label$7128$14YGsk
                                                    g$e$9271$14YGsk))))
                                              g$ls/false$9281$14YGsk)
                                            ((case-lambda
                                               ((g$t$9293$14YGsk)
                                                ((case-lambda
                                                   ((g$ls/false$9294$14YGsk)
                                                    (if (if g$ls/false$9294$14YGsk
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9295$14YGsk
                                                                   g$e$9296$14YGsk)
                                                                 (g$ellipsis?$9274$14YGsk
                                                                   g$dots$9295$14YGsk)))
                                                              g$ls/false$9294$14YGsk))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9297$14YGsk
                                                             g$e$9298$14YGsk)
                                                           (if g$vec?$9275$14YGsk
                                                             (g$syntax-violation$7502$14YGsk
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9270$14YGsk)
                                                             (g$gen-syntax$9210$14YGsk
                                                               g$src$9270$14YGsk
                                                               g$e$9298$14YGsk
                                                               g$r$9272$14YGsk
                                                               g$maps$9273$14YGsk
                                                               (case-lambda
                                                                 ((g$x$9299$14YGsk)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9294$14YGsk)
                                                      ((case-lambda
                                                         ((g$t$9300$14YGsk)
                                                          ((case-lambda
                                                             ((g$ls/false$9301$14YGsk)
                                                              (if (if g$ls/false$9301$14YGsk
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9302$14YGsk
                                                                             g$dots$9303$14YGsk
                                                                             g$y$9304$14YGsk)
                                                                           (g$ellipsis?$9274$14YGsk
                                                                             g$dots$9303$14YGsk)))
                                                                        g$ls/false$9301$14YGsk))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9305$14YGsk
                                                                       g$dots$9306$14YGsk
                                                                       g$y$9307$14YGsk)
                                                                     ((letrec ((g$f$9308$14YGsk
                                                                                 (case-lambda
                                                                                   ((g$y$9309$14YGsk
                                                                                      g$k$9310$14YGsk)
                                                                                    ((case-lambda
                                                                                       ((g$t$9311$14YGsk)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9312$14YGsk)
                                                                                            (if g$ls/false$9312$14YGsk
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9310$14YGsk
                                                                                                     g$maps$9273$14YGsk)))
                                                                                                g$ls/false$9312$14YGsk)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9313$14YGsk)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9314$14YGsk)
                                                                                                      (if (if g$ls/false$9314$14YGsk
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9315$14YGsk
                                                                                                                     g$y$9316$14YGsk)
                                                                                                                   (g$ellipsis?$9274$14YGsk
                                                                                                                     g$dots$9315$14YGsk)))
                                                                                                                g$ls/false$9314$14YGsk))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9317$14YGsk
                                                                                                               g$y$9318$14YGsk)
                                                                                                             (g$f$9308$14YGsk
                                                                                                               g$y$9318$14YGsk
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9319$14YGsk)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9310$14YGsk
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9319$14YGsk))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9322$14YGsk
                                                                                                                         g$maps$9323$14YGsk)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9324$14YGsk
                                                                                                                             g$x$9325$14YGsk)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9324$14YGsk))
                                                                                                                             (g$syntax-violation$7502$14YGsk
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9270$14YGsk)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9213$14YGsk
                                                                                                                                 g$x$9325$14YGsk
                                                                                                                                 (car g$maps$9324$14YGsk))
                                                                                                                               (cdr g$maps$9324$14YGsk)))))
                                                                                                                        g$maps$9323$14YGsk
                                                                                                                        g$x$9322$14YGsk)))))))))
                                                                                                          g$ls/false$9314$14YGsk)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9326$14YGsk)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9327$14YGsk)
                                                                                                                (if g$ls/false$9327$14YGsk
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9210$14YGsk
                                                                                                                              g$src$9270$14YGsk
                                                                                                                              g$y$9309$14YGsk
                                                                                                                              g$r$9272$14YGsk
                                                                                                                              g$maps$9273$14YGsk
                                                                                                                              g$ellipsis?$9274$14YGsk
                                                                                                                              g$vec?$9275$14YGsk)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9330$14YGsk
                                                                                                                              g$maps$9331$14YGsk)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9332$14YGsk
                                                                                                                                  g$y$9333$14YGsk)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9310$14YGsk
                                                                                                                                       g$maps$9332$14YGsk)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9336$14YGsk
                                                                                                                                       g$maps$9337$14YGsk)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9338$14YGsk
                                                                                                                                           g$x$9339$14YGsk)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9212$14YGsk
                                                                                                                                             g$x$9339$14YGsk
                                                                                                                                             g$y$9333$14YGsk)
                                                                                                                                           g$maps$9338$14YGsk)))
                                                                                                                                      g$maps$9337$14YGsk
                                                                                                                                      g$x$9336$14YGsk))))))
                                                                                                                             g$maps$9331$14YGsk
                                                                                                                             g$y$9330$14YGsk))))))
                                                                                                                    g$ls/false$9327$14YGsk)
                                                                                                                  (g$syntax-violation$7502$14YGsk
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9326$14YGsk))))
                                                                                                             (g$syntax-dispatch$7393$14YGsk
                                                                                                               g$t$9326$14YGsk
                                                                                                               '_))))
                                                                                                         g$t$9313$14YGsk))))
                                                                                                   (g$syntax-dispatch$7393$14YGsk
                                                                                                     g$t$9313$14YGsk
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9311$14YGsk))))
                                                                                         (g$syntax-dispatch$7393$14YGsk
                                                                                           g$t$9311$14YGsk
                                                                                           '()))))
                                                                                     g$y$9309$14YGsk)))))
                                                                        g$f$9308$14YGsk)
                                                                      g$y$9307$14YGsk
                                                                      (case-lambda
                                                                        ((g$maps$9340$14YGsk)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9210$14YGsk
                                                                                g$src$9270$14YGsk
                                                                                g$x$9305$14YGsk
                                                                                g$r$9272$14YGsk
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9340$14YGsk)
                                                                                g$ellipsis?$9274$14YGsk
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9343$14YGsk
                                                                                g$maps$9344$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$maps$9345$14YGsk
                                                                                    g$x$9346$14YGsk)
                                                                                  (if (null?
                                                                                        (car g$maps$9345$14YGsk))
                                                                                    (g$syntax-violation$7502$14YGsk
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9270$14YGsk)
                                                                                    (values
                                                                                      (g$gen-map$9214$14YGsk
                                                                                        g$x$9346$14YGsk
                                                                                        (car g$maps$9345$14YGsk))
                                                                                      (cdr g$maps$9345$14YGsk)))))
                                                                               g$maps$9344$14YGsk
                                                                               g$x$9343$14YGsk)))))))))
                                                                  g$ls/false$9301$14YGsk)
                                                                ((case-lambda
                                                                   ((g$t$9347$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9348$14YGsk)
                                                                        (if g$ls/false$9348$14YGsk
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9349$14YGsk
                                                                                 g$y$9350$14YGsk)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9210$14YGsk
                                                                                      g$src$9270$14YGsk
                                                                                      g$x$9349$14YGsk
                                                                                      g$r$9272$14YGsk
                                                                                      g$maps$9273$14YGsk
                                                                                      g$ellipsis?$9274$14YGsk
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9353$14YGsk
                                                                                      g$maps$9354$14YGsk)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9355$14YGsk
                                                                                          g$xnew$9356$14YGsk)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9210$14YGsk
                                                                                               g$src$9270$14YGsk
                                                                                               g$y$9350$14YGsk
                                                                                               g$r$9272$14YGsk
                                                                                               g$maps$9355$14YGsk
                                                                                               g$ellipsis?$9274$14YGsk
                                                                                               g$vec?$9275$14YGsk)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9359$14YGsk
                                                                                               g$maps$9360$14YGsk)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9361$14YGsk
                                                                                                   g$ynew$9362$14YGsk)
                                                                                                 (values
                                                                                                   (g$gen-cons$9215$14YGsk
                                                                                                     g$e$9271$14YGsk
                                                                                                     g$x$9349$14YGsk
                                                                                                     g$y$9350$14YGsk
                                                                                                     g$xnew$9356$14YGsk
                                                                                                     g$ynew$9362$14YGsk)
                                                                                                   g$maps$9361$14YGsk)))
                                                                                              g$maps$9360$14YGsk
                                                                                              g$ynew$9359$14YGsk))))))
                                                                                     g$maps$9354$14YGsk
                                                                                     g$xnew$9353$14YGsk))))))
                                                                            g$ls/false$9348$14YGsk)
                                                                          ((case-lambda
                                                                             ((g$t$9363$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9364$14YGsk)
                                                                                  (if g$ls/false$9364$14YGsk
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9365$14YGsk)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9210$14YGsk
                                                                                                g$src$9270$14YGsk
                                                                                                g$ls$9365$14YGsk
                                                                                                g$r$9272$14YGsk
                                                                                                g$maps$9273$14YGsk
                                                                                                g$ellipsis?$9274$14YGsk
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9368$14YGsk
                                                                                                g$maps$9369$14YGsk)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9370$14YGsk
                                                                                                    g$lsnew$9371$14YGsk)
                                                                                                  (values
                                                                                                    (g$gen-vector$9216$14YGsk
                                                                                                      g$e$9271$14YGsk
                                                                                                      g$ls$9365$14YGsk
                                                                                                      g$lsnew$9371$14YGsk)
                                                                                                    g$maps$9370$14YGsk)))
                                                                                               g$maps$9369$14YGsk
                                                                                               g$lsnew$9368$14YGsk))))))
                                                                                      g$ls/false$9364$14YGsk)
                                                                                    ((case-lambda
                                                                                       ((g$t$9372$14YGsk)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9373$14YGsk)
                                                                                            (if g$ls/false$9373$14YGsk
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9271$14YGsk)
                                                                                                     g$maps$9273$14YGsk)))
                                                                                                g$ls/false$9373$14YGsk)
                                                                                              (g$syntax-violation$7502$14YGsk
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9372$14YGsk))))
                                                                                         (g$syntax-dispatch$7393$14YGsk
                                                                                           g$t$9372$14YGsk
                                                                                           '_))))
                                                                                     g$t$9363$14YGsk))))
                                                                               (g$syntax-dispatch$7393$14YGsk
                                                                                 g$t$9363$14YGsk
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9347$14YGsk))))
                                                                     (g$syntax-dispatch$7393$14YGsk
                                                                       g$t$9347$14YGsk
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9300$14YGsk))))
                                                           (g$syntax-dispatch$7393$14YGsk
                                                             g$t$9300$14YGsk
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9293$14YGsk))))
                                                 (g$syntax-dispatch$7393$14YGsk
                                                   g$t$9293$14YGsk
                                                   '(any any)))))
                                             g$t$9280$14YGsk))))
                                       (g$syntax-dispatch$7393$14YGsk
                                         g$t$9280$14YGsk
                                         'any))))
                                   g$t$9276$14YGsk))))
                             (g$syntax-dispatch$7393$14YGsk
                               g$t$9276$14YGsk
                               'any))))
                         g$e$9271$14YGsk))))
                   (g$gen-ref$9211$14YGsk
                     (case-lambda
                       ((g$src$9257$14YGsk
                          g$var$9258$14YGsk
                          g$level$9259$14YGsk
                          g$maps$9260$14YGsk)
                        (if (= g$level$9259$14YGsk '0)
                          (values g$var$9258$14YGsk g$maps$9260$14YGsk)
                          (if (null? g$maps$9260$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9257$14YGsk)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9211$14YGsk
                                   g$src$9257$14YGsk
                                   g$var$9258$14YGsk
                                   (- g$level$9259$14YGsk '1)
                                   (cdr g$maps$9260$14YGsk))))
                              (case-lambda
                                ((g$outer-var$9263$14YGsk
                                   g$outer-maps$9264$14YGsk)
                                 ((case-lambda
                                    ((g$outer-maps$9265$14YGsk
                                       g$outer-var$9266$14YGsk)
                                     ((case-lambda
                                        ((g$t$9267$14YGsk)
                                         (if g$t$9267$14YGsk
                                           ((case-lambda
                                              ((g$b$9268$14YGsk)
                                               (values
                                                 (cdr g$b$9268$14YGsk)
                                                 g$maps$9260$14YGsk)))
                                            g$t$9267$14YGsk)
                                           ((case-lambda
                                              ((g$inner-var$9269$14YGsk)
                                               (values
                                                 g$inner-var$9269$14YGsk
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9266$14YGsk
                                                       g$inner-var$9269$14YGsk)
                                                     (car g$maps$9260$14YGsk))
                                                   g$outer-maps$9265$14YGsk))))
                                            (g$gen-lexical$7059$14YGsk 'tmp)))))
                                      (assq
                                        g$outer-var$9266$14YGsk
                                        (car g$maps$9260$14YGsk)))))
                                  g$outer-maps$9264$14YGsk
                                  g$outer-var$9263$14YGsk)))))))))
                   (g$gen-append$9212$14YGsk
                     (case-lambda
                       ((g$x$9255$14YGsk g$y$9256$14YGsk)
                        (if (equal? g$y$9256$14YGsk ''())
                          g$x$9255$14YGsk
                          (list 'append g$x$9255$14YGsk g$y$9256$14YGsk)))))
                   (g$gen-mappend$9213$14YGsk
                     (case-lambda
                       ((g$e$9253$14YGsk g$map-env$9254$14YGsk)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9214$14YGsk
                            g$e$9253$14YGsk
                            g$map-env$9254$14YGsk)))))
                   (g$gen-map$9214$14YGsk
                     (case-lambda
                       ((g$e$9244$14YGsk g$map-env$9245$14YGsk)
                        ((case-lambda
                           ((g$formals$9246$14YGsk g$actuals$9247$14YGsk)
                            (if (eq? (car g$e$9244$14YGsk) 'ref)
                              (car g$actuals$9247$14YGsk)
                              (if (g$for-all$5356$14YGsk
                                    (case-lambda
                                      ((g$x$9248$14YGsk)
                                       (if (eq? (car g$x$9248$14YGsk) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$4887$14YGsk
                                               g$x$9248$14YGsk)
                                             g$formals$9246$14YGsk))
                                         '#f)))
                                    (cdr g$e$9244$14YGsk))
                                ((case-lambda
                                   ((g$args$9249$14YGsk)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9244$14YGsk))
                                        g$args$9249$14YGsk))))
                                 (map ((case-lambda
                                         ((g$r$9250$14YGsk)
                                          (case-lambda
                                            ((g$x$9251$14YGsk)
                                             (cdr (assq
                                                    (g$cadr$4887$14YGsk
                                                      g$x$9251$14YGsk)
                                                    g$r$9250$14YGsk))))))
                                       (map cons
                                            g$formals$9246$14YGsk
                                            g$actuals$9247$14YGsk))
                                      (cdr g$e$9244$14YGsk)))
                                (g$cons*$5358$14YGsk
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9246$14YGsk
                                    g$e$9244$14YGsk)
                                  g$actuals$9247$14YGsk)))))
                         (map cdr g$map-env$9245$14YGsk)
                         (map (case-lambda
                                ((g$x$9252$14YGsk)
                                 (list 'ref (car g$x$9252$14YGsk))))
                              g$map-env$9245$14YGsk)))))
                   (g$gen-cons$9215$14YGsk
                     (case-lambda
                       ((g$e$9236$14YGsk
                          g$x$9237$14YGsk
                          g$y$9238$14YGsk
                          g$xnew$9239$14YGsk
                          g$ynew$9240$14YGsk)
                        ((case-lambda
                           ((g$t$9241$14YGsk)
                            (if (memv g$t$9241$14YGsk '(quote))
                              (if (eq? (car g$xnew$9239$14YGsk) 'quote)
                                ((case-lambda
                                   ((g$xnew$9242$14YGsk g$ynew$9243$14YGsk)
                                    (if (if (eq? g$xnew$9242$14YGsk
                                                 g$x$9237$14YGsk)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9243$14YGsk
                                                 g$y$9238$14YGsk))
                                          '#f)
                                      (list 'quote g$e$9236$14YGsk)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9242$14YGsk
                                          g$ynew$9243$14YGsk)))))
                                 (g$cadr$4887$14YGsk g$xnew$9239$14YGsk)
                                 (g$cadr$4887$14YGsk g$ynew$9240$14YGsk))
                                (if (null?
                                      (g$cadr$4887$14YGsk g$ynew$9240$14YGsk))
                                  (list 'list g$xnew$9239$14YGsk)
                                  (list
                                    'cons
                                    g$xnew$9239$14YGsk
                                    g$ynew$9240$14YGsk)))
                              (if (memv g$t$9241$14YGsk '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9239$14YGsk
                                    (cdr g$ynew$9240$14YGsk)))
                                (list
                                  'cons
                                  g$xnew$9239$14YGsk
                                  g$ynew$9240$14YGsk)))))
                         (car g$ynew$9240$14YGsk)))))
                   (g$gen-vector$9216$14YGsk
                     (case-lambda
                       ((g$e$9233$14YGsk g$ls$9234$14YGsk g$lsnew$9235$14YGsk)
                        (if (eq? (car g$lsnew$9235$14YGsk) 'quote)
                          (if (eq? (g$cadr$4887$14YGsk g$lsnew$9235$14YGsk)
                                   g$ls$9234$14YGsk)
                            (list 'quote g$e$9233$14YGsk)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$4887$14YGsk g$lsnew$9235$14YGsk))))
                          (if (eq? (car g$lsnew$9235$14YGsk) 'list)
                            (cons 'vector (cdr g$lsnew$9235$14YGsk))
                            (list 'list->vector g$lsnew$9235$14YGsk))))))
                   (g$regen$9217$14YGsk
                     (case-lambda
                       ((g$x$9230$14YGsk)
                        ((case-lambda
                           ((g$t$9231$14YGsk)
                            (if (memv g$t$9231$14YGsk '(ref))
                              (g$cadr$4887$14YGsk g$x$9230$14YGsk)
                              (if (memv g$t$9231$14YGsk '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$4887$14YGsk g$x$9230$14YGsk))
                                (if (memv g$t$9231$14YGsk '(quote))
                                  (list
                                    'quote
                                    (g$cadr$4887$14YGsk g$x$9230$14YGsk))
                                  (if (memv g$t$9231$14YGsk '(lambda))
                                    (g$build-lambda$7046$14YGsk
                                      '#f
                                      (g$cadr$4887$14YGsk g$x$9230$14YGsk)
                                      (g$regen$9217$14YGsk
                                        (g$caddr$4893$14YGsk g$x$9230$14YGsk)))
                                    (if (memv g$t$9231$14YGsk '(map))
                                      ((case-lambda
                                         ((g$ls$9232$14YGsk)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9232$14YGsk)))
                                       (map g$regen$9217$14YGsk
                                            (cdr g$x$9230$14YGsk)))
                                      (cons
                                        (list 'primitive (car g$x$9230$14YGsk))
                                        (map g$regen$9217$14YGsk
                                             (cdr g$x$9230$14YGsk))))))))))
                         (car g$x$9230$14YGsk))))))
           (case-lambda
             ((g$e$9218$14YGsk g$r$9219$14YGsk g$mr$9220$14YGsk)
              ((case-lambda
                 ((g$t$9221$14YGsk)
                  ((case-lambda
                     ((g$ls/false$9222$14YGsk)
                      (if g$ls/false$9222$14YGsk
                        (apply
                          (case-lambda
                            ((g$x$9223$14YGsk)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9210$14YGsk
                                    g$e$9218$14YGsk
                                    g$x$9223$14YGsk
                                    g$r$9219$14YGsk
                                    '()
                                    g$ellipsis?$7394$14YGsk
                                    '#f)))
                               (case-lambda
                                 ((g$e$9226$14YGsk g$maps$9227$14YGsk)
                                  ((case-lambda
                                     ((g$maps$9228$14YGsk g$e$9229$14YGsk)
                                      (g$regen$9217$14YGsk g$e$9229$14YGsk)))
                                   g$maps$9227$14YGsk
                                   g$e$9226$14YGsk))))))
                          g$ls/false$9222$14YGsk)
                        (g$syntax-violation$7502$14YGsk
                          '#f
                          '"invalid syntax"
                          g$t$9221$14YGsk))))
                   (g$syntax-dispatch$7393$14YGsk g$t$9221$14YGsk '(_ any)))))
               g$e$9218$14YGsk))))))))
   (g$core-macro-transformer$7400$14YGsk
     g$core-macro-transformer$10836$14YGsk
     (case-lambda
       ((g$name$9374$14YGsk)
        ((case-lambda
           ((g$t$9375$14YGsk)
            (if (memv g$t$9375$14YGsk '(quote))
              g$quote-transformer$7353$14YGsk
              (if (memv g$t$9375$14YGsk '(lambda))
                g$lambda-transformer$7355$14YGsk
                (if (memv g$t$9375$14YGsk '(case-lambda))
                  g$case-lambda-transformer$7354$14YGsk
                  (if (memv g$t$9375$14YGsk '(letrec))
                    g$letrec-transformer$7343$14YGsk
                    (if (memv g$t$9375$14YGsk '(letrec*))
                      g$letrec*-transformer$7344$14YGsk
                      (if (memv g$t$9375$14YGsk '(if))
                        g$if-transformer$7351$14YGsk
                        (if (memv g$t$9375$14YGsk '(foreign-call))
                          g$foreign-call-transformer$7391$14YGsk
                          (if (memv g$t$9375$14YGsk '(syntax-case))
                            g$syntax-case-transformer$7397$14YGsk
                            (if (memv g$t$9375$14YGsk '(syntax))
                              g$syntax-transformer$7399$14YGsk
                              (if (memv g$t$9375$14YGsk '(type-descriptor))
                                g$type-descriptor-transformer$7346$14YGsk
                                (if (memv
                                      g$t$9375$14YGsk
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7347$14YGsk
                                  (if (memv
                                        g$t$9375$14YGsk
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7348$14YGsk
                                    (if (memv
                                          g$t$9375$14YGsk
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7345$14YGsk
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9374$14YGsk))))))))))))))))
         g$name$9374$14YGsk))))
   (g$file-options-macro$7401$14YGsk
     g$file-options-macro$10837$14YGsk
     (case-lambda
       ((g$x$9376$14YGsk)
        ((case-lambda
           ((g$t$9377$14YGsk)
            ((case-lambda
               ((g$ls/false$9378$14YGsk)
                (if (if g$ls/false$9378$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$9379$14YGsk)
                             (if (g$for-all$5356$14YGsk
                                   g$id?$7115$14YGsk
                                   g$opt*$9379$14YGsk)
                               (begin
                                 '#f
                                 (g$file-options-spec$6384$14YGsk
                                   (map g$id->sym$7116$14YGsk
                                        g$opt*$9379$14YGsk)))
                               '#f)))
                          g$ls/false$9378$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$9380$14YGsk)
                       (g$bless$7356$14YGsk
                         (list
                           'quote
                           (g$file-options-spec$6384$14YGsk
                             (map g$id->sym$7116$14YGsk g$opt*$9380$14YGsk))))))
                    g$ls/false$9378$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$9377$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$9377$14YGsk '(_ . each-any)))))
         g$x$9376$14YGsk))))
   (g$symbol-macro$7402$14YGsk
     g$symbol-macro$10838$14YGsk
     (case-lambda
       ((g$x$9381$14YGsk g$set$9382$14YGsk)
        ((case-lambda
           ((g$t$9383$14YGsk)
            ((case-lambda
               ((g$ls/false$9384$14YGsk)
                (if (if g$ls/false$9384$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9385$14YGsk)
                             (if (g$id?$7115$14YGsk g$name$9385$14YGsk)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7116$14YGsk g$name$9385$14YGsk)
                                   g$set$9382$14YGsk))
                               '#f)))
                          g$ls/false$9384$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9386$14YGsk)
                       (g$bless$7356$14YGsk (list 'quote g$name$9386$14YGsk))))
                    g$ls/false$9384$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$9383$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$9383$14YGsk '(_ any)))))
         g$x$9381$14YGsk))))
   (g$macro-transformer$7403$14YGsk
     g$macro-transformer$10839$14YGsk
     (case-lambda
       ((g$x$9387$14YGsk)
        (if (procedure? g$x$9387$14YGsk)
          g$x$9387$14YGsk
          (if (symbol? g$x$9387$14YGsk)
            ((case-lambda
               ((g$t$9388$14YGsk)
                (if (memv g$t$9388$14YGsk '(define-record-type))
                  g$define-record-type-macro$7387$14YGsk
                  (if (memv g$t$9388$14YGsk '(define-struct))
                    g$define-struct-macro$7386$14YGsk
                    (if (memv g$t$9388$14YGsk '(include))
                      g$include-macro$7381$14YGsk
                      (if (memv g$t$9388$14YGsk '(cond))
                        g$cond-macro$7379$14YGsk
                        (if (memv g$t$9388$14YGsk '(let))
                          g$let-macro$7359$14YGsk
                          (if (memv g$t$9388$14YGsk '(do))
                            g$do-macro$7375$14YGsk
                            (if (memv g$t$9388$14YGsk '(or))
                              g$or-macro$7377$14YGsk
                              (if (memv g$t$9388$14YGsk '(and))
                                g$and-macro$7378$14YGsk
                                (if (memv g$t$9388$14YGsk '(let*))
                                  g$let*-macro$7376$14YGsk
                                  (if (memv g$t$9388$14YGsk '(let-values))
                                    g$let-values-macro$7360$14YGsk
                                    (if (memv g$t$9388$14YGsk '(let*-values))
                                      g$let*-values-macro$7361$14YGsk
                                      (if (memv g$t$9388$14YGsk '(syntax-rules))
                                        g$syntax-rules-macro$7383$14YGsk
                                        (if (memv g$t$9388$14YGsk '(quasiquote))
                                          g$quasiquote-macro$7384$14YGsk
                                          (if (memv
                                                g$t$9388$14YGsk
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7385$14YGsk
                                            (if (memv
                                                  g$t$9388$14YGsk
                                                  '(with-syntax))
                                              g$with-syntax-macro$7357$14YGsk
                                              (if (memv g$t$9388$14YGsk '(when))
                                                g$when-macro$7349$14YGsk
                                                (if (memv
                                                      g$t$9388$14YGsk
                                                      '(unless))
                                                  g$unless-macro$7350$14YGsk
                                                  (if (memv
                                                        g$t$9388$14YGsk
                                                        '(case))
                                                    g$case-macro$7352$14YGsk
                                                    (if (memv
                                                          g$t$9388$14YGsk
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7374$14YGsk
                                                      (if (memv
                                                            g$t$9388$14YGsk
                                                            '(time))
                                                        g$time-macro$7370$14YGsk
                                                        (if (memv
                                                              g$t$9388$14YGsk
                                                              '(delay))
                                                          g$delay-macro$7371$14YGsk
                                                          (if (memv
                                                                g$t$9388$14YGsk
                                                                '(assert))
                                                            g$assert-macro$7372$14YGsk
                                                            (if (memv
                                                                  g$t$9388$14YGsk
                                                                  '(endianness))
                                                              g$endianness-macro$7373$14YGsk
                                                              (if (memv
                                                                    g$t$9388$14YGsk
                                                                    '(guard))
                                                                g$guard-macro$7368$14YGsk
                                                                (if (memv
                                                                      g$t$9388$14YGsk
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7369$14YGsk
                                                                  (if (memv
                                                                        g$t$9388$14YGsk
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7362$14YGsk
                                                                    (if (memv
                                                                          g$t$9388$14YGsk
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7363$14YGsk
                                                                      (if (memv
                                                                            g$t$9388$14YGsk
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7364$14YGsk
                                                                        (if (memv
                                                                              g$t$9388$14YGsk
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7366$14YGsk
                                                                          (if (memv
                                                                                g$t$9388$14YGsk
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7367$14YGsk
                                                                            (if (memv
                                                                                  g$t$9388$14YGsk
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7388$14YGsk
                                                                              (if (memv
                                                                                    g$t$9388$14YGsk
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7390$14YGsk
                                                                                (if (memv
                                                                                      g$t$9388$14YGsk
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7382$14YGsk
                                                                                  (if (memv
                                                                                        g$t$9388$14YGsk
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9389$14YGsk)
                                                                                       (g$symbol-macro$7402$14YGsk
                                                                                         g$x$9389$14YGsk
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (memv
                                                                                          g$t$9388$14YGsk
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9390$14YGsk)
                                                                                         (g$symbol-macro$7402$14YGsk
                                                                                           g$x$9390$14YGsk
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (memv
                                                                                            g$t$9388$14YGsk
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9391$14YGsk)
                                                                                           (g$symbol-macro$7402$14YGsk
                                                                                             g$x$9391$14YGsk
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (memv
                                                                                              g$t$9388$14YGsk
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7401$14YGsk
                                                                                          (if (memv
                                                                                                g$t$9388$14YGsk
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7389$14YGsk
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9387$14YGsk)))))))))))))))))))))))))))))))))))))))))
             g$x$9387$14YGsk)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9387$14YGsk))))))
   (g$local-macro-transformer$7404$14YGsk
     g$local-macro-transformer$10840$14YGsk
     (case-lambda ((g$x$9392$14YGsk) (car g$x$9392$14YGsk))))
   (g$do-macro-call$7405$14YGsk
     g$do-macro-call$10841$14YGsk
     (case-lambda
       ((g$transformer$9393$14YGsk g$expr$9394$14YGsk)
        ((case-lambda
           ((g$out$9395$14YGsk)
            (begin
              ((letrec ((g$f$9396$14YGsk
                          (case-lambda
                            ((g$x$9397$14YGsk)
                             (if (not (g$stx?$7087$14YGsk g$x$9397$14YGsk))
                               (if (pair? g$x$9397$14YGsk)
                                 (begin
                                   (g$f$9396$14YGsk (car g$x$9397$14YGsk))
                                   (g$f$9396$14YGsk (cdr g$x$9397$14YGsk)))
                                 (if (vector? g$x$9397$14YGsk)
                                   (vector-for-each
                                     g$f$9396$14YGsk
                                     g$x$9397$14YGsk)
                                   (if (symbol? g$x$9397$14YGsk)
                                     (g$syntax-violation$7502$14YGsk
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9394$14YGsk
                                       g$x$9397$14YGsk)
                                     (void))))
                               (void))))))
                 g$f$9396$14YGsk)
               g$out$9395$14YGsk)
              (g$add-mark$7104$14YGsk
                (g$gen-mark$7099$14YGsk)
                g$out$9395$14YGsk
                g$expr$9394$14YGsk))))
         (g$transformer$9393$14YGsk
           (g$add-mark$7104$14YGsk
             g$anti-mark$7100$14YGsk
             g$expr$9394$14YGsk
             '#f))))))
   (g$chi-macro$7406$14YGsk
     g$chi-macro$10842$14YGsk
     (case-lambda
       ((g$p$9398$14YGsk g$e$9399$14YGsk)
        (g$do-macro-call$7405$14YGsk
          (g$macro-transformer$7403$14YGsk g$p$9398$14YGsk)
          g$e$9399$14YGsk))))
   (g$chi-local-macro$7407$14YGsk
     g$chi-local-macro$10843$14YGsk
     (case-lambda
       ((g$p$9400$14YGsk g$e$9401$14YGsk)
        (g$do-macro-call$7405$14YGsk
          (g$local-macro-transformer$7404$14YGsk g$p$9400$14YGsk)
          g$e$9401$14YGsk))))
   (g$chi-global-macro$7408$14YGsk
     g$chi-global-macro$10844$14YGsk
     (case-lambda
       ((g$p$9402$14YGsk g$e$9403$14YGsk)
        ((case-lambda
           ((g$lib$9404$14YGsk g$loc$9405$14YGsk)
            (begin
              (g$visit-library$6931$14YGsk g$lib$9404$14YGsk)
              ((case-lambda
                 ((g$x$9406$14YGsk)
                  ((case-lambda
                     ((g$transformer$9407$14YGsk)
                      (g$do-macro-call$7405$14YGsk
                        g$transformer$9407$14YGsk
                        g$e$9403$14YGsk)))
                   (if (procedure? g$x$9406$14YGsk)
                     g$x$9406$14YGsk
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9406$14YGsk)))))
               (symbol-value g$loc$9405$14YGsk)))))
         (car g$p$9402$14YGsk)
         (cdr g$p$9402$14YGsk)))))
   (g$chi-expr*$7409$14YGsk
     g$chi-expr*$10845$14YGsk
     (case-lambda
       ((g$e*$9408$14YGsk g$r$9409$14YGsk g$mr$9410$14YGsk)
        (if (null? g$e*$9408$14YGsk)
          '()
          ((case-lambda
             ((g$e$9411$14YGsk)
              (cons
                g$e$9411$14YGsk
                (g$chi-expr*$7409$14YGsk
                  (cdr g$e*$9408$14YGsk)
                  g$r$9409$14YGsk
                  g$mr$9410$14YGsk))))
           (g$chi-expr$7411$14YGsk
             (car g$e*$9408$14YGsk)
             g$r$9409$14YGsk
             g$mr$9410$14YGsk))))))
   (g$chi-application$7410$14YGsk
     g$chi-application$10846$14YGsk
     (case-lambda
       ((g$e$9412$14YGsk g$r$9413$14YGsk g$mr$9414$14YGsk)
        ((case-lambda
           ((g$t$9415$14YGsk)
            ((case-lambda
               ((g$ls/false$9416$14YGsk)
                (if g$ls/false$9416$14YGsk
                  (apply
                    (case-lambda
                      ((g$rator$9417$14YGsk g$rands$9418$14YGsk)
                       ((case-lambda
                          ((g$rator$9419$14YGsk)
                           (cons
                             g$rator$9419$14YGsk
                             (g$chi-expr*$7409$14YGsk
                               g$rands$9418$14YGsk
                               g$r$9413$14YGsk
                               g$mr$9414$14YGsk))))
                        (g$chi-expr$7411$14YGsk
                          g$rator$9417$14YGsk
                          g$r$9413$14YGsk
                          g$mr$9414$14YGsk))))
                    g$ls/false$9416$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$9415$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$9415$14YGsk
               '(any . each-any)))))
         g$e$9412$14YGsk))))
   (g$chi-expr$7411$14YGsk
     g$chi-expr$10847$14YGsk
     (case-lambda
       ((g$e$9420$14YGsk g$r$9421$14YGsk g$mr$9422$14YGsk)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7135$14YGsk g$e$9420$14YGsk g$r$9421$14YGsk)))
          (case-lambda
            ((g$type$9426$14YGsk g$value$9427$14YGsk g$kwd$9428$14YGsk)
             ((case-lambda
                ((g$kwd$9429$14YGsk g$value$9430$14YGsk g$type$9431$14YGsk)
                 ((case-lambda
                    ((g$t$9432$14YGsk)
                     (if (memv g$t$9432$14YGsk '(core-macro))
                       ((case-lambda
                          ((g$transformer$9433$14YGsk)
                           (g$transformer$9433$14YGsk
                             g$e$9420$14YGsk
                             g$r$9421$14YGsk
                             g$mr$9422$14YGsk)))
                        (g$core-macro-transformer$7400$14YGsk
                          g$value$9430$14YGsk))
                       (if (memv g$t$9432$14YGsk '(global))
                         ((case-lambda
                            ((g$lib$9434$14YGsk)
                             ((case-lambda
                                ((g$loc$9435$14YGsk)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7445$14YGsk)
                                        g$lib$9434$14YGsk)
                                       g$loc$9435$14YGsk))))))
                              (cdr g$value$9430$14YGsk))))
                          (car g$value$9430$14YGsk))
                         (if (memv g$t$9432$14YGsk '(core-prim))
                           ((case-lambda
                              ((g$name$9436$14YGsk)
                               (list 'primitive g$name$9436$14YGsk)))
                            g$value$9430$14YGsk)
                           (if (memv g$t$9432$14YGsk '(call))
                             (g$chi-application$7410$14YGsk
                               g$e$9420$14YGsk
                               g$r$9421$14YGsk
                               g$mr$9422$14YGsk)
                             (if (memv g$t$9432$14YGsk '(lexical))
                               ((case-lambda
                                  ((g$lex$9437$14YGsk) g$lex$9437$14YGsk))
                                (g$lexical-var$7337$14YGsk g$value$9430$14YGsk))
                               (if (memv
                                     g$t$9432$14YGsk
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7411$14YGsk
                                   (g$chi-global-macro$7408$14YGsk
                                     g$value$9430$14YGsk
                                     g$e$9420$14YGsk)
                                   g$r$9421$14YGsk
                                   g$mr$9422$14YGsk)
                                 (if (memv
                                       g$t$9432$14YGsk
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7411$14YGsk
                                     (g$chi-local-macro$7407$14YGsk
                                       g$value$9430$14YGsk
                                       g$e$9420$14YGsk)
                                     g$r$9421$14YGsk
                                     g$mr$9422$14YGsk)
                                   (if (memv g$t$9432$14YGsk '(macro macro!))
                                     (g$chi-expr$7411$14YGsk
                                       (g$chi-macro$7406$14YGsk
                                         g$value$9430$14YGsk
                                         g$e$9420$14YGsk)
                                       g$r$9421$14YGsk
                                       g$mr$9422$14YGsk)
                                     (if (memv g$t$9432$14YGsk '(constant))
                                       ((case-lambda
                                          ((g$datum$9438$14YGsk)
                                           (list 'quote g$datum$9438$14YGsk)))
                                        g$value$9430$14YGsk)
                                       (if (memv g$t$9432$14YGsk '(set!))
                                         (g$chi-set!$7412$14YGsk
                                           g$e$9420$14YGsk
                                           g$r$9421$14YGsk
                                           g$mr$9422$14YGsk)
                                         (if (memv g$t$9432$14YGsk '(begin))
                                           ((case-lambda
                                              ((g$t$9439$14YGsk)
                                               ((case-lambda
                                                  ((g$ls/false$9440$14YGsk)
                                                   (if g$ls/false$9440$14YGsk
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9441$14YGsk
                                                            g$x*$9442$14YGsk)
                                                          (g$build-sequence$7049$14YGsk
                                                            '#f
                                                            (g$chi-expr*$7409$14YGsk
                                                              (cons
                                                                g$x$9441$14YGsk
                                                                g$x*$9442$14YGsk)
                                                              g$r$9421$14YGsk
                                                              g$mr$9422$14YGsk))))
                                                       g$ls/false$9440$14YGsk)
                                                     (g$syntax-violation$7502$14YGsk
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9439$14YGsk))))
                                                (g$syntax-dispatch$7393$14YGsk
                                                  g$t$9439$14YGsk
                                                  '(_ any . each-any)))))
                                            g$e$9420$14YGsk)
                                           (if (memv
                                                 g$t$9432$14YGsk
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9443$14YGsk)
                                                 ((case-lambda
                                                    ((g$ls/false$9444$14YGsk)
                                                     (if (if g$ls/false$9444$14YGsk
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9445$14YGsk
                                                                    g$xrhs*$9446$14YGsk
                                                                    g$xbody$9447$14YGsk
                                                                    g$xbody*$9448$14YGsk)
                                                                  (if (not (g$valid-bound-ids?$7120$14YGsk
                                                                             g$xlhs*$9445$14YGsk))
                                                                    (g$syntax-violation$7502$14YGsk
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9420$14YGsk)
                                                                    (void))))
                                                               g$ls/false$9444$14YGsk))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9449$14YGsk
                                                              g$xrhs*$9450$14YGsk
                                                              g$xbody$9451$14YGsk
                                                              g$xbody*$9452$14YGsk)
                                                            ((case-lambda
                                                               ((g$xlab*$9453$14YGsk)
                                                                ((case-lambda
                                                                   ((g$xrib$9454$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$xb*$9455$14YGsk)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7049$14YGsk
                                                                              '#f
                                                                              (g$chi-expr*$7409$14YGsk
                                                                                (map (case-lambda
                                                                                       ((g$x$9456$14YGsk)
                                                                                        (g$add-subst$7105$14YGsk
                                                                                          g$xrib$9454$14YGsk
                                                                                          g$x$9456$14YGsk)))
                                                                                     (cons
                                                                                       g$xbody$9451$14YGsk
                                                                                       g$xbody*$9452$14YGsk))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9453$14YGsk
                                                                                       g$xb*$9455$14YGsk)
                                                                                  g$r$9421$14YGsk)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9453$14YGsk
                                                                                       g$xb*$9455$14YGsk)
                                                                                  g$mr$9422$14YGsk))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9457$14YGsk)
                                                                             (g$make-eval-transformer$7147$14YGsk
                                                                               (g$expand-transformer$7438$14YGsk
                                                                                 (if (eq? g$type$9431$14YGsk
                                                                                          'let-syntax)
                                                                                   g$x$9457$14YGsk
                                                                                   (g$add-subst$7105$14YGsk
                                                                                     g$xrib$9454$14YGsk
                                                                                     g$x$9457$14YGsk))
                                                                                 g$mr$9422$14YGsk))))
                                                                          g$xrhs*$9450$14YGsk))))
                                                                 (g$make-full-rib$7083$14YGsk
                                                                   g$xlhs*$9449$14YGsk
                                                                   g$xlab*$9453$14YGsk))))
                                                             (map g$gen-label$7061$14YGsk
                                                                  g$xlhs*$9449$14YGsk))))
                                                         g$ls/false$9444$14YGsk)
                                                       (g$syntax-violation$7502$14YGsk
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9443$14YGsk))))
                                                  (g$syntax-dispatch$7393$14YGsk
                                                    g$t$9443$14YGsk
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9420$14YGsk)
                                             (if (memv
                                                   g$t$9432$14YGsk
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7502$14YGsk
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9420$14YGsk)
                                               (if (memv
                                                     g$t$9432$14YGsk
                                                     '(syntax))
                                                 (g$syntax-violation$7502$14YGsk
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9420$14YGsk)
                                                 (if (memv
                                                       g$t$9432$14YGsk
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7502$14YGsk
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9458$14YGsk)
                                                           (if (memv
                                                                 g$t$9458$14YGsk
                                                                 '(define))
                                                             '"a definition"
                                                             (if (memv
                                                                   g$t$9458$14YGsk
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (memv
                                                                     g$t$9458$14YGsk
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (memv
                                                                       g$t$9458$14YGsk
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (memv
                                                                         g$t$9458$14YGsk
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9431$14YGsk)
                                                       '" was found where an expression was expected")
                                                     g$e$9420$14YGsk)
                                                   (if (memv
                                                         g$t$9432$14YGsk
                                                         '(mutable))
                                                     (g$syntax-violation$7502$14YGsk
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9420$14YGsk)
                                                     (g$syntax-violation$7502$14YGsk
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9420$14YGsk)))))))))))))))))))
                  g$type$9431$14YGsk)))
              g$kwd$9428$14YGsk
              g$value$9427$14YGsk
              g$type$9426$14YGsk)))))))
   (g$chi-set!$7412$14YGsk
     g$chi-set!$10848$14YGsk
     (case-lambda
       ((g$e$9459$14YGsk g$r$9460$14YGsk g$mr$9461$14YGsk)
        ((case-lambda
           ((g$t$9462$14YGsk)
            ((case-lambda
               ((g$ls/false$9463$14YGsk)
                (if (if g$ls/false$9463$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9464$14YGsk g$v$9465$14YGsk)
                             (g$id?$7115$14YGsk g$x$9464$14YGsk)))
                          g$ls/false$9463$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9466$14YGsk g$v$9467$14YGsk)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7135$14YGsk
                              g$x$9466$14YGsk
                              g$r$9460$14YGsk)))
                         (case-lambda
                           ((g$type$9471$14YGsk
                              g$value$9472$14YGsk
                              g$kwd$9473$14YGsk)
                            ((case-lambda
                               ((g$kwd$9474$14YGsk
                                  g$value$9475$14YGsk
                                  g$type$9476$14YGsk)
                                ((case-lambda
                                   ((g$t$9477$14YGsk)
                                    (if (memv g$t$9477$14YGsk '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7339$14YGsk
                                          g$value$9475$14YGsk
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7337$14YGsk
                                            g$value$9475$14YGsk)
                                          (g$chi-expr$7411$14YGsk
                                            g$v$9467$14YGsk
                                            g$r$9460$14YGsk
                                            g$mr$9461$14YGsk)))
                                      (if (memv g$t$9477$14YGsk '(core-prim))
                                        (g$syntax-violation$7502$14YGsk
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9459$14YGsk)
                                        (if (memv g$t$9477$14YGsk '(global))
                                          (g$syntax-violation$7502$14YGsk
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9459$14YGsk)
                                          (if (memv
                                                g$t$9477$14YGsk
                                                '(global-macro!))
                                            (g$chi-expr$7411$14YGsk
                                              (g$chi-global-macro$7408$14YGsk
                                                g$value$9475$14YGsk
                                                g$e$9459$14YGsk)
                                              g$r$9460$14YGsk
                                              g$mr$9461$14YGsk)
                                            (if (memv
                                                  g$t$9477$14YGsk
                                                  '(local-macro!))
                                              (g$chi-expr$7411$14YGsk
                                                (g$chi-local-macro$7407$14YGsk
                                                  g$value$9475$14YGsk
                                                  g$e$9459$14YGsk)
                                                g$r$9460$14YGsk
                                                g$mr$9461$14YGsk)
                                              (if (memv
                                                    g$t$9477$14YGsk
                                                    '(mutable))
                                                (g$syntax-violation$7502$14YGsk
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9459$14YGsk)
                                                (g$syntax-violation$7502$14YGsk
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9459$14YGsk)))))))))
                                 g$type$9476$14YGsk)))
                             g$kwd$9473$14YGsk
                             g$value$9472$14YGsk
                             g$type$9471$14YGsk))))))
                    g$ls/false$9463$14YGsk)
                  (g$syntax-violation$7502$14YGsk
                    '#f
                    '"invalid syntax"
                    g$t$9462$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$9462$14YGsk '(_ any any)))))
         g$e$9459$14YGsk))))
   (g$verify-formals$7413$14YGsk
     g$verify-formals$10849$14YGsk
     (case-lambda
       ((g$fmls$9478$14YGsk g$stx$9479$14YGsk)
        ((case-lambda
           ((g$t$9480$14YGsk)
            ((case-lambda
               ((g$ls/false$9481$14YGsk)
                (if g$ls/false$9481$14YGsk
                  (apply
                    (case-lambda
                      ((g$x*$9482$14YGsk)
                       (if (not (g$valid-bound-ids?$7120$14YGsk
                                  g$x*$9482$14YGsk))
                         (g$invalid-fmls-error$7358$14YGsk
                           g$stx$9479$14YGsk
                           g$fmls$9478$14YGsk)
                         (void))))
                    g$ls/false$9481$14YGsk)
                  ((case-lambda
                     ((g$t$9483$14YGsk)
                      ((case-lambda
                         ((g$ls/false$9484$14YGsk)
                          (if g$ls/false$9484$14YGsk
                            (apply
                              (case-lambda
                                ((g$x*$9485$14YGsk g$x$9486$14YGsk)
                                 (if (not (g$valid-bound-ids?$7120$14YGsk
                                            (cons
                                              g$x$9486$14YGsk
                                              g$x*$9485$14YGsk)))
                                   (g$invalid-fmls-error$7358$14YGsk
                                     g$stx$9479$14YGsk
                                     g$fmls$9478$14YGsk)
                                   (void))))
                              g$ls/false$9484$14YGsk)
                            ((case-lambda
                               ((g$t$9487$14YGsk)
                                ((case-lambda
                                   ((g$ls/false$9488$14YGsk)
                                    (if g$ls/false$9488$14YGsk
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9479$14YGsk)))
                                        g$ls/false$9488$14YGsk)
                                      (g$syntax-violation$7502$14YGsk
                                        '#f
                                        '"invalid syntax"
                                        g$t$9487$14YGsk))))
                                 (g$syntax-dispatch$7393$14YGsk
                                   g$t$9487$14YGsk
                                   '_))))
                             g$t$9483$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$9483$14YGsk
                         '#(each+ any () any)))))
                   g$t$9480$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$9480$14YGsk 'each-any))))
         g$fmls$9478$14YGsk))))
   (g$chi-lambda-clause$7414$14YGsk
     g$chi-lambda-clause$10850$14YGsk
     (case-lambda
       ((g$stx$9489$14YGsk
          g$fmls$9490$14YGsk
          g$body*$9491$14YGsk
          g$r$9492$14YGsk
          g$mr$9493$14YGsk)
        ((case-lambda
           ((g$t$9494$14YGsk)
            ((case-lambda
               ((g$ls/false$9495$14YGsk)
                (if g$ls/false$9495$14YGsk
                  (apply
                    (case-lambda
                      ((g$x*$9496$14YGsk)
                       (begin
                         (g$verify-formals$7413$14YGsk
                           g$fmls$9490$14YGsk
                           g$stx$9489$14YGsk)
                         ((case-lambda
                            ((g$lex*$9497$14YGsk g$lab*$9498$14YGsk)
                             (values
                               g$lex*$9497$14YGsk
                               (g$chi-internal$7422$14YGsk
                                 (g$add-subst$7105$14YGsk
                                   (g$make-full-rib$7083$14YGsk
                                     g$x*$9496$14YGsk
                                     g$lab*$9498$14YGsk)
                                   g$body*$9491$14YGsk)
                                 (g$add-lexicals$7341$14YGsk
                                   g$lab*$9498$14YGsk
                                   g$lex*$9497$14YGsk
                                   g$r$9492$14YGsk)
                                 g$mr$9493$14YGsk))))
                          (map g$gen-lexical$7059$14YGsk g$x*$9496$14YGsk)
                          (map g$gen-label$7061$14YGsk g$x*$9496$14YGsk)))))
                    g$ls/false$9495$14YGsk)
                  ((case-lambda
                     ((g$t$9499$14YGsk)
                      ((case-lambda
                         ((g$ls/false$9500$14YGsk)
                          (if g$ls/false$9500$14YGsk
                            (apply
                              (case-lambda
                                ((g$x*$9501$14YGsk g$x$9502$14YGsk)
                                 (begin
                                   (g$verify-formals$7413$14YGsk
                                     g$fmls$9490$14YGsk
                                     g$stx$9489$14YGsk)
                                   ((case-lambda
                                      ((g$lex*$9503$14YGsk
                                         g$lab*$9504$14YGsk
                                         g$lex$9505$14YGsk
                                         g$lab$9506$14YGsk)
                                       (values
                                         (append
                                           g$lex*$9503$14YGsk
                                           g$lex$9505$14YGsk)
                                         (g$chi-internal$7422$14YGsk
                                           (g$add-subst$7105$14YGsk
                                             (g$make-full-rib$7083$14YGsk
                                               (cons
                                                 g$x$9502$14YGsk
                                                 g$x*$9501$14YGsk)
                                               (cons
                                                 g$lab$9506$14YGsk
                                                 g$lab*$9504$14YGsk))
                                             g$body*$9491$14YGsk)
                                           (g$add-lexicals$7341$14YGsk
                                             (cons
                                               g$lab$9506$14YGsk
                                               g$lab*$9504$14YGsk)
                                             (cons
                                               g$lex$9505$14YGsk
                                               g$lex*$9503$14YGsk)
                                             g$r$9492$14YGsk)
                                           g$mr$9493$14YGsk))))
                                    (map g$gen-lexical$7059$14YGsk
                                         g$x*$9501$14YGsk)
                                    (map g$gen-label$7061$14YGsk
                                         g$x*$9501$14YGsk)
                                    (g$gen-lexical$7059$14YGsk g$x$9502$14YGsk)
                                    (g$gen-label$7061$14YGsk
                                      g$x$9502$14YGsk)))))
                              g$ls/false$9500$14YGsk)
                            ((case-lambda
                               ((g$t$9507$14YGsk)
                                ((case-lambda
                                   ((g$ls/false$9508$14YGsk)
                                    (if g$ls/false$9508$14YGsk
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7502$14YGsk
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9490$14YGsk)))
                                        g$ls/false$9508$14YGsk)
                                      (g$syntax-violation$7502$14YGsk
                                        '#f
                                        '"invalid syntax"
                                        g$t$9507$14YGsk))))
                                 (g$syntax-dispatch$7393$14YGsk
                                   g$t$9507$14YGsk
                                   '_))))
                             g$t$9499$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$9499$14YGsk
                         '#(each+ any () any)))))
                   g$t$9494$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$9494$14YGsk 'each-any))))
         g$fmls$9490$14YGsk))))
   (g$chi-lambda-clause*$7415$14YGsk
     g$chi-lambda-clause*$10851$14YGsk
     (case-lambda
       ((g$stx$9509$14YGsk
          g$fmls*$9510$14YGsk
          g$body**$9511$14YGsk
          g$r$9512$14YGsk
          g$mr$9513$14YGsk)
        (if (null? g$fmls*$9510$14YGsk)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7414$14YGsk
                 g$stx$9509$14YGsk
                 (car g$fmls*$9510$14YGsk)
                 (car g$body**$9511$14YGsk)
                 g$r$9512$14YGsk
                 g$mr$9513$14YGsk)))
            (case-lambda
              ((g$a$9516$14YGsk g$b$9517$14YGsk)
               ((case-lambda
                  ((g$b$9518$14YGsk g$a$9519$14YGsk)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7415$14YGsk
                          g$stx$9509$14YGsk
                          (cdr g$fmls*$9510$14YGsk)
                          (cdr g$body**$9511$14YGsk)
                          g$r$9512$14YGsk
                          g$mr$9513$14YGsk)))
                     (case-lambda
                       ((g$a*$9522$14YGsk g$b*$9523$14YGsk)
                        ((case-lambda
                           ((g$b*$9524$14YGsk g$a*$9525$14YGsk)
                            (values
                              (cons g$a$9519$14YGsk g$a*$9525$14YGsk)
                              (cons g$b$9518$14YGsk g$b*$9524$14YGsk))))
                         g$b*$9523$14YGsk
                         g$a*$9522$14YGsk))))))
                g$b$9517$14YGsk
                g$a$9516$14YGsk))))))))
   (g$chi-defun$7416$14YGsk
     g$chi-defun$10852$14YGsk
     (case-lambda
       ((g$x$9526$14YGsk g$r$9527$14YGsk g$mr$9528$14YGsk)
        ((case-lambda
           ((g$fmls$9529$14YGsk g$body*$9530$14YGsk)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7414$14YGsk
                   g$fmls$9529$14YGsk
                   g$fmls$9529$14YGsk
                   g$body*$9530$14YGsk
                   g$r$9527$14YGsk
                   g$mr$9528$14YGsk)))
              (case-lambda
                ((g$fmls$9533$14YGsk g$body$9534$14YGsk)
                 ((case-lambda
                    ((g$body$9535$14YGsk g$fmls$9536$14YGsk)
                     (g$build-lambda$7046$14YGsk
                       '#f
                       g$fmls$9536$14YGsk
                       g$body$9535$14YGsk)))
                  g$body$9534$14YGsk
                  g$fmls$9533$14YGsk))))))
         (car g$x$9526$14YGsk)
         (cdr g$x$9526$14YGsk)))))
   (g$chi-rhs$7417$14YGsk
     g$chi-rhs$10853$14YGsk
     (case-lambda
       ((g$rhs$9537$14YGsk g$r$9538$14YGsk g$mr$9539$14YGsk)
        ((case-lambda
           ((g$t$9540$14YGsk)
            (if (memv g$t$9540$14YGsk '(defun))
              (g$chi-defun$7416$14YGsk
                (cdr g$rhs$9537$14YGsk)
                g$r$9538$14YGsk
                g$mr$9539$14YGsk)
              (if (memv g$t$9540$14YGsk '(expr))
                ((case-lambda
                   ((g$expr$9541$14YGsk)
                    (g$chi-expr$7411$14YGsk
                      g$expr$9541$14YGsk
                      g$r$9538$14YGsk
                      g$mr$9539$14YGsk)))
                 (cdr g$rhs$9537$14YGsk))
                (if (memv g$t$9540$14YGsk '(top-expr))
                  ((case-lambda
                     ((g$expr$9542$14YGsk)
                      (g$build-sequence$7049$14YGsk
                        '#f
                        (list
                          (g$chi-expr$7411$14YGsk
                            g$expr$9542$14YGsk
                            g$r$9538$14YGsk
                            g$mr$9539$14YGsk)
                          (g$build-void$7050$14YGsk)))))
                   (cdr g$rhs$9537$14YGsk))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9537$14YGsk))))))
         (car g$rhs$9537$14YGsk)))))
   (g$expand-interaction-rhs*/init*$7418$14YGsk
     g$expand-interaction-rhs*/init*$10854$14YGsk
     (case-lambda
       ((g$lhs*$9543$14YGsk
          g$rhs*$9544$14YGsk
          g$init*$9545$14YGsk
          g$r$9546$14YGsk
          g$mr$9547$14YGsk)
        ((letrec ((g$f$9548$14YGsk
                    (case-lambda
                      ((g$lhs*$9549$14YGsk g$rhs*$9550$14YGsk)
                       (if (null? g$lhs*$9549$14YGsk)
                         (map (case-lambda
                                ((g$x$9551$14YGsk)
                                 (g$chi-expr$7411$14YGsk
                                   g$x$9551$14YGsk
                                   g$r$9546$14YGsk
                                   g$mr$9547$14YGsk)))
                              g$init*$9545$14YGsk)
                         ((case-lambda
                            ((g$lhs$9552$14YGsk g$rhs$9553$14YGsk)
                             ((case-lambda
                                ((g$t$9554$14YGsk)
                                 (if (memv g$t$9554$14YGsk '(defun))
                                   ((case-lambda
                                      ((g$rhs$9555$14YGsk)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9552$14YGsk
                                           g$rhs$9555$14YGsk)
                                         (g$f$9548$14YGsk
                                           (cdr g$lhs*$9549$14YGsk)
                                           (cdr g$rhs*$9550$14YGsk)))))
                                    (g$chi-defun$7416$14YGsk
                                      (cdr g$rhs$9553$14YGsk)
                                      g$r$9546$14YGsk
                                      g$mr$9547$14YGsk))
                                   (if (memv g$t$9554$14YGsk '(expr))
                                     ((case-lambda
                                        ((g$rhs$9556$14YGsk)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9552$14YGsk
                                             g$rhs$9556$14YGsk)
                                           (g$f$9548$14YGsk
                                             (cdr g$lhs*$9549$14YGsk)
                                             (cdr g$rhs*$9550$14YGsk)))))
                                      (g$chi-expr$7411$14YGsk
                                        (cdr g$rhs$9553$14YGsk)
                                        g$r$9546$14YGsk
                                        g$mr$9547$14YGsk))
                                     (if (memv g$t$9554$14YGsk '(top-expr))
                                       ((case-lambda
                                          ((g$e$9557$14YGsk)
                                           (cons
                                             g$e$9557$14YGsk
                                             (g$f$9548$14YGsk
                                               (cdr g$lhs*$9549$14YGsk)
                                               (cdr g$rhs*$9550$14YGsk)))))
                                        (g$chi-expr$7411$14YGsk
                                          (cdr g$rhs$9553$14YGsk)
                                          g$r$9546$14YGsk
                                          g$mr$9547$14YGsk))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9553$14YGsk))))))
                              (car g$rhs$9553$14YGsk))))
                          (car g$lhs*$9549$14YGsk)
                          (car g$rhs*$9550$14YGsk)))))))
           g$f$9548$14YGsk)
         g$lhs*$9543$14YGsk
         g$rhs*$9544$14YGsk))))
   (g$chi-rhs*$7419$14YGsk
     g$chi-rhs*$10855$14YGsk
     (case-lambda
       ((g$rhs*$9558$14YGsk g$r$9559$14YGsk g$mr$9560$14YGsk)
        ((letrec ((g$f$9561$14YGsk
                    (case-lambda
                      ((g$ls$9562$14YGsk)
                       (if (null? g$ls$9562$14YGsk)
                         '()
                         ((case-lambda
                            ((g$a$9563$14YGsk)
                             (cons
                               g$a$9563$14YGsk
                               (g$f$9561$14YGsk (cdr g$ls$9562$14YGsk)))))
                          (g$chi-rhs$7417$14YGsk
                            (car g$ls$9562$14YGsk)
                            g$r$9559$14YGsk
                            g$mr$9560$14YGsk)))))))
           g$f$9561$14YGsk)
         g$rhs*$9558$14YGsk))))
   (g$find-bound=?$7420$14YGsk
     g$find-bound=?$10856$14YGsk
     (case-lambda
       ((g$x$9564$14YGsk g$lhs*$9565$14YGsk g$rhs*$9566$14YGsk)
        (if (null? g$lhs*$9565$14YGsk)
          '#f
          (if (g$bound-id=?$7118$14YGsk
                g$x$9564$14YGsk
                (car g$lhs*$9565$14YGsk))
            (car g$rhs*$9566$14YGsk)
            (g$find-bound=?$7420$14YGsk
              g$x$9564$14YGsk
              (cdr g$lhs*$9565$14YGsk)
              (cdr g$rhs*$9566$14YGsk)))))))
   (g$find-dups$7421$14YGsk
     g$find-dups$10857$14YGsk
     (case-lambda
       ((g$ls$9567$14YGsk)
        ((letrec ((g$f$9568$14YGsk
                    (case-lambda
                      ((g$ls$9569$14YGsk g$dups$9570$14YGsk)
                       (if (null? g$ls$9569$14YGsk)
                         g$dups$9570$14YGsk
                         ((case-lambda
                            ((g$t$9571$14YGsk)
                             (if g$t$9571$14YGsk
                               ((case-lambda
                                  ((g$x$9572$14YGsk)
                                   (g$f$9568$14YGsk
                                     (cdr g$ls$9569$14YGsk)
                                     (cons
                                       (list
                                         (car g$ls$9569$14YGsk)
                                         g$x$9572$14YGsk)
                                       g$dups$9570$14YGsk))))
                                g$t$9571$14YGsk)
                               (g$f$9568$14YGsk
                                 (cdr g$ls$9569$14YGsk)
                                 g$dups$9570$14YGsk))))
                          (g$find-bound=?$7420$14YGsk
                            (car g$ls$9569$14YGsk)
                            (cdr g$ls$9569$14YGsk)
                            (cdr g$ls$9569$14YGsk))))))))
           g$f$9568$14YGsk)
         g$ls$9567$14YGsk
         '()))))
   (g$chi-internal$7422$14YGsk
     g$chi-internal$10858$14YGsk
     (case-lambda
       ((g$e*$9573$14YGsk g$r$9574$14YGsk g$mr$9575$14YGsk)
        ((case-lambda
           ((g$rib$9576$14YGsk)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7437$14YGsk
                   (map (case-lambda
                          ((g$x$9584$14YGsk)
                           (g$add-subst$7105$14YGsk
                             g$rib$9576$14YGsk
                             g$x$9584$14YGsk)))
                        (g$syntax->list$7114$14YGsk g$e*$9573$14YGsk))
                   g$r$9574$14YGsk
                   g$mr$9575$14YGsk
                   '()
                   '()
                   '()
                   '()
                   g$rib$9576$14YGsk
                   '#f)))
              (case-lambda
                ((g$e*$9585$14YGsk
                   g$r$9586$14YGsk
                   g$mr$9587$14YGsk
                   g$lex*$9588$14YGsk
                   g$rhs*$9589$14YGsk
                   g$mod**$9590$14YGsk
                   g$kwd*$9591$14YGsk)
                 ((case-lambda
                    ((g$kwd*$9592$14YGsk
                       g$mod**$9593$14YGsk
                       g$rhs*$9594$14YGsk
                       g$lex*$9595$14YGsk
                       g$mr$9596$14YGsk
                       g$r$9597$14YGsk
                       g$e*$9598$14YGsk)
                     (begin
                       (if (null? g$e*$9598$14YGsk)
                         (g$syntax-violation$7502$14YGsk
                           '#f
                           '"no expression in body"
                           g$e*$9598$14YGsk)
                         (void))
                       ((case-lambda
                          ((g$init*$9599$14YGsk)
                           ((case-lambda
                              ((g$rhs*$9600$14YGsk)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7052$14YGsk
                                     '#f
                                     (reverse g$lex*$9595$14YGsk)
                                     (reverse g$rhs*$9600$14YGsk)
                                     (g$build-sequence$7049$14YGsk
                                       '#f
                                       g$init*$9599$14YGsk)))))))
                            (g$chi-rhs*$7419$14YGsk
                              g$rhs*$9594$14YGsk
                              g$r$9597$14YGsk
                              g$mr$9596$14YGsk))))
                        (g$chi-expr*$7409$14YGsk
                          (append
                            (apply append (reverse g$mod**$9593$14YGsk))
                            g$e*$9598$14YGsk)
                          g$r$9597$14YGsk
                          g$mr$9596$14YGsk)))))
                  g$kwd*$9591$14YGsk
                  g$mod**$9590$14YGsk
                  g$rhs*$9589$14YGsk
                  g$lex*$9588$14YGsk
                  g$mr$9587$14YGsk
                  g$r$9586$14YGsk
                  g$e*$9585$14YGsk))))))
         (g$make-empty-rib$7078$14YGsk)))))
   (g$parse-module$7423$14YGsk
     g$parse-module$10859$14YGsk
     (case-lambda
       ((g$e$9601$14YGsk)
        ((case-lambda
           ((g$t$9602$14YGsk)
            ((case-lambda
               ((g$ls/false$9603$14YGsk)
                (if g$ls/false$9603$14YGsk
                  (apply
                    (case-lambda
                      ((g$export*$9604$14YGsk g$b*$9605$14YGsk)
                       (begin
                         (if (not (g$for-all$5356$14YGsk
                                    g$id?$7115$14YGsk
                                    g$export*$9604$14YGsk))
                           (g$syntax-violation$7502$14YGsk
                             '#f
                             '"module exports must be identifiers"
                             g$e$9601$14YGsk)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9604$14YGsk)
                           g$b*$9605$14YGsk))))
                    g$ls/false$9603$14YGsk)
                  ((case-lambda
                     ((g$t$9606$14YGsk)
                      ((case-lambda
                         ((g$ls/false$9607$14YGsk)
                          (if g$ls/false$9607$14YGsk
                            (apply
                              (case-lambda
                                ((g$name$9608$14YGsk
                                   g$export*$9609$14YGsk
                                   g$b*$9610$14YGsk)
                                 (begin
                                   (if (not (g$id?$7115$14YGsk
                                              g$name$9608$14YGsk))
                                     (g$syntax-violation$7502$14YGsk
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9601$14YGsk)
                                     (void))
                                   (if (not (g$for-all$5356$14YGsk
                                              g$id?$7115$14YGsk
                                              g$export*$9609$14YGsk))
                                     (g$syntax-violation$7502$14YGsk
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9601$14YGsk)
                                     (void))
                                   (values
                                     g$name$9608$14YGsk
                                     (list->vector g$export*$9609$14YGsk)
                                     g$b*$9610$14YGsk))))
                              g$ls/false$9607$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$9606$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$9606$14YGsk
                         '(_ any each-any . each-any)))))
                   g$t$9602$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$9602$14YGsk
               '(_ each-any . each-any)))))
         g$e$9601$14YGsk))))
   (g$8451$7424$14YGsk
     g$8451$10860$14YGsk
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8454$14YGsk
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8453$7425$14YGsk g$8453$10861$14YGsk '#f)
   (g$8452$7426$14YGsk
     g$8452$10862$14YGsk
     (make-record-constructor-descriptor
       g$8451$7424$14YGsk
       '#f
       g$8453$7425$14YGsk))
   (g$module-interface?$7427$14YGsk
     g$module-interface?$10863$14YGsk
     (record-predicate g$8451$7424$14YGsk))
   (g$make-module-interface$7428$14YGsk
     g$make-module-interface$10864$14YGsk
     (record-constructor g$8452$7426$14YGsk))
   (g$module-interface-first-mark$7429$14YGsk
     g$module-interface-first-mark$10865$14YGsk
     (record-accessor g$8451$7424$14YGsk '0))
   (g$module-interface-exp-id-vec$7430$14YGsk
     g$module-interface-exp-id-vec$10866$14YGsk
     (record-accessor g$8451$7424$14YGsk '1))
   (g$module-interface-exp-lab-vec$7431$14YGsk
     g$module-interface-exp-lab-vec$10867$14YGsk
     (record-accessor g$8451$7424$14YGsk '2))
   (g$set-module-interface-first-mark!$7432$14YGsk
     g$set-module-interface-first-mark!$10868$14YGsk
     (record-mutator g$8451$7424$14YGsk '0))
   (g$set-module-interface-exp-id-vec!$7433$14YGsk
     g$set-module-interface-exp-id-vec!$10869$14YGsk
     (record-mutator g$8451$7424$14YGsk '1))
   (g$set-module-interface-exp-lab-vec!$7434$14YGsk
     g$set-module-interface-exp-lab-vec!$10870$14YGsk
     (record-mutator g$8451$7424$14YGsk '2))
   (g$module-interface-exp-id*$7435$14YGsk
     g$module-interface-exp-id*$10871$14YGsk
     (case-lambda
       ((g$iface$9611$14YGsk g$id$9612$14YGsk)
        (letrec* ((g$diff-marks$9613$14YGsk
                    (case-lambda
                      ((g$ls$9617$14YGsk g$x$9618$14YGsk)
                       (begin
                         (if (null? g$ls$9617$14YGsk)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9619$14YGsk)
                             (if (eq? g$a$9619$14YGsk g$x$9618$14YGsk)
                               '()
                               (cons
                                 g$a$9619$14YGsk
                                 (g$diff-marks$9613$14YGsk
                                   (cdr g$ls$9617$14YGsk)
                                   g$x$9618$14YGsk)))))
                          (car g$ls$9617$14YGsk)))))))
          ((case-lambda
             ((g$diff$9614$14YGsk g$id-vec$9615$14YGsk)
              (if (null? g$diff$9614$14YGsk)
                g$id-vec$9615$14YGsk
                (vector-map
                  (case-lambda
                    ((g$x$9616$14YGsk)
                     (g$make-stx$7088$14YGsk
                       (g$stx-expr$7089$14YGsk g$x$9616$14YGsk)
                       (append
                         g$diff$9614$14YGsk
                         (g$stx-mark*$7090$14YGsk g$x$9616$14YGsk))
                       '()
                       '())))
                  g$id-vec$9615$14YGsk))))
           (g$diff-marks$9613$14YGsk
             (g$stx-mark*$7090$14YGsk g$id$9612$14YGsk)
             (g$module-interface-first-mark$7429$14YGsk g$iface$9611$14YGsk))
           (g$module-interface-exp-id-vec$7430$14YGsk g$iface$9611$14YGsk))))))
   (g$chi-internal-module$7436$14YGsk
     g$chi-internal-module$10872$14YGsk
     (case-lambda
       ((g$e$9620$14YGsk
          g$r$9621$14YGsk
          g$mr$9622$14YGsk
          g$lex*$9623$14YGsk
          g$rhs*$9624$14YGsk
          g$mod**$9625$14YGsk
          g$kwd*$9626$14YGsk)
        (call-with-values
          (case-lambda (() (g$parse-module$7423$14YGsk g$e$9620$14YGsk)))
          (case-lambda
            ((g$name$9630$14YGsk g$exp-id*$9631$14YGsk g$e*$9632$14YGsk)
             ((case-lambda
                ((g$e*$9633$14YGsk g$exp-id*$9634$14YGsk g$name$9635$14YGsk)
                 ((case-lambda
                    ((g$rib$9636$14YGsk)
                     ((case-lambda
                        ((g$e*$9637$14YGsk)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7437$14YGsk
                                    g$e*$9637$14YGsk
                                    g$r$9621$14YGsk
                                    g$mr$9622$14YGsk
                                    g$lex*$9623$14YGsk
                                    g$rhs*$9624$14YGsk
                                    g$mod**$9625$14YGsk
                                    g$kwd*$9626$14YGsk
                                    g$rib$9636$14YGsk
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9645$14YGsk
                                    g$r$9646$14YGsk
                                    g$mr$9647$14YGsk
                                    g$lex*$9648$14YGsk
                                    g$rhs*$9649$14YGsk
                                    g$mod**$9650$14YGsk
                                    g$kwd*$9651$14YGsk)
                                  ((case-lambda
                                     ((g$kwd*$9652$14YGsk
                                        g$mod**$9653$14YGsk
                                        g$rhs*$9654$14YGsk
                                        g$lex*$9655$14YGsk
                                        g$mr$9656$14YGsk
                                        g$r$9657$14YGsk
                                        g$e*$9658$14YGsk)
                                      ((case-lambda
                                         ((g$exp-lab*$9659$14YGsk
                                            g$mod**$9660$14YGsk)
                                          (if (not g$name$9635$14YGsk)
                                            (values
                                              g$lex*$9655$14YGsk
                                              g$rhs*$9654$14YGsk
                                              g$exp-id*$9634$14YGsk
                                              g$exp-lab*$9659$14YGsk
                                              g$r$9657$14YGsk
                                              g$mr$9656$14YGsk
                                              g$mod**$9660$14YGsk
                                              g$kwd*$9652$14YGsk)
                                            ((case-lambda
                                               ((g$lab$9661$14YGsk
                                                  g$iface$9662$14YGsk)
                                                (values
                                                  g$lex*$9655$14YGsk
                                                  g$rhs*$9654$14YGsk
                                                  (vector g$name$9635$14YGsk)
                                                  (vector g$lab$9661$14YGsk)
                                                  (cons
                                                    (cons
                                                      g$lab$9661$14YGsk
                                                      (cons
                                                        '$module
                                                        g$iface$9662$14YGsk))
                                                    g$r$9657$14YGsk)
                                                  (cons
                                                    (cons
                                                      g$lab$9661$14YGsk
                                                      (cons
                                                        '$module
                                                        g$iface$9662$14YGsk))
                                                    g$mr$9656$14YGsk)
                                                  g$mod**$9660$14YGsk
                                                  g$kwd*$9652$14YGsk)))
                                             (g$gen-label$7061$14YGsk 'module)
                                             (g$make-module-interface$7428$14YGsk
                                               (car (g$stx-mark*$7090$14YGsk
                                                      g$name$9635$14YGsk))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9663$14YGsk)
                                                    (g$make-stx$7088$14YGsk
                                                      (g$stx-expr$7089$14YGsk
                                                        g$x$9663$14YGsk)
                                                      (g$stx-mark*$7090$14YGsk
                                                        g$x$9663$14YGsk)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9634$14YGsk)
                                               g$exp-lab*$9659$14YGsk)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9664$14YGsk)
                                            ((case-lambda
                                               ((g$t$9665$14YGsk)
                                                (if g$t$9665$14YGsk
                                                  g$t$9665$14YGsk
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7502$14YGsk
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9664$14YGsk)))))
                                             (g$id->label$7128$14YGsk
                                               (g$make-stx$7088$14YGsk
                                                 (g$id->sym$7116$14YGsk
                                                   g$x$9664$14YGsk)
                                                 (g$stx-mark*$7090$14YGsk
                                                   g$x$9664$14YGsk)
                                                 (list g$rib$9636$14YGsk)
                                                 '())))))
                                         g$exp-id*$9634$14YGsk)
                                       (cons
                                         g$e*$9658$14YGsk
                                         g$mod**$9653$14YGsk))))
                                   g$kwd*$9651$14YGsk
                                   g$mod**$9650$14YGsk
                                   g$rhs*$9649$14YGsk
                                   g$lex*$9648$14YGsk
                                   g$mr$9647$14YGsk
                                   g$r$9646$14YGsk
                                   g$e*$9645$14YGsk)))))))))
                      (map (case-lambda
                             ((g$x$9666$14YGsk)
                              (g$add-subst$7105$14YGsk
                                g$rib$9636$14YGsk
                                g$x$9666$14YGsk)))
                           (g$syntax->list$7114$14YGsk g$e*$9633$14YGsk)))))
                  (g$make-empty-rib$7078$14YGsk))))
              g$e*$9632$14YGsk
              g$exp-id*$9631$14YGsk
              g$name$9630$14YGsk)))))))
   (g$chi-body*$7437$14YGsk
     g$chi-body*$10873$14YGsk
     (case-lambda
       ((g$e*$9667$14YGsk
          g$r$9668$14YGsk
          g$mr$9669$14YGsk
          g$lex*$9670$14YGsk
          g$rhs*$9671$14YGsk
          g$mod**$9672$14YGsk
          g$kwd*$9673$14YGsk
          g$rib$9674$14YGsk
          g$top?$9675$14YGsk)
        (if (null? g$e*$9667$14YGsk)
          (values
            g$e*$9667$14YGsk
            g$r$9668$14YGsk
            g$mr$9669$14YGsk
            g$lex*$9670$14YGsk
            g$rhs*$9671$14YGsk
            g$mod**$9672$14YGsk
            g$kwd*$9673$14YGsk)
          ((case-lambda
             ((g$e$9676$14YGsk)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7135$14YGsk g$e$9676$14YGsk g$r$9668$14YGsk)))
                (case-lambda
                  ((g$type$9680$14YGsk g$value$9681$14YGsk g$kwd$9682$14YGsk)
                   ((case-lambda
                      ((g$kwd$9683$14YGsk
                         g$value$9684$14YGsk
                         g$type$9685$14YGsk)
                       ((case-lambda
                          ((g$kwd*$9686$14YGsk)
                           ((case-lambda
                              ((g$t$9687$14YGsk)
                               (if (memv g$t$9687$14YGsk '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7333$14YGsk
                                        g$e$9676$14YGsk)))
                                   (case-lambda
                                     ((g$id$9690$14YGsk g$rhs$9691$14YGsk)
                                      ((case-lambda
                                         ((g$rhs$9692$14YGsk g$id$9693$14YGsk)
                                          (begin
                                            (if (g$bound-id-member?$7122$14YGsk
                                                  g$id$9693$14YGsk
                                                  g$kwd*$9686$14YGsk)
                                              (g$syntax-violation$7502$14YGsk
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9676$14YGsk)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7063$14YGsk
                                                   g$id$9693$14YGsk
                                                   g$rib$9674$14YGsk)))
                                              (case-lambda
                                                ((g$lab$9696$14YGsk
                                                   g$lex$9697$14YGsk)
                                                 ((case-lambda
                                                    ((g$lex$9698$14YGsk
                                                       g$lab$9699$14YGsk)
                                                     (begin
                                                       (g$extend-rib!$7079$14YGsk
                                                         g$rib$9674$14YGsk
                                                         g$id$9693$14YGsk
                                                         g$lab$9699$14YGsk)
                                                       (g$chi-body*$7437$14YGsk
                                                         (cdr g$e*$9667$14YGsk)
                                                         (g$add-lexical$7340$14YGsk
                                                           g$lab$9699$14YGsk
                                                           g$lex$9698$14YGsk
                                                           g$r$9668$14YGsk)
                                                         g$mr$9669$14YGsk
                                                         (cons
                                                           g$lex$9698$14YGsk
                                                           g$lex*$9670$14YGsk)
                                                         (cons
                                                           g$rhs$9692$14YGsk
                                                           g$rhs*$9671$14YGsk)
                                                         g$mod**$9672$14YGsk
                                                         g$kwd*$9686$14YGsk
                                                         g$rib$9674$14YGsk
                                                         g$top?$9675$14YGsk))))
                                                  g$lex$9697$14YGsk
                                                  g$lab$9696$14YGsk)))))))
                                       g$rhs$9691$14YGsk
                                       g$id$9690$14YGsk))))
                                 (if (memv g$t$9687$14YGsk '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7334$14YGsk
                                          g$e$9676$14YGsk)))
                                     (case-lambda
                                       ((g$id$9702$14YGsk g$rhs$9703$14YGsk)
                                        ((case-lambda
                                           ((g$rhs$9704$14YGsk g$id$9705$14YGsk)
                                            (begin
                                              (if (g$bound-id-member?$7122$14YGsk
                                                    g$id$9705$14YGsk
                                                    g$kwd*$9686$14YGsk)
                                                (g$syntax-violation$7502$14YGsk
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9676$14YGsk)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9706$14YGsk
                                                    g$expanded-rhs$9707$14YGsk)
                                                  (begin
                                                    (g$extend-rib!$7079$14YGsk
                                                      g$rib$9674$14YGsk
                                                      g$id$9705$14YGsk
                                                      g$lab$9706$14YGsk)
                                                    ((case-lambda
                                                       ((g$b$9708$14YGsk)
                                                        (g$chi-body*$7437$14YGsk
                                                          (cdr g$e*$9667$14YGsk)
                                                          (cons
                                                            (cons
                                                              g$lab$9706$14YGsk
                                                              g$b$9708$14YGsk)
                                                            g$r$9668$14YGsk)
                                                          (cons
                                                            (cons
                                                              g$lab$9706$14YGsk
                                                              g$b$9708$14YGsk)
                                                            g$mr$9669$14YGsk)
                                                          g$lex*$9670$14YGsk
                                                          g$rhs*$9671$14YGsk
                                                          g$mod**$9672$14YGsk
                                                          g$kwd*$9686$14YGsk
                                                          g$rib$9674$14YGsk
                                                          g$top?$9675$14YGsk)))
                                                     (g$make-eval-transformer$7147$14YGsk
                                                       g$expanded-rhs$9707$14YGsk)))))
                                               (g$gen-define-label$7064$14YGsk
                                                 g$id$9705$14YGsk
                                                 g$rib$9674$14YGsk)
                                               (g$expand-transformer$7438$14YGsk
                                                 g$rhs$9704$14YGsk
                                                 g$mr$9669$14YGsk)))))
                                         g$rhs$9703$14YGsk
                                         g$id$9702$14YGsk))))
                                   (if (memv
                                         g$t$9687$14YGsk
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9709$14YGsk)
                                         ((case-lambda
                                            ((g$ls/false$9710$14YGsk)
                                             (if (if g$ls/false$9710$14YGsk
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9711$14YGsk
                                                            g$xrhs*$9712$14YGsk
                                                            g$xbody*$9713$14YGsk)
                                                          (if (not (g$valid-bound-ids?$7120$14YGsk
                                                                     g$xlhs*$9711$14YGsk))
                                                            (g$syntax-violation$7502$14YGsk
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9676$14YGsk)
                                                            (void))))
                                                       g$ls/false$9710$14YGsk))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9714$14YGsk
                                                      g$xrhs*$9715$14YGsk
                                                      g$xbody*$9716$14YGsk)
                                                    ((case-lambda
                                                       ((g$xlab*$9717$14YGsk)
                                                        ((case-lambda
                                                           ((g$xrib$9718$14YGsk)
                                                            ((case-lambda
                                                               ((g$xb*$9719$14YGsk)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7437$14YGsk
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9720$14YGsk)
                                                                                (g$add-subst$7105$14YGsk
                                                                                  g$xrib$9718$14YGsk
                                                                                  g$x$9720$14YGsk)))
                                                                             g$xbody*$9716$14YGsk)
                                                                        (cdr g$e*$9667$14YGsk))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9717$14YGsk
                                                                             g$xb*$9719$14YGsk)
                                                                        g$r$9668$14YGsk)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9717$14YGsk
                                                                             g$xb*$9719$14YGsk)
                                                                        g$mr$9669$14YGsk)
                                                                      g$lex*$9670$14YGsk
                                                                      g$rhs*$9671$14YGsk
                                                                      g$mod**$9672$14YGsk
                                                                      g$kwd*$9686$14YGsk
                                                                      g$rib$9674$14YGsk
                                                                      g$top?$9675$14YGsk))))))
                                                             (map (case-lambda
                                                                    ((g$x$9721$14YGsk)
                                                                     (g$make-eval-transformer$7147$14YGsk
                                                                       (g$expand-transformer$7438$14YGsk
                                                                         (if (eq? g$type$9685$14YGsk
                                                                                  'let-syntax)
                                                                           g$x$9721$14YGsk
                                                                           (g$add-subst$7105$14YGsk
                                                                             g$xrib$9718$14YGsk
                                                                             g$x$9721$14YGsk))
                                                                         g$mr$9669$14YGsk))))
                                                                  g$xrhs*$9715$14YGsk))))
                                                         (g$make-full-rib$7083$14YGsk
                                                           g$xlhs*$9714$14YGsk
                                                           g$xlab*$9717$14YGsk))))
                                                     (map g$gen-label$7061$14YGsk
                                                          g$xlhs*$9714$14YGsk))))
                                                 g$ls/false$9710$14YGsk)
                                               (g$syntax-violation$7502$14YGsk
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9709$14YGsk))))
                                          (g$syntax-dispatch$7393$14YGsk
                                            g$t$9709$14YGsk
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9676$14YGsk)
                                     (if (memv g$t$9687$14YGsk '(begin))
                                       ((case-lambda
                                          ((g$t$9722$14YGsk)
                                           ((case-lambda
                                              ((g$ls/false$9723$14YGsk)
                                               (if g$ls/false$9723$14YGsk
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9724$14YGsk)
                                                      (g$chi-body*$7437$14YGsk
                                                        (append
                                                          g$x*$9724$14YGsk
                                                          (cdr g$e*$9667$14YGsk))
                                                        g$r$9668$14YGsk
                                                        g$mr$9669$14YGsk
                                                        g$lex*$9670$14YGsk
                                                        g$rhs*$9671$14YGsk
                                                        g$mod**$9672$14YGsk
                                                        g$kwd*$9686$14YGsk
                                                        g$rib$9674$14YGsk
                                                        g$top?$9675$14YGsk)))
                                                   g$ls/false$9723$14YGsk)
                                                 (g$syntax-violation$7502$14YGsk
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9722$14YGsk))))
                                            (g$syntax-dispatch$7393$14YGsk
                                              g$t$9722$14YGsk
                                              '(_ . each-any)))))
                                        g$e$9676$14YGsk)
                                       (if (memv
                                             g$t$9687$14YGsk
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7437$14YGsk
                                           (cons
                                             (g$add-subst$7105$14YGsk
                                               g$rib$9674$14YGsk
                                               (g$chi-global-macro$7408$14YGsk
                                                 g$value$9684$14YGsk
                                                 g$e$9676$14YGsk))
                                             (cdr g$e*$9667$14YGsk))
                                           g$r$9668$14YGsk
                                           g$mr$9669$14YGsk
                                           g$lex*$9670$14YGsk
                                           g$rhs*$9671$14YGsk
                                           g$mod**$9672$14YGsk
                                           g$kwd*$9686$14YGsk
                                           g$rib$9674$14YGsk
                                           g$top?$9675$14YGsk)
                                         (if (memv
                                               g$t$9687$14YGsk
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7437$14YGsk
                                             (cons
                                               (g$add-subst$7105$14YGsk
                                                 g$rib$9674$14YGsk
                                                 (g$chi-local-macro$7407$14YGsk
                                                   g$value$9684$14YGsk
                                                   g$e$9676$14YGsk))
                                               (cdr g$e*$9667$14YGsk))
                                             g$r$9668$14YGsk
                                             g$mr$9669$14YGsk
                                             g$lex*$9670$14YGsk
                                             g$rhs*$9671$14YGsk
                                             g$mod**$9672$14YGsk
                                             g$kwd*$9686$14YGsk
                                             g$rib$9674$14YGsk
                                             g$top?$9675$14YGsk)
                                           (if (memv
                                                 g$t$9687$14YGsk
                                                 '(macro macro!))
                                             (g$chi-body*$7437$14YGsk
                                               (cons
                                                 (g$add-subst$7105$14YGsk
                                                   g$rib$9674$14YGsk
                                                   (g$chi-macro$7406$14YGsk
                                                     g$value$9684$14YGsk
                                                     g$e$9676$14YGsk))
                                                 (cdr g$e*$9667$14YGsk))
                                               g$r$9668$14YGsk
                                               g$mr$9669$14YGsk
                                               g$lex*$9670$14YGsk
                                               g$rhs*$9671$14YGsk
                                               g$mod**$9672$14YGsk
                                               g$kwd*$9686$14YGsk
                                               g$rib$9674$14YGsk
                                               g$top?$9675$14YGsk)
                                             (if (memv
                                                   g$t$9687$14YGsk
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7436$14YGsk
                                                      g$e$9676$14YGsk
                                                      g$r$9668$14YGsk
                                                      g$mr$9669$14YGsk
                                                      g$lex*$9670$14YGsk
                                                      g$rhs*$9671$14YGsk
                                                      g$mod**$9672$14YGsk
                                                      g$kwd*$9686$14YGsk)))
                                                 (case-lambda
                                                   ((g$lex*$9733$14YGsk
                                                      g$rhs*$9734$14YGsk
                                                      g$m-exp-id*$9735$14YGsk
                                                      g$m-exp-lab*$9736$14YGsk
                                                      g$r$9737$14YGsk
                                                      g$mr$9738$14YGsk
                                                      g$mod**$9739$14YGsk
                                                      g$kwd*$9740$14YGsk)
                                                    ((case-lambda
                                                       ((g$kwd*$9741$14YGsk
                                                          g$mod**$9742$14YGsk
                                                          g$mr$9743$14YGsk
                                                          g$r$9744$14YGsk
                                                          g$m-exp-lab*$9745$14YGsk
                                                          g$m-exp-id*$9746$14YGsk
                                                          g$rhs*$9747$14YGsk
                                                          g$lex*$9748$14YGsk)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9749$14YGsk
                                                                 g$lab$9750$14YGsk)
                                                               (g$extend-rib!$7079$14YGsk
                                                                 g$rib$9674$14YGsk
                                                                 g$id$9749$14YGsk
                                                                 g$lab$9750$14YGsk)))
                                                            g$m-exp-id*$9746$14YGsk
                                                            g$m-exp-lab*$9745$14YGsk)
                                                          (g$chi-body*$7437$14YGsk
                                                            (cdr g$e*$9667$14YGsk)
                                                            g$r$9744$14YGsk
                                                            g$mr$9743$14YGsk
                                                            g$lex*$9748$14YGsk
                                                            g$rhs*$9747$14YGsk
                                                            g$mod**$9742$14YGsk
                                                            g$kwd*$9741$14YGsk
                                                            g$rib$9674$14YGsk
                                                            g$top?$9675$14YGsk))))
                                                     g$kwd*$9740$14YGsk
                                                     g$mod**$9739$14YGsk
                                                     g$mr$9738$14YGsk
                                                     g$r$9737$14YGsk
                                                     g$m-exp-lab*$9736$14YGsk
                                                     g$m-exp-id*$9735$14YGsk
                                                     g$rhs*$9734$14YGsk
                                                     g$lex*$9733$14YGsk))))
                                               (if (memv
                                                     g$t$9687$14YGsk
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7486$14YGsk
                                                     (g$stx->datum$7126$14YGsk
                                                       g$e$9676$14YGsk))
                                                   (g$chi-body*$7437$14YGsk
                                                     (cdr g$e*$9667$14YGsk)
                                                     g$r$9668$14YGsk
                                                     g$mr$9669$14YGsk
                                                     g$lex*$9670$14YGsk
                                                     g$rhs*$9671$14YGsk
                                                     g$mod**$9672$14YGsk
                                                     g$kwd*$9686$14YGsk
                                                     g$rib$9674$14YGsk
                                                     g$top?$9675$14YGsk))
                                                 (if (memv
                                                       g$t$9687$14YGsk
                                                       '(import))
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$9751$14YGsk
                                                                     (case-lambda
                                                                       ((g$e$9793$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$t$9794$14YGsk)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9795$14YGsk)
                                                                                (if (if g$ls/false$9795$14YGsk
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9796$14YGsk)
                                                                                             (g$id?$7115$14YGsk
                                                                                               g$id$9796$14YGsk)))
                                                                                          g$ls/false$9795$14YGsk))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9797$14YGsk)
                                                                                       '#t))
                                                                                    g$ls/false$9795$14YGsk)
                                                                                  ((case-lambda
                                                                                     ((g$t$9798$14YGsk)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9799$14YGsk)
                                                                                          (if g$ls/false$9799$14YGsk
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$9800$14YGsk)
                                                                                                 '#f))
                                                                                              g$ls/false$9799$14YGsk)
                                                                                            ((case-lambda
                                                                                               ((g$t$9801$14YGsk)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$9802$14YGsk)
                                                                                                    (if g$ls/false$9802$14YGsk
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7502$14YGsk
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$9793$14YGsk)))
                                                                                                        g$ls/false$9802$14YGsk)
                                                                                                      (g$syntax-violation$7502$14YGsk
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$9801$14YGsk))))
                                                                                                 (g$syntax-dispatch$7393$14YGsk
                                                                                                   g$t$9801$14YGsk
                                                                                                   '_))))
                                                                                             g$t$9798$14YGsk))))
                                                                                       (g$syntax-dispatch$7393$14YGsk
                                                                                         g$t$9798$14YGsk
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$9794$14YGsk))))
                                                                             (g$syntax-dispatch$7393$14YGsk
                                                                               g$t$9794$14YGsk
                                                                               '(_ any)))))
                                                                         g$e$9793$14YGsk))))
                                                                   (g$module-import$9752$14YGsk
                                                                     (case-lambda
                                                                       ((g$e$9776$14YGsk
                                                                          g$r$9777$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$t$9778$14YGsk)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9779$14YGsk)
                                                                                (if (if g$ls/false$9779$14YGsk
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9780$14YGsk)
                                                                                             (g$id?$7115$14YGsk
                                                                                               g$id$9780$14YGsk)))
                                                                                          g$ls/false$9779$14YGsk))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9781$14YGsk)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7135$14YGsk
                                                                                              g$id$9781$14YGsk
                                                                                              g$r$9777$14YGsk)))
                                                                                         (case-lambda
                                                                                           ((g$type$9785$14YGsk
                                                                                              g$value$9786$14YGsk
                                                                                              g$kwd$9787$14YGsk)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$9788$14YGsk
                                                                                                  g$value$9789$14YGsk
                                                                                                  g$type$9790$14YGsk)
                                                                                                ((case-lambda
                                                                                                   ((g$t$9791$14YGsk)
                                                                                                    (if (memv
                                                                                                          g$t$9791$14YGsk
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$9792$14YGsk)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7435$14YGsk
                                                                                                              g$iface$9792$14YGsk
                                                                                                              g$id$9781$14YGsk)
                                                                                                            (g$module-interface-exp-lab-vec$7431$14YGsk
                                                                                                              g$iface$9792$14YGsk))))
                                                                                                       g$value$9789$14YGsk)
                                                                                                      (g$syntax-violation$7502$14YGsk
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$9776$14YGsk))))
                                                                                                 g$type$9790$14YGsk)))
                                                                                             g$kwd$9787$14YGsk
                                                                                             g$value$9786$14YGsk
                                                                                             g$type$9785$14YGsk))))))
                                                                                    g$ls/false$9779$14YGsk)
                                                                                  (g$syntax-violation$7502$14YGsk
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$9778$14YGsk))))
                                                                             (g$syntax-dispatch$7393$14YGsk
                                                                               g$t$9778$14YGsk
                                                                               '(_ any)))))
                                                                         g$e$9776$14YGsk))))
                                                                   (g$library-import$9753$14YGsk
                                                                     (case-lambda
                                                                       ((g$e$9762$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$t$9763$14YGsk)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9764$14YGsk)
                                                                                (if g$ls/false$9764$14YGsk
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$9765$14YGsk
                                                                                         g$imp*$9766$14YGsk)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7442$14YGsk
                                                                                              (g$syntax->datum$7505$14YGsk
                                                                                                g$imp*$9766$14YGsk))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$9769$14YGsk
                                                                                              g$subst-labels$9770$14YGsk)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$9771$14YGsk
                                                                                                  g$subst-names$9772$14YGsk)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$9773$14YGsk)
                                                                                                       (g$datum->stx$7098$14YGsk
                                                                                                         g$ctxt$9765$14YGsk
                                                                                                         g$name$9773$14YGsk)))
                                                                                                    g$subst-names$9772$14YGsk)
                                                                                                  g$subst-labels$9771$14YGsk)))
                                                                                             g$subst-labels$9770$14YGsk
                                                                                             g$subst-names$9769$14YGsk))))))
                                                                                    g$ls/false$9764$14YGsk)
                                                                                  ((case-lambda
                                                                                     ((g$t$9774$14YGsk)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9775$14YGsk)
                                                                                          (if g$ls/false$9775$14YGsk
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7502$14YGsk
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$9762$14YGsk)))
                                                                                              g$ls/false$9775$14YGsk)
                                                                                            (g$syntax-violation$7502$14YGsk
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9774$14YGsk))))
                                                                                       (g$syntax-dispatch$7393$14YGsk
                                                                                         g$t$9774$14YGsk
                                                                                         '_))))
                                                                                   g$t$9763$14YGsk))))
                                                                             (g$syntax-dispatch$7393$14YGsk
                                                                               g$t$9763$14YGsk
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$9762$14YGsk)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$9751$14YGsk
                                                                      g$e$9676$14YGsk)
                                                                  (g$module-import$9752$14YGsk
                                                                    g$e$9676$14YGsk
                                                                    g$r$9668$14YGsk)
                                                                  (g$library-import$9753$14YGsk
                                                                    g$e$9676$14YGsk))))
                                                             (case-lambda
                                                               ((g$id*$9756$14YGsk
                                                                  g$lab*$9757$14YGsk)
                                                                ((case-lambda
                                                                   ((g$lab*$9758$14YGsk
                                                                      g$id*$9759$14YGsk)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$9760$14YGsk
                                                                           g$lab$9761$14YGsk)
                                                                         (g$extend-rib!$7079$14YGsk
                                                                           g$rib$9674$14YGsk
                                                                           g$id$9760$14YGsk
                                                                           g$lab$9761$14YGsk)))
                                                                      g$id*$9759$14YGsk
                                                                      g$lab*$9758$14YGsk)))
                                                                 g$lab*$9757$14YGsk
                                                                 g$id*$9756$14YGsk))))))))
                                                     (g$chi-body*$7437$14YGsk
                                                       (cdr g$e*$9667$14YGsk)
                                                       g$r$9668$14YGsk
                                                       g$mr$9669$14YGsk
                                                       g$lex*$9670$14YGsk
                                                       g$rhs*$9671$14YGsk
                                                       g$mod**$9672$14YGsk
                                                       g$kwd*$9686$14YGsk
                                                       g$rib$9674$14YGsk
                                                       g$top?$9675$14YGsk))
                                                   (if g$top?$9675$14YGsk
                                                     (g$chi-body*$7437$14YGsk
                                                       (cdr g$e*$9667$14YGsk)
                                                       g$r$9668$14YGsk
                                                       g$mr$9669$14YGsk
                                                       (cons
                                                         (g$gen-lexical$7059$14YGsk
                                                           'dummy)
                                                         g$lex*$9670$14YGsk)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9676$14YGsk)
                                                         g$rhs*$9671$14YGsk)
                                                       g$mod**$9672$14YGsk
                                                       g$kwd*$9686$14YGsk
                                                       g$rib$9674$14YGsk
                                                       g$top?$9675$14YGsk)
                                                     (values
                                                       g$e*$9667$14YGsk
                                                       g$r$9668$14YGsk
                                                       g$mr$9669$14YGsk
                                                       g$lex*$9670$14YGsk
                                                       g$rhs*$9671$14YGsk
                                                       g$mod**$9672$14YGsk
                                                       g$kwd*$9686$14YGsk))))))))))))))
                            g$type$9685$14YGsk)))
                        (if (g$id?$7115$14YGsk g$kwd$9683$14YGsk)
                          (cons g$kwd$9683$14YGsk g$kwd*$9673$14YGsk)
                          g$kwd*$9673$14YGsk))))
                    g$kwd$9682$14YGsk
                    g$value$9681$14YGsk
                    g$type$9680$14YGsk))))))
           (car g$e*$9667$14YGsk))))))
   (g$expand-transformer$7438$14YGsk
     g$expand-transformer$10874$14YGsk
     (case-lambda
       ((g$expr$9803$14YGsk g$r$9804$14YGsk)
        ((case-lambda
           ((g$rtc$9805$14YGsk)
            ((case-lambda
               ((g$expanded-rhs$9806$14YGsk)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$9807$14YGsk)
                        (case-lambda
                          ((g$x$9808$14YGsk)
                           (begin
                             (g$invoke-library$6930$14YGsk g$x$9808$14YGsk)
                             (g$mark-visit$9807$14YGsk g$x$9808$14YGsk))))))
                     (g$vis-collector$7446$14YGsk))
                    (g$rtc$9805$14YGsk))
                  g$expanded-rhs$9806$14YGsk)))
             ((case-lambda
                ((g$inv-collector$9813$14YGsk
                   g$vis-collector$9814$14YGsk
                   g$inv-collector$9815$14YGsk
                   g$vis-collector$9816$14YGsk)
                 ((case-lambda
                    ((g$swap$9817$14YGsk)
                     (dynamic-wind
                       g$swap$9817$14YGsk
                       (case-lambda
                         (()
                          (g$chi-expr$7411$14YGsk
                            g$expr$9803$14YGsk
                            g$r$9804$14YGsk
                            g$r$9804$14YGsk)))
                       g$swap$9817$14YGsk)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$9818$14YGsk)
                           (begin
                             (g$inv-collector$9813$14YGsk
                               g$inv-collector$9815$14YGsk)
                             (set! g$inv-collector$9815$14YGsk
                               g$t$9818$14YGsk))))
                        (g$inv-collector$9813$14YGsk))
                       ((case-lambda
                          ((g$t$9819$14YGsk)
                           (begin
                             (g$vis-collector$9814$14YGsk
                               g$vis-collector$9816$14YGsk)
                             (set! g$vis-collector$9816$14YGsk
                               g$t$9819$14YGsk))))
                        (g$vis-collector$9814$14YGsk))))))))
              g$inv-collector$7445$14YGsk
              g$vis-collector$7446$14YGsk
              g$rtc$9805$14YGsk
              (case-lambda ((g$x$9820$14YGsk) (values)))))))
         (g$make-collector$7444$14YGsk)))))
   (g$parse-exports$7439$14YGsk
     g$parse-exports$10875$14YGsk
     (case-lambda
       ((g$exp*$9821$14YGsk)
        (letrec* ((g$idsyn?$9822$14YGsk
                    (case-lambda
                      ((g$x$9837$14YGsk)
                       (symbol?
                         (g$syntax->datum$7505$14YGsk g$x$9837$14YGsk))))))
          ((letrec ((g$f$9823$14YGsk
                      (case-lambda
                        ((g$exp*$9824$14YGsk
                           g$int*$9825$14YGsk
                           g$ext*$9826$14YGsk)
                         (if (null? g$exp*$9824$14YGsk)
                           (begin
                             ((case-lambda
                                ((g$id*$9827$14YGsk)
                                 (if (not (g$valid-bound-ids?$7120$14YGsk
                                            g$id*$9827$14YGsk))
                                   (g$syntax-violation$7502$14YGsk
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7421$14YGsk
                                       g$id*$9827$14YGsk))
                                   (void))))
                              (map (case-lambda
                                     ((g$x$9828$14YGsk)
                                      (g$make-stx$7088$14YGsk
                                        g$x$9828$14YGsk
                                        g$top-mark*$7057$14YGsk
                                        '()
                                        '())))
                                   g$ext*$9826$14YGsk))
                             (values
                               (map g$syntax->datum$7505$14YGsk
                                    g$int*$9825$14YGsk)
                               (map g$syntax->datum$7505$14YGsk
                                    g$ext*$9826$14YGsk)))
                           ((case-lambda
                              ((g$t$9829$14YGsk)
                               ((case-lambda
                                  ((g$ls/false$9830$14YGsk)
                                   (if g$ls/false$9830$14YGsk
                                     (apply
                                       (case-lambda
                                         ((g$rename$9831$14YGsk
                                            g$i*$9832$14YGsk
                                            g$e*$9833$14YGsk)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$7505$14YGsk
                                                                g$rename$9831$14YGsk)
                                                              'rename)
                                                       (if (g$for-all$5356$14YGsk
                                                             g$idsyn?$9822$14YGsk
                                                             g$i*$9832$14YGsk)
                                                         (begin
                                                           '#f
                                                           (g$for-all$5356$14YGsk
                                                             g$idsyn?$9822$14YGsk
                                                             g$e*$9833$14YGsk))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$7502$14YGsk
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$9824$14YGsk))
                                              (void))
                                            (g$f$9823$14YGsk
                                              (cdr g$exp*$9824$14YGsk)
                                              (append
                                                g$i*$9832$14YGsk
                                                g$int*$9825$14YGsk)
                                              (append
                                                g$e*$9833$14YGsk
                                                g$ext*$9826$14YGsk)))))
                                       g$ls/false$9830$14YGsk)
                                     ((case-lambda
                                        ((g$t$9834$14YGsk)
                                         ((case-lambda
                                            ((g$ls/false$9835$14YGsk)
                                             (if g$ls/false$9835$14YGsk
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$9836$14YGsk)
                                                    (begin
                                                      (if (not (g$idsyn?$9822$14YGsk
                                                                 g$ie$9836$14YGsk))
                                                        (g$syntax-violation$7502$14YGsk
                                                          'export
                                                          '"invalid export"
                                                          g$ie$9836$14YGsk)
                                                        (void))
                                                      (g$f$9823$14YGsk
                                                        (cdr g$exp*$9824$14YGsk)
                                                        (cons
                                                          g$ie$9836$14YGsk
                                                          g$int*$9825$14YGsk)
                                                        (cons
                                                          g$ie$9836$14YGsk
                                                          g$ext*$9826$14YGsk)))))
                                                 g$ls/false$9835$14YGsk)
                                               (g$syntax-violation$7502$14YGsk
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9834$14YGsk))))
                                          (g$syntax-dispatch$7393$14YGsk
                                            g$t$9834$14YGsk
                                            'any))))
                                      g$t$9829$14YGsk))))
                                (g$syntax-dispatch$7393$14YGsk
                                  g$t$9829$14YGsk
                                  '(any . #(each (any any)))))))
                            (car g$exp*$9824$14YGsk)))))))
             g$f$9823$14YGsk)
           g$exp*$9821$14YGsk
           '()
           '())))))
   (g$parse-library-name$7440$14YGsk
     g$parse-library-name$10876$14YGsk
     (case-lambda
       ((g$spec$9838$14YGsk)
        (letrec* ((g$parse$9839$14YGsk
                    (case-lambda
                      ((g$x$9846$14YGsk)
                       ((case-lambda
                          ((g$t$9847$14YGsk)
                           ((case-lambda
                              ((g$ls/false$9848$14YGsk)
                               (if (if g$ls/false$9848$14YGsk
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$9849$14YGsk)
                                            (g$for-all$5356$14YGsk
                                              (case-lambda
                                                ((g$x$9850$14YGsk)
                                                 ((case-lambda
                                                    ((g$x$9851$14YGsk)
                                                     (if (integer?
                                                           g$x$9851$14YGsk)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$9851$14YGsk))
                                                       '#f)))
                                                  (g$syntax->datum$7505$14YGsk
                                                    g$x$9850$14YGsk))))
                                              g$v*$9849$14YGsk)))
                                         g$ls/false$9848$14YGsk))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$9852$14YGsk)
                                      (values
                                        '()
                                        (map g$syntax->datum$7505$14YGsk
                                             g$v*$9852$14YGsk))))
                                   g$ls/false$9848$14YGsk)
                                 ((case-lambda
                                    ((g$t$9853$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$9854$14YGsk)
                                         (if (if g$ls/false$9854$14YGsk
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$9855$14YGsk
                                                        g$rest$9856$14YGsk)
                                                      (symbol?
                                                        (g$syntax->datum$7505$14YGsk
                                                          g$x$9855$14YGsk))))
                                                   g$ls/false$9854$14YGsk))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$9857$14YGsk
                                                  g$rest$9858$14YGsk)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$9839$14YGsk
                                                       g$rest$9858$14YGsk)))
                                                  (case-lambda
                                                    ((g$x*$9861$14YGsk
                                                       g$v*$9862$14YGsk)
                                                     ((case-lambda
                                                        ((g$v*$9863$14YGsk
                                                           g$x*$9864$14YGsk)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7505$14YGsk
                                                               g$x$9857$14YGsk)
                                                             g$x*$9864$14YGsk)
                                                           g$v*$9863$14YGsk)))
                                                      g$v*$9862$14YGsk
                                                      g$x*$9861$14YGsk))))))
                                             g$ls/false$9854$14YGsk)
                                           ((case-lambda
                                              ((g$t$9865$14YGsk)
                                               ((case-lambda
                                                  ((g$ls/false$9866$14YGsk)
                                                   (if g$ls/false$9866$14YGsk
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$9866$14YGsk)
                                                     ((case-lambda
                                                        ((g$t$9867$14YGsk)
                                                         ((case-lambda
                                                            ((g$ls/false$9868$14YGsk)
                                                             (if g$ls/false$9868$14YGsk
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7502$14YGsk
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$9838$14YGsk)))
                                                                 g$ls/false$9868$14YGsk)
                                                               (g$syntax-violation$7502$14YGsk
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$9867$14YGsk))))
                                                          (g$syntax-dispatch$7393$14YGsk
                                                            g$t$9867$14YGsk
                                                            '_))))
                                                      g$t$9865$14YGsk))))
                                                (g$syntax-dispatch$7393$14YGsk
                                                  g$t$9865$14YGsk
                                                  '()))))
                                            g$t$9853$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$9853$14YGsk
                                        '(any . any)))))
                                  g$t$9847$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$9847$14YGsk
                              '(each-any)))))
                        g$x$9846$14YGsk)))))
          (call-with-values
            (case-lambda (() (g$parse$9839$14YGsk g$spec$9838$14YGsk)))
            (case-lambda
              ((g$name*$9842$14YGsk g$ver*$9843$14YGsk)
               ((case-lambda
                  ((g$ver*$9844$14YGsk g$name*$9845$14YGsk)
                   (begin
                     (if (null? g$name*$9845$14YGsk)
                       (g$syntax-violation$7502$14YGsk
                         '#f
                         '"empty library name"
                         g$spec$9838$14YGsk)
                       (void))
                     (values g$name*$9845$14YGsk g$ver*$9844$14YGsk))))
                g$ver*$9843$14YGsk
                g$name*$9842$14YGsk))))))))
   (g$parse-library$7441$14YGsk
     g$parse-library$10877$14YGsk
     (case-lambda
       ((g$e$9869$14YGsk)
        ((case-lambda
           ((g$t$9870$14YGsk)
            ((case-lambda
               ((g$ls/false$9871$14YGsk)
                (if (if g$ls/false$9871$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$9872$14YGsk
                               g$name*$9873$14YGsk
                               g$export$9874$14YGsk
                               g$exp*$9875$14YGsk
                               g$import$9876$14YGsk
                               g$imp*$9877$14YGsk
                               g$b*$9878$14YGsk)
                             (if (eq? (g$syntax->datum$7505$14YGsk
                                        g$export$9874$14YGsk)
                                      'export)
                               (if (eq? (g$syntax->datum$7505$14YGsk
                                          g$import$9876$14YGsk)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7505$14YGsk
                                          g$library$9872$14YGsk)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$9871$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$9879$14YGsk
                         g$name*$9880$14YGsk
                         g$export$9881$14YGsk
                         g$exp*$9882$14YGsk
                         g$import$9883$14YGsk
                         g$imp*$9884$14YGsk
                         g$b*$9885$14YGsk)
                       (values
                         g$name*$9880$14YGsk
                         g$exp*$9882$14YGsk
                         g$imp*$9884$14YGsk
                         g$b*$9885$14YGsk)))
                    g$ls/false$9871$14YGsk)
                  ((case-lambda
                     ((g$t$9886$14YGsk)
                      ((case-lambda
                         ((g$ls/false$9887$14YGsk)
                          (if g$ls/false$9887$14YGsk
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7502$14YGsk
                                   '#f
                                   '"malformed library"
                                   g$e$9869$14YGsk)))
                              g$ls/false$9887$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$9886$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk g$t$9886$14YGsk '_))))
                   g$t$9870$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$9870$14YGsk
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$9869$14YGsk))))
   (g$parse-import-spec*$7442$14YGsk
     g$parse-import-spec*$10878$14YGsk
     (case-lambda
       ((g$imp*$9888$14YGsk)
        (letrec* ((g$idsyn?$9889$14YGsk
                    (case-lambda
                      ((g$x$10148$14YGsk)
                       (symbol?
                         (g$syntax->datum$7505$14YGsk g$x$10148$14YGsk)))))
                  (g$dup-error$9890$14YGsk
                    (case-lambda
                      ((g$name$10147$14YGsk)
                       (g$syntax-violation$7502$14YGsk
                         'import
                         '"two imports with different bindings"
                         g$name$10147$14YGsk))))
                  (g$merge-substs$9891$14YGsk
                    (case-lambda
                      ((g$s$10138$14YGsk g$subst$10139$14YGsk)
                       (letrec* ((g$insert-to-subst$10140$14YGsk
                                   (case-lambda
                                     ((g$a$10141$14YGsk g$subst$10142$14YGsk)
                                      ((case-lambda
                                         ((g$name$10143$14YGsk
                                            g$label$10144$14YGsk)
                                          ((case-lambda
                                             ((g$t$10145$14YGsk)
                                              (if g$t$10145$14YGsk
                                                ((case-lambda
                                                   ((g$x$10146$14YGsk)
                                                    (if (eq? (cdr g$x$10146$14YGsk)
                                                             g$label$10144$14YGsk)
                                                      g$subst$10142$14YGsk
                                                      (g$dup-error$9890$14YGsk
                                                        g$name$10143$14YGsk))))
                                                 g$t$10145$14YGsk)
                                                (cons
                                                  g$a$10141$14YGsk
                                                  g$subst$10142$14YGsk))))
                                           (assq
                                             g$name$10143$14YGsk
                                             g$subst$10142$14YGsk))))
                                       (car g$a$10141$14YGsk)
                                       (cdr g$a$10141$14YGsk))))))
                         (if (null? g$s$10138$14YGsk)
                           g$subst$10139$14YGsk
                           (g$insert-to-subst$10140$14YGsk
                             (car g$s$10138$14YGsk)
                             (g$merge-substs$9891$14YGsk
                               (cdr g$s$10138$14YGsk)
                               g$subst$10139$14YGsk)))))))
                  (g$exclude*$9892$14YGsk
                    (case-lambda
                      ((g$sym*$10114$14YGsk g$subst$10115$14YGsk)
                       (letrec* ((g$exclude$10116$14YGsk
                                   (case-lambda
                                     ((g$sym$10129$14YGsk g$subst$10130$14YGsk)
                                      (if (null? g$subst$10130$14YGsk)
                                        (g$syntax-violation$7502$14YGsk
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10129$14YGsk)
                                        (if (eq? g$sym$10129$14YGsk
                                                 (g$caar$4886$14YGsk
                                                   g$subst$10130$14YGsk))
                                          (values
                                            (g$cdar$4888$14YGsk
                                              g$subst$10130$14YGsk)
                                            (cdr g$subst$10130$14YGsk))
                                          ((case-lambda
                                             ((g$a$10131$14YGsk)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10116$14YGsk
                                                     g$sym$10129$14YGsk
                                                     (cdr g$subst$10130$14YGsk))))
                                                (case-lambda
                                                  ((g$old$10134$14YGsk
                                                     g$subst$10135$14YGsk)
                                                   ((case-lambda
                                                      ((g$subst$10136$14YGsk
                                                         g$old$10137$14YGsk)
                                                       (values
                                                         g$old$10137$14YGsk
                                                         (cons
                                                           g$a$10131$14YGsk
                                                           g$subst$10136$14YGsk))))
                                                    g$subst$10135$14YGsk
                                                    g$old$10134$14YGsk))))))
                                           (car g$subst$10130$14YGsk))))))))
                         (if (null? g$sym*$10114$14YGsk)
                           (values '() g$subst$10115$14YGsk)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10116$14YGsk
                                  (car g$sym*$10114$14YGsk)
                                  g$subst$10115$14YGsk)))
                             (case-lambda
                               ((g$old$10119$14YGsk g$subst$10120$14YGsk)
                                ((case-lambda
                                   ((g$subst$10121$14YGsk g$old$10122$14YGsk)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$9892$14YGsk
                                           (cdr g$sym*$10114$14YGsk)
                                           g$subst$10121$14YGsk)))
                                      (case-lambda
                                        ((g$old*$10125$14YGsk
                                           g$subst$10126$14YGsk)
                                         ((case-lambda
                                            ((g$subst$10127$14YGsk
                                               g$old*$10128$14YGsk)
                                             (values
                                               (cons
                                                 g$old$10122$14YGsk
                                                 g$old*$10128$14YGsk)
                                               g$subst$10127$14YGsk)))
                                          g$subst$10126$14YGsk
                                          g$old*$10125$14YGsk))))))
                                 g$subst$10120$14YGsk
                                 g$old$10119$14YGsk)))))))))
                  (g$find*$9893$14YGsk
                    (case-lambda
                      ((g$sym*$10110$14YGsk g$subst$10111$14YGsk)
                       (map (case-lambda
                              ((g$x$10112$14YGsk)
                               ((case-lambda
                                  ((g$t$10113$14YGsk)
                                   (if g$t$10113$14YGsk
                                     (cdr g$t$10113$14YGsk)
                                     (g$syntax-violation$7502$14YGsk
                                       'import
                                       '"cannot find identifier"
                                       g$x$10112$14YGsk))))
                                (assq g$x$10112$14YGsk g$subst$10111$14YGsk))))
                            g$sym*$10110$14YGsk))))
                  (g$rem*$9894$14YGsk
                    (case-lambda
                      ((g$sym*$10106$14YGsk g$subst$10107$14YGsk)
                       ((letrec ((g$f$10108$14YGsk
                                   (case-lambda
                                     ((g$subst$10109$14YGsk)
                                      (if (null? g$subst$10109$14YGsk)
                                        '()
                                        (if (memq
                                              (g$caar$4886$14YGsk
                                                g$subst$10109$14YGsk)
                                              g$sym*$10106$14YGsk)
                                          (g$f$10108$14YGsk
                                            (cdr g$subst$10109$14YGsk))
                                          (cons
                                            (car g$subst$10109$14YGsk)
                                            (g$f$10108$14YGsk
                                              (cdr g$subst$10109$14YGsk)))))))))
                          g$f$10108$14YGsk)
                        g$subst$10107$14YGsk))))
                  (g$remove-dups$9895$14YGsk
                    (case-lambda
                      ((g$ls$10105$14YGsk)
                       (if (null? g$ls$10105$14YGsk)
                         '()
                         (if (memq
                               (car g$ls$10105$14YGsk)
                               (cdr g$ls$10105$14YGsk))
                           (g$remove-dups$9895$14YGsk (cdr g$ls$10105$14YGsk))
                           (cons
                             (car g$ls$10105$14YGsk)
                             (g$remove-dups$9895$14YGsk
                               (cdr g$ls$10105$14YGsk))))))))
                  (g$parse-library-name$9896$14YGsk
                    (case-lambda
                      ((g$spec$9990$14YGsk)
                       (letrec* ((g$subversion?$9991$14YGsk
                                   (case-lambda
                                     ((g$x$10104$14YGsk)
                                      (if (integer? g$x$10104$14YGsk)
                                        (if (exact? g$x$10104$14YGsk)
                                          (begin '#f (>= g$x$10104$14YGsk '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$9992$14YGsk
                                   (case-lambda
                                     ((g$x*$10056$14YGsk)
                                      ((case-lambda
                                         ((g$t$10057$14YGsk)
                                          ((case-lambda
                                             ((g$ls/false$10058$14YGsk)
                                              (if (if g$ls/false$10058$14YGsk
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10059$14YGsk)
                                                           (g$subversion?$9991$14YGsk
                                                             (g$syntax->datum$7505$14YGsk
                                                               g$n$10059$14YGsk))))
                                                        g$ls/false$10058$14YGsk))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10060$14YGsk)
                                                     (case-lambda
                                                       ((g$x$10061$14YGsk)
                                                        (= g$x$10061$14YGsk
                                                           (g$syntax->datum$7505$14YGsk
                                                             g$n$10060$14YGsk))))))
                                                  g$ls/false$10058$14YGsk)
                                                ((case-lambda
                                                   ((g$t$10062$14YGsk)
                                                    ((case-lambda
                                                       ((g$ls/false$10063$14YGsk)
                                                        (if (if g$ls/false$10063$14YGsk
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10064$14YGsk
                                                                       g$sub*$10065$14YGsk)
                                                                     (eq? (g$syntax->datum$7505$14YGsk
                                                                            g$p?$10064$14YGsk)
                                                                          'and)))
                                                                  g$ls/false$10063$14YGsk))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10066$14YGsk
                                                                 g$sub*$10067$14YGsk)
                                                               ((case-lambda
                                                                  ((g$p*$10068$14YGsk)
                                                                   (case-lambda
                                                                     ((g$x$10069$14YGsk)
                                                                      (g$for-all$5356$14YGsk
                                                                        (case-lambda
                                                                          ((g$p$10070$14YGsk)
                                                                           (g$p$10070$14YGsk
                                                                             g$x$10069$14YGsk)))
                                                                        g$p*$10068$14YGsk)))))
                                                                (map g$subversion-pred$9992$14YGsk
                                                                     g$sub*$10067$14YGsk))))
                                                            g$ls/false$10063$14YGsk)
                                                          ((case-lambda
                                                             ((g$t$10071$14YGsk)
                                                              ((case-lambda
                                                                 ((g$ls/false$10072$14YGsk)
                                                                  (if (if g$ls/false$10072$14YGsk
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10073$14YGsk
                                                                                 g$sub*$10074$14YGsk)
                                                                               (eq? (g$syntax->datum$7505$14YGsk
                                                                                      g$p?$10073$14YGsk)
                                                                                    'or)))
                                                                            g$ls/false$10072$14YGsk))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10075$14YGsk
                                                                           g$sub*$10076$14YGsk)
                                                                         ((case-lambda
                                                                            ((g$p*$10077$14YGsk)
                                                                             (case-lambda
                                                                               ((g$x$10078$14YGsk)
                                                                                (g$exists$5357$14YGsk
                                                                                  (case-lambda
                                                                                    ((g$p$10079$14YGsk)
                                                                                     (g$p$10079$14YGsk
                                                                                       g$x$10078$14YGsk)))
                                                                                  g$p*$10077$14YGsk)))))
                                                                          (map g$subversion-pred$9992$14YGsk
                                                                               g$sub*$10076$14YGsk))))
                                                                      g$ls/false$10072$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$t$10080$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10081$14YGsk)
                                                                            (if (if g$ls/false$10081$14YGsk
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10082$14YGsk
                                                                                           g$sub$10083$14YGsk)
                                                                                         (eq? (g$syntax->datum$7505$14YGsk
                                                                                                g$p?$10082$14YGsk)
                                                                                              'not)))
                                                                                      g$ls/false$10081$14YGsk))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10084$14YGsk
                                                                                     g$sub$10085$14YGsk)
                                                                                   ((case-lambda
                                                                                      ((g$p$10086$14YGsk)
                                                                                       (case-lambda
                                                                                         ((g$x$10087$14YGsk)
                                                                                          (not (g$p$10086$14YGsk
                                                                                                 g$x$10087$14YGsk))))))
                                                                                    (g$subversion-pred$9992$14YGsk
                                                                                      g$sub$10085$14YGsk))))
                                                                                g$ls/false$10081$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$t$10088$14YGsk)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10089$14YGsk)
                                                                                      (if (if g$ls/false$10089$14YGsk
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10090$14YGsk
                                                                                                     g$n$10091$14YGsk)
                                                                                                   (if (eq? (g$syntax->datum$7505$14YGsk
                                                                                                              g$p?$10090$14YGsk)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$9991$14YGsk
                                                                                                         (g$syntax->datum$7505$14YGsk
                                                                                                           g$n$10091$14YGsk)))
                                                                                                     '#f)))
                                                                                                g$ls/false$10089$14YGsk))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10092$14YGsk
                                                                                               g$n$10093$14YGsk)
                                                                                             (case-lambda
                                                                                               ((g$x$10094$14YGsk)
                                                                                                (<= g$x$10094$14YGsk
                                                                                                    (g$syntax->datum$7505$14YGsk
                                                                                                      g$n$10093$14YGsk))))))
                                                                                          g$ls/false$10089$14YGsk)
                                                                                        ((case-lambda
                                                                                           ((g$t$10095$14YGsk)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10096$14YGsk)
                                                                                                (if (if g$ls/false$10096$14YGsk
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10097$14YGsk
                                                                                                               g$n$10098$14YGsk)
                                                                                                             (if (eq? (g$syntax->datum$7505$14YGsk
                                                                                                                        g$p?$10097$14YGsk)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$9991$14YGsk
                                                                                                                   g$n$10098$14YGsk))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10096$14YGsk))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10099$14YGsk
                                                                                                         g$n$10100$14YGsk)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10101$14YGsk)
                                                                                                          (>= g$x$10101$14YGsk
                                                                                                              (g$syntax->datum$7505$14YGsk
                                                                                                                g$n$10100$14YGsk))))))
                                                                                                    g$ls/false$10096$14YGsk)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10102$14YGsk)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10103$14YGsk)
                                                                                                          (if g$ls/false$10103$14YGsk
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7502$14YGsk
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$9990$14YGsk
                                                                                                                   g$x*$10056$14YGsk)))
                                                                                                              g$ls/false$10103$14YGsk)
                                                                                                            (g$syntax-violation$7502$14YGsk
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10102$14YGsk))))
                                                                                                       (g$syntax-dispatch$7393$14YGsk
                                                                                                         g$t$10102$14YGsk
                                                                                                         '_))))
                                                                                                   g$t$10095$14YGsk))))
                                                                                             (g$syntax-dispatch$7393$14YGsk
                                                                                               g$t$10095$14YGsk
                                                                                               '(any any)))))
                                                                                         g$t$10088$14YGsk))))
                                                                                   (g$syntax-dispatch$7393$14YGsk
                                                                                     g$t$10088$14YGsk
                                                                                     '(any any)))))
                                                                               g$t$10080$14YGsk))))
                                                                         (g$syntax-dispatch$7393$14YGsk
                                                                           g$t$10080$14YGsk
                                                                           '(any any)))))
                                                                     g$t$10071$14YGsk))))
                                                               (g$syntax-dispatch$7393$14YGsk
                                                                 g$t$10071$14YGsk
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10062$14YGsk))))
                                                     (g$syntax-dispatch$7393$14YGsk
                                                       g$t$10062$14YGsk
                                                       '(any . each-any)))))
                                                 g$t$10057$14YGsk))))
                                           (g$syntax-dispatch$7393$14YGsk
                                             g$t$10057$14YGsk
                                             'any))))
                                       g$x*$10056$14YGsk))))
                                 (g$version-pred$9993$14YGsk
                                   (case-lambda
                                     ((g$x*$10016$14YGsk)
                                      ((case-lambda
                                         ((g$t$10017$14YGsk)
                                          ((case-lambda
                                             ((g$ls/false$10018$14YGsk)
                                              (if g$ls/false$10018$14YGsk
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10019$14YGsk)
                                                        '#t))))
                                                  g$ls/false$10018$14YGsk)
                                                ((case-lambda
                                                   ((g$t$10020$14YGsk)
                                                    ((case-lambda
                                                       ((g$ls/false$10021$14YGsk)
                                                        (if (if g$ls/false$10021$14YGsk
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10022$14YGsk
                                                                       g$ver*$10023$14YGsk)
                                                                     (eq? (g$syntax->datum$7505$14YGsk
                                                                            g$c$10022$14YGsk)
                                                                          'and)))
                                                                  g$ls/false$10021$14YGsk))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10024$14YGsk
                                                                 g$ver*$10025$14YGsk)
                                                               ((case-lambda
                                                                  ((g$p*$10026$14YGsk)
                                                                   (case-lambda
                                                                     ((g$x$10027$14YGsk)
                                                                      (g$for-all$5356$14YGsk
                                                                        (case-lambda
                                                                          ((g$p$10028$14YGsk)
                                                                           (g$p$10028$14YGsk
                                                                             g$x$10027$14YGsk)))
                                                                        g$p*$10026$14YGsk)))))
                                                                (map g$version-pred$9993$14YGsk
                                                                     g$ver*$10025$14YGsk))))
                                                            g$ls/false$10021$14YGsk)
                                                          ((case-lambda
                                                             ((g$t$10029$14YGsk)
                                                              ((case-lambda
                                                                 ((g$ls/false$10030$14YGsk)
                                                                  (if (if g$ls/false$10030$14YGsk
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10031$14YGsk
                                                                                 g$ver*$10032$14YGsk)
                                                                               (eq? (g$syntax->datum$7505$14YGsk
                                                                                      g$c$10031$14YGsk)
                                                                                    'or)))
                                                                            g$ls/false$10030$14YGsk))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10033$14YGsk
                                                                           g$ver*$10034$14YGsk)
                                                                         ((case-lambda
                                                                            ((g$p*$10035$14YGsk)
                                                                             (case-lambda
                                                                               ((g$x$10036$14YGsk)
                                                                                (g$exists$5357$14YGsk
                                                                                  (case-lambda
                                                                                    ((g$p$10037$14YGsk)
                                                                                     (g$p$10037$14YGsk
                                                                                       g$x$10036$14YGsk)))
                                                                                  g$p*$10035$14YGsk)))))
                                                                          (map g$version-pred$9993$14YGsk
                                                                               g$ver*$10034$14YGsk))))
                                                                      g$ls/false$10030$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$t$10038$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10039$14YGsk)
                                                                            (if (if g$ls/false$10039$14YGsk
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10040$14YGsk
                                                                                           g$ver$10041$14YGsk)
                                                                                         (eq? (g$syntax->datum$7505$14YGsk
                                                                                                g$c$10040$14YGsk)
                                                                                              'not)))
                                                                                      g$ls/false$10039$14YGsk))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10042$14YGsk
                                                                                     g$ver$10043$14YGsk)
                                                                                   ((case-lambda
                                                                                      ((g$p$10044$14YGsk)
                                                                                       (case-lambda
                                                                                         ((g$x$10045$14YGsk)
                                                                                          (not (g$p$10044$14YGsk
                                                                                                 g$x$10045$14YGsk))))))
                                                                                    (g$version-pred$9993$14YGsk
                                                                                      g$ver$10043$14YGsk))))
                                                                                g$ls/false$10039$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$t$10046$14YGsk)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10047$14YGsk)
                                                                                      (if g$ls/false$10047$14YGsk
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10048$14YGsk)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10049$14YGsk)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10050$14YGsk)
                                                                                                    ((letrec ((g$f$10051$14YGsk
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10052$14YGsk
                                                                                                                     g$x$10053$14YGsk)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10052$14YGsk)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10053$14YGsk)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10052$14YGsk)
                                                                                                                            (car g$x$10053$14YGsk))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10051$14YGsk
                                                                                                                             (cdr g$p*$10052$14YGsk)
                                                                                                                             (cdr g$x$10053$14YGsk)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10051$14YGsk)
                                                                                                     g$p*$10049$14YGsk
                                                                                                     g$x$10050$14YGsk)))))
                                                                                              (map g$subversion-pred$9992$14YGsk
                                                                                                   g$sub*$10048$14YGsk))))
                                                                                          g$ls/false$10047$14YGsk)
                                                                                        ((case-lambda
                                                                                           ((g$t$10054$14YGsk)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10055$14YGsk)
                                                                                                (if g$ls/false$10055$14YGsk
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7502$14YGsk
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$9990$14YGsk
                                                                                                         g$x*$10016$14YGsk)))
                                                                                                    g$ls/false$10055$14YGsk)
                                                                                                  (g$syntax-violation$7502$14YGsk
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10054$14YGsk))))
                                                                                             (g$syntax-dispatch$7393$14YGsk
                                                                                               g$t$10054$14YGsk
                                                                                               '_))))
                                                                                         g$t$10046$14YGsk))))
                                                                                   (g$syntax-dispatch$7393$14YGsk
                                                                                     g$t$10046$14YGsk
                                                                                     'each-any))))
                                                                               g$t$10038$14YGsk))))
                                                                         (g$syntax-dispatch$7393$14YGsk
                                                                           g$t$10038$14YGsk
                                                                           '(any any)))))
                                                                     g$t$10029$14YGsk))))
                                                               (g$syntax-dispatch$7393$14YGsk
                                                                 g$t$10029$14YGsk
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10020$14YGsk))))
                                                     (g$syntax-dispatch$7393$14YGsk
                                                       g$t$10020$14YGsk
                                                       '(any . each-any)))))
                                                 g$t$10017$14YGsk))))
                                           (g$syntax-dispatch$7393$14YGsk
                                             g$t$10017$14YGsk
                                             '()))))
                                       g$x*$10016$14YGsk)))))
                         ((letrec ((g$f$9994$14YGsk
                                     (case-lambda
                                       ((g$x$9995$14YGsk)
                                        ((case-lambda
                                           ((g$t$9996$14YGsk)
                                            ((case-lambda
                                               ((g$ls/false$9997$14YGsk)
                                                (if g$ls/false$9997$14YGsk
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$9998$14YGsk)
                                                       (values
                                                         '()
                                                         (g$version-pred$9993$14YGsk
                                                           g$version-spec*$9998$14YGsk))))
                                                    g$ls/false$9997$14YGsk)
                                                  ((case-lambda
                                                     ((g$t$9999$14YGsk)
                                                      ((case-lambda
                                                         ((g$ls/false$10000$14YGsk)
                                                          (if (if g$ls/false$10000$14YGsk
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10001$14YGsk
                                                                         g$x*$10002$14YGsk)
                                                                       (g$idsyn?$9889$14YGsk
                                                                         g$x$10001$14YGsk)))
                                                                    g$ls/false$10000$14YGsk))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10003$14YGsk
                                                                   g$x*$10004$14YGsk)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$9994$14YGsk
                                                                        g$x*$10004$14YGsk)))
                                                                   (case-lambda
                                                                     ((g$name$10007$14YGsk
                                                                        g$pred$10008$14YGsk)
                                                                      ((case-lambda
                                                                         ((g$pred$10009$14YGsk
                                                                            g$name$10010$14YGsk)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7505$14YGsk
                                                                                g$x$10003$14YGsk)
                                                                              g$name$10010$14YGsk)
                                                                            g$pred$10009$14YGsk)))
                                                                       g$pred$10008$14YGsk
                                                                       g$name$10007$14YGsk))))))
                                                              g$ls/false$10000$14YGsk)
                                                            ((case-lambda
                                                               ((g$t$10011$14YGsk)
                                                                ((case-lambda
                                                                   ((g$ls/false$10012$14YGsk)
                                                                    (if g$ls/false$10012$14YGsk
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10013$14YGsk)
                                                                                '#t)))))
                                                                        g$ls/false$10012$14YGsk)
                                                                      ((case-lambda
                                                                         ((g$t$10014$14YGsk)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10015$14YGsk)
                                                                              (if g$ls/false$10015$14YGsk
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7502$14YGsk
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$9990$14YGsk)))
                                                                                  g$ls/false$10015$14YGsk)
                                                                                (g$syntax-violation$7502$14YGsk
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10014$14YGsk))))
                                                                           (g$syntax-dispatch$7393$14YGsk
                                                                             g$t$10014$14YGsk
                                                                             '_))))
                                                                       g$t$10011$14YGsk))))
                                                                 (g$syntax-dispatch$7393$14YGsk
                                                                   g$t$10011$14YGsk
                                                                   '()))))
                                                             g$t$9999$14YGsk))))
                                                       (g$syntax-dispatch$7393$14YGsk
                                                         g$t$9999$14YGsk
                                                         '(any . any)))))
                                                   g$t$9996$14YGsk))))
                                             (g$syntax-dispatch$7393$14YGsk
                                               g$t$9996$14YGsk
                                               '(each-any)))))
                                         g$x$9995$14YGsk)))))
                            g$f$9994$14YGsk)
                          g$spec$9990$14YGsk)))))
                  (g$import-library$9897$14YGsk
                    (case-lambda
                      ((g$spec*$9982$14YGsk)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$9896$14YGsk
                              g$spec*$9982$14YGsk)))
                         (case-lambda
                           ((g$name$9985$14YGsk g$pred$9986$14YGsk)
                            ((case-lambda
                               ((g$pred$9987$14YGsk g$name$9988$14YGsk)
                                (begin
                                  (if (null? g$name$9988$14YGsk)
                                    (g$syntax-violation$7502$14YGsk
                                      'import
                                      '"empty library name"
                                      g$spec*$9982$14YGsk)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$9989$14YGsk)
                                      (begin
                                        (if (not g$lib$9989$14YGsk)
                                          (g$syntax-violation$7502$14YGsk
                                            'import
                                            '"cannot find library with required name"
                                            g$name$9988$14YGsk)
                                          (void))
                                        (if (not (g$pred$9987$14YGsk
                                                   (g$library-version$6883$14YGsk
                                                     g$lib$9989$14YGsk)))
                                          (g$syntax-violation$7502$14YGsk
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$9982$14YGsk
                                            g$lib$9989$14YGsk)
                                          (void))
                                        ((g$imp-collector$7447$14YGsk)
                                         g$lib$9989$14YGsk)
                                        (g$library-subst$6887$14YGsk
                                          g$lib$9989$14YGsk))))
                                   (g$find-library-by-name$6923$14YGsk
                                     g$name$9988$14YGsk)))))
                             g$pred$9986$14YGsk
                             g$name$9985$14YGsk)))))))
                  (g$get-import$9898$14YGsk
                    (case-lambda
                      ((g$spec$9911$14YGsk)
                       ((case-lambda
                          ((g$t$9912$14YGsk)
                           ((case-lambda
                              ((g$ls/false$9913$14YGsk)
                               (if (if g$ls/false$9913$14YGsk
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$9914$14YGsk g$x*$9915$14YGsk)
                                            (not (memq
                                                   (g$syntax->datum$7505$14YGsk
                                                     g$x$9914$14YGsk)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$9913$14YGsk))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$9916$14YGsk g$x*$9917$14YGsk)
                                      (g$import-library$9897$14YGsk
                                        (cons
                                          g$x$9916$14YGsk
                                          g$x*$9917$14YGsk))))
                                   g$ls/false$9913$14YGsk)
                                 ((case-lambda
                                    ((g$t$9918$14YGsk)
                                     ((case-lambda
                                        ((g$ls/false$9919$14YGsk)
                                         (if (if g$ls/false$9919$14YGsk
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$9920$14YGsk
                                                        g$isp$9921$14YGsk
                                                        g$old*$9922$14YGsk
                                                        g$new*$9923$14YGsk)
                                                      (if (eq? (g$syntax->datum$7505$14YGsk
                                                                 g$rename$9920$14YGsk)
                                                               'rename)
                                                        (if (g$for-all$5356$14YGsk
                                                              g$idsyn?$9889$14YGsk
                                                              g$old*$9922$14YGsk)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5356$14YGsk
                                                              g$idsyn?$9889$14YGsk
                                                              g$new*$9923$14YGsk))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$9919$14YGsk))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$9924$14YGsk
                                                  g$isp$9925$14YGsk
                                                  g$old*$9926$14YGsk
                                                  g$new*$9927$14YGsk)
                                                ((case-lambda
                                                   ((g$subst$9928$14YGsk
                                                      g$old*$9929$14YGsk
                                                      g$new*$9930$14YGsk)
                                                    ((case-lambda
                                                       ((g$old-label*$9931$14YGsk)
                                                        ((case-lambda
                                                           ((g$subst$9932$14YGsk)
                                                            (g$merge-substs$9891$14YGsk
                                                              (map cons
                                                                   g$new*$9930$14YGsk
                                                                   g$old-label*$9931$14YGsk)
                                                              g$subst$9932$14YGsk)))
                                                         (g$rem*$9894$14YGsk
                                                           g$old*$9929$14YGsk
                                                           g$subst$9928$14YGsk))))
                                                     (g$find*$9893$14YGsk
                                                       g$old*$9929$14YGsk
                                                       g$subst$9928$14YGsk))))
                                                 (g$get-import$9898$14YGsk
                                                   g$isp$9925$14YGsk)
                                                 (map g$syntax->datum$7505$14YGsk
                                                      g$old*$9926$14YGsk)
                                                 (map g$syntax->datum$7505$14YGsk
                                                      g$new*$9927$14YGsk))))
                                             g$ls/false$9919$14YGsk)
                                           ((case-lambda
                                              ((g$t$9933$14YGsk)
                                               ((case-lambda
                                                  ((g$ls/false$9934$14YGsk)
                                                   (if (if g$ls/false$9934$14YGsk
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$9935$14YGsk
                                                                  g$isp$9936$14YGsk
                                                                  g$sym*$9937$14YGsk)
                                                                (if (eq? (g$syntax->datum$7505$14YGsk
                                                                           g$except$9935$14YGsk)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5356$14YGsk
                                                                      g$idsyn?$9889$14YGsk
                                                                      g$sym*$9937$14YGsk))
                                                                  '#f)))
                                                             g$ls/false$9934$14YGsk))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$9938$14YGsk
                                                            g$isp$9939$14YGsk
                                                            g$sym*$9940$14YGsk)
                                                          ((case-lambda
                                                             ((g$subst$9941$14YGsk)
                                                              (g$rem*$9894$14YGsk
                                                                (map g$syntax->datum$7505$14YGsk
                                                                     g$sym*$9940$14YGsk)
                                                                g$subst$9941$14YGsk)))
                                                           (g$get-import$9898$14YGsk
                                                             g$isp$9939$14YGsk))))
                                                       g$ls/false$9934$14YGsk)
                                                     ((case-lambda
                                                        ((g$t$9942$14YGsk)
                                                         ((case-lambda
                                                            ((g$ls/false$9943$14YGsk)
                                                             (if (if g$ls/false$9943$14YGsk
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$9944$14YGsk
                                                                            g$isp$9945$14YGsk
                                                                            g$sym*$9946$14YGsk)
                                                                          (if (eq? (g$syntax->datum$7505$14YGsk
                                                                                     g$only$9944$14YGsk)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5356$14YGsk
                                                                                g$idsyn?$9889$14YGsk
                                                                                g$sym*$9946$14YGsk))
                                                                            '#f)))
                                                                       g$ls/false$9943$14YGsk))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$9947$14YGsk
                                                                      g$isp$9948$14YGsk
                                                                      g$sym*$9949$14YGsk)
                                                                    ((case-lambda
                                                                       ((g$subst$9950$14YGsk
                                                                          g$sym*$9951$14YGsk)
                                                                        ((case-lambda
                                                                           ((g$sym*$9952$14YGsk)
                                                                            ((case-lambda
                                                                               ((g$lab*$9953$14YGsk)
                                                                                (map cons
                                                                                     g$sym*$9952$14YGsk
                                                                                     g$lab*$9953$14YGsk)))
                                                                             (g$find*$9893$14YGsk
                                                                               g$sym*$9952$14YGsk
                                                                               g$subst$9950$14YGsk))))
                                                                         (g$remove-dups$9895$14YGsk
                                                                           g$sym*$9951$14YGsk))))
                                                                     (g$get-import$9898$14YGsk
                                                                       g$isp$9948$14YGsk)
                                                                     (map g$syntax->datum$7505$14YGsk
                                                                          g$sym*$9949$14YGsk))))
                                                                 g$ls/false$9943$14YGsk)
                                                               ((case-lambda
                                                                  ((g$t$9954$14YGsk)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9955$14YGsk)
                                                                       (if (if g$ls/false$9955$14YGsk
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$9956$14YGsk
                                                                                      g$isp$9957$14YGsk
                                                                                      g$p$9958$14YGsk)
                                                                                    (if (eq? (g$syntax->datum$7505$14YGsk
                                                                                               g$prefix$9956$14YGsk)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$9889$14YGsk
                                                                                          g$p$9958$14YGsk))
                                                                                      '#f)))
                                                                                 g$ls/false$9955$14YGsk))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$9959$14YGsk
                                                                                g$isp$9960$14YGsk
                                                                                g$p$9961$14YGsk)
                                                                              ((case-lambda
                                                                                 ((g$subst$9962$14YGsk
                                                                                    g$prefix$9963$14YGsk)
                                                                                  (map (case-lambda
                                                                                         ((g$x$9964$14YGsk)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$9963$14YGsk
                                                                                                (symbol->string
                                                                                                  (car g$x$9964$14YGsk))))
                                                                                            (cdr g$x$9964$14YGsk))))
                                                                                       g$subst$9962$14YGsk)))
                                                                               (g$get-import$9898$14YGsk
                                                                                 g$isp$9960$14YGsk)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7505$14YGsk
                                                                                   g$p$9961$14YGsk)))))
                                                                           g$ls/false$9955$14YGsk)
                                                                         ((case-lambda
                                                                            ((g$t$9965$14YGsk)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9966$14YGsk)
                                                                                 (if (if g$ls/false$9966$14YGsk
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$9967$14YGsk
                                                                                                g$spec*$9968$14YGsk)
                                                                                              (eq? (g$syntax->datum$7505$14YGsk
                                                                                                     g$library$9967$14YGsk)
                                                                                                   'library)))
                                                                                           g$ls/false$9966$14YGsk))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$9969$14YGsk
                                                                                          g$spec*$9970$14YGsk)
                                                                                        (g$import-library$9897$14YGsk
                                                                                          g$spec*$9970$14YGsk)))
                                                                                     g$ls/false$9966$14YGsk)
                                                                                   ((case-lambda
                                                                                      ((g$t$9971$14YGsk)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9972$14YGsk)
                                                                                           (if (if g$ls/false$9972$14YGsk
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$9973$14YGsk
                                                                                                          g$isp$9974$14YGsk
                                                                                                          g$rest$9975$14YGsk)
                                                                                                        (eq? (g$syntax->datum$7505$14YGsk
                                                                                                               g$for$9973$14YGsk)
                                                                                                             'for)))
                                                                                                     g$ls/false$9972$14YGsk))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$9976$14YGsk
                                                                                                    g$isp$9977$14YGsk
                                                                                                    g$rest$9978$14YGsk)
                                                                                                  (g$get-import$9898$14YGsk
                                                                                                    g$isp$9977$14YGsk)))
                                                                                               g$ls/false$9972$14YGsk)
                                                                                             ((case-lambda
                                                                                                ((g$t$9979$14YGsk)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$9980$14YGsk)
                                                                                                     (if g$ls/false$9980$14YGsk
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$9981$14YGsk)
                                                                                                            (g$syntax-violation$7502$14YGsk
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$9981$14YGsk)))
                                                                                                         g$ls/false$9980$14YGsk)
                                                                                                       (g$syntax-violation$7502$14YGsk
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$9979$14YGsk))))
                                                                                                  (g$syntax-dispatch$7393$14YGsk
                                                                                                    g$t$9979$14YGsk
                                                                                                    'any))))
                                                                                              g$t$9971$14YGsk))))
                                                                                        (g$syntax-dispatch$7393$14YGsk
                                                                                          g$t$9971$14YGsk
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$9965$14YGsk))))
                                                                              (g$syntax-dispatch$7393$14YGsk
                                                                                g$t$9965$14YGsk
                                                                                '(any each-any)))))
                                                                          g$t$9954$14YGsk))))
                                                                    (g$syntax-dispatch$7393$14YGsk
                                                                      g$t$9954$14YGsk
                                                                      '(any any
                                                                            any)))))
                                                                g$t$9942$14YGsk))))
                                                          (g$syntax-dispatch$7393$14YGsk
                                                            g$t$9942$14YGsk
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$9933$14YGsk))))
                                                (g$syntax-dispatch$7393$14YGsk
                                                  g$t$9933$14YGsk
                                                  '(any any . each-any)))))
                                            g$t$9918$14YGsk))))
                                      (g$syntax-dispatch$7393$14YGsk
                                        g$t$9918$14YGsk
                                        '(any any . #(each (any any)))))))
                                  g$t$9912$14YGsk))))
                            (g$syntax-dispatch$7393$14YGsk
                              g$t$9912$14YGsk
                              '(any . each-any)))))
                        g$spec$9911$14YGsk))))
                  (g$add-imports!$9899$14YGsk
                    (case-lambda
                      ((g$imp$9903$14YGsk g$h$9904$14YGsk)
                       ((case-lambda
                          ((g$subst$9905$14YGsk)
                           (for-each
                             (case-lambda
                               ((g$x$9906$14YGsk)
                                ((case-lambda
                                   ((g$name$9907$14YGsk g$label$9908$14YGsk)
                                    ((case-lambda
                                       ((g$t$9909$14YGsk)
                                        (if g$t$9909$14YGsk
                                          ((case-lambda
                                             ((g$l$9910$14YGsk)
                                              (if (not (eq? g$l$9910$14YGsk
                                                            g$label$9908$14YGsk))
                                                (g$dup-error$9890$14YGsk
                                                  g$name$9907$14YGsk)
                                                (void))))
                                           g$t$9909$14YGsk)
                                          (g$hashtable-set!$5153$14YGsk
                                            g$h$9904$14YGsk
                                            g$name$9907$14YGsk
                                            g$label$9908$14YGsk))))
                                     (g$hashtable-ref$5152$14YGsk
                                       g$h$9904$14YGsk
                                       g$name$9907$14YGsk
                                       '#f))))
                                 (car g$x$9906$14YGsk)
                                 (cdr g$x$9906$14YGsk))))
                             g$subst$9905$14YGsk)))
                        (g$get-import$9898$14YGsk g$imp$9903$14YGsk))))))
          ((letrec ((g$f$9900$14YGsk
                      (case-lambda
                        ((g$imp*$9901$14YGsk g$h$9902$14YGsk)
                         (if (null? g$imp*$9901$14YGsk)
                           (hashtable-entries g$h$9902$14YGsk)
                           (begin
                             (g$add-imports!$9899$14YGsk
                               (car g$imp*$9901$14YGsk)
                               g$h$9902$14YGsk)
                             (g$f$9900$14YGsk
                               (cdr g$imp*$9901$14YGsk)
                               g$h$9902$14YGsk)))))))
             g$f$9900$14YGsk)
           g$imp*$9888$14YGsk
           (g$make-eq-hashtable$5149$14YGsk))))))
   (g$make-top-rib$7443$14YGsk
     g$make-top-rib$10879$14YGsk
     (case-lambda
       ((g$names$10149$14YGsk g$labels$10150$14YGsk)
        ((case-lambda
           ((g$rib$10151$14YGsk)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10152$14YGsk g$label$10153$14YGsk)
                   (begin
                     (if (not (symbol? g$name$10152$14YGsk))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10152$14YGsk)
                       (void))
                     (g$extend-rib!$7079$14YGsk
                       g$rib$10151$14YGsk
                       (g$make-stx$7088$14YGsk
                         g$name$10152$14YGsk
                         g$top-mark*$7057$14YGsk
                         '()
                         '())
                       g$label$10153$14YGsk))))
                g$names$10149$14YGsk
                g$labels$10150$14YGsk)
              g$rib$10151$14YGsk)))
         (g$make-empty-rib$7078$14YGsk)))))
   (g$make-collector$7444$14YGsk
     g$make-collector$10880$14YGsk
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10154$14YGsk)
            (case-lambda
              (() g$ls$10154$14YGsk)
              ((g$x$10155$14YGsk)
               (set! g$ls$10154$14YGsk
                 (g$set-cons$7054$14YGsk
                   g$x$10155$14YGsk
                   g$ls$10154$14YGsk))))))
         '()))))
   (g$inv-collector$7445$14YGsk
     g$inv-collector$10881$14YGsk
     (g$make-parameter$6382$14YGsk
       (case-lambda
         (g$args$10156$14YGsk
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10157$14YGsk)
          (begin
            (if (not (procedure? g$x$10157$14YGsk))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10157$14YGsk)
              (void))
            g$x$10157$14YGsk)))))
   (g$vis-collector$7446$14YGsk
     g$vis-collector$10882$14YGsk
     (g$make-parameter$6382$14YGsk
       (case-lambda
         (g$args$10158$14YGsk
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10159$14YGsk)
          (begin
            (if (not (procedure? g$x$10159$14YGsk))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10159$14YGsk)
              (void))
            g$x$10159$14YGsk)))))
   (g$imp-collector$7447$14YGsk
     g$imp-collector$10883$14YGsk
     (g$make-parameter$6382$14YGsk
       (case-lambda
         (g$args$10160$14YGsk
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10161$14YGsk)
          (begin
            (if (not (procedure? g$x$10161$14YGsk))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10161$14YGsk)
              (void))
            g$x$10161$14YGsk)))))
   (g$chi-library-internal$7448$14YGsk
     g$chi-library-internal$10884$14YGsk
     (case-lambda
       ((g$e*$10162$14YGsk g$rib$10163$14YGsk g$top?$10164$14YGsk)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7437$14YGsk
               g$e*$10162$14YGsk
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10163$14YGsk
               g$top?$10164$14YGsk)))
          (case-lambda
            ((g$e*$10172$14YGsk
               g$r$10173$14YGsk
               g$mr$10174$14YGsk
               g$lex*$10175$14YGsk
               g$rhs*$10176$14YGsk
               g$mod**$10177$14YGsk
               g$_kwd*$10178$14YGsk)
             ((case-lambda
                ((g$_kwd*$10179$14YGsk
                   g$mod**$10180$14YGsk
                   g$rhs*$10181$14YGsk
                   g$lex*$10182$14YGsk
                   g$mr$10183$14YGsk
                   g$r$10184$14YGsk
                   g$e*$10185$14YGsk)
                 (values
                   (append
                     (apply append (reverse g$mod**$10180$14YGsk))
                     g$e*$10185$14YGsk)
                   g$r$10184$14YGsk
                   g$mr$10183$14YGsk
                   (reverse g$lex*$10182$14YGsk)
                   (reverse g$rhs*$10181$14YGsk))))
              g$_kwd*$10178$14YGsk
              g$mod**$10177$14YGsk
              g$rhs*$10176$14YGsk
              g$lex*$10175$14YGsk
              g$mr$10174$14YGsk
              g$r$10173$14YGsk
              g$e*$10172$14YGsk)))))))
   (g$chi-interaction-expr$7449$14YGsk
     g$chi-interaction-expr$10885$14YGsk
     (case-lambda
       ((g$e$10186$14YGsk g$rib$10187$14YGsk g$r$10188$14YGsk)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7437$14YGsk
               (list g$e$10186$14YGsk)
               g$r$10188$14YGsk
               g$r$10188$14YGsk
               '()
               '()
               '()
               '()
               g$rib$10187$14YGsk
               '#t)))
          (case-lambda
            ((g$e*$10196$14YGsk
               g$r$10197$14YGsk
               g$mr$10198$14YGsk
               g$lex*$10199$14YGsk
               g$rhs*$10200$14YGsk
               g$mod**$10201$14YGsk
               g$_kwd*$10202$14YGsk)
             ((case-lambda
                ((g$_kwd*$10203$14YGsk
                   g$mod**$10204$14YGsk
                   g$rhs*$10205$14YGsk
                   g$lex*$10206$14YGsk
                   g$mr$10207$14YGsk
                   g$r$10208$14YGsk
                   g$e*$10209$14YGsk)
                 ((case-lambda
                    ((g$e*$10210$14YGsk)
                     ((case-lambda
                        ((g$e$10211$14YGsk)
                         (values g$e$10211$14YGsk g$r$10208$14YGsk)))
                      (if (null? g$e*$10210$14YGsk)
                        (g$build-void$7050$14YGsk)
                        (if (null? (cdr g$e*$10210$14YGsk))
                          (car g$e*$10210$14YGsk)
                          (g$build-sequence$7049$14YGsk
                            '#f
                            g$e*$10210$14YGsk))))))
                  (g$expand-interaction-rhs*/init*$7418$14YGsk
                    (reverse g$lex*$10206$14YGsk)
                    (reverse g$rhs*$10205$14YGsk)
                    (append
                      (apply append (reverse g$mod**$10204$14YGsk))
                      g$e*$10209$14YGsk)
                    g$r$10208$14YGsk
                    g$mr$10207$14YGsk))))
              g$_kwd*$10202$14YGsk
              g$mod**$10201$14YGsk
              g$rhs*$10200$14YGsk
              g$lex*$10199$14YGsk
              g$mr$10198$14YGsk
              g$r$10197$14YGsk
              g$e*$10196$14YGsk)))))))
   (g$library-body-expander$7450$14YGsk
     g$library-body-expander$10886$14YGsk
     (case-lambda
       ((g$name$10212$14YGsk
          g$exp*$10213$14YGsk
          g$imp*$10214$14YGsk
          g$b*$10215$14YGsk
          g$top?$10216$14YGsk)
        (letrec* ((g$itc$10217$14YGsk (g$make-collector$7444$14YGsk)))
          ((case-lambda
             ((g$imp-collector$10222$14YGsk
                g$top-level-context$10223$14YGsk
                g$imp-collector$10224$14YGsk
                g$top-level-context$10225$14YGsk)
              ((case-lambda
                 ((g$swap$10226$14YGsk)
                  (dynamic-wind
                    g$swap$10226$14YGsk
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-exports$7439$14YGsk g$exp*$10213$14YGsk)))
                         (case-lambda
                           ((g$exp-int*$10229$14YGsk g$exp-ext*$10230$14YGsk)
                            ((case-lambda
                               ((g$exp-ext*$10231$14YGsk
                                  g$exp-int*$10232$14YGsk)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7442$14YGsk
                                       g$imp*$10214$14YGsk)))
                                  (case-lambda
                                    ((g$subst-names$10235$14YGsk
                                       g$subst-labels$10236$14YGsk)
                                     ((case-lambda
                                        ((g$subst-labels$10237$14YGsk
                                           g$subst-names$10238$14YGsk)
                                         ((case-lambda
                                            ((g$rib$10239$14YGsk)
                                             ((case-lambda
                                                ((g$b*$10240$14YGsk
                                                   g$rtc$10241$14YGsk
                                                   g$vtc$10242$14YGsk)
                                                 ((case-lambda
                                                    ((g$inv-collector$10247$14YGsk
                                                       g$vis-collector$10248$14YGsk
                                                       g$inv-collector$10249$14YGsk
                                                       g$vis-collector$10250$14YGsk)
                                                     ((case-lambda
                                                        ((g$swap$10251$14YGsk)
                                                         (dynamic-wind
                                                           g$swap$10251$14YGsk
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7448$14YGsk
                                                                     g$b*$10240$14YGsk
                                                                     g$rib$10239$14YGsk
                                                                     g$top?$10216$14YGsk)))
                                                                (case-lambda
                                                                  ((g$init*$10257$14YGsk
                                                                     g$r$10258$14YGsk
                                                                     g$mr$10259$14YGsk
                                                                     g$lex*$10260$14YGsk
                                                                     g$rhs*$10261$14YGsk)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10262$14YGsk
                                                                         g$lex*$10263$14YGsk
                                                                         g$mr$10264$14YGsk
                                                                         g$r$10265$14YGsk
                                                                         g$init*$10266$14YGsk)
                                                                       (begin
                                                                         (g$seal-rib!$7081$14YGsk
                                                                           g$rib$10239$14YGsk)
                                                                         ((case-lambda
                                                                            ((g$init*$10267$14YGsk)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10268$14YGsk)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7082$14YGsk
                                                                                         g$rib$10239$14YGsk)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10269$14YGsk
                                                                                             g$export-subst$10270$14YGsk)
                                                                                           (letrec* ((g$errstr$10271$14YGsk
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7491$14YGsk
                                                                                                    g$lex*$10263$14YGsk
                                                                                                    g$loc*$10269$14YGsk
                                                                                                    g$r$10265$14YGsk)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10275$14YGsk
                                                                                                    g$global*$10276$14YGsk
                                                                                                    g$macro*$10277$14YGsk)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10278$14YGsk
                                                                                                        g$global*$10279$14YGsk
                                                                                                        g$export-env$10280$14YGsk)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10281$14YGsk)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10282$14YGsk
                                                                                                                   g$label$10283$14YGsk)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10284$14YGsk)
                                                                                                                     (if g$p$10284$14YGsk
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10285$14YGsk)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10286$14YGsk)
                                                                                                                               (if (eq? g$type$10286$14YGsk
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7502$14YGsk
                                                                                                                                   'export
                                                                                                                                   g$errstr$10271$14YGsk
                                                                                                                                   g$name$10282$14YGsk)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10285$14YGsk))))
                                                                                                                        (cdr g$p$10284$14YGsk))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10283$14YGsk
                                                                                                                    g$export-env$10280$14YGsk))))
                                                                                                              (car g$s$10281$14YGsk)
                                                                                                              (cdr g$s$10281$14YGsk))))
                                                                                                          g$export-subst$10270$14YGsk)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10287$14YGsk
                                                                                                              g$invoke-definitions$10288$14YGsk)
                                                                                                            (values
                                                                                                              (g$itc$10217$14YGsk)
                                                                                                              (g$rtc$10241$14YGsk)
                                                                                                              (g$vtc$10242$14YGsk)
                                                                                                              (g$build-sequence$7049$14YGsk
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10288$14YGsk
                                                                                                                  (list
                                                                                                                    g$invoke-body$10287$14YGsk)))
                                                                                                              g$macro*$10278$14YGsk
                                                                                                              g$export-subst$10270$14YGsk
                                                                                                              g$export-env$10280$14YGsk)))
                                                                                                         (g$build-library-letrec*$7053$14YGsk
                                                                                                           '#f
                                                                                                           g$name$10212$14YGsk
                                                                                                           g$lex*$10263$14YGsk
                                                                                                           g$loc*$10269$14YGsk
                                                                                                           g$rhs*$10268$14YGsk
                                                                                                           (if (null?
                                                                                                                 g$init*$10267$14YGsk)
                                                                                                             (g$build-void$7050$14YGsk)
                                                                                                             (g$build-sequence$7049$14YGsk
                                                                                                               '#f
                                                                                                               g$init*$10267$14YGsk)))
                                                                                                         (map g$build-global-define$7045$14YGsk
                                                                                                              (map cdr
                                                                                                                   g$global*$10279$14YGsk))))))
                                                                                                   g$macro*$10277$14YGsk
                                                                                                   g$global*$10276$14YGsk
                                                                                                   g$export-env$10275$14YGsk)))))))
                                                                                        (map g$gen-global$7060$14YGsk
                                                                                             g$lex*$10263$14YGsk)
                                                                                        (g$make-export-subst$7490$14YGsk
                                                                                          g$exp-int*$10232$14YGsk
                                                                                          g$exp-ext*$10231$14YGsk
                                                                                          g$rib$10239$14YGsk))))))))
                                                                              (g$chi-rhs*$7419$14YGsk
                                                                                g$rhs*$10262$14YGsk
                                                                                g$r$10265$14YGsk
                                                                                g$mr$10264$14YGsk))))
                                                                          (g$chi-expr*$7409$14YGsk
                                                                            g$init*$10266$14YGsk
                                                                            g$r$10265$14YGsk
                                                                            g$mr$10264$14YGsk)))))
                                                                    g$rhs*$10261$14YGsk
                                                                    g$lex*$10260$14YGsk
                                                                    g$mr$10259$14YGsk
                                                                    g$r$10258$14YGsk
                                                                    g$init*$10257$14YGsk))))))
                                                           g$swap$10251$14YGsk)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10289$14YGsk)
                                                               (begin
                                                                 (g$inv-collector$10247$14YGsk
                                                                   g$inv-collector$10249$14YGsk)
                                                                 (set! g$inv-collector$10249$14YGsk
                                                                   g$t$10289$14YGsk))))
                                                            (g$inv-collector$10247$14YGsk))
                                                           ((case-lambda
                                                              ((g$t$10290$14YGsk)
                                                               (begin
                                                                 (g$vis-collector$10248$14YGsk
                                                                   g$vis-collector$10250$14YGsk)
                                                                 (set! g$vis-collector$10250$14YGsk
                                                                   g$t$10290$14YGsk))))
                                                            (g$vis-collector$10248$14YGsk))))))))
                                                  g$inv-collector$7445$14YGsk
                                                  g$vis-collector$7446$14YGsk
                                                  g$rtc$10241$14YGsk
                                                  g$vtc$10242$14YGsk)))
                                              (map (case-lambda
                                                     ((g$x$10291$14YGsk)
                                                      (g$make-stx$7088$14YGsk
                                                        g$x$10291$14YGsk
                                                        g$top-mark*$7057$14YGsk
                                                        (list
                                                          g$rib$10239$14YGsk)
                                                        '())))
                                                   g$b*$10215$14YGsk)
                                              (g$make-collector$7444$14YGsk)
                                              (g$make-collector$7444$14YGsk))))
                                          (g$make-top-rib$7443$14YGsk
                                            g$subst-names$10238$14YGsk
                                            g$subst-labels$10237$14YGsk))))
                                      g$subst-labels$10236$14YGsk
                                      g$subst-names$10235$14YGsk))))))
                             g$exp-ext*$10230$14YGsk
                             g$exp-int*$10229$14YGsk))))))
                    g$swap$10226$14YGsk)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10292$14YGsk)
                        (begin
                          (g$imp-collector$10222$14YGsk
                            g$imp-collector$10224$14YGsk)
                          (set! g$imp-collector$10224$14YGsk
                            g$t$10292$14YGsk))))
                     (g$imp-collector$10222$14YGsk))
                    ((case-lambda
                       ((g$t$10293$14YGsk)
                        (begin
                          (g$top-level-context$10223$14YGsk
                            g$top-level-context$10225$14YGsk)
                          (set! g$top-level-context$10225$14YGsk
                            g$t$10293$14YGsk))))
                     (g$top-level-context$10223$14YGsk))))))))
           g$imp-collector$7447$14YGsk
           g$top-level-context$7509$14YGsk
           g$itc$10217$14YGsk
           '#f)))))
   (g$core-library-expander$7451$14YGsk
     g$core-library-expander$10887$14YGsk
     (case-lambda
       ((g$e$10294$14YGsk g$verify-name$10295$14YGsk)
        (call-with-values
          (case-lambda (() (g$parse-library$7441$14YGsk g$e$10294$14YGsk)))
          (case-lambda
            ((g$name*$10300$14YGsk
               g$exp*$10301$14YGsk
               g$imp*$10302$14YGsk
               g$b*$10303$14YGsk)
             ((case-lambda
                ((g$b*$10304$14YGsk
                   g$imp*$10305$14YGsk
                   g$exp*$10306$14YGsk
                   g$name*$10307$14YGsk)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7440$14YGsk g$name*$10307$14YGsk)))
                   (case-lambda
                     ((g$name$10310$14YGsk g$ver$10311$14YGsk)
                      ((case-lambda
                         ((g$ver$10312$14YGsk g$name$10313$14YGsk)
                          (begin
                            (g$verify-name$10295$14YGsk g$name$10313$14YGsk)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7450$14YGsk
                                   g$name$10313$14YGsk
                                   g$exp*$10306$14YGsk
                                   g$imp*$10305$14YGsk
                                   g$b*$10304$14YGsk
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10321$14YGsk
                                   g$invoke-req*$10322$14YGsk
                                   g$visit-req*$10323$14YGsk
                                   g$invoke-code$10324$14YGsk
                                   g$visit-code$10325$14YGsk
                                   g$export-subst$10326$14YGsk
                                   g$export-env$10327$14YGsk)
                                 ((case-lambda
                                    ((g$export-env$10328$14YGsk
                                       g$export-subst$10329$14YGsk
                                       g$visit-code$10330$14YGsk
                                       g$invoke-code$10331$14YGsk
                                       g$visit-req*$10332$14YGsk
                                       g$invoke-req*$10333$14YGsk
                                       g$imp*$10334$14YGsk)
                                     (values
                                       g$name$10313$14YGsk
                                       g$ver$10312$14YGsk
                                       g$imp*$10334$14YGsk
                                       g$invoke-req*$10333$14YGsk
                                       g$visit-req*$10332$14YGsk
                                       g$invoke-code$10331$14YGsk
                                       g$visit-code$10330$14YGsk
                                       g$export-subst$10329$14YGsk
                                       g$export-env$10328$14YGsk)))
                                  g$export-env$10327$14YGsk
                                  g$export-subst$10326$14YGsk
                                  g$visit-code$10325$14YGsk
                                  g$invoke-code$10324$14YGsk
                                  g$visit-req*$10323$14YGsk
                                  g$invoke-req*$10322$14YGsk
                                  g$imp*$10321$14YGsk)))))))
                       g$ver$10311$14YGsk
                       g$name$10310$14YGsk))))))
              g$b*$10303$14YGsk
              g$imp*$10302$14YGsk
              g$exp*$10301$14YGsk
              g$name*$10300$14YGsk)))))))
   (g$parse-top-level-program$7452$14YGsk
     g$parse-top-level-program$10888$14YGsk
     (case-lambda
       ((g$e*$10335$14YGsk)
        ((case-lambda
           ((g$t$10336$14YGsk)
            ((case-lambda
               ((g$ls/false$10337$14YGsk)
                (if (if g$ls/false$10337$14YGsk
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10338$14YGsk
                               g$imp*$10339$14YGsk
                               g$b*$10340$14YGsk)
                             (eq? (g$syntax->datum$7505$14YGsk
                                    g$import$10338$14YGsk)
                                  'import)))
                          g$ls/false$10337$14YGsk))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10341$14YGsk
                         g$imp*$10342$14YGsk
                         g$b*$10343$14YGsk)
                       (values g$imp*$10342$14YGsk g$b*$10343$14YGsk)))
                    g$ls/false$10337$14YGsk)
                  ((case-lambda
                     ((g$t$10344$14YGsk)
                      ((case-lambda
                         ((g$ls/false$10345$14YGsk)
                          (if (if g$ls/false$10345$14YGsk
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10346$14YGsk
                                         g$x$10347$14YGsk
                                         g$y$10348$14YGsk)
                                       (eq? (g$syntax->datum$7505$14YGsk
                                              g$import$10346$14YGsk)
                                            'import)))
                                    g$ls/false$10345$14YGsk))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10349$14YGsk
                                   g$x$10350$14YGsk
                                   g$y$10351$14YGsk)
                                 (g$syntax-violation$7502$14YGsk
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7112$14YGsk
                                     g$e*$10335$14YGsk))))
                              g$ls/false$10345$14YGsk)
                            ((case-lambda
                               ((g$t$10352$14YGsk)
                                ((case-lambda
                                   ((g$ls/false$10353$14YGsk)
                                    (if g$ls/false$10353$14YGsk
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10353$14YGsk)
                                      (g$syntax-violation$7502$14YGsk
                                        '#f
                                        '"invalid syntax"
                                        g$t$10352$14YGsk))))
                                 (g$syntax-dispatch$7393$14YGsk
                                   g$t$10352$14YGsk
                                   '_))))
                             g$t$10344$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk
                         g$t$10344$14YGsk
                         '((any . any) . any)))))
                   g$t$10336$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk
               g$t$10336$14YGsk
               '((any . each-any) . each-any)))))
         g$e*$10335$14YGsk))))
   (g$top-level-expander$7453$14YGsk
     g$top-level-expander$10889$14YGsk
     (case-lambda
       ((g$e*$10354$14YGsk)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7452$14YGsk g$e*$10354$14YGsk)))
          (case-lambda
            ((g$imp*$10357$14YGsk g$b*$10358$14YGsk)
             ((case-lambda
                ((g$b*$10359$14YGsk g$imp*$10360$14YGsk)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7450$14YGsk
                        '()
                        '()
                        g$imp*$10360$14YGsk
                        g$b*$10359$14YGsk
                        '#t)))
                   (case-lambda
                     ((g$imp*$10368$14YGsk
                        g$invoke-req*$10369$14YGsk
                        g$visit-req*$10370$14YGsk
                        g$invoke-code$10371$14YGsk
                        g$visit-code$10372$14YGsk
                        g$export-subst$10373$14YGsk
                        g$export-env$10374$14YGsk)
                      ((case-lambda
                         ((g$export-env$10375$14YGsk
                            g$export-subst$10376$14YGsk
                            g$visit-code$10377$14YGsk
                            g$invoke-code$10378$14YGsk
                            g$visit-req*$10379$14YGsk
                            g$invoke-req*$10380$14YGsk
                            g$imp*$10381$14YGsk)
                          (values
                            g$invoke-req*$10380$14YGsk
                            g$invoke-code$10378$14YGsk)))
                       g$export-env$10374$14YGsk
                       g$export-subst$10373$14YGsk
                       g$visit-code$10372$14YGsk
                       g$invoke-code$10371$14YGsk
                       g$visit-req*$10370$14YGsk
                       g$invoke-req*$10369$14YGsk
                       g$imp*$10368$14YGsk))))))
              g$b*$10358$14YGsk
              g$imp*$10357$14YGsk)))))))
   (g$8488$7454$14YGsk
     g$8488$10890$14YGsk
     (make-record-type-descriptor
       'env
       '#f
       'g$8491$14YGsk
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8490$7455$14YGsk g$8490$10891$14YGsk '#f)
   (g$8489$7456$14YGsk
     g$8489$10892$14YGsk
     (make-record-constructor-descriptor
       g$8488$7454$14YGsk
       '#f
       g$8490$7455$14YGsk))
   (g$env?$7457$14YGsk
     g$env?$10893$14YGsk
     (record-predicate g$8488$7454$14YGsk))
   (g$make-env$7458$14YGsk
     g$make-env$10894$14YGsk
     (record-constructor g$8489$7456$14YGsk))
   (g$env-names$7459$14YGsk
     g$env-names$10895$14YGsk
     (record-accessor g$8488$7454$14YGsk '0))
   (g$env-labels$7460$14YGsk
     g$env-labels$10896$14YGsk
     (record-accessor g$8488$7454$14YGsk '1))
   (g$env-itc$7461$14YGsk
     g$env-itc$10897$14YGsk
     (record-accessor g$8488$7454$14YGsk '2))
   (g$set-env-names!$7462$14YGsk
     g$set-env-names!$10898$14YGsk
     (record-mutator g$8488$7454$14YGsk '0))
   (g$set-env-labels!$7463$14YGsk
     g$set-env-labels!$10899$14YGsk
     (record-mutator g$8488$7454$14YGsk '1))
   (g$set-env-itc!$7464$14YGsk
     g$set-env-itc!$10900$14YGsk
     (record-mutator g$8488$7454$14YGsk '2))
   (g$rp$7465$14YGsk
     g$rp$10901$14YGsk
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10382$14YGsk g$p$10383$14YGsk)
          (display '"#<environment>" g$p$10383$14YGsk)))))
   (g$8507$7466$14YGsk
     g$8507$10902$14YGsk
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8510$14YGsk
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8509$7467$14YGsk g$8509$10903$14YGsk '#f)
   (g$8508$7468$14YGsk
     g$8508$10904$14YGsk
     (make-record-constructor-descriptor
       g$8507$7466$14YGsk
       '#f
       g$8509$7467$14YGsk))
   (g$interaction-env?$7469$14YGsk
     g$interaction-env?$10905$14YGsk
     (record-predicate g$8507$7466$14YGsk))
   (g$make-interaction-env$7470$14YGsk
     g$make-interaction-env$10906$14YGsk
     (record-constructor g$8508$7468$14YGsk))
   (g$interaction-env-rib$7471$14YGsk
     g$interaction-env-rib$10907$14YGsk
     (record-accessor g$8507$7466$14YGsk '0))
   (g$interaction-env-r$7472$14YGsk
     g$interaction-env-r$10908$14YGsk
     (record-accessor g$8507$7466$14YGsk '1))
   (g$interaction-env-locs$7473$14YGsk
     g$interaction-env-locs$10909$14YGsk
     (record-accessor g$8507$7466$14YGsk '2))
   (g$set-interaction-env-rib!$7474$14YGsk
     g$set-interaction-env-rib!$10910$14YGsk
     (record-mutator g$8507$7466$14YGsk '0))
   (g$set-interaction-env-r!$7475$14YGsk
     g$set-interaction-env-r!$10911$14YGsk
     (record-mutator g$8507$7466$14YGsk '1))
   (g$set-interaction-env-locs!$7476$14YGsk
     g$set-interaction-env-locs!$10912$14YGsk
     (record-mutator g$8507$7466$14YGsk '2))
   (g$rp$7477$14YGsk
     g$rp$10913$14YGsk
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10384$14YGsk g$p$10385$14YGsk)
          (display '"#<environment>" g$p$10385$14YGsk)))))
   (g$interaction-environment-symbols$7478$14YGsk
     g$interaction-environment-symbols$10914$14YGsk
     (case-lambda
       (()
        (map (case-lambda ((g$x$10386$14YGsk) g$x$10386$14YGsk))
             (g$rib-sym*$7070$14YGsk
               (g$interaction-env-rib$7471$14YGsk
                 (g$interaction-environment$7508$14YGsk)))))))
   (g$environment-symbols$7479$14YGsk
     g$environment-symbols$10915$14YGsk
     (case-lambda
       ((g$e$10387$14YGsk)
        (vector->list (g$env-names$7459$14YGsk g$e$10387$14YGsk)))))
   (g$environment?$7480$14YGsk
     g$environment?$10916$14YGsk
     (case-lambda
       ((g$x$10388$14YGsk)
        ((case-lambda
           ((g$t$10389$14YGsk)
            (if g$t$10389$14YGsk
              g$t$10389$14YGsk
              (begin '#f (g$interaction-env?$7469$14YGsk g$x$10388$14YGsk)))))
         (g$env?$7457$14YGsk g$x$10388$14YGsk)))))
   (g$environment$7481$14YGsk
     g$environment$10917$14YGsk
     (case-lambda
       (g$imp*$10390$14YGsk
        ((case-lambda
           ((g$itc$10391$14YGsk)
            ((case-lambda
               ((g$imp-collector$10394$14YGsk g$imp-collector$10395$14YGsk)
                ((case-lambda
                   ((g$swap$10396$14YGsk)
                    (dynamic-wind
                      g$swap$10396$14YGsk
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7442$14YGsk
                                g$imp*$10390$14YGsk)))
                           (case-lambda
                             ((g$subst-names$10399$14YGsk
                                g$subst-labels$10400$14YGsk)
                              ((case-lambda
                                 ((g$subst-labels$10401$14YGsk
                                    g$subst-names$10402$14YGsk)
                                  (g$make-env$7458$14YGsk
                                    g$subst-names$10402$14YGsk
                                    g$subst-labels$10401$14YGsk
                                    g$itc$10391$14YGsk)))
                               g$subst-labels$10400$14YGsk
                               g$subst-names$10399$14YGsk))))))
                      g$swap$10396$14YGsk)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10403$14YGsk)
                        (begin
                          (g$imp-collector$10394$14YGsk
                            g$imp-collector$10395$14YGsk)
                          (set! g$imp-collector$10395$14YGsk
                            g$t$10403$14YGsk))))
                     (g$imp-collector$10394$14YGsk)))))))
             g$imp-collector$7447$14YGsk
             g$itc$10391$14YGsk)))
         (g$make-collector$7444$14YGsk)))))
   (g$null-environment$7482$14YGsk
     g$null-environment$10918$14YGsk
     (case-lambda
       ((g$n$10404$14YGsk)
        (begin
          (if (not (eqv? g$n$10404$14YGsk '5))
            (assertion-violation 'null-environment '"not 5" g$n$10404$14YGsk)
            (void))
          (g$environment$7481$14YGsk '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7483$14YGsk
     g$scheme-report-environment$10919$14YGsk
     (case-lambda
       ((g$n$10405$14YGsk)
        (begin
          (if (not (eqv? g$n$10405$14YGsk '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10405$14YGsk)
            (void))
          (g$environment$7481$14YGsk '(psyntax scheme-report-environment-5))))))
   (g$expand$7484$14YGsk
     g$expand$10920$14YGsk
     (case-lambda
       ((g$x$10406$14YGsk g$env$10407$14YGsk)
        (if (g$env?$7457$14YGsk g$env$10407$14YGsk)
          ((case-lambda
             ((g$rib$10408$14YGsk)
              ((case-lambda
                 ((g$x$10409$14YGsk
                    g$itc$10410$14YGsk
                    g$rtc$10411$14YGsk
                    g$vtc$10412$14YGsk)
                  ((case-lambda
                     ((g$x$10413$14YGsk)
                      (begin
                        (g$seal-rib!$7081$14YGsk g$rib$10408$14YGsk)
                        (values g$x$10413$14YGsk (g$rtc$10411$14YGsk)))))
                   ((case-lambda
                      ((g$inv-collector$10420$14YGsk
                         g$vis-collector$10421$14YGsk
                         g$imp-collector$10422$14YGsk
                         g$inv-collector$10423$14YGsk
                         g$vis-collector$10424$14YGsk
                         g$imp-collector$10425$14YGsk)
                       ((case-lambda
                          ((g$swap$10426$14YGsk)
                           (dynamic-wind
                             g$swap$10426$14YGsk
                             (case-lambda
                               (()
                                (g$chi-expr$7411$14YGsk
                                  g$x$10409$14YGsk
                                  '()
                                  '())))
                             g$swap$10426$14YGsk)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10427$14YGsk)
                                 (begin
                                   (g$inv-collector$10420$14YGsk
                                     g$inv-collector$10423$14YGsk)
                                   (set! g$inv-collector$10423$14YGsk
                                     g$t$10427$14YGsk))))
                              (g$inv-collector$10420$14YGsk))
                             ((case-lambda
                                ((g$t$10428$14YGsk)
                                 (begin
                                   (g$vis-collector$10421$14YGsk
                                     g$vis-collector$10424$14YGsk)
                                   (set! g$vis-collector$10424$14YGsk
                                     g$t$10428$14YGsk))))
                              (g$vis-collector$10421$14YGsk))
                             ((case-lambda
                                ((g$t$10429$14YGsk)
                                 (begin
                                   (g$imp-collector$10422$14YGsk
                                     g$imp-collector$10425$14YGsk)
                                   (set! g$imp-collector$10425$14YGsk
                                     g$t$10429$14YGsk))))
                              (g$imp-collector$10422$14YGsk))))))))
                    g$inv-collector$7445$14YGsk
                    g$vis-collector$7446$14YGsk
                    g$imp-collector$7447$14YGsk
                    g$rtc$10411$14YGsk
                    g$vtc$10412$14YGsk
                    g$itc$10410$14YGsk))))
               (g$make-stx$7088$14YGsk
                 g$x$10406$14YGsk
                 g$top-mark*$7057$14YGsk
                 (list g$rib$10408$14YGsk)
                 '())
               (g$env-itc$7461$14YGsk g$env$10407$14YGsk)
               (g$make-collector$7444$14YGsk)
               (g$make-collector$7444$14YGsk))))
           (g$make-top-rib$7443$14YGsk
             (g$env-names$7459$14YGsk g$env$10407$14YGsk)
             (g$env-labels$7460$14YGsk g$env$10407$14YGsk)))
          (if (g$interaction-env?$7469$14YGsk g$env$10407$14YGsk)
            ((case-lambda
               ((g$rib$10430$14YGsk g$r$10431$14YGsk g$rtc$10432$14YGsk)
                ((case-lambda
                   ((g$x$10433$14YGsk)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10444$14YGsk
                               g$inv-collector$10445$14YGsk
                               g$vis-collector$10446$14YGsk
                               g$imp-collector$10447$14YGsk
                               g$top-level-context$10448$14YGsk
                               g$inv-collector$10449$14YGsk
                               g$vis-collector$10450$14YGsk
                               g$imp-collector$10451$14YGsk)
                             ((case-lambda
                                ((g$swap$10452$14YGsk)
                                 (dynamic-wind
                                   g$swap$10452$14YGsk
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7449$14YGsk
                                        g$x$10433$14YGsk
                                        g$rib$10430$14YGsk
                                        g$r$10431$14YGsk)))
                                   g$swap$10452$14YGsk)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10453$14YGsk)
                                       (begin
                                         (g$top-level-context$10444$14YGsk
                                           g$top-level-context$10448$14YGsk)
                                         (set! g$top-level-context$10448$14YGsk
                                           g$t$10453$14YGsk))))
                                    (g$top-level-context$10444$14YGsk))
                                   ((case-lambda
                                      ((g$t$10454$14YGsk)
                                       (begin
                                         (g$inv-collector$10445$14YGsk
                                           g$inv-collector$10449$14YGsk)
                                         (set! g$inv-collector$10449$14YGsk
                                           g$t$10454$14YGsk))))
                                    (g$inv-collector$10445$14YGsk))
                                   ((case-lambda
                                      ((g$t$10455$14YGsk)
                                       (begin
                                         (g$vis-collector$10446$14YGsk
                                           g$vis-collector$10450$14YGsk)
                                         (set! g$vis-collector$10450$14YGsk
                                           g$t$10455$14YGsk))))
                                    (g$vis-collector$10446$14YGsk))
                                   ((case-lambda
                                      ((g$t$10456$14YGsk)
                                       (begin
                                         (g$imp-collector$10447$14YGsk
                                           g$imp-collector$10451$14YGsk)
                                         (set! g$imp-collector$10451$14YGsk
                                           g$t$10456$14YGsk))))
                                    (g$imp-collector$10447$14YGsk))))))))
                          g$top-level-context$7509$14YGsk
                          g$inv-collector$7445$14YGsk
                          g$vis-collector$7446$14YGsk
                          g$imp-collector$7447$14YGsk
                          g$env$10407$14YGsk
                          g$rtc$10432$14YGsk
                          (g$make-collector$7444$14YGsk)
                          (g$make-collector$7444$14YGsk))))
                      (case-lambda
                        ((g$e$10457$14YGsk g$r^$10458$14YGsk)
                         ((case-lambda
                            ((g$r^$10459$14YGsk g$e$10460$14YGsk)
                             (begin
                               (g$set-interaction-env-r!$7475$14YGsk
                                 g$env$10407$14YGsk
                                 g$r^$10459$14YGsk)
                               (values g$e$10460$14YGsk (g$rtc$10432$14YGsk)))))
                          g$r^$10458$14YGsk
                          g$e$10457$14YGsk))))))
                 (g$make-stx$7088$14YGsk
                   g$x$10406$14YGsk
                   g$top-mark*$7057$14YGsk
                   (list g$rib$10430$14YGsk)
                   '()))))
             (g$interaction-env-rib$7471$14YGsk g$env$10407$14YGsk)
             (g$interaction-env-r$7472$14YGsk g$env$10407$14YGsk)
             (g$make-collector$7444$14YGsk))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10407$14YGsk))))))
   (g$eval$7485$14YGsk
     g$eval$10921$14YGsk
     (case-lambda
       ((g$x$10461$14YGsk g$env$10462$14YGsk)
        (begin
          (if (not (g$environment?$7480$14YGsk g$env$10462$14YGsk))
            (error 'eval '"not an environment" g$env$10462$14YGsk)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7484$14YGsk g$x$10461$14YGsk g$env$10462$14YGsk)))
            (case-lambda
              ((g$x$10465$14YGsk g$invoke-req*$10466$14YGsk)
               ((case-lambda
                  ((g$invoke-req*$10467$14YGsk g$x$10468$14YGsk)
                   (begin
                     (for-each
                       g$invoke-library$6930$14YGsk
                       g$invoke-req*$10467$14YGsk)
                     (eval-core
                       (g$expanded->core$6629$14YGsk g$x$10468$14YGsk)))))
                g$invoke-req*$10466$14YGsk
                g$x$10465$14YGsk))))))))
   (g$library-expander$7486$14YGsk
     g$library-expander$10922$14YGsk
     (case-lambda
       ((g$x$10469$14YGsk g$filename$10470$14YGsk g$verify-name$10471$14YGsk)
        (letrec* ((g$build-visit-code$10472$14YGsk
                    (case-lambda
                      ((g$macro*$10515$14YGsk)
                       (if (null? g$macro*$10515$14YGsk)
                         (g$build-void$7050$14YGsk)
                         (g$build-sequence$7049$14YGsk
                           '#f
                           (map (case-lambda
                                  ((g$x$10516$14YGsk)
                                   ((case-lambda
                                      ((g$loc$10517$14YGsk g$src$10518$14YGsk)
                                       (list
                                         'set!
                                         g$loc$10517$14YGsk
                                         g$src$10518$14YGsk)))
                                    (car g$x$10516$14YGsk)
                                    (g$cddr$4889$14YGsk g$x$10516$14YGsk))))
                                g$macro*$10515$14YGsk))))))
                  (g$visit!$10473$14YGsk
                    (case-lambda
                      ((g$macro*$10511$14YGsk)
                       (for-each
                         (case-lambda
                           ((g$x$10512$14YGsk)
                            ((case-lambda
                               ((g$loc$10513$14YGsk g$proc$10514$14YGsk)
                                (set-symbol-value!
                                  g$loc$10513$14YGsk
                                  g$proc$10514$14YGsk)))
                             (car g$x$10512$14YGsk)
                             (g$cadr$4887$14YGsk g$x$10512$14YGsk))))
                         g$macro*$10511$14YGsk)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7451$14YGsk
                 g$x$10469$14YGsk
                 g$verify-name$10471$14YGsk)))
            (case-lambda
              ((g$name$10483$14YGsk
                 g$ver$10484$14YGsk
                 g$imp*$10485$14YGsk
                 g$inv*$10486$14YGsk
                 g$vis*$10487$14YGsk
                 g$invoke-code$10488$14YGsk
                 g$macro*$10489$14YGsk
                 g$export-subst$10490$14YGsk
                 g$export-env$10491$14YGsk)
               ((case-lambda
                  ((g$export-env$10492$14YGsk
                     g$export-subst$10493$14YGsk
                     g$macro*$10494$14YGsk
                     g$invoke-code$10495$14YGsk
                     g$vis*$10496$14YGsk
                     g$inv*$10497$14YGsk
                     g$imp*$10498$14YGsk
                     g$ver$10499$14YGsk
                     g$name$10500$14YGsk)
                   ((case-lambda
                      ((g$id$10501$14YGsk
                         g$name$10502$14YGsk
                         g$ver$10503$14YGsk
                         g$imp*$10504$14YGsk
                         g$vis*$10505$14YGsk
                         g$inv*$10506$14YGsk
                         g$visit-proc$10507$14YGsk
                         g$invoke-proc$10508$14YGsk
                         g$visit-code$10509$14YGsk
                         g$invoke-code$10510$14YGsk)
                       (begin
                         (g$install-library$6928$14YGsk
                           g$id$10501$14YGsk
                           g$name$10502$14YGsk
                           g$ver$10503$14YGsk
                           g$imp*$10504$14YGsk
                           g$vis*$10505$14YGsk
                           g$inv*$10506$14YGsk
                           g$export-subst$10493$14YGsk
                           g$export-env$10492$14YGsk
                           g$visit-proc$10507$14YGsk
                           g$invoke-proc$10508$14YGsk
                           g$visit-code$10509$14YGsk
                           g$invoke-code$10510$14YGsk
                           '#t
                           g$filename$10470$14YGsk)
                         (values
                           g$id$10501$14YGsk
                           g$name$10502$14YGsk
                           g$ver$10503$14YGsk
                           g$imp*$10504$14YGsk
                           g$vis*$10505$14YGsk
                           g$inv*$10506$14YGsk
                           g$invoke-code$10510$14YGsk
                           g$visit-code$10509$14YGsk
                           g$export-subst$10493$14YGsk
                           g$export-env$10492$14YGsk))))
                    (gensym)
                    g$name$10500$14YGsk
                    g$ver$10499$14YGsk
                    (map g$library-spec$6934$14YGsk g$imp*$10498$14YGsk)
                    (map g$library-spec$6934$14YGsk g$vis*$10496$14YGsk)
                    (map g$library-spec$6934$14YGsk g$inv*$10497$14YGsk)
                    (case-lambda
                      (() (g$visit!$10473$14YGsk g$macro*$10494$14YGsk)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6629$14YGsk
                           g$invoke-code$10495$14YGsk))))
                    (g$build-visit-code$10472$14YGsk g$macro*$10494$14YGsk)
                    g$invoke-code$10495$14YGsk)))
                g$export-env$10491$14YGsk
                g$export-subst$10490$14YGsk
                g$macro*$10489$14YGsk
                g$invoke-code$10488$14YGsk
                g$vis*$10487$14YGsk
                g$inv*$10486$14YGsk
                g$imp*$10485$14YGsk
                g$ver$10484$14YGsk
                g$name$10483$14YGsk))))))
       ((g$x$10519$14YGsk g$filename$10520$14YGsk)
        (g$library-expander$7486$14YGsk
          g$x$10519$14YGsk
          g$filename$10520$14YGsk
          (case-lambda ((g$x$10521$14YGsk) (values)))))
       ((g$x$10522$14YGsk)
        (g$library-expander$7486$14YGsk
          g$x$10522$14YGsk
          '#f
          (case-lambda ((g$x$10523$14YGsk) (values)))))))
   (g$boot-library-expand$7487$14YGsk
     g$boot-library-expand$10923$14YGsk
     (case-lambda
       ((g$x$10524$14YGsk)
        (call-with-values
          (case-lambda (() (g$library-expander$7486$14YGsk g$x$10524$14YGsk)))
          (case-lambda
            ((g$id$10535$14YGsk
               g$name$10536$14YGsk
               g$ver$10537$14YGsk
               g$imp*$10538$14YGsk
               g$vis*$10539$14YGsk
               g$inv*$10540$14YGsk
               g$invoke-code$10541$14YGsk
               g$visit-code$10542$14YGsk
               g$export-subst$10543$14YGsk
               g$export-env$10544$14YGsk)
             ((case-lambda
                ((g$export-env$10545$14YGsk
                   g$export-subst$10546$14YGsk
                   g$visit-code$10547$14YGsk
                   g$invoke-code$10548$14YGsk
                   g$inv*$10549$14YGsk
                   g$vis*$10550$14YGsk
                   g$imp*$10551$14YGsk
                   g$ver$10552$14YGsk
                   g$name$10553$14YGsk
                   g$id$10554$14YGsk)
                 (values
                   g$name$10553$14YGsk
                   g$invoke-code$10548$14YGsk
                   g$export-subst$10546$14YGsk
                   g$export-env$10545$14YGsk)))
              g$export-env$10544$14YGsk
              g$export-subst$10543$14YGsk
              g$visit-code$10542$14YGsk
              g$invoke-code$10541$14YGsk
              g$inv*$10540$14YGsk
              g$vis*$10539$14YGsk
              g$imp*$10538$14YGsk
              g$ver$10537$14YGsk
              g$name$10536$14YGsk
              g$id$10535$14YGsk)))))))
   (g$rev-map-append$7488$14YGsk
     g$rev-map-append$10924$14YGsk
     (case-lambda
       ((g$f$10555$14YGsk g$ls$10556$14YGsk g$ac$10557$14YGsk)
        (if (null? g$ls$10556$14YGsk)
          g$ac$10557$14YGsk
          (g$rev-map-append$7488$14YGsk
            g$f$10555$14YGsk
            (cdr g$ls$10556$14YGsk)
            (cons
              (g$f$10555$14YGsk (car g$ls$10556$14YGsk))
              g$ac$10557$14YGsk))))))
   (g$build-exports$7489$14YGsk
     g$build-exports$10925$14YGsk
     (case-lambda
       ((g$lex*+loc*$10558$14YGsk g$init*$10559$14YGsk)
        (g$build-sequence$7049$14YGsk
          '#f
          (cons
            (g$build-void$7050$14YGsk)
            (g$rev-map-append$7488$14YGsk
              (case-lambda
                ((g$x$10560$14YGsk)
                 (list 'set! (cdr g$x$10560$14YGsk) (car g$x$10560$14YGsk))))
              g$lex*+loc*$10558$14YGsk
              g$init*$10559$14YGsk))))))
   (g$make-export-subst$7490$14YGsk
     g$make-export-subst$10926$14YGsk
     (case-lambda
       ((g$int*$10561$14YGsk g$ext*$10562$14YGsk g$rib$10563$14YGsk)
        (map (case-lambda
               ((g$int$10564$14YGsk g$ext$10565$14YGsk)
                ((case-lambda
                   ((g$id$10566$14YGsk)
                    ((case-lambda
                       ((g$label$10567$14YGsk)
                        ((case-lambda
                           (()
                            (begin
                              (if (not g$label$10567$14YGsk)
                                (g$syntax-violation$7502$14YGsk
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10566$14YGsk)
                                (void))
                              (cons
                                g$ext$10565$14YGsk
                                g$label$10567$14YGsk)))))))
                     (g$id->label$7128$14YGsk g$id$10566$14YGsk))))
                 (g$make-stx$7088$14YGsk
                   g$int$10564$14YGsk
                   g$top-mark*$7057$14YGsk
                   (list g$rib$10563$14YGsk)
                   '()))))
             g$int*$10561$14YGsk
             g$ext*$10562$14YGsk))))
   (g$make-export-env/macros$7491$14YGsk
     g$make-export-env/macros$10927$14YGsk
     (case-lambda
       ((g$lex*$10568$14YGsk g$loc*$10569$14YGsk g$r$10570$14YGsk)
        (letrec* ((g$lookup$10571$14YGsk
                    (case-lambda
                      ((g$x$10586$14YGsk)
                       ((letrec ((g$f$10587$14YGsk
                                   (case-lambda
                                     ((g$x$10588$14YGsk
                                        g$lex*$10589$14YGsk
                                        g$loc*$10590$14YGsk)
                                      (if (pair? g$lex*$10589$14YGsk)
                                        (if (eq? g$x$10588$14YGsk
                                                 (car g$lex*$10589$14YGsk))
                                          (car g$loc*$10590$14YGsk)
                                          (g$f$10587$14YGsk
                                            g$x$10588$14YGsk
                                            (cdr g$lex*$10589$14YGsk)
                                            (cdr g$loc*$10590$14YGsk)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10587$14YGsk)
                        g$x$10586$14YGsk
                        g$lex*$10568$14YGsk
                        g$loc*$10569$14YGsk)))))
          ((letrec ((g$f$10572$14YGsk
                      (case-lambda
                        ((g$r$10573$14YGsk
                           g$env$10574$14YGsk
                           g$global*$10575$14YGsk
                           g$macro*$10576$14YGsk)
                         (if (null? g$r$10573$14YGsk)
                           (values
                             g$env$10574$14YGsk
                             g$global*$10575$14YGsk
                             g$macro*$10576$14YGsk)
                           ((case-lambda
                              ((g$x$10577$14YGsk)
                               ((case-lambda
                                  ((g$label$10578$14YGsk g$b$10579$14YGsk)
                                   ((case-lambda
                                      ((g$t$10580$14YGsk)
                                       (if (memv g$t$10580$14YGsk '(lexical))
                                         ((case-lambda
                                            ((g$v$10581$14YGsk)
                                             ((case-lambda
                                                ((g$loc$10582$14YGsk
                                                   g$type$10583$14YGsk)
                                                 (g$f$10572$14YGsk
                                                   (cdr g$r$10573$14YGsk)
                                                   (cons
                                                     (g$cons*$5358$14YGsk
                                                       g$label$10578$14YGsk
                                                       g$type$10583$14YGsk
                                                       g$loc$10582$14YGsk)
                                                     g$env$10574$14YGsk)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7337$14YGsk
                                                         g$v$10581$14YGsk)
                                                       g$loc$10582$14YGsk)
                                                     g$global*$10575$14YGsk)
                                                   g$macro*$10576$14YGsk)))
                                              (g$lookup$10571$14YGsk
                                                (g$lexical-var$7337$14YGsk
                                                  g$v$10581$14YGsk))
                                              (if (g$lexical-mutable?$7338$14YGsk
                                                    g$v$10581$14YGsk)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7133$14YGsk
                                            g$b$10579$14YGsk))
                                         (if (memv
                                               g$t$10580$14YGsk
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10584$14YGsk)
                                               (g$f$10572$14YGsk
                                                 (cdr g$r$10573$14YGsk)
                                                 (cons
                                                   (g$cons*$5358$14YGsk
                                                     g$label$10578$14YGsk
                                                     'global-macro
                                                     g$loc$10584$14YGsk)
                                                   g$env$10574$14YGsk)
                                                 g$global*$10575$14YGsk
                                                 (cons
                                                   (cons
                                                     g$loc$10584$14YGsk
                                                     (g$binding-value$7133$14YGsk
                                                       g$b$10579$14YGsk))
                                                   g$macro*$10576$14YGsk))))
                                            (gensym))
                                           (if (memv
                                                 g$t$10580$14YGsk
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10585$14YGsk)
                                                 (g$f$10572$14YGsk
                                                   (cdr g$r$10573$14YGsk)
                                                   (cons
                                                     (g$cons*$5358$14YGsk
                                                       g$label$10578$14YGsk
                                                       'global-macro!
                                                       g$loc$10585$14YGsk)
                                                     g$env$10574$14YGsk)
                                                   g$global*$10575$14YGsk
                                                   (cons
                                                     (cons
                                                       g$loc$10585$14YGsk
                                                       (g$binding-value$7133$14YGsk
                                                         g$b$10579$14YGsk))
                                                     g$macro*$10576$14YGsk))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10580$14YGsk
                                                   '($rtd $module))
                                               (g$f$10572$14YGsk
                                                 (cdr g$r$10573$14YGsk)
                                                 (cons
                                                   g$x$10577$14YGsk
                                                   g$env$10574$14YGsk)
                                                 g$global*$10575$14YGsk
                                                 g$macro*$10576$14YGsk)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7132$14YGsk
                                                   g$b$10579$14YGsk)
                                                 (g$binding-value$7133$14YGsk
                                                   g$b$10579$14YGsk))))))))
                                    (g$binding-type$7132$14YGsk
                                      g$b$10579$14YGsk))))
                                (car g$x$10577$14YGsk)
                                (cdr g$x$10577$14YGsk))))
                            (car g$r$10573$14YGsk)))))))
             g$f$10572$14YGsk)
           g$r$10570$14YGsk
           '()
           '()
           '())))))
   (g$generate-temporaries$7492$14YGsk
     g$generate-temporaries$10928$14YGsk
     (case-lambda
       ((g$ls$10591$14YGsk)
        ((case-lambda
           ((g$t$10592$14YGsk)
            ((case-lambda
               ((g$ls/false$10593$14YGsk)
                (if g$ls/false$10593$14YGsk
                  (apply
                    (case-lambda
                      ((g$ls$10594$14YGsk)
                       (map (case-lambda
                              ((g$x$10595$14YGsk)
                               (g$make-stx$7088$14YGsk
                                 ((case-lambda
                                    ((g$x$10596$14YGsk)
                                     (if ((case-lambda
                                            ((g$t$10597$14YGsk)
                                             (if g$t$10597$14YGsk
                                               g$t$10597$14YGsk
                                               (begin
                                                 '#f
                                                 (string? g$x$10596$14YGsk)))))
                                          (symbol? g$x$10596$14YGsk))
                                       (gensym g$x$10596$14YGsk)
                                       (gensym 't))))
                                  (g$syntax->datum$7505$14YGsk
                                    g$x$10595$14YGsk))
                                 g$top-mark*$7057$14YGsk
                                 '()
                                 '())))
                            g$ls$10594$14YGsk)))
                    g$ls/false$10593$14YGsk)
                  ((case-lambda
                     ((g$t$10598$14YGsk)
                      ((case-lambda
                         ((g$ls/false$10599$14YGsk)
                          (if g$ls/false$10599$14YGsk
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10599$14YGsk)
                            (g$syntax-violation$7502$14YGsk
                              '#f
                              '"invalid syntax"
                              g$t$10598$14YGsk))))
                       (g$syntax-dispatch$7393$14YGsk g$t$10598$14YGsk '_))))
                   g$t$10592$14YGsk))))
             (g$syntax-dispatch$7393$14YGsk g$t$10592$14YGsk 'each-any))))
         g$ls$10591$14YGsk))))
   (g$free-identifier=?$7493$14YGsk
     g$free-identifier=?$10929$14YGsk
     (case-lambda
       ((g$x$10600$14YGsk g$y$10601$14YGsk)
        (if (g$id?$7115$14YGsk g$x$10600$14YGsk)
          (if (g$id?$7115$14YGsk g$y$10601$14YGsk)
            (g$free-id=?$7119$14YGsk g$x$10600$14YGsk g$y$10601$14YGsk)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10601$14YGsk))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10600$14YGsk)))))
   (g$bound-identifier=?$7494$14YGsk
     g$bound-identifier=?$10930$14YGsk
     (case-lambda
       ((g$x$10602$14YGsk g$y$10603$14YGsk)
        (if (g$id?$7115$14YGsk g$x$10602$14YGsk)
          (if (g$id?$7115$14YGsk g$y$10603$14YGsk)
            (g$bound-id=?$7118$14YGsk g$x$10602$14YGsk g$y$10603$14YGsk)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10603$14YGsk))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10602$14YGsk)))))
   (g$make-source-condition$7495$14YGsk
     g$make-source-condition$10931$14YGsk
     (case-lambda
       ((g$x$10604$14YGsk)
        (letrec* ((g$11389$10605$14YGsk
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11392$14YGsk
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11391$10606$14YGsk '#f)
                  (g$11390$10607$14YGsk
                    (make-record-constructor-descriptor
                      g$11389$10605$14YGsk
                      &condition-rcd
                      g$11391$10606$14YGsk))
                  (g$11388$10608$14YGsk (record-predicate g$11389$10605$14YGsk))
                  (g$make-source-condition$10609$14YGsk
                    (record-constructor g$11390$10607$14YGsk))
                  (g$11386$10610$14YGsk
                    (record-accessor g$11389$10605$14YGsk '0))
                  (g$11387$10611$14YGsk
                    (record-accessor g$11389$10605$14YGsk '1))
                  (g$source-condition?$10612$14YGsk
                    (condition-predicate g$11389$10605$14YGsk))
                  (g$source-filename$10613$14YGsk
                    (condition-accessor
                      g$11389$10605$14YGsk
                      g$11386$10610$14YGsk))
                  (g$source-character$10614$14YGsk
                    (condition-accessor
                      g$11389$10605$14YGsk
                      g$11387$10611$14YGsk)))
          (if (pair? g$x$10604$14YGsk)
            (g$make-source-condition$10609$14YGsk
              (car g$x$10604$14YGsk)
              (cdr g$x$10604$14YGsk))
            (condition))))))
   (g$extract-position-condition$7496$14YGsk
     g$extract-position-condition$10932$14YGsk
     (case-lambda
       ((g$x$10615$14YGsk)
        (g$make-source-condition$7495$14YGsk
          (g$expression-position$7497$14YGsk g$x$10615$14YGsk)))))
   (g$expression-position$7497$14YGsk
     g$expression-position$10933$14YGsk
     (case-lambda
       ((g$x$10616$14YGsk)
        (if (g$stx?$7087$14YGsk g$x$10616$14YGsk)
          (begin
            '#f
            ((case-lambda
               ((g$x$10617$14YGsk)
                (if (annotation? g$x$10617$14YGsk)
                  (begin '#f (annotation-source g$x$10617$14YGsk))
                  '#f)))
             (g$stx-expr$7089$14YGsk g$x$10616$14YGsk)))
          '#f))))
   (g$assertion-error$7498$14YGsk
     g$assertion-error$10934$14YGsk
     (case-lambda
       ((g$expr$10618$14YGsk g$pos$10619$14YGsk)
        (raise
          (condition
            (g$make-assertion-violation$5642$14YGsk)
            (g$make-who-condition$5656$14YGsk 'assert)
            (g$make-message-condition$5610$14YGsk '"assertion failed")
            (g$make-irritants-condition$5648$14YGsk (list g$expr$10618$14YGsk))
            (g$make-source-condition$7495$14YGsk g$pos$10619$14YGsk))))))
   (g$syntax-error$7499$14YGsk
     g$syntax-error$10935$14YGsk
     (case-lambda
       ((g$x$10620$14YGsk . g$args$10621$14YGsk)
        (begin
          (if (not (g$for-all$5356$14YGsk string? g$args$10621$14YGsk))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10621$14YGsk)
            (void))
          (raise
            (condition
              (g$make-message-condition$5610$14YGsk
                (if (null? g$args$10621$14YGsk)
                  '"invalid syntax"
                  (apply string-append g$args$10621$14YGsk)))
              (g$make-syntax-violation$5682$14YGsk
                (g$syntax->datum$7505$14YGsk g$x$10620$14YGsk)
                '#f)
              (g$extract-position-condition$7496$14YGsk g$x$10620$14YGsk)
              (g$extract-trace$7500$14YGsk g$x$10620$14YGsk)))))))
   (g$extract-trace$7500$14YGsk
     g$extract-trace$10936$14YGsk
     (case-lambda
       ((g$x$10622$14YGsk)
        (letrec* ((g$11416$10623$14YGsk
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11419$14YGsk
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11418$10624$14YGsk '#f)
                  (g$11417$10625$14YGsk
                    (make-record-constructor-descriptor
                      g$11416$10623$14YGsk
                      &condition-rcd
                      g$11418$10624$14YGsk))
                  (g$11415$10626$14YGsk (record-predicate g$11416$10623$14YGsk))
                  (g$make-trace$10627$14YGsk
                    (record-constructor g$11417$10625$14YGsk))
                  (g$11414$10628$14YGsk
                    (record-accessor g$11416$10623$14YGsk '0))
                  (g$trace?$10629$14YGsk
                    (condition-predicate g$11416$10623$14YGsk))
                  (g$trace-form$10630$14YGsk
                    (condition-accessor
                      g$11416$10623$14YGsk
                      g$11414$10628$14YGsk)))
          ((letrec ((g$f$10631$14YGsk
                      (case-lambda
                        ((g$x$10632$14YGsk)
                         (if (g$stx?$7087$14YGsk g$x$10632$14YGsk)
                           (apply
                             condition
                             (g$make-trace$10627$14YGsk g$x$10632$14YGsk)
                             (map g$f$10631$14YGsk
                                  (g$stx-ae*$7092$14YGsk g$x$10632$14YGsk)))
                           (if (annotation? g$x$10632$14YGsk)
                             (g$make-trace$10627$14YGsk
                               (g$make-stx$7088$14YGsk
                                 g$x$10632$14YGsk
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10631$14YGsk)
           g$x$10622$14YGsk)))))
   (g$syntax-violation*$7501$14YGsk
     g$syntax-violation*$10937$14YGsk
     (case-lambda
       ((g$who$10633$14YGsk
          g$msg$10634$14YGsk
          g$form$10635$14YGsk
          g$condition-object$10636$14YGsk)
        (begin
          (if (not (string? g$msg$10634$14YGsk))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10634$14YGsk)
            (void))
          ((case-lambda
             ((g$who$10637$14YGsk)
              (raise
                (condition
                  (if g$who$10637$14YGsk
                    (g$make-who-condition$5656$14YGsk g$who$10637$14YGsk)
                    (condition))
                  (g$make-message-condition$5610$14YGsk g$msg$10634$14YGsk)
                  g$condition-object$10636$14YGsk
                  (g$extract-position-condition$7496$14YGsk g$form$10635$14YGsk)
                  (g$extract-trace$7500$14YGsk g$form$10635$14YGsk)))))
           (if ((case-lambda
                  ((g$t$10638$14YGsk)
                   (if g$t$10638$14YGsk
                     g$t$10638$14YGsk
                     (begin '#f (symbol? g$who$10633$14YGsk)))))
                (string? g$who$10633$14YGsk))
             g$who$10633$14YGsk
             (if (not g$who$10633$14YGsk)
               ((case-lambda
                  ((g$t$10639$14YGsk)
                   ((case-lambda
                      ((g$ls/false$10640$14YGsk)
                       (if (if g$ls/false$10640$14YGsk
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10641$14YGsk)
                                    (g$id?$7115$14YGsk g$id$10641$14YGsk)))
                                 g$ls/false$10640$14YGsk))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10642$14YGsk)
                              (g$syntax->datum$7505$14YGsk g$id$10642$14YGsk)))
                           g$ls/false$10640$14YGsk)
                         ((case-lambda
                            ((g$t$10643$14YGsk)
                             ((case-lambda
                                ((g$ls/false$10644$14YGsk)
                                 (if (if g$ls/false$10644$14YGsk
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10645$14YGsk
                                                g$rest$10646$14YGsk)
                                              (g$id?$7115$14YGsk
                                                g$id$10645$14YGsk)))
                                           g$ls/false$10644$14YGsk))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10647$14YGsk g$rest$10648$14YGsk)
                                        (g$syntax->datum$7505$14YGsk
                                          g$id$10647$14YGsk)))
                                     g$ls/false$10644$14YGsk)
                                   ((case-lambda
                                      ((g$t$10649$14YGsk)
                                       ((case-lambda
                                          ((g$ls/false$10650$14YGsk)
                                           (if g$ls/false$10650$14YGsk
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10650$14YGsk)
                                             (g$syntax-violation$7502$14YGsk
                                               '#f
                                               '"invalid syntax"
                                               g$t$10649$14YGsk))))
                                        (g$syntax-dispatch$7393$14YGsk
                                          g$t$10649$14YGsk
                                          '_))))
                                    g$t$10643$14YGsk))))
                              (g$syntax-dispatch$7393$14YGsk
                                g$t$10643$14YGsk
                                '(any . any)))))
                          g$t$10639$14YGsk))))
                    (g$syntax-dispatch$7393$14YGsk g$t$10639$14YGsk 'any))))
                g$form$10635$14YGsk)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10633$14YGsk))))))))
   (g$syntax-violation$7502$14YGsk
     g$syntax-violation$10938$14YGsk
     (case-lambda
       ((g$who$10651$14YGsk g$msg$10652$14YGsk g$form$10653$14YGsk)
        (g$syntax-violation$7502$14YGsk
          g$who$10651$14YGsk
          g$msg$10652$14YGsk
          g$form$10653$14YGsk
          '#f))
       ((g$who$10654$14YGsk
          g$msg$10655$14YGsk
          g$form$10656$14YGsk
          g$subform$10657$14YGsk)
        (g$syntax-violation*$7501$14YGsk
          g$who$10654$14YGsk
          g$msg$10655$14YGsk
          g$form$10656$14YGsk
          (g$make-syntax-violation$5682$14YGsk
            (g$syntax->datum$7505$14YGsk g$form$10656$14YGsk)
            (g$syntax->datum$7505$14YGsk g$subform$10657$14YGsk))))))
   (g$identifier?$7503$14YGsk
     g$identifier?$10939$14YGsk
     (case-lambda ((g$x$10658$14YGsk) (g$id?$7115$14YGsk g$x$10658$14YGsk))))
   (g$datum->syntax$7504$14YGsk
     g$datum->syntax$10940$14YGsk
     (case-lambda
       ((g$id$10659$14YGsk g$datum$10660$14YGsk)
        (if (g$id?$7115$14YGsk g$id$10659$14YGsk)
          (g$datum->stx$7098$14YGsk g$id$10659$14YGsk g$datum$10660$14YGsk)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10659$14YGsk)))))
   (g$syntax->datum$7505$14YGsk
     g$syntax->datum$10941$14YGsk
     (case-lambda
       ((g$x$10661$14YGsk) (g$stx->datum$7126$14YGsk g$x$10661$14YGsk))))
   (g$compile-r6rs-top-level$7506$14YGsk
     g$compile-r6rs-top-level$10942$14YGsk
     (case-lambda
       ((g$x*$10662$14YGsk)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7453$14YGsk g$x*$10662$14YGsk)))
          (case-lambda
            ((g$lib*$10665$14YGsk g$invoke-code$10666$14YGsk)
             ((case-lambda
                ((g$invoke-code$10667$14YGsk g$lib*$10668$14YGsk)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$6930$14YGsk
                        g$lib*$10668$14YGsk)
                      (eval-core
                        (g$expanded->core$6629$14YGsk
                          g$invoke-code$10667$14YGsk)))))))
              g$invoke-code$10666$14YGsk
              g$lib*$10665$14YGsk)))))))
   (g$pre-compile-r6rs-top-level$7507$14YGsk
     g$pre-compile-r6rs-top-level$10943$14YGsk
     (case-lambda
       ((g$x*$10669$14YGsk)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7453$14YGsk g$x*$10669$14YGsk)))
          (case-lambda
            ((g$lib*$10672$14YGsk g$invoke-code$10673$14YGsk)
             ((case-lambda
                ((g$invoke-code$10674$14YGsk g$lib*$10675$14YGsk)
                 (begin
                   (for-each g$invoke-library$6930$14YGsk g$lib*$10675$14YGsk)
                   (compile-core
                     (g$expanded->core$6629$14YGsk
                       g$invoke-code$10674$14YGsk)))))
              g$invoke-code$10673$14YGsk
              g$lib*$10672$14YGsk)))))))
   (g$interaction-environment$7508$14YGsk
     g$interaction-environment$10944$14YGsk
     ((case-lambda
        ((g$the-env$10676$14YGsk)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10677$14YGsk)
                (if g$t$10677$14YGsk
                  g$t$10677$14YGsk
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10678$14YGsk g$rib$10679$14YGsk)
                        (begin
                          ((case-lambda
                             ((g$subst$10680$14YGsk)
                              (begin
                                (g$set-rib-sym*!$7074$14YGsk
                                  g$rib$10679$14YGsk
                                  (map car g$subst$10680$14YGsk))
                                (g$set-rib-mark**!$7075$14YGsk
                                  g$rib$10679$14YGsk
                                  (map (case-lambda
                                         ((g$x$10681$14YGsk)
                                          g$top-mark*$7057$14YGsk))
                                       g$subst$10680$14YGsk))
                                (g$set-rib-label*!$7076$14YGsk
                                  g$rib$10679$14YGsk
                                  (map cdr g$subst$10680$14YGsk)))))
                           (g$library-subst$6887$14YGsk g$lib$10678$14YGsk))
                          ((case-lambda
                             ((g$env$10682$14YGsk)
                              (begin
                                (set! g$the-env$10676$14YGsk g$env$10682$14YGsk)
                                g$env$10682$14YGsk)))
                           (g$make-interaction-env$7470$14YGsk
                             g$rib$10679$14YGsk
                             '()
                             '())))))
                     (g$find-library-by-name$6923$14YGsk '(ironscheme))
                     (g$make-empty-rib$7078$14YGsk))))))
             g$the-env$10676$14YGsk)))))
      '#f))
   (g$top-level-context$7509$14YGsk
     g$top-level-context$10945$14YGsk
     (g$make-parameter$6382$14YGsk '#f)))
  (g$current-library-expander$6920$14YGsk g$library-expander$7486$14YGsk))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6626$14YGsk
      (case-lambda
        ((g$x$10998$14YGsk)
         ((case-lambda
            ((g$t$10999$14YGsk)
             (if g$t$10999$14YGsk (cdr g$t$10999$14YGsk) '#f)))
          (assq
            g$x$10998$14YGsk
            '((ellipsis-map . g$ellipsis-map$10834$14YGsk)
              (ironscheme-build . g$ironscheme-build$10991$14YGsk)
              (syntax-error . g$syntax-error$10935$14YGsk)
              (syntax-dispatch . g$syntax-dispatch$10829$14YGsk)
              (compile-system-libraries
                .
                g$compile-system-libraries$10993$14YGsk)
              (compile->closure . g$compile->closure$10995$14YGsk)
              (compile . g$compile$10994$14YGsk)
              (load . g$load$10990$14YGsk)
              (interaction-environment . g$interaction-environment$10944$14YGsk)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10767$14YGsk)
              (variable-transformer? . g$variable-transformer?$10766$14YGsk)
              (make-variable-transformer
                .
                g$make-variable-transformer$10765$14YGsk)
              (identifier? . g$identifier?$10939$14YGsk)
              (generate-temporaries . g$generate-temporaries$10928$14YGsk)
              (free-identifier=? . g$free-identifier=?$10929$14YGsk)
              (syntax->datum . g$syntax->datum$10941$14YGsk)
              (datum->syntax . g$datum->syntax$10940$14YGsk)
              (bound-identifier=? . g$bound-identifier=?$10930$14YGsk)
              (delete-file . g$delete-file$5228$14YGsk)
              (file-exists? . g$file-exists?$5227$14YGsk)
              (list-sort . g$list-sort$5753$14YGsk)
              (make-eqv-hashtable . g$make-eqv-hashtable$5150$14YGsk)
              (make-eq-hashtable . g$make-eq-hashtable$5149$14YGsk)
              (hashtable-update! . g$hashtable-update!$5156$14YGsk)
              (hashtable-size . g$hashtable-size$5151$14YGsk)
              (hashtable-set! . g$hashtable-set!$5153$14YGsk)
              (hashtable-ref . g$hashtable-ref$5152$14YGsk)
              (hashtable-delete! . g$hashtable-delete!$5154$14YGsk)
              (hashtable-contains? . g$hashtable-contains?$5155$14YGsk)
              (hashtable-clear! . g$hashtable-clear!$5157$14YGsk)
              (call-with-output-file . g$call-with-output-file$6131$14YGsk)
              (call-with-input-file . g$call-with-input-file$6130$14YGsk)
              (with-output-to-file . g$with-output-to-file$6129$14YGsk)
              (with-input-from-file . g$with-input-from-file$6128$14YGsk)
              (port? . g$port?$6095$14YGsk)
              (open-string-output-port . g$open-string-output-port$6094$14YGsk)
              (make-i/o-write-error . g$make-i/o-write-error$6019$14YGsk)
              (make-i/o-read-error . g$make-i/o-read-error$6013$14YGsk)
              (make-i/o-port-error . g$make-i/o-port-error$6065$14YGsk)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6025$14YGsk)
              (make-i/o-filename-error . g$make-i/o-filename-error$6033$14YGsk)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6041$14YGsk)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6047$14YGsk)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6059$14YGsk)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6053$14YGsk)
              (make-i/o-error . g$make-i/o-error$6007$14YGsk)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6079$14YGsk)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6073$14YGsk)
              (i/o-write-error? . g$i/o-write-error?$6020$14YGsk)
              (i/o-read-error? . g$i/o-read-error?$6014$14YGsk)
              (i/o-port-error? . g$i/o-port-error?$6067$14YGsk)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6027$14YGsk)
              (i/o-error-position . g$i/o-error-position$6028$14YGsk)
              (i/o-filename-error? . g$i/o-filename-error?$6035$14YGsk)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6042$14YGsk)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6048$14YGsk)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6060$14YGsk)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6054$14YGsk)
              (i/o-error? . g$i/o-error?$6008$14YGsk)
              (i/o-error-port . g$i/o-error-port$6068$14YGsk)
              (i/o-error-filename . g$i/o-error-filename$6036$14YGsk)
              (i/o-encoding-error? . g$i/o-encoding-error?$6081$14YGsk)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6082$14YGsk)
              (i/o-decoding-error? . g$i/o-decoding-error?$6074$14YGsk)
              (scheme-report-environment
                .
                g$scheme-report-environment$10919$14YGsk)
              (quotient . g$quotient$5720$14YGsk)
              (null-environment . g$null-environment$10918$14YGsk)
              (remainder . g$remainder$5721$14YGsk)
              (modulo . g$modulo$5722$14YGsk)
              (force . g$force$5724$14YGsk)
              (command-line . g$command-line$10987$14YGsk)
              (remove . g$remove$5361$14YGsk)
              (remv . g$remv$5362$14YGsk)
              (remp . g$remp$5347$14YGsk)
              (remq . g$remq$5363$14YGsk)
              (partition . g$partition$5346$14YGsk)
              (memp . g$memp$5353$14YGsk)
              (member . g$member$5352$14YGsk)
              (exists . g$exists$5357$14YGsk)
              (for-all . g$for-all$5356$14YGsk)
              (fold-right . g$fold-right$5360$14YGsk)
              (fold-left . g$fold-left$5359$14YGsk)
              (find . g$find$5345$14YGsk)
              (filter . g$filter$5348$14YGsk)
              (cons* . g$cons*$5358$14YGsk)
              (assv . g$assv$5349$14YGsk)
              (assp . g$assp$5351$14YGsk)
              (assoc . g$assoc$5350$14YGsk)
              (eval . g$eval$10921$14YGsk)
              (environment . g$environment$10917$14YGsk)
              (make-enumeration . g$make-enumeration$6259$14YGsk)
              (enum-set=? . g$enum-set=?$6266$14YGsk)
              (enum-set-universe . g$enum-set-universe$6260$14YGsk)
              (enum-set-union . g$enum-set-union$6267$14YGsk)
              (enum-set-subset? . g$enum-set-subset?$6265$14YGsk)
              (enum-set-projection . g$enum-set-projection$6271$14YGsk)
              (enum-set-member? . g$enum-set-member?$6264$14YGsk)
              (enum-set-intersection . g$enum-set-intersection$6268$14YGsk)
              (enum-set-indexer . g$enum-set-indexer$6261$14YGsk)
              (enum-set-difference . g$enum-set-difference$6269$14YGsk)
              (enum-set-constructor . g$enum-set-constructor$6262$14YGsk)
              (enum-set-complement . g$enum-set-complement$6270$14YGsk)
              (enum-set->list . g$enum-set->list$6263$14YGsk)
              (who-condition? . g$who-condition?$5658$14YGsk)
              (warning? . g$warning?$5619$14YGsk)
              (violation? . g$violation?$5637$14YGsk)
              (undefined-violation? . g$undefined-violation?$5693$14YGsk)
              (syntax-violation? . g$syntax-violation?$5685$14YGsk)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5687$14YGsk)
              (syntax-violation-form . g$syntax-violation-form$5686$14YGsk)
              (syntax-violation . g$syntax-violation$10938$14YGsk)
              (serious-condition? . g$serious-condition?$5625$14YGsk)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5665$14YGsk)
              (message-condition? . g$message-condition?$5612$14YGsk)
              (make-who-condition . g$make-who-condition$5656$14YGsk)
              (make-warning . g$make-warning$5618$14YGsk)
              (make-violation . g$make-violation$5636$14YGsk)
              (make-undefined-violation
                .
                g$make-undefined-violation$5692$14YGsk)
              (make-syntax-violation . g$make-syntax-violation$5682$14YGsk)
              (make-serious-condition . g$make-serious-condition$5624$14YGsk)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5664$14YGsk)
              (make-message-condition . g$make-message-condition$5610$14YGsk)
              (make-lexical-violation . g$make-lexical-violation$5676$14YGsk)
              (make-irritants-condition
                .
                g$make-irritants-condition$5648$14YGsk)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5670$14YGsk)
              (make-error . g$make-error$5630$14YGsk)
              (make-assertion-violation
                .
                g$make-assertion-violation$5642$14YGsk)
              (lexical-violation? . g$lexical-violation?$5677$14YGsk)
              (irritants-condition? . g$irritants-condition?$5650$14YGsk)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5671$14YGsk)
              (error? . g$error?$5631$14YGsk)
              (condition-who . g$condition-who$5659$14YGsk)
              (condition-message . g$condition-message$5613$14YGsk)
              (condition-irritants . g$condition-irritants$5651$14YGsk)
              (assertion-violation? . g$assertion-violation?$5643$14YGsk)
              (native-endianness . g$native-endianness$5475$14YGsk)
              (bytevector-u64-set! . g$bytevector-u64-set!$5496$14YGsk)
              (bytevector-u64-ref . g$bytevector-u64-ref$5492$14YGsk)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5498$14YGsk)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5494$14YGsk)
              (bytevector-u32-set! . g$bytevector-u32-set!$5488$14YGsk)
              (bytevector-u32-ref . g$bytevector-u32-ref$5484$14YGsk)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5490$14YGsk)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5486$14YGsk)
              (bytevector-u16-set! . g$bytevector-u16-set!$5480$14YGsk)
              (bytevector-u16-ref . g$bytevector-u16-ref$5476$14YGsk)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5482$14YGsk)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5478$14YGsk)
              (bytevector-s64-set! . g$bytevector-s64-set!$5497$14YGsk)
              (bytevector-s64-ref . g$bytevector-s64-ref$5493$14YGsk)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5499$14YGsk)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5495$14YGsk)
              (bytevector-s32-set! . g$bytevector-s32-set!$5489$14YGsk)
              (bytevector-s32-ref . g$bytevector-s32-ref$5485$14YGsk)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5491$14YGsk)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5487$14YGsk)
              (bytevector-s16-set! . g$bytevector-s16-set!$5481$14YGsk)
              (bytevector-s16-ref . g$bytevector-s16-ref$5477$14YGsk)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5483$14YGsk)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5479$14YGsk)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5502$14YGsk)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5500$14YGsk)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5503$14YGsk)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5501$14YGsk)
              (no-nans-violation? . g$no-nans-violation?$5922$14YGsk)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$5916$14YGsk)
              (make-no-nans-violation . g$make-no-nans-violation$5921$14YGsk)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$5915$14YGsk)
              (fxrotate-bit-field . g$fxrotate-bit-field$5898$14YGsk)
              (fxif . g$fxif$5892$14YGsk)
              (fxcopy-bit-field . g$fxcopy-bit-field$5895$14YGsk)
              (fxcopy-bit . g$fxcopy-bit$5893$14YGsk)
              (fxbit-field . g$fxbit-field$5894$14YGsk)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$5897$14YGsk)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$5896$14YGsk)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$5844$14YGsk)
              (bitwise-if . g$bitwise-if$5838$14YGsk)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$5841$14YGsk)
              (bitwise-copy-bit . g$bitwise-copy-bit$5839$14YGsk)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$5843$14YGsk)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$5842$14YGsk)
              (rationalize . g$rationalize$4914$14YGsk)
              (cddddr . g$cddddr$4913$14YGsk)
              (cdddar . g$cdddar$4912$14YGsk)
              (cddadr . g$cddadr$4911$14YGsk)
              (cddaar . g$cddaar$4910$14YGsk)
              (cdaddr . g$cdaddr$4909$14YGsk)
              (cdadar . g$cdadar$4908$14YGsk)
              (cdaadr . g$cdaadr$4907$14YGsk)
              (cdaaar . g$cdaaar$4906$14YGsk)
              (cadddr . g$cadddr$4905$14YGsk)
              (caddar . g$caddar$4904$14YGsk)
              (cadadr . g$cadadr$4903$14YGsk)
              (cadaar . g$cadaar$4902$14YGsk)
              (caaddr . g$caaddr$4901$14YGsk)
              (caadar . g$caadar$4900$14YGsk)
              (caaadr . g$caaadr$4899$14YGsk)
              (caaaar . g$caaaar$4898$14YGsk)
              (cdddr . g$cdddr$4897$14YGsk)
              (cddar . g$cddar$4896$14YGsk)
              (cdadr . g$cdadr$4895$14YGsk)
              (cdaar . g$cdaar$4894$14YGsk)
              (caddr . g$caddr$4893$14YGsk)
              (cadar . g$cadar$4892$14YGsk)
              (caadr . g$caadr$4891$14YGsk)
              (caaar . g$caaar$4890$14YGsk)
              (cddr . g$cddr$4889$14YGsk)
              (cdar . g$cdar$4888$14YGsk)
              (cadr . g$cadr$4887$14YGsk)
              (caar . g$caar$4886$14YGsk)
              (make-promise . g$make-promise$5723$14YGsk)
              (load/args . g$load/args$10989$14YGsk)
              (printf . g$printf$6295$14YGsk)
              (fprintf . g$fprintf$6296$14YGsk)
              (format . g$format$6297$14YGsk)
              (trace-printer . g$trace-printer$10986$14YGsk)
              (make-traced-macro . g$make-traced-macro$6301$14YGsk)
              (assertion-error . g$assertion-error$10934$14YGsk)
              (make-parameter . g$make-parameter$6382$14YGsk)
              (environment-symbols . g$environment-symbols$10915$14YGsk)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$10914$14YGsk)
              (library-path . g$library-path$6912$14YGsk)
              (library-extensions . g$library-extensions$6913$14YGsk)
              (installed-libraries . g$installed-libraries$6933$14YGsk)
              (expand . g$expand$10920$14YGsk)))))))
    (g$install-library$6928$14YGsk
      'g$12159$14YGsk
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12096$14YGsk)
        (cosh . g$12095$14YGsk)
        (sinh . g$12094$14YGsk)
        (make-guid . g$12093$14YGsk)
        (unspecified? . g$12092$14YGsk)
        (make-trace . g$12091$14YGsk)
        (make-list . g$12090$14YGsk)
        (last-pair . g$12089$14YGsk)
        (load-r5rs . g$12088$14YGsk)
        (license . g$12087$14YGsk)
        (stacktrace . g$12086$14YGsk)
        (ironscheme-build . g$11488$14YGsk)
        (set-symbol-value! . g$12072$14YGsk)
        (symbol-value . g$12071$14YGsk)
        (ungensym . g$12070$14YGsk)
        (gensym . g$12069$14YGsk)
        (void . g$12068$14YGsk)
        (compile-system-libraries . g$11490$14YGsk)
        (compile->closure . g$11492$14YGsk)
        (compile . g$11491$14YGsk)
        (load . g$11487$14YGsk)
        (interaction-environment . g$8556$14YGsk)
        (string-upcase . g$12064$14YGsk)
        (string-titlecase . g$12063$14YGsk)
        (string-normalize-nfkd . g$12062$14YGsk)
        (string-normalize-nfkc . g$12061$14YGsk)
        (string-normalize-nfd . g$12060$14YGsk)
        (string-normalize-nfc . g$12059$14YGsk)
        (string-foldcase . g$12058$14YGsk)
        (string-downcase . g$12057$14YGsk)
        (string-ci>? . g$12056$14YGsk)
        (string-ci>=? . g$12055$14YGsk)
        (string-ci=? . g$12054$14YGsk)
        (string-ci<? . g$12053$14YGsk)
        (string-ci<=? . g$12052$14YGsk)
        (char-whitespace? . g$12051$14YGsk)
        (char-upper-case? . g$12050$14YGsk)
        (char-title-case? . g$12049$14YGsk)
        (char-numeric? . g$12048$14YGsk)
        (char-lower-case? . g$12047$14YGsk)
        (char-general-category . g$12046$14YGsk)
        (char-upcase . g$12045$14YGsk)
        (char-titlecase . g$12044$14YGsk)
        (char-foldcase . g$12043$14YGsk)
        (char-downcase . g$12042$14YGsk)
        (char-ci>? . g$12041$14YGsk)
        (char-ci>=? . g$12040$14YGsk)
        (char-ci=? . g$12039$14YGsk)
        (char-ci<? . g$12038$14YGsk)
        (char-ci<=? . g$12037$14YGsk)
        (char-alphabetic? . g$12036$14YGsk)
        (variable-transformer-procedure . g$8157$14YGsk)
        (variable-transformer? . g$8156$14YGsk)
        (make-variable-transformer . g$8155$14YGsk)
        (identifier? . g$8551$14YGsk)
        (generate-temporaries . g$8540$14YGsk)
        (free-identifier=? . g$8541$14YGsk)
        (syntax->datum . g$8553$14YGsk)
        (datum->syntax . g$8552$14YGsk)
        (bound-identifier=? . g$8542$14YGsk)
        (record-type-descriptor? . g$12035$14YGsk)
        (record-predicate . g$12034$14YGsk)
        (record-mutator . g$12033$14YGsk)
        (record-constructor . g$12032$14YGsk)
        (record-accessor . g$12031$14YGsk)
        (make-record-type-descriptor . g$12030$14YGsk)
        (make-record-constructor-descriptor . g$12029$14YGsk)
        (record? . g$12028$14YGsk)
        (record-type-uid . g$12027$14YGsk)
        (record-type-sealed? . g$12026$14YGsk)
        (record-type-parent . g$12025$14YGsk)
        (record-type-opaque? . g$12024$14YGsk)
        (record-type-name . g$12023$14YGsk)
        (record-type-generative? . g$12022$14YGsk)
        (record-type-field-names . g$12021$14YGsk)
        (record-rtd . g$12020$14YGsk)
        (record-field-mutable? . g$12019$14YGsk)
        (delete-file . g$6170$14YGsk)
        (file-exists? . g$6169$14YGsk)
        (vector-sort! . g$12018$14YGsk)
        (vector-sort . g$12017$14YGsk)
        (list-sort . g$6683$14YGsk)
        (symbol-hash . g$12016$14YGsk)
        (string-ci-hash . g$12015$14YGsk)
        (string-hash . g$12014$14YGsk)
        (equal-hash . g$12013$14YGsk)
        (hashtable-equivalence-function . g$12012$14YGsk)
        (make-hashtable . g$12011$14YGsk)
        (hashtable-hash-function . g$12010$14YGsk)
        (make-eqv-hashtable . g$6137$14YGsk)
        (make-eq-hashtable . g$6136$14YGsk)
        (hashtable? . g$12009$14YGsk)
        (hashtable-update! . g$6143$14YGsk)
        (hashtable-size . g$6138$14YGsk)
        (hashtable-set! . g$6140$14YGsk)
        (hashtable-ref . g$6139$14YGsk)
        (hashtable-mutable? . g$12008$14YGsk)
        (hashtable-keys . g$12007$14YGsk)
        (hashtable-entries . g$12006$14YGsk)
        (hashtable-delete! . g$6141$14YGsk)
        (hashtable-copy . g$12005$14YGsk)
        (hashtable-contains? . g$6142$14YGsk)
        (hashtable-clear! . g$6144$14YGsk)
        (call-with-output-file . g$7096$14YGsk)
        (call-with-input-file . g$7095$14YGsk)
        (write-char . g$12004$14YGsk)
        (write . g$12003$14YGsk)
        (with-output-to-file . g$7094$14YGsk)
        (with-input-from-file . g$7093$14YGsk)
        (read-char . g$12002$14YGsk)
        (read . g$12001$14YGsk)
        (peek-char . g$12000$14YGsk)
        (open-output-file . g$11999$14YGsk)
        (open-input-file . g$11998$14YGsk)
        (newline . g$11997$14YGsk)
        (display . g$11996$14YGsk)
        (close-output-port . g$11995$14YGsk)
        (close-input-port . g$11994$14YGsk)
        (eof-object? . g$11993$14YGsk)
        (eof-object . g$11992$14YGsk)
        (current-error-port . g$11991$14YGsk)
        (current-output-port . g$11990$14YGsk)
        (current-input-port . g$11989$14YGsk)
        (output-port? . g$11988$14YGsk)
        (input-port? . g$11987$14YGsk)
        (utf-8-codec . g$11986$14YGsk)
        (utf-16-codec . g$11985$14YGsk)
        (transcoder-error-handling-mode . g$11984$14YGsk)
        (transcoder-eol-style . g$11983$14YGsk)
        (transcoder-codec . g$11982$14YGsk)
        (transcoded-port . g$11981$14YGsk)
        (textual-port? . g$11980$14YGsk)
        (string->bytevector . g$11979$14YGsk)
        (standard-output-port . g$11978$14YGsk)
        (standard-input-port . g$11977$14YGsk)
        (standard-error-port . g$11976$14YGsk)
        (set-port-position! . g$11975$14YGsk)
        (put-u8 . g$11974$14YGsk)
        (put-string . g$11973$14YGsk)
        (put-datum . g$11972$14YGsk)
        (put-char . g$11971$14YGsk)
        (put-bytevector . g$11970$14YGsk)
        (port? . g$7071$14YGsk)
        (port-transcoder . g$11969$14YGsk)
        (port-position . g$11968$14YGsk)
        (port-has-set-port-position!? . g$11967$14YGsk)
        (port-has-port-position? . g$11966$14YGsk)
        (port-eof? . g$11965$14YGsk)
        (output-port-buffer-mode . g$11964$14YGsk)
        (open-string-output-port . g$7070$14YGsk)
        (open-string-input-port . g$11963$14YGsk)
        (open-file-output-port . g$11962$14YGsk)
        (open-file-input/output-port . g$11961$14YGsk)
        (open-file-input-port . g$11960$14YGsk)
        (open-bytevector-output-port . g$11959$14YGsk)
        (open-bytevector-input-port . g$11958$14YGsk)
        (native-transcoder . g$11957$14YGsk)
        (native-eol-style . g$11956$14YGsk)
        (make-transcoder . g$11955$14YGsk)
        (latin-1-codec . g$11954$14YGsk)
        (make-i/o-write-error . g$6927$14YGsk)
        (make-i/o-read-error . g$6913$14YGsk)
        (make-i/o-port-error . g$7032$14YGsk)
        (make-i/o-invalid-position-error . g$6942$14YGsk)
        (make-i/o-filename-error . g$6959$14YGsk)
        (make-i/o-file-protection-error . g$6975$14YGsk)
        (make-i/o-file-is-read-only-error . g$6989$14YGsk)
        (make-i/o-file-does-not-exist-error . g$7017$14YGsk)
        (make-i/o-file-already-exists-error . g$7003$14YGsk)
        (make-i/o-error . g$6899$14YGsk)
        (make-i/o-encoding-error . g$7063$14YGsk)
        (make-i/o-decoding-error . g$7048$14YGsk)
        (make-custom-textual-output-port . g$11953$14YGsk)
        (make-custom-textual-input/output-port . g$11952$14YGsk)
        (make-custom-textual-input-port . g$11951$14YGsk)
        (make-custom-binary-output-port . g$11950$14YGsk)
        (make-custom-binary-input/output-port . g$11949$14YGsk)
        (make-custom-binary-input-port . g$11948$14YGsk)
        (make-bytevector . g$11947$14YGsk)
        (lookahead-u8 . g$11946$14YGsk)
        (lookahead-char . g$11945$14YGsk)
        (i/o-write-error? . g$6928$14YGsk)
        (i/o-read-error? . g$6914$14YGsk)
        (i/o-port-error? . g$7034$14YGsk)
        (i/o-invalid-position-error? . g$6944$14YGsk)
        (i/o-error-position . g$6945$14YGsk)
        (i/o-filename-error? . g$6961$14YGsk)
        (i/o-file-protection-error? . g$6976$14YGsk)
        (i/o-file-is-read-only-error? . g$6990$14YGsk)
        (i/o-file-does-not-exist-error? . g$7018$14YGsk)
        (i/o-file-already-exists-error? . g$7004$14YGsk)
        (i/o-error? . g$6900$14YGsk)
        (i/o-error-port . g$7035$14YGsk)
        (i/o-error-filename . g$6962$14YGsk)
        (i/o-encoding-error? . g$7065$14YGsk)
        (i/o-encoding-error-char . g$7066$14YGsk)
        (i/o-decoding-error? . g$7049$14YGsk)
        (get-u8 . g$11944$14YGsk)
        (get-string-n! . g$11943$14YGsk)
        (get-string-n . g$11942$14YGsk)
        (get-string-all . g$11941$14YGsk)
        (get-line . g$11940$14YGsk)
        (get-datum . g$11939$14YGsk)
        (get-char . g$11938$14YGsk)
        (get-bytevector-some . g$11937$14YGsk)
        (get-bytevector-n! . g$11936$14YGsk)
        (get-bytevector-n . g$11935$14YGsk)
        (get-bytevector-all . g$11934$14YGsk)
        (flush-output-port . g$11933$14YGsk)
        (close-port . g$11932$14YGsk)
        (call-with-string-output-port . g$11931$14YGsk)
        (call-with-port . g$11930$14YGsk)
        (call-with-bytevector-output-port . g$11929$14YGsk)
        (bytevector->string . g$11928$14YGsk)
        (buffer-mode? . g$11927$14YGsk)
        (binary-port? . g$11926$14YGsk)
        (scheme-report-environment . g$8531$14YGsk)
        (quotient . g$6663$14YGsk)
        (null-environment . g$8530$14YGsk)
        (remainder . g$6664$14YGsk)
        (modulo . g$6665$14YGsk)
        (inexact->exact . g$11925$14YGsk)
        (force . g$6667$14YGsk)
        (exact->inexact . g$11924$14YGsk)
        (exit . g$11923$14YGsk)
        (command-line . g$11484$14YGsk)
        (string-fill! . g$11922$14YGsk)
        (string-set! . g$11921$14YGsk)
        (set-cdr! . g$11920$14YGsk)
        (set-car! . g$11919$14YGsk)
        (remove . g$6250$14YGsk)
        (remv . g$6251$14YGsk)
        (remp . g$6236$14YGsk)
        (remq . g$6252$14YGsk)
        (partition . g$6235$14YGsk)
        (memv . g$11918$14YGsk)
        (memq . g$11917$14YGsk)
        (memp . g$6242$14YGsk)
        (member . g$6241$14YGsk)
        (exists . g$6246$14YGsk)
        (for-all . g$6245$14YGsk)
        (fold-right . g$6249$14YGsk)
        (fold-left . g$6248$14YGsk)
        (find . g$6234$14YGsk)
        (filter . g$6237$14YGsk)
        (cons* . g$6247$14YGsk)
        (assv . g$6238$14YGsk)
        (assq . g$11916$14YGsk)
        (assp . g$6240$14YGsk)
        (assoc . g$6239$14YGsk)
        (with-exception-handler . g$11915$14YGsk)
        (raise-continuable . g$11914$14YGsk)
        (raise . g$11913$14YGsk)
        (eval . g$8533$14YGsk)
        (environment . g$8529$14YGsk)
        (make-enumeration . g$7153$14YGsk)
        (enum-set=? . g$7160$14YGsk)
        (enum-set-universe . g$7154$14YGsk)
        (enum-set-union . g$7161$14YGsk)
        (enum-set-subset? . g$7159$14YGsk)
        (enum-set-projection . g$7165$14YGsk)
        (enum-set-member? . g$7158$14YGsk)
        (enum-set-intersection . g$7162$14YGsk)
        (enum-set-indexer . g$7155$14YGsk)
        (enum-set-difference . g$7163$14YGsk)
        (enum-set-constructor . g$7156$14YGsk)
        (enum-set-complement . g$7164$14YGsk)
        (enum-set->list . g$7157$14YGsk)
        (who-condition? . g$6574$14YGsk)
        (warning? . g$6485$14YGsk)
        (violation? . g$6527$14YGsk)
        (undefined-violation? . g$6651$14YGsk)
        (syntax-violation? . g$6635$14YGsk)
        (syntax-violation-subform . g$6637$14YGsk)
        (syntax-violation-form . g$6636$14YGsk)
        (syntax-violation . g$8550$14YGsk)
        (simple-conditions . g$11912$14YGsk)
        (serious-condition? . g$6499$14YGsk)
        (non-continuable-violation? . g$6589$14YGsk)
        (message-condition? . g$6470$14YGsk)
        (make-who-condition . g$6572$14YGsk)
        (make-warning . g$6484$14YGsk)
        (make-violation . g$6526$14YGsk)
        (make-undefined-violation . g$6650$14YGsk)
        (make-syntax-violation . g$6632$14YGsk)
        (make-serious-condition . g$6498$14YGsk)
        (make-non-continuable-violation . g$6588$14YGsk)
        (make-message-condition . g$6468$14YGsk)
        (make-lexical-violation . g$6616$14YGsk)
        (make-irritants-condition . g$6555$14YGsk)
        (make-implementation-restriction-violation . g$6602$14YGsk)
        (make-error . g$6512$14YGsk)
        (make-assertion-violation . g$6540$14YGsk)
        (lexical-violation? . g$6617$14YGsk)
        (irritants-condition? . g$6557$14YGsk)
        (implementation-restriction-violation? . g$6603$14YGsk)
        (error? . g$6513$14YGsk)
        (condition-who . g$6575$14YGsk)
        (condition-predicate . g$11911$14YGsk)
        (condition-message . g$6471$14YGsk)
        (condition-irritants . g$6558$14YGsk)
        (condition-accessor . g$11910$14YGsk)
        (condition . g$11909$14YGsk)
        (assertion-violation? . g$6541$14YGsk)
        (condition? . g$11908$14YGsk)
        (utf32->string . g$11907$14YGsk)
        (utf16->string . g$11906$14YGsk)
        (utf8->string . g$11905$14YGsk)
        (uint-list->bytevector . g$11904$14YGsk)
        (u8-list->bytevector . g$11903$14YGsk)
        (string->utf8 . g$11902$14YGsk)
        (string->utf32 . g$11901$14YGsk)
        (string->utf16 . g$11900$14YGsk)
        (sint-list->bytevector . g$11899$14YGsk)
        (native-endianness . g$6326$14YGsk)
        (bytevector? . g$11898$14YGsk)
        (bytevector=? . g$11897$14YGsk)
        (bytevector-uint-set! . g$11896$14YGsk)
        (bytevector-uint-ref . g$11895$14YGsk)
        (bytevector-u8-set! . g$11894$14YGsk)
        (bytevector-u8-ref . g$11893$14YGsk)
        (bytevector-u64-set! . g$6347$14YGsk)
        (bytevector-u64-ref . g$6343$14YGsk)
        (bytevector-u64-native-set! . g$6349$14YGsk)
        (bytevector-u64-native-ref . g$6345$14YGsk)
        (bytevector-u32-set! . g$6339$14YGsk)
        (bytevector-u32-ref . g$6335$14YGsk)
        (bytevector-u32-native-set! . g$6341$14YGsk)
        (bytevector-u32-native-ref . g$6337$14YGsk)
        (bytevector-u16-set! . g$6331$14YGsk)
        (bytevector-u16-ref . g$6327$14YGsk)
        (bytevector-u16-native-set! . g$6333$14YGsk)
        (bytevector-u16-native-ref . g$6329$14YGsk)
        (bytevector-sint-set! . g$11892$14YGsk)
        (bytevector-sint-ref . g$11891$14YGsk)
        (bytevector-s8-set! . g$11890$14YGsk)
        (bytevector-s8-ref . g$11889$14YGsk)
        (bytevector-s64-set! . g$6348$14YGsk)
        (bytevector-s64-ref . g$6344$14YGsk)
        (bytevector-s64-native-set! . g$6350$14YGsk)
        (bytevector-s64-native-ref . g$6346$14YGsk)
        (bytevector-s32-set! . g$6340$14YGsk)
        (bytevector-s32-ref . g$6336$14YGsk)
        (bytevector-s32-native-set! . g$6342$14YGsk)
        (bytevector-s32-native-ref . g$6338$14YGsk)
        (bytevector-s16-set! . g$6332$14YGsk)
        (bytevector-s16-ref . g$6328$14YGsk)
        (bytevector-s16-native-set! . g$6334$14YGsk)
        (bytevector-s16-native-ref . g$6330$14YGsk)
        (bytevector-length . g$11888$14YGsk)
        (bytevector-ieee-single-set! . g$11887$14YGsk)
        (bytevector-ieee-single-ref . g$11886$14YGsk)
        (bytevector-ieee-single-native-set! . g$6353$14YGsk)
        (bytevector-ieee-single-native-ref . g$6351$14YGsk)
        (bytevector-ieee-double-set! . g$11885$14YGsk)
        (bytevector-ieee-double-ref . g$11884$14YGsk)
        (bytevector-ieee-double-native-set! . g$6354$14YGsk)
        (bytevector-ieee-double-native-ref . g$6352$14YGsk)
        (bytevector-fill! . g$11883$14YGsk)
        (bytevector-copy! . g$11882$14YGsk)
        (bytevector-copy . g$11881$14YGsk)
        (bytevector->uint-list . g$11880$14YGsk)
        (bytevector->u8-list . g$11879$14YGsk)
        (bytevector->sint-list . g$11878$14YGsk)
        (no-nans-violation? . g$6885$14YGsk)
        (no-infinities-violation? . g$6871$14YGsk)
        (make-no-nans-violation . g$6884$14YGsk)
        (make-no-infinities-violation . g$6870$14YGsk)
        (real->flonum . g$11877$14YGsk)
        (flzero? . g$11876$14YGsk)
        (fltruncate . g$11875$14YGsk)
        (fltan . g$11874$14YGsk)
        (flsqrt . g$11873$14YGsk)
        (flsin . g$11872$14YGsk)
        (flround . g$11871$14YGsk)
        (flpositive? . g$11870$14YGsk)
        (flonum? . g$11869$14YGsk)
        (flodd? . g$11868$14YGsk)
        (flnumerator . g$11867$14YGsk)
        (flnegative? . g$11866$14YGsk)
        (flnan? . g$11865$14YGsk)
        (flmod0 . g$11864$14YGsk)
        (flmod . g$11863$14YGsk)
        (flmin . g$11862$14YGsk)
        (flmax . g$11861$14YGsk)
        (fllog . g$11860$14YGsk)
        (flinteger? . g$11859$14YGsk)
        (flinfinite? . g$11858$14YGsk)
        (flfloor . g$11857$14YGsk)
        (flfinite? . g$11856$14YGsk)
        (flexpt . g$11855$14YGsk)
        (flexp . g$11854$14YGsk)
        (fleven? . g$11853$14YGsk)
        (fldiv0-and-mod0 . g$11852$14YGsk)
        (fldiv0 . g$11851$14YGsk)
        (fldiv-and-mod . g$11850$14YGsk)
        (fldiv . g$11849$14YGsk)
        (fldenominator . g$11848$14YGsk)
        (flcos . g$11847$14YGsk)
        (flceiling . g$11846$14YGsk)
        (flatan . g$11845$14YGsk)
        (flasin . g$11844$14YGsk)
        (flacos . g$11843$14YGsk)
        (flabs . g$11842$14YGsk)
        (fl>? . g$11841$14YGsk)
        (fl>=? . g$11840$14YGsk)
        (fl=? . g$11839$14YGsk)
        (fl<? . g$11838$14YGsk)
        (fl<=? . g$11837$14YGsk)
        (fl/ . g$11836$14YGsk)
        (fl- . g$11835$14YGsk)
        (fl+ . g$11834$14YGsk)
        (fl* . g$11833$14YGsk)
        (fixnum->flonum . g$11832$14YGsk)
        (fxzero? . g$11831$14YGsk)
        (fxxor . g$11830$14YGsk)
        (fxrotate-bit-field . g$6816$14YGsk)
        (fxreverse-bit-field . g$11829$14YGsk)
        (fxpositive? . g$11828$14YGsk)
        (fxodd? . g$11827$14YGsk)
        (fxnot . g$11826$14YGsk)
        (fxnegative? . g$11825$14YGsk)
        (fxmod0 . g$11824$14YGsk)
        (fxmod . g$11823$14YGsk)
        (fxmin . g$11822$14YGsk)
        (fxmax . g$11821$14YGsk)
        (fxlength . g$11820$14YGsk)
        (fxior . g$11819$14YGsk)
        (fxif . g$6810$14YGsk)
        (fxfirst-bit-set . g$11818$14YGsk)
        (fxeven? . g$11817$14YGsk)
        (fxdiv0-and-mod0 . g$11816$14YGsk)
        (fxdiv0 . g$11815$14YGsk)
        (fxdiv-and-mod . g$11814$14YGsk)
        (fxdiv . g$11813$14YGsk)
        (fxcopy-bit-field . g$6813$14YGsk)
        (fxcopy-bit . g$6811$14YGsk)
        (fxbit-set? . g$11812$14YGsk)
        (fxbit-field . g$6812$14YGsk)
        (fxbit-count . g$11811$14YGsk)
        (fxarithmetic-shift-right . g$6815$14YGsk)
        (fxarithmetic-shift-left . g$6814$14YGsk)
        (fxarithmetic-shift . g$11810$14YGsk)
        (fxand . g$11809$14YGsk)
        (fx>? . g$11808$14YGsk)
        (fx>=? . g$11807$14YGsk)
        (fx=? . g$11806$14YGsk)
        (fx<? . g$11805$14YGsk)
        (fx<=? . g$11804$14YGsk)
        (fx-/carry . g$11803$14YGsk)
        (fx- . g$11802$14YGsk)
        (fx+/carry . g$11801$14YGsk)
        (fx+ . g$11800$14YGsk)
        (fx*/carry . g$11799$14YGsk)
        (fx* . g$11798$14YGsk)
        (greatest-fixnum . g$11797$14YGsk)
        (least-fixnum . g$11796$14YGsk)
        (fixnum-width . g$11795$14YGsk)
        (fixnum? . g$11794$14YGsk)
        (bitwise-rotate-bit-field . g$6768$14YGsk)
        (bitwise-reverse-bit-field . g$11793$14YGsk)
        (bitwise-length . g$11792$14YGsk)
        (bitwise-if . g$6762$14YGsk)
        (bitwise-first-bit-set . g$11791$14YGsk)
        (bitwise-copy-bit-field . g$6765$14YGsk)
        (bitwise-copy-bit . g$6763$14YGsk)
        (bitwise-bit-set? . g$11790$14YGsk)
        (bitwise-bit-field . g$11789$14YGsk)
        (bitwise-bit-count . g$11788$14YGsk)
        (bitwise-xor . g$11787$14YGsk)
        (bitwise-ior . g$11786$14YGsk)
        (bitwise-and . g$11785$14YGsk)
        (bitwise-not . g$11784$14YGsk)
        (bitwise-arithmetic-shift-right . g$6767$14YGsk)
        (bitwise-arithmetic-shift-left . g$6766$14YGsk)
        (bitwise-arithmetic-shift . g$11783$14YGsk)
        (zero? . g$11782$14YGsk)
        (vector? . g$11781$14YGsk)
        (vector-set! . g$11780$14YGsk)
        (vector-ref . g$11779$14YGsk)
        (vector-map . g$11778$14YGsk)
        (vector-length . g$11777$14YGsk)
        (vector-for-each . g$11776$14YGsk)
        (vector-fill! . g$11775$14YGsk)
        (vector->list . g$11774$14YGsk)
        (vector . g$11773$14YGsk)
        (values . g$11772$14YGsk)
        (truncate . g$11771$14YGsk)
        (tan . g$11770$14YGsk)
        (symbol? . g$11769$14YGsk)
        (symbol=? . g$11768$14YGsk)
        (symbol->string . g$11767$14YGsk)
        (substring . g$11766$14YGsk)
        (string? . g$11765$14YGsk)
        (string>? . g$11764$14YGsk)
        (string>=? . g$11763$14YGsk)
        (string=? . g$11762$14YGsk)
        (string<? . g$11761$14YGsk)
        (string<=? . g$11760$14YGsk)
        (string-ref . g$11759$14YGsk)
        (string-length . g$11758$14YGsk)
        (string-for-each . g$11757$14YGsk)
        (string-copy . g$11756$14YGsk)
        (string-append . g$11755$14YGsk)
        (string->symbol . g$11754$14YGsk)
        (string->number . g$11753$14YGsk)
        (string->list . g$11752$14YGsk)
        (string . g$11751$14YGsk)
        (sqrt . g$11750$14YGsk)
        (sin . g$11749$14YGsk)
        (round . g$11748$14YGsk)
        (reverse . g$11747$14YGsk)
        (real? . g$11746$14YGsk)
        (real-valued? . g$11745$14YGsk)
        (real-part . g$11744$14YGsk)
        (rationalize . g$5786$14YGsk)
        (rational? . g$11743$14YGsk)
        (rational-valued? . g$11742$14YGsk)
        (procedure? . g$11741$14YGsk)
        (positive? . g$11740$14YGsk)
        (pair? . g$11739$14YGsk)
        (odd? . g$11738$14YGsk)
        (numerator . g$11737$14YGsk)
        (number? . g$11736$14YGsk)
        (number->string . g$11735$14YGsk)
        (null? . g$11734$14YGsk)
        (not . g$11733$14YGsk)
        (negative? . g$11732$14YGsk)
        (nan? . g$11731$14YGsk)
        (min . g$11730$14YGsk)
        (max . g$11729$14YGsk)
        (map . g$11728$14YGsk)
        (make-vector . g$11727$14YGsk)
        (make-string . g$11726$14YGsk)
        (make-rectangular . g$11725$14YGsk)
        (make-polar . g$11724$14YGsk)
        (magnitude . g$11723$14YGsk)
        (log . g$11722$14YGsk)
        (list? . g$11721$14YGsk)
        (list-tail . g$11720$14YGsk)
        (list-ref . g$11719$14YGsk)
        (list->vector . g$11718$14YGsk)
        (list->string . g$11717$14YGsk)
        (list . g$11716$14YGsk)
        (length . g$11715$14YGsk)
        (lcm . g$11714$14YGsk)
        (integer? . g$11713$14YGsk)
        (integer-valued? . g$11712$14YGsk)
        (integer->char . g$11711$14YGsk)
        (infinite? . g$11710$14YGsk)
        (inexact? . g$11709$14YGsk)
        (inexact . g$11708$14YGsk)
        (imag-part . g$11707$14YGsk)
        (gcd . g$11706$14YGsk)
        (for-each . g$11705$14YGsk)
        (floor . g$11704$14YGsk)
        (finite? . g$11703$14YGsk)
        (expt . g$11702$14YGsk)
        (exp . g$11701$14YGsk)
        (exact? . g$11700$14YGsk)
        (exact-integer-sqrt . g$11699$14YGsk)
        (exact . g$11698$14YGsk)
        (even? . g$11697$14YGsk)
        (error . g$11696$14YGsk)
        (eqv? . g$11695$14YGsk)
        (equal? . g$11694$14YGsk)
        (eq? . g$11693$14YGsk)
        (dynamic-wind . g$11692$14YGsk)
        (div0-and-mod0 . g$11691$14YGsk)
        (mod0 . g$11690$14YGsk)
        (div0 . g$11689$14YGsk)
        (div-and-mod . g$11688$14YGsk)
        (mod . g$11687$14YGsk)
        (div . g$11686$14YGsk)
        (denominator . g$11685$14YGsk)
        (cos . g$11684$14YGsk)
        (cons . g$11683$14YGsk)
        (complex? . g$11682$14YGsk)
        (char? . g$11681$14YGsk)
        (char>? . g$11680$14YGsk)
        (char>=? . g$11679$14YGsk)
        (char=? . g$11678$14YGsk)
        (char<? . g$11677$14YGsk)
        (char<=? . g$11676$14YGsk)
        (char->integer . g$11675$14YGsk)
        (ceiling . g$11674$14YGsk)
        (call-with-values . g$11673$14YGsk)
        (call/cc . g$11672$14YGsk)
        (call-with-current-continuation . g$11671$14YGsk)
        (cddddr . g$5785$14YGsk)
        (cdddar . g$5784$14YGsk)
        (cddadr . g$5783$14YGsk)
        (cddaar . g$5782$14YGsk)
        (cdaddr . g$5781$14YGsk)
        (cdadar . g$5780$14YGsk)
        (cdaadr . g$5779$14YGsk)
        (cdaaar . g$5778$14YGsk)
        (cadddr . g$5777$14YGsk)
        (caddar . g$5776$14YGsk)
        (cadadr . g$5775$14YGsk)
        (cadaar . g$5774$14YGsk)
        (caaddr . g$5773$14YGsk)
        (caadar . g$5772$14YGsk)
        (caaadr . g$5771$14YGsk)
        (caaaar . g$5770$14YGsk)
        (cdddr . g$5769$14YGsk)
        (cddar . g$5768$14YGsk)
        (cdadr . g$5767$14YGsk)
        (cdaar . g$5766$14YGsk)
        (caddr . g$5765$14YGsk)
        (cadar . g$5764$14YGsk)
        (caadr . g$5763$14YGsk)
        (caaar . g$5762$14YGsk)
        (cddr . g$5761$14YGsk)
        (cdar . g$5760$14YGsk)
        (cadr . g$5759$14YGsk)
        (caar . g$5758$14YGsk)
        (cdr . g$11670$14YGsk)
        (car . g$11669$14YGsk)
        (boolean? . g$11668$14YGsk)
        (boolean=? . g$11667$14YGsk)
        (atan . g$11666$14YGsk)
        (assertion-violation . g$11665$14YGsk)
        (asin . g$11664$14YGsk)
        (apply . g$11663$14YGsk)
        (append . g$11662$14YGsk)
        (angle . g$11661$14YGsk)
        (acos . g$11660$14YGsk)
        (abs . g$11659$14YGsk)
        (/ . g$11658$14YGsk)
        (* . g$11657$14YGsk)
        (- . g$11656$14YGsk)
        (+ . g$11655$14YGsk)
        (>= . g$11654$14YGsk)
        (> . g$11653$14YGsk)
        (= . g$11652$14YGsk)
        (<= . g$11651$14YGsk)
        (< . g$11650$14YGsk)
        (make-promise . g$6666$14YGsk)
        (load/args . g$11486$14YGsk)
        (printf . g$7237$14YGsk)
        (fprintf . g$7238$14YGsk)
        (format . g$7239$14YGsk)
        (get-arity . g$11645$14YGsk)
        (gc-collect . g$11644$14YGsk)
        (clr-type? . g$11643$14YGsk)
        (get-clr-type . g$11642$14YGsk)
        (vector-append . g$11640$14YGsk)
        (vector-filter . g$11639$14YGsk)
        (vector-reverse! . g$11638$14YGsk)
        (vector-contains? . g$11637$14YGsk)
        (vector-index-of . g$11636$14YGsk)
        (vector-copy . g$11635$14YGsk)
        (vector-binary-search . g$11634$14YGsk)
        (get-output-string . g$11633$14YGsk)
        (open-output-string . g$11632$14YGsk)
        (open-input-string . g$11631$14YGsk)
        (string-format . g$11630$14YGsk)
        (trace-printer . g$11483$14YGsk)
        (make-traced-procedure . g$11629$14YGsk)
        (make-traced-macro . g$7259$14YGsk)
        (pmap . g$11628$14YGsk)
        (time-it . g$11627$14YGsk)
        (make-parameter . g$7264$14YGsk)
        (library-locator . g$11626$14YGsk)
        (get-library-paths . g$11625$14YGsk)
        (environment-symbols . g$8527$14YGsk)
        (interaction-environment-symbols . g$8526$14YGsk)
        (library-path . g$7695$14YGsk)
        (library-extensions . g$7696$14YGsk)
        (installed-libraries . g$7716$14YGsk)
        (expand . g$8532$14YGsk)
        (&no-nans . g$11624$14YGsk)
        (&no-infinities . g$11623$14YGsk)
        (&i/o-encoding . g$11622$14YGsk)
        (&i/o-decoding . g$11621$14YGsk)
        (&i/o-port . g$11620$14YGsk)
        (&i/o-file-does-not-exist . g$11619$14YGsk)
        (&i/o-file-already-exists . g$11618$14YGsk)
        (&i/o-file-is-read-only . g$11617$14YGsk)
        (&i/o-file-protection . g$11616$14YGsk)
        (&i/o-filename . g$11615$14YGsk)
        (&i/o-invalid-position . g$11614$14YGsk)
        (&i/o-write . g$11613$14YGsk)
        (&i/o-read . g$11612$14YGsk)
        (&i/o . g$11611$14YGsk)
        (&non-continuable . g$11610$14YGsk)
        (&undefined . g$11609$14YGsk)
        (&syntax . g$11608$14YGsk)
        (&lexical . g$11607$14YGsk)
        (&implementation-restriction . g$11606$14YGsk)
        (&who . g$11604$14YGsk)
        (&irritants . g$11603$14YGsk)
        (&assertion . g$11602$14YGsk)
        (&violation . g$11601$14YGsk)
        (&error . g$11600$14YGsk)
        (&serious . g$11599$14YGsk)
        (&warning . g$11598$14YGsk)
        (&message . g$11597$14YGsk)
        (&condition . g$11596$14YGsk)
        (define-condition-type . g$11595$14YGsk)
        (define-enumeration . g$11594$14YGsk)
        (define-record-type . g$11593$14YGsk)
        (parent-rtd . g$11592$14YGsk)
        (nongenerative . g$11591$14YGsk)
        (opaque . g$11590$14YGsk)
        (sealed . g$11589$14YGsk)
        (protocol . g$11588$14YGsk)
        (parent . g$11587$14YGsk)
        (immutable . g$11586$14YGsk)
        (mutable . g$11585$14YGsk)
        (fields . g$11584$14YGsk)
        (error-handling-mode . g$11583$14YGsk)
        (file-options . g$11582$14YGsk)
        (buffer-mode . g$11581$14YGsk)
        (eol-style . g$11580$14YGsk)
        (guard . g$11579$14YGsk)
        (trace-letrec-syntax . g$11578$14YGsk)
        (trace-let-syntax . g$11577$14YGsk)
        (trace-define-syntax . g$11576$14YGsk)
        (trace-define . g$11575$14YGsk)
        (trace-lambda . g$11574$14YGsk)
        (unsyntax-splicing . g$11573$14YGsk)
        (unsyntax . g$11572$14YGsk)
        (unquote-splicing . g$11571$14YGsk)
        (unquote . g$11570$14YGsk)
        (_ . g$11569$14YGsk)
        (else . g$11568$14YGsk)
        (=> . g$11567$14YGsk)
        (... . g$11566$14YGsk)
        (assert . g$11565$14YGsk)
        (endianness . g$11564$14YGsk)
        (delay . g$11563$14YGsk)
        (time . g$11562$14YGsk)
        (or . g$11561$14YGsk)
        (and . g$11560$14YGsk)
        (do . g$11559$14YGsk)
        (cond . g$11558$14YGsk)
        (let* . g$11557$14YGsk)
        (let . g$11556$14YGsk)
        (identifier-syntax . g$11555$14YGsk)
        (with-syntax . g$11554$14YGsk)
        (quasisyntax . g$11553$14YGsk)
        (quasiquote . g$11552$14YGsk)
        (syntax-rules . g$11551$14YGsk)
        (include-into . g$11550$14YGsk)
        (include . g$11549$14YGsk)
        (let-values . g$11547$14YGsk)
        (let*-values . g$11546$14YGsk)
        (record-constructor-descriptor . g$11545$14YGsk)
        (record-type-descriptor . g$11544$14YGsk)
        (fluid-let-syntax . g$11543$14YGsk)
        (case . g$11542$14YGsk)
        (parameterize . g$11541$14YGsk)
        (unless . g$11540$14YGsk)
        (when . g$11539$14YGsk)
        (if . g$11538$14YGsk)
        (letrec* . g$11537$14YGsk)
        (letrec . g$11536$14YGsk)
        (case-lambda . g$11534$14YGsk)
        (lambda . g$11533$14YGsk)
        (syntax . g$11532$14YGsk)
        (syntax-case . g$11531$14YGsk)
        (quote . g$11530$14YGsk)
        (letrec-syntax . g$11528$14YGsk)
        (let-syntax . g$11527$14YGsk)
        (set! . g$11526$14YGsk)
        (import . g$11525$14YGsk)
        (library . g$11524$14YGsk)
        (begin . g$11523$14YGsk)
        (module . g$11522$14YGsk)
        (define-syntax . g$11521$14YGsk)
        (define . g$11520$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12160$14YGsk
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11625$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6928$14YGsk
      'g$12161$14YGsk
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12101$14YGsk)
        (annotation-source . g$12100$14YGsk)
        (annotation-expression . g$12099$14YGsk)
        (annotation? . g$12098$14YGsk)
        (read-annotated . g$12097$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6928$14YGsk
      'g$12162$14YGsk
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12067$14YGsk)
        (serialize-library . g$12066$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6928$14YGsk
      'g$12163$14YGsk
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8157$14YGsk)
        (variable-transformer? . g$8156$14YGsk)
        (eqv-hash . g$11648$14YGsk)
        (eq-hash . g$11647$14YGsk)
        (reverse! . g$11646$14YGsk)
        (format . g$7239$14YGsk)
        (get-command-line . g$11641$14YGsk)
        (make-traced-procedure . g$11629$14YGsk)
        (assertion-error . g$8546$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6928$14YGsk
      'g$12164$14YGsk
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11649$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12165$14YGsk
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12085$14YGsk)
        (clr-field-set!-internal . g$12084$14YGsk)
        (clr-field-get-internal . g$12083$14YGsk)
        (clr-cast-internal . g$12082$14YGsk)
        (clr-call-internal . g$12081$14YGsk)
        (clr-new-internal . g$12080$14YGsk)
        (clr-new-array-internal . g$12079$14YGsk)
        (clr-is-internal . g$12078$14YGsk)
        (clr-reference-internal . g$12077$14YGsk)
        (clr-using-internal . g$12076$14YGsk)
        (clr-clear-usings-internal . g$12075$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12166$14YGsk
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11571$14YGsk)
        (unquote . g$11570$14YGsk)
        (else . g$11568$14YGsk)
        (=> . g$11567$14YGsk)
        (delay . g$11563$14YGsk)
        (or . g$11561$14YGsk)
        (and . g$11560$14YGsk)
        (do . g$11559$14YGsk)
        (cond . g$11558$14YGsk)
        (let* . g$11557$14YGsk)
        (let . g$11556$14YGsk)
        (quasiquote . g$11552$14YGsk)
        (syntax-rules . g$11551$14YGsk)
        (case . g$11542$14YGsk)
        (if . g$11538$14YGsk)
        (letrec . g$11536$14YGsk)
        (lambda . g$11533$14YGsk)
        (quote . g$11530$14YGsk)
        (letrec-syntax . g$11528$14YGsk)
        (let-syntax . g$11527$14YGsk)
        (set! . g$11526$14YGsk)
        (begin . g$11523$14YGsk)
        (define-syntax . g$11521$14YGsk)
        (define . g$11520$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6928$14YGsk
      'g$12167$14YGsk
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8556$14YGsk)
        (char-ready? . g$12065$14YGsk)
        (string-ci>? . g$12056$14YGsk)
        (string-ci>=? . g$12055$14YGsk)
        (string-ci=? . g$12054$14YGsk)
        (string-ci<? . g$12053$14YGsk)
        (string-ci<=? . g$12052$14YGsk)
        (char-whitespace? . g$12051$14YGsk)
        (char-upper-case? . g$12050$14YGsk)
        (char-numeric? . g$12048$14YGsk)
        (char-lower-case? . g$12047$14YGsk)
        (char-upcase . g$12045$14YGsk)
        (char-downcase . g$12042$14YGsk)
        (char-ci>? . g$12041$14YGsk)
        (char-ci>=? . g$12040$14YGsk)
        (char-ci=? . g$12039$14YGsk)
        (char-ci<? . g$12038$14YGsk)
        (char-ci<=? . g$12037$14YGsk)
        (char-alphabetic? . g$12036$14YGsk)
        (call-with-output-file . g$7096$14YGsk)
        (call-with-input-file . g$7095$14YGsk)
        (write-char . g$12004$14YGsk)
        (write . g$12003$14YGsk)
        (with-output-to-file . g$7094$14YGsk)
        (with-input-from-file . g$7093$14YGsk)
        (read-char . g$12002$14YGsk)
        (read . g$12001$14YGsk)
        (peek-char . g$12000$14YGsk)
        (open-output-file . g$11999$14YGsk)
        (open-input-file . g$11998$14YGsk)
        (newline . g$11997$14YGsk)
        (display . g$11996$14YGsk)
        (close-output-port . g$11995$14YGsk)
        (close-input-port . g$11994$14YGsk)
        (eof-object? . g$11993$14YGsk)
        (eof-object . g$11992$14YGsk)
        (current-error-port . g$11991$14YGsk)
        (current-output-port . g$11990$14YGsk)
        (current-input-port . g$11989$14YGsk)
        (output-port? . g$11988$14YGsk)
        (input-port? . g$11987$14YGsk)
        (scheme-report-environment . g$8531$14YGsk)
        (quotient . g$6663$14YGsk)
        (null-environment . g$8530$14YGsk)
        (remainder . g$6664$14YGsk)
        (modulo . g$6665$14YGsk)
        (inexact->exact . g$11925$14YGsk)
        (force . g$6667$14YGsk)
        (exact->inexact . g$11924$14YGsk)
        (string-fill! . g$11922$14YGsk)
        (string-set! . g$11921$14YGsk)
        (set-cdr! . g$11920$14YGsk)
        (set-car! . g$11919$14YGsk)
        (memv . g$11918$14YGsk)
        (memq . g$11917$14YGsk)
        (member . g$6241$14YGsk)
        (assv . g$6238$14YGsk)
        (assq . g$11916$14YGsk)
        (assoc . g$6239$14YGsk)
        (eval . g$8533$14YGsk)
        (zero? . g$11782$14YGsk)
        (vector? . g$11781$14YGsk)
        (vector-set! . g$11780$14YGsk)
        (vector-ref . g$11779$14YGsk)
        (vector-length . g$11777$14YGsk)
        (vector-fill! . g$11775$14YGsk)
        (vector->list . g$11774$14YGsk)
        (vector . g$11773$14YGsk)
        (values . g$11772$14YGsk)
        (truncate . g$11771$14YGsk)
        (tan . g$11770$14YGsk)
        (symbol? . g$11769$14YGsk)
        (symbol->string . g$11767$14YGsk)
        (substring . g$11766$14YGsk)
        (string? . g$11765$14YGsk)
        (string>? . g$11764$14YGsk)
        (string>=? . g$11763$14YGsk)
        (string=? . g$11762$14YGsk)
        (string<? . g$11761$14YGsk)
        (string<=? . g$11760$14YGsk)
        (string-ref . g$11759$14YGsk)
        (string-length . g$11758$14YGsk)
        (string-copy . g$11756$14YGsk)
        (string-append . g$11755$14YGsk)
        (string->symbol . g$11754$14YGsk)
        (string->number . g$11753$14YGsk)
        (string->list . g$11752$14YGsk)
        (string . g$11751$14YGsk)
        (sqrt . g$11750$14YGsk)
        (sin . g$11749$14YGsk)
        (round . g$11748$14YGsk)
        (reverse . g$11747$14YGsk)
        (real? . g$11746$14YGsk)
        (real-part . g$11744$14YGsk)
        (rationalize . g$5786$14YGsk)
        (rational? . g$11743$14YGsk)
        (procedure? . g$11741$14YGsk)
        (positive? . g$11740$14YGsk)
        (pair? . g$11739$14YGsk)
        (odd? . g$11738$14YGsk)
        (numerator . g$11737$14YGsk)
        (number? . g$11736$14YGsk)
        (number->string . g$11735$14YGsk)
        (null? . g$11734$14YGsk)
        (not . g$11733$14YGsk)
        (negative? . g$11732$14YGsk)
        (min . g$11730$14YGsk)
        (max . g$11729$14YGsk)
        (map . g$11728$14YGsk)
        (make-vector . g$11727$14YGsk)
        (make-string . g$11726$14YGsk)
        (make-rectangular . g$11725$14YGsk)
        (make-polar . g$11724$14YGsk)
        (magnitude . g$11723$14YGsk)
        (log . g$11722$14YGsk)
        (list? . g$11721$14YGsk)
        (list-tail . g$11720$14YGsk)
        (list-ref . g$11719$14YGsk)
        (list->vector . g$11718$14YGsk)
        (list->string . g$11717$14YGsk)
        (list . g$11716$14YGsk)
        (length . g$11715$14YGsk)
        (lcm . g$11714$14YGsk)
        (integer? . g$11713$14YGsk)
        (integer->char . g$11711$14YGsk)
        (inexact? . g$11709$14YGsk)
        (imag-part . g$11707$14YGsk)
        (gcd . g$11706$14YGsk)
        (for-each . g$11705$14YGsk)
        (floor . g$11704$14YGsk)
        (expt . g$11702$14YGsk)
        (exp . g$11701$14YGsk)
        (exact? . g$11700$14YGsk)
        (even? . g$11697$14YGsk)
        (eqv? . g$11695$14YGsk)
        (equal? . g$11694$14YGsk)
        (eq? . g$11693$14YGsk)
        (dynamic-wind . g$11692$14YGsk)
        (denominator . g$11685$14YGsk)
        (cos . g$11684$14YGsk)
        (cons . g$11683$14YGsk)
        (complex? . g$11682$14YGsk)
        (char? . g$11681$14YGsk)
        (char>? . g$11680$14YGsk)
        (char>=? . g$11679$14YGsk)
        (char=? . g$11678$14YGsk)
        (char<? . g$11677$14YGsk)
        (char<=? . g$11676$14YGsk)
        (char->integer . g$11675$14YGsk)
        (ceiling . g$11674$14YGsk)
        (call-with-values . g$11673$14YGsk)
        (call-with-current-continuation . g$11671$14YGsk)
        (cddddr . g$5785$14YGsk)
        (cdddar . g$5784$14YGsk)
        (cddadr . g$5783$14YGsk)
        (cddaar . g$5782$14YGsk)
        (cdaddr . g$5781$14YGsk)
        (cdadar . g$5780$14YGsk)
        (cdaadr . g$5779$14YGsk)
        (cdaaar . g$5778$14YGsk)
        (cadddr . g$5777$14YGsk)
        (caddar . g$5776$14YGsk)
        (cadadr . g$5775$14YGsk)
        (cadaar . g$5774$14YGsk)
        (caaddr . g$5773$14YGsk)
        (caadar . g$5772$14YGsk)
        (caaadr . g$5771$14YGsk)
        (caaaar . g$5770$14YGsk)
        (cdddr . g$5769$14YGsk)
        (cddar . g$5768$14YGsk)
        (cdadr . g$5767$14YGsk)
        (cdaar . g$5766$14YGsk)
        (caddr . g$5765$14YGsk)
        (cadar . g$5764$14YGsk)
        (caadr . g$5763$14YGsk)
        (caaar . g$5762$14YGsk)
        (cddr . g$5761$14YGsk)
        (cdar . g$5760$14YGsk)
        (cadr . g$5759$14YGsk)
        (caar . g$5758$14YGsk)
        (cdr . g$11670$14YGsk)
        (car . g$11669$14YGsk)
        (boolean? . g$11668$14YGsk)
        (atan . g$11666$14YGsk)
        (asin . g$11664$14YGsk)
        (apply . g$11663$14YGsk)
        (append . g$11662$14YGsk)
        (angle . g$11661$14YGsk)
        (acos . g$11660$14YGsk)
        (abs . g$11659$14YGsk)
        (/ . g$11658$14YGsk)
        (* . g$11657$14YGsk)
        (- . g$11656$14YGsk)
        (+ . g$11655$14YGsk)
        (>= . g$11654$14YGsk)
        (> . g$11653$14YGsk)
        (= . g$11652$14YGsk)
        (<= . g$11651$14YGsk)
        (< . g$11650$14YGsk)
        (unquote-splicing . g$11571$14YGsk)
        (unquote . g$11570$14YGsk)
        (else . g$11568$14YGsk)
        (=> . g$11567$14YGsk)
        (... . g$11566$14YGsk)
        (delay . g$11563$14YGsk)
        (or . g$11561$14YGsk)
        (and . g$11560$14YGsk)
        (do . g$11559$14YGsk)
        (cond . g$11558$14YGsk)
        (let* . g$11557$14YGsk)
        (let . g$11556$14YGsk)
        (quasiquote . g$11552$14YGsk)
        (syntax-rules . g$11551$14YGsk)
        (case . g$11542$14YGsk)
        (if . g$11538$14YGsk)
        (letrec . g$11536$14YGsk)
        (lambda . g$11533$14YGsk)
        (quote . g$11530$14YGsk)
        (letrec-syntax . g$11528$14YGsk)
        (let-syntax . g$11527$14YGsk)
        (set! . g$11526$14YGsk)
        (begin . g$11523$14YGsk)
        (define-syntax . g$11521$14YGsk)
        (define . g$11520$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6928$14YGsk
      'g$12168$14YGsk
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12064$14YGsk)
        (string-titlecase . g$12063$14YGsk)
        (string-normalize-nfkd . g$12062$14YGsk)
        (string-normalize-nfkc . g$12061$14YGsk)
        (string-normalize-nfd . g$12060$14YGsk)
        (string-normalize-nfc . g$12059$14YGsk)
        (string-foldcase . g$12058$14YGsk)
        (string-downcase . g$12057$14YGsk)
        (string-ci>? . g$12056$14YGsk)
        (string-ci>=? . g$12055$14YGsk)
        (string-ci=? . g$12054$14YGsk)
        (string-ci<? . g$12053$14YGsk)
        (string-ci<=? . g$12052$14YGsk)
        (char-whitespace? . g$12051$14YGsk)
        (char-upper-case? . g$12050$14YGsk)
        (char-title-case? . g$12049$14YGsk)
        (char-numeric? . g$12048$14YGsk)
        (char-lower-case? . g$12047$14YGsk)
        (char-general-category . g$12046$14YGsk)
        (char-upcase . g$12045$14YGsk)
        (char-titlecase . g$12044$14YGsk)
        (char-foldcase . g$12043$14YGsk)
        (char-downcase . g$12042$14YGsk)
        (char-ci>? . g$12041$14YGsk)
        (char-ci>=? . g$12040$14YGsk)
        (char-ci=? . g$12039$14YGsk)
        (char-ci<? . g$12038$14YGsk)
        (char-ci<=? . g$12037$14YGsk)
        (char-alphabetic? . g$12036$14YGsk)
        (make-variable-transformer . g$8155$14YGsk)
        (identifier? . g$8551$14YGsk)
        (generate-temporaries . g$8540$14YGsk)
        (free-identifier=? . g$8541$14YGsk)
        (syntax->datum . g$8553$14YGsk)
        (datum->syntax . g$8552$14YGsk)
        (bound-identifier=? . g$8542$14YGsk)
        (record-type-descriptor? . g$12035$14YGsk)
        (record-predicate . g$12034$14YGsk)
        (record-mutator . g$12033$14YGsk)
        (record-constructor . g$12032$14YGsk)
        (record-accessor . g$12031$14YGsk)
        (make-record-type-descriptor . g$12030$14YGsk)
        (make-record-constructor-descriptor . g$12029$14YGsk)
        (record? . g$12028$14YGsk)
        (record-type-uid . g$12027$14YGsk)
        (record-type-sealed? . g$12026$14YGsk)
        (record-type-parent . g$12025$14YGsk)
        (record-type-opaque? . g$12024$14YGsk)
        (record-type-name . g$12023$14YGsk)
        (record-type-generative? . g$12022$14YGsk)
        (record-type-field-names . g$12021$14YGsk)
        (record-rtd . g$12020$14YGsk)
        (record-field-mutable? . g$12019$14YGsk)
        (delete-file . g$6170$14YGsk)
        (file-exists? . g$6169$14YGsk)
        (vector-sort! . g$12018$14YGsk)
        (vector-sort . g$12017$14YGsk)
        (list-sort . g$6683$14YGsk)
        (symbol-hash . g$12016$14YGsk)
        (string-ci-hash . g$12015$14YGsk)
        (string-hash . g$12014$14YGsk)
        (equal-hash . g$12013$14YGsk)
        (hashtable-equivalence-function . g$12012$14YGsk)
        (make-hashtable . g$12011$14YGsk)
        (hashtable-hash-function . g$12010$14YGsk)
        (make-eqv-hashtable . g$6137$14YGsk)
        (make-eq-hashtable . g$6136$14YGsk)
        (hashtable? . g$12009$14YGsk)
        (hashtable-update! . g$6143$14YGsk)
        (hashtable-size . g$6138$14YGsk)
        (hashtable-set! . g$6140$14YGsk)
        (hashtable-ref . g$6139$14YGsk)
        (hashtable-mutable? . g$12008$14YGsk)
        (hashtable-keys . g$12007$14YGsk)
        (hashtable-entries . g$12006$14YGsk)
        (hashtable-delete! . g$6141$14YGsk)
        (hashtable-copy . g$12005$14YGsk)
        (hashtable-contains? . g$6142$14YGsk)
        (hashtable-clear! . g$6144$14YGsk)
        (call-with-output-file . g$7096$14YGsk)
        (call-with-input-file . g$7095$14YGsk)
        (write-char . g$12004$14YGsk)
        (write . g$12003$14YGsk)
        (with-output-to-file . g$7094$14YGsk)
        (with-input-from-file . g$7093$14YGsk)
        (read-char . g$12002$14YGsk)
        (read . g$12001$14YGsk)
        (peek-char . g$12000$14YGsk)
        (open-output-file . g$11999$14YGsk)
        (open-input-file . g$11998$14YGsk)
        (newline . g$11997$14YGsk)
        (display . g$11996$14YGsk)
        (close-output-port . g$11995$14YGsk)
        (close-input-port . g$11994$14YGsk)
        (eof-object? . g$11993$14YGsk)
        (eof-object . g$11992$14YGsk)
        (current-error-port . g$11991$14YGsk)
        (current-output-port . g$11990$14YGsk)
        (current-input-port . g$11989$14YGsk)
        (output-port? . g$11988$14YGsk)
        (input-port? . g$11987$14YGsk)
        (utf-8-codec . g$11986$14YGsk)
        (utf-16-codec . g$11985$14YGsk)
        (transcoder-error-handling-mode . g$11984$14YGsk)
        (transcoder-eol-style . g$11983$14YGsk)
        (transcoder-codec . g$11982$14YGsk)
        (transcoded-port . g$11981$14YGsk)
        (textual-port? . g$11980$14YGsk)
        (string->bytevector . g$11979$14YGsk)
        (standard-output-port . g$11978$14YGsk)
        (standard-input-port . g$11977$14YGsk)
        (standard-error-port . g$11976$14YGsk)
        (set-port-position! . g$11975$14YGsk)
        (put-u8 . g$11974$14YGsk)
        (put-string . g$11973$14YGsk)
        (put-datum . g$11972$14YGsk)
        (put-char . g$11971$14YGsk)
        (put-bytevector . g$11970$14YGsk)
        (port? . g$7071$14YGsk)
        (port-transcoder . g$11969$14YGsk)
        (port-position . g$11968$14YGsk)
        (port-has-set-port-position!? . g$11967$14YGsk)
        (port-has-port-position? . g$11966$14YGsk)
        (port-eof? . g$11965$14YGsk)
        (output-port-buffer-mode . g$11964$14YGsk)
        (open-string-output-port . g$7070$14YGsk)
        (open-string-input-port . g$11963$14YGsk)
        (open-file-output-port . g$11962$14YGsk)
        (open-file-input/output-port . g$11961$14YGsk)
        (open-file-input-port . g$11960$14YGsk)
        (open-bytevector-output-port . g$11959$14YGsk)
        (open-bytevector-input-port . g$11958$14YGsk)
        (native-transcoder . g$11957$14YGsk)
        (native-eol-style . g$11956$14YGsk)
        (make-transcoder . g$11955$14YGsk)
        (latin-1-codec . g$11954$14YGsk)
        (make-i/o-write-error . g$6927$14YGsk)
        (make-i/o-read-error . g$6913$14YGsk)
        (make-i/o-port-error . g$7032$14YGsk)
        (make-i/o-invalid-position-error . g$6942$14YGsk)
        (make-i/o-filename-error . g$6959$14YGsk)
        (make-i/o-file-protection-error . g$6975$14YGsk)
        (make-i/o-file-is-read-only-error . g$6989$14YGsk)
        (make-i/o-file-does-not-exist-error . g$7017$14YGsk)
        (make-i/o-file-already-exists-error . g$7003$14YGsk)
        (make-i/o-error . g$6899$14YGsk)
        (make-i/o-encoding-error . g$7063$14YGsk)
        (make-i/o-decoding-error . g$7048$14YGsk)
        (make-custom-textual-output-port . g$11953$14YGsk)
        (make-custom-textual-input/output-port . g$11952$14YGsk)
        (make-custom-textual-input-port . g$11951$14YGsk)
        (make-custom-binary-output-port . g$11950$14YGsk)
        (make-custom-binary-input/output-port . g$11949$14YGsk)
        (make-custom-binary-input-port . g$11948$14YGsk)
        (make-bytevector . g$11947$14YGsk)
        (lookahead-u8 . g$11946$14YGsk)
        (lookahead-char . g$11945$14YGsk)
        (i/o-write-error? . g$6928$14YGsk)
        (i/o-read-error? . g$6914$14YGsk)
        (i/o-port-error? . g$7034$14YGsk)
        (i/o-invalid-position-error? . g$6944$14YGsk)
        (i/o-error-position . g$6945$14YGsk)
        (i/o-filename-error? . g$6961$14YGsk)
        (i/o-file-protection-error? . g$6976$14YGsk)
        (i/o-file-is-read-only-error? . g$6990$14YGsk)
        (i/o-file-does-not-exist-error? . g$7018$14YGsk)
        (i/o-file-already-exists-error? . g$7004$14YGsk)
        (i/o-error? . g$6900$14YGsk)
        (i/o-error-port . g$7035$14YGsk)
        (i/o-error-filename . g$6962$14YGsk)
        (i/o-encoding-error? . g$7065$14YGsk)
        (i/o-encoding-error-char . g$7066$14YGsk)
        (i/o-decoding-error? . g$7049$14YGsk)
        (get-u8 . g$11944$14YGsk)
        (get-string-n! . g$11943$14YGsk)
        (get-string-n . g$11942$14YGsk)
        (get-string-all . g$11941$14YGsk)
        (get-line . g$11940$14YGsk)
        (get-datum . g$11939$14YGsk)
        (get-char . g$11938$14YGsk)
        (get-bytevector-some . g$11937$14YGsk)
        (get-bytevector-n! . g$11936$14YGsk)
        (get-bytevector-n . g$11935$14YGsk)
        (get-bytevector-all . g$11934$14YGsk)
        (flush-output-port . g$11933$14YGsk)
        (close-port . g$11932$14YGsk)
        (call-with-string-output-port . g$11931$14YGsk)
        (call-with-port . g$11930$14YGsk)
        (call-with-bytevector-output-port . g$11929$14YGsk)
        (bytevector->string . g$11928$14YGsk)
        (buffer-mode? . g$11927$14YGsk)
        (binary-port? . g$11926$14YGsk)
        (exit . g$11923$14YGsk)
        (command-line . g$11484$14YGsk)
        (remove . g$6250$14YGsk)
        (remv . g$6251$14YGsk)
        (remp . g$6236$14YGsk)
        (remq . g$6252$14YGsk)
        (partition . g$6235$14YGsk)
        (memv . g$11918$14YGsk)
        (memq . g$11917$14YGsk)
        (memp . g$6242$14YGsk)
        (member . g$6241$14YGsk)
        (exists . g$6246$14YGsk)
        (for-all . g$6245$14YGsk)
        (fold-right . g$6249$14YGsk)
        (fold-left . g$6248$14YGsk)
        (find . g$6234$14YGsk)
        (filter . g$6237$14YGsk)
        (cons* . g$6247$14YGsk)
        (assv . g$6238$14YGsk)
        (assq . g$11916$14YGsk)
        (assp . g$6240$14YGsk)
        (assoc . g$6239$14YGsk)
        (with-exception-handler . g$11915$14YGsk)
        (raise-continuable . g$11914$14YGsk)
        (raise . g$11913$14YGsk)
        (make-enumeration . g$7153$14YGsk)
        (enum-set=? . g$7160$14YGsk)
        (enum-set-universe . g$7154$14YGsk)
        (enum-set-union . g$7161$14YGsk)
        (enum-set-subset? . g$7159$14YGsk)
        (enum-set-projection . g$7165$14YGsk)
        (enum-set-member? . g$7158$14YGsk)
        (enum-set-intersection . g$7162$14YGsk)
        (enum-set-indexer . g$7155$14YGsk)
        (enum-set-difference . g$7163$14YGsk)
        (enum-set-constructor . g$7156$14YGsk)
        (enum-set-complement . g$7164$14YGsk)
        (enum-set->list . g$7157$14YGsk)
        (who-condition? . g$6574$14YGsk)
        (warning? . g$6485$14YGsk)
        (violation? . g$6527$14YGsk)
        (undefined-violation? . g$6651$14YGsk)
        (syntax-violation? . g$6635$14YGsk)
        (syntax-violation-subform . g$6637$14YGsk)
        (syntax-violation-form . g$6636$14YGsk)
        (syntax-violation . g$8550$14YGsk)
        (simple-conditions . g$11912$14YGsk)
        (serious-condition? . g$6499$14YGsk)
        (non-continuable-violation? . g$6589$14YGsk)
        (message-condition? . g$6470$14YGsk)
        (make-who-condition . g$6572$14YGsk)
        (make-warning . g$6484$14YGsk)
        (make-violation . g$6526$14YGsk)
        (make-undefined-violation . g$6650$14YGsk)
        (make-syntax-violation . g$6632$14YGsk)
        (make-serious-condition . g$6498$14YGsk)
        (make-non-continuable-violation . g$6588$14YGsk)
        (make-message-condition . g$6468$14YGsk)
        (make-lexical-violation . g$6616$14YGsk)
        (make-irritants-condition . g$6555$14YGsk)
        (make-implementation-restriction-violation . g$6602$14YGsk)
        (make-error . g$6512$14YGsk)
        (make-assertion-violation . g$6540$14YGsk)
        (lexical-violation? . g$6617$14YGsk)
        (irritants-condition? . g$6557$14YGsk)
        (implementation-restriction-violation? . g$6603$14YGsk)
        (error? . g$6513$14YGsk)
        (condition-who . g$6575$14YGsk)
        (condition-predicate . g$11911$14YGsk)
        (condition-message . g$6471$14YGsk)
        (condition-irritants . g$6558$14YGsk)
        (condition-accessor . g$11910$14YGsk)
        (condition . g$11909$14YGsk)
        (assertion-violation? . g$6541$14YGsk)
        (condition? . g$11908$14YGsk)
        (utf32->string . g$11907$14YGsk)
        (utf16->string . g$11906$14YGsk)
        (utf8->string . g$11905$14YGsk)
        (uint-list->bytevector . g$11904$14YGsk)
        (u8-list->bytevector . g$11903$14YGsk)
        (string->utf8 . g$11902$14YGsk)
        (string->utf32 . g$11901$14YGsk)
        (string->utf16 . g$11900$14YGsk)
        (sint-list->bytevector . g$11899$14YGsk)
        (native-endianness . g$6326$14YGsk)
        (bytevector? . g$11898$14YGsk)
        (bytevector=? . g$11897$14YGsk)
        (bytevector-uint-set! . g$11896$14YGsk)
        (bytevector-uint-ref . g$11895$14YGsk)
        (bytevector-u8-set! . g$11894$14YGsk)
        (bytevector-u8-ref . g$11893$14YGsk)
        (bytevector-u64-set! . g$6347$14YGsk)
        (bytevector-u64-ref . g$6343$14YGsk)
        (bytevector-u64-native-set! . g$6349$14YGsk)
        (bytevector-u64-native-ref . g$6345$14YGsk)
        (bytevector-u32-set! . g$6339$14YGsk)
        (bytevector-u32-ref . g$6335$14YGsk)
        (bytevector-u32-native-set! . g$6341$14YGsk)
        (bytevector-u32-native-ref . g$6337$14YGsk)
        (bytevector-u16-set! . g$6331$14YGsk)
        (bytevector-u16-ref . g$6327$14YGsk)
        (bytevector-u16-native-set! . g$6333$14YGsk)
        (bytevector-u16-native-ref . g$6329$14YGsk)
        (bytevector-sint-set! . g$11892$14YGsk)
        (bytevector-sint-ref . g$11891$14YGsk)
        (bytevector-s8-set! . g$11890$14YGsk)
        (bytevector-s8-ref . g$11889$14YGsk)
        (bytevector-s64-set! . g$6348$14YGsk)
        (bytevector-s64-ref . g$6344$14YGsk)
        (bytevector-s64-native-set! . g$6350$14YGsk)
        (bytevector-s64-native-ref . g$6346$14YGsk)
        (bytevector-s32-set! . g$6340$14YGsk)
        (bytevector-s32-ref . g$6336$14YGsk)
        (bytevector-s32-native-set! . g$6342$14YGsk)
        (bytevector-s32-native-ref . g$6338$14YGsk)
        (bytevector-s16-set! . g$6332$14YGsk)
        (bytevector-s16-ref . g$6328$14YGsk)
        (bytevector-s16-native-set! . g$6334$14YGsk)
        (bytevector-s16-native-ref . g$6330$14YGsk)
        (bytevector-length . g$11888$14YGsk)
        (bytevector-ieee-single-set! . g$11887$14YGsk)
        (bytevector-ieee-single-ref . g$11886$14YGsk)
        (bytevector-ieee-single-native-set! . g$6353$14YGsk)
        (bytevector-ieee-single-native-ref . g$6351$14YGsk)
        (bytevector-ieee-double-set! . g$11885$14YGsk)
        (bytevector-ieee-double-ref . g$11884$14YGsk)
        (bytevector-ieee-double-native-set! . g$6354$14YGsk)
        (bytevector-ieee-double-native-ref . g$6352$14YGsk)
        (bytevector-fill! . g$11883$14YGsk)
        (bytevector-copy! . g$11882$14YGsk)
        (bytevector-copy . g$11881$14YGsk)
        (bytevector->uint-list . g$11880$14YGsk)
        (bytevector->u8-list . g$11879$14YGsk)
        (bytevector->sint-list . g$11878$14YGsk)
        (no-nans-violation? . g$6885$14YGsk)
        (no-infinities-violation? . g$6871$14YGsk)
        (make-no-nans-violation . g$6884$14YGsk)
        (make-no-infinities-violation . g$6870$14YGsk)
        (real->flonum . g$11877$14YGsk)
        (flzero? . g$11876$14YGsk)
        (fltruncate . g$11875$14YGsk)
        (fltan . g$11874$14YGsk)
        (flsqrt . g$11873$14YGsk)
        (flsin . g$11872$14YGsk)
        (flround . g$11871$14YGsk)
        (flpositive? . g$11870$14YGsk)
        (flonum? . g$11869$14YGsk)
        (flodd? . g$11868$14YGsk)
        (flnumerator . g$11867$14YGsk)
        (flnegative? . g$11866$14YGsk)
        (flnan? . g$11865$14YGsk)
        (flmod0 . g$11864$14YGsk)
        (flmod . g$11863$14YGsk)
        (flmin . g$11862$14YGsk)
        (flmax . g$11861$14YGsk)
        (fllog . g$11860$14YGsk)
        (flinteger? . g$11859$14YGsk)
        (flinfinite? . g$11858$14YGsk)
        (flfloor . g$11857$14YGsk)
        (flfinite? . g$11856$14YGsk)
        (flexpt . g$11855$14YGsk)
        (flexp . g$11854$14YGsk)
        (fleven? . g$11853$14YGsk)
        (fldiv0-and-mod0 . g$11852$14YGsk)
        (fldiv0 . g$11851$14YGsk)
        (fldiv-and-mod . g$11850$14YGsk)
        (fldiv . g$11849$14YGsk)
        (fldenominator . g$11848$14YGsk)
        (flcos . g$11847$14YGsk)
        (flceiling . g$11846$14YGsk)
        (flatan . g$11845$14YGsk)
        (flasin . g$11844$14YGsk)
        (flacos . g$11843$14YGsk)
        (flabs . g$11842$14YGsk)
        (fl>? . g$11841$14YGsk)
        (fl>=? . g$11840$14YGsk)
        (fl=? . g$11839$14YGsk)
        (fl<? . g$11838$14YGsk)
        (fl<=? . g$11837$14YGsk)
        (fl/ . g$11836$14YGsk)
        (fl- . g$11835$14YGsk)
        (fl+ . g$11834$14YGsk)
        (fl* . g$11833$14YGsk)
        (fixnum->flonum . g$11832$14YGsk)
        (fxzero? . g$11831$14YGsk)
        (fxxor . g$11830$14YGsk)
        (fxrotate-bit-field . g$6816$14YGsk)
        (fxreverse-bit-field . g$11829$14YGsk)
        (fxpositive? . g$11828$14YGsk)
        (fxodd? . g$11827$14YGsk)
        (fxnot . g$11826$14YGsk)
        (fxnegative? . g$11825$14YGsk)
        (fxmod0 . g$11824$14YGsk)
        (fxmod . g$11823$14YGsk)
        (fxmin . g$11822$14YGsk)
        (fxmax . g$11821$14YGsk)
        (fxlength . g$11820$14YGsk)
        (fxior . g$11819$14YGsk)
        (fxif . g$6810$14YGsk)
        (fxfirst-bit-set . g$11818$14YGsk)
        (fxeven? . g$11817$14YGsk)
        (fxdiv0-and-mod0 . g$11816$14YGsk)
        (fxdiv0 . g$11815$14YGsk)
        (fxdiv-and-mod . g$11814$14YGsk)
        (fxdiv . g$11813$14YGsk)
        (fxcopy-bit-field . g$6813$14YGsk)
        (fxcopy-bit . g$6811$14YGsk)
        (fxbit-set? . g$11812$14YGsk)
        (fxbit-field . g$6812$14YGsk)
        (fxbit-count . g$11811$14YGsk)
        (fxarithmetic-shift-right . g$6815$14YGsk)
        (fxarithmetic-shift-left . g$6814$14YGsk)
        (fxarithmetic-shift . g$11810$14YGsk)
        (fxand . g$11809$14YGsk)
        (fx>? . g$11808$14YGsk)
        (fx>=? . g$11807$14YGsk)
        (fx=? . g$11806$14YGsk)
        (fx<? . g$11805$14YGsk)
        (fx<=? . g$11804$14YGsk)
        (fx-/carry . g$11803$14YGsk)
        (fx- . g$11802$14YGsk)
        (fx+/carry . g$11801$14YGsk)
        (fx+ . g$11800$14YGsk)
        (fx*/carry . g$11799$14YGsk)
        (fx* . g$11798$14YGsk)
        (greatest-fixnum . g$11797$14YGsk)
        (least-fixnum . g$11796$14YGsk)
        (fixnum-width . g$11795$14YGsk)
        (fixnum? . g$11794$14YGsk)
        (bitwise-rotate-bit-field . g$6768$14YGsk)
        (bitwise-reverse-bit-field . g$11793$14YGsk)
        (bitwise-length . g$11792$14YGsk)
        (bitwise-if . g$6762$14YGsk)
        (bitwise-first-bit-set . g$11791$14YGsk)
        (bitwise-copy-bit-field . g$6765$14YGsk)
        (bitwise-copy-bit . g$6763$14YGsk)
        (bitwise-bit-set? . g$11790$14YGsk)
        (bitwise-bit-field . g$11789$14YGsk)
        (bitwise-bit-count . g$11788$14YGsk)
        (bitwise-xor . g$11787$14YGsk)
        (bitwise-ior . g$11786$14YGsk)
        (bitwise-and . g$11785$14YGsk)
        (bitwise-not . g$11784$14YGsk)
        (bitwise-arithmetic-shift-right . g$6767$14YGsk)
        (bitwise-arithmetic-shift-left . g$6766$14YGsk)
        (bitwise-arithmetic-shift . g$11783$14YGsk)
        (zero? . g$11782$14YGsk)
        (vector? . g$11781$14YGsk)
        (vector-set! . g$11780$14YGsk)
        (vector-ref . g$11779$14YGsk)
        (vector-map . g$11778$14YGsk)
        (vector-length . g$11777$14YGsk)
        (vector-for-each . g$11776$14YGsk)
        (vector-fill! . g$11775$14YGsk)
        (vector->list . g$11774$14YGsk)
        (vector . g$11773$14YGsk)
        (values . g$11772$14YGsk)
        (truncate . g$11771$14YGsk)
        (tan . g$11770$14YGsk)
        (symbol? . g$11769$14YGsk)
        (symbol=? . g$11768$14YGsk)
        (symbol->string . g$11767$14YGsk)
        (substring . g$11766$14YGsk)
        (string? . g$11765$14YGsk)
        (string>? . g$11764$14YGsk)
        (string>=? . g$11763$14YGsk)
        (string=? . g$11762$14YGsk)
        (string<? . g$11761$14YGsk)
        (string<=? . g$11760$14YGsk)
        (string-ref . g$11759$14YGsk)
        (string-length . g$11758$14YGsk)
        (string-for-each . g$11757$14YGsk)
        (string-copy . g$11756$14YGsk)
        (string-append . g$11755$14YGsk)
        (string->symbol . g$11754$14YGsk)
        (string->number . g$11753$14YGsk)
        (string->list . g$11752$14YGsk)
        (string . g$11751$14YGsk)
        (sqrt . g$11750$14YGsk)
        (sin . g$11749$14YGsk)
        (round . g$11748$14YGsk)
        (reverse . g$11747$14YGsk)
        (real? . g$11746$14YGsk)
        (real-valued? . g$11745$14YGsk)
        (real-part . g$11744$14YGsk)
        (rationalize . g$5786$14YGsk)
        (rational? . g$11743$14YGsk)
        (rational-valued? . g$11742$14YGsk)
        (procedure? . g$11741$14YGsk)
        (positive? . g$11740$14YGsk)
        (pair? . g$11739$14YGsk)
        (odd? . g$11738$14YGsk)
        (numerator . g$11737$14YGsk)
        (number? . g$11736$14YGsk)
        (number->string . g$11735$14YGsk)
        (null? . g$11734$14YGsk)
        (not . g$11733$14YGsk)
        (negative? . g$11732$14YGsk)
        (nan? . g$11731$14YGsk)
        (min . g$11730$14YGsk)
        (max . g$11729$14YGsk)
        (map . g$11728$14YGsk)
        (make-vector . g$11727$14YGsk)
        (make-string . g$11726$14YGsk)
        (make-rectangular . g$11725$14YGsk)
        (make-polar . g$11724$14YGsk)
        (magnitude . g$11723$14YGsk)
        (log . g$11722$14YGsk)
        (list? . g$11721$14YGsk)
        (list-tail . g$11720$14YGsk)
        (list-ref . g$11719$14YGsk)
        (list->vector . g$11718$14YGsk)
        (list->string . g$11717$14YGsk)
        (list . g$11716$14YGsk)
        (length . g$11715$14YGsk)
        (lcm . g$11714$14YGsk)
        (integer? . g$11713$14YGsk)
        (integer-valued? . g$11712$14YGsk)
        (integer->char . g$11711$14YGsk)
        (infinite? . g$11710$14YGsk)
        (inexact? . g$11709$14YGsk)
        (inexact . g$11708$14YGsk)
        (imag-part . g$11707$14YGsk)
        (gcd . g$11706$14YGsk)
        (for-each . g$11705$14YGsk)
        (floor . g$11704$14YGsk)
        (finite? . g$11703$14YGsk)
        (expt . g$11702$14YGsk)
        (exp . g$11701$14YGsk)
        (exact? . g$11700$14YGsk)
        (exact-integer-sqrt . g$11699$14YGsk)
        (exact . g$11698$14YGsk)
        (even? . g$11697$14YGsk)
        (error . g$11696$14YGsk)
        (eqv? . g$11695$14YGsk)
        (equal? . g$11694$14YGsk)
        (eq? . g$11693$14YGsk)
        (dynamic-wind . g$11692$14YGsk)
        (div0-and-mod0 . g$11691$14YGsk)
        (mod0 . g$11690$14YGsk)
        (div0 . g$11689$14YGsk)
        (div-and-mod . g$11688$14YGsk)
        (mod . g$11687$14YGsk)
        (div . g$11686$14YGsk)
        (denominator . g$11685$14YGsk)
        (cos . g$11684$14YGsk)
        (cons . g$11683$14YGsk)
        (complex? . g$11682$14YGsk)
        (char? . g$11681$14YGsk)
        (char>? . g$11680$14YGsk)
        (char>=? . g$11679$14YGsk)
        (char=? . g$11678$14YGsk)
        (char<? . g$11677$14YGsk)
        (char<=? . g$11676$14YGsk)
        (char->integer . g$11675$14YGsk)
        (ceiling . g$11674$14YGsk)
        (call-with-values . g$11673$14YGsk)
        (call/cc . g$11672$14YGsk)
        (call-with-current-continuation . g$11671$14YGsk)
        (cddddr . g$5785$14YGsk)
        (cdddar . g$5784$14YGsk)
        (cddadr . g$5783$14YGsk)
        (cddaar . g$5782$14YGsk)
        (cdaddr . g$5781$14YGsk)
        (cdadar . g$5780$14YGsk)
        (cdaadr . g$5779$14YGsk)
        (cdaaar . g$5778$14YGsk)
        (cadddr . g$5777$14YGsk)
        (caddar . g$5776$14YGsk)
        (cadadr . g$5775$14YGsk)
        (cadaar . g$5774$14YGsk)
        (caaddr . g$5773$14YGsk)
        (caadar . g$5772$14YGsk)
        (caaadr . g$5771$14YGsk)
        (caaaar . g$5770$14YGsk)
        (cdddr . g$5769$14YGsk)
        (cddar . g$5768$14YGsk)
        (cdadr . g$5767$14YGsk)
        (cdaar . g$5766$14YGsk)
        (caddr . g$5765$14YGsk)
        (cadar . g$5764$14YGsk)
        (caadr . g$5763$14YGsk)
        (caaar . g$5762$14YGsk)
        (cddr . g$5761$14YGsk)
        (cdar . g$5760$14YGsk)
        (cadr . g$5759$14YGsk)
        (caar . g$5758$14YGsk)
        (cdr . g$11670$14YGsk)
        (car . g$11669$14YGsk)
        (boolean? . g$11668$14YGsk)
        (boolean=? . g$11667$14YGsk)
        (atan . g$11666$14YGsk)
        (assertion-violation . g$11665$14YGsk)
        (asin . g$11664$14YGsk)
        (apply . g$11663$14YGsk)
        (append . g$11662$14YGsk)
        (angle . g$11661$14YGsk)
        (acos . g$11660$14YGsk)
        (abs . g$11659$14YGsk)
        (/ . g$11658$14YGsk)
        (* . g$11657$14YGsk)
        (- . g$11656$14YGsk)
        (+ . g$11655$14YGsk)
        (>= . g$11654$14YGsk)
        (> . g$11653$14YGsk)
        (= . g$11652$14YGsk)
        (<= . g$11651$14YGsk)
        (< . g$11650$14YGsk)
        (&no-nans . g$11624$14YGsk)
        (&no-infinities . g$11623$14YGsk)
        (&i/o-encoding . g$11622$14YGsk)
        (&i/o-decoding . g$11621$14YGsk)
        (&i/o-port . g$11620$14YGsk)
        (&i/o-file-does-not-exist . g$11619$14YGsk)
        (&i/o-file-already-exists . g$11618$14YGsk)
        (&i/o-file-is-read-only . g$11617$14YGsk)
        (&i/o-file-protection . g$11616$14YGsk)
        (&i/o-filename . g$11615$14YGsk)
        (&i/o-invalid-position . g$11614$14YGsk)
        (&i/o-write . g$11613$14YGsk)
        (&i/o-read . g$11612$14YGsk)
        (&i/o . g$11611$14YGsk)
        (&non-continuable . g$11610$14YGsk)
        (&undefined . g$11609$14YGsk)
        (&syntax . g$11608$14YGsk)
        (&lexical . g$11607$14YGsk)
        (&implementation-restriction . g$11606$14YGsk)
        (&who . g$11604$14YGsk)
        (&irritants . g$11603$14YGsk)
        (&assertion . g$11602$14YGsk)
        (&violation . g$11601$14YGsk)
        (&error . g$11600$14YGsk)
        (&serious . g$11599$14YGsk)
        (&warning . g$11598$14YGsk)
        (&message . g$11597$14YGsk)
        (&condition . g$11596$14YGsk)
        (define-condition-type . g$11595$14YGsk)
        (define-enumeration . g$11594$14YGsk)
        (define-record-type . g$11593$14YGsk)
        (parent-rtd . g$11592$14YGsk)
        (nongenerative . g$11591$14YGsk)
        (opaque . g$11590$14YGsk)
        (sealed . g$11589$14YGsk)
        (protocol . g$11588$14YGsk)
        (parent . g$11587$14YGsk)
        (immutable . g$11586$14YGsk)
        (mutable . g$11585$14YGsk)
        (fields . g$11584$14YGsk)
        (error-handling-mode . g$11583$14YGsk)
        (file-options . g$11582$14YGsk)
        (buffer-mode . g$11581$14YGsk)
        (eol-style . g$11580$14YGsk)
        (guard . g$11579$14YGsk)
        (unsyntax-splicing . g$11573$14YGsk)
        (unsyntax . g$11572$14YGsk)
        (unquote-splicing . g$11571$14YGsk)
        (unquote . g$11570$14YGsk)
        (_ . g$11569$14YGsk)
        (else . g$11568$14YGsk)
        (=> . g$11567$14YGsk)
        (... . g$11566$14YGsk)
        (assert . g$11565$14YGsk)
        (endianness . g$11564$14YGsk)
        (or . g$11561$14YGsk)
        (and . g$11560$14YGsk)
        (do . g$11559$14YGsk)
        (cond . g$11558$14YGsk)
        (let* . g$11557$14YGsk)
        (let . g$11556$14YGsk)
        (identifier-syntax . g$11555$14YGsk)
        (with-syntax . g$11554$14YGsk)
        (quasisyntax . g$11553$14YGsk)
        (quasiquote . g$11552$14YGsk)
        (syntax-rules . g$11551$14YGsk)
        (let-values . g$11547$14YGsk)
        (let*-values . g$11546$14YGsk)
        (record-constructor-descriptor . g$11545$14YGsk)
        (record-type-descriptor . g$11544$14YGsk)
        (case . g$11542$14YGsk)
        (unless . g$11540$14YGsk)
        (when . g$11539$14YGsk)
        (if . g$11538$14YGsk)
        (letrec* . g$11537$14YGsk)
        (letrec . g$11536$14YGsk)
        (case-lambda . g$11534$14YGsk)
        (lambda . g$11533$14YGsk)
        (syntax . g$11532$14YGsk)
        (syntax-case . g$11531$14YGsk)
        (quote . g$11530$14YGsk)
        (letrec-syntax . g$11528$14YGsk)
        (let-syntax . g$11527$14YGsk)
        (set! . g$11526$14YGsk)
        (import . g$11525$14YGsk)
        (library . g$11524$14YGsk)
        (begin . g$11523$14YGsk)
        (define-syntax . g$11521$14YGsk)
        (define . g$11520$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12169$14YGsk
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8556$14YGsk)
        (scheme-report-environment . g$8531$14YGsk)
        (quotient . g$6663$14YGsk)
        (null-environment . g$8530$14YGsk)
        (remainder . g$6664$14YGsk)
        (modulo . g$6665$14YGsk)
        (inexact->exact . g$11925$14YGsk)
        (force . g$6667$14YGsk)
        (exact->inexact . g$11924$14YGsk)
        (delay . g$11563$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12170$14YGsk
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11559$14YGsk)
        (unless . g$11540$14YGsk)
        (when . g$11539$14YGsk)
        (case-lambda . g$11534$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12171$14YGsk
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8533$14YGsk) (environment . g$8529$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12172$14YGsk
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$11920$14YGsk) (set-car! . g$11919$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12173$14YGsk
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$11922$14YGsk) (string-set! . g$11921$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12174$14YGsk
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$11923$14YGsk) (command-line . g$11484$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12175$14YGsk
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8155$14YGsk)
        (identifier? . g$8551$14YGsk)
        (generate-temporaries . g$8540$14YGsk)
        (free-identifier=? . g$8541$14YGsk)
        (syntax->datum . g$8553$14YGsk)
        (datum->syntax . g$8552$14YGsk)
        (bound-identifier=? . g$8542$14YGsk)
        (syntax-violation . g$8550$14YGsk)
        (unsyntax-splicing . g$11573$14YGsk)
        (unsyntax . g$11572$14YGsk)
        (_ . g$11569$14YGsk)
        (... . g$11566$14YGsk)
        (with-syntax . g$11554$14YGsk)
        (quasisyntax . g$11553$14YGsk)
        (syntax . g$11532$14YGsk)
        (syntax-case . g$11531$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12176$14YGsk
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6170$14YGsk)
        (file-exists? . g$6169$14YGsk)
        (make-i/o-write-error . g$6927$14YGsk)
        (make-i/o-read-error . g$6913$14YGsk)
        (make-i/o-port-error . g$7032$14YGsk)
        (make-i/o-invalid-position-error . g$6942$14YGsk)
        (make-i/o-filename-error . g$6959$14YGsk)
        (make-i/o-file-protection-error . g$6975$14YGsk)
        (make-i/o-file-is-read-only-error . g$6989$14YGsk)
        (make-i/o-file-does-not-exist-error . g$7017$14YGsk)
        (make-i/o-file-already-exists-error . g$7003$14YGsk)
        (make-i/o-error . g$6899$14YGsk)
        (i/o-write-error? . g$6928$14YGsk)
        (i/o-read-error? . g$6914$14YGsk)
        (i/o-port-error? . g$7034$14YGsk)
        (i/o-invalid-position-error? . g$6944$14YGsk)
        (i/o-error-position . g$6945$14YGsk)
        (i/o-filename-error? . g$6961$14YGsk)
        (i/o-file-protection-error? . g$6976$14YGsk)
        (i/o-file-is-read-only-error? . g$6990$14YGsk)
        (i/o-file-does-not-exist-error? . g$7018$14YGsk)
        (i/o-file-already-exists-error? . g$7004$14YGsk)
        (i/o-error? . g$6900$14YGsk)
        (i/o-error-port . g$7035$14YGsk)
        (i/o-error-filename . g$6962$14YGsk)
        (&i/o-port . g$11620$14YGsk)
        (&i/o-file-does-not-exist . g$11619$14YGsk)
        (&i/o-file-already-exists . g$11618$14YGsk)
        (&i/o-file-is-read-only . g$11617$14YGsk)
        (&i/o-file-protection . g$11616$14YGsk)
        (&i/o-filename . g$11615$14YGsk)
        (&i/o-invalid-position . g$11614$14YGsk)
        (&i/o-write . g$11613$14YGsk)
        (&i/o-read . g$11612$14YGsk)
        (&i/o . g$11611$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12177$14YGsk
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12018$14YGsk)
        (vector-sort . g$12017$14YGsk)
        (list-sort . g$6683$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12178$14YGsk
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$11782$14YGsk)
        (vector? . g$11781$14YGsk)
        (vector-set! . g$11780$14YGsk)
        (vector-ref . g$11779$14YGsk)
        (vector-map . g$11778$14YGsk)
        (vector-length . g$11777$14YGsk)
        (vector-for-each . g$11776$14YGsk)
        (vector-fill! . g$11775$14YGsk)
        (vector->list . g$11774$14YGsk)
        (vector . g$11773$14YGsk)
        (values . g$11772$14YGsk)
        (truncate . g$11771$14YGsk)
        (tan . g$11770$14YGsk)
        (symbol? . g$11769$14YGsk)
        (symbol=? . g$11768$14YGsk)
        (symbol->string . g$11767$14YGsk)
        (substring . g$11766$14YGsk)
        (string? . g$11765$14YGsk)
        (string>? . g$11764$14YGsk)
        (string>=? . g$11763$14YGsk)
        (string=? . g$11762$14YGsk)
        (string<? . g$11761$14YGsk)
        (string<=? . g$11760$14YGsk)
        (string-ref . g$11759$14YGsk)
        (string-length . g$11758$14YGsk)
        (string-for-each . g$11757$14YGsk)
        (string-copy . g$11756$14YGsk)
        (string-append . g$11755$14YGsk)
        (string->symbol . g$11754$14YGsk)
        (string->number . g$11753$14YGsk)
        (string->list . g$11752$14YGsk)
        (string . g$11751$14YGsk)
        (sqrt . g$11750$14YGsk)
        (sin . g$11749$14YGsk)
        (round . g$11748$14YGsk)
        (reverse . g$11747$14YGsk)
        (real? . g$11746$14YGsk)
        (real-valued? . g$11745$14YGsk)
        (real-part . g$11744$14YGsk)
        (rationalize . g$5786$14YGsk)
        (rational? . g$11743$14YGsk)
        (rational-valued? . g$11742$14YGsk)
        (procedure? . g$11741$14YGsk)
        (positive? . g$11740$14YGsk)
        (pair? . g$11739$14YGsk)
        (odd? . g$11738$14YGsk)
        (numerator . g$11737$14YGsk)
        (number? . g$11736$14YGsk)
        (number->string . g$11735$14YGsk)
        (null? . g$11734$14YGsk)
        (not . g$11733$14YGsk)
        (negative? . g$11732$14YGsk)
        (nan? . g$11731$14YGsk)
        (min . g$11730$14YGsk)
        (max . g$11729$14YGsk)
        (map . g$11728$14YGsk)
        (make-vector . g$11727$14YGsk)
        (make-string . g$11726$14YGsk)
        (make-rectangular . g$11725$14YGsk)
        (make-polar . g$11724$14YGsk)
        (magnitude . g$11723$14YGsk)
        (log . g$11722$14YGsk)
        (list? . g$11721$14YGsk)
        (list-tail . g$11720$14YGsk)
        (list-ref . g$11719$14YGsk)
        (list->vector . g$11718$14YGsk)
        (list->string . g$11717$14YGsk)
        (list . g$11716$14YGsk)
        (length . g$11715$14YGsk)
        (lcm . g$11714$14YGsk)
        (integer? . g$11713$14YGsk)
        (integer-valued? . g$11712$14YGsk)
        (integer->char . g$11711$14YGsk)
        (infinite? . g$11710$14YGsk)
        (inexact? . g$11709$14YGsk)
        (inexact . g$11708$14YGsk)
        (imag-part . g$11707$14YGsk)
        (gcd . g$11706$14YGsk)
        (for-each . g$11705$14YGsk)
        (floor . g$11704$14YGsk)
        (finite? . g$11703$14YGsk)
        (expt . g$11702$14YGsk)
        (exp . g$11701$14YGsk)
        (exact? . g$11700$14YGsk)
        (exact-integer-sqrt . g$11699$14YGsk)
        (exact . g$11698$14YGsk)
        (even? . g$11697$14YGsk)
        (error . g$11696$14YGsk)
        (eqv? . g$11695$14YGsk)
        (equal? . g$11694$14YGsk)
        (eq? . g$11693$14YGsk)
        (dynamic-wind . g$11692$14YGsk)
        (div0-and-mod0 . g$11691$14YGsk)
        (mod0 . g$11690$14YGsk)
        (div0 . g$11689$14YGsk)
        (div-and-mod . g$11688$14YGsk)
        (mod . g$11687$14YGsk)
        (div . g$11686$14YGsk)
        (denominator . g$11685$14YGsk)
        (cos . g$11684$14YGsk)
        (cons . g$11683$14YGsk)
        (complex? . g$11682$14YGsk)
        (char? . g$11681$14YGsk)
        (char>? . g$11680$14YGsk)
        (char>=? . g$11679$14YGsk)
        (char=? . g$11678$14YGsk)
        (char<? . g$11677$14YGsk)
        (char<=? . g$11676$14YGsk)
        (char->integer . g$11675$14YGsk)
        (ceiling . g$11674$14YGsk)
        (call-with-values . g$11673$14YGsk)
        (call/cc . g$11672$14YGsk)
        (call-with-current-continuation . g$11671$14YGsk)
        (cddddr . g$5785$14YGsk)
        (cdddar . g$5784$14YGsk)
        (cddadr . g$5783$14YGsk)
        (cddaar . g$5782$14YGsk)
        (cdaddr . g$5781$14YGsk)
        (cdadar . g$5780$14YGsk)
        (cdaadr . g$5779$14YGsk)
        (cdaaar . g$5778$14YGsk)
        (cadddr . g$5777$14YGsk)
        (caddar . g$5776$14YGsk)
        (cadadr . g$5775$14YGsk)
        (cadaar . g$5774$14YGsk)
        (caaddr . g$5773$14YGsk)
        (caadar . g$5772$14YGsk)
        (caaadr . g$5771$14YGsk)
        (caaaar . g$5770$14YGsk)
        (cdddr . g$5769$14YGsk)
        (cddar . g$5768$14YGsk)
        (cdadr . g$5767$14YGsk)
        (cdaar . g$5766$14YGsk)
        (caddr . g$5765$14YGsk)
        (cadar . g$5764$14YGsk)
        (caadr . g$5763$14YGsk)
        (caaar . g$5762$14YGsk)
        (cddr . g$5761$14YGsk)
        (cdar . g$5760$14YGsk)
        (cadr . g$5759$14YGsk)
        (caar . g$5758$14YGsk)
        (cdr . g$11670$14YGsk)
        (car . g$11669$14YGsk)
        (boolean? . g$11668$14YGsk)
        (boolean=? . g$11667$14YGsk)
        (atan . g$11666$14YGsk)
        (assertion-violation . g$11665$14YGsk)
        (asin . g$11664$14YGsk)
        (apply . g$11663$14YGsk)
        (append . g$11662$14YGsk)
        (angle . g$11661$14YGsk)
        (acos . g$11660$14YGsk)
        (abs . g$11659$14YGsk)
        (/ . g$11658$14YGsk)
        (* . g$11657$14YGsk)
        (- . g$11656$14YGsk)
        (+ . g$11655$14YGsk)
        (>= . g$11654$14YGsk)
        (> . g$11653$14YGsk)
        (= . g$11652$14YGsk)
        (<= . g$11651$14YGsk)
        (< . g$11650$14YGsk)
        (unquote-splicing . g$11571$14YGsk)
        (unquote . g$11570$14YGsk)
        (_ . g$11569$14YGsk)
        (else . g$11568$14YGsk)
        (=> . g$11567$14YGsk)
        (... . g$11566$14YGsk)
        (assert . g$11565$14YGsk)
        (or . g$11561$14YGsk)
        (and . g$11560$14YGsk)
        (cond . g$11558$14YGsk)
        (let* . g$11557$14YGsk)
        (let . g$11556$14YGsk)
        (identifier-syntax . g$11555$14YGsk)
        (quasiquote . g$11552$14YGsk)
        (syntax-rules . g$11551$14YGsk)
        (let-values . g$11547$14YGsk)
        (let*-values . g$11546$14YGsk)
        (case . g$11542$14YGsk)
        (if . g$11538$14YGsk)
        (letrec* . g$11537$14YGsk)
        (letrec . g$11536$14YGsk)
        (lambda . g$11533$14YGsk)
        (quote . g$11530$14YGsk)
        (letrec-syntax . g$11528$14YGsk)
        (let-syntax . g$11527$14YGsk)
        (set! . g$11526$14YGsk)
        (begin . g$11523$14YGsk)
        (define-syntax . g$11521$14YGsk)
        (define . g$11520$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12179$14YGsk
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6250$14YGsk)
        (remv . g$6251$14YGsk)
        (remp . g$6236$14YGsk)
        (remq . g$6252$14YGsk)
        (partition . g$6235$14YGsk)
        (memv . g$11918$14YGsk)
        (memq . g$11917$14YGsk)
        (memp . g$6242$14YGsk)
        (member . g$6241$14YGsk)
        (exists . g$6246$14YGsk)
        (for-all . g$6245$14YGsk)
        (fold-right . g$6249$14YGsk)
        (fold-left . g$6248$14YGsk)
        (find . g$6234$14YGsk)
        (filter . g$6237$14YGsk)
        (cons* . g$6247$14YGsk)
        (assv . g$6238$14YGsk)
        (assq . g$11916$14YGsk)
        (assp . g$6240$14YGsk)
        (assoc . g$6239$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12180$14YGsk
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7096$14YGsk)
        (call-with-input-file . g$7095$14YGsk)
        (write-char . g$12004$14YGsk)
        (write . g$12003$14YGsk)
        (with-output-to-file . g$7094$14YGsk)
        (with-input-from-file . g$7093$14YGsk)
        (read-char . g$12002$14YGsk)
        (read . g$12001$14YGsk)
        (peek-char . g$12000$14YGsk)
        (open-output-file . g$11999$14YGsk)
        (open-input-file . g$11998$14YGsk)
        (newline . g$11997$14YGsk)
        (display . g$11996$14YGsk)
        (close-output-port . g$11995$14YGsk)
        (close-input-port . g$11994$14YGsk)
        (eof-object? . g$11993$14YGsk)
        (eof-object . g$11992$14YGsk)
        (current-error-port . g$11991$14YGsk)
        (current-output-port . g$11990$14YGsk)
        (current-input-port . g$11989$14YGsk)
        (output-port? . g$11988$14YGsk)
        (input-port? . g$11987$14YGsk)
        (make-i/o-write-error . g$6927$14YGsk)
        (make-i/o-read-error . g$6913$14YGsk)
        (make-i/o-port-error . g$7032$14YGsk)
        (make-i/o-invalid-position-error . g$6942$14YGsk)
        (make-i/o-filename-error . g$6959$14YGsk)
        (make-i/o-file-protection-error . g$6975$14YGsk)
        (make-i/o-file-is-read-only-error . g$6989$14YGsk)
        (make-i/o-file-does-not-exist-error . g$7017$14YGsk)
        (make-i/o-file-already-exists-error . g$7003$14YGsk)
        (make-i/o-error . g$6899$14YGsk)
        (i/o-write-error? . g$6928$14YGsk)
        (i/o-read-error? . g$6914$14YGsk)
        (i/o-port-error? . g$7034$14YGsk)
        (i/o-invalid-position-error? . g$6944$14YGsk)
        (i/o-error-position . g$6945$14YGsk)
        (i/o-filename-error? . g$6961$14YGsk)
        (i/o-file-protection-error? . g$6976$14YGsk)
        (i/o-file-is-read-only-error? . g$6990$14YGsk)
        (i/o-file-does-not-exist-error? . g$7018$14YGsk)
        (i/o-file-already-exists-error? . g$7004$14YGsk)
        (i/o-error? . g$6900$14YGsk)
        (i/o-error-port . g$7035$14YGsk)
        (i/o-error-filename . g$6962$14YGsk)
        (&i/o-port . g$11620$14YGsk)
        (&i/o-file-does-not-exist . g$11619$14YGsk)
        (&i/o-file-already-exists . g$11618$14YGsk)
        (&i/o-file-is-read-only . g$11617$14YGsk)
        (&i/o-file-protection . g$11616$14YGsk)
        (&i/o-filename . g$11615$14YGsk)
        (&i/o-invalid-position . g$11614$14YGsk)
        (&i/o-write . g$11613$14YGsk)
        (&i/o-read . g$11612$14YGsk)
        (&i/o . g$11611$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12181$14YGsk
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$11947$14YGsk)
        (utf32->string . g$11907$14YGsk)
        (utf16->string . g$11906$14YGsk)
        (utf8->string . g$11905$14YGsk)
        (uint-list->bytevector . g$11904$14YGsk)
        (u8-list->bytevector . g$11903$14YGsk)
        (string->utf8 . g$11902$14YGsk)
        (string->utf32 . g$11901$14YGsk)
        (string->utf16 . g$11900$14YGsk)
        (sint-list->bytevector . g$11899$14YGsk)
        (native-endianness . g$6326$14YGsk)
        (bytevector? . g$11898$14YGsk)
        (bytevector=? . g$11897$14YGsk)
        (bytevector-uint-set! . g$11896$14YGsk)
        (bytevector-uint-ref . g$11895$14YGsk)
        (bytevector-u8-set! . g$11894$14YGsk)
        (bytevector-u8-ref . g$11893$14YGsk)
        (bytevector-u64-set! . g$6347$14YGsk)
        (bytevector-u64-ref . g$6343$14YGsk)
        (bytevector-u64-native-set! . g$6349$14YGsk)
        (bytevector-u64-native-ref . g$6345$14YGsk)
        (bytevector-u32-set! . g$6339$14YGsk)
        (bytevector-u32-ref . g$6335$14YGsk)
        (bytevector-u32-native-set! . g$6341$14YGsk)
        (bytevector-u32-native-ref . g$6337$14YGsk)
        (bytevector-u16-set! . g$6331$14YGsk)
        (bytevector-u16-ref . g$6327$14YGsk)
        (bytevector-u16-native-set! . g$6333$14YGsk)
        (bytevector-u16-native-ref . g$6329$14YGsk)
        (bytevector-sint-set! . g$11892$14YGsk)
        (bytevector-sint-ref . g$11891$14YGsk)
        (bytevector-s8-set! . g$11890$14YGsk)
        (bytevector-s8-ref . g$11889$14YGsk)
        (bytevector-s64-set! . g$6348$14YGsk)
        (bytevector-s64-ref . g$6344$14YGsk)
        (bytevector-s64-native-set! . g$6350$14YGsk)
        (bytevector-s64-native-ref . g$6346$14YGsk)
        (bytevector-s32-set! . g$6340$14YGsk)
        (bytevector-s32-ref . g$6336$14YGsk)
        (bytevector-s32-native-set! . g$6342$14YGsk)
        (bytevector-s32-native-ref . g$6338$14YGsk)
        (bytevector-s16-set! . g$6332$14YGsk)
        (bytevector-s16-ref . g$6328$14YGsk)
        (bytevector-s16-native-set! . g$6334$14YGsk)
        (bytevector-s16-native-ref . g$6330$14YGsk)
        (bytevector-length . g$11888$14YGsk)
        (bytevector-ieee-single-set! . g$11887$14YGsk)
        (bytevector-ieee-single-ref . g$11886$14YGsk)
        (bytevector-ieee-single-native-set! . g$6353$14YGsk)
        (bytevector-ieee-single-native-ref . g$6351$14YGsk)
        (bytevector-ieee-double-set! . g$11885$14YGsk)
        (bytevector-ieee-double-ref . g$11884$14YGsk)
        (bytevector-ieee-double-native-set! . g$6354$14YGsk)
        (bytevector-ieee-double-native-ref . g$6352$14YGsk)
        (bytevector-fill! . g$11883$14YGsk)
        (bytevector-copy! . g$11882$14YGsk)
        (bytevector-copy . g$11881$14YGsk)
        (bytevector->uint-list . g$11880$14YGsk)
        (bytevector->u8-list . g$11879$14YGsk)
        (bytevector->sint-list . g$11878$14YGsk)
        (endianness . g$11564$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12182$14YGsk
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12064$14YGsk)
        (string-titlecase . g$12063$14YGsk)
        (string-normalize-nfkd . g$12062$14YGsk)
        (string-normalize-nfkc . g$12061$14YGsk)
        (string-normalize-nfd . g$12060$14YGsk)
        (string-normalize-nfc . g$12059$14YGsk)
        (string-foldcase . g$12058$14YGsk)
        (string-downcase . g$12057$14YGsk)
        (string-ci>? . g$12056$14YGsk)
        (string-ci>=? . g$12055$14YGsk)
        (string-ci=? . g$12054$14YGsk)
        (string-ci<? . g$12053$14YGsk)
        (string-ci<=? . g$12052$14YGsk)
        (char-whitespace? . g$12051$14YGsk)
        (char-upper-case? . g$12050$14YGsk)
        (char-title-case? . g$12049$14YGsk)
        (char-numeric? . g$12048$14YGsk)
        (char-lower-case? . g$12047$14YGsk)
        (char-general-category . g$12046$14YGsk)
        (char-upcase . g$12045$14YGsk)
        (char-titlecase . g$12044$14YGsk)
        (char-foldcase . g$12043$14YGsk)
        (char-downcase . g$12042$14YGsk)
        (char-ci>? . g$12041$14YGsk)
        (char-ci>=? . g$12040$14YGsk)
        (char-ci=? . g$12039$14YGsk)
        (char-ci<? . g$12038$14YGsk)
        (char-ci<=? . g$12037$14YGsk)
        (char-alphabetic? . g$12036$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12183$14YGsk
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$11915$14YGsk)
        (raise-continuable . g$11914$14YGsk)
        (raise . g$11913$14YGsk)
        (guard . g$11579$14YGsk)
        (else . g$11568$14YGsk)
        (=> . g$11567$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12184$14YGsk
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6768$14YGsk)
        (bitwise-reverse-bit-field . g$11793$14YGsk)
        (bitwise-length . g$11792$14YGsk)
        (bitwise-if . g$6762$14YGsk)
        (bitwise-first-bit-set . g$11791$14YGsk)
        (bitwise-copy-bit-field . g$6765$14YGsk)
        (bitwise-copy-bit . g$6763$14YGsk)
        (bitwise-bit-set? . g$11790$14YGsk)
        (bitwise-bit-field . g$11789$14YGsk)
        (bitwise-bit-count . g$11788$14YGsk)
        (bitwise-xor . g$11787$14YGsk)
        (bitwise-ior . g$11786$14YGsk)
        (bitwise-and . g$11785$14YGsk)
        (bitwise-not . g$11784$14YGsk)
        (bitwise-arithmetic-shift-right . g$6767$14YGsk)
        (bitwise-arithmetic-shift-left . g$6766$14YGsk)
        (bitwise-arithmetic-shift . g$11783$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12185$14YGsk
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$11831$14YGsk)
        (fxxor . g$11830$14YGsk)
        (fxrotate-bit-field . g$6816$14YGsk)
        (fxreverse-bit-field . g$11829$14YGsk)
        (fxpositive? . g$11828$14YGsk)
        (fxodd? . g$11827$14YGsk)
        (fxnot . g$11826$14YGsk)
        (fxnegative? . g$11825$14YGsk)
        (fxmod0 . g$11824$14YGsk)
        (fxmod . g$11823$14YGsk)
        (fxmin . g$11822$14YGsk)
        (fxmax . g$11821$14YGsk)
        (fxlength . g$11820$14YGsk)
        (fxior . g$11819$14YGsk)
        (fxif . g$6810$14YGsk)
        (fxfirst-bit-set . g$11818$14YGsk)
        (fxeven? . g$11817$14YGsk)
        (fxdiv0-and-mod0 . g$11816$14YGsk)
        (fxdiv0 . g$11815$14YGsk)
        (fxdiv-and-mod . g$11814$14YGsk)
        (fxdiv . g$11813$14YGsk)
        (fxcopy-bit-field . g$6813$14YGsk)
        (fxcopy-bit . g$6811$14YGsk)
        (fxbit-set? . g$11812$14YGsk)
        (fxbit-field . g$6812$14YGsk)
        (fxbit-count . g$11811$14YGsk)
        (fxarithmetic-shift-right . g$6815$14YGsk)
        (fxarithmetic-shift-left . g$6814$14YGsk)
        (fxarithmetic-shift . g$11810$14YGsk)
        (fxand . g$11809$14YGsk)
        (fx>? . g$11808$14YGsk)
        (fx>=? . g$11807$14YGsk)
        (fx=? . g$11806$14YGsk)
        (fx<? . g$11805$14YGsk)
        (fx<=? . g$11804$14YGsk)
        (fx-/carry . g$11803$14YGsk)
        (fx- . g$11802$14YGsk)
        (fx+/carry . g$11801$14YGsk)
        (fx+ . g$11800$14YGsk)
        (fx*/carry . g$11799$14YGsk)
        (fx* . g$11798$14YGsk)
        (greatest-fixnum . g$11797$14YGsk)
        (least-fixnum . g$11796$14YGsk)
        (fixnum-width . g$11795$14YGsk)
        (fixnum? . g$11794$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12186$14YGsk
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6885$14YGsk)
        (no-infinities-violation? . g$6871$14YGsk)
        (make-no-nans-violation . g$6884$14YGsk)
        (make-no-infinities-violation . g$6870$14YGsk)
        (real->flonum . g$11877$14YGsk)
        (flzero? . g$11876$14YGsk)
        (fltruncate . g$11875$14YGsk)
        (fltan . g$11874$14YGsk)
        (flsqrt . g$11873$14YGsk)
        (flsin . g$11872$14YGsk)
        (flround . g$11871$14YGsk)
        (flpositive? . g$11870$14YGsk)
        (flonum? . g$11869$14YGsk)
        (flodd? . g$11868$14YGsk)
        (flnumerator . g$11867$14YGsk)
        (flnegative? . g$11866$14YGsk)
        (flnan? . g$11865$14YGsk)
        (flmod0 . g$11864$14YGsk)
        (flmod . g$11863$14YGsk)
        (flmin . g$11862$14YGsk)
        (flmax . g$11861$14YGsk)
        (fllog . g$11860$14YGsk)
        (flinteger? . g$11859$14YGsk)
        (flinfinite? . g$11858$14YGsk)
        (flfloor . g$11857$14YGsk)
        (flfinite? . g$11856$14YGsk)
        (flexpt . g$11855$14YGsk)
        (flexp . g$11854$14YGsk)
        (fleven? . g$11853$14YGsk)
        (fldiv0-and-mod0 . g$11852$14YGsk)
        (fldiv0 . g$11851$14YGsk)
        (fldiv-and-mod . g$11850$14YGsk)
        (fldiv . g$11849$14YGsk)
        (fldenominator . g$11848$14YGsk)
        (flcos . g$11847$14YGsk)
        (flceiling . g$11846$14YGsk)
        (flatan . g$11845$14YGsk)
        (flasin . g$11844$14YGsk)
        (flacos . g$11843$14YGsk)
        (flabs . g$11842$14YGsk)
        (fl>? . g$11841$14YGsk)
        (fl>=? . g$11840$14YGsk)
        (fl=? . g$11839$14YGsk)
        (fl<? . g$11838$14YGsk)
        (fl<=? . g$11837$14YGsk)
        (fl/ . g$11836$14YGsk)
        (fl- . g$11835$14YGsk)
        (fl+ . g$11834$14YGsk)
        (fl* . g$11833$14YGsk)
        (fixnum->flonum . g$11832$14YGsk)
        (&no-nans . g$11624$14YGsk)
        (&no-infinities . g$11623$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12187$14YGsk
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12016$14YGsk)
        (string-ci-hash . g$12015$14YGsk)
        (string-hash . g$12014$14YGsk)
        (equal-hash . g$12013$14YGsk)
        (hashtable-equivalence-function . g$12012$14YGsk)
        (make-hashtable . g$12011$14YGsk)
        (hashtable-hash-function . g$12010$14YGsk)
        (make-eqv-hashtable . g$6137$14YGsk)
        (make-eq-hashtable . g$6136$14YGsk)
        (hashtable? . g$12009$14YGsk)
        (hashtable-update! . g$6143$14YGsk)
        (hashtable-size . g$6138$14YGsk)
        (hashtable-set! . g$6140$14YGsk)
        (hashtable-ref . g$6139$14YGsk)
        (hashtable-mutable? . g$12008$14YGsk)
        (hashtable-keys . g$12007$14YGsk)
        (hashtable-entries . g$12006$14YGsk)
        (hashtable-delete! . g$6141$14YGsk)
        (hashtable-copy . g$12005$14YGsk)
        (hashtable-contains? . g$6142$14YGsk)
        (hashtable-clear! . g$6144$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12188$14YGsk
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$11993$14YGsk)
        (eof-object . g$11992$14YGsk)
        (current-error-port . g$11991$14YGsk)
        (current-output-port . g$11990$14YGsk)
        (current-input-port . g$11989$14YGsk)
        (output-port? . g$11988$14YGsk)
        (input-port? . g$11987$14YGsk)
        (utf-8-codec . g$11986$14YGsk)
        (utf-16-codec . g$11985$14YGsk)
        (transcoder-error-handling-mode . g$11984$14YGsk)
        (transcoder-eol-style . g$11983$14YGsk)
        (transcoder-codec . g$11982$14YGsk)
        (transcoded-port . g$11981$14YGsk)
        (textual-port? . g$11980$14YGsk)
        (string->bytevector . g$11979$14YGsk)
        (standard-output-port . g$11978$14YGsk)
        (standard-input-port . g$11977$14YGsk)
        (standard-error-port . g$11976$14YGsk)
        (set-port-position! . g$11975$14YGsk)
        (put-u8 . g$11974$14YGsk)
        (put-string . g$11973$14YGsk)
        (put-datum . g$11972$14YGsk)
        (put-char . g$11971$14YGsk)
        (put-bytevector . g$11970$14YGsk)
        (port? . g$7071$14YGsk)
        (port-transcoder . g$11969$14YGsk)
        (port-position . g$11968$14YGsk)
        (port-has-set-port-position!? . g$11967$14YGsk)
        (port-has-port-position? . g$11966$14YGsk)
        (port-eof? . g$11965$14YGsk)
        (output-port-buffer-mode . g$11964$14YGsk)
        (open-string-output-port . g$7070$14YGsk)
        (open-string-input-port . g$11963$14YGsk)
        (open-file-output-port . g$11962$14YGsk)
        (open-file-input/output-port . g$11961$14YGsk)
        (open-file-input-port . g$11960$14YGsk)
        (open-bytevector-output-port . g$11959$14YGsk)
        (open-bytevector-input-port . g$11958$14YGsk)
        (native-transcoder . g$11957$14YGsk)
        (native-eol-style . g$11956$14YGsk)
        (make-transcoder . g$11955$14YGsk)
        (latin-1-codec . g$11954$14YGsk)
        (make-i/o-write-error . g$6927$14YGsk)
        (make-i/o-read-error . g$6913$14YGsk)
        (make-i/o-port-error . g$7032$14YGsk)
        (make-i/o-invalid-position-error . g$6942$14YGsk)
        (make-i/o-filename-error . g$6959$14YGsk)
        (make-i/o-file-protection-error . g$6975$14YGsk)
        (make-i/o-file-is-read-only-error . g$6989$14YGsk)
        (make-i/o-file-does-not-exist-error . g$7017$14YGsk)
        (make-i/o-file-already-exists-error . g$7003$14YGsk)
        (make-i/o-error . g$6899$14YGsk)
        (make-i/o-encoding-error . g$7063$14YGsk)
        (make-i/o-decoding-error . g$7048$14YGsk)
        (make-custom-textual-output-port . g$11953$14YGsk)
        (make-custom-textual-input/output-port . g$11952$14YGsk)
        (make-custom-textual-input-port . g$11951$14YGsk)
        (make-custom-binary-output-port . g$11950$14YGsk)
        (make-custom-binary-input/output-port . g$11949$14YGsk)
        (make-custom-binary-input-port . g$11948$14YGsk)
        (lookahead-u8 . g$11946$14YGsk)
        (lookahead-char . g$11945$14YGsk)
        (i/o-write-error? . g$6928$14YGsk)
        (i/o-read-error? . g$6914$14YGsk)
        (i/o-port-error? . g$7034$14YGsk)
        (i/o-invalid-position-error? . g$6944$14YGsk)
        (i/o-error-position . g$6945$14YGsk)
        (i/o-filename-error? . g$6961$14YGsk)
        (i/o-file-protection-error? . g$6976$14YGsk)
        (i/o-file-is-read-only-error? . g$6990$14YGsk)
        (i/o-file-does-not-exist-error? . g$7018$14YGsk)
        (i/o-file-already-exists-error? . g$7004$14YGsk)
        (i/o-error? . g$6900$14YGsk)
        (i/o-error-port . g$7035$14YGsk)
        (i/o-error-filename . g$6962$14YGsk)
        (i/o-encoding-error? . g$7065$14YGsk)
        (i/o-encoding-error-char . g$7066$14YGsk)
        (i/o-decoding-error? . g$7049$14YGsk)
        (get-u8 . g$11944$14YGsk)
        (get-string-n! . g$11943$14YGsk)
        (get-string-n . g$11942$14YGsk)
        (get-string-all . g$11941$14YGsk)
        (get-line . g$11940$14YGsk)
        (get-datum . g$11939$14YGsk)
        (get-char . g$11938$14YGsk)
        (get-bytevector-some . g$11937$14YGsk)
        (get-bytevector-n! . g$11936$14YGsk)
        (get-bytevector-n . g$11935$14YGsk)
        (get-bytevector-all . g$11934$14YGsk)
        (flush-output-port . g$11933$14YGsk)
        (close-port . g$11932$14YGsk)
        (call-with-string-output-port . g$11931$14YGsk)
        (call-with-port . g$11930$14YGsk)
        (call-with-bytevector-output-port . g$11929$14YGsk)
        (bytevector->string . g$11928$14YGsk)
        (buffer-mode? . g$11927$14YGsk)
        (binary-port? . g$11926$14YGsk)
        (&i/o-encoding . g$11622$14YGsk)
        (&i/o-decoding . g$11621$14YGsk)
        (&i/o-port . g$11620$14YGsk)
        (&i/o-file-does-not-exist . g$11619$14YGsk)
        (&i/o-file-already-exists . g$11618$14YGsk)
        (&i/o-file-is-read-only . g$11617$14YGsk)
        (&i/o-file-protection . g$11616$14YGsk)
        (&i/o-filename . g$11615$14YGsk)
        (&i/o-invalid-position . g$11614$14YGsk)
        (&i/o-write . g$11613$14YGsk)
        (&i/o-read . g$11612$14YGsk)
        (&i/o . g$11611$14YGsk)
        (error-handling-mode . g$11583$14YGsk)
        (file-options . g$11582$14YGsk)
        (buffer-mode . g$11581$14YGsk)
        (eol-style . g$11580$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12189$14YGsk
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7153$14YGsk)
        (enum-set=? . g$7160$14YGsk)
        (enum-set-universe . g$7154$14YGsk)
        (enum-set-union . g$7161$14YGsk)
        (enum-set-subset? . g$7159$14YGsk)
        (enum-set-projection . g$7165$14YGsk)
        (enum-set-member? . g$7158$14YGsk)
        (enum-set-intersection . g$7162$14YGsk)
        (enum-set-indexer . g$7155$14YGsk)
        (enum-set-difference . g$7163$14YGsk)
        (enum-set-constructor . g$7156$14YGsk)
        (enum-set-complement . g$7164$14YGsk)
        (enum-set->list . g$7157$14YGsk)
        (define-enumeration . g$11594$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12190$14YGsk
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6574$14YGsk)
        (warning? . g$6485$14YGsk)
        (violation? . g$6527$14YGsk)
        (undefined-violation? . g$6651$14YGsk)
        (syntax-violation? . g$6635$14YGsk)
        (syntax-violation-subform . g$6637$14YGsk)
        (syntax-violation-form . g$6636$14YGsk)
        (syntax-violation . g$8550$14YGsk)
        (simple-conditions . g$11912$14YGsk)
        (serious-condition? . g$6499$14YGsk)
        (non-continuable-violation? . g$6589$14YGsk)
        (message-condition? . g$6470$14YGsk)
        (make-who-condition . g$6572$14YGsk)
        (make-warning . g$6484$14YGsk)
        (make-violation . g$6526$14YGsk)
        (make-undefined-violation . g$6650$14YGsk)
        (make-syntax-violation . g$6632$14YGsk)
        (make-serious-condition . g$6498$14YGsk)
        (make-non-continuable-violation . g$6588$14YGsk)
        (make-message-condition . g$6468$14YGsk)
        (make-lexical-violation . g$6616$14YGsk)
        (make-irritants-condition . g$6555$14YGsk)
        (make-implementation-restriction-violation . g$6602$14YGsk)
        (make-error . g$6512$14YGsk)
        (make-assertion-violation . g$6540$14YGsk)
        (lexical-violation? . g$6617$14YGsk)
        (irritants-condition? . g$6557$14YGsk)
        (implementation-restriction-violation? . g$6603$14YGsk)
        (error? . g$6513$14YGsk)
        (condition-who . g$6575$14YGsk)
        (condition-predicate . g$11911$14YGsk)
        (condition-message . g$6471$14YGsk)
        (condition-irritants . g$6558$14YGsk)
        (condition-accessor . g$11910$14YGsk)
        (condition . g$11909$14YGsk)
        (assertion-violation? . g$6541$14YGsk)
        (condition? . g$11908$14YGsk)
        (&non-continuable . g$11610$14YGsk)
        (&undefined . g$11609$14YGsk)
        (&syntax . g$11608$14YGsk)
        (&lexical . g$11607$14YGsk)
        (&implementation-restriction . g$11606$14YGsk)
        (&who . g$11604$14YGsk)
        (&irritants . g$11603$14YGsk)
        (&assertion . g$11602$14YGsk)
        (&violation . g$11601$14YGsk)
        (&error . g$11600$14YGsk)
        (&serious . g$11599$14YGsk)
        (&warning . g$11598$14YGsk)
        (&message . g$11597$14YGsk)
        (&condition . g$11596$14YGsk)
        (define-condition-type . g$11595$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12191$14YGsk
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12028$14YGsk)
        (record-type-uid . g$12027$14YGsk)
        (record-type-sealed? . g$12026$14YGsk)
        (record-type-parent . g$12025$14YGsk)
        (record-type-opaque? . g$12024$14YGsk)
        (record-type-name . g$12023$14YGsk)
        (record-type-generative? . g$12022$14YGsk)
        (record-type-field-names . g$12021$14YGsk)
        (record-rtd . g$12020$14YGsk)
        (record-field-mutable? . g$12019$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12192$14YGsk
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12035$14YGsk)
        (record-predicate . g$12034$14YGsk)
        (record-mutator . g$12033$14YGsk)
        (record-constructor . g$12032$14YGsk)
        (record-accessor . g$12031$14YGsk)
        (make-record-type-descriptor . g$12030$14YGsk)
        (make-record-constructor-descriptor . g$12029$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12193$14YGsk
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11593$14YGsk)
        (parent-rtd . g$11592$14YGsk)
        (nongenerative . g$11591$14YGsk)
        (opaque . g$11590$14YGsk)
        (sealed . g$11589$14YGsk)
        (protocol . g$11588$14YGsk)
        (parent . g$11587$14YGsk)
        (immutable . g$11586$14YGsk)
        (mutable . g$11585$14YGsk)
        (fields . g$11584$14YGsk)
        (record-constructor-descriptor . g$11545$14YGsk)
        (record-type-descriptor . g$11544$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6928$14YGsk
      'g$12194$14YGsk
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8425$14YGsk)
        (&no-nans-rcd . g$12158$14YGsk)
        (&no-nans-rtd . g$12157$14YGsk)
        (&no-infinities-rcd . g$12156$14YGsk)
        (&no-infinities-rtd . g$12155$14YGsk)
        (&i/o-encoding-rcd . g$12154$14YGsk)
        (&i/o-encoding-rtd . g$12153$14YGsk)
        (&i/o-decoding-rcd . g$12152$14YGsk)
        (&i/o-decoding-rtd . g$12151$14YGsk)
        (&i/o-port-rcd . g$12150$14YGsk)
        (&i/o-port-rtd . g$12149$14YGsk)
        (&i/o-file-does-not-exist-rcd . g$12148$14YGsk)
        (&i/o-file-does-not-exist-rtd . g$12147$14YGsk)
        (&i/o-file-already-exists-rcd . g$12146$14YGsk)
        (&i/o-file-already-exists-rtd . g$12145$14YGsk)
        (&i/o-file-is-read-only-rcd . g$12144$14YGsk)
        (&i/o-file-is-read-only-rtd . g$12143$14YGsk)
        (&i/o-file-protection-rcd . g$12142$14YGsk)
        (&i/o-file-protection-rtd . g$12141$14YGsk)
        (&i/o-filename-rcd . g$12140$14YGsk)
        (&i/o-filename-rtd . g$12139$14YGsk)
        (&i/o-invalid-position-rcd . g$12138$14YGsk)
        (&i/o-invalid-position-rtd . g$12137$14YGsk)
        (&i/o-write-rcd . g$12136$14YGsk)
        (&i/o-write-rtd . g$12135$14YGsk)
        (&i/o-read-rcd . g$12134$14YGsk)
        (&i/o-read-rtd . g$12133$14YGsk)
        (&i/o-rcd . g$12132$14YGsk)
        (&i/o-rtd . g$12131$14YGsk)
        (&undefined-rcd . g$12130$14YGsk)
        (&undefined-rtd . g$12129$14YGsk)
        (&syntax-rcd . g$12128$14YGsk)
        (&syntax-rtd . g$12127$14YGsk)
        (&lexical-rcd . g$12126$14YGsk)
        (&lexical-rtd . g$12125$14YGsk)
        (&implementation-restriction-rcd . g$12124$14YGsk)
        (&implementation-restriction-rtd . g$12123$14YGsk)
        (&non-continuable-rcd . g$12122$14YGsk)
        (&non-continuable-rtd . g$12121$14YGsk)
        (&who-rcd . g$12120$14YGsk)
        (&who-rtd . g$12119$14YGsk)
        (&irritants-rcd . g$12118$14YGsk)
        (&irritants-rtd . g$12117$14YGsk)
        (&assertion-rcd . g$12116$14YGsk)
        (&assertion-rtd . g$12115$14YGsk)
        (&violation-rcd . g$12114$14YGsk)
        (&violation-rtd . g$12113$14YGsk)
        (&error-rcd . g$12112$14YGsk)
        (&error-rtd . g$12111$14YGsk)
        (&serious-rcd . g$12110$14YGsk)
        (&serious-rtd . g$12109$14YGsk)
        (&warning-rcd . g$12108$14YGsk)
        (&warning-rtd . g$12107$14YGsk)
        (&message-rcd . g$12106$14YGsk)
        (&message-rtd . g$12105$14YGsk)
        (&condition-rcd . g$12104$14YGsk)
        (&condition-rtd . g$12103$14YGsk)
        (library-letrec* . g$12102$14YGsk)
        (annotation-stripped . g$12101$14YGsk)
        (annotation-source . g$12100$14YGsk)
        (annotation-expression . g$12099$14YGsk)
        (annotation? . g$12098$14YGsk)
        (read-annotated . g$12097$14YGsk)
        (tanh . g$12096$14YGsk)
        (cosh . g$12095$14YGsk)
        (sinh . g$12094$14YGsk)
        (make-guid . g$12093$14YGsk)
        (unspecified? . g$12092$14YGsk)
        (make-trace . g$12091$14YGsk)
        (make-list . g$12090$14YGsk)
        (last-pair . g$12089$14YGsk)
        (load-r5rs . g$12088$14YGsk)
        (license . g$12087$14YGsk)
        (stacktrace . g$12086$14YGsk)
        (ironscheme-build . g$11488$14YGsk)
        (define-clr-class-internal . g$12085$14YGsk)
        (clr-field-set!-internal . g$12084$14YGsk)
        (clr-field-get-internal . g$12083$14YGsk)
        (clr-cast-internal . g$12082$14YGsk)
        (clr-call-internal . g$12081$14YGsk)
        (clr-new-internal . g$12080$14YGsk)
        (clr-new-array-internal . g$12079$14YGsk)
        (clr-is-internal . g$12078$14YGsk)
        (clr-reference-internal . g$12077$14YGsk)
        (clr-using-internal . g$12076$14YGsk)
        (clr-clear-usings-internal . g$12075$14YGsk)
        (syntax-error . g$8547$14YGsk)
        (syntax-dispatch . g$8420$14YGsk)
        (compile-core . g$12074$14YGsk)
        (eval-core . g$12073$14YGsk)
        (set-symbol-value! . g$12072$14YGsk)
        (symbol-value . g$12071$14YGsk)
        (ungensym . g$12070$14YGsk)
        (gensym . g$12069$14YGsk)
        (void . g$12068$14YGsk)
        (load-serialized-library . g$12067$14YGsk)
        (serialize-library . g$12066$14YGsk)
        (compile-system-libraries . g$11490$14YGsk)
        (compile->closure . g$11492$14YGsk)
        (compile . g$11491$14YGsk)
        (load . g$11487$14YGsk)
        (interaction-environment . g$8556$14YGsk)
        (char-ready? . g$12065$14YGsk)
        (string-upcase . g$12064$14YGsk)
        (string-titlecase . g$12063$14YGsk)
        (string-normalize-nfkd . g$12062$14YGsk)
        (string-normalize-nfkc . g$12061$14YGsk)
        (string-normalize-nfd . g$12060$14YGsk)
        (string-normalize-nfc . g$12059$14YGsk)
        (string-foldcase . g$12058$14YGsk)
        (string-downcase . g$12057$14YGsk)
        (string-ci>? . g$12056$14YGsk)
        (string-ci>=? . g$12055$14YGsk)
        (string-ci=? . g$12054$14YGsk)
        (string-ci<? . g$12053$14YGsk)
        (string-ci<=? . g$12052$14YGsk)
        (char-whitespace? . g$12051$14YGsk)
        (char-upper-case? . g$12050$14YGsk)
        (char-title-case? . g$12049$14YGsk)
        (char-numeric? . g$12048$14YGsk)
        (char-lower-case? . g$12047$14YGsk)
        (char-general-category . g$12046$14YGsk)
        (char-upcase . g$12045$14YGsk)
        (char-titlecase . g$12044$14YGsk)
        (char-foldcase . g$12043$14YGsk)
        (char-downcase . g$12042$14YGsk)
        (char-ci>? . g$12041$14YGsk)
        (char-ci>=? . g$12040$14YGsk)
        (char-ci=? . g$12039$14YGsk)
        (char-ci<? . g$12038$14YGsk)
        (char-ci<=? . g$12037$14YGsk)
        (char-alphabetic? . g$12036$14YGsk)
        (variable-transformer-procedure . g$8157$14YGsk)
        (variable-transformer? . g$8156$14YGsk)
        (make-variable-transformer . g$8155$14YGsk)
        (identifier? . g$8551$14YGsk)
        (generate-temporaries . g$8540$14YGsk)
        (free-identifier=? . g$8541$14YGsk)
        (syntax->datum . g$8553$14YGsk)
        (datum->syntax . g$8552$14YGsk)
        (bound-identifier=? . g$8542$14YGsk)
        (record-type-descriptor? . g$12035$14YGsk)
        (record-predicate . g$12034$14YGsk)
        (record-mutator . g$12033$14YGsk)
        (record-constructor . g$12032$14YGsk)
        (record-accessor . g$12031$14YGsk)
        (make-record-type-descriptor . g$12030$14YGsk)
        (make-record-constructor-descriptor . g$12029$14YGsk)
        (record? . g$12028$14YGsk)
        (record-type-uid . g$12027$14YGsk)
        (record-type-sealed? . g$12026$14YGsk)
        (record-type-parent . g$12025$14YGsk)
        (record-type-opaque? . g$12024$14YGsk)
        (record-type-name . g$12023$14YGsk)
        (record-type-generative? . g$12022$14YGsk)
        (record-type-field-names . g$12021$14YGsk)
        (record-rtd . g$12020$14YGsk)
        (record-field-mutable? . g$12019$14YGsk)
        (delete-file . g$6170$14YGsk)
        (file-exists? . g$6169$14YGsk)
        (vector-sort! . g$12018$14YGsk)
        (vector-sort . g$12017$14YGsk)
        (list-sort . g$6683$14YGsk)
        (symbol-hash . g$12016$14YGsk)
        (string-ci-hash . g$12015$14YGsk)
        (string-hash . g$12014$14YGsk)
        (equal-hash . g$12013$14YGsk)
        (hashtable-equivalence-function . g$12012$14YGsk)
        (make-hashtable . g$12011$14YGsk)
        (hashtable-hash-function . g$12010$14YGsk)
        (make-eqv-hashtable . g$6137$14YGsk)
        (make-eq-hashtable . g$6136$14YGsk)
        (hashtable? . g$12009$14YGsk)
        (hashtable-update! . g$6143$14YGsk)
        (hashtable-size . g$6138$14YGsk)
        (hashtable-set! . g$6140$14YGsk)
        (hashtable-ref . g$6139$14YGsk)
        (hashtable-mutable? . g$12008$14YGsk)
        (hashtable-keys . g$12007$14YGsk)
        (hashtable-entries . g$12006$14YGsk)
        (hashtable-delete! . g$6141$14YGsk)
        (hashtable-copy . g$12005$14YGsk)
        (hashtable-contains? . g$6142$14YGsk)
        (hashtable-clear! . g$6144$14YGsk)
        (call-with-output-file . g$7096$14YGsk)
        (call-with-input-file . g$7095$14YGsk)
        (write-char . g$12004$14YGsk)
        (write . g$12003$14YGsk)
        (with-output-to-file . g$7094$14YGsk)
        (with-input-from-file . g$7093$14YGsk)
        (read-char . g$12002$14YGsk)
        (read . g$12001$14YGsk)
        (peek-char . g$12000$14YGsk)
        (open-output-file . g$11999$14YGsk)
        (open-input-file . g$11998$14YGsk)
        (newline . g$11997$14YGsk)
        (display . g$11996$14YGsk)
        (close-output-port . g$11995$14YGsk)
        (close-input-port . g$11994$14YGsk)
        (eof-object? . g$11993$14YGsk)
        (eof-object . g$11992$14YGsk)
        (current-error-port . g$11991$14YGsk)
        (current-output-port . g$11990$14YGsk)
        (current-input-port . g$11989$14YGsk)
        (output-port? . g$11988$14YGsk)
        (input-port? . g$11987$14YGsk)
        (utf-8-codec . g$11986$14YGsk)
        (utf-16-codec . g$11985$14YGsk)
        (transcoder-error-handling-mode . g$11984$14YGsk)
        (transcoder-eol-style . g$11983$14YGsk)
        (transcoder-codec . g$11982$14YGsk)
        (transcoded-port . g$11981$14YGsk)
        (textual-port? . g$11980$14YGsk)
        (string->bytevector . g$11979$14YGsk)
        (standard-output-port . g$11978$14YGsk)
        (standard-input-port . g$11977$14YGsk)
        (standard-error-port . g$11976$14YGsk)
        (set-port-position! . g$11975$14YGsk)
        (put-u8 . g$11974$14YGsk)
        (put-string . g$11973$14YGsk)
        (put-datum . g$11972$14YGsk)
        (put-char . g$11971$14YGsk)
        (put-bytevector . g$11970$14YGsk)
        (port? . g$7071$14YGsk)
        (port-transcoder . g$11969$14YGsk)
        (port-position . g$11968$14YGsk)
        (port-has-set-port-position!? . g$11967$14YGsk)
        (port-has-port-position? . g$11966$14YGsk)
        (port-eof? . g$11965$14YGsk)
        (output-port-buffer-mode . g$11964$14YGsk)
        (open-string-output-port . g$7070$14YGsk)
        (open-string-input-port . g$11963$14YGsk)
        (open-file-output-port . g$11962$14YGsk)
        (open-file-input/output-port . g$11961$14YGsk)
        (open-file-input-port . g$11960$14YGsk)
        (open-bytevector-output-port . g$11959$14YGsk)
        (open-bytevector-input-port . g$11958$14YGsk)
        (native-transcoder . g$11957$14YGsk)
        (native-eol-style . g$11956$14YGsk)
        (make-transcoder . g$11955$14YGsk)
        (latin-1-codec . g$11954$14YGsk)
        (make-i/o-write-error . g$6927$14YGsk)
        (make-i/o-read-error . g$6913$14YGsk)
        (make-i/o-port-error . g$7032$14YGsk)
        (make-i/o-invalid-position-error . g$6942$14YGsk)
        (make-i/o-filename-error . g$6959$14YGsk)
        (make-i/o-file-protection-error . g$6975$14YGsk)
        (make-i/o-file-is-read-only-error . g$6989$14YGsk)
        (make-i/o-file-does-not-exist-error . g$7017$14YGsk)
        (make-i/o-file-already-exists-error . g$7003$14YGsk)
        (make-i/o-error . g$6899$14YGsk)
        (make-i/o-encoding-error . g$7063$14YGsk)
        (make-i/o-decoding-error . g$7048$14YGsk)
        (make-custom-textual-output-port . g$11953$14YGsk)
        (make-custom-textual-input/output-port . g$11952$14YGsk)
        (make-custom-textual-input-port . g$11951$14YGsk)
        (make-custom-binary-output-port . g$11950$14YGsk)
        (make-custom-binary-input/output-port . g$11949$14YGsk)
        (make-custom-binary-input-port . g$11948$14YGsk)
        (make-bytevector . g$11947$14YGsk)
        (lookahead-u8 . g$11946$14YGsk)
        (lookahead-char . g$11945$14YGsk)
        (i/o-write-error? . g$6928$14YGsk)
        (i/o-read-error? . g$6914$14YGsk)
        (i/o-port-error? . g$7034$14YGsk)
        (i/o-invalid-position-error? . g$6944$14YGsk)
        (i/o-error-position . g$6945$14YGsk)
        (i/o-filename-error? . g$6961$14YGsk)
        (i/o-file-protection-error? . g$6976$14YGsk)
        (i/o-file-is-read-only-error? . g$6990$14YGsk)
        (i/o-file-does-not-exist-error? . g$7018$14YGsk)
        (i/o-file-already-exists-error? . g$7004$14YGsk)
        (i/o-error? . g$6900$14YGsk)
        (i/o-error-port . g$7035$14YGsk)
        (i/o-error-filename . g$6962$14YGsk)
        (i/o-encoding-error? . g$7065$14YGsk)
        (i/o-encoding-error-char . g$7066$14YGsk)
        (i/o-decoding-error? . g$7049$14YGsk)
        (get-u8 . g$11944$14YGsk)
        (get-string-n! . g$11943$14YGsk)
        (get-string-n . g$11942$14YGsk)
        (get-string-all . g$11941$14YGsk)
        (get-line . g$11940$14YGsk)
        (get-datum . g$11939$14YGsk)
        (get-char . g$11938$14YGsk)
        (get-bytevector-some . g$11937$14YGsk)
        (get-bytevector-n! . g$11936$14YGsk)
        (get-bytevector-n . g$11935$14YGsk)
        (get-bytevector-all . g$11934$14YGsk)
        (flush-output-port . g$11933$14YGsk)
        (close-port . g$11932$14YGsk)
        (call-with-string-output-port . g$11931$14YGsk)
        (call-with-port . g$11930$14YGsk)
        (call-with-bytevector-output-port . g$11929$14YGsk)
        (bytevector->string . g$11928$14YGsk)
        (buffer-mode? . g$11927$14YGsk)
        (binary-port? . g$11926$14YGsk)
        (scheme-report-environment . g$8531$14YGsk)
        (quotient . g$6663$14YGsk)
        (null-environment . g$8530$14YGsk)
        (remainder . g$6664$14YGsk)
        (modulo . g$6665$14YGsk)
        (inexact->exact . g$11925$14YGsk)
        (force . g$6667$14YGsk)
        (exact->inexact . g$11924$14YGsk)
        (exit . g$11923$14YGsk)
        (command-line . g$11484$14YGsk)
        (string-fill! . g$11922$14YGsk)
        (string-set! . g$11921$14YGsk)
        (set-cdr! . g$11920$14YGsk)
        (set-car! . g$11919$14YGsk)
        (remove . g$6250$14YGsk)
        (remv . g$6251$14YGsk)
        (remp . g$6236$14YGsk)
        (remq . g$6252$14YGsk)
        (partition . g$6235$14YGsk)
        (memv . g$11918$14YGsk)
        (memq . g$11917$14YGsk)
        (memp . g$6242$14YGsk)
        (member . g$6241$14YGsk)
        (exists . g$6246$14YGsk)
        (for-all . g$6245$14YGsk)
        (fold-right . g$6249$14YGsk)
        (fold-left . g$6248$14YGsk)
        (find . g$6234$14YGsk)
        (filter . g$6237$14YGsk)
        (cons* . g$6247$14YGsk)
        (assv . g$6238$14YGsk)
        (assq . g$11916$14YGsk)
        (assp . g$6240$14YGsk)
        (assoc . g$6239$14YGsk)
        (with-exception-handler . g$11915$14YGsk)
        (raise-continuable . g$11914$14YGsk)
        (raise . g$11913$14YGsk)
        (eval . g$8533$14YGsk)
        (environment . g$8529$14YGsk)
        (make-enumeration . g$7153$14YGsk)
        (enum-set=? . g$7160$14YGsk)
        (enum-set-universe . g$7154$14YGsk)
        (enum-set-union . g$7161$14YGsk)
        (enum-set-subset? . g$7159$14YGsk)
        (enum-set-projection . g$7165$14YGsk)
        (enum-set-member? . g$7158$14YGsk)
        (enum-set-intersection . g$7162$14YGsk)
        (enum-set-indexer . g$7155$14YGsk)
        (enum-set-difference . g$7163$14YGsk)
        (enum-set-constructor . g$7156$14YGsk)
        (enum-set-complement . g$7164$14YGsk)
        (enum-set->list . g$7157$14YGsk)
        (who-condition? . g$6574$14YGsk)
        (warning? . g$6485$14YGsk)
        (violation? . g$6527$14YGsk)
        (undefined-violation? . g$6651$14YGsk)
        (syntax-violation? . g$6635$14YGsk)
        (syntax-violation-subform . g$6637$14YGsk)
        (syntax-violation-form . g$6636$14YGsk)
        (syntax-violation . g$8550$14YGsk)
        (simple-conditions . g$11912$14YGsk)
        (serious-condition? . g$6499$14YGsk)
        (non-continuable-violation? . g$6589$14YGsk)
        (message-condition? . g$6470$14YGsk)
        (make-who-condition . g$6572$14YGsk)
        (make-warning . g$6484$14YGsk)
        (make-violation . g$6526$14YGsk)
        (make-undefined-violation . g$6650$14YGsk)
        (make-syntax-violation . g$6632$14YGsk)
        (make-serious-condition . g$6498$14YGsk)
        (make-non-continuable-violation . g$6588$14YGsk)
        (make-message-condition . g$6468$14YGsk)
        (make-lexical-violation . g$6616$14YGsk)
        (make-irritants-condition . g$6555$14YGsk)
        (make-implementation-restriction-violation . g$6602$14YGsk)
        (make-error . g$6512$14YGsk)
        (make-assertion-violation . g$6540$14YGsk)
        (lexical-violation? . g$6617$14YGsk)
        (irritants-condition? . g$6557$14YGsk)
        (implementation-restriction-violation? . g$6603$14YGsk)
        (error? . g$6513$14YGsk)
        (condition-who . g$6575$14YGsk)
        (condition-predicate . g$11911$14YGsk)
        (condition-message . g$6471$14YGsk)
        (condition-irritants . g$6558$14YGsk)
        (condition-accessor . g$11910$14YGsk)
        (condition . g$11909$14YGsk)
        (assertion-violation? . g$6541$14YGsk)
        (condition? . g$11908$14YGsk)
        (utf32->string . g$11907$14YGsk)
        (utf16->string . g$11906$14YGsk)
        (utf8->string . g$11905$14YGsk)
        (uint-list->bytevector . g$11904$14YGsk)
        (u8-list->bytevector . g$11903$14YGsk)
        (string->utf8 . g$11902$14YGsk)
        (string->utf32 . g$11901$14YGsk)
        (string->utf16 . g$11900$14YGsk)
        (sint-list->bytevector . g$11899$14YGsk)
        (native-endianness . g$6326$14YGsk)
        (bytevector? . g$11898$14YGsk)
        (bytevector=? . g$11897$14YGsk)
        (bytevector-uint-set! . g$11896$14YGsk)
        (bytevector-uint-ref . g$11895$14YGsk)
        (bytevector-u8-set! . g$11894$14YGsk)
        (bytevector-u8-ref . g$11893$14YGsk)
        (bytevector-u64-set! . g$6347$14YGsk)
        (bytevector-u64-ref . g$6343$14YGsk)
        (bytevector-u64-native-set! . g$6349$14YGsk)
        (bytevector-u64-native-ref . g$6345$14YGsk)
        (bytevector-u32-set! . g$6339$14YGsk)
        (bytevector-u32-ref . g$6335$14YGsk)
        (bytevector-u32-native-set! . g$6341$14YGsk)
        (bytevector-u32-native-ref . g$6337$14YGsk)
        (bytevector-u16-set! . g$6331$14YGsk)
        (bytevector-u16-ref . g$6327$14YGsk)
        (bytevector-u16-native-set! . g$6333$14YGsk)
        (bytevector-u16-native-ref . g$6329$14YGsk)
        (bytevector-sint-set! . g$11892$14YGsk)
        (bytevector-sint-ref . g$11891$14YGsk)
        (bytevector-s8-set! . g$11890$14YGsk)
        (bytevector-s8-ref . g$11889$14YGsk)
        (bytevector-s64-set! . g$6348$14YGsk)
        (bytevector-s64-ref . g$6344$14YGsk)
        (bytevector-s64-native-set! . g$6350$14YGsk)
        (bytevector-s64-native-ref . g$6346$14YGsk)
        (bytevector-s32-set! . g$6340$14YGsk)
        (bytevector-s32-ref . g$6336$14YGsk)
        (bytevector-s32-native-set! . g$6342$14YGsk)
        (bytevector-s32-native-ref . g$6338$14YGsk)
        (bytevector-s16-set! . g$6332$14YGsk)
        (bytevector-s16-ref . g$6328$14YGsk)
        (bytevector-s16-native-set! . g$6334$14YGsk)
        (bytevector-s16-native-ref . g$6330$14YGsk)
        (bytevector-length . g$11888$14YGsk)
        (bytevector-ieee-single-set! . g$11887$14YGsk)
        (bytevector-ieee-single-ref . g$11886$14YGsk)
        (bytevector-ieee-single-native-set! . g$6353$14YGsk)
        (bytevector-ieee-single-native-ref . g$6351$14YGsk)
        (bytevector-ieee-double-set! . g$11885$14YGsk)
        (bytevector-ieee-double-ref . g$11884$14YGsk)
        (bytevector-ieee-double-native-set! . g$6354$14YGsk)
        (bytevector-ieee-double-native-ref . g$6352$14YGsk)
        (bytevector-fill! . g$11883$14YGsk)
        (bytevector-copy! . g$11882$14YGsk)
        (bytevector-copy . g$11881$14YGsk)
        (bytevector->uint-list . g$11880$14YGsk)
        (bytevector->u8-list . g$11879$14YGsk)
        (bytevector->sint-list . g$11878$14YGsk)
        (no-nans-violation? . g$6885$14YGsk)
        (no-infinities-violation? . g$6871$14YGsk)
        (make-no-nans-violation . g$6884$14YGsk)
        (make-no-infinities-violation . g$6870$14YGsk)
        (real->flonum . g$11877$14YGsk)
        (flzero? . g$11876$14YGsk)
        (fltruncate . g$11875$14YGsk)
        (fltan . g$11874$14YGsk)
        (flsqrt . g$11873$14YGsk)
        (flsin . g$11872$14YGsk)
        (flround . g$11871$14YGsk)
        (flpositive? . g$11870$14YGsk)
        (flonum? . g$11869$14YGsk)
        (flodd? . g$11868$14YGsk)
        (flnumerator . g$11867$14YGsk)
        (flnegative? . g$11866$14YGsk)
        (flnan? . g$11865$14YGsk)
        (flmod0 . g$11864$14YGsk)
        (flmod . g$11863$14YGsk)
        (flmin . g$11862$14YGsk)
        (flmax . g$11861$14YGsk)
        (fllog . g$11860$14YGsk)
        (flinteger? . g$11859$14YGsk)
        (flinfinite? . g$11858$14YGsk)
        (flfloor . g$11857$14YGsk)
        (flfinite? . g$11856$14YGsk)
        (flexpt . g$11855$14YGsk)
        (flexp . g$11854$14YGsk)
        (fleven? . g$11853$14YGsk)
        (fldiv0-and-mod0 . g$11852$14YGsk)
        (fldiv0 . g$11851$14YGsk)
        (fldiv-and-mod . g$11850$14YGsk)
        (fldiv . g$11849$14YGsk)
        (fldenominator . g$11848$14YGsk)
        (flcos . g$11847$14YGsk)
        (flceiling . g$11846$14YGsk)
        (flatan . g$11845$14YGsk)
        (flasin . g$11844$14YGsk)
        (flacos . g$11843$14YGsk)
        (flabs . g$11842$14YGsk)
        (fl>? . g$11841$14YGsk)
        (fl>=? . g$11840$14YGsk)
        (fl=? . g$11839$14YGsk)
        (fl<? . g$11838$14YGsk)
        (fl<=? . g$11837$14YGsk)
        (fl/ . g$11836$14YGsk)
        (fl- . g$11835$14YGsk)
        (fl+ . g$11834$14YGsk)
        (fl* . g$11833$14YGsk)
        (fixnum->flonum . g$11832$14YGsk)
        (fxzero? . g$11831$14YGsk)
        (fxxor . g$11830$14YGsk)
        (fxrotate-bit-field . g$6816$14YGsk)
        (fxreverse-bit-field . g$11829$14YGsk)
        (fxpositive? . g$11828$14YGsk)
        (fxodd? . g$11827$14YGsk)
        (fxnot . g$11826$14YGsk)
        (fxnegative? . g$11825$14YGsk)
        (fxmod0 . g$11824$14YGsk)
        (fxmod . g$11823$14YGsk)
        (fxmin . g$11822$14YGsk)
        (fxmax . g$11821$14YGsk)
        (fxlength . g$11820$14YGsk)
        (fxior . g$11819$14YGsk)
        (fxif . g$6810$14YGsk)
        (fxfirst-bit-set . g$11818$14YGsk)
        (fxeven? . g$11817$14YGsk)
        (fxdiv0-and-mod0 . g$11816$14YGsk)
        (fxdiv0 . g$11815$14YGsk)
        (fxdiv-and-mod . g$11814$14YGsk)
        (fxdiv . g$11813$14YGsk)
        (fxcopy-bit-field . g$6813$14YGsk)
        (fxcopy-bit . g$6811$14YGsk)
        (fxbit-set? . g$11812$14YGsk)
        (fxbit-field . g$6812$14YGsk)
        (fxbit-count . g$11811$14YGsk)
        (fxarithmetic-shift-right . g$6815$14YGsk)
        (fxarithmetic-shift-left . g$6814$14YGsk)
        (fxarithmetic-shift . g$11810$14YGsk)
        (fxand . g$11809$14YGsk)
        (fx>? . g$11808$14YGsk)
        (fx>=? . g$11807$14YGsk)
        (fx=? . g$11806$14YGsk)
        (fx<? . g$11805$14YGsk)
        (fx<=? . g$11804$14YGsk)
        (fx-/carry . g$11803$14YGsk)
        (fx- . g$11802$14YGsk)
        (fx+/carry . g$11801$14YGsk)
        (fx+ . g$11800$14YGsk)
        (fx*/carry . g$11799$14YGsk)
        (fx* . g$11798$14YGsk)
        (greatest-fixnum . g$11797$14YGsk)
        (least-fixnum . g$11796$14YGsk)
        (fixnum-width . g$11795$14YGsk)
        (fixnum? . g$11794$14YGsk)
        (bitwise-rotate-bit-field . g$6768$14YGsk)
        (bitwise-reverse-bit-field . g$11793$14YGsk)
        (bitwise-length . g$11792$14YGsk)
        (bitwise-if . g$6762$14YGsk)
        (bitwise-first-bit-set . g$11791$14YGsk)
        (bitwise-copy-bit-field . g$6765$14YGsk)
        (bitwise-copy-bit . g$6763$14YGsk)
        (bitwise-bit-set? . g$11790$14YGsk)
        (bitwise-bit-field . g$11789$14YGsk)
        (bitwise-bit-count . g$11788$14YGsk)
        (bitwise-xor . g$11787$14YGsk)
        (bitwise-ior . g$11786$14YGsk)
        (bitwise-and . g$11785$14YGsk)
        (bitwise-not . g$11784$14YGsk)
        (bitwise-arithmetic-shift-right . g$6767$14YGsk)
        (bitwise-arithmetic-shift-left . g$6766$14YGsk)
        (bitwise-arithmetic-shift . g$11783$14YGsk)
        (zero? . g$11782$14YGsk)
        (vector? . g$11781$14YGsk)
        (vector-set! . g$11780$14YGsk)
        (vector-ref . g$11779$14YGsk)
        (vector-map . g$11778$14YGsk)
        (vector-length . g$11777$14YGsk)
        (vector-for-each . g$11776$14YGsk)
        (vector-fill! . g$11775$14YGsk)
        (vector->list . g$11774$14YGsk)
        (vector . g$11773$14YGsk)
        (values . g$11772$14YGsk)
        (truncate . g$11771$14YGsk)
        (tan . g$11770$14YGsk)
        (symbol? . g$11769$14YGsk)
        (symbol=? . g$11768$14YGsk)
        (symbol->string . g$11767$14YGsk)
        (substring . g$11766$14YGsk)
        (string? . g$11765$14YGsk)
        (string>? . g$11764$14YGsk)
        (string>=? . g$11763$14YGsk)
        (string=? . g$11762$14YGsk)
        (string<? . g$11761$14YGsk)
        (string<=? . g$11760$14YGsk)
        (string-ref . g$11759$14YGsk)
        (string-length . g$11758$14YGsk)
        (string-for-each . g$11757$14YGsk)
        (string-copy . g$11756$14YGsk)
        (string-append . g$11755$14YGsk)
        (string->symbol . g$11754$14YGsk)
        (string->number . g$11753$14YGsk)
        (string->list . g$11752$14YGsk)
        (string . g$11751$14YGsk)
        (sqrt . g$11750$14YGsk)
        (sin . g$11749$14YGsk)
        (round . g$11748$14YGsk)
        (reverse . g$11747$14YGsk)
        (real? . g$11746$14YGsk)
        (real-valued? . g$11745$14YGsk)
        (real-part . g$11744$14YGsk)
        (rationalize . g$5786$14YGsk)
        (rational? . g$11743$14YGsk)
        (rational-valued? . g$11742$14YGsk)
        (procedure? . g$11741$14YGsk)
        (positive? . g$11740$14YGsk)
        (pair? . g$11739$14YGsk)
        (odd? . g$11738$14YGsk)
        (numerator . g$11737$14YGsk)
        (number? . g$11736$14YGsk)
        (number->string . g$11735$14YGsk)
        (null? . g$11734$14YGsk)
        (not . g$11733$14YGsk)
        (negative? . g$11732$14YGsk)
        (nan? . g$11731$14YGsk)
        (min . g$11730$14YGsk)
        (max . g$11729$14YGsk)
        (map . g$11728$14YGsk)
        (make-vector . g$11727$14YGsk)
        (make-string . g$11726$14YGsk)
        (make-rectangular . g$11725$14YGsk)
        (make-polar . g$11724$14YGsk)
        (magnitude . g$11723$14YGsk)
        (log . g$11722$14YGsk)
        (list? . g$11721$14YGsk)
        (list-tail . g$11720$14YGsk)
        (list-ref . g$11719$14YGsk)
        (list->vector . g$11718$14YGsk)
        (list->string . g$11717$14YGsk)
        (list . g$11716$14YGsk)
        (length . g$11715$14YGsk)
        (lcm . g$11714$14YGsk)
        (integer? . g$11713$14YGsk)
        (integer-valued? . g$11712$14YGsk)
        (integer->char . g$11711$14YGsk)
        (infinite? . g$11710$14YGsk)
        (inexact? . g$11709$14YGsk)
        (inexact . g$11708$14YGsk)
        (imag-part . g$11707$14YGsk)
        (gcd . g$11706$14YGsk)
        (for-each . g$11705$14YGsk)
        (floor . g$11704$14YGsk)
        (finite? . g$11703$14YGsk)
        (expt . g$11702$14YGsk)
        (exp . g$11701$14YGsk)
        (exact? . g$11700$14YGsk)
        (exact-integer-sqrt . g$11699$14YGsk)
        (exact . g$11698$14YGsk)
        (even? . g$11697$14YGsk)
        (error . g$11696$14YGsk)
        (eqv? . g$11695$14YGsk)
        (equal? . g$11694$14YGsk)
        (eq? . g$11693$14YGsk)
        (dynamic-wind . g$11692$14YGsk)
        (div0-and-mod0 . g$11691$14YGsk)
        (mod0 . g$11690$14YGsk)
        (div0 . g$11689$14YGsk)
        (div-and-mod . g$11688$14YGsk)
        (mod . g$11687$14YGsk)
        (div . g$11686$14YGsk)
        (denominator . g$11685$14YGsk)
        (cos . g$11684$14YGsk)
        (cons . g$11683$14YGsk)
        (complex? . g$11682$14YGsk)
        (char? . g$11681$14YGsk)
        (char>? . g$11680$14YGsk)
        (char>=? . g$11679$14YGsk)
        (char=? . g$11678$14YGsk)
        (char<? . g$11677$14YGsk)
        (char<=? . g$11676$14YGsk)
        (char->integer . g$11675$14YGsk)
        (ceiling . g$11674$14YGsk)
        (call-with-values . g$11673$14YGsk)
        (call/cc . g$11672$14YGsk)
        (call-with-current-continuation . g$11671$14YGsk)
        (cddddr . g$5785$14YGsk)
        (cdddar . g$5784$14YGsk)
        (cddadr . g$5783$14YGsk)
        (cddaar . g$5782$14YGsk)
        (cdaddr . g$5781$14YGsk)
        (cdadar . g$5780$14YGsk)
        (cdaadr . g$5779$14YGsk)
        (cdaaar . g$5778$14YGsk)
        (cadddr . g$5777$14YGsk)
        (caddar . g$5776$14YGsk)
        (cadadr . g$5775$14YGsk)
        (cadaar . g$5774$14YGsk)
        (caaddr . g$5773$14YGsk)
        (caadar . g$5772$14YGsk)
        (caaadr . g$5771$14YGsk)
        (caaaar . g$5770$14YGsk)
        (cdddr . g$5769$14YGsk)
        (cddar . g$5768$14YGsk)
        (cdadr . g$5767$14YGsk)
        (cdaar . g$5766$14YGsk)
        (caddr . g$5765$14YGsk)
        (cadar . g$5764$14YGsk)
        (caadr . g$5763$14YGsk)
        (caaar . g$5762$14YGsk)
        (cddr . g$5761$14YGsk)
        (cdar . g$5760$14YGsk)
        (cadr . g$5759$14YGsk)
        (caar . g$5758$14YGsk)
        (cdr . g$11670$14YGsk)
        (car . g$11669$14YGsk)
        (boolean? . g$11668$14YGsk)
        (boolean=? . g$11667$14YGsk)
        (atan . g$11666$14YGsk)
        (assertion-violation . g$11665$14YGsk)
        (asin . g$11664$14YGsk)
        (apply . g$11663$14YGsk)
        (append . g$11662$14YGsk)
        (angle . g$11661$14YGsk)
        (acos . g$11660$14YGsk)
        (abs . g$11659$14YGsk)
        (/ . g$11658$14YGsk)
        (* . g$11657$14YGsk)
        (- . g$11656$14YGsk)
        (+ . g$11655$14YGsk)
        (>= . g$11654$14YGsk)
        (> . g$11653$14YGsk)
        (= . g$11652$14YGsk)
        (<= . g$11651$14YGsk)
        (< . g$11650$14YGsk)
        (make-record-printer . g$11649$14YGsk)
        (eqv-hash . g$11648$14YGsk)
        (eq-hash . g$11647$14YGsk)
        (reverse! . g$11646$14YGsk)
        (make-promise . g$6666$14YGsk)
        (load/args . g$11486$14YGsk)
        (printf . g$7237$14YGsk)
        (fprintf . g$7238$14YGsk)
        (format . g$7239$14YGsk)
        (get-arity . g$11645$14YGsk)
        (gc-collect . g$11644$14YGsk)
        (clr-type? . g$11643$14YGsk)
        (get-clr-type . g$11642$14YGsk)
        (get-command-line . g$11641$14YGsk)
        (vector-append . g$11640$14YGsk)
        (vector-filter . g$11639$14YGsk)
        (vector-reverse! . g$11638$14YGsk)
        (vector-contains? . g$11637$14YGsk)
        (vector-index-of . g$11636$14YGsk)
        (vector-copy . g$11635$14YGsk)
        (vector-binary-search . g$11634$14YGsk)
        (get-output-string . g$11633$14YGsk)
        (open-output-string . g$11632$14YGsk)
        (open-input-string . g$11631$14YGsk)
        (string-format . g$11630$14YGsk)
        (trace-printer . g$11483$14YGsk)
        (make-traced-procedure . g$11629$14YGsk)
        (make-traced-macro . g$7259$14YGsk)
        (assertion-error . g$8546$14YGsk)
        (pmap . g$11628$14YGsk)
        (time-it . g$11627$14YGsk)
        (make-parameter . g$7264$14YGsk)
        (library-locator . g$11626$14YGsk)
        (get-library-paths . g$11625$14YGsk)
        (environment-symbols . g$8527$14YGsk)
        (interaction-environment-symbols . g$8526$14YGsk)
        (library-path . g$7695$14YGsk)
        (library-extensions . g$7696$14YGsk)
        (installed-libraries . g$7716$14YGsk)
        (expand . g$8532$14YGsk)
        (&no-nans . g$11624$14YGsk)
        (&no-infinities . g$11623$14YGsk)
        (&i/o-encoding . g$11622$14YGsk)
        (&i/o-decoding . g$11621$14YGsk)
        (&i/o-port . g$11620$14YGsk)
        (&i/o-file-does-not-exist . g$11619$14YGsk)
        (&i/o-file-already-exists . g$11618$14YGsk)
        (&i/o-file-is-read-only . g$11617$14YGsk)
        (&i/o-file-protection . g$11616$14YGsk)
        (&i/o-filename . g$11615$14YGsk)
        (&i/o-invalid-position . g$11614$14YGsk)
        (&i/o-write . g$11613$14YGsk)
        (&i/o-read . g$11612$14YGsk)
        (&i/o . g$11611$14YGsk)
        (&non-continuable . g$11610$14YGsk)
        (&undefined . g$11609$14YGsk)
        (&syntax . g$11608$14YGsk)
        (&lexical . g$11607$14YGsk)
        (&implementation-restriction . g$11606$14YGsk)
        (&non . g$11605$14YGsk)
        (&who . g$11604$14YGsk)
        (&irritants . g$11603$14YGsk)
        (&assertion . g$11602$14YGsk)
        (&violation . g$11601$14YGsk)
        (&error . g$11600$14YGsk)
        (&serious . g$11599$14YGsk)
        (&warning . g$11598$14YGsk)
        (&message . g$11597$14YGsk)
        (&condition . g$11596$14YGsk)
        (define-condition-type . g$11595$14YGsk)
        (define-enumeration . g$11594$14YGsk)
        (define-record-type . g$11593$14YGsk)
        (parent-rtd . g$11592$14YGsk)
        (nongenerative . g$11591$14YGsk)
        (opaque . g$11590$14YGsk)
        (sealed . g$11589$14YGsk)
        (protocol . g$11588$14YGsk)
        (parent . g$11587$14YGsk)
        (immutable . g$11586$14YGsk)
        (mutable . g$11585$14YGsk)
        (fields . g$11584$14YGsk)
        (error-handling-mode . g$11583$14YGsk)
        (file-options . g$11582$14YGsk)
        (buffer-mode . g$11581$14YGsk)
        (eol-style . g$11580$14YGsk)
        (guard . g$11579$14YGsk)
        (trace-letrec-syntax . g$11578$14YGsk)
        (trace-let-syntax . g$11577$14YGsk)
        (trace-define-syntax . g$11576$14YGsk)
        (trace-define . g$11575$14YGsk)
        (trace-lambda . g$11574$14YGsk)
        (unsyntax-splicing . g$11573$14YGsk)
        (unsyntax . g$11572$14YGsk)
        (unquote-splicing . g$11571$14YGsk)
        (unquote . g$11570$14YGsk)
        (_ . g$11569$14YGsk)
        (else . g$11568$14YGsk)
        (=> . g$11567$14YGsk)
        (... . g$11566$14YGsk)
        (assert . g$11565$14YGsk)
        (endianness . g$11564$14YGsk)
        (delay . g$11563$14YGsk)
        (time . g$11562$14YGsk)
        (or . g$11561$14YGsk)
        (and . g$11560$14YGsk)
        (do . g$11559$14YGsk)
        (cond . g$11558$14YGsk)
        (let* . g$11557$14YGsk)
        (let . g$11556$14YGsk)
        (identifier-syntax . g$11555$14YGsk)
        (with-syntax . g$11554$14YGsk)
        (quasisyntax . g$11553$14YGsk)
        (quasiquote . g$11552$14YGsk)
        (syntax-rules . g$11551$14YGsk)
        (include-into . g$11550$14YGsk)
        (include . g$11549$14YGsk)
        (define-struct . g$11548$14YGsk)
        (let-values . g$11547$14YGsk)
        (let*-values . g$11546$14YGsk)
        (record-constructor-descriptor . g$11545$14YGsk)
        (record-type-descriptor . g$11544$14YGsk)
        (fluid-let-syntax . g$11543$14YGsk)
        (case . g$11542$14YGsk)
        (parameterize . g$11541$14YGsk)
        (unless . g$11540$14YGsk)
        (when . g$11539$14YGsk)
        (if . g$11538$14YGsk)
        (letrec* . g$11537$14YGsk)
        (letrec . g$11536$14YGsk)
        (type-descriptor . g$11535$14YGsk)
        (case-lambda . g$11534$14YGsk)
        (lambda . g$11533$14YGsk)
        (syntax . g$11532$14YGsk)
        (syntax-case . g$11531$14YGsk)
        (quote . g$11530$14YGsk)
        (foreign-call . g$11529$14YGsk)
        (letrec-syntax . g$11528$14YGsk)
        (let-syntax . g$11527$14YGsk)
        (set! . g$11526$14YGsk)
        (import . g$11525$14YGsk)
        (library . g$11524$14YGsk)
        (begin . g$11523$14YGsk)
        (module . g$11522$14YGsk)
        (define-syntax . g$11521$14YGsk)
        (define . g$11520$14YGsk))
      '((g$8425$14YGsk core-prim . ellipsis-map)
        (g$12158$14YGsk core-prim . &no-nans-rcd)
        (g$12157$14YGsk core-prim . &no-nans-rtd)
        (g$12156$14YGsk core-prim . &no-infinities-rcd)
        (g$12155$14YGsk core-prim . &no-infinities-rtd)
        (g$12154$14YGsk core-prim . &i/o-encoding-rcd)
        (g$12153$14YGsk core-prim . &i/o-encoding-rtd)
        (g$12152$14YGsk core-prim . &i/o-decoding-rcd)
        (g$12151$14YGsk core-prim . &i/o-decoding-rtd)
        (g$12150$14YGsk core-prim . &i/o-port-rcd)
        (g$12149$14YGsk core-prim . &i/o-port-rtd)
        (g$12148$14YGsk core-prim . &i/o-file-does-not-exist-rcd)
        (g$12147$14YGsk core-prim . &i/o-file-does-not-exist-rtd)
        (g$12146$14YGsk core-prim . &i/o-file-already-exists-rcd)
        (g$12145$14YGsk core-prim . &i/o-file-already-exists-rtd)
        (g$12144$14YGsk core-prim . &i/o-file-is-read-only-rcd)
        (g$12143$14YGsk core-prim . &i/o-file-is-read-only-rtd)
        (g$12142$14YGsk core-prim . &i/o-file-protection-rcd)
        (g$12141$14YGsk core-prim . &i/o-file-protection-rtd)
        (g$12140$14YGsk core-prim . &i/o-filename-rcd)
        (g$12139$14YGsk core-prim . &i/o-filename-rtd)
        (g$12138$14YGsk core-prim . &i/o-invalid-position-rcd)
        (g$12137$14YGsk core-prim . &i/o-invalid-position-rtd)
        (g$12136$14YGsk core-prim . &i/o-write-rcd)
        (g$12135$14YGsk core-prim . &i/o-write-rtd)
        (g$12134$14YGsk core-prim . &i/o-read-rcd)
        (g$12133$14YGsk core-prim . &i/o-read-rtd)
        (g$12132$14YGsk core-prim . &i/o-rcd)
        (g$12131$14YGsk core-prim . &i/o-rtd)
        (g$12130$14YGsk core-prim . &undefined-rcd)
        (g$12129$14YGsk core-prim . &undefined-rtd)
        (g$12128$14YGsk core-prim . &syntax-rcd)
        (g$12127$14YGsk core-prim . &syntax-rtd)
        (g$12126$14YGsk core-prim . &lexical-rcd)
        (g$12125$14YGsk core-prim . &lexical-rtd)
        (g$12124$14YGsk core-prim . &implementation-restriction-rcd)
        (g$12123$14YGsk core-prim . &implementation-restriction-rtd)
        (g$12122$14YGsk core-prim . &non-continuable-rcd)
        (g$12121$14YGsk core-prim . &non-continuable-rtd)
        (g$12120$14YGsk core-prim . &who-rcd)
        (g$12119$14YGsk core-prim . &who-rtd)
        (g$12118$14YGsk core-prim . &irritants-rcd)
        (g$12117$14YGsk core-prim . &irritants-rtd)
        (g$12116$14YGsk core-prim . &assertion-rcd)
        (g$12115$14YGsk core-prim . &assertion-rtd)
        (g$12114$14YGsk core-prim . &violation-rcd)
        (g$12113$14YGsk core-prim . &violation-rtd)
        (g$12112$14YGsk core-prim . &error-rcd)
        (g$12111$14YGsk core-prim . &error-rtd)
        (g$12110$14YGsk core-prim . &serious-rcd)
        (g$12109$14YGsk core-prim . &serious-rtd)
        (g$12108$14YGsk core-prim . &warning-rcd)
        (g$12107$14YGsk core-prim . &warning-rtd)
        (g$12106$14YGsk core-prim . &message-rcd)
        (g$12105$14YGsk core-prim . &message-rtd)
        (g$12104$14YGsk core-prim . &condition-rcd)
        (g$12103$14YGsk core-prim . &condition-rtd)
        (g$12102$14YGsk core-prim . library-letrec*)
        (g$12101$14YGsk core-prim . annotation-stripped)
        (g$12100$14YGsk core-prim . annotation-source)
        (g$12099$14YGsk core-prim . annotation-expression)
        (g$12098$14YGsk core-prim . annotation?)
        (g$12097$14YGsk core-prim . read-annotated)
        (g$12096$14YGsk core-prim . tanh)
        (g$12095$14YGsk core-prim . cosh)
        (g$12094$14YGsk core-prim . sinh)
        (g$12093$14YGsk core-prim . make-guid)
        (g$12092$14YGsk core-prim . unspecified?)
        (g$12091$14YGsk core-prim . make-trace)
        (g$12090$14YGsk core-prim . make-list)
        (g$12089$14YGsk core-prim . last-pair)
        (g$12088$14YGsk core-prim . load-r5rs)
        (g$12087$14YGsk core-prim . license)
        (g$12086$14YGsk core-prim . stacktrace)
        (g$11488$14YGsk core-prim . ironscheme-build)
        (g$12085$14YGsk core-prim . define-clr-class-internal)
        (g$12084$14YGsk core-prim . clr-field-set!-internal)
        (g$12083$14YGsk core-prim . clr-field-get-internal)
        (g$12082$14YGsk core-prim . clr-cast-internal)
        (g$12081$14YGsk core-prim . clr-call-internal)
        (g$12080$14YGsk core-prim . clr-new-internal)
        (g$12079$14YGsk core-prim . clr-new-array-internal)
        (g$12078$14YGsk core-prim . clr-is-internal)
        (g$12077$14YGsk core-prim . clr-reference-internal)
        (g$12076$14YGsk core-prim . clr-using-internal)
        (g$12075$14YGsk core-prim . clr-clear-usings-internal)
        (g$8547$14YGsk core-prim . syntax-error)
        (g$8420$14YGsk core-prim . syntax-dispatch)
        (g$12074$14YGsk core-prim . compile-core)
        (g$12073$14YGsk core-prim . eval-core)
        (g$12072$14YGsk core-prim . set-symbol-value!)
        (g$12071$14YGsk core-prim . symbol-value)
        (g$12070$14YGsk core-prim . ungensym)
        (g$12069$14YGsk core-prim . gensym)
        (g$12068$14YGsk core-prim . void)
        (g$12067$14YGsk core-prim . load-serialized-library)
        (g$12066$14YGsk core-prim . serialize-library)
        (g$11490$14YGsk core-prim . compile-system-libraries)
        (g$11492$14YGsk core-prim . compile->closure)
        (g$11491$14YGsk core-prim . compile)
        (g$11487$14YGsk core-prim . load)
        (g$8556$14YGsk core-prim . interaction-environment)
        (g$12065$14YGsk core-prim . char-ready?)
        (g$12064$14YGsk core-prim . string-upcase)
        (g$12063$14YGsk core-prim . string-titlecase)
        (g$12062$14YGsk core-prim . string-normalize-nfkd)
        (g$12061$14YGsk core-prim . string-normalize-nfkc)
        (g$12060$14YGsk core-prim . string-normalize-nfd)
        (g$12059$14YGsk core-prim . string-normalize-nfc)
        (g$12058$14YGsk core-prim . string-foldcase)
        (g$12057$14YGsk core-prim . string-downcase)
        (g$12056$14YGsk core-prim . string-ci>?)
        (g$12055$14YGsk core-prim . string-ci>=?)
        (g$12054$14YGsk core-prim . string-ci=?)
        (g$12053$14YGsk core-prim . string-ci<?)
        (g$12052$14YGsk core-prim . string-ci<=?)
        (g$12051$14YGsk core-prim . char-whitespace?)
        (g$12050$14YGsk core-prim . char-upper-case?)
        (g$12049$14YGsk core-prim . char-title-case?)
        (g$12048$14YGsk core-prim . char-numeric?)
        (g$12047$14YGsk core-prim . char-lower-case?)
        (g$12046$14YGsk core-prim . char-general-category)
        (g$12045$14YGsk core-prim . char-upcase)
        (g$12044$14YGsk core-prim . char-titlecase)
        (g$12043$14YGsk core-prim . char-foldcase)
        (g$12042$14YGsk core-prim . char-downcase)
        (g$12041$14YGsk core-prim . char-ci>?)
        (g$12040$14YGsk core-prim . char-ci>=?)
        (g$12039$14YGsk core-prim . char-ci=?)
        (g$12038$14YGsk core-prim . char-ci<?)
        (g$12037$14YGsk core-prim . char-ci<=?)
        (g$12036$14YGsk core-prim . char-alphabetic?)
        (g$8157$14YGsk core-prim . variable-transformer-procedure)
        (g$8156$14YGsk core-prim . variable-transformer?)
        (g$8155$14YGsk core-prim . make-variable-transformer)
        (g$8551$14YGsk core-prim . identifier?)
        (g$8540$14YGsk core-prim . generate-temporaries)
        (g$8541$14YGsk core-prim . free-identifier=?)
        (g$8553$14YGsk core-prim . syntax->datum)
        (g$8552$14YGsk core-prim . datum->syntax)
        (g$8542$14YGsk core-prim . bound-identifier=?)
        (g$12035$14YGsk core-prim . record-type-descriptor?)
        (g$12034$14YGsk core-prim . record-predicate)
        (g$12033$14YGsk core-prim . record-mutator)
        (g$12032$14YGsk core-prim . record-constructor)
        (g$12031$14YGsk core-prim . record-accessor)
        (g$12030$14YGsk core-prim . make-record-type-descriptor)
        (g$12029$14YGsk core-prim . make-record-constructor-descriptor)
        (g$12028$14YGsk core-prim . record?)
        (g$12027$14YGsk core-prim . record-type-uid)
        (g$12026$14YGsk core-prim . record-type-sealed?)
        (g$12025$14YGsk core-prim . record-type-parent)
        (g$12024$14YGsk core-prim . record-type-opaque?)
        (g$12023$14YGsk core-prim . record-type-name)
        (g$12022$14YGsk core-prim . record-type-generative?)
        (g$12021$14YGsk core-prim . record-type-field-names)
        (g$12020$14YGsk core-prim . record-rtd)
        (g$12019$14YGsk core-prim . record-field-mutable?)
        (g$6170$14YGsk core-prim . delete-file)
        (g$6169$14YGsk core-prim . file-exists?)
        (g$12018$14YGsk core-prim . vector-sort!)
        (g$12017$14YGsk core-prim . vector-sort)
        (g$6683$14YGsk core-prim . list-sort)
        (g$12016$14YGsk core-prim . symbol-hash)
        (g$12015$14YGsk core-prim . string-ci-hash)
        (g$12014$14YGsk core-prim . string-hash)
        (g$12013$14YGsk core-prim . equal-hash)
        (g$12012$14YGsk core-prim . hashtable-equivalence-function)
        (g$12011$14YGsk core-prim . make-hashtable)
        (g$12010$14YGsk core-prim . hashtable-hash-function)
        (g$6137$14YGsk core-prim . make-eqv-hashtable)
        (g$6136$14YGsk core-prim . make-eq-hashtable)
        (g$12009$14YGsk core-prim . hashtable?)
        (g$6143$14YGsk core-prim . hashtable-update!)
        (g$6138$14YGsk core-prim . hashtable-size)
        (g$6140$14YGsk core-prim . hashtable-set!)
        (g$6139$14YGsk core-prim . hashtable-ref)
        (g$12008$14YGsk core-prim . hashtable-mutable?)
        (g$12007$14YGsk core-prim . hashtable-keys)
        (g$12006$14YGsk core-prim . hashtable-entries)
        (g$6141$14YGsk core-prim . hashtable-delete!)
        (g$12005$14YGsk core-prim . hashtable-copy)
        (g$6142$14YGsk core-prim . hashtable-contains?)
        (g$6144$14YGsk core-prim . hashtable-clear!)
        (g$7096$14YGsk core-prim . call-with-output-file)
        (g$7095$14YGsk core-prim . call-with-input-file)
        (g$12004$14YGsk core-prim . write-char)
        (g$12003$14YGsk core-prim . write)
        (g$7094$14YGsk core-prim . with-output-to-file)
        (g$7093$14YGsk core-prim . with-input-from-file)
        (g$12002$14YGsk core-prim . read-char)
        (g$12001$14YGsk core-prim . read)
        (g$12000$14YGsk core-prim . peek-char)
        (g$11999$14YGsk core-prim . open-output-file)
        (g$11998$14YGsk core-prim . open-input-file)
        (g$11997$14YGsk core-prim . newline)
        (g$11996$14YGsk core-prim . display)
        (g$11995$14YGsk core-prim . close-output-port)
        (g$11994$14YGsk core-prim . close-input-port)
        (g$11993$14YGsk core-prim . eof-object?)
        (g$11992$14YGsk core-prim . eof-object)
        (g$11991$14YGsk core-prim . current-error-port)
        (g$11990$14YGsk core-prim . current-output-port)
        (g$11989$14YGsk core-prim . current-input-port)
        (g$11988$14YGsk core-prim . output-port?)
        (g$11987$14YGsk core-prim . input-port?)
        (g$11986$14YGsk core-prim . utf-8-codec)
        (g$11985$14YGsk core-prim . utf-16-codec)
        (g$11984$14YGsk core-prim . transcoder-error-handling-mode)
        (g$11983$14YGsk core-prim . transcoder-eol-style)
        (g$11982$14YGsk core-prim . transcoder-codec)
        (g$11981$14YGsk core-prim . transcoded-port)
        (g$11980$14YGsk core-prim . textual-port?)
        (g$11979$14YGsk core-prim . string->bytevector)
        (g$11978$14YGsk core-prim . standard-output-port)
        (g$11977$14YGsk core-prim . standard-input-port)
        (g$11976$14YGsk core-prim . standard-error-port)
        (g$11975$14YGsk core-prim . set-port-position!)
        (g$11974$14YGsk core-prim . put-u8)
        (g$11973$14YGsk core-prim . put-string)
        (g$11972$14YGsk core-prim . put-datum)
        (g$11971$14YGsk core-prim . put-char)
        (g$11970$14YGsk core-prim . put-bytevector)
        (g$7071$14YGsk core-prim . port?)
        (g$11969$14YGsk core-prim . port-transcoder)
        (g$11968$14YGsk core-prim . port-position)
        (g$11967$14YGsk core-prim . port-has-set-port-position!?)
        (g$11966$14YGsk core-prim . port-has-port-position?)
        (g$11965$14YGsk core-prim . port-eof?)
        (g$11964$14YGsk core-prim . output-port-buffer-mode)
        (g$7070$14YGsk core-prim . open-string-output-port)
        (g$11963$14YGsk core-prim . open-string-input-port)
        (g$11962$14YGsk core-prim . open-file-output-port)
        (g$11961$14YGsk core-prim . open-file-input/output-port)
        (g$11960$14YGsk core-prim . open-file-input-port)
        (g$11959$14YGsk core-prim . open-bytevector-output-port)
        (g$11958$14YGsk core-prim . open-bytevector-input-port)
        (g$11957$14YGsk core-prim . native-transcoder)
        (g$11956$14YGsk core-prim . native-eol-style)
        (g$11955$14YGsk core-prim . make-transcoder)
        (g$11954$14YGsk core-prim . latin-1-codec)
        (g$6927$14YGsk core-prim . make-i/o-write-error)
        (g$6913$14YGsk core-prim . make-i/o-read-error)
        (g$7032$14YGsk core-prim . make-i/o-port-error)
        (g$6942$14YGsk core-prim . make-i/o-invalid-position-error)
        (g$6959$14YGsk core-prim . make-i/o-filename-error)
        (g$6975$14YGsk core-prim . make-i/o-file-protection-error)
        (g$6989$14YGsk core-prim . make-i/o-file-is-read-only-error)
        (g$7017$14YGsk core-prim . make-i/o-file-does-not-exist-error)
        (g$7003$14YGsk core-prim . make-i/o-file-already-exists-error)
        (g$6899$14YGsk core-prim . make-i/o-error)
        (g$7063$14YGsk core-prim . make-i/o-encoding-error)
        (g$7048$14YGsk core-prim . make-i/o-decoding-error)
        (g$11953$14YGsk core-prim . make-custom-textual-output-port)
        (g$11952$14YGsk core-prim . make-custom-textual-input/output-port)
        (g$11951$14YGsk core-prim . make-custom-textual-input-port)
        (g$11950$14YGsk core-prim . make-custom-binary-output-port)
        (g$11949$14YGsk core-prim . make-custom-binary-input/output-port)
        (g$11948$14YGsk core-prim . make-custom-binary-input-port)
        (g$11947$14YGsk core-prim . make-bytevector)
        (g$11946$14YGsk core-prim . lookahead-u8)
        (g$11945$14YGsk core-prim . lookahead-char)
        (g$6928$14YGsk core-prim . i/o-write-error?)
        (g$6914$14YGsk core-prim . i/o-read-error?)
        (g$7034$14YGsk core-prim . i/o-port-error?)
        (g$6944$14YGsk core-prim . i/o-invalid-position-error?)
        (g$6945$14YGsk core-prim . i/o-error-position)
        (g$6961$14YGsk core-prim . i/o-filename-error?)
        (g$6976$14YGsk core-prim . i/o-file-protection-error?)
        (g$6990$14YGsk core-prim . i/o-file-is-read-only-error?)
        (g$7018$14YGsk core-prim . i/o-file-does-not-exist-error?)
        (g$7004$14YGsk core-prim . i/o-file-already-exists-error?)
        (g$6900$14YGsk core-prim . i/o-error?)
        (g$7035$14YGsk core-prim . i/o-error-port)
        (g$6962$14YGsk core-prim . i/o-error-filename)
        (g$7065$14YGsk core-prim . i/o-encoding-error?)
        (g$7066$14YGsk core-prim . i/o-encoding-error-char)
        (g$7049$14YGsk core-prim . i/o-decoding-error?)
        (g$11944$14YGsk core-prim . get-u8)
        (g$11943$14YGsk core-prim . get-string-n!)
        (g$11942$14YGsk core-prim . get-string-n)
        (g$11941$14YGsk core-prim . get-string-all)
        (g$11940$14YGsk core-prim . get-line)
        (g$11939$14YGsk core-prim . get-datum)
        (g$11938$14YGsk core-prim . get-char)
        (g$11937$14YGsk core-prim . get-bytevector-some)
        (g$11936$14YGsk core-prim . get-bytevector-n!)
        (g$11935$14YGsk core-prim . get-bytevector-n)
        (g$11934$14YGsk core-prim . get-bytevector-all)
        (g$11933$14YGsk core-prim . flush-output-port)
        (g$11932$14YGsk core-prim . close-port)
        (g$11931$14YGsk core-prim . call-with-string-output-port)
        (g$11930$14YGsk core-prim . call-with-port)
        (g$11929$14YGsk core-prim . call-with-bytevector-output-port)
        (g$11928$14YGsk core-prim . bytevector->string)
        (g$11927$14YGsk core-prim . buffer-mode?)
        (g$11926$14YGsk core-prim . binary-port?)
        (g$8531$14YGsk core-prim . scheme-report-environment)
        (g$6663$14YGsk core-prim . quotient)
        (g$8530$14YGsk core-prim . null-environment)
        (g$6664$14YGsk core-prim . remainder)
        (g$6665$14YGsk core-prim . modulo)
        (g$11925$14YGsk core-prim . inexact->exact)
        (g$6667$14YGsk core-prim . force)
        (g$11924$14YGsk core-prim . exact->inexact)
        (g$11923$14YGsk core-prim . exit)
        (g$11484$14YGsk core-prim . command-line)
        (g$11922$14YGsk core-prim . string-fill!)
        (g$11921$14YGsk core-prim . string-set!)
        (g$11920$14YGsk core-prim . set-cdr!)
        (g$11919$14YGsk core-prim . set-car!)
        (g$6250$14YGsk core-prim . remove)
        (g$6251$14YGsk core-prim . remv)
        (g$6236$14YGsk core-prim . remp)
        (g$6252$14YGsk core-prim . remq)
        (g$6235$14YGsk core-prim . partition)
        (g$11918$14YGsk core-prim . memv)
        (g$11917$14YGsk core-prim . memq)
        (g$6242$14YGsk core-prim . memp)
        (g$6241$14YGsk core-prim . member)
        (g$6246$14YGsk core-prim . exists)
        (g$6245$14YGsk core-prim . for-all)
        (g$6249$14YGsk core-prim . fold-right)
        (g$6248$14YGsk core-prim . fold-left)
        (g$6234$14YGsk core-prim . find)
        (g$6237$14YGsk core-prim . filter)
        (g$6247$14YGsk core-prim . cons*)
        (g$6238$14YGsk core-prim . assv)
        (g$11916$14YGsk core-prim . assq)
        (g$6240$14YGsk core-prim . assp)
        (g$6239$14YGsk core-prim . assoc)
        (g$11915$14YGsk core-prim . with-exception-handler)
        (g$11914$14YGsk core-prim . raise-continuable)
        (g$11913$14YGsk core-prim . raise)
        (g$8533$14YGsk core-prim . eval)
        (g$8529$14YGsk core-prim . environment)
        (g$7153$14YGsk core-prim . make-enumeration)
        (g$7160$14YGsk core-prim . enum-set=?)
        (g$7154$14YGsk core-prim . enum-set-universe)
        (g$7161$14YGsk core-prim . enum-set-union)
        (g$7159$14YGsk core-prim . enum-set-subset?)
        (g$7165$14YGsk core-prim . enum-set-projection)
        (g$7158$14YGsk core-prim . enum-set-member?)
        (g$7162$14YGsk core-prim . enum-set-intersection)
        (g$7155$14YGsk core-prim . enum-set-indexer)
        (g$7163$14YGsk core-prim . enum-set-difference)
        (g$7156$14YGsk core-prim . enum-set-constructor)
        (g$7164$14YGsk core-prim . enum-set-complement)
        (g$7157$14YGsk core-prim . enum-set->list)
        (g$6574$14YGsk core-prim . who-condition?)
        (g$6485$14YGsk core-prim . warning?)
        (g$6527$14YGsk core-prim . violation?)
        (g$6651$14YGsk core-prim . undefined-violation?)
        (g$6635$14YGsk core-prim . syntax-violation?)
        (g$6637$14YGsk core-prim . syntax-violation-subform)
        (g$6636$14YGsk core-prim . syntax-violation-form)
        (g$8550$14YGsk core-prim . syntax-violation)
        (g$11912$14YGsk core-prim . simple-conditions)
        (g$6499$14YGsk core-prim . serious-condition?)
        (g$6589$14YGsk core-prim . non-continuable-violation?)
        (g$6470$14YGsk core-prim . message-condition?)
        (g$6572$14YGsk core-prim . make-who-condition)
        (g$6484$14YGsk core-prim . make-warning)
        (g$6526$14YGsk core-prim . make-violation)
        (g$6650$14YGsk core-prim . make-undefined-violation)
        (g$6632$14YGsk core-prim . make-syntax-violation)
        (g$6498$14YGsk core-prim . make-serious-condition)
        (g$6588$14YGsk core-prim . make-non-continuable-violation)
        (g$6468$14YGsk core-prim . make-message-condition)
        (g$6616$14YGsk core-prim . make-lexical-violation)
        (g$6555$14YGsk core-prim . make-irritants-condition)
        (g$6602$14YGsk core-prim . make-implementation-restriction-violation)
        (g$6512$14YGsk core-prim . make-error)
        (g$6540$14YGsk core-prim . make-assertion-violation)
        (g$6617$14YGsk core-prim . lexical-violation?)
        (g$6557$14YGsk core-prim . irritants-condition?)
        (g$6603$14YGsk core-prim . implementation-restriction-violation?)
        (g$6513$14YGsk core-prim . error?)
        (g$6575$14YGsk core-prim . condition-who)
        (g$11911$14YGsk core-prim . condition-predicate)
        (g$6471$14YGsk core-prim . condition-message)
        (g$6558$14YGsk core-prim . condition-irritants)
        (g$11910$14YGsk core-prim . condition-accessor)
        (g$11909$14YGsk core-prim . condition)
        (g$6541$14YGsk core-prim . assertion-violation?)
        (g$11908$14YGsk core-prim . condition?)
        (g$11907$14YGsk core-prim . utf32->string)
        (g$11906$14YGsk core-prim . utf16->string)
        (g$11905$14YGsk core-prim . utf8->string)
        (g$11904$14YGsk core-prim . uint-list->bytevector)
        (g$11903$14YGsk core-prim . u8-list->bytevector)
        (g$11902$14YGsk core-prim . string->utf8)
        (g$11901$14YGsk core-prim . string->utf32)
        (g$11900$14YGsk core-prim . string->utf16)
        (g$11899$14YGsk core-prim . sint-list->bytevector)
        (g$6326$14YGsk core-prim . native-endianness)
        (g$11898$14YGsk core-prim . bytevector?)
        (g$11897$14YGsk core-prim . bytevector=?)
        (g$11896$14YGsk core-prim . bytevector-uint-set!)
        (g$11895$14YGsk core-prim . bytevector-uint-ref)
        (g$11894$14YGsk core-prim . bytevector-u8-set!)
        (g$11893$14YGsk core-prim . bytevector-u8-ref)
        (g$6347$14YGsk core-prim . bytevector-u64-set!)
        (g$6343$14YGsk core-prim . bytevector-u64-ref)
        (g$6349$14YGsk core-prim . bytevector-u64-native-set!)
        (g$6345$14YGsk core-prim . bytevector-u64-native-ref)
        (g$6339$14YGsk core-prim . bytevector-u32-set!)
        (g$6335$14YGsk core-prim . bytevector-u32-ref)
        (g$6341$14YGsk core-prim . bytevector-u32-native-set!)
        (g$6337$14YGsk core-prim . bytevector-u32-native-ref)
        (g$6331$14YGsk core-prim . bytevector-u16-set!)
        (g$6327$14YGsk core-prim . bytevector-u16-ref)
        (g$6333$14YGsk core-prim . bytevector-u16-native-set!)
        (g$6329$14YGsk core-prim . bytevector-u16-native-ref)
        (g$11892$14YGsk core-prim . bytevector-sint-set!)
        (g$11891$14YGsk core-prim . bytevector-sint-ref)
        (g$11890$14YGsk core-prim . bytevector-s8-set!)
        (g$11889$14YGsk core-prim . bytevector-s8-ref)
        (g$6348$14YGsk core-prim . bytevector-s64-set!)
        (g$6344$14YGsk core-prim . bytevector-s64-ref)
        (g$6350$14YGsk core-prim . bytevector-s64-native-set!)
        (g$6346$14YGsk core-prim . bytevector-s64-native-ref)
        (g$6340$14YGsk core-prim . bytevector-s32-set!)
        (g$6336$14YGsk core-prim . bytevector-s32-ref)
        (g$6342$14YGsk core-prim . bytevector-s32-native-set!)
        (g$6338$14YGsk core-prim . bytevector-s32-native-ref)
        (g$6332$14YGsk core-prim . bytevector-s16-set!)
        (g$6328$14YGsk core-prim . bytevector-s16-ref)
        (g$6334$14YGsk core-prim . bytevector-s16-native-set!)
        (g$6330$14YGsk core-prim . bytevector-s16-native-ref)
        (g$11888$14YGsk core-prim . bytevector-length)
        (g$11887$14YGsk core-prim . bytevector-ieee-single-set!)
        (g$11886$14YGsk core-prim . bytevector-ieee-single-ref)
        (g$6353$14YGsk core-prim . bytevector-ieee-single-native-set!)
        (g$6351$14YGsk core-prim . bytevector-ieee-single-native-ref)
        (g$11885$14YGsk core-prim . bytevector-ieee-double-set!)
        (g$11884$14YGsk core-prim . bytevector-ieee-double-ref)
        (g$6354$14YGsk core-prim . bytevector-ieee-double-native-set!)
        (g$6352$14YGsk core-prim . bytevector-ieee-double-native-ref)
        (g$11883$14YGsk core-prim . bytevector-fill!)
        (g$11882$14YGsk core-prim . bytevector-copy!)
        (g$11881$14YGsk core-prim . bytevector-copy)
        (g$11880$14YGsk core-prim . bytevector->uint-list)
        (g$11879$14YGsk core-prim . bytevector->u8-list)
        (g$11878$14YGsk core-prim . bytevector->sint-list)
        (g$6885$14YGsk core-prim . no-nans-violation?)
        (g$6871$14YGsk core-prim . no-infinities-violation?)
        (g$6884$14YGsk core-prim . make-no-nans-violation)
        (g$6870$14YGsk core-prim . make-no-infinities-violation)
        (g$11877$14YGsk core-prim . real->flonum)
        (g$11876$14YGsk core-prim . flzero?)
        (g$11875$14YGsk core-prim . fltruncate)
        (g$11874$14YGsk core-prim . fltan)
        (g$11873$14YGsk core-prim . flsqrt)
        (g$11872$14YGsk core-prim . flsin)
        (g$11871$14YGsk core-prim . flround)
        (g$11870$14YGsk core-prim . flpositive?)
        (g$11869$14YGsk core-prim . flonum?)
        (g$11868$14YGsk core-prim . flodd?)
        (g$11867$14YGsk core-prim . flnumerator)
        (g$11866$14YGsk core-prim . flnegative?)
        (g$11865$14YGsk core-prim . flnan?)
        (g$11864$14YGsk core-prim . flmod0)
        (g$11863$14YGsk core-prim . flmod)
        (g$11862$14YGsk core-prim . flmin)
        (g$11861$14YGsk core-prim . flmax)
        (g$11860$14YGsk core-prim . fllog)
        (g$11859$14YGsk core-prim . flinteger?)
        (g$11858$14YGsk core-prim . flinfinite?)
        (g$11857$14YGsk core-prim . flfloor)
        (g$11856$14YGsk core-prim . flfinite?)
        (g$11855$14YGsk core-prim . flexpt)
        (g$11854$14YGsk core-prim . flexp)
        (g$11853$14YGsk core-prim . fleven?)
        (g$11852$14YGsk core-prim . fldiv0-and-mod0)
        (g$11851$14YGsk core-prim . fldiv0)
        (g$11850$14YGsk core-prim . fldiv-and-mod)
        (g$11849$14YGsk core-prim . fldiv)
        (g$11848$14YGsk core-prim . fldenominator)
        (g$11847$14YGsk core-prim . flcos)
        (g$11846$14YGsk core-prim . flceiling)
        (g$11845$14YGsk core-prim . flatan)
        (g$11844$14YGsk core-prim . flasin)
        (g$11843$14YGsk core-prim . flacos)
        (g$11842$14YGsk core-prim . flabs)
        (g$11841$14YGsk core-prim . fl>?)
        (g$11840$14YGsk core-prim . fl>=?)
        (g$11839$14YGsk core-prim . fl=?)
        (g$11838$14YGsk core-prim . fl<?)
        (g$11837$14YGsk core-prim . fl<=?)
        (g$11836$14YGsk core-prim . fl/)
        (g$11835$14YGsk core-prim . fl-)
        (g$11834$14YGsk core-prim . fl+)
        (g$11833$14YGsk core-prim . fl*)
        (g$11832$14YGsk core-prim . fixnum->flonum)
        (g$11831$14YGsk core-prim . fxzero?)
        (g$11830$14YGsk core-prim . fxxor)
        (g$6816$14YGsk core-prim . fxrotate-bit-field)
        (g$11829$14YGsk core-prim . fxreverse-bit-field)
        (g$11828$14YGsk core-prim . fxpositive?)
        (g$11827$14YGsk core-prim . fxodd?)
        (g$11826$14YGsk core-prim . fxnot)
        (g$11825$14YGsk core-prim . fxnegative?)
        (g$11824$14YGsk core-prim . fxmod0)
        (g$11823$14YGsk core-prim . fxmod)
        (g$11822$14YGsk core-prim . fxmin)
        (g$11821$14YGsk core-prim . fxmax)
        (g$11820$14YGsk core-prim . fxlength)
        (g$11819$14YGsk core-prim . fxior)
        (g$6810$14YGsk core-prim . fxif)
        (g$11818$14YGsk core-prim . fxfirst-bit-set)
        (g$11817$14YGsk core-prim . fxeven?)
        (g$11816$14YGsk core-prim . fxdiv0-and-mod0)
        (g$11815$14YGsk core-prim . fxdiv0)
        (g$11814$14YGsk core-prim . fxdiv-and-mod)
        (g$11813$14YGsk core-prim . fxdiv)
        (g$6813$14YGsk core-prim . fxcopy-bit-field)
        (g$6811$14YGsk core-prim . fxcopy-bit)
        (g$11812$14YGsk core-prim . fxbit-set?)
        (g$6812$14YGsk core-prim . fxbit-field)
        (g$11811$14YGsk core-prim . fxbit-count)
        (g$6815$14YGsk core-prim . fxarithmetic-shift-right)
        (g$6814$14YGsk core-prim . fxarithmetic-shift-left)
        (g$11810$14YGsk core-prim . fxarithmetic-shift)
        (g$11809$14YGsk core-prim . fxand)
        (g$11808$14YGsk core-prim . fx>?)
        (g$11807$14YGsk core-prim . fx>=?)
        (g$11806$14YGsk core-prim . fx=?)
        (g$11805$14YGsk core-prim . fx<?)
        (g$11804$14YGsk core-prim . fx<=?)
        (g$11803$14YGsk core-prim . fx-/carry)
        (g$11802$14YGsk core-prim . fx-)
        (g$11801$14YGsk core-prim . fx+/carry)
        (g$11800$14YGsk core-prim . fx+)
        (g$11799$14YGsk core-prim . fx*/carry)
        (g$11798$14YGsk core-prim . fx*)
        (g$11797$14YGsk core-prim . greatest-fixnum)
        (g$11796$14YGsk core-prim . least-fixnum)
        (g$11795$14YGsk core-prim . fixnum-width)
        (g$11794$14YGsk core-prim . fixnum?)
        (g$6768$14YGsk core-prim . bitwise-rotate-bit-field)
        (g$11793$14YGsk core-prim . bitwise-reverse-bit-field)
        (g$11792$14YGsk core-prim . bitwise-length)
        (g$6762$14YGsk core-prim . bitwise-if)
        (g$11791$14YGsk core-prim . bitwise-first-bit-set)
        (g$6765$14YGsk core-prim . bitwise-copy-bit-field)
        (g$6763$14YGsk core-prim . bitwise-copy-bit)
        (g$11790$14YGsk core-prim . bitwise-bit-set?)
        (g$11789$14YGsk core-prim . bitwise-bit-field)
        (g$11788$14YGsk core-prim . bitwise-bit-count)
        (g$11787$14YGsk core-prim . bitwise-xor)
        (g$11786$14YGsk core-prim . bitwise-ior)
        (g$11785$14YGsk core-prim . bitwise-and)
        (g$11784$14YGsk core-prim . bitwise-not)
        (g$6767$14YGsk core-prim . bitwise-arithmetic-shift-right)
        (g$6766$14YGsk core-prim . bitwise-arithmetic-shift-left)
        (g$11783$14YGsk core-prim . bitwise-arithmetic-shift)
        (g$11782$14YGsk core-prim . zero?)
        (g$11781$14YGsk core-prim . vector?)
        (g$11780$14YGsk core-prim . vector-set!)
        (g$11779$14YGsk core-prim . vector-ref)
        (g$11778$14YGsk core-prim . vector-map)
        (g$11777$14YGsk core-prim . vector-length)
        (g$11776$14YGsk core-prim . vector-for-each)
        (g$11775$14YGsk core-prim . vector-fill!)
        (g$11774$14YGsk core-prim . vector->list)
        (g$11773$14YGsk core-prim . vector)
        (g$11772$14YGsk core-prim . values)
        (g$11771$14YGsk core-prim . truncate)
        (g$11770$14YGsk core-prim . tan)
        (g$11769$14YGsk core-prim . symbol?)
        (g$11768$14YGsk core-prim . symbol=?)
        (g$11767$14YGsk core-prim . symbol->string)
        (g$11766$14YGsk core-prim . substring)
        (g$11765$14YGsk core-prim . string?)
        (g$11764$14YGsk core-prim . string>?)
        (g$11763$14YGsk core-prim . string>=?)
        (g$11762$14YGsk core-prim . string=?)
        (g$11761$14YGsk core-prim . string<?)
        (g$11760$14YGsk core-prim . string<=?)
        (g$11759$14YGsk core-prim . string-ref)
        (g$11758$14YGsk core-prim . string-length)
        (g$11757$14YGsk core-prim . string-for-each)
        (g$11756$14YGsk core-prim . string-copy)
        (g$11755$14YGsk core-prim . string-append)
        (g$11754$14YGsk core-prim . string->symbol)
        (g$11753$14YGsk core-prim . string->number)
        (g$11752$14YGsk core-prim . string->list)
        (g$11751$14YGsk core-prim . string)
        (g$11750$14YGsk core-prim . sqrt)
        (g$11749$14YGsk core-prim . sin)
        (g$11748$14YGsk core-prim . round)
        (g$11747$14YGsk core-prim . reverse)
        (g$11746$14YGsk core-prim . real?)
        (g$11745$14YGsk core-prim . real-valued?)
        (g$11744$14YGsk core-prim . real-part)
        (g$5786$14YGsk core-prim . rationalize)
        (g$11743$14YGsk core-prim . rational?)
        (g$11742$14YGsk core-prim . rational-valued?)
        (g$11741$14YGsk core-prim . procedure?)
        (g$11740$14YGsk core-prim . positive?)
        (g$11739$14YGsk core-prim . pair?)
        (g$11738$14YGsk core-prim . odd?)
        (g$11737$14YGsk core-prim . numerator)
        (g$11736$14YGsk core-prim . number?)
        (g$11735$14YGsk core-prim . number->string)
        (g$11734$14YGsk core-prim . null?)
        (g$11733$14YGsk core-prim . not)
        (g$11732$14YGsk core-prim . negative?)
        (g$11731$14YGsk core-prim . nan?)
        (g$11730$14YGsk core-prim . min)
        (g$11729$14YGsk core-prim . max)
        (g$11728$14YGsk core-prim . map)
        (g$11727$14YGsk core-prim . make-vector)
        (g$11726$14YGsk core-prim . make-string)
        (g$11725$14YGsk core-prim . make-rectangular)
        (g$11724$14YGsk core-prim . make-polar)
        (g$11723$14YGsk core-prim . magnitude)
        (g$11722$14YGsk core-prim . log)
        (g$11721$14YGsk core-prim . list?)
        (g$11720$14YGsk core-prim . list-tail)
        (g$11719$14YGsk core-prim . list-ref)
        (g$11718$14YGsk core-prim . list->vector)
        (g$11717$14YGsk core-prim . list->string)
        (g$11716$14YGsk core-prim . list)
        (g$11715$14YGsk core-prim . length)
        (g$11714$14YGsk core-prim . lcm)
        (g$11713$14YGsk core-prim . integer?)
        (g$11712$14YGsk core-prim . integer-valued?)
        (g$11711$14YGsk core-prim . integer->char)
        (g$11710$14YGsk core-prim . infinite?)
        (g$11709$14YGsk core-prim . inexact?)
        (g$11708$14YGsk core-prim . inexact)
        (g$11707$14YGsk core-prim . imag-part)
        (g$11706$14YGsk core-prim . gcd)
        (g$11705$14YGsk core-prim . for-each)
        (g$11704$14YGsk core-prim . floor)
        (g$11703$14YGsk core-prim . finite?)
        (g$11702$14YGsk core-prim . expt)
        (g$11701$14YGsk core-prim . exp)
        (g$11700$14YGsk core-prim . exact?)
        (g$11699$14YGsk core-prim . exact-integer-sqrt)
        (g$11698$14YGsk core-prim . exact)
        (g$11697$14YGsk core-prim . even?)
        (g$11696$14YGsk core-prim . error)
        (g$11695$14YGsk core-prim . eqv?)
        (g$11694$14YGsk core-prim . equal?)
        (g$11693$14YGsk core-prim . eq?)
        (g$11692$14YGsk core-prim . dynamic-wind)
        (g$11691$14YGsk core-prim . div0-and-mod0)
        (g$11690$14YGsk core-prim . mod0)
        (g$11689$14YGsk core-prim . div0)
        (g$11688$14YGsk core-prim . div-and-mod)
        (g$11687$14YGsk core-prim . mod)
        (g$11686$14YGsk core-prim . div)
        (g$11685$14YGsk core-prim . denominator)
        (g$11684$14YGsk core-prim . cos)
        (g$11683$14YGsk core-prim . cons)
        (g$11682$14YGsk core-prim . complex?)
        (g$11681$14YGsk core-prim . char?)
        (g$11680$14YGsk core-prim . char>?)
        (g$11679$14YGsk core-prim . char>=?)
        (g$11678$14YGsk core-prim . char=?)
        (g$11677$14YGsk core-prim . char<?)
        (g$11676$14YGsk core-prim . char<=?)
        (g$11675$14YGsk core-prim . char->integer)
        (g$11674$14YGsk core-prim . ceiling)
        (g$11673$14YGsk core-prim . call-with-values)
        (g$11672$14YGsk core-prim . call/cc)
        (g$11671$14YGsk core-prim . call-with-current-continuation)
        (g$5785$14YGsk core-prim . cddddr)
        (g$5784$14YGsk core-prim . cdddar)
        (g$5783$14YGsk core-prim . cddadr)
        (g$5782$14YGsk core-prim . cddaar)
        (g$5781$14YGsk core-prim . cdaddr)
        (g$5780$14YGsk core-prim . cdadar)
        (g$5779$14YGsk core-prim . cdaadr)
        (g$5778$14YGsk core-prim . cdaaar)
        (g$5777$14YGsk core-prim . cadddr)
        (g$5776$14YGsk core-prim . caddar)
        (g$5775$14YGsk core-prim . cadadr)
        (g$5774$14YGsk core-prim . cadaar)
        (g$5773$14YGsk core-prim . caaddr)
        (g$5772$14YGsk core-prim . caadar)
        (g$5771$14YGsk core-prim . caaadr)
        (g$5770$14YGsk core-prim . caaaar)
        (g$5769$14YGsk core-prim . cdddr)
        (g$5768$14YGsk core-prim . cddar)
        (g$5767$14YGsk core-prim . cdadr)
        (g$5766$14YGsk core-prim . cdaar)
        (g$5765$14YGsk core-prim . caddr)
        (g$5764$14YGsk core-prim . cadar)
        (g$5763$14YGsk core-prim . caadr)
        (g$5762$14YGsk core-prim . caaar)
        (g$5761$14YGsk core-prim . cddr)
        (g$5760$14YGsk core-prim . cdar)
        (g$5759$14YGsk core-prim . cadr)
        (g$5758$14YGsk core-prim . caar)
        (g$11670$14YGsk core-prim . cdr)
        (g$11669$14YGsk core-prim . car)
        (g$11668$14YGsk core-prim . boolean?)
        (g$11667$14YGsk core-prim . boolean=?)
        (g$11666$14YGsk core-prim . atan)
        (g$11665$14YGsk core-prim . assertion-violation)
        (g$11664$14YGsk core-prim . asin)
        (g$11663$14YGsk core-prim . apply)
        (g$11662$14YGsk core-prim . append)
        (g$11661$14YGsk core-prim . angle)
        (g$11660$14YGsk core-prim . acos)
        (g$11659$14YGsk core-prim . abs)
        (g$11658$14YGsk core-prim . /)
        (g$11657$14YGsk core-prim . *)
        (g$11656$14YGsk core-prim . -)
        (g$11655$14YGsk core-prim . +)
        (g$11654$14YGsk core-prim . >=)
        (g$11653$14YGsk core-prim . >)
        (g$11652$14YGsk core-prim . =)
        (g$11651$14YGsk core-prim . <=)
        (g$11650$14YGsk core-prim . <)
        (g$11649$14YGsk core-prim . make-record-printer)
        (g$11648$14YGsk core-prim . eqv-hash)
        (g$11647$14YGsk core-prim . eq-hash)
        (g$11646$14YGsk core-prim . reverse!)
        (g$6666$14YGsk core-prim . make-promise)
        (g$11486$14YGsk core-prim . load/args)
        (g$7237$14YGsk core-prim . printf)
        (g$7238$14YGsk core-prim . fprintf)
        (g$7239$14YGsk core-prim . format)
        (g$11645$14YGsk core-prim . get-arity)
        (g$11644$14YGsk core-prim . gc-collect)
        (g$11643$14YGsk core-prim . clr-type?)
        (g$11642$14YGsk core-prim . get-clr-type)
        (g$11641$14YGsk core-prim . get-command-line)
        (g$11640$14YGsk core-prim . vector-append)
        (g$11639$14YGsk core-prim . vector-filter)
        (g$11638$14YGsk core-prim . vector-reverse!)
        (g$11637$14YGsk core-prim . vector-contains?)
        (g$11636$14YGsk core-prim . vector-index-of)
        (g$11635$14YGsk core-prim . vector-copy)
        (g$11634$14YGsk core-prim . vector-binary-search)
        (g$11633$14YGsk core-prim . get-output-string)
        (g$11632$14YGsk core-prim . open-output-string)
        (g$11631$14YGsk core-prim . open-input-string)
        (g$11630$14YGsk core-prim . string-format)
        (g$11483$14YGsk core-prim . trace-printer)
        (g$11629$14YGsk core-prim . make-traced-procedure)
        (g$7259$14YGsk core-prim . make-traced-macro)
        (g$8546$14YGsk core-prim . assertion-error)
        (g$11628$14YGsk core-prim . pmap)
        (g$11627$14YGsk core-prim . time-it)
        (g$7264$14YGsk core-prim . make-parameter)
        (g$11626$14YGsk core-prim . library-locator)
        (g$11625$14YGsk core-prim . get-library-paths)
        (g$8527$14YGsk core-prim . environment-symbols)
        (g$8526$14YGsk core-prim . interaction-environment-symbols)
        (g$7695$14YGsk core-prim . library-path)
        (g$7696$14YGsk core-prim . library-extensions)
        (g$7716$14YGsk core-prim . installed-libraries)
        (g$8532$14YGsk core-prim . expand)
        (g$11624$14YGsk $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11623$14YGsk $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11622$14YGsk $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11621$14YGsk $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11620$14YGsk $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11619$14YGsk
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11618$14YGsk
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11617$14YGsk
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11616$14YGsk
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11615$14YGsk $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11614$14YGsk
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11613$14YGsk $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11612$14YGsk $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11611$14YGsk $core-rtd &i/o-rtd &i/o-rcd)
        (g$11610$14YGsk $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11609$14YGsk $core-rtd &undefined-rtd &undefined-rcd)
        (g$11608$14YGsk $core-rtd &syntax-rtd &syntax-rcd)
        (g$11607$14YGsk $core-rtd &lexical-rtd &lexical-rcd)
        (g$11606$14YGsk
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11605$14YGsk $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11604$14YGsk $core-rtd &who-rtd &who-rcd)
        (g$11603$14YGsk $core-rtd &irritants-rtd &irritants-rcd)
        (g$11602$14YGsk $core-rtd &assertion-rtd &assertion-rcd)
        (g$11601$14YGsk $core-rtd &violation-rtd &violation-rcd)
        (g$11600$14YGsk $core-rtd &error-rtd &error-rcd)
        (g$11599$14YGsk $core-rtd &serious-rtd &serious-rcd)
        (g$11598$14YGsk $core-rtd &warning-rtd &warning-rcd)
        (g$11597$14YGsk $core-rtd &message-rtd &message-rcd)
        (g$11596$14YGsk $core-rtd &condition-rtd &condition-rcd)
        (g$11595$14YGsk macro . define-condition-type)
        (g$11594$14YGsk macro . define-enumeration)
        (g$11593$14YGsk macro . define-record-type)
        (g$11592$14YGsk macro . parent-rtd)
        (g$11591$14YGsk macro . nongenerative)
        (g$11590$14YGsk macro . opaque)
        (g$11589$14YGsk macro . sealed)
        (g$11588$14YGsk macro . protocol)
        (g$11587$14YGsk macro . parent)
        (g$11586$14YGsk macro . immutable)
        (g$11585$14YGsk macro . mutable)
        (g$11584$14YGsk macro . fields)
        (g$11583$14YGsk macro . error-handling-mode)
        (g$11582$14YGsk macro . file-options)
        (g$11581$14YGsk macro . buffer-mode)
        (g$11580$14YGsk macro . eol-style)
        (g$11579$14YGsk macro . guard)
        (g$11578$14YGsk macro . trace-letrec-syntax)
        (g$11577$14YGsk macro . trace-let-syntax)
        (g$11576$14YGsk macro . trace-define-syntax)
        (g$11575$14YGsk macro . trace-define)
        (g$11574$14YGsk macro . trace-lambda)
        (g$11573$14YGsk macro . unsyntax-splicing)
        (g$11572$14YGsk macro . unsyntax)
        (g$11571$14YGsk macro . unquote-splicing)
        (g$11570$14YGsk macro . unquote)
        (g$11569$14YGsk macro . _)
        (g$11568$14YGsk macro . else)
        (g$11567$14YGsk macro . =>)
        (g$11566$14YGsk macro . ...)
        (g$11565$14YGsk macro . assert)
        (g$11564$14YGsk macro . endianness)
        (g$11563$14YGsk macro . delay)
        (g$11562$14YGsk macro . time)
        (g$11561$14YGsk macro . or)
        (g$11560$14YGsk macro . and)
        (g$11559$14YGsk macro . do)
        (g$11558$14YGsk macro . cond)
        (g$11557$14YGsk macro . let*)
        (g$11556$14YGsk macro . let)
        (g$11555$14YGsk macro . identifier-syntax)
        (g$11554$14YGsk macro . with-syntax)
        (g$11553$14YGsk macro . quasisyntax)
        (g$11552$14YGsk macro . quasiquote)
        (g$11551$14YGsk macro . syntax-rules)
        (g$11550$14YGsk macro . include-into)
        (g$11549$14YGsk macro . include)
        (g$11548$14YGsk macro . define-struct)
        (g$11547$14YGsk macro . let-values)
        (g$11546$14YGsk macro . let*-values)
        (g$11545$14YGsk core-macro . record-constructor-descriptor)
        (g$11544$14YGsk core-macro . record-type-descriptor)
        (g$11543$14YGsk core-macro . fluid-let-syntax)
        (g$11542$14YGsk macro . case)
        (g$11541$14YGsk macro . parameterize)
        (g$11540$14YGsk macro . unless)
        (g$11539$14YGsk macro . when)
        (g$11538$14YGsk core-macro . if)
        (g$11537$14YGsk core-macro . letrec*)
        (g$11536$14YGsk core-macro . letrec)
        (g$11535$14YGsk core-macro . type-descriptor)
        (g$11534$14YGsk core-macro . case-lambda)
        (g$11533$14YGsk core-macro . lambda)
        (g$11532$14YGsk core-macro . syntax)
        (g$11531$14YGsk core-macro . syntax-case)
        (g$11530$14YGsk core-macro . quote)
        (g$11529$14YGsk core-macro . foreign-call)
        (g$11528$14YGsk letrec-syntax)
        (g$11527$14YGsk let-syntax)
        (g$11526$14YGsk set!)
        (g$11525$14YGsk import)
        (g$11524$14YGsk library)
        (g$11523$14YGsk begin)
        (g$11522$14YGsk module)
        (g$11521$14YGsk define-syntax)
        (g$11520$14YGsk define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6928$14YGsk
      'g$12195$14YGsk
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12074$14YGsk)
        (eval-core . g$12073$14YGsk)
        (set-symbol-value! . g$12072$14YGsk)
        (symbol-value . g$12071$14YGsk)
        (gensym . g$12069$14YGsk)
        (void . g$12068$14YGsk))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$10946$14YGsk
     g$trace-printer$10986$14YGsk
     (g$make-parameter$6382$14YGsk write))
   (g$command-line$10947$14YGsk
     g$command-line$10987$14YGsk
     (g$make-parameter$6382$14YGsk (get-command-line)))
   (g$local-library-path$10948$14YGsk
     g$local-library-path$10988$14YGsk
     (case-lambda
       ((g$filename$10959$14YGsk)
        (cons
          (g$get-directory-name$5242$14YGsk g$filename$10959$14YGsk)
          (g$library-path$6912$14YGsk)))))
   (g$load/args$10949$14YGsk
     g$load/args$10989$14YGsk
     (case-lambda
       ((g$filename$10960$14YGsk . g$args$10961$14YGsk)
        (begin
          (apply
            g$load-r6rs-top-level$10956$14YGsk
            g$filename$10960$14YGsk
            'load
            g$args$10961$14YGsk)
          (void)))))
   (g$load$10950$14YGsk
     g$load$10990$14YGsk
     (case-lambda
       ((g$filename$10962$14YGsk)
        (begin
          (apply
            g$load-r6rs-top-level$10956$14YGsk
            g$filename$10962$14YGsk
            'load
            (cdr (g$command-line$10947$14YGsk)))
          (void)))))
   (g$ironscheme-build$10951$14YGsk
     g$ironscheme-build$10991$14YGsk
     (case-lambda (() (g$load$10950$14YGsk '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$10952$14YGsk
     g$eval-top-level$10992$14YGsk
     (case-lambda
       ((g$x$10963$14YGsk)
        (g$eval$10921$14YGsk
          g$x$10963$14YGsk
          (g$interaction-environment$10944$14YGsk)))))
   (g$compile-system-libraries$10953$14YGsk
     g$compile-system-libraries$10993$14YGsk
     (case-lambda
       (()
        (g$eval-top-level$10952$14YGsk
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$10954$14YGsk
     g$compile$10994$14YGsk
     (case-lambda
       ((g$filename$10964$14YGsk)
        (g$load-r6rs-top-level$10956$14YGsk g$filename$10964$14YGsk 'compile))))
   (g$compile->closure$10955$14YGsk
     g$compile->closure$10995$14YGsk
     (case-lambda
       ((g$filename$10965$14YGsk)
        (g$load-r6rs-top-level$10956$14YGsk g$filename$10965$14YGsk 'closure))))
   (g$load-r6rs-top-level$10956$14YGsk
     g$load-r6rs-top-level$10996$14YGsk
     (case-lambda
       ((g$filename$10966$14YGsk g$how$10967$14YGsk . g$args$10968$14YGsk)
        ((case-lambda
           ((g$library-path$10971$14YGsk g$library-path$10972$14YGsk)
            ((case-lambda
               ((g$swap$10973$14YGsk)
                (dynamic-wind
                  g$swap$10973$14YGsk
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$10974$14YGsk)
                         ((case-lambda
                            ((g$t$10975$14YGsk)
                             (if (memv g$t$10975$14YGsk '(closure))
                               (g$pre-compile-r6rs-top-level$10943$14YGsk
                                 g$x*$10974$14YGsk)
                               (if (memv g$t$10975$14YGsk '(load))
                                 ((case-lambda
                                    ((g$command-line$10978$14YGsk
                                       g$command-line$10979$14YGsk)
                                     ((case-lambda
                                        ((g$swap$10980$14YGsk)
                                         (dynamic-wind
                                           g$swap$10980$14YGsk
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$10942$14YGsk
                                                 g$x*$10974$14YGsk))))
                                           g$swap$10980$14YGsk)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$10981$14YGsk)
                                             (begin
                                               (g$command-line$10978$14YGsk
                                                 g$command-line$10979$14YGsk)
                                               (set! g$command-line$10979$14YGsk
                                                 g$t$10981$14YGsk))))
                                          (g$command-line$10978$14YGsk)))))))
                                  g$command-line$10947$14YGsk
                                  (cons
                                    g$filename$10966$14YGsk
                                    (map (case-lambda
                                           ((g$x$10982$14YGsk)
                                            (g$format$6297$14YGsk
                                              '"~a"
                                              g$x$10982$14YGsk)))
                                         g$args$10968$14YGsk)))
                                 (if (memv g$t$10975$14YGsk '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$10942$14YGsk
                                       g$x*$10974$14YGsk)
                                     (g$serialize-all$6916$14YGsk
                                       serialize-library
                                       g$compile-core-expr$6630$14YGsk))
                                   (if '#f '#f (void)))))))
                          g$how$10967$14YGsk)))
                      (g$with-input-from-file$6128$14YGsk
                        g$filename$10966$14YGsk
                        (case-lambda
                          (()
                           ((letrec ((g$f$10983$14YGsk
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$10984$14YGsk)
                                              (if (eof-object? g$x$10984$14YGsk)
                                                '()
                                                (cons
                                                  g$x$10984$14YGsk
                                                  (g$f$10983$14YGsk)))))
                                           (read-annotated))))))
                              g$f$10983$14YGsk))))))))
                  g$swap$10973$14YGsk)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$10985$14YGsk)
                    (begin
                      (g$library-path$10971$14YGsk g$library-path$10972$14YGsk)
                      (set! g$library-path$10972$14YGsk g$t$10985$14YGsk))))
                 (g$library-path$10971$14YGsk)))))))
         g$library-path$6912$14YGsk
         (g$local-library-path$10948$14YGsk g$filename$10966$14YGsk)))))
   (g$fo$10957$14YGsk
     g$fo$10997$14YGsk
     (g$make-enumeration$6259$14YGsk '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$6917$14YGsk
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$10958$14YGsk)
         (if (g$serious-condition?$5625$14YGsk g$ex$10958$14YGsk)
           (raise g$ex$10958$14YGsk)
           (begin (display g$ex$10958$14YGsk) (newline))))))
    (set-symbol-value! 'load g$load$10950$14YGsk)
    (set-symbol-value! 'compile g$compile$10954$14YGsk)
    (set-symbol-value! 'compile->closure g$compile->closure$10955$14YGsk)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$10952$14YGsk)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$10914$14YGsk)
    (set-symbol-value! 'expanded2core g$expanded->core$6629$14YGsk)
    (set-symbol-value! 'trace-printer g$trace-printer$10946$14YGsk)
    (g$file-options-constructor$6383$14YGsk
      (g$enum-set-constructor$6262$14YGsk g$fo$10957$14YGsk))
    (g$library-path$6912$14YGsk (get-library-paths))))

