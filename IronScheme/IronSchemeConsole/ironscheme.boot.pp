;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4813$13P8LC
     g$caar$4886$13P8LC
     (case-lambda ((g$x$4844$13P8LC) (car (car g$x$4844$13P8LC)))))
   (g$cadr$4814$13P8LC
     g$cadr$4887$13P8LC
     (case-lambda ((g$x$4845$13P8LC) (car (cdr g$x$4845$13P8LC)))))
   (g$cdar$4815$13P8LC
     g$cdar$4888$13P8LC
     (case-lambda ((g$x$4846$13P8LC) (cdr (car g$x$4846$13P8LC)))))
   (g$cddr$4816$13P8LC
     g$cddr$4889$13P8LC
     (case-lambda ((g$x$4847$13P8LC) (cdr (cdr g$x$4847$13P8LC)))))
   (g$caaar$4817$13P8LC
     g$caaar$4890$13P8LC
     (case-lambda
       ((g$x$4848$13P8LC) (g$caar$4813$13P8LC (car g$x$4848$13P8LC)))))
   (g$caadr$4818$13P8LC
     g$caadr$4891$13P8LC
     (case-lambda
       ((g$x$4849$13P8LC) (g$caar$4813$13P8LC (cdr g$x$4849$13P8LC)))))
   (g$cadar$4819$13P8LC
     g$cadar$4892$13P8LC
     (case-lambda
       ((g$x$4850$13P8LC) (g$cadr$4814$13P8LC (car g$x$4850$13P8LC)))))
   (g$caddr$4820$13P8LC
     g$caddr$4893$13P8LC
     (case-lambda
       ((g$x$4851$13P8LC) (g$cadr$4814$13P8LC (cdr g$x$4851$13P8LC)))))
   (g$cdaar$4821$13P8LC
     g$cdaar$4894$13P8LC
     (case-lambda
       ((g$x$4852$13P8LC) (g$cdar$4815$13P8LC (car g$x$4852$13P8LC)))))
   (g$cdadr$4822$13P8LC
     g$cdadr$4895$13P8LC
     (case-lambda
       ((g$x$4853$13P8LC) (g$cdar$4815$13P8LC (cdr g$x$4853$13P8LC)))))
   (g$cddar$4823$13P8LC
     g$cddar$4896$13P8LC
     (case-lambda
       ((g$x$4854$13P8LC) (g$cddr$4816$13P8LC (car g$x$4854$13P8LC)))))
   (g$cdddr$4824$13P8LC
     g$cdddr$4897$13P8LC
     (case-lambda
       ((g$x$4855$13P8LC) (g$cddr$4816$13P8LC (cdr g$x$4855$13P8LC)))))
   (g$caaaar$4825$13P8LC
     g$caaaar$4898$13P8LC
     (case-lambda
       ((g$x$4856$13P8LC) (g$caaar$4817$13P8LC (car g$x$4856$13P8LC)))))
   (g$caaadr$4826$13P8LC
     g$caaadr$4899$13P8LC
     (case-lambda
       ((g$x$4857$13P8LC) (g$caaar$4817$13P8LC (cdr g$x$4857$13P8LC)))))
   (g$caadar$4827$13P8LC
     g$caadar$4900$13P8LC
     (case-lambda
       ((g$x$4858$13P8LC) (g$caadr$4818$13P8LC (car g$x$4858$13P8LC)))))
   (g$caaddr$4828$13P8LC
     g$caaddr$4901$13P8LC
     (case-lambda
       ((g$x$4859$13P8LC) (g$caadr$4818$13P8LC (cdr g$x$4859$13P8LC)))))
   (g$cadaar$4829$13P8LC
     g$cadaar$4902$13P8LC
     (case-lambda
       ((g$x$4860$13P8LC) (g$cadar$4819$13P8LC (car g$x$4860$13P8LC)))))
   (g$cadadr$4830$13P8LC
     g$cadadr$4903$13P8LC
     (case-lambda
       ((g$x$4861$13P8LC) (g$cadar$4819$13P8LC (cdr g$x$4861$13P8LC)))))
   (g$caddar$4831$13P8LC
     g$caddar$4904$13P8LC
     (case-lambda
       ((g$x$4862$13P8LC) (g$caddr$4820$13P8LC (car g$x$4862$13P8LC)))))
   (g$cadddr$4832$13P8LC
     g$cadddr$4905$13P8LC
     (case-lambda
       ((g$x$4863$13P8LC) (g$caddr$4820$13P8LC (cdr g$x$4863$13P8LC)))))
   (g$cdaaar$4833$13P8LC
     g$cdaaar$4906$13P8LC
     (case-lambda
       ((g$x$4864$13P8LC) (g$cdaar$4821$13P8LC (car g$x$4864$13P8LC)))))
   (g$cdaadr$4834$13P8LC
     g$cdaadr$4907$13P8LC
     (case-lambda
       ((g$x$4865$13P8LC) (g$cdaar$4821$13P8LC (cdr g$x$4865$13P8LC)))))
   (g$cdadar$4835$13P8LC
     g$cdadar$4908$13P8LC
     (case-lambda
       ((g$x$4866$13P8LC) (g$cdadr$4822$13P8LC (car g$x$4866$13P8LC)))))
   (g$cdaddr$4836$13P8LC
     g$cdaddr$4909$13P8LC
     (case-lambda
       ((g$x$4867$13P8LC) (g$cdadr$4822$13P8LC (cdr g$x$4867$13P8LC)))))
   (g$cddaar$4837$13P8LC
     g$cddaar$4910$13P8LC
     (case-lambda
       ((g$x$4868$13P8LC) (g$cddar$4823$13P8LC (car g$x$4868$13P8LC)))))
   (g$cddadr$4838$13P8LC
     g$cddadr$4911$13P8LC
     (case-lambda
       ((g$x$4869$13P8LC) (g$cddar$4823$13P8LC (cdr g$x$4869$13P8LC)))))
   (g$cdddar$4839$13P8LC
     g$cdddar$4912$13P8LC
     (case-lambda
       ((g$x$4870$13P8LC) (g$cdddr$4824$13P8LC (car g$x$4870$13P8LC)))))
   (g$cddddr$4840$13P8LC
     g$cddddr$4913$13P8LC
     (case-lambda
       ((g$x$4871$13P8LC) (g$cdddr$4824$13P8LC (cdr g$x$4871$13P8LC)))))
   (g$rationalize$4841$13P8LC
     g$rationalize$4914$13P8LC
     (case-lambda
       ((g$x$4872$13P8LC g$e$4873$13P8LC)
        (if (if (infinite? g$x$4872$13P8LC)
              (begin '#f (infinite? g$e$4873$13P8LC))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$4874$13P8LC)
              (if (if (exact? g$x$4872$13P8LC)
                    (begin '#f (exact? g$e$4873$13P8LC))
                    '#f)
                g$r$4874$13P8LC
                (inexact g$r$4874$13P8LC))))
           (apply
             /
             (g$find-ratio$4842$13P8LC g$x$4872$13P8LC g$e$4873$13P8LC)))))))
   (g$find-ratio$4842$13P8LC
     g$find-ratio$4915$13P8LC
     (case-lambda
       ((g$x$4875$13P8LC g$e$4876$13P8LC)
        (g$find-ratio-between$4843$13P8LC
          (- g$x$4875$13P8LC g$e$4876$13P8LC)
          (+ g$x$4875$13P8LC g$e$4876$13P8LC)))))
   (g$find-ratio-between$4843$13P8LC
     g$find-ratio-between$4916$13P8LC
     (case-lambda
       ((g$x$4877$13P8LC g$y$4878$13P8LC)
        (letrec* ((g$sr$4879$13P8LC
                    (case-lambda
                      ((g$x$4881$13P8LC g$y$4882$13P8LC)
                       ((case-lambda
                          ((g$fx$4883$13P8LC g$fy$4884$13P8LC)
                           (if (>= g$fx$4883$13P8LC g$x$4881$13P8LC)
                             (list g$fx$4883$13P8LC '1)
                             (if (= g$fx$4883$13P8LC g$fy$4884$13P8LC)
                               ((case-lambda
                                  ((g$rat$4885$13P8LC)
                                   (list
                                     (+ (g$cadr$4814$13P8LC g$rat$4885$13P8LC)
                                        (* g$fx$4883$13P8LC
                                           (car g$rat$4885$13P8LC)))
                                     (car g$rat$4885$13P8LC))))
                                (g$sr$4879$13P8LC
                                  (/ (- g$y$4882$13P8LC g$fy$4884$13P8LC))
                                  (/ (- g$x$4881$13P8LC g$fx$4883$13P8LC))))
                               (list (+ '1 g$fx$4883$13P8LC) '1)))))
                        (exact (floor g$x$4881$13P8LC))
                        (exact (floor g$y$4882$13P8LC)))))))
          (if (< g$y$4878$13P8LC g$x$4877$13P8LC)
            (g$find-ratio-between$4843$13P8LC g$y$4878$13P8LC g$x$4877$13P8LC)
            (if (>= g$x$4877$13P8LC g$y$4878$13P8LC)
              (list g$x$4877$13P8LC '1)
              (if (positive? g$x$4877$13P8LC)
                (g$sr$4879$13P8LC g$x$4877$13P8LC g$y$4878$13P8LC)
                (if (negative? g$y$4878$13P8LC)
                  ((case-lambda
                     ((g$rat$4880$13P8LC)
                      (list
                        (- (car g$rat$4880$13P8LC))
                        (g$cadr$4814$13P8LC g$rat$4880$13P8LC))))
                   (g$sr$4879$13P8LC (- g$y$4878$13P8LC) (- g$x$4877$13P8LC)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5112$13P8LC g$using$5147$13P8LC (clr-using-internal 'system))
   (g$using$5114$13P8LC
     g$using$5148$13P8LC
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5115$13P8LC
     g$make-eq-hashtable$5149$13P8LC
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5126$13P8LC)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5126$13P8LC)))))
   (g$make-eqv-hashtable$5116$13P8LC
     g$make-eqv-hashtable$5150$13P8LC
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5127$13P8LC) (make-hashtable eqv-hash eqv? g$k$5127$13P8LC))))
   (g$hashtable-size$5117$13P8LC
     g$hashtable-size$5151$13P8LC
     (case-lambda
       ((g$ht$5128$13P8LC)
        (clr-call-internal 'hashtable 'get_count g$ht$5128$13P8LC))))
   (g$hashtable-ref$5118$13P8LC
     g$hashtable-ref$5152$13P8LC
     (case-lambda
       ((g$ht$5129$13P8LC g$key$5130$13P8LC g$default$5131$13P8LC)
        (letrec* ((g$r$5132$13P8LC
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5129$13P8LC
                      g$key$5130$13P8LC)))
          (if (not (null? g$r$5132$13P8LC))
            g$r$5132$13P8LC
            g$default$5131$13P8LC)))))
   (g$hashtable-set!$5119$13P8LC
     g$hashtable-set!$5153$13P8LC
     (case-lambda
       ((g$ht$5133$13P8LC g$key$5134$13P8LC g$obj$5135$13P8LC)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5133$13P8LC
          g$key$5134$13P8LC
          g$obj$5135$13P8LC))))
   (g$hashtable-delete!$5120$13P8LC
     g$hashtable-delete!$5154$13P8LC
     (case-lambda
       ((g$ht$5136$13P8LC g$key$5137$13P8LC)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5136$13P8LC
          g$key$5137$13P8LC))))
   (g$hashtable-contains?$5121$13P8LC
     g$hashtable-contains?$5155$13P8LC
     (case-lambda
       ((g$ht$5138$13P8LC g$key$5139$13P8LC)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5138$13P8LC
          g$key$5139$13P8LC))))
   (g$hashtable-update!$5122$13P8LC
     g$hashtable-update!$5156$13P8LC
     (case-lambda
       ((g$ht$5140$13P8LC
          g$key$5141$13P8LC
          g$proc$5142$13P8LC
          g$default$5143$13P8LC)
        (g$hashtable-set!$5119$13P8LC
          g$ht$5140$13P8LC
          g$key$5141$13P8LC
          (g$proc$5142$13P8LC
            (g$hashtable-ref$5118$13P8LC
              g$ht$5140$13P8LC
              g$key$5141$13P8LC
              g$default$5143$13P8LC))))))
   (g$hashtable-clear!$5123$13P8LC
     g$hashtable-clear!$5157$13P8LC
     (case-lambda
       ((g$ht$5144$13P8LC)
        (clr-call-internal 'hashtable 'clear g$ht$5144$13P8LC))
       ((g$ht$5145$13P8LC g$k$5146$13P8LC)
        (clr-call-internal 'hashtable 'clear g$ht$5145$13P8LC))))
   (g$clear-usings$5125$13P8LC
     g$clear-usings$5158$13P8LC
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5160$13P8LC
     g$using$5226$13P8LC
     (clr-using-internal 'system.io))
   (g$file-exists?$5161$13P8LC
     g$file-exists?$5227$13P8LC
     (case-lambda
       ((g$fn$5189$13P8LC)
        (clr-call-internal 'file 'exists '() g$fn$5189$13P8LC))))
   (g$delete-file$5162$13P8LC
     g$delete-file$5228$13P8LC
     (case-lambda
       ((g$fn$5190$13P8LC)
        (clr-call-internal 'file 'delete '() g$fn$5190$13P8LC))))
   (g$file-copy$5163$13P8LC
     g$file-copy$5229$13P8LC
     (case-lambda
       ((g$from$5191$13P8LC g$to$5192$13P8LC)
        (g$file-copy$5163$13P8LC g$from$5191$13P8LC g$to$5192$13P8LC '#f))
       ((g$from$5193$13P8LC g$to$5194$13P8LC g$overwrite?$5195$13P8LC)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5193$13P8LC
          g$to$5194$13P8LC
          g$overwrite?$5195$13P8LC))))
   (g$file-move$5164$13P8LC
     g$file-move$5230$13P8LC
     (case-lambda
       ((g$from$5196$13P8LC g$to$5197$13P8LC)
        (clr-call-internal
          'file
          'move
          '()
          g$from$5196$13P8LC
          g$to$5197$13P8LC))))
   (g$file-create-time$5165$13P8LC
     g$file-create-time$5231$13P8LC
     (case-lambda
       ((g$fn$5198$13P8LC)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5198$13P8LC))))
   (g$file-access-time$5166$13P8LC
     g$file-access-time$5232$13P8LC
     (case-lambda
       ((g$fn$5199$13P8LC)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5199$13P8LC))))
   (g$file-modified-time$5167$13P8LC
     g$file-modified-time$5233$13P8LC
     (case-lambda
       ((g$fn$5200$13P8LC)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5200$13P8LC))))
   (g$directory-exists?$5168$13P8LC
     g$directory-exists?$5234$13P8LC
     (case-lambda
       ((g$fn$5201$13P8LC)
        (clr-call-internal 'directory 'exists '() g$fn$5201$13P8LC))))
   (g$delete-directory$5169$13P8LC
     g$delete-directory$5235$13P8LC
     (case-lambda
       ((g$dir$5202$13P8LC)
        (g$delete-directory$5169$13P8LC g$dir$5202$13P8LC '#f))
       ((g$dir$5203$13P8LC g$recursive?$5204$13P8LC)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5203$13P8LC
          g$recursive?$5204$13P8LC))))
   (g$directory-move$5170$13P8LC
     g$directory-move$5236$13P8LC
     (case-lambda
       ((g$from$5205$13P8LC g$to$5206$13P8LC)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5205$13P8LC
          g$to$5206$13P8LC))))
   (g$create-directory$5171$13P8LC
     g$create-directory$5237$13P8LC
     (case-lambda
       ((g$name$5207$13P8LC)
        (clr-call-internal
          'directory
          'createdirectory
          '()
          g$name$5207$13P8LC))))
   (g$get-files$5172$13P8LC
     g$get-files$5238$13P8LC
     (case-lambda
       ((g$dir$5208$13P8LC) (g$get-files$5172$13P8LC g$dir$5208$13P8LC '"*"))
       ((g$dir$5209$13P8LC g$pattern$5210$13P8LC)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5209$13P8LC
          g$pattern$5210$13P8LC))))
   (g$get-directories$5173$13P8LC
     g$get-directories$5239$13P8LC
     (case-lambda
       ((g$dir$5211$13P8LC)
        (g$get-directories$5173$13P8LC g$dir$5211$13P8LC '"*"))
       ((g$dir$5212$13P8LC g$pattern$5213$13P8LC)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5212$13P8LC
          g$pattern$5213$13P8LC))))
   (g$change-extension$5174$13P8LC
     g$change-extension$5240$13P8LC
     (case-lambda
       ((g$path$5214$13P8LC g$extension$5215$13P8LC)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5214$13P8LC
          g$extension$5215$13P8LC))))
   (g$path-combine$5175$13P8LC
     g$path-combine$5241$13P8LC
     (case-lambda
       ((g$path1$5216$13P8LC g$path2$5217$13P8LC)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5216$13P8LC
          g$path2$5217$13P8LC))))
   (g$get-directory-name$5176$13P8LC
     g$get-directory-name$5242$13P8LC
     (case-lambda
       ((g$path$5218$13P8LC)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5218$13P8LC))))
   (g$get-extension$5177$13P8LC
     g$get-extension$5243$13P8LC
     (case-lambda
       ((g$path$5219$13P8LC)
        (clr-call-internal 'path 'getextension '() g$path$5219$13P8LC))))
   (g$get-filename$5178$13P8LC
     g$get-filename$5244$13P8LC
     (case-lambda
       ((g$path$5220$13P8LC)
        (clr-call-internal 'path 'getfilename '() g$path$5220$13P8LC))))
   (g$get-filename-without-extension$5179$13P8LC
     g$get-filename-without-extension$5245$13P8LC
     (case-lambda
       ((g$path$5221$13P8LC)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5221$13P8LC))))
   (g$get-full-path$5180$13P8LC
     g$get-full-path$5246$13P8LC
     (case-lambda
       ((g$path$5222$13P8LC)
        (clr-call-internal 'path 'getfullpath '() g$path$5222$13P8LC))))
   (g$get-path-root$5181$13P8LC
     g$get-path-root$5247$13P8LC
     (case-lambda
       ((g$path$5223$13P8LC)
        (clr-call-internal 'path 'getpathroot '() g$path$5223$13P8LC))))
   (g$get-random-filename$5182$13P8LC
     g$get-random-filename$5248$13P8LC
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5183$13P8LC
     g$get-temp-filename$5249$13P8LC
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5184$13P8LC
     g$get-temp-path$5250$13P8LC
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5185$13P8LC
     g$path-rooted?$5251$13P8LC
     (case-lambda
       ((g$path$5224$13P8LC)
        (clr-call-internal 'path 'ispathrooted '() g$path$5224$13P8LC))))
   (g$path-has-extension?$5186$13P8LC
     g$path-has-extension?$5252$13P8LC
     (case-lambda
       ((g$path$5225$13P8LC)
        (clr-call-internal 'path 'hasextension '() g$path$5225$13P8LC))))
   (g$clear-usings$5188$13P8LC
     g$clear-usings$5253$13P8LC
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5254$13P8LC
     g$find$5345$13P8LC
     (case-lambda
       ((g$proc$5273$13P8LC g$l$5274$13P8LC)
        (if (null? g$l$5274$13P8LC)
          '#f
          ((case-lambda
             ((g$e$5275$13P8LC)
              (if (g$proc$5273$13P8LC g$e$5275$13P8LC)
                g$e$5275$13P8LC
                (g$find$5254$13P8LC g$proc$5273$13P8LC (cdr g$l$5274$13P8LC)))))
           (car g$l$5274$13P8LC))))))
   (g$partition$5255$13P8LC
     g$partition$5346$13P8LC
     (case-lambda
       ((g$proc$5276$13P8LC g$l$5277$13P8LC)
        ((letrec ((g$f$5278$13P8LC
                    (case-lambda
                      ((g$l$5279$13P8LC g$a$5280$13P8LC g$b$5281$13P8LC)
                       (if (null? g$l$5279$13P8LC)
                         (values
                           (reverse! g$a$5280$13P8LC)
                           (reverse! g$b$5281$13P8LC))
                         ((case-lambda
                            ((g$e$5282$13P8LC)
                             (if (g$proc$5276$13P8LC g$e$5282$13P8LC)
                               (g$f$5278$13P8LC
                                 (cdr g$l$5279$13P8LC)
                                 (cons g$e$5282$13P8LC g$a$5280$13P8LC)
                                 g$b$5281$13P8LC)
                               (g$f$5278$13P8LC
                                 (cdr g$l$5279$13P8LC)
                                 g$a$5280$13P8LC
                                 (cons g$e$5282$13P8LC g$b$5281$13P8LC)))))
                          (car g$l$5279$13P8LC)))))))
           g$f$5278$13P8LC)
         g$l$5277$13P8LC
         '()
         '()))))
   (g$remp$5256$13P8LC
     g$remp$5347$13P8LC
     (case-lambda
       ((g$proc$5283$13P8LC g$l$5284$13P8LC)
        ((letrec ((g$f$5285$13P8LC
                    (case-lambda
                      ((g$l$5286$13P8LC g$a$5287$13P8LC)
                       (if (null? g$l$5286$13P8LC)
                         (reverse! g$a$5287$13P8LC)
                         ((case-lambda
                            ((g$e$5288$13P8LC)
                             (if (g$proc$5283$13P8LC g$e$5288$13P8LC)
                               (g$f$5285$13P8LC
                                 (cdr g$l$5286$13P8LC)
                                 g$a$5287$13P8LC)
                               (g$f$5285$13P8LC
                                 (cdr g$l$5286$13P8LC)
                                 (cons g$e$5288$13P8LC g$a$5287$13P8LC)))))
                          (car g$l$5286$13P8LC)))))))
           g$f$5285$13P8LC)
         g$l$5284$13P8LC
         '()))))
   (g$filter$5257$13P8LC
     g$filter$5348$13P8LC
     (case-lambda
       ((g$proc$5289$13P8LC g$l$5290$13P8LC)
        ((letrec ((g$f$5291$13P8LC
                    (case-lambda
                      ((g$l$5292$13P8LC g$a$5293$13P8LC)
                       (if (null? g$l$5292$13P8LC)
                         (reverse! g$a$5293$13P8LC)
                         ((case-lambda
                            ((g$e$5294$13P8LC)
                             (if (g$proc$5289$13P8LC g$e$5294$13P8LC)
                               (g$f$5291$13P8LC
                                 (cdr g$l$5292$13P8LC)
                                 (cons g$e$5294$13P8LC g$a$5293$13P8LC))
                               (g$f$5291$13P8LC
                                 (cdr g$l$5292$13P8LC)
                                 g$a$5293$13P8LC))))
                          (car g$l$5292$13P8LC)))))))
           g$f$5291$13P8LC)
         g$l$5290$13P8LC
         '()))))
   (g$assv$5258$13P8LC
     g$assv$5349$13P8LC
     (case-lambda
       ((g$obj$5295$13P8LC g$lst$5296$13P8LC)
        (if (null? g$lst$5296$13P8LC)
          '#f
          ((case-lambda
             ((g$c$5297$13P8LC)
              (if (eqv? g$obj$5295$13P8LC (car g$c$5297$13P8LC))
                g$c$5297$13P8LC
                (g$assv$5258$13P8LC
                  g$obj$5295$13P8LC
                  (cdr g$lst$5296$13P8LC)))))
           (car g$lst$5296$13P8LC))))))
   (g$assoc$5259$13P8LC
     g$assoc$5350$13P8LC
     (case-lambda
       ((g$obj$5298$13P8LC g$lst$5299$13P8LC)
        (if (null? g$lst$5299$13P8LC)
          '#f
          ((case-lambda
             ((g$c$5300$13P8LC)
              (if (equal? g$obj$5298$13P8LC (car g$c$5300$13P8LC))
                g$c$5300$13P8LC
                (g$assoc$5259$13P8LC
                  g$obj$5298$13P8LC
                  (cdr g$lst$5299$13P8LC)))))
           (car g$lst$5299$13P8LC))))))
   (g$assp$5260$13P8LC
     g$assp$5351$13P8LC
     (case-lambda
       ((g$p?$5301$13P8LC g$lst$5302$13P8LC)
        (if (null? g$lst$5302$13P8LC)
          '#f
          ((case-lambda
             ((g$c$5303$13P8LC)
              (if (g$p?$5301$13P8LC (car g$c$5303$13P8LC))
                g$c$5303$13P8LC
                (g$assp$5260$13P8LC g$p?$5301$13P8LC (cdr g$lst$5302$13P8LC)))))
           (car g$lst$5302$13P8LC))))))
   (g$member$5261$13P8LC
     g$member$5352$13P8LC
     (case-lambda
       ((g$obj$5304$13P8LC g$lst$5305$13P8LC)
        (if (null? g$lst$5305$13P8LC)
          '#f
          (if (equal? g$obj$5304$13P8LC (car g$lst$5305$13P8LC))
            g$lst$5305$13P8LC
            (g$member$5261$13P8LC
              g$obj$5304$13P8LC
              (cdr g$lst$5305$13P8LC)))))))
   (g$memp$5262$13P8LC
     g$memp$5353$13P8LC
     (case-lambda
       ((g$p?$5306$13P8LC g$lst$5307$13P8LC)
        (if (null? g$lst$5307$13P8LC)
          '#f
          (if (g$p?$5306$13P8LC (car g$lst$5307$13P8LC))
            g$lst$5307$13P8LC
            (g$memp$5262$13P8LC g$p?$5306$13P8LC (cdr g$lst$5307$13P8LC)))))))
   (g$all-empty?$5263$13P8LC
     g$all-empty?$5354$13P8LC
     (case-lambda
       ((g$ls$5308$13P8LC)
        ((case-lambda
           ((g$t$5309$13P8LC)
            (if g$t$5309$13P8LC
              g$t$5309$13P8LC
              (begin
                '#f
                (if (null? (car g$ls$5308$13P8LC))
                  (begin '#f (g$all-empty?$5263$13P8LC (cdr g$ls$5308$13P8LC)))
                  '#f)))))
         (null? g$ls$5308$13P8LC)))))
   (g$split$5264$13P8LC
     g$split$5355$13P8LC
     (case-lambda
       ((g$ls$5310$13P8LC)
        (if (null? g$ls$5310$13P8LC)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5264$13P8LC (cdr g$ls$5310$13P8LC))))
            (case-lambda
              ((g$cars$5311$13P8LC g$cdrs$5312$13P8LC)
               ((case-lambda
                  ((g$a$5313$13P8LC)
                   (values
                     (cons (car g$a$5313$13P8LC) g$cars$5311$13P8LC)
                     (cons (cdr g$a$5313$13P8LC) g$cdrs$5312$13P8LC))))
                (car g$ls$5310$13P8LC)))))))))
   (g$for-all$5265$13P8LC
     g$for-all$5356$13P8LC
     (case-lambda
       ((g$f$5314$13P8LC . g$args$5315$13P8LC)
        (if (g$all-empty?$5263$13P8LC g$args$5315$13P8LC)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5264$13P8LC g$args$5315$13P8LC)))
            (case-lambda
              ((g$cars$5316$13P8LC g$cdrs$5317$13P8LC)
               (if (g$all-empty?$5263$13P8LC g$cdrs$5317$13P8LC)
                 (apply g$f$5314$13P8LC g$cars$5316$13P8LC)
                 (if (apply g$f$5314$13P8LC g$cars$5316$13P8LC)
                   (begin
                     '#f
                     (apply
                       g$for-all$5265$13P8LC
                       g$f$5314$13P8LC
                       g$cdrs$5317$13P8LC))
                   '#f)))))))))
   (g$exists$5266$13P8LC
     g$exists$5357$13P8LC
     (case-lambda
       ((g$f$5318$13P8LC . g$args$5319$13P8LC)
        (if (g$all-empty?$5263$13P8LC g$args$5319$13P8LC)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5264$13P8LC g$args$5319$13P8LC)))
            (case-lambda
              ((g$cars$5320$13P8LC g$cdrs$5321$13P8LC)
               ((case-lambda
                  ((g$t$5322$13P8LC)
                   (if g$t$5322$13P8LC
                     g$t$5322$13P8LC
                     (begin
                       '#f
                       (apply
                         g$exists$5266$13P8LC
                         g$f$5318$13P8LC
                         g$cdrs$5321$13P8LC)))))
                (apply g$f$5318$13P8LC g$cars$5320$13P8LC)))))))))
   (g$cons*$5267$13P8LC
     g$cons*$5358$13P8LC
     (case-lambda
       ((g$a$5323$13P8LC . g$rest$5324$13P8LC)
        ((letrec ((g$f$5325$13P8LC
                    (case-lambda
                      ((g$a$5326$13P8LC g$rest$5327$13P8LC)
                       (if (null? g$rest$5327$13P8LC)
                         g$a$5326$13P8LC
                         (cons
                           g$a$5326$13P8LC
                           (g$f$5325$13P8LC
                             (car g$rest$5327$13P8LC)
                             (cdr g$rest$5327$13P8LC))))))))
           g$f$5325$13P8LC)
         g$a$5323$13P8LC
         g$rest$5324$13P8LC))))
   (g$fold-left$5268$13P8LC
     g$fold-left$5359$13P8LC
     (case-lambda
       ((g$combine$5328$13P8LC
          g$nil$5329$13P8LC
          g$list1$5330$13P8LC
          .
          g$lists$5331$13P8LC)
        (if (null? g$list1$5330$13P8LC)
          g$nil$5329$13P8LC
          (apply
            g$fold-left$5268$13P8LC
            (g$cons*$5267$13P8LC
              g$combine$5328$13P8LC
              (apply
                g$combine$5328$13P8LC
                (g$cons*$5267$13P8LC
                  g$nil$5329$13P8LC
                  (car g$list1$5330$13P8LC)
                  (map car g$lists$5331$13P8LC)))
              (cdr g$list1$5330$13P8LC)
              (map cdr g$lists$5331$13P8LC)))))))
   (g$fold-right$5269$13P8LC
     g$fold-right$5360$13P8LC
     (case-lambda
       ((g$combine$5332$13P8LC
          g$nil$5333$13P8LC
          g$list1$5334$13P8LC
          .
          g$lists$5335$13P8LC)
        (if (null? g$list1$5334$13P8LC)
          g$nil$5333$13P8LC
          (apply
            g$combine$5332$13P8LC
            (append
              (list (car g$list1$5334$13P8LC))
              (map car g$lists$5335$13P8LC)
              (list
                (apply
                  g$fold-right$5269$13P8LC
                  (g$cons*$5267$13P8LC
                    g$combine$5332$13P8LC
                    g$nil$5333$13P8LC
                    (cdr g$list1$5334$13P8LC)
                    (map cdr g$lists$5335$13P8LC))))))))))
   (g$remove$5270$13P8LC
     g$remove$5361$13P8LC
     (case-lambda
       ((g$obj$5336$13P8LC g$list$5337$13P8LC)
        (g$remp$5256$13P8LC
          (case-lambda
            ((g$x$5338$13P8LC) (equal? g$obj$5336$13P8LC g$x$5338$13P8LC)))
          g$list$5337$13P8LC))))
   (g$remv$5271$13P8LC
     g$remv$5362$13P8LC
     (case-lambda
       ((g$obj$5339$13P8LC g$list$5340$13P8LC)
        (g$remp$5256$13P8LC
          (case-lambda
            ((g$x$5341$13P8LC) (eqv? g$obj$5339$13P8LC g$x$5341$13P8LC)))
          g$list$5340$13P8LC))))
   (g$remq$5272$13P8LC
     g$remq$5363$13P8LC
     (case-lambda
       ((g$obj$5342$13P8LC g$list$5343$13P8LC)
        (g$remp$5256$13P8LC
          (case-lambda
            ((g$x$5344$13P8LC) (eq? g$obj$5342$13P8LC g$x$5344$13P8LC)))
          g$list$5343$13P8LC)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5364$13P8LC
     g$native-endianness$5475$13P8LC
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5365$13P8LC
     g$bytevector-u16-ref$5476$13P8LC
     (case-lambda
       ((g$bytevector$5393$13P8LC g$k$5394$13P8LC g$endianness$5395$13P8LC)
        (bytevector-uint-ref
          g$bytevector$5393$13P8LC
          g$k$5394$13P8LC
          g$endianness$5395$13P8LC
          '2))))
   (g$bytevector-s16-ref$5366$13P8LC
     g$bytevector-s16-ref$5477$13P8LC
     (case-lambda
       ((g$bytevector$5396$13P8LC g$k$5397$13P8LC g$endianness$5398$13P8LC)
        (bytevector-sint-ref
          g$bytevector$5396$13P8LC
          g$k$5397$13P8LC
          g$endianness$5398$13P8LC
          '2))))
   (g$bytevector-u16-native-ref$5367$13P8LC
     g$bytevector-u16-native-ref$5478$13P8LC
     (case-lambda
       ((g$bytevector$5399$13P8LC g$k$5400$13P8LC)
        (bytevector-uint-ref
          g$bytevector$5399$13P8LC
          g$k$5400$13P8LC
          (g$native-endianness$5364$13P8LC)
          '2))))
   (g$bytevector-s16-native-ref$5368$13P8LC
     g$bytevector-s16-native-ref$5479$13P8LC
     (case-lambda
       ((g$bytevector$5401$13P8LC g$k$5402$13P8LC)
        (bytevector-sint-ref
          g$bytevector$5401$13P8LC
          g$k$5402$13P8LC
          (g$native-endianness$5364$13P8LC)
          '2))))
   (g$bytevector-u16-set!$5369$13P8LC
     g$bytevector-u16-set!$5480$13P8LC
     (case-lambda
       ((g$bytevector$5403$13P8LC
          g$k$5404$13P8LC
          g$n$5405$13P8LC
          g$endianness$5406$13P8LC)
        (bytevector-uint-set!
          g$bytevector$5403$13P8LC
          g$k$5404$13P8LC
          g$n$5405$13P8LC
          g$endianness$5406$13P8LC
          '2))))
   (g$bytevector-s16-set!$5370$13P8LC
     g$bytevector-s16-set!$5481$13P8LC
     (case-lambda
       ((g$bytevector$5407$13P8LC
          g$k$5408$13P8LC
          g$n$5409$13P8LC
          g$endianness$5410$13P8LC)
        (bytevector-sint-set!
          g$bytevector$5407$13P8LC
          g$k$5408$13P8LC
          g$n$5409$13P8LC
          g$endianness$5410$13P8LC
          '2))))
   (g$bytevector-u16-native-set!$5371$13P8LC
     g$bytevector-u16-native-set!$5482$13P8LC
     (case-lambda
       ((g$bytevector$5411$13P8LC g$k$5412$13P8LC g$n$5413$13P8LC)
        (bytevector-uint-set!
          g$bytevector$5411$13P8LC
          g$k$5412$13P8LC
          g$n$5413$13P8LC
          (g$native-endianness$5364$13P8LC)
          '2))))
   (g$bytevector-s16-native-set!$5372$13P8LC
     g$bytevector-s16-native-set!$5483$13P8LC
     (case-lambda
       ((g$bytevector$5414$13P8LC g$k$5415$13P8LC g$n$5416$13P8LC)
        (bytevector-sint-set!
          g$bytevector$5414$13P8LC
          g$k$5415$13P8LC
          g$n$5416$13P8LC
          (g$native-endianness$5364$13P8LC)
          '2))))
   (g$bytevector-u32-ref$5373$13P8LC
     g$bytevector-u32-ref$5484$13P8LC
     (case-lambda
       ((g$bytevector$5417$13P8LC g$k$5418$13P8LC g$endianness$5419$13P8LC)
        (bytevector-uint-ref
          g$bytevector$5417$13P8LC
          g$k$5418$13P8LC
          g$endianness$5419$13P8LC
          '4))))
   (g$bytevector-s32-ref$5374$13P8LC
     g$bytevector-s32-ref$5485$13P8LC
     (case-lambda
       ((g$bytevector$5420$13P8LC g$k$5421$13P8LC g$endianness$5422$13P8LC)
        (bytevector-sint-ref
          g$bytevector$5420$13P8LC
          g$k$5421$13P8LC
          g$endianness$5422$13P8LC
          '4))))
   (g$bytevector-u32-native-ref$5375$13P8LC
     g$bytevector-u32-native-ref$5486$13P8LC
     (case-lambda
       ((g$bytevector$5423$13P8LC g$k$5424$13P8LC)
        (bytevector-uint-ref
          g$bytevector$5423$13P8LC
          g$k$5424$13P8LC
          (g$native-endianness$5364$13P8LC)
          '4))))
   (g$bytevector-s32-native-ref$5376$13P8LC
     g$bytevector-s32-native-ref$5487$13P8LC
     (case-lambda
       ((g$bytevector$5425$13P8LC g$k$5426$13P8LC)
        (bytevector-sint-ref
          g$bytevector$5425$13P8LC
          g$k$5426$13P8LC
          (g$native-endianness$5364$13P8LC)
          '4))))
   (g$bytevector-u32-set!$5377$13P8LC
     g$bytevector-u32-set!$5488$13P8LC
     (case-lambda
       ((g$bytevector$5427$13P8LC
          g$k$5428$13P8LC
          g$n$5429$13P8LC
          g$endianness$5430$13P8LC)
        (bytevector-uint-set!
          g$bytevector$5427$13P8LC
          g$k$5428$13P8LC
          g$n$5429$13P8LC
          g$endianness$5430$13P8LC
          '4))))
   (g$bytevector-s32-set!$5378$13P8LC
     g$bytevector-s32-set!$5489$13P8LC
     (case-lambda
       ((g$bytevector$5431$13P8LC
          g$k$5432$13P8LC
          g$n$5433$13P8LC
          g$endianness$5434$13P8LC)
        (bytevector-sint-set!
          g$bytevector$5431$13P8LC
          g$k$5432$13P8LC
          g$n$5433$13P8LC
          g$endianness$5434$13P8LC
          '4))))
   (g$bytevector-u32-native-set!$5379$13P8LC
     g$bytevector-u32-native-set!$5490$13P8LC
     (case-lambda
       ((g$bytevector$5435$13P8LC g$k$5436$13P8LC g$n$5437$13P8LC)
        (bytevector-uint-set!
          g$bytevector$5435$13P8LC
          g$k$5436$13P8LC
          g$n$5437$13P8LC
          (g$native-endianness$5364$13P8LC)
          '4))))
   (g$bytevector-s32-native-set!$5380$13P8LC
     g$bytevector-s32-native-set!$5491$13P8LC
     (case-lambda
       ((g$bytevector$5438$13P8LC g$k$5439$13P8LC g$n$5440$13P8LC)
        (bytevector-sint-set!
          g$bytevector$5438$13P8LC
          g$k$5439$13P8LC
          g$n$5440$13P8LC
          (g$native-endianness$5364$13P8LC)
          '4))))
   (g$bytevector-u64-ref$5381$13P8LC
     g$bytevector-u64-ref$5492$13P8LC
     (case-lambda
       ((g$bytevector$5441$13P8LC g$k$5442$13P8LC g$endianness$5443$13P8LC)
        (bytevector-uint-ref
          g$bytevector$5441$13P8LC
          g$k$5442$13P8LC
          g$endianness$5443$13P8LC
          '8))))
   (g$bytevector-s64-ref$5382$13P8LC
     g$bytevector-s64-ref$5493$13P8LC
     (case-lambda
       ((g$bytevector$5444$13P8LC g$k$5445$13P8LC g$endianness$5446$13P8LC)
        (bytevector-sint-ref
          g$bytevector$5444$13P8LC
          g$k$5445$13P8LC
          g$endianness$5446$13P8LC
          '8))))
   (g$bytevector-u64-native-ref$5383$13P8LC
     g$bytevector-u64-native-ref$5494$13P8LC
     (case-lambda
       ((g$bytevector$5447$13P8LC g$k$5448$13P8LC)
        (bytevector-uint-ref
          g$bytevector$5447$13P8LC
          g$k$5448$13P8LC
          (g$native-endianness$5364$13P8LC)
          '8))))
   (g$bytevector-s64-native-ref$5384$13P8LC
     g$bytevector-s64-native-ref$5495$13P8LC
     (case-lambda
       ((g$bytevector$5449$13P8LC g$k$5450$13P8LC)
        (bytevector-sint-ref
          g$bytevector$5449$13P8LC
          g$k$5450$13P8LC
          (g$native-endianness$5364$13P8LC)
          '8))))
   (g$bytevector-u64-set!$5385$13P8LC
     g$bytevector-u64-set!$5496$13P8LC
     (case-lambda
       ((g$bytevector$5451$13P8LC
          g$k$5452$13P8LC
          g$n$5453$13P8LC
          g$endianness$5454$13P8LC)
        (bytevector-uint-set!
          g$bytevector$5451$13P8LC
          g$k$5452$13P8LC
          g$n$5453$13P8LC
          g$endianness$5454$13P8LC
          '8))))
   (g$bytevector-s64-set!$5386$13P8LC
     g$bytevector-s64-set!$5497$13P8LC
     (case-lambda
       ((g$bytevector$5455$13P8LC
          g$k$5456$13P8LC
          g$n$5457$13P8LC
          g$endianness$5458$13P8LC)
        (bytevector-sint-set!
          g$bytevector$5455$13P8LC
          g$k$5456$13P8LC
          g$n$5457$13P8LC
          g$endianness$5458$13P8LC
          '8))))
   (g$bytevector-u64-native-set!$5387$13P8LC
     g$bytevector-u64-native-set!$5498$13P8LC
     (case-lambda
       ((g$bytevector$5459$13P8LC g$k$5460$13P8LC g$n$5461$13P8LC)
        (bytevector-uint-set!
          g$bytevector$5459$13P8LC
          g$k$5460$13P8LC
          g$n$5461$13P8LC
          (g$native-endianness$5364$13P8LC)
          '8))))
   (g$bytevector-s64-native-set!$5388$13P8LC
     g$bytevector-s64-native-set!$5499$13P8LC
     (case-lambda
       ((g$bytevector$5462$13P8LC g$k$5463$13P8LC g$n$5464$13P8LC)
        (bytevector-sint-set!
          g$bytevector$5462$13P8LC
          g$k$5463$13P8LC
          g$n$5464$13P8LC
          (g$native-endianness$5364$13P8LC)
          '8))))
   (g$bytevector-ieee-single-native-ref$5389$13P8LC
     g$bytevector-ieee-single-native-ref$5500$13P8LC
     (case-lambda
       ((g$bytevector$5465$13P8LC g$k$5466$13P8LC)
        (if (not (zero? (mod g$k$5466$13P8LC '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5466$13P8LC)
          (bytevector-ieee-single-ref
            g$bytevector$5465$13P8LC
            g$k$5466$13P8LC
            (g$native-endianness$5364$13P8LC))))))
   (g$bytevector-ieee-double-native-ref$5390$13P8LC
     g$bytevector-ieee-double-native-ref$5501$13P8LC
     (case-lambda
       ((g$bytevector$5467$13P8LC g$k$5468$13P8LC)
        (if (not (zero? (mod g$k$5468$13P8LC '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5468$13P8LC)
          (bytevector-ieee-double-ref
            g$bytevector$5467$13P8LC
            g$k$5468$13P8LC
            (g$native-endianness$5364$13P8LC))))))
   (g$bytevector-ieee-single-native-set!$5391$13P8LC
     g$bytevector-ieee-single-native-set!$5502$13P8LC
     (case-lambda
       ((g$bytevector$5469$13P8LC g$k$5470$13P8LC g$x$5471$13P8LC)
        (if (not (zero? (mod g$k$5470$13P8LC '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5470$13P8LC)
          (bytevector-ieee-single-set!
            g$bytevector$5469$13P8LC
            g$k$5470$13P8LC
            g$x$5471$13P8LC
            (g$native-endianness$5364$13P8LC))))))
   (g$bytevector-ieee-double-native-set!$5392$13P8LC
     g$bytevector-ieee-double-native-set!$5503$13P8LC
     (case-lambda
       ((g$bytevector$5472$13P8LC g$k$5473$13P8LC g$x$5474$13P8LC)
        (if (not (zero? (mod g$k$5473$13P8LC '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5473$13P8LC)
          (bytevector-ieee-double-set!
            g$bytevector$5472$13P8LC
            g$k$5473$13P8LC
            g$x$5474$13P8LC
            (g$native-endianness$5364$13P8LC)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6441$5504$13P8LC
     g$6441$5599$13P8LC
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6444$13P8LC
       '#f
       '#f
       '#()))
   (g$6443$5505$13P8LC g$6443$5600$13P8LC '#f)
   (g$6442$5506$13P8LC
     g$6442$5601$13P8LC
     (make-record-constructor-descriptor
       g$6441$5504$13P8LC
       '#f
       g$6443$5505$13P8LC))
   (g$&condition?$5507$13P8LC
     g$&condition?$5602$13P8LC
     (record-predicate g$6441$5504$13P8LC))
   (g$make-&condition$5508$13P8LC
     g$make-&condition$5603$13P8LC
     (record-constructor g$6442$5506$13P8LC))
   (g$&condition-rtd$5509$13P8LC
     g$&condition-rtd$5604$13P8LC
     g$6441$5504$13P8LC)
   (g$&condition-rcd$5510$13P8LC
     g$&condition-rcd$5605$13P8LC
     g$6442$5506$13P8LC)
   (g$6457$5511$13P8LC
     g$6457$5606$13P8LC
     (make-record-type-descriptor
       '&message
       g$6441$5504$13P8LC
       'g$6460$13P8LC
       '#f
       '#f
       '#((immutable message))))
   (g$6459$5512$13P8LC g$6459$5607$13P8LC '#f)
   (g$6458$5513$13P8LC
     g$6458$5608$13P8LC
     (make-record-constructor-descriptor
       g$6457$5511$13P8LC
       g$6442$5506$13P8LC
       g$6459$5512$13P8LC))
   (g$6456$5514$13P8LC
     g$6456$5609$13P8LC
     (record-predicate g$6457$5511$13P8LC))
   (g$make-message-condition$5515$13P8LC
     g$make-message-condition$5610$13P8LC
     (record-constructor g$6458$5513$13P8LC))
   (g$6455$5516$13P8LC
     g$6455$5611$13P8LC
     (record-accessor g$6457$5511$13P8LC '0))
   (g$message-condition?$5517$13P8LC
     g$message-condition?$5612$13P8LC
     (condition-predicate g$6457$5511$13P8LC))
   (g$condition-message$5518$13P8LC
     g$condition-message$5613$13P8LC
     (condition-accessor g$6457$5511$13P8LC g$6455$5516$13P8LC))
   (g$6473$5519$13P8LC
     g$6473$5614$13P8LC
     (make-record-type-descriptor
       '&warning
       g$6441$5504$13P8LC
       'g$6476$13P8LC
       '#f
       '#f
       '#()))
   (g$6475$5520$13P8LC g$6475$5615$13P8LC '#f)
   (g$6474$5521$13P8LC
     g$6474$5616$13P8LC
     (make-record-constructor-descriptor
       g$6473$5519$13P8LC
       g$6442$5506$13P8LC
       g$6475$5520$13P8LC))
   (g$6472$5522$13P8LC
     g$6472$5617$13P8LC
     (record-predicate g$6473$5519$13P8LC))
   (g$make-warning$5523$13P8LC
     g$make-warning$5618$13P8LC
     (record-constructor g$6474$5521$13P8LC))
   (g$warning?$5524$13P8LC
     g$warning?$5619$13P8LC
     (condition-predicate g$6473$5519$13P8LC))
   (g$6487$5525$13P8LC
     g$6487$5620$13P8LC
     (make-record-type-descriptor
       '&serious
       g$6441$5504$13P8LC
       'g$6490$13P8LC
       '#f
       '#f
       '#()))
   (g$6489$5526$13P8LC g$6489$5621$13P8LC '#f)
   (g$6488$5527$13P8LC
     g$6488$5622$13P8LC
     (make-record-constructor-descriptor
       g$6487$5525$13P8LC
       g$6442$5506$13P8LC
       g$6489$5526$13P8LC))
   (g$6486$5528$13P8LC
     g$6486$5623$13P8LC
     (record-predicate g$6487$5525$13P8LC))
   (g$make-serious-condition$5529$13P8LC
     g$make-serious-condition$5624$13P8LC
     (record-constructor g$6488$5527$13P8LC))
   (g$serious-condition?$5530$13P8LC
     g$serious-condition?$5625$13P8LC
     (condition-predicate g$6487$5525$13P8LC))
   (g$6501$5531$13P8LC
     g$6501$5626$13P8LC
     (make-record-type-descriptor
       '&error
       g$6487$5525$13P8LC
       'g$6504$13P8LC
       '#f
       '#f
       '#()))
   (g$6503$5532$13P8LC g$6503$5627$13P8LC '#f)
   (g$6502$5533$13P8LC
     g$6502$5628$13P8LC
     (make-record-constructor-descriptor
       g$6501$5531$13P8LC
       g$6488$5527$13P8LC
       g$6503$5532$13P8LC))
   (g$6500$5534$13P8LC
     g$6500$5629$13P8LC
     (record-predicate g$6501$5531$13P8LC))
   (g$make-error$5535$13P8LC
     g$make-error$5630$13P8LC
     (record-constructor g$6502$5533$13P8LC))
   (g$error?$5536$13P8LC
     g$error?$5631$13P8LC
     (condition-predicate g$6501$5531$13P8LC))
   (g$6515$5537$13P8LC
     g$6515$5632$13P8LC
     (make-record-type-descriptor
       '&violation
       g$6487$5525$13P8LC
       'g$6518$13P8LC
       '#f
       '#f
       '#()))
   (g$6517$5538$13P8LC g$6517$5633$13P8LC '#f)
   (g$6516$5539$13P8LC
     g$6516$5634$13P8LC
     (make-record-constructor-descriptor
       g$6515$5537$13P8LC
       g$6488$5527$13P8LC
       g$6517$5538$13P8LC))
   (g$6514$5540$13P8LC
     g$6514$5635$13P8LC
     (record-predicate g$6515$5537$13P8LC))
   (g$make-violation$5541$13P8LC
     g$make-violation$5636$13P8LC
     (record-constructor g$6516$5539$13P8LC))
   (g$violation?$5542$13P8LC
     g$violation?$5637$13P8LC
     (condition-predicate g$6515$5537$13P8LC))
   (g$6529$5543$13P8LC
     g$6529$5638$13P8LC
     (make-record-type-descriptor
       '&assertion
       g$6515$5537$13P8LC
       'g$6532$13P8LC
       '#f
       '#f
       '#()))
   (g$6531$5544$13P8LC g$6531$5639$13P8LC '#f)
   (g$6530$5545$13P8LC
     g$6530$5640$13P8LC
     (make-record-constructor-descriptor
       g$6529$5543$13P8LC
       g$6516$5539$13P8LC
       g$6531$5544$13P8LC))
   (g$6528$5546$13P8LC
     g$6528$5641$13P8LC
     (record-predicate g$6529$5543$13P8LC))
   (g$make-assertion-violation$5547$13P8LC
     g$make-assertion-violation$5642$13P8LC
     (record-constructor g$6530$5545$13P8LC))
   (g$assertion-violation?$5548$13P8LC
     g$assertion-violation?$5643$13P8LC
     (condition-predicate g$6529$5543$13P8LC))
   (g$6544$5549$13P8LC
     g$6544$5644$13P8LC
     (make-record-type-descriptor
       '&irritants
       g$6441$5504$13P8LC
       'g$6547$13P8LC
       '#f
       '#f
       '#((immutable irritants))))
   (g$6546$5550$13P8LC g$6546$5645$13P8LC '#f)
   (g$6545$5551$13P8LC
     g$6545$5646$13P8LC
     (make-record-constructor-descriptor
       g$6544$5549$13P8LC
       g$6442$5506$13P8LC
       g$6546$5550$13P8LC))
   (g$6543$5552$13P8LC
     g$6543$5647$13P8LC
     (record-predicate g$6544$5549$13P8LC))
   (g$make-irritants-condition$5553$13P8LC
     g$make-irritants-condition$5648$13P8LC
     (record-constructor g$6545$5551$13P8LC))
   (g$6542$5554$13P8LC
     g$6542$5649$13P8LC
     (record-accessor g$6544$5549$13P8LC '0))
   (g$irritants-condition?$5555$13P8LC
     g$irritants-condition?$5650$13P8LC
     (condition-predicate g$6544$5549$13P8LC))
   (g$condition-irritants$5556$13P8LC
     g$condition-irritants$5651$13P8LC
     (condition-accessor g$6544$5549$13P8LC g$6542$5554$13P8LC))
   (g$6561$5557$13P8LC
     g$6561$5652$13P8LC
     (make-record-type-descriptor
       '&who
       g$6441$5504$13P8LC
       'g$6564$13P8LC
       '#f
       '#f
       '#((immutable who))))
   (g$6563$5558$13P8LC g$6563$5653$13P8LC '#f)
   (g$6562$5559$13P8LC
     g$6562$5654$13P8LC
     (make-record-constructor-descriptor
       g$6561$5557$13P8LC
       g$6442$5506$13P8LC
       g$6563$5558$13P8LC))
   (g$6560$5560$13P8LC
     g$6560$5655$13P8LC
     (record-predicate g$6561$5557$13P8LC))
   (g$make-who-condition$5561$13P8LC
     g$make-who-condition$5656$13P8LC
     (record-constructor g$6562$5559$13P8LC))
   (g$6559$5562$13P8LC
     g$6559$5657$13P8LC
     (record-accessor g$6561$5557$13P8LC '0))
   (g$who-condition?$5563$13P8LC
     g$who-condition?$5658$13P8LC
     (condition-predicate g$6561$5557$13P8LC))
   (g$condition-who$5564$13P8LC
     g$condition-who$5659$13P8LC
     (condition-accessor g$6561$5557$13P8LC g$6559$5562$13P8LC))
   (g$6577$5565$13P8LC
     g$6577$5660$13P8LC
     (make-record-type-descriptor
       '&non-continuable
       g$6515$5537$13P8LC
       'g$6580$13P8LC
       '#f
       '#f
       '#()))
   (g$6579$5566$13P8LC g$6579$5661$13P8LC '#f)
   (g$6578$5567$13P8LC
     g$6578$5662$13P8LC
     (make-record-constructor-descriptor
       g$6577$5565$13P8LC
       g$6516$5539$13P8LC
       g$6579$5566$13P8LC))
   (g$6576$5568$13P8LC
     g$6576$5663$13P8LC
     (record-predicate g$6577$5565$13P8LC))
   (g$make-non-continuable-violation$5569$13P8LC
     g$make-non-continuable-violation$5664$13P8LC
     (record-constructor g$6578$5567$13P8LC))
   (g$non-continuable-violation?$5570$13P8LC
     g$non-continuable-violation?$5665$13P8LC
     (condition-predicate g$6577$5565$13P8LC))
   (g$6591$5571$13P8LC
     g$6591$5666$13P8LC
     (make-record-type-descriptor
       '&implementation-restriction
       g$6515$5537$13P8LC
       'g$6594$13P8LC
       '#f
       '#f
       '#()))
   (g$6593$5572$13P8LC g$6593$5667$13P8LC '#f)
   (g$6592$5573$13P8LC
     g$6592$5668$13P8LC
     (make-record-constructor-descriptor
       g$6591$5571$13P8LC
       g$6516$5539$13P8LC
       g$6593$5572$13P8LC))
   (g$6590$5574$13P8LC
     g$6590$5669$13P8LC
     (record-predicate g$6591$5571$13P8LC))
   (g$make-implementation-restriction-violation$5575$13P8LC
     g$make-implementation-restriction-violation$5670$13P8LC
     (record-constructor g$6592$5573$13P8LC))
   (g$implementation-restriction-violation?$5576$13P8LC
     g$implementation-restriction-violation?$5671$13P8LC
     (condition-predicate g$6591$5571$13P8LC))
   (g$6605$5577$13P8LC
     g$6605$5672$13P8LC
     (make-record-type-descriptor
       '&lexical
       g$6515$5537$13P8LC
       'g$6608$13P8LC
       '#f
       '#f
       '#()))
   (g$6607$5578$13P8LC g$6607$5673$13P8LC '#f)
   (g$6606$5579$13P8LC
     g$6606$5674$13P8LC
     (make-record-constructor-descriptor
       g$6605$5577$13P8LC
       g$6516$5539$13P8LC
       g$6607$5578$13P8LC))
   (g$6604$5580$13P8LC
     g$6604$5675$13P8LC
     (record-predicate g$6605$5577$13P8LC))
   (g$make-lexical-violation$5581$13P8LC
     g$make-lexical-violation$5676$13P8LC
     (record-constructor g$6606$5579$13P8LC))
   (g$lexical-violation?$5582$13P8LC
     g$lexical-violation?$5677$13P8LC
     (condition-predicate g$6605$5577$13P8LC))
   (g$6621$5583$13P8LC
     g$6621$5678$13P8LC
     (make-record-type-descriptor
       '&syntax
       g$6515$5537$13P8LC
       'g$6624$13P8LC
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6623$5584$13P8LC g$6623$5679$13P8LC '#f)
   (g$6622$5585$13P8LC
     g$6622$5680$13P8LC
     (make-record-constructor-descriptor
       g$6621$5583$13P8LC
       g$6516$5539$13P8LC
       g$6623$5584$13P8LC))
   (g$6620$5586$13P8LC
     g$6620$5681$13P8LC
     (record-predicate g$6621$5583$13P8LC))
   (g$make-syntax-violation$5587$13P8LC
     g$make-syntax-violation$5682$13P8LC
     (record-constructor g$6622$5585$13P8LC))
   (g$6618$5588$13P8LC
     g$6618$5683$13P8LC
     (record-accessor g$6621$5583$13P8LC '0))
   (g$6619$5589$13P8LC
     g$6619$5684$13P8LC
     (record-accessor g$6621$5583$13P8LC '1))
   (g$syntax-violation?$5590$13P8LC
     g$syntax-violation?$5685$13P8LC
     (condition-predicate g$6621$5583$13P8LC))
   (g$syntax-violation-form$5591$13P8LC
     g$syntax-violation-form$5686$13P8LC
     (condition-accessor g$6621$5583$13P8LC g$6618$5588$13P8LC))
   (g$syntax-violation-subform$5592$13P8LC
     g$syntax-violation-subform$5687$13P8LC
     (condition-accessor g$6621$5583$13P8LC g$6619$5589$13P8LC))
   (g$6639$5593$13P8LC
     g$6639$5688$13P8LC
     (make-record-type-descriptor
       '&undefined
       g$6515$5537$13P8LC
       'g$6642$13P8LC
       '#f
       '#f
       '#()))
   (g$6641$5594$13P8LC g$6641$5689$13P8LC '#f)
   (g$6640$5595$13P8LC
     g$6640$5690$13P8LC
     (make-record-constructor-descriptor
       g$6639$5593$13P8LC
       g$6516$5539$13P8LC
       g$6641$5594$13P8LC))
   (g$6638$5596$13P8LC
     g$6638$5691$13P8LC
     (record-predicate g$6639$5593$13P8LC))
   (g$make-undefined-violation$5597$13P8LC
     g$make-undefined-violation$5692$13P8LC
     (record-constructor g$6640$5595$13P8LC))
   (g$undefined-violation?$5598$13P8LC
     g$undefined-violation?$5693$13P8LC
     (condition-predicate g$6639$5593$13P8LC)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5694$13P8LC
     g$append!$5700$13P8LC
     (case-lambda
       ((g$a$5695$13P8LC . g$b$5696$13P8LC)
        (if (null? g$a$5695$13P8LC)
          g$b$5696$13P8LC
          (if (null? g$b$5696$13P8LC)
            g$a$5695$13P8LC
            (begin
              ((letrec ((g$f$5697$13P8LC
                          (case-lambda
                            ((g$a$5698$13P8LC)
                             ((case-lambda
                                ((g$n$5699$13P8LC)
                                 (if (null? g$n$5699$13P8LC)
                                   (set-cdr! g$a$5698$13P8LC g$b$5696$13P8LC)
                                   (g$f$5697$13P8LC g$n$5699$13P8LC))))
                              (cdr g$a$5698$13P8LC))))))
                 g$f$5697$13P8LC)
               g$a$5695$13P8LC)
              g$a$5695$13P8LC)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5701$13P8LC
     g$sign$5719$13P8LC
     (case-lambda
       ((g$n$5707$13P8LC)
        (if (> g$n$5707$13P8LC '0) '1 (if (< g$n$5707$13P8LC '0) '-1 '0)))))
   (g$quotient$5702$13P8LC
     g$quotient$5720$13P8LC
     (case-lambda
       ((g$n1$5708$13P8LC g$n2$5709$13P8LC)
        (* (g$sign$5701$13P8LC g$n1$5708$13P8LC)
           (g$sign$5701$13P8LC g$n2$5709$13P8LC)
           (div (abs g$n1$5708$13P8LC) (abs g$n2$5709$13P8LC))))))
   (g$remainder$5703$13P8LC
     g$remainder$5721$13P8LC
     (case-lambda
       ((g$n1$5710$13P8LC g$n2$5711$13P8LC)
        (* (g$sign$5701$13P8LC g$n1$5710$13P8LC)
           (mod (abs g$n1$5710$13P8LC) (abs g$n2$5711$13P8LC))))))
   (g$modulo$5704$13P8LC
     g$modulo$5722$13P8LC
     (case-lambda
       ((g$n1$5712$13P8LC g$n2$5713$13P8LC)
        (* (g$sign$5701$13P8LC g$n2$5713$13P8LC)
           (mod (* (g$sign$5701$13P8LC g$n2$5713$13P8LC) g$n1$5712$13P8LC)
                (abs g$n2$5713$13P8LC))))))
   (g$make-promise$5705$13P8LC
     g$make-promise$5723$13P8LC
     (case-lambda
       ((g$proc$5714$13P8LC)
        ((case-lambda
           ((g$result-ready?$5715$13P8LC g$result$5716$13P8LC)
            (case-lambda
              (()
               (if g$result-ready?$5715$13P8LC
                 g$result$5716$13P8LC
                 ((case-lambda
                    ((g$x$5717$13P8LC)
                     (if g$result-ready?$5715$13P8LC
                       g$result$5716$13P8LC
                       (begin
                         (set! g$result-ready?$5715$13P8LC '#t)
                         (set! g$result$5716$13P8LC g$x$5717$13P8LC)
                         g$result$5716$13P8LC))))
                  (g$proc$5714$13P8LC)))))))
         '#f
         '#f))))
   (g$force$5706$13P8LC
     g$force$5724$13P8LC
     (case-lambda ((g$object$5718$13P8LC) (g$object$5718$13P8LC)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5725$13P8LC
     g$split$5751$13P8LC
     (case-lambda
       ((g$ls$5728$13P8LC)
        ((letrec ((g$loop$5729$13P8LC
                    (case-lambda
                      ((g$rest$5730$13P8LC
                         g$left$5731$13P8LC
                         g$right$5732$13P8LC)
                       (if (null? g$rest$5730$13P8LC)
                         (cons g$left$5731$13P8LC g$right$5732$13P8LC)
                         (if (null? (cdr g$rest$5730$13P8LC))
                           (cons
                             (cons (car g$rest$5730$13P8LC) g$left$5731$13P8LC)
                             g$right$5732$13P8LC)
                           (g$loop$5729$13P8LC
                             (g$cddr$4889$13P8LC g$rest$5730$13P8LC)
                             (cons (car g$rest$5730$13P8LC) g$left$5731$13P8LC)
                             (cons
                               (g$cadr$4887$13P8LC g$rest$5730$13P8LC)
                               g$right$5732$13P8LC))))))))
           g$loop$5729$13P8LC)
         g$ls$5728$13P8LC
         '()
         '()))))
   (g$reverse-it$5726$13P8LC
     g$reverse-it$5752$13P8LC
     (case-lambda
       ((g$head$5733$13P8LC g$tail$5734$13P8LC)
        (if (null? g$head$5733$13P8LC)
          g$tail$5734$13P8LC
          ((case-lambda
             ((g$hd$5735$13P8LC g$tl$5736$13P8LC)
              (g$reverse-it$5726$13P8LC
                g$tl$5736$13P8LC
                (cons g$hd$5735$13P8LC g$tail$5734$13P8LC))))
           (car g$head$5733$13P8LC)
           (cdr g$head$5733$13P8LC))))))
   (g$list-sort$5727$13P8LC
     g$list-sort$5753$13P8LC
     (case-lambda
       ((g$precedes?$5737$13P8LC g$ls$5738$13P8LC)
        ((case-lambda
           ((g$merge$5739$13P8LC)
            ((case-lambda
               (()
                (if (null? g$ls$5738$13P8LC)
                  '()
                  ((letrec ((g$helper$5740$13P8LC
                              (case-lambda
                                ((g$piece$5741$13P8LC)
                                 (if (null? (cdr g$piece$5741$13P8LC))
                                   g$piece$5741$13P8LC
                                   ((case-lambda
                                      ((g$parts$5742$13P8LC)
                                       (g$merge$5739$13P8LC
                                         (g$helper$5740$13P8LC
                                           (car g$parts$5742$13P8LC))
                                         (g$helper$5740$13P8LC
                                           (cdr g$parts$5742$13P8LC)))))
                                    (g$split$5725$13P8LC
                                      g$piece$5741$13P8LC)))))))
                     g$helper$5740$13P8LC)
                   g$ls$5738$13P8LC)))))))
         (case-lambda
           ((g$list-1$5743$13P8LC g$list-2$5744$13P8LC)
            ((letrec ((g$loop$5745$13P8LC
                        (case-lambda
                          ((g$source-1$5746$13P8LC
                             g$source-2$5747$13P8LC
                             g$so-far$5748$13P8LC)
                           (if (null? g$source-1$5746$13P8LC)
                             (g$reverse-it$5726$13P8LC
                               g$so-far$5748$13P8LC
                               g$source-2$5747$13P8LC)
                             (if (null? g$source-2$5747$13P8LC)
                               (g$reverse-it$5726$13P8LC
                                 g$so-far$5748$13P8LC
                                 g$source-1$5746$13P8LC)
                               ((case-lambda
                                  ((g$car-1$5749$13P8LC g$car-2$5750$13P8LC)
                                   (if (g$precedes?$5737$13P8LC
                                         g$car-2$5750$13P8LC
                                         g$car-1$5749$13P8LC)
                                     (g$loop$5745$13P8LC
                                       g$source-1$5746$13P8LC
                                       (cdr g$source-2$5747$13P8LC)
                                       (cons
                                         g$car-2$5750$13P8LC
                                         g$so-far$5748$13P8LC))
                                     (g$loop$5745$13P8LC
                                       g$source-2$5747$13P8LC
                                       (cdr g$source-1$5746$13P8LC)
                                       (cons
                                         g$car-1$5749$13P8LC
                                         g$so-far$5748$13P8LC)))))
                                (car g$source-1$5746$13P8LC)
                                (car g$source-2$5747$13P8LC))))))))
               g$loop$5745$13P8LC)
             g$list-1$5743$13P8LC
             g$list-2$5744$13P8LC
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$5791$13P8LC
     g$bitwise-if$5838$13P8LC
     (case-lambda
       ((g$ei1$5798$13P8LC g$ei2$5799$13P8LC g$ei3$5800$13P8LC)
        (bitwise-ior
          (bitwise-and g$ei1$5798$13P8LC g$ei2$5799$13P8LC)
          (bitwise-and (bitwise-not g$ei1$5798$13P8LC) g$ei3$5800$13P8LC)))))
   (g$bitwise-copy-bit$5792$13P8LC
     g$bitwise-copy-bit$5839$13P8LC
     (case-lambda
       ((g$ei1$5801$13P8LC g$ei2$5802$13P8LC g$ei3$5803$13P8LC)
        ((case-lambda
           ((g$mask$5804$13P8LC)
            ((case-lambda
               (()
                (g$bitwise-if$5791$13P8LC
                  g$mask$5804$13P8LC
                  (g$bitwise-arithmetic-shift-left$5795$13P8LC
                    g$ei3$5803$13P8LC
                    g$ei2$5802$13P8LC)
                  g$ei1$5801$13P8LC))))))
         (g$bitwise-arithmetic-shift-left$5795$13P8LC '1 g$ei2$5802$13P8LC)))))
   (g$bitwise-bit-field$5793$13P8LC
     g$bitwise-bit-field$5840$13P8LC
     (case-lambda
       ((g$ei1$5805$13P8LC g$ei2$5806$13P8LC g$ei3$5807$13P8LC)
        ((case-lambda
           ((g$mask$5808$13P8LC)
            (g$bitwise-arithmetic-shift-right$5796$13P8LC
              (bitwise-and g$ei1$5805$13P8LC g$mask$5808$13P8LC)
              g$ei2$5806$13P8LC)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$5795$13P8LC
             '-1
             g$ei3$5807$13P8LC))))))
   (g$bitwise-copy-bit-field$5794$13P8LC
     g$bitwise-copy-bit-field$5841$13P8LC
     (case-lambda
       ((g$ei1$5809$13P8LC
          g$ei2$5810$13P8LC
          g$ei3$5811$13P8LC
          g$ei4$5812$13P8LC)
        ((case-lambda
           ((g$to$5813$13P8LC)
            ((case-lambda
               ((g$start$5814$13P8LC)
                ((case-lambda
                   ((g$end$5815$13P8LC)
                    ((case-lambda
                       ((g$from$5816$13P8LC)
                        ((case-lambda
                           ((g$mask1$5817$13P8LC)
                            ((case-lambda
                               ((g$mask2$5818$13P8LC)
                                ((case-lambda
                                   ((g$mask$5819$13P8LC)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$5791$13P8LC
                                          g$mask$5819$13P8LC
                                          (g$bitwise-arithmetic-shift-left$5795$13P8LC
                                            g$from$5816$13P8LC
                                            g$start$5814$13P8LC)
                                          g$to$5813$13P8LC))))))
                                 (bitwise-and
                                   g$mask1$5817$13P8LC
                                   g$mask2$5818$13P8LC))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$5795$13P8LC
                                 '-1
                                 g$end$5815$13P8LC)))))
                         (g$bitwise-arithmetic-shift-left$5795$13P8LC
                           '-1
                           g$start$5814$13P8LC))))
                     g$ei4$5812$13P8LC)))
                 g$ei3$5811$13P8LC)))
             g$ei2$5810$13P8LC)))
         g$ei1$5809$13P8LC))))
   (g$bitwise-arithmetic-shift-left$5795$13P8LC
     g$bitwise-arithmetic-shift-left$5842$13P8LC
     (case-lambda
       ((g$ei1$5820$13P8LC g$ei2$5821$13P8LC)
        (bitwise-arithmetic-shift g$ei1$5820$13P8LC g$ei2$5821$13P8LC))))
   (g$bitwise-arithmetic-shift-right$5796$13P8LC
     g$bitwise-arithmetic-shift-right$5843$13P8LC
     (case-lambda
       ((g$ei1$5822$13P8LC g$ei2$5823$13P8LC)
        (bitwise-arithmetic-shift g$ei1$5822$13P8LC (- g$ei2$5823$13P8LC)))))
   (g$bitwise-rotate-bit-field$5797$13P8LC
     g$bitwise-rotate-bit-field$5844$13P8LC
     (case-lambda
       ((g$ei1$5824$13P8LC
          g$ei2$5825$13P8LC
          g$ei3$5826$13P8LC
          g$ei4$5827$13P8LC)
        ((case-lambda
           ((g$n$5828$13P8LC)
            ((case-lambda
               ((g$start$5829$13P8LC)
                ((case-lambda
                   ((g$end$5830$13P8LC)
                    ((case-lambda
                       ((g$count$5831$13P8LC)
                        ((case-lambda
                           ((g$width$5832$13P8LC)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5832$13P8LC)
                                  ((case-lambda
                                     ((g$count$5833$13P8LC)
                                      ((case-lambda
                                         ((g$field0$5834$13P8LC)
                                          ((case-lambda
                                             ((g$field1$5835$13P8LC)
                                              ((case-lambda
                                                 ((g$field2$5836$13P8LC)
                                                  ((case-lambda
                                                     ((g$field$5837$13P8LC)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$5794$13P8LC
                                                            g$n$5828$13P8LC
                                                            g$start$5829$13P8LC
                                                            g$end$5830$13P8LC
                                                            g$field$5837$13P8LC))))))
                                                   (bitwise-ior
                                                     g$field1$5835$13P8LC
                                                     g$field2$5836$13P8LC))))
                                               (g$bitwise-arithmetic-shift-right$5796$13P8LC
                                                 g$field0$5834$13P8LC
                                                 (- g$width$5832$13P8LC
                                                    g$count$5833$13P8LC)))))
                                           (g$bitwise-arithmetic-shift-left$5795$13P8LC
                                             g$field0$5834$13P8LC
                                             g$count$5833$13P8LC))))
                                       (g$bitwise-bit-field$5793$13P8LC
                                         g$n$5828$13P8LC
                                         g$start$5829$13P8LC
                                         g$end$5830$13P8LC))))
                                   (mod g$count$5831$13P8LC
                                        g$width$5832$13P8LC))
                                  g$n$5828$13P8LC))))))
                         (- g$end$5830$13P8LC g$start$5829$13P8LC))))
                     g$ei4$5827$13P8LC)))
                 g$ei3$5826$13P8LC)))
             g$ei2$5825$13P8LC)))
         g$ei1$5824$13P8LC)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$5845$13P8LC
     g$fxif$5892$13P8LC
     (case-lambda
       ((g$fx1$5852$13P8LC g$fx2$5853$13P8LC g$fx3$5854$13P8LC)
        (fxior
          (fxand g$fx1$5852$13P8LC g$fx2$5853$13P8LC)
          (fxand (fxnot g$fx1$5852$13P8LC) g$fx3$5854$13P8LC)))))
   (g$fxcopy-bit$5846$13P8LC
     g$fxcopy-bit$5893$13P8LC
     (case-lambda
       ((g$fx1$5855$13P8LC g$fx2$5856$13P8LC g$fx3$5857$13P8LC)
        ((case-lambda
           ((g$mask$5858$13P8LC)
            ((case-lambda
               (()
                (g$fxif$5845$13P8LC
                  g$mask$5858$13P8LC
                  (g$fxarithmetic-shift-left$5849$13P8LC
                    g$fx3$5857$13P8LC
                    g$fx2$5856$13P8LC)
                  g$fx1$5855$13P8LC))))))
         (g$fxarithmetic-shift-left$5849$13P8LC '1 g$fx2$5856$13P8LC)))))
   (g$fxbit-field$5847$13P8LC
     g$fxbit-field$5894$13P8LC
     (case-lambda
       ((g$fx1$5859$13P8LC g$fx2$5860$13P8LC g$fx3$5861$13P8LC)
        ((case-lambda
           ((g$mask$5862$13P8LC)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$5850$13P8LC
                  (fxand g$fx1$5859$13P8LC g$mask$5862$13P8LC)
                  g$fx2$5860$13P8LC))))))
         (fxnot
           (g$fxarithmetic-shift-left$5849$13P8LC '-1 g$fx3$5861$13P8LC))))))
   (g$fxcopy-bit-field$5848$13P8LC
     g$fxcopy-bit-field$5895$13P8LC
     (case-lambda
       ((g$fx1$5863$13P8LC
          g$fx2$5864$13P8LC
          g$fx3$5865$13P8LC
          g$fx4$5866$13P8LC)
        ((case-lambda
           ((g$to$5867$13P8LC)
            ((case-lambda
               ((g$start$5868$13P8LC)
                ((case-lambda
                   ((g$end$5869$13P8LC)
                    ((case-lambda
                       ((g$from$5870$13P8LC)
                        ((case-lambda
                           ((g$mask1$5871$13P8LC)
                            ((case-lambda
                               ((g$mask2$5872$13P8LC)
                                ((case-lambda
                                   ((g$mask$5873$13P8LC)
                                    ((case-lambda
                                       (()
                                        (g$fxif$5845$13P8LC
                                          g$mask$5873$13P8LC
                                          (g$fxarithmetic-shift-left$5849$13P8LC
                                            g$from$5870$13P8LC
                                            g$start$5868$13P8LC)
                                          g$to$5867$13P8LC))))))
                                 (fxand
                                   g$mask1$5871$13P8LC
                                   g$mask2$5872$13P8LC))))
                             (fxnot
                               (g$fxarithmetic-shift-left$5849$13P8LC
                                 '-1
                                 g$end$5869$13P8LC)))))
                         (g$fxarithmetic-shift-left$5849$13P8LC
                           '-1
                           g$start$5868$13P8LC))))
                     g$fx4$5866$13P8LC)))
                 g$fx3$5865$13P8LC)))
             g$fx2$5864$13P8LC)))
         g$fx1$5863$13P8LC))))
   (g$fxarithmetic-shift-left$5849$13P8LC
     g$fxarithmetic-shift-left$5896$13P8LC
     (case-lambda
       ((g$fx1$5874$13P8LC g$fx2$5875$13P8LC)
        (fxarithmetic-shift g$fx1$5874$13P8LC g$fx2$5875$13P8LC))))
   (g$fxarithmetic-shift-right$5850$13P8LC
     g$fxarithmetic-shift-right$5897$13P8LC
     (case-lambda
       ((g$fx1$5876$13P8LC g$fx2$5877$13P8LC)
        (fxarithmetic-shift g$fx1$5876$13P8LC (- g$fx2$5877$13P8LC)))))
   (g$fxrotate-bit-field$5851$13P8LC
     g$fxrotate-bit-field$5898$13P8LC
     (case-lambda
       ((g$fx1$5878$13P8LC
          g$fx2$5879$13P8LC
          g$fx3$5880$13P8LC
          g$fx4$5881$13P8LC)
        ((case-lambda
           ((g$n$5882$13P8LC)
            ((case-lambda
               ((g$start$5883$13P8LC)
                ((case-lambda
                   ((g$end$5884$13P8LC)
                    ((case-lambda
                       ((g$count$5885$13P8LC)
                        ((case-lambda
                           ((g$width$5886$13P8LC)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5886$13P8LC)
                                  ((case-lambda
                                     ((g$count$5887$13P8LC)
                                      ((case-lambda
                                         ((g$field0$5888$13P8LC)
                                          ((case-lambda
                                             ((g$field1$5889$13P8LC)
                                              ((case-lambda
                                                 ((g$field2$5890$13P8LC)
                                                  ((case-lambda
                                                     ((g$field$5891$13P8LC)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$5848$13P8LC
                                                            g$n$5882$13P8LC
                                                            g$start$5883$13P8LC
                                                            g$end$5884$13P8LC
                                                            g$field$5891$13P8LC))))))
                                                   (fxior
                                                     g$field1$5889$13P8LC
                                                     g$field2$5890$13P8LC))))
                                               (g$fxarithmetic-shift-right$5850$13P8LC
                                                 g$field0$5888$13P8LC
                                                 (- g$width$5886$13P8LC
                                                    g$count$5887$13P8LC)))))
                                           (g$fxarithmetic-shift-left$5849$13P8LC
                                             g$field0$5888$13P8LC
                                             g$count$5887$13P8LC))))
                                       (g$fxbit-field$5847$13P8LC
                                         g$n$5882$13P8LC
                                         g$start$5883$13P8LC
                                         g$end$5884$13P8LC))))
                                   (mod g$count$5885$13P8LC
                                        g$width$5886$13P8LC))
                                  g$n$5882$13P8LC))))))
                         (- g$end$5884$13P8LC g$start$5883$13P8LC))))
                     g$fx4$5881$13P8LC)))
                 g$fx3$5880$13P8LC)))
             g$fx2$5879$13P8LC)))
         g$fx1$5878$13P8LC)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$6859$5899$13P8LC
     g$6859$5911$13P8LC
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$6862$13P8LC
       '#f
       '#f
       '#()))
   (g$6861$5900$13P8LC g$6861$5912$13P8LC '#f)
   (g$6860$5901$13P8LC
     g$6860$5913$13P8LC
     (make-record-constructor-descriptor
       g$6859$5899$13P8LC
       &implementation-restriction-rcd
       g$6861$5900$13P8LC))
   (g$6858$5902$13P8LC
     g$6858$5914$13P8LC
     (record-predicate g$6859$5899$13P8LC))
   (g$make-no-infinities-violation$5903$13P8LC
     g$make-no-infinities-violation$5915$13P8LC
     (record-constructor g$6860$5901$13P8LC))
   (g$no-infinities-violation?$5904$13P8LC
     g$no-infinities-violation?$5916$13P8LC
     (condition-predicate g$6859$5899$13P8LC))
   (g$6873$5905$13P8LC
     g$6873$5917$13P8LC
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$6876$13P8LC
       '#f
       '#f
       '#()))
   (g$6875$5906$13P8LC g$6875$5918$13P8LC '#f)
   (g$6874$5907$13P8LC
     g$6874$5919$13P8LC
     (make-record-constructor-descriptor
       g$6873$5905$13P8LC
       &implementation-restriction-rcd
       g$6875$5906$13P8LC))
   (g$6872$5908$13P8LC
     g$6872$5920$13P8LC
     (record-predicate g$6873$5905$13P8LC))
   (g$make-no-nans-violation$5909$13P8LC
     g$make-no-nans-violation$5921$13P8LC
     (record-constructor g$6874$5907$13P8LC))
   (g$no-nans-violation?$5910$13P8LC
     g$no-nans-violation?$5922$13P8LC
     (condition-predicate g$6873$5905$13P8LC)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$6888$5923$13P8LC
     g$6888$6003$13P8LC
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$6891$13P8LC
       '#f
       '#f
       '#()))
   (g$6890$5924$13P8LC g$6890$6004$13P8LC '#f)
   (g$6889$5925$13P8LC
     g$6889$6005$13P8LC
     (make-record-constructor-descriptor
       g$6888$5923$13P8LC
       &error-rcd
       g$6890$5924$13P8LC))
   (g$6887$5926$13P8LC
     g$6887$6006$13P8LC
     (record-predicate g$6888$5923$13P8LC))
   (g$make-i/o-error$5927$13P8LC
     g$make-i/o-error$6007$13P8LC
     (record-constructor g$6889$5925$13P8LC))
   (g$i/o-error?$5928$13P8LC
     g$i/o-error?$6008$13P8LC
     (condition-predicate g$6888$5923$13P8LC))
   (g$6902$5929$13P8LC
     g$6902$6009$13P8LC
     (make-record-type-descriptor
       '&i/o-read
       g$6888$5923$13P8LC
       'g$6905$13P8LC
       '#f
       '#f
       '#()))
   (g$6904$5930$13P8LC g$6904$6010$13P8LC '#f)
   (g$6903$5931$13P8LC
     g$6903$6011$13P8LC
     (make-record-constructor-descriptor
       g$6902$5929$13P8LC
       g$6889$5925$13P8LC
       g$6904$5930$13P8LC))
   (g$6901$5932$13P8LC
     g$6901$6012$13P8LC
     (record-predicate g$6902$5929$13P8LC))
   (g$make-i/o-read-error$5933$13P8LC
     g$make-i/o-read-error$6013$13P8LC
     (record-constructor g$6903$5931$13P8LC))
   (g$i/o-read-error?$5934$13P8LC
     g$i/o-read-error?$6014$13P8LC
     (condition-predicate g$6902$5929$13P8LC))
   (g$6916$5935$13P8LC
     g$6916$6015$13P8LC
     (make-record-type-descriptor
       '&i/o-write
       g$6888$5923$13P8LC
       'g$6919$13P8LC
       '#f
       '#f
       '#()))
   (g$6918$5936$13P8LC g$6918$6016$13P8LC '#f)
   (g$6917$5937$13P8LC
     g$6917$6017$13P8LC
     (make-record-constructor-descriptor
       g$6916$5935$13P8LC
       g$6889$5925$13P8LC
       g$6918$5936$13P8LC))
   (g$6915$5938$13P8LC
     g$6915$6018$13P8LC
     (record-predicate g$6916$5935$13P8LC))
   (g$make-i/o-write-error$5939$13P8LC
     g$make-i/o-write-error$6019$13P8LC
     (record-constructor g$6917$5937$13P8LC))
   (g$i/o-write-error?$5940$13P8LC
     g$i/o-write-error?$6020$13P8LC
     (condition-predicate g$6916$5935$13P8LC))
   (g$6931$5941$13P8LC
     g$6931$6021$13P8LC
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6888$5923$13P8LC
       'g$6934$13P8LC
       '#f
       '#f
       '#((immutable position))))
   (g$6933$5942$13P8LC g$6933$6022$13P8LC '#f)
   (g$6932$5943$13P8LC
     g$6932$6023$13P8LC
     (make-record-constructor-descriptor
       g$6931$5941$13P8LC
       g$6889$5925$13P8LC
       g$6933$5942$13P8LC))
   (g$6930$5944$13P8LC
     g$6930$6024$13P8LC
     (record-predicate g$6931$5941$13P8LC))
   (g$make-i/o-invalid-position-error$5945$13P8LC
     g$make-i/o-invalid-position-error$6025$13P8LC
     (record-constructor g$6932$5943$13P8LC))
   (g$6929$5946$13P8LC
     g$6929$6026$13P8LC
     (record-accessor g$6931$5941$13P8LC '0))
   (g$i/o-invalid-position-error?$5947$13P8LC
     g$i/o-invalid-position-error?$6027$13P8LC
     (condition-predicate g$6931$5941$13P8LC))
   (g$i/o-error-position$5948$13P8LC
     g$i/o-error-position$6028$13P8LC
     (condition-accessor g$6931$5941$13P8LC g$6929$5946$13P8LC))
   (g$6948$5949$13P8LC
     g$6948$6029$13P8LC
     (make-record-type-descriptor
       '&i/o-filename
       g$6888$5923$13P8LC
       'g$6951$13P8LC
       '#f
       '#f
       '#((immutable filename))))
   (g$6950$5950$13P8LC g$6950$6030$13P8LC '#f)
   (g$6949$5951$13P8LC
     g$6949$6031$13P8LC
     (make-record-constructor-descriptor
       g$6948$5949$13P8LC
       g$6889$5925$13P8LC
       g$6950$5950$13P8LC))
   (g$6947$5952$13P8LC
     g$6947$6032$13P8LC
     (record-predicate g$6948$5949$13P8LC))
   (g$make-i/o-filename-error$5953$13P8LC
     g$make-i/o-filename-error$6033$13P8LC
     (record-constructor g$6949$5951$13P8LC))
   (g$6946$5954$13P8LC
     g$6946$6034$13P8LC
     (record-accessor g$6948$5949$13P8LC '0))
   (g$i/o-filename-error?$5955$13P8LC
     g$i/o-filename-error?$6035$13P8LC
     (condition-predicate g$6948$5949$13P8LC))
   (g$i/o-error-filename$5956$13P8LC
     g$i/o-error-filename$6036$13P8LC
     (condition-accessor g$6948$5949$13P8LC g$6946$5954$13P8LC))
   (g$6964$5957$13P8LC
     g$6964$6037$13P8LC
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6948$5949$13P8LC
       'g$6967$13P8LC
       '#f
       '#f
       '#()))
   (g$6966$5958$13P8LC g$6966$6038$13P8LC '#f)
   (g$6965$5959$13P8LC
     g$6965$6039$13P8LC
     (make-record-constructor-descriptor
       g$6964$5957$13P8LC
       g$6949$5951$13P8LC
       g$6966$5958$13P8LC))
   (g$6963$5960$13P8LC
     g$6963$6040$13P8LC
     (record-predicate g$6964$5957$13P8LC))
   (g$make-i/o-file-protection-error$5961$13P8LC
     g$make-i/o-file-protection-error$6041$13P8LC
     (record-constructor g$6965$5959$13P8LC))
   (g$i/o-file-protection-error?$5962$13P8LC
     g$i/o-file-protection-error?$6042$13P8LC
     (condition-predicate g$6964$5957$13P8LC))
   (g$6978$5963$13P8LC
     g$6978$6043$13P8LC
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6964$5957$13P8LC
       'g$6981$13P8LC
       '#f
       '#f
       '#()))
   (g$6980$5964$13P8LC g$6980$6044$13P8LC '#f)
   (g$6979$5965$13P8LC
     g$6979$6045$13P8LC
     (make-record-constructor-descriptor
       g$6978$5963$13P8LC
       g$6965$5959$13P8LC
       g$6980$5964$13P8LC))
   (g$6977$5966$13P8LC
     g$6977$6046$13P8LC
     (record-predicate g$6978$5963$13P8LC))
   (g$make-i/o-file-is-read-only-error$5967$13P8LC
     g$make-i/o-file-is-read-only-error$6047$13P8LC
     (record-constructor g$6979$5965$13P8LC))
   (g$i/o-file-is-read-only-error?$5968$13P8LC
     g$i/o-file-is-read-only-error?$6048$13P8LC
     (condition-predicate g$6978$5963$13P8LC))
   (g$6992$5969$13P8LC
     g$6992$6049$13P8LC
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6948$5949$13P8LC
       'g$6995$13P8LC
       '#f
       '#f
       '#()))
   (g$6994$5970$13P8LC g$6994$6050$13P8LC '#f)
   (g$6993$5971$13P8LC
     g$6993$6051$13P8LC
     (make-record-constructor-descriptor
       g$6992$5969$13P8LC
       g$6949$5951$13P8LC
       g$6994$5970$13P8LC))
   (g$6991$5972$13P8LC
     g$6991$6052$13P8LC
     (record-predicate g$6992$5969$13P8LC))
   (g$make-i/o-file-already-exists-error$5973$13P8LC
     g$make-i/o-file-already-exists-error$6053$13P8LC
     (record-constructor g$6993$5971$13P8LC))
   (g$i/o-file-already-exists-error?$5974$13P8LC
     g$i/o-file-already-exists-error?$6054$13P8LC
     (condition-predicate g$6992$5969$13P8LC))
   (g$7006$5975$13P8LC
     g$7006$6055$13P8LC
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6948$5949$13P8LC
       'g$7009$13P8LC
       '#f
       '#f
       '#()))
   (g$7008$5976$13P8LC g$7008$6056$13P8LC '#f)
   (g$7007$5977$13P8LC
     g$7007$6057$13P8LC
     (make-record-constructor-descriptor
       g$7006$5975$13P8LC
       g$6949$5951$13P8LC
       g$7008$5976$13P8LC))
   (g$7005$5978$13P8LC
     g$7005$6058$13P8LC
     (record-predicate g$7006$5975$13P8LC))
   (g$make-i/o-file-does-not-exist-error$5979$13P8LC
     g$make-i/o-file-does-not-exist-error$6059$13P8LC
     (record-constructor g$7007$5977$13P8LC))
   (g$i/o-file-does-not-exist-error?$5980$13P8LC
     g$i/o-file-does-not-exist-error?$6060$13P8LC
     (condition-predicate g$7006$5975$13P8LC))
   (g$7021$5981$13P8LC
     g$7021$6061$13P8LC
     (make-record-type-descriptor
       '&i/o-port
       g$6888$5923$13P8LC
       'g$7024$13P8LC
       '#f
       '#f
       '#((immutable port))))
   (g$7023$5982$13P8LC g$7023$6062$13P8LC '#f)
   (g$7022$5983$13P8LC
     g$7022$6063$13P8LC
     (make-record-constructor-descriptor
       g$7021$5981$13P8LC
       g$6889$5925$13P8LC
       g$7023$5982$13P8LC))
   (g$7020$5984$13P8LC
     g$7020$6064$13P8LC
     (record-predicate g$7021$5981$13P8LC))
   (g$make-i/o-port-error$5985$13P8LC
     g$make-i/o-port-error$6065$13P8LC
     (record-constructor g$7022$5983$13P8LC))
   (g$7019$5986$13P8LC
     g$7019$6066$13P8LC
     (record-accessor g$7021$5981$13P8LC '0))
   (g$i/o-port-error?$5987$13P8LC
     g$i/o-port-error?$6067$13P8LC
     (condition-predicate g$7021$5981$13P8LC))
   (g$i/o-error-port$5988$13P8LC
     g$i/o-error-port$6068$13P8LC
     (condition-accessor g$7021$5981$13P8LC g$7019$5986$13P8LC))
   (g$7037$5989$13P8LC
     g$7037$6069$13P8LC
     (make-record-type-descriptor
       '&i/o-decoding
       g$7021$5981$13P8LC
       'g$7040$13P8LC
       '#f
       '#f
       '#()))
   (g$7039$5990$13P8LC g$7039$6070$13P8LC '#f)
   (g$7038$5991$13P8LC
     g$7038$6071$13P8LC
     (make-record-constructor-descriptor
       g$7037$5989$13P8LC
       g$7022$5983$13P8LC
       g$7039$5990$13P8LC))
   (g$7036$5992$13P8LC
     g$7036$6072$13P8LC
     (record-predicate g$7037$5989$13P8LC))
   (g$make-i/o-decoding-error$5993$13P8LC
     g$make-i/o-decoding-error$6073$13P8LC
     (record-constructor g$7038$5991$13P8LC))
   (g$i/o-decoding-error?$5994$13P8LC
     g$i/o-decoding-error?$6074$13P8LC
     (condition-predicate g$7037$5989$13P8LC))
   (g$7052$5995$13P8LC
     g$7052$6075$13P8LC
     (make-record-type-descriptor
       '&i/o-encoding
       g$7021$5981$13P8LC
       'g$7055$13P8LC
       '#f
       '#f
       '#((immutable char))))
   (g$7054$5996$13P8LC g$7054$6076$13P8LC '#f)
   (g$7053$5997$13P8LC
     g$7053$6077$13P8LC
     (make-record-constructor-descriptor
       g$7052$5995$13P8LC
       g$7022$5983$13P8LC
       g$7054$5996$13P8LC))
   (g$7051$5998$13P8LC
     g$7051$6078$13P8LC
     (record-predicate g$7052$5995$13P8LC))
   (g$make-i/o-encoding-error$5999$13P8LC
     g$make-i/o-encoding-error$6079$13P8LC
     (record-constructor g$7053$5997$13P8LC))
   (g$7050$6000$13P8LC
     g$7050$6080$13P8LC
     (record-accessor g$7052$5995$13P8LC '0))
   (g$i/o-encoding-error?$6001$13P8LC
     g$i/o-encoding-error?$6081$13P8LC
     (condition-predicate g$7052$5995$13P8LC))
   (g$i/o-encoding-error-char$6002$13P8LC
     g$i/o-encoding-error-char$6082$13P8LC
     (condition-accessor g$7052$5995$13P8LC g$7050$6000$13P8LC)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6083$13P8LC
     g$get-output-string$6091$13P8LC
     (case-lambda
       ((g$port$6087$13P8LC)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6087$13P8LC))))
   (g$open-output-string$6084$13P8LC
     g$open-output-string$6092$13P8LC
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6085$13P8LC
     g$open-string-output-port$6093$13P8LC
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6088$13P8LC)
            (values
              g$p$6088$13P8LC
              (case-lambda
                (() (g$get-output-string$6083$13P8LC g$p$6088$13P8LC))))))
         (g$open-output-string$6084$13P8LC)))))
   (g$port?$6086$13P8LC
     g$port?$6094$13P8LC
     (case-lambda
       ((g$obj$6089$13P8LC)
        ((case-lambda
           ((g$t$6090$13P8LC)
            (if g$t$6090$13P8LC
              g$t$6090$13P8LC
              (begin '#f (binary-port? g$obj$6089$13P8LC)))))
         (textual-port? g$obj$6089$13P8LC))))))
  (void))

(library-letrec* (ironscheme io simple) () (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7081$6095$13P8LC
     g$7081$6201$13P8LC
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7083$6096$13P8LC g$7083$6202$13P8LC '#f)
   (g$7082$6097$13P8LC
     g$7082$6203$13P8LC
     (make-record-constructor-descriptor
       g$7081$6095$13P8LC
       '#f
       g$7083$6096$13P8LC))
   (g$enum?$6098$13P8LC
     g$enum?$6204$13P8LC
     (record-predicate g$7081$6095$13P8LC))
   (g$make-enum$6099$13P8LC
     g$make-enum$6205$13P8LC
     (record-constructor g$7082$6097$13P8LC))
   (g$enum-value$6100$13P8LC
     g$enum-value$6206$13P8LC
     (record-accessor g$7081$6095$13P8LC '0))
   (g$enum-info$6101$13P8LC
     g$enum-info$6207$13P8LC
     (record-accessor g$7081$6095$13P8LC '1))
   (g$7094$6102$13P8LC
     g$7094$6208$13P8LC
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7096$6103$13P8LC g$7096$6209$13P8LC '#f)
   (g$7095$6104$13P8LC
     g$7095$6210$13P8LC
     (make-record-constructor-descriptor
       g$7094$6102$13P8LC
       '#f
       g$7096$6103$13P8LC))
   (g$enum-universe?$6105$13P8LC
     g$enum-universe?$6211$13P8LC
     (record-predicate g$7094$6102$13P8LC))
   (g$make-enum-universe$6106$13P8LC
     g$make-enum-universe$6212$13P8LC
     (record-constructor g$7095$6104$13P8LC))
   (g$enum-universe-id$6107$13P8LC
     g$enum-universe-id$6213$13P8LC
     (record-accessor g$7094$6102$13P8LC '0))
   (g$enum-universe-symbols$6108$13P8LC
     g$enum-universe-symbols$6214$13P8LC
     (record-accessor g$7094$6102$13P8LC '1))
   (g$enum-universe-mapping$6109$13P8LC
     g$enum-universe-mapping$6215$13P8LC
     (record-accessor g$7094$6102$13P8LC '2))
   (g$enum-universe-value$6110$13P8LC
     g$enum-universe-value$6216$13P8LC
     (record-accessor g$7094$6102$13P8LC '3))
   (g$enum-type=?$6111$13P8LC
     g$enum-type=?$6217$13P8LC
     (case-lambda
       ((g$enumset1$6131$13P8LC g$enumset2$6132$13P8LC)
        (eq? (g$enum-universe-id$6107$13P8LC
               (g$enum-info$6101$13P8LC g$enumset1$6131$13P8LC))
             (g$enum-universe-id$6107$13P8LC
               (g$enum-info$6101$13P8LC g$enumset2$6132$13P8LC))))))
   (g$get-symbols$6112$13P8LC
     g$get-symbols$6218$13P8LC
     (case-lambda
       ((g$enumset$6133$13P8LC)
        (g$enum-universe-symbols$6108$13P8LC
          (g$enum-info$6101$13P8LC g$enumset$6133$13P8LC)))))
   (g$get-value$6113$13P8LC
     g$get-value$6219$13P8LC
     (case-lambda
       ((g$enumset$6134$13P8LC g$s$6135$13P8LC)
        (g$hashtable-ref$5152$13P8LC
          (g$enum-universe-mapping$6109$13P8LC
            (g$enum-info$6101$13P8LC g$enumset$6134$13P8LC))
          g$s$6135$13P8LC
          '#f))))
   (g$assert-enum$6114$13P8LC
     g$assert-enum$6220$13P8LC
     (case-lambda
       ((g$who$6136$13P8LC g$enumset$6137$13P8LC)
        (if (not (g$enum?$6098$13P8LC g$enumset$6137$13P8LC))
          (assertion-violation
            g$who$6136$13P8LC
            '"not an enumeration"
            g$enumset$6137$13P8LC)
          (void)))))
   (g$make-info$6115$13P8LC
     g$make-info$6221$13P8LC
     (case-lambda
       ((g$symbols$6138$13P8LC)
        ((case-lambda
           ((g$ht$6139$13P8LC)
            ((letrec ((g$f$6140$13P8LC
                        (case-lambda
                          ((g$s$6141$13P8LC g$a$6142$13P8LC g$mask$6143$13P8LC)
                           (if (null? g$s$6141$13P8LC)
                             (values
                               (reverse! g$a$6142$13P8LC)
                               g$ht$6139$13P8LC
                               (- g$mask$6143$13P8LC '1))
                             ((case-lambda
                                ((g$n$6144$13P8LC)
                                 (if (symbol? g$n$6144$13P8LC)
                                   (if (g$hashtable-contains?$5155$13P8LC
                                         g$ht$6139$13P8LC
                                         g$n$6144$13P8LC)
                                     (g$f$6140$13P8LC
                                       (cdr g$s$6141$13P8LC)
                                       g$a$6142$13P8LC
                                       g$mask$6143$13P8LC)
                                     (begin
                                       (g$hashtable-set!$5153$13P8LC
                                         g$ht$6139$13P8LC
                                         g$n$6144$13P8LC
                                         g$mask$6143$13P8LC)
                                       (g$f$6140$13P8LC
                                         (cdr g$s$6141$13P8LC)
                                         (cons g$n$6144$13P8LC g$a$6142$13P8LC)
                                         (g$bitwise-arithmetic-shift-left$5842$13P8LC
                                           g$mask$6143$13P8LC
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6144$13P8LC))))
                              (car g$s$6141$13P8LC)))))))
               g$f$6140$13P8LC)
             g$symbols$6138$13P8LC
             '()
             '1)))
         (g$make-eq-hashtable$5149$13P8LC)))))
   (g$make-enumeration$6116$13P8LC
     g$make-enumeration$6222$13P8LC
     (case-lambda
       ((g$symbols$6145$13P8LC)
        (call-with-values
          (case-lambda (() (g$make-info$6115$13P8LC g$symbols$6145$13P8LC)))
          (case-lambda
            ((g$s$6149$13P8LC g$mapping$6150$13P8LC g$mask$6151$13P8LC)
             ((case-lambda
                ((g$mask$6152$13P8LC g$mapping$6153$13P8LC g$s$6154$13P8LC)
                 (g$make-enum$6099$13P8LC
                   g$mask$6152$13P8LC
                   (g$make-enum-universe$6106$13P8LC
                     (gensym)
                     g$s$6154$13P8LC
                     g$mapping$6153$13P8LC
                     g$mask$6152$13P8LC))))
              g$mask$6151$13P8LC
              g$mapping$6150$13P8LC
              g$s$6149$13P8LC)))))))
   (g$enum-set-universe$6117$13P8LC
     g$enum-set-universe$6223$13P8LC
     (case-lambda
       ((g$enumset$6155$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC 'enum-set-universe g$enumset$6155$13P8LC)
          ((case-lambda
             ((g$ei$6156$13P8LC)
              (g$make-enum$6099$13P8LC
                (g$enum-universe-value$6110$13P8LC g$ei$6156$13P8LC)
                g$ei$6156$13P8LC)))
           (g$enum-info$6101$13P8LC g$enumset$6155$13P8LC))))))
   (g$enum-set-indexer$6118$13P8LC
     g$enum-set-indexer$6224$13P8LC
     (case-lambda
       ((g$enumset$6157$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC 'enum-set-indexer g$enumset$6157$13P8LC)
          (case-lambda
            ((g$symbol$6158$13P8LC)
             (begin
               (if (not (symbol? g$symbol$6158$13P8LC))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6158$13P8LC)
                 (void))
               ((case-lambda
                  ((g$v$6159$13P8LC)
                   (if g$v$6159$13P8LC
                     (- (bitwise-length g$v$6159$13P8LC) '1)
                     '#f)))
                (g$get-value$6113$13P8LC
                  g$enumset$6157$13P8LC
                  g$symbol$6158$13P8LC)))))))))
   (g$enum-set-constructor$6119$13P8LC
     g$enum-set-constructor$6225$13P8LC
     (case-lambda
       ((g$enumset$6160$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC
            'enum-set-constructor
            g$enumset$6160$13P8LC)
          (case-lambda
            ((g$symbols$6161$13P8LC)
             ((letrec ((g$f$6162$13P8LC
                         (case-lambda
                           ((g$v$6163$13P8LC g$s$6164$13P8LC)
                            (if (null? g$s$6164$13P8LC)
                              (g$make-enum$6099$13P8LC
                                g$v$6163$13P8LC
                                (g$enum-info$6101$13P8LC g$enumset$6160$13P8LC))
                              ((case-lambda
                                 ((g$n$6165$13P8LC)
                                  (if (symbol? g$n$6165$13P8LC)
                                    ((case-lambda
                                       ((g$v*$6166$13P8LC)
                                        (if g$v*$6166$13P8LC
                                          (g$f$6162$13P8LC
                                            (bitwise-ior
                                              g$v$6163$13P8LC
                                              g$v*$6166$13P8LC)
                                            (cdr g$s$6164$13P8LC))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6165$13P8LC))))
                                     (g$get-value$6113$13P8LC
                                       g$enumset$6160$13P8LC
                                       g$n$6165$13P8LC))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6165$13P8LC))))
                               (car g$s$6164$13P8LC)))))))
                g$f$6162$13P8LC)
              '0
              g$symbols$6161$13P8LC)))))))
   (g$enum-set->list$6120$13P8LC
     g$enum-set->list$6226$13P8LC
     (case-lambda
       ((g$enumset$6167$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC 'enum-set->list g$enumset$6167$13P8LC)
          ((case-lambda
             ((g$value$6168$13P8LC)
              ((letrec ((g$f$6169$13P8LC
                          (case-lambda
                            ((g$s$6170$13P8LC g$l$6171$13P8LC)
                             (if (null? g$s$6170$13P8LC)
                               (reverse! g$l$6171$13P8LC)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6113$13P8LC
                                         g$enumset$6167$13P8LC
                                         (car g$s$6170$13P8LC))
                                       g$value$6168$13P8LC))
                                 (g$f$6169$13P8LC
                                   (cdr g$s$6170$13P8LC)
                                   g$l$6171$13P8LC)
                                 (g$f$6169$13P8LC
                                   (cdr g$s$6170$13P8LC)
                                   (cons
                                     (car g$s$6170$13P8LC)
                                     g$l$6171$13P8LC))))))))
                 g$f$6169$13P8LC)
               (g$get-symbols$6112$13P8LC g$enumset$6167$13P8LC)
               '())))
           (g$enum-value$6100$13P8LC g$enumset$6167$13P8LC))))))
   (g$enum-set-member?$6121$13P8LC
     g$enum-set-member?$6227$13P8LC
     (case-lambda
       ((g$symbol$6172$13P8LC g$enumset$6173$13P8LC)
        (begin
          (if (not (symbol? g$symbol$6172$13P8LC))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6172$13P8LC)
            (void))
          (g$assert-enum$6114$13P8LC 'enum-set-member? g$enumset$6173$13P8LC)
          ((case-lambda
             ((g$v$6174$13P8LC)
              (if g$v$6174$13P8LC
                (not (zero?
                       (bitwise-and
                         g$v$6174$13P8LC
                         (g$enum-value$6100$13P8LC g$enumset$6173$13P8LC))))
                '#f)))
           (g$get-value$6113$13P8LC
             g$enumset$6173$13P8LC
             g$symbol$6172$13P8LC))))))
   (g$enum-set-subset?$6122$13P8LC
     g$enum-set-subset?$6228$13P8LC
     (case-lambda
       ((g$enumset1$6175$13P8LC g$enumset2$6176$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC 'enum-set-subset? g$enumset1$6175$13P8LC)
          (g$assert-enum$6114$13P8LC 'enum-set-subset? g$enumset2$6176$13P8LC)
          ((case-lambda
             ((g$v1$6177$13P8LC g$v2$6178$13P8LC)
              (if (g$enum-type=?$6111$13P8LC
                    g$enumset1$6175$13P8LC
                    g$enumset2$6176$13P8LC)
                (= (bitwise-and g$v1$6177$13P8LC g$v2$6178$13P8LC)
                   g$v1$6177$13P8LC)
                ((letrec ((g$f$6179$13P8LC
                            (case-lambda
                              ((g$s$6180$13P8LC)
                               (if (null? g$s$6180$13P8LC)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6181$13P8LC g$v2*$6182$13P8LC)
                                     (if g$v2*$6182$13P8LC
                                       ((case-lambda
                                          ((g$has1$6183$13P8LC
                                             g$has2$6184$13P8LC)
                                           (if (if g$has1$6183$13P8LC
                                                 (begin
                                                   '#f
                                                   (not g$has2$6184$13P8LC))
                                                 '#f)
                                             '#f
                                             (g$f$6179$13P8LC
                                               (cdr g$s$6180$13P8LC)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6177$13P8LC
                                                 g$v1*$6181$13P8LC)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6178$13P8LC
                                                 g$v2*$6182$13P8LC))))
                                       '#f)))
                                  (g$get-value$6113$13P8LC
                                    g$enumset1$6175$13P8LC
                                    (car g$s$6180$13P8LC))
                                  (g$get-value$6113$13P8LC
                                    g$enumset2$6176$13P8LC
                                    (car g$s$6180$13P8LC))))))))
                   g$f$6179$13P8LC)
                 (g$get-symbols$6112$13P8LC g$enumset1$6175$13P8LC)))))
           (g$enum-value$6100$13P8LC g$enumset1$6175$13P8LC)
           (g$enum-value$6100$13P8LC g$enumset2$6176$13P8LC))))))
   (g$enum-set=?$6123$13P8LC
     g$enum-set=?$6229$13P8LC
     (case-lambda
       ((g$enumset1$6185$13P8LC g$enumset2$6186$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC 'enum-set=? g$enumset1$6185$13P8LC)
          (g$assert-enum$6114$13P8LC 'enum-set=? g$enumset2$6186$13P8LC)
          (if (g$enum-set-subset?$6122$13P8LC
                g$enumset1$6185$13P8LC
                g$enumset2$6186$13P8LC)
            (begin
              '#f
              (g$enum-set-subset?$6122$13P8LC
                g$enumset2$6186$13P8LC
                g$enumset1$6185$13P8LC))
            '#f)))))
   (g$enum-set-union$6124$13P8LC
     g$enum-set-union$6230$13P8LC
     (case-lambda
       ((g$enumset1$6187$13P8LC g$enumset2$6188$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC 'enum-set-union g$enumset1$6187$13P8LC)
          (g$assert-enum$6114$13P8LC 'enum-set-union g$enumset2$6188$13P8LC)
          (if (g$enum-type=?$6111$13P8LC
                g$enumset1$6187$13P8LC
                g$enumset2$6188$13P8LC)
            (g$make-enum$6099$13P8LC
              (bitwise-ior
                (g$enum-value$6100$13P8LC g$enumset1$6187$13P8LC)
                (g$enum-value$6100$13P8LC g$enumset2$6188$13P8LC))
              (g$enum-info$6101$13P8LC g$enumset1$6187$13P8LC))
            '#f)))))
   (g$enum-set-intersection$6125$13P8LC
     g$enum-set-intersection$6231$13P8LC
     (case-lambda
       ((g$enumset1$6189$13P8LC g$enumset2$6190$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC
            'enum-set-intersection
            g$enumset1$6189$13P8LC)
          (g$assert-enum$6114$13P8LC
            'enum-set-intersection
            g$enumset2$6190$13P8LC)
          (if (g$enum-type=?$6111$13P8LC
                g$enumset1$6189$13P8LC
                g$enumset2$6190$13P8LC)
            (g$make-enum$6099$13P8LC
              (bitwise-and
                (g$enum-value$6100$13P8LC g$enumset1$6189$13P8LC)
                (g$enum-value$6100$13P8LC g$enumset2$6190$13P8LC))
              (g$enum-info$6101$13P8LC g$enumset1$6189$13P8LC))
            '#f)))))
   (g$enum-set-difference$6126$13P8LC
     g$enum-set-difference$6232$13P8LC
     (case-lambda
       ((g$enumset1$6191$13P8LC g$enumset2$6192$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC
            'enum-set-difference
            g$enumset1$6191$13P8LC)
          (g$assert-enum$6114$13P8LC
            'enum-set-difference
            g$enumset2$6192$13P8LC)
          (if (g$enum-type=?$6111$13P8LC
                g$enumset1$6191$13P8LC
                g$enumset2$6192$13P8LC)
            (g$make-enum$6099$13P8LC
              (bitwise-and
                (g$enum-value$6100$13P8LC g$enumset1$6191$13P8LC)
                (bitwise-not (g$enum-value$6100$13P8LC g$enumset2$6192$13P8LC)))
              (g$enum-info$6101$13P8LC g$enumset1$6191$13P8LC))
            '#f)))))
   (g$enum-set-complement$6127$13P8LC
     g$enum-set-complement$6233$13P8LC
     (case-lambda
       ((g$enumset$6193$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC 'enum-set-complement g$enumset$6193$13P8LC)
          (g$make-enum$6099$13P8LC
            (bitwise-not (g$enum-value$6100$13P8LC g$enumset$6193$13P8LC))
            (g$enum-info$6101$13P8LC g$enumset$6193$13P8LC))))))
   (g$enum-set-projection$6128$13P8LC
     g$enum-set-projection$6234$13P8LC
     (case-lambda
       ((g$enumset1$6194$13P8LC g$enumset2$6195$13P8LC)
        (begin
          (g$assert-enum$6114$13P8LC
            'enum-set-projection
            g$enumset1$6194$13P8LC)
          (g$assert-enum$6114$13P8LC
            'enum-set-projection
            g$enumset2$6195$13P8LC)
          ((case-lambda
             ((g$v1$6196$13P8LC)
              ((letrec ((g$f$6197$13P8LC
                          (case-lambda
                            ((g$s$6198$13P8LC g$v$6199$13P8LC)
                             (if (null? g$s$6198$13P8LC)
                               (g$make-enum$6099$13P8LC
                                 g$v$6199$13P8LC
                                 (g$enum-info$6101$13P8LC
                                   g$enumset2$6195$13P8LC))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6196$13P8LC
                                       (g$get-value$6113$13P8LC
                                         g$enumset1$6194$13P8LC
                                         (car g$s$6198$13P8LC))))
                                 (g$f$6197$13P8LC
                                   (cdr g$s$6198$13P8LC)
                                   g$v$6199$13P8LC)
                                 ((case-lambda
                                    ((g$v2$6200$13P8LC)
                                     (if g$v2$6200$13P8LC
                                       (g$f$6197$13P8LC
                                         (cdr g$s$6198$13P8LC)
                                         (bitwise-ior
                                           g$v$6199$13P8LC
                                           g$v2$6200$13P8LC))
                                       (g$f$6197$13P8LC
                                         (cdr g$s$6198$13P8LC)
                                         g$v$6199$13P8LC))))
                                  (g$get-value$6113$13P8LC
                                    g$enumset2$6195$13P8LC
                                    (car g$s$6198$13P8LC)))))))))
                 g$f$6197$13P8LC)
               (g$get-symbols$6112$13P8LC g$enumset1$6194$13P8LC)
               '0)))
           (g$enum-value$6100$13P8LC g$enumset1$6194$13P8LC)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6129$13P8LC g$p$6130$13P8LC)
       (g$fprintf$6259$13P8LC
         g$p$6130$13P8LC
         '"#[enum-set ~a]"
         (g$enum-set->list$6120$13P8LC g$x$6129$13P8LC))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6235$13P8LC
     g$dofmt$6257$13P8LC
     (case-lambda
       ((g$p$6239$13P8LC g$cntl$6240$13P8LC g$args$6241$13P8LC)
        ((case-lambda
           ((g$nmax$6242$13P8LC)
            ((letrec ((g$loop$6243$13P8LC
                        (case-lambda
                          ((g$n$6244$13P8LC g$a$6245$13P8LC)
                           (if (fx<=? g$n$6244$13P8LC g$nmax$6242$13P8LC)
                             ((case-lambda
                                ((g$c$6246$13P8LC)
                                 (if (if (char=? g$c$6246$13P8LC '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6244$13P8LC
                                           g$nmax$6242$13P8LC))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6247$13P8LC)
                                       (if (memv g$t$6247$13P8LC '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6245$13P8LC)
                                             g$p$6239$13P8LC)
                                           (g$loop$6243$13P8LC
                                             (fx+ g$n$6244$13P8LC '2)
                                             (cdr g$a$6245$13P8LC)))
                                         (if (memv g$t$6247$13P8LC '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6245$13P8LC)
                                               g$p$6239$13P8LC)
                                             (g$loop$6243$13P8LC
                                               (fx+ g$n$6244$13P8LC '2)
                                               (cdr g$a$6245$13P8LC)))
                                           (if (memv g$t$6247$13P8LC '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6245$13P8LC)
                                                   '2)
                                                 g$p$6239$13P8LC)
                                               (g$loop$6243$13P8LC
                                                 (fx+ g$n$6244$13P8LC '2)
                                                 (cdr g$a$6245$13P8LC)))
                                             (if (memv g$t$6247$13P8LC '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6245$13P8LC)
                                                     '8)
                                                   g$p$6239$13P8LC)
                                                 (g$loop$6243$13P8LC
                                                   (fx+ g$n$6244$13P8LC '2)
                                                   (cdr g$a$6245$13P8LC)))
                                               (if (memv g$t$6247$13P8LC '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6245$13P8LC)
                                                       '16)
                                                     g$p$6239$13P8LC)
                                                   (g$loop$6243$13P8LC
                                                     (fx+ g$n$6244$13P8LC '2)
                                                     (cdr g$a$6245$13P8LC)))
                                                 (if (memv
                                                       g$t$6247$13P8LC
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6245$13P8LC)
                                                         '10)
                                                       g$p$6239$13P8LC)
                                                     (g$loop$6243$13P8LC
                                                       (fx+ g$n$6244$13P8LC '2)
                                                       (cdr g$a$6245$13P8LC)))
                                                   (if (memv
                                                         g$t$6247$13P8LC
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6239$13P8LC)
                                                       (g$loop$6243$13P8LC
                                                         (fx+ g$n$6244$13P8LC
                                                              '2)
                                                         g$a$6245$13P8LC))
                                                     (begin
                                                       (write-char
                                                         g$c$6246$13P8LC
                                                         g$p$6239$13P8LC)
                                                       (g$loop$6243$13P8LC
                                                         (fx+ g$n$6244$13P8LC
                                                              '1)
                                                         g$a$6245$13P8LC)))))))))))
                                    (string-ref
                                      g$cntl$6240$13P8LC
                                      (fx+ g$n$6244$13P8LC '1)))
                                   (begin
                                     (write-char
                                       g$c$6246$13P8LC
                                       g$p$6239$13P8LC)
                                     (g$loop$6243$13P8LC
                                       (fx+ g$n$6244$13P8LC '1)
                                       g$a$6245$13P8LC)))))
                              (string-ref g$cntl$6240$13P8LC g$n$6244$13P8LC))
                             (void))))))
               g$loop$6243$13P8LC)
             '0
             g$args$6241$13P8LC)))
         (fx- (string-length g$cntl$6240$13P8LC) '1)))))
   (g$printf$6236$13P8LC
     g$printf$6258$13P8LC
     (case-lambda
       ((g$control$6248$13P8LC . g$args$6249$13P8LC)
        (g$dofmt$6235$13P8LC
          (current-output-port)
          g$control$6248$13P8LC
          g$args$6249$13P8LC))))
   (g$fprintf$6237$13P8LC
     g$fprintf$6259$13P8LC
     (case-lambda
       ((g$p$6250$13P8LC g$control$6251$13P8LC . g$args$6252$13P8LC)
        (g$dofmt$6235$13P8LC
          g$p$6250$13P8LC
          g$control$6251$13P8LC
          g$args$6252$13P8LC))))
   (g$format$6238$13P8LC
     g$format$6260$13P8LC
     (case-lambda
       ((g$control$6253$13P8LC . g$args$6254$13P8LC)
        (call-with-values
          g$open-string-output-port$6093$13P8LC
          (case-lambda
            ((g$p$6255$13P8LC g$c$6256$13P8LC)
             (begin
               (g$dofmt$6235$13P8LC
                 g$p$6255$13P8LC
                 g$control$6253$13P8LC
                 g$args$6254$13P8LC)
               (g$c$6256$13P8LC)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6261$13P8LC
     g$make-traced-macro$6264$13P8LC
     (case-lambda
       ((g$name$6262$13P8LC g$x$6263$13P8LC)
        (if (procedure? g$x$6263$13P8LC)
          (make-traced-procedure
            g$name$6262$13P8LC
            g$x$6263$13P8LC
            g$syntax->datum$10904$13P8LC)
          (if (g$variable-transformer?$10729$13P8LC g$x$6263$13P8LC)
            (g$make-variable-transformer$10728$13P8LC
              (make-traced-procedure
                g$name$6262$13P8LC
                (g$variable-transformer-procedure$10730$13P8LC g$x$6263$13P8LC)
                g$syntax->datum$10904$13P8LC))
            g$x$6263$13P8LC))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6265$13P8LC
     g$read-library-source-file$6344$13P8LC
     (case-lambda
       ((g$file-name$6336$13P8LC)
        (with-input-from-file g$file-name$6336$13P8LC read-annotated))))
   (g$make-parameter$6266$13P8LC
     g$make-parameter$6345$13P8LC
     (case-lambda
       ((g$x$6337$13P8LC)
        (g$make-parameter$6266$13P8LC
          g$x$6337$13P8LC
          (case-lambda ((g$x$6338$13P8LC) g$x$6338$13P8LC))))
       ((g$x$6339$13P8LC g$fender$6340$13P8LC)
        (begin
          (if (not (procedure? g$fender$6340$13P8LC))
            (g$assertion-error$10897$13P8LC
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6341$13P8LC)
              (case-lambda
                (() g$x$6341$13P8LC)
                ((g$v$6342$13P8LC)
                 (set! g$x$6341$13P8LC
                   (g$fender$6340$13P8LC g$v$6342$13P8LC))))))
           (g$fender$6340$13P8LC g$x$6339$13P8LC))))))
   (g$file-options-constructor$6334$13P8LC
     g$file-options-constructor$6346$13P8LC
     (g$make-parameter$6266$13P8LC '#f))
   (g$file-options-spec$6335$13P8LC
     g$file-options-spec$6347$13P8LC
     (case-lambda
       ((g$x$6343$13P8LC)
        ((g$file-options-constructor$6334$13P8LC) g$x$6343$13P8LC)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6544$13P8LC
     g$current-primitive-locations$6589$13P8LC
     (g$make-parameter$6345$13P8LC
       (case-lambda ((g$x$6550$13P8LC) '#f))
       (case-lambda
         ((g$p$6551$13P8LC)
          (begin
            (if (not (procedure? g$p$6551$13P8LC))
              (g$assertion-error$10897$13P8LC
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6551$13P8LC)))))
   (g$mutable?$6545$13P8LC
     g$mutable?$6590$13P8LC
     (case-lambda
       ((g$x$6552$13P8LC)
        (letrec* ((g$simple?$6553$13P8LC
                    (case-lambda
                      ((g$x$6554$13P8LC)
                       ((case-lambda
                          ((g$t$6555$13P8LC)
                           (if g$t$6555$13P8LC
                             g$t$6555$13P8LC
                             ((case-lambda
                                ((g$t$6556$13P8LC)
                                 (if g$t$6556$13P8LC
                                   g$t$6556$13P8LC
                                   ((case-lambda
                                      ((g$t$6557$13P8LC)
                                       (if g$t$6557$13P8LC
                                         g$t$6557$13P8LC
                                         ((case-lambda
                                            ((g$t$6558$13P8LC)
                                             (if g$t$6558$13P8LC
                                               g$t$6558$13P8LC
                                               ((case-lambda
                                                  ((g$t$6559$13P8LC)
                                                   (if g$t$6559$13P8LC
                                                     g$t$6559$13P8LC
                                                     ((case-lambda
                                                        ((g$t$6560$13P8LC)
                                                         (if g$t$6560$13P8LC
                                                           g$t$6560$13P8LC
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6554$13P8LC)))))
                                                      (bytevector?
                                                        g$x$6554$13P8LC)))))
                                                (string? g$x$6554$13P8LC)))))
                                          (boolean? g$x$6554$13P8LC)))))
                                    (symbol? g$x$6554$13P8LC)))))
                              (char? g$x$6554$13P8LC)))))
                        (null? g$x$6554$13P8LC))))))
          (not (g$simple?$6553$13P8LC g$x$6552$13P8LC))))))
   (g$rewriter$6546$13P8LC
     g$rewriter$6591$13P8LC
     (case-lambda
       ((g$quote-hack?$6561$13P8LC)
        (letrec* ((g$f$6562$13P8LC
                    (case-lambda
                      ((g$x$6563$13P8LC)
                       (if (pair? g$x$6563$13P8LC)
                         ((case-lambda
                            ((g$t$6564$13P8LC)
                             (if (memv g$t$6564$13P8LC '(quote))
                               (if (if g$quote-hack?$6561$13P8LC
                                     (begin
                                       '#f
                                       (g$mutable?$6545$13P8LC
                                         (g$cadr$4887$13P8LC g$x$6563$13P8LC)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6565$13P8LC)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6565$13P8LC
                                         (g$cadr$4887$13P8LC g$x$6563$13P8LC))
                                       g$g$6565$13P8LC)))
                                  (gensym))
                                 g$x$6563$13P8LC)
                               (if (memv g$t$6564$13P8LC '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6566$13P8LC)
                                           (cons
                                             (car g$x$6566$13P8LC)
                                             (map g$f$6562$13P8LC
                                                  (cdr g$x$6566$13P8LC)))))
                                        (cdr g$x$6563$13P8LC)))
                                 (if (memv g$t$6564$13P8LC '(lambda))
                                   (g$cons*$5358$13P8LC
                                     'lambda
                                     (g$cadr$4887$13P8LC g$x$6563$13P8LC)
                                     (map g$f$6562$13P8LC
                                          (g$cddr$4889$13P8LC g$x$6563$13P8LC)))
                                   (if (memv g$t$6564$13P8LC '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6567$13P8LC
                                           g$body*$6568$13P8LC)
                                         ((case-lambda
                                            ((g$lhs*$6569$13P8LC
                                               g$rhs*$6570$13P8LC)
                                             (g$cons*$5358$13P8LC
                                               'letrec
                                               (map list
                                                    g$lhs*$6569$13P8LC
                                                    (map g$f$6562$13P8LC
                                                         g$rhs*$6570$13P8LC))
                                               (map g$f$6562$13P8LC
                                                    g$body*$6568$13P8LC))))
                                          (map car g$bindings$6567$13P8LC)
                                          (map g$cadr$4887$13P8LC
                                               g$bindings$6567$13P8LC))))
                                      (g$cadr$4887$13P8LC g$x$6563$13P8LC)
                                      (g$cddr$4889$13P8LC g$x$6563$13P8LC))
                                     (if (memv g$t$6564$13P8LC '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6571$13P8LC
                                             g$body*$6572$13P8LC)
                                           ((case-lambda
                                              ((g$lhs*$6573$13P8LC
                                                 g$rhs*$6574$13P8LC)
                                               (g$cons*$5358$13P8LC
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6573$13P8LC
                                                      (map g$f$6562$13P8LC
                                                           g$rhs*$6574$13P8LC))
                                                 (map g$f$6562$13P8LC
                                                      g$body*$6572$13P8LC))))
                                            (map car g$bindings$6571$13P8LC)
                                            (map g$cadr$4887$13P8LC
                                                 g$bindings$6571$13P8LC))))
                                        (g$cadr$4887$13P8LC g$x$6563$13P8LC)
                                        (g$cddr$4889$13P8LC g$x$6563$13P8LC))
                                       (if (memv
                                             g$t$6564$13P8LC
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6575$13P8LC
                                               g$x$6576$13P8LC)
                                             ((case-lambda
                                                ((g$bindings$6577$13P8LC
                                                   g$body*$6578$13P8LC)
                                                 ((case-lambda
                                                    ((g$lhs*$6579$13P8LC
                                                       g$lhs**$6580$13P8LC
                                                       g$rhs*$6581$13P8LC)
                                                     (g$cons*$5358$13P8LC
                                                       'library-letrec*
                                                       g$name$6575$13P8LC
                                                       (map list
                                                            g$lhs*$6579$13P8LC
                                                            g$lhs**$6580$13P8LC
                                                            (map g$f$6562$13P8LC
                                                                 g$rhs*$6581$13P8LC))
                                                       (map g$f$6562$13P8LC
                                                            g$body*$6578$13P8LC))))
                                                  (map car
                                                       g$bindings$6577$13P8LC)
                                                  (map g$cadr$4887$13P8LC
                                                       g$bindings$6577$13P8LC)
                                                  (map g$caddr$4893$13P8LC
                                                       g$bindings$6577$13P8LC))))
                                              (g$cadr$4887$13P8LC
                                                g$x$6576$13P8LC)
                                              (g$cddr$4889$13P8LC
                                                g$x$6576$13P8LC))))
                                          (g$cadr$4887$13P8LC g$x$6563$13P8LC)
                                          (cdr g$x$6563$13P8LC))
                                         (if (memv g$t$6564$13P8LC '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6562$13P8LC
                                                  (cdr g$x$6563$13P8LC)))
                                           (if (memv g$t$6564$13P8LC '(set!))
                                             (list
                                               'set!
                                               (g$cadr$4887$13P8LC
                                                 g$x$6563$13P8LC)
                                               (g$f$6562$13P8LC
                                                 (g$caddr$4893$13P8LC
                                                   g$x$6563$13P8LC)))
                                             (if (memv
                                                   g$t$6564$13P8LC
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6582$13P8LC)
                                                   ((case-lambda
                                                      ((g$t$6583$13P8LC)
                                                       (if g$t$6583$13P8LC
                                                         ((case-lambda
                                                            ((g$loc$6584$13P8LC)
                                                             g$loc$6584$13P8LC))
                                                          g$t$6583$13P8LC)
                                                         g$op$6582$13P8LC)))
                                                    ((g$current-primitive-locations$6544$13P8LC)
                                                     g$op$6582$13P8LC))))
                                                (g$cadr$4887$13P8LC
                                                  g$x$6563$13P8LC))
                                               (if (memv
                                                     g$t$6564$13P8LC
                                                     '(define))
                                                 g$x$6563$13P8LC
                                                 (if (list? g$x$6563$13P8LC)
                                                   (map g$f$6562$13P8LC
                                                        g$x$6563$13P8LC)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6563$13P8LC
                                                     (list?
                                                       g$x$6563$13P8LC)))))))))))))))
                          (car g$x$6563$13P8LC))
                         g$x$6563$13P8LC)))))
          g$f$6562$13P8LC))))
   (g$expanded->core$6547$13P8LC
     g$expanded->core$6592$13P8LC
     (case-lambda
       ((g$x$6585$13P8LC) ((g$rewriter$6546$13P8LC '#t) g$x$6585$13P8LC))))
   (g$compile-core-expr$6548$13P8LC
     g$compile-core-expr$6593$13P8LC
     (case-lambda
       ((g$x$6586$13P8LC) ((g$rewriter$6546$13P8LC '#f) g$x$6586$13P8LC))))
   (g$compile-core-expr-to-port$6549$13P8LC
     g$compile-core-expr-to-port$6594$13P8LC
     (case-lambda
       ((g$x$6587$13P8LC g$p$6588$13P8LC)
        (g$pretty-print$6543$13P8LC
          ((g$rewriter$6546$13P8LC '#f) g$x$6587$13P8LC)
          g$p$6588$13P8LC)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6633$13P8LC
     g$make-collection$6837$13P8LC
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6694$13P8LC)
            (letrec* ((g$set-cons$6695$13P8LC
                        (case-lambda
                          ((g$x$6697$13P8LC g$ls$6698$13P8LC)
                           (if (memq g$x$6697$13P8LC g$ls$6698$13P8LC)
                             g$ls$6698$13P8LC
                             (cons g$x$6697$13P8LC g$ls$6698$13P8LC))))))
              (case-lambda
                (() g$set$6694$13P8LC)
                ((g$x$6696$13P8LC)
                 (set! g$set$6694$13P8LC
                   (g$set-cons$6695$13P8LC
                     g$x$6696$13P8LC
                     g$set$6694$13P8LC)))))))
         '()))))
   (g$current-library-collection$6634$13P8LC
     g$current-library-collection$6838$13P8LC
     (g$make-parameter$6345$13P8LC
       (g$make-collection$6633$13P8LC)
       (case-lambda
         ((g$x$6699$13P8LC)
          (begin
            (if (not (procedure? g$x$6699$13P8LC))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6699$13P8LC)
              (void))
            g$x$6699$13P8LC)))))
   (g$7613$6635$13P8LC
     g$7613$6839$13P8LC
     (make-record-type-descriptor
       'library
       '#f
       'g$7616$13P8LC
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7615$6636$13P8LC g$7615$6840$13P8LC '#f)
   (g$7614$6637$13P8LC
     g$7614$6841$13P8LC
     (make-record-constructor-descriptor
       g$7613$6635$13P8LC
       '#f
       g$7615$6636$13P8LC))
   (g$library?$6638$13P8LC
     g$library?$6842$13P8LC
     (record-predicate g$7613$6635$13P8LC))
   (g$make-library$6639$13P8LC
     g$make-library$6843$13P8LC
     (record-constructor g$7614$6637$13P8LC))
   (g$library-id$6640$13P8LC
     g$library-id$6844$13P8LC
     (record-accessor g$7613$6635$13P8LC '0))
   (g$library-name$6641$13P8LC
     g$library-name$6845$13P8LC
     (record-accessor g$7613$6635$13P8LC '1))
   (g$library-version$6642$13P8LC
     g$library-version$6846$13P8LC
     (record-accessor g$7613$6635$13P8LC '2))
   (g$library-imp*$6643$13P8LC
     g$library-imp*$6847$13P8LC
     (record-accessor g$7613$6635$13P8LC '3))
   (g$library-vis*$6644$13P8LC
     g$library-vis*$6848$13P8LC
     (record-accessor g$7613$6635$13P8LC '4))
   (g$library-inv*$6645$13P8LC
     g$library-inv*$6849$13P8LC
     (record-accessor g$7613$6635$13P8LC '5))
   (g$library-subst$6646$13P8LC
     g$library-subst$6850$13P8LC
     (record-accessor g$7613$6635$13P8LC '6))
   (g$library-env$6647$13P8LC
     g$library-env$6851$13P8LC
     (record-accessor g$7613$6635$13P8LC '7))
   (g$library-visit-state$6648$13P8LC
     g$library-visit-state$6852$13P8LC
     (record-accessor g$7613$6635$13P8LC '8))
   (g$library-invoke-state$6649$13P8LC
     g$library-invoke-state$6853$13P8LC
     (record-accessor g$7613$6635$13P8LC '9))
   (g$library-visit-code$6650$13P8LC
     g$library-visit-code$6854$13P8LC
     (record-accessor g$7613$6635$13P8LC '10))
   (g$library-invoke-code$6651$13P8LC
     g$library-invoke-code$6855$13P8LC
     (record-accessor g$7613$6635$13P8LC '11))
   (g$library-visible?$6652$13P8LC
     g$library-visible?$6856$13P8LC
     (record-accessor g$7613$6635$13P8LC '12))
   (g$library-source-file-name$6653$13P8LC
     g$library-source-file-name$6857$13P8LC
     (record-accessor g$7613$6635$13P8LC '13))
   (g$set-library-id!$6654$13P8LC
     g$set-library-id!$6858$13P8LC
     (record-mutator g$7613$6635$13P8LC '0))
   (g$set-library-name!$6655$13P8LC
     g$set-library-name!$6859$13P8LC
     (record-mutator g$7613$6635$13P8LC '1))
   (g$set-library-version!$6656$13P8LC
     g$set-library-version!$6860$13P8LC
     (record-mutator g$7613$6635$13P8LC '2))
   (g$set-library-imp*!$6657$13P8LC
     g$set-library-imp*!$6861$13P8LC
     (record-mutator g$7613$6635$13P8LC '3))
   (g$set-library-vis*!$6658$13P8LC
     g$set-library-vis*!$6862$13P8LC
     (record-mutator g$7613$6635$13P8LC '4))
   (g$set-library-inv*!$6659$13P8LC
     g$set-library-inv*!$6863$13P8LC
     (record-mutator g$7613$6635$13P8LC '5))
   (g$set-library-subst!$6660$13P8LC
     g$set-library-subst!$6864$13P8LC
     (record-mutator g$7613$6635$13P8LC '6))
   (g$set-library-env!$6661$13P8LC
     g$set-library-env!$6865$13P8LC
     (record-mutator g$7613$6635$13P8LC '7))
   (g$set-library-visit-state!$6662$13P8LC
     g$set-library-visit-state!$6866$13P8LC
     (record-mutator g$7613$6635$13P8LC '8))
   (g$set-library-invoke-state!$6663$13P8LC
     g$set-library-invoke-state!$6867$13P8LC
     (record-mutator g$7613$6635$13P8LC '9))
   (g$set-library-visit-code!$6664$13P8LC
     g$set-library-visit-code!$6868$13P8LC
     (record-mutator g$7613$6635$13P8LC '10))
   (g$set-library-invoke-code!$6665$13P8LC
     g$set-library-invoke-code!$6869$13P8LC
     (record-mutator g$7613$6635$13P8LC '11))
   (g$set-library-visible?!$6666$13P8LC
     g$set-library-visible?!$6870$13P8LC
     (record-mutator g$7613$6635$13P8LC '12))
   (g$set-library-source-file-name!$6667$13P8LC
     g$set-library-source-file-name!$6871$13P8LC
     (record-mutator g$7613$6635$13P8LC '13))
   (g$rp$6668$13P8LC
     g$rp$6872$13P8LC
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6700$13P8LC g$p$6701$13P8LC)
          (begin
            (if (not (g$library?$6638$13P8LC g$x$6700$13P8LC))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6260$13P8LC
                '"#<library ~s>"
                (if (null? (g$library-version$6642$13P8LC g$x$6700$13P8LC))
                  (g$library-name$6641$13P8LC g$x$6700$13P8LC)
                  (append
                    (g$library-name$6641$13P8LC g$x$6700$13P8LC)
                    (list (g$library-version$6642$13P8LC g$x$6700$13P8LC)))))
              g$p$6701$13P8LC))))))
   (g$find-dependencies$6669$13P8LC
     g$find-dependencies$6873$13P8LC
     (case-lambda
       ((g$ls$6702$13P8LC)
        (if (null? g$ls$6702$13P8LC)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6670$13P8LC
     g$find-library-by$6874$13P8LC
     (case-lambda
       ((g$pred$6703$13P8LC)
        ((letrec ((g$f$6704$13P8LC
                    (case-lambda
                      ((g$ls$6705$13P8LC)
                       (if (null? g$ls$6705$13P8LC)
                         '#f
                         (if (g$pred$6703$13P8LC (car g$ls$6705$13P8LC))
                           (car g$ls$6705$13P8LC)
                           (g$f$6704$13P8LC (cdr g$ls$6705$13P8LC))))))))
           g$f$6704$13P8LC)
         ((g$current-library-collection$6634$13P8LC))))))
   (g$library-path$6671$13P8LC
     g$library-path$6875$13P8LC
     (g$make-parameter$6345$13P8LC
       '(".")
       (case-lambda
         ((g$x$6706$13P8LC)
          (if (if (list? g$x$6706$13P8LC)
                (begin '#f (g$for-all$5356$13P8LC string? g$x$6706$13P8LC))
                '#f)
            (map (case-lambda ((g$x$6707$13P8LC) g$x$6707$13P8LC))
                 g$x$6706$13P8LC)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6706$13P8LC))))))
   (g$library-extensions$6672$13P8LC
     g$library-extensions$6876$13P8LC
     (g$make-parameter$6345$13P8LC
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6708$13P8LC)
          (if (if (list? g$x$6708$13P8LC)
                (begin '#f (g$for-all$5356$13P8LC string? g$x$6708$13P8LC))
                '#f)
            (map (case-lambda ((g$x$6709$13P8LC) g$x$6709$13P8LC))
                 g$x$6708$13P8LC)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6708$13P8LC))))))
   (g$library-name->file-name$6673$13P8LC
     g$library-name->file-name$6877$13P8LC
     (case-lambda
       ((g$x$6710$13P8LC)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6093$13P8LC)))
          (case-lambda
            ((g$p$6713$13P8LC g$extract$6714$13P8LC)
             ((case-lambda
                ((g$extract$6715$13P8LC g$p$6716$13P8LC)
                 (letrec* ((g$display-hex$6717$13P8LC
                             (case-lambda
                               ((g$n$6725$13P8LC)
                                (if (<= '0 g$n$6725$13P8LC '9)
                                  (display g$n$6725$13P8LC g$p$6716$13P8LC)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6725$13P8LC '10)))
                                    g$p$6716$13P8LC))))))
                   (begin
                     ((letrec ((g$f$6718$13P8LC
                                 (case-lambda
                                   ((g$ls$6719$13P8LC)
                                    (if (not (null? g$ls$6719$13P8LC))
                                      (begin
                                        (display '"/" g$p$6716$13P8LC)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6720$13P8LC)
                                             (if ((case-lambda
                                                    ((g$t$6721$13P8LC)
                                                     (if g$t$6721$13P8LC
                                                       g$t$6721$13P8LC
                                                       ((case-lambda
                                                          ((g$t$6722$13P8LC)
                                                           (if g$t$6722$13P8LC
                                                             g$t$6722$13P8LC
                                                             ((case-lambda
                                                                ((g$t$6723$13P8LC)
                                                                 (if g$t$6723$13P8LC
                                                                   g$t$6723$13P8LC
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$6720$13P8LC
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$6720$13P8LC
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$6720$13P8LC
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$6720$13P8LC
                                                    '#\z))
                                               (display
                                                 g$c$6720$13P8LC
                                                 g$p$6716$13P8LC)
                                               (begin
                                                 (display '"%" g$p$6716$13P8LC)
                                                 ((case-lambda
                                                    ((g$n$6724$13P8LC)
                                                     (begin
                                                       (g$display-hex$6717$13P8LC
                                                         (g$quotient$5720$13P8LC
                                                           g$n$6724$13P8LC
                                                           '16))
                                                       (g$display-hex$6717$13P8LC
                                                         (g$remainder$5721$13P8LC
                                                           g$n$6724$13P8LC
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6720$13P8LC))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6719$13P8LC))))
                                        (g$f$6718$13P8LC
                                          (cdr g$ls$6719$13P8LC)))
                                      (void))))))
                        g$f$6718$13P8LC)
                      g$x$6710$13P8LC)
                     (g$extract$6715$13P8LC)))))
              g$extract$6714$13P8LC
              g$p$6713$13P8LC)))))))
   (g$file-locator$6674$13P8LC
     g$file-locator$6878$13P8LC
     (g$make-parameter$6345$13P8LC
       (case-lambda
         ((g$x$6726$13P8LC)
          ((case-lambda
             ((g$str$6727$13P8LC)
              ((letrec ((g$f$6728$13P8LC
                          (case-lambda
                            ((g$ls$6729$13P8LC
                               g$exts$6730$13P8LC
                               g$failed-list$6731$13P8LC)
                             (if (null? g$ls$6729$13P8LC)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$7718$6732$13P8LC
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$7721$13P8LC
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$7720$6733$13P8LC '#f)
                                             (g$7719$6734$13P8LC
                                               (make-record-constructor-descriptor
                                                 g$7718$6732$13P8LC
                                                 &condition-rcd
                                                 g$7720$6733$13P8LC))
                                             (g$7717$6735$13P8LC
                                               (record-predicate
                                                 g$7718$6732$13P8LC))
                                             (g$make-library-resolution-condition$6736$13P8LC
                                               (record-constructor
                                                 g$7719$6734$13P8LC))
                                             (g$7715$6737$13P8LC
                                               (record-accessor
                                                 g$7718$6732$13P8LC
                                                 '0))
                                             (g$7716$6738$13P8LC
                                               (record-accessor
                                                 g$7718$6732$13P8LC
                                                 '1))
                                             (g$library-resolution-condition?$6739$13P8LC
                                               (condition-predicate
                                                 g$7718$6732$13P8LC))
                                             (g$condition-library$6740$13P8LC
                                               (condition-accessor
                                                 g$7718$6732$13P8LC
                                                 g$7715$6737$13P8LC))
                                             (g$condition-files$6741$13P8LC
                                               (condition-accessor
                                                 g$7718$6732$13P8LC
                                                 g$7716$6738$13P8LC)))
                                     (raise
                                       (condition
                                         (g$make-error$5630$13P8LC)
                                         (g$make-who-condition$5656$13P8LC
                                           'expander)
                                         (g$make-message-condition$5610$13P8LC
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6736$13P8LC
                                           g$x$6726$13P8LC
                                           (reverse
                                             g$failed-list$6731$13P8LC))))))))
                               (if (null? g$exts$6730$13P8LC)
                                 (g$f$6728$13P8LC
                                   (cdr g$ls$6729$13P8LC)
                                   (g$library-extensions$6672$13P8LC)
                                   g$failed-list$6731$13P8LC)
                                 ((case-lambda
                                    ((g$name$6742$13P8LC)
                                     (if (g$file-exists?$5227$13P8LC
                                           g$name$6742$13P8LC)
                                       g$name$6742$13P8LC
                                       (g$f$6728$13P8LC
                                         g$ls$6729$13P8LC
                                         (cdr g$exts$6730$13P8LC)
                                         (cons
                                           g$name$6742$13P8LC
                                           g$failed-list$6731$13P8LC)))))
                                  (string-append
                                    (car g$ls$6729$13P8LC)
                                    g$str$6727$13P8LC
                                    (car g$exts$6730$13P8LC)))))))))
                 g$f$6728$13P8LC)
               (g$library-path$6671$13P8LC)
               (g$library-extensions$6672$13P8LC)
               '())))
           (g$library-name->file-name$6673$13P8LC g$x$6726$13P8LC))))
       (case-lambda
         ((g$f$6743$13P8LC)
          (if (procedure? g$f$6743$13P8LC)
            g$f$6743$13P8LC
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6743$13P8LC))))))
   (g$serialize-all$6675$13P8LC
     g$serialize-all$6879$13P8LC
     (case-lambda
       ((g$serialize$6744$13P8LC g$compile$6745$13P8LC)
        (letrec* ((g$library-desc$6746$13P8LC
                    (case-lambda
                      ((g$x$6748$13P8LC)
                       (list
                         (g$library-id$6640$13P8LC g$x$6748$13P8LC)
                         (g$library-name$6641$13P8LC g$x$6748$13P8LC))))))
          (for-each
            (case-lambda
              ((g$x$6747$13P8LC)
               (if (g$library-source-file-name$6653$13P8LC g$x$6747$13P8LC)
                 (g$serialize$6744$13P8LC
                   (g$library-source-file-name$6653$13P8LC g$x$6747$13P8LC)
                   (list
                     (g$library-id$6640$13P8LC g$x$6747$13P8LC)
                     (g$library-name$6641$13P8LC g$x$6747$13P8LC)
                     (g$library-version$6642$13P8LC g$x$6747$13P8LC)
                     (map g$library-desc$6746$13P8LC
                          (g$library-imp*$6643$13P8LC g$x$6747$13P8LC))
                     (map g$library-desc$6746$13P8LC
                          (g$library-vis*$6644$13P8LC g$x$6747$13P8LC))
                     (map g$library-desc$6746$13P8LC
                          (g$library-inv*$6645$13P8LC g$x$6747$13P8LC))
                     (g$library-subst$6646$13P8LC g$x$6747$13P8LC)
                     (g$library-env$6647$13P8LC g$x$6747$13P8LC)
                     (g$compile$6745$13P8LC
                       (g$library-visit-code$6650$13P8LC g$x$6747$13P8LC))
                     (g$compile$6745$13P8LC
                       (g$library-invoke-code$6651$13P8LC g$x$6747$13P8LC))
                     (g$library-visible?$6652$13P8LC g$x$6747$13P8LC)))
                 (void))))
            ((g$current-library-collection$6634$13P8LC)))))))
   (g$current-precompiled-library-loader$6676$13P8LC
     g$current-precompiled-library-loader$6880$13P8LC
     (g$make-parameter$6345$13P8LC
       (case-lambda ((g$filename$6749$13P8LC g$sk$6750$13P8LC) '#f))))
   (g$try-load-from-file$6677$13P8LC
     g$try-load-from-file$6881$13P8LC
     (case-lambda
       ((g$filename$6751$13P8LC)
        ((g$current-precompiled-library-loader$6676$13P8LC)
         g$filename$6751$13P8LC
         (case-lambda
           ((g$id$6752$13P8LC
              g$name$6753$13P8LC
              g$ver$6754$13P8LC
              g$imp*$6755$13P8LC
              g$vis*$6756$13P8LC
              g$inv*$6757$13P8LC
              g$exp-subst$6758$13P8LC
              g$exp-env$6759$13P8LC
              g$visit-proc$6760$13P8LC
              g$invoke-proc$6761$13P8LC
              g$visible?$6762$13P8LC)
            ((letrec ((g$f$6763$13P8LC
                        (case-lambda
                          ((g$deps$6764$13P8LC)
                           (if (null? g$deps$6764$13P8LC)
                             (begin
                               (g$install-library$6687$13P8LC
                                 g$id$6752$13P8LC
                                 g$name$6753$13P8LC
                                 g$ver$6754$13P8LC
                                 g$imp*$6755$13P8LC
                                 g$vis*$6756$13P8LC
                                 g$inv*$6757$13P8LC
                                 g$exp-subst$6758$13P8LC
                                 g$exp-env$6759$13P8LC
                                 g$visit-proc$6760$13P8LC
                                 g$invoke-proc$6761$13P8LC
                                 '#f
                                 '#f
                                 g$visible?$6762$13P8LC
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$6765$13P8LC)
                                 ((case-lambda
                                    ((g$label$6766$13P8LC g$dname$6767$13P8LC)
                                     ((case-lambda
                                        ((g$l$6768$13P8LC)
                                         (if (if (g$library?$6638$13P8LC
                                                   g$l$6768$13P8LC)
                                               (begin
                                                 '#f
                                                 (eq? g$label$6766$13P8LC
                                                      (g$library-id$6640$13P8LC
                                                        g$l$6768$13P8LC)))
                                               '#f)
                                           (g$f$6763$13P8LC
                                             (cdr g$deps$6764$13P8LC))
                                           (begin
                                             (g$fprintf$6259$13P8LC
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$6753$13P8LC
                                               g$dname$6767$13P8LC
                                               g$filename$6751$13P8LC)
                                             '#f))))
                                      (g$find-library-by-name$6682$13P8LC
                                        g$dname$6767$13P8LC))))
                                  (car g$d$6765$13P8LC)
                                  (g$cadr$4887$13P8LC g$d$6765$13P8LC))))
                              (car g$deps$6764$13P8LC)))))))
               g$f$6763$13P8LC)
             (append g$imp*$6755$13P8LC g$vis*$6756$13P8LC g$inv*$6757$13P8LC)))
           (g$others$6769$13P8LC '#f))))))
   (g$library-loader$6678$13P8LC
     g$library-loader$6882$13P8LC
     (g$make-parameter$6345$13P8LC
       (case-lambda
         ((g$x$6770$13P8LC)
          ((case-lambda
             ((g$file-name$6771$13P8LC)
              (if (not g$file-name$6771$13P8LC)
                (assertion-violation '#f '"cannot file library" g$x$6770$13P8LC)
                ((case-lambda
                   ((g$t$6772$13P8LC)
                    (if g$t$6772$13P8LC
                      g$t$6772$13P8LC
                      (begin
                        '#f
                        ((g$current-library-expander$6679$13P8LC)
                         (g$read-library-source-file$6344$13P8LC
                           g$file-name$6771$13P8LC)
                         g$file-name$6771$13P8LC
                         (case-lambda
                           ((g$name$6773$13P8LC)
                            (if (not (equal?
                                       g$name$6773$13P8LC
                                       g$x$6770$13P8LC))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6093$13P8LC)))
                                  (case-lambda
                                    ((g$p$6776$13P8LC g$e$6777$13P8LC)
                                     ((case-lambda
                                        ((g$e$6778$13P8LC g$p$6779$13P8LC)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$6779$13P8LC)
                                           (write
                                             g$x$6770$13P8LC
                                             g$p$6779$13P8LC)
                                           (display
                                             '" in file "
                                             g$p$6779$13P8LC)
                                           (display
                                             g$file-name$6771$13P8LC
                                             g$p$6779$13P8LC)
                                           (display '", found " g$p$6779$13P8LC)
                                           (write
                                             g$name$6773$13P8LC
                                             g$p$6779$13P8LC)
                                           (display '" instead" g$p$6779$13P8LC)
                                           (g$e$6778$13P8LC))))
                                      g$e$6777$13P8LC
                                      g$p$6776$13P8LC)))))
                              (void)))))))))
                 (g$try-load-from-file$6677$13P8LC g$file-name$6771$13P8LC)))))
           ((g$file-locator$6674$13P8LC) g$x$6770$13P8LC))))
       (case-lambda
         ((g$f$6780$13P8LC)
          (if (procedure? g$f$6780$13P8LC)
            g$f$6780$13P8LC
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$6780$13P8LC))))))
   (g$current-library-expander$6679$13P8LC
     g$current-library-expander$6883$13P8LC
     (g$make-parameter$6345$13P8LC
       (case-lambda
         ((g$x$6781$13P8LC)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$6782$13P8LC)
          (if (procedure? g$f$6782$13P8LC)
            g$f$6782$13P8LC
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$6782$13P8LC))))))
   (g$external-pending-libraries$6680$13P8LC
     g$external-pending-libraries$6884$13P8LC
     (g$make-parameter$6345$13P8LC '()))
   (g$find-external-library$6681$13P8LC
     g$find-external-library$6885$13P8LC
     (case-lambda
       ((g$name$6783$13P8LC)
        (begin
          (if (g$member$5352$13P8LC
                g$name$6783$13P8LC
                (g$external-pending-libraries$6680$13P8LC))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$6783$13P8LC)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$6786$13P8LC
                g$external-pending-libraries$6787$13P8LC)
              ((case-lambda
                 ((g$swap$6788$13P8LC)
                  (dynamic-wind
                    g$swap$6788$13P8LC
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6678$13P8LC) g$name$6783$13P8LC)
                         ((case-lambda
                            ((g$t$6789$13P8LC)
                             (if g$t$6789$13P8LC
                               g$t$6789$13P8LC
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$6783$13P8LC)))))
                          (g$find-library-by$6670$13P8LC
                            (case-lambda
                              ((g$x$6790$13P8LC)
                               (equal?
                                 (g$library-name$6641$13P8LC g$x$6790$13P8LC)
                                 g$name$6783$13P8LC))))))))
                    g$swap$6788$13P8LC)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$6791$13P8LC)
                      (begin
                        (g$external-pending-libraries$6786$13P8LC
                          g$external-pending-libraries$6787$13P8LC)
                        (set! g$external-pending-libraries$6787$13P8LC
                          g$t$6791$13P8LC))))
                   (g$external-pending-libraries$6786$13P8LC)))))))
           g$external-pending-libraries$6680$13P8LC
           (cons
             g$name$6783$13P8LC
             (g$external-pending-libraries$6680$13P8LC)))))))
   (g$find-library-by-name$6682$13P8LC
     g$find-library-by-name$6886$13P8LC
     (case-lambda
       ((g$name$6792$13P8LC)
        ((case-lambda
           ((g$t$6793$13P8LC)
            (if g$t$6793$13P8LC
              g$t$6793$13P8LC
              (begin
                '#f
                (g$find-external-library$6681$13P8LC g$name$6792$13P8LC)))))
         (g$find-library-by$6670$13P8LC
           (case-lambda
             ((g$x$6794$13P8LC)
              (equal?
                (g$library-name$6641$13P8LC g$x$6794$13P8LC)
                g$name$6792$13P8LC))))))))
   (g$library-exists?$6683$13P8LC
     g$library-exists?$6887$13P8LC
     (case-lambda
       ((g$name$6795$13P8LC)
        (if (g$find-library-by$6670$13P8LC
              (case-lambda
                ((g$x$6796$13P8LC)
                 (equal?
                   (g$library-name$6641$13P8LC g$x$6796$13P8LC)
                   g$name$6795$13P8LC))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6684$13P8LC
     g$find-library-by-spec/die$6888$13P8LC
     (case-lambda
       ((g$spec$6797$13P8LC)
        ((case-lambda
           ((g$id$6798$13P8LC)
            ((case-lambda
               ((g$t$6799$13P8LC)
                (if g$t$6799$13P8LC
                  g$t$6799$13P8LC
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$6797$13P8LC)))))
             (g$find-library-by$6670$13P8LC
               (case-lambda
                 ((g$x$6800$13P8LC)
                  (eq? g$id$6798$13P8LC
                       (g$library-id$6640$13P8LC g$x$6800$13P8LC))))))))
         (car g$spec$6797$13P8LC)))))
   (g$label->binding-table$6685$13P8LC
     g$label->binding-table$6889$13P8LC
     (g$make-eq-hashtable$5149$13P8LC))
   (g$install-library-record$6686$13P8LC
     g$install-library-record$6890$13P8LC
     (case-lambda
       ((g$lib$6801$13P8LC)
        (begin
          ((case-lambda
             ((g$exp-env$6802$13P8LC)
              (for-each
                (case-lambda
                  ((g$x$6803$13P8LC)
                   ((case-lambda
                      ((g$label$6804$13P8LC g$binding$6805$13P8LC)
                       ((case-lambda
                          ((g$binding$6806$13P8LC)
                           (g$hashtable-set!$5153$13P8LC
                             g$label->binding-table$6685$13P8LC
                             g$label$6804$13P8LC
                             g$binding$6806$13P8LC)))
                        ((case-lambda
                           ((g$t$6807$13P8LC)
                            (if (memv g$t$6807$13P8LC '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$6801$13P8LC
                                  (cdr g$binding$6805$13P8LC)))
                              (if (memv g$t$6807$13P8LC '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$6801$13P8LC
                                    (cdr g$binding$6805$13P8LC)))
                                (if (memv g$t$6807$13P8LC '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$6801$13P8LC
                                      (cdr g$binding$6805$13P8LC)))
                                  g$binding$6805$13P8LC)))))
                         (car g$binding$6805$13P8LC)))))
                    (car g$x$6803$13P8LC)
                    (cdr g$x$6803$13P8LC))))
                g$exp-env$6802$13P8LC)))
           (g$library-env$6647$13P8LC g$lib$6801$13P8LC))
          ((g$current-library-collection$6634$13P8LC) g$lib$6801$13P8LC)))))
   (g$install-library$6687$13P8LC
     g$install-library$6891$13P8LC
     (case-lambda
       ((g$id$6808$13P8LC
          g$name$6809$13P8LC
          g$ver$6810$13P8LC
          g$imp*$6811$13P8LC
          g$vis*$6812$13P8LC
          g$inv*$6813$13P8LC
          g$exp-subst$6814$13P8LC
          g$exp-env$6815$13P8LC
          g$visit-proc$6816$13P8LC
          g$invoke-proc$6817$13P8LC
          g$visit-code$6818$13P8LC
          g$invoke-code$6819$13P8LC
          g$visible?$6820$13P8LC
          g$source-file-name$6821$13P8LC)
        ((case-lambda
           ((g$imp-lib*$6822$13P8LC
              g$vis-lib*$6823$13P8LC
              g$inv-lib*$6824$13P8LC)
            (begin
              (if (not (if (symbol? g$id$6808$13P8LC)
                         (if (list? g$name$6809$13P8LC)
                           (begin '#f (list? g$ver$6810$13P8LC))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$6808$13P8LC
                  g$name$6809$13P8LC
                  g$ver$6810$13P8LC)
                (void))
              (if (g$library-exists?$6683$13P8LC g$name$6809$13P8LC)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$6809$13P8LC)
                (void))
              ((case-lambda
                 ((g$lib$6825$13P8LC)
                  (g$install-library-record$6686$13P8LC g$lib$6825$13P8LC)))
               (g$make-library$6639$13P8LC
                 g$id$6808$13P8LC
                 g$name$6809$13P8LC
                 g$ver$6810$13P8LC
                 g$imp-lib*$6822$13P8LC
                 g$vis-lib*$6823$13P8LC
                 g$inv-lib*$6824$13P8LC
                 g$exp-subst$6814$13P8LC
                 g$exp-env$6815$13P8LC
                 g$visit-proc$6816$13P8LC
                 g$invoke-proc$6817$13P8LC
                 g$visit-code$6818$13P8LC
                 g$invoke-code$6819$13P8LC
                 g$visible?$6820$13P8LC
                 g$source-file-name$6821$13P8LC)))))
         (map g$find-library-by-spec/die$6684$13P8LC g$imp*$6811$13P8LC)
         (map g$find-library-by-spec/die$6684$13P8LC g$vis*$6812$13P8LC)
         (map g$find-library-by-spec/die$6684$13P8LC g$inv*$6813$13P8LC)))))
   (g$imported-label->binding$6688$13P8LC
     g$imported-label->binding$6892$13P8LC
     (case-lambda
       ((g$lab$6826$13P8LC)
        (g$hashtable-ref$5152$13P8LC
          g$label->binding-table$6685$13P8LC
          g$lab$6826$13P8LC
          '#f))))
   (g$invoke-library$6689$13P8LC
     g$invoke-library$6893$13P8LC
     (case-lambda
       ((g$lib$6827$13P8LC)
        ((case-lambda
           ((g$invoke$6828$13P8LC)
            (if (procedure? g$invoke$6828$13P8LC)
              (begin
                (g$set-library-invoke-state!$6663$13P8LC
                  g$lib$6827$13P8LC
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$6827$13P8LC))))
                (for-each
                  g$invoke-library$6689$13P8LC
                  (g$library-inv*$6645$13P8LC g$lib$6827$13P8LC))
                (g$set-library-invoke-state!$6663$13P8LC
                  g$lib$6827$13P8LC
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$6827$13P8LC))))
                (g$invoke$6828$13P8LC)
                (g$set-library-invoke-state!$6663$13P8LC g$lib$6827$13P8LC '#t))
              (void))))
         (g$library-invoke-state$6649$13P8LC g$lib$6827$13P8LC)))))
   (g$visit-library$6690$13P8LC
     g$visit-library$6894$13P8LC
     (case-lambda
       ((g$lib$6829$13P8LC)
        ((case-lambda
           ((g$visit$6830$13P8LC)
            (if (procedure? g$visit$6830$13P8LC)
              (begin
                (g$set-library-visit-state!$6662$13P8LC
                  g$lib$6829$13P8LC
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$6829$13P8LC))))
                (for-each
                  g$invoke-library$6689$13P8LC
                  (g$library-vis*$6644$13P8LC g$lib$6829$13P8LC))
                (g$set-library-visit-state!$6662$13P8LC
                  g$lib$6829$13P8LC
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$6829$13P8LC))))
                (g$visit$6830$13P8LC)
                (g$set-library-visit-state!$6662$13P8LC g$lib$6829$13P8LC '#t))
              (void))))
         (g$library-visit-state$6648$13P8LC g$lib$6829$13P8LC)))))
   (g$invoke-library-by-spec$6691$13P8LC
     g$invoke-library-by-spec$6895$13P8LC
     (case-lambda
       ((g$spec$6831$13P8LC)
        (g$invoke-library$6689$13P8LC
          (g$find-library-by-spec/die$6684$13P8LC g$spec$6831$13P8LC)))))
   (g$installed-libraries$6692$13P8LC
     g$installed-libraries$6896$13P8LC
     (case-lambda
       ((g$all?$6832$13P8LC)
        ((letrec ((g$f$6833$13P8LC
                    (case-lambda
                      ((g$ls$6834$13P8LC)
                       (if (null? g$ls$6834$13P8LC)
                         '()
                         (if ((case-lambda
                                ((g$t$6835$13P8LC)
                                 (if g$t$6835$13P8LC
                                   g$t$6835$13P8LC
                                   (begin
                                     '#f
                                     (g$library-visible?$6652$13P8LC
                                       (car g$ls$6834$13P8LC))))))
                              g$all?$6832$13P8LC)
                           (cons
                             (car g$ls$6834$13P8LC)
                             (g$f$6833$13P8LC (cdr g$ls$6834$13P8LC)))
                           (g$f$6833$13P8LC (cdr g$ls$6834$13P8LC))))))))
           g$f$6833$13P8LC)
         ((g$current-library-collection$6634$13P8LC))))
       (() (g$installed-libraries$6692$13P8LC '#f))))
   (g$library-spec$6693$13P8LC
     g$library-spec$6897$13P8LC
     (case-lambda
       ((g$x$6836$13P8LC)
        (begin
          (if (not (g$library?$6638$13P8LC g$x$6836$13P8LC))
            (assertion-violation 'library-spec '"not a library" g$x$6836$13P8LC)
            (void))
          (list
            (g$library-id$6640$13P8LC g$x$6836$13P8LC)
            (g$library-name$6641$13P8LC g$x$6836$13P8LC)
            (g$library-version$6642$13P8LC g$x$6836$13P8LC)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$6898$13P8LC
     g$build-global-define$7008$13P8LC
     (case-lambda ((g$x$6979$13P8LC) (g$build-void$6975$13P8LC))))
   (g$build-lambda$6947$13P8LC
     g$build-lambda$7009$13P8LC
     (case-lambda
       ((g$ae$6980$13P8LC g$vars$6981$13P8LC g$exp$6982$13P8LC)
        (list 'case-lambda (list g$vars$6981$13P8LC g$exp$6982$13P8LC)))))
   (g$build-case-lambda$6948$13P8LC
     g$build-case-lambda$7010$13P8LC
     (case-lambda
       ((g$ae$6983$13P8LC g$vars*$6984$13P8LC g$exp*$6985$13P8LC)
        (cons 'case-lambda (map list g$vars*$6984$13P8LC g$exp*$6985$13P8LC)))))
   (g$build-let$6949$13P8LC
     g$build-let$7011$13P8LC
     (case-lambda
       ((g$ae$6986$13P8LC
          g$lhs*$6987$13P8LC
          g$rhs*$6988$13P8LC
          g$body$6989$13P8LC)
        (cons
          (g$build-lambda$6947$13P8LC
            g$ae$6986$13P8LC
            g$lhs*$6987$13P8LC
            g$body$6989$13P8LC)
          g$rhs*$6988$13P8LC))))
   (g$build-sequence$6974$13P8LC
     g$build-sequence$7012$13P8LC
     (case-lambda
       ((g$ae$6990$13P8LC g$exps$6991$13P8LC)
        ((letrec ((g$loop$6992$13P8LC
                    (case-lambda
                      ((g$exps$6993$13P8LC)
                       (if (null? (cdr g$exps$6993$13P8LC))
                         (car g$exps$6993$13P8LC)
                         (if (equal?
                               (car g$exps$6993$13P8LC)
                               (g$build-void$6975$13P8LC))
                           (g$loop$6992$13P8LC (cdr g$exps$6993$13P8LC))
                           (cons 'begin g$exps$6993$13P8LC)))))))
           g$loop$6992$13P8LC)
         g$exps$6991$13P8LC))))
   (g$build-void$6975$13P8LC
     g$build-void$7013$13P8LC
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$6976$13P8LC
     g$build-letrec$7014$13P8LC
     (case-lambda
       ((g$ae$6994$13P8LC
          g$vars$6995$13P8LC
          g$val-exps$6996$13P8LC
          g$body-exp$6997$13P8LC)
        (if (null? g$vars$6995$13P8LC)
          g$body-exp$6997$13P8LC
          (list
            'letrec
            (map list g$vars$6995$13P8LC g$val-exps$6996$13P8LC)
            g$body-exp$6997$13P8LC)))))
   (g$build-letrec*$6977$13P8LC
     g$build-letrec*$7015$13P8LC
     (case-lambda
       ((g$ae$6998$13P8LC
          g$vars$6999$13P8LC
          g$val-exps$7000$13P8LC
          g$body-exp$7001$13P8LC)
        (if (null? g$vars$6999$13P8LC)
          g$body-exp$7001$13P8LC
          (list
            'letrec*
            (map list g$vars$6999$13P8LC g$val-exps$7000$13P8LC)
            g$body-exp$7001$13P8LC)))))
   (g$build-library-letrec*$6978$13P8LC
     g$build-library-letrec*$7016$13P8LC
     (case-lambda
       ((g$ae$7002$13P8LC
          g$name$7003$13P8LC
          g$vars$7004$13P8LC
          g$locs$7005$13P8LC
          g$val-exps$7006$13P8LC
          g$body-exp$7007$13P8LC)
        (list
          'library-letrec*
          g$name$7003$13P8LC
          (map list
               g$vars$7004$13P8LC
               g$locs$7005$13P8LC
               g$val-exps$7006$13P8LC)
          g$body-exp$7007$13P8LC)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7017$13P8LC
     g$set-cons$10646$13P8LC
     (case-lambda
       ((g$x$7473$13P8LC g$ls$7474$13P8LC)
        (if (memq g$x$7473$13P8LC g$ls$7474$13P8LC)
          g$ls$7474$13P8LC
          (cons g$x$7473$13P8LC g$ls$7474$13P8LC)))))
   (g$set-union$7018$13P8LC
     g$set-union$10647$13P8LC
     (case-lambda
       ((g$ls1$7475$13P8LC g$ls2$7476$13P8LC)
        (if (null? g$ls1$7475$13P8LC)
          g$ls2$7476$13P8LC
          (if (memq (car g$ls1$7475$13P8LC) g$ls2$7476$13P8LC)
            (g$set-union$7018$13P8LC (cdr g$ls1$7475$13P8LC) g$ls2$7476$13P8LC)
            (cons
              (car g$ls1$7475$13P8LC)
              (g$set-union$7018$13P8LC
                (cdr g$ls1$7475$13P8LC)
                g$ls2$7476$13P8LC)))))))
   (g$top-mark*$7020$13P8LC g$top-mark*$10648$13P8LC '(top))
   (g$top-marked?$7021$13P8LC
     g$top-marked?$10649$13P8LC
     (case-lambda ((g$m*$7477$13P8LC) (memq 'top g$m*$7477$13P8LC))))
   (g$gen-lexical$7022$13P8LC
     g$gen-lexical$10650$13P8LC
     (case-lambda
       ((g$sym$7478$13P8LC)
        (if (symbol? g$sym$7478$13P8LC)
          (gensym g$sym$7478$13P8LC)
          (if (g$stx?$7050$13P8LC g$sym$7478$13P8LC)
            (g$gen-lexical$7022$13P8LC
              (g$id->sym$7079$13P8LC g$sym$7478$13P8LC))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7478$13P8LC))))))
   (g$gen-global$7023$13P8LC
     g$gen-global$10651$13P8LC
     (case-lambda
       ((g$x$7479$13P8LC) (g$gen-lexical$7022$13P8LC g$x$7479$13P8LC))))
   (g$gen-label$7024$13P8LC
     g$gen-label$10652$13P8LC
     (case-lambda ((g$_$7480$13P8LC) (gensym))))
   (g$gen-top-level-label$7025$13P8LC
     g$gen-top-level-label$10653$13P8LC
     (case-lambda
       ((g$id$7481$13P8LC g$rib$7482$13P8LC)
        (letrec* ((g$find$7483$13P8LC
                    (case-lambda
                      ((g$sym$7489$13P8LC
                         g$mark*$7490$13P8LC
                         g$sym*$7491$13P8LC
                         g$mark**$7492$13P8LC
                         g$label*$7493$13P8LC)
                       (if (pair? g$sym*$7491$13P8LC)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7489$13P8LC
                                        (car g$sym*$7491$13P8LC))
                                 (begin
                                   '#f
                                   (g$same-marks?$7080$13P8LC
                                     g$mark*$7490$13P8LC
                                     (car g$mark**$7492$13P8LC)))
                                 '#f)
                             (car g$label*$7493$13P8LC)
                             (g$find$7483$13P8LC
                               g$sym$7489$13P8LC
                               g$mark*$7490$13P8LC
                               (cdr g$sym*$7491$13P8LC)
                               (cdr g$mark**$7492$13P8LC)
                               (cdr g$label*$7493$13P8LC))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7484$13P8LC g$mark*$7485$13P8LC)
              ((case-lambda
                 ((g$sym*$7486$13P8LC)
                  ((case-lambda
                     ((g$t$7487$13P8LC)
                      (if g$t$7487$13P8LC
                        ((case-lambda
                           ((g$label$7488$13P8LC)
                            (if (g$imported-label->binding$6892$13P8LC
                                  g$label$7488$13P8LC)
                              (gensym)
                              g$label$7488$13P8LC)))
                         g$t$7487$13P8LC)
                        (gensym))))
                   (if (memq
                         g$sym$7484$13P8LC
                         (g$rib-sym*$7033$13P8LC g$rib$7482$13P8LC))
                     (begin
                       '#f
                       (g$find$7483$13P8LC
                         g$sym$7484$13P8LC
                         g$mark*$7485$13P8LC
                         g$sym*$7486$13P8LC
                         (g$rib-mark**$7034$13P8LC g$rib$7482$13P8LC)
                         (g$rib-label*$7035$13P8LC g$rib$7482$13P8LC)))
                     '#f))))
               (g$rib-sym*$7033$13P8LC g$rib$7482$13P8LC))))
           (g$id->sym$7079$13P8LC g$id$7481$13P8LC)
           (g$stx-mark*$7053$13P8LC g$id$7481$13P8LC))))))
   (g$gen-define-label+loc$7026$13P8LC
     g$gen-define-label+loc$10654$13P8LC
     (case-lambda
       ((g$id$7494$13P8LC g$rib$7495$13P8LC)
        ((case-lambda
           ((g$t$7496$13P8LC)
            (if g$t$7496$13P8LC
              ((case-lambda
                 ((g$env$7497$13P8LC)
                  ((case-lambda
                     ((g$label$7498$13P8LC g$locs$7499$13P8LC)
                      (values
                        g$label$7498$13P8LC
                        ((case-lambda
                           ((g$t$7500$13P8LC)
                            (if g$t$7500$13P8LC
                              (cdr g$t$7500$13P8LC)
                              ((case-lambda
                                 ((g$loc$7501$13P8LC)
                                  (begin
                                    (g$set-interaction-env-locs!$7439$13P8LC
                                      g$env$7497$13P8LC
                                      (cons
                                        (cons
                                          g$label$7498$13P8LC
                                          g$loc$7501$13P8LC)
                                        g$locs$7499$13P8LC))
                                    g$loc$7501$13P8LC)))
                               (g$gen-lexical$7022$13P8LC g$id$7494$13P8LC)))))
                         (assq g$label$7498$13P8LC g$locs$7499$13P8LC)))))
                   (g$gen-top-level-label$7025$13P8LC
                     g$id$7494$13P8LC
                     g$rib$7495$13P8LC)
                   (g$interaction-env-locs$7436$13P8LC g$env$7497$13P8LC))))
               g$t$7496$13P8LC)
              (values (gensym) (g$gen-lexical$7022$13P8LC g$id$7494$13P8LC)))))
         (g$top-level-context$7472$13P8LC)))))
   (g$gen-define-label$7027$13P8LC
     g$gen-define-label$10655$13P8LC
     (case-lambda
       ((g$id$7502$13P8LC g$rib$7503$13P8LC)
        (if (g$top-level-context$7472$13P8LC)
          (g$gen-top-level-label$7025$13P8LC g$id$7502$13P8LC g$rib$7503$13P8LC)
          (gensym)))))
   (g$8016$7028$13P8LC
     g$8016$10656$13P8LC
     (make-record-type-descriptor
       'rib
       '#f
       'g$8019$13P8LC
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8018$7029$13P8LC g$8018$10657$13P8LC '#f)
   (g$8017$7030$13P8LC
     g$8017$10658$13P8LC
     (make-record-constructor-descriptor
       g$8016$7028$13P8LC
       '#f
       g$8018$7029$13P8LC))
   (g$rib?$7031$13P8LC
     g$rib?$10659$13P8LC
     (record-predicate g$8016$7028$13P8LC))
   (g$make-rib$7032$13P8LC
     g$make-rib$10660$13P8LC
     (record-constructor g$8017$7030$13P8LC))
   (g$rib-sym*$7033$13P8LC
     g$rib-sym*$10661$13P8LC
     (record-accessor g$8016$7028$13P8LC '0))
   (g$rib-mark**$7034$13P8LC
     g$rib-mark**$10662$13P8LC
     (record-accessor g$8016$7028$13P8LC '1))
   (g$rib-label*$7035$13P8LC
     g$rib-label*$10663$13P8LC
     (record-accessor g$8016$7028$13P8LC '2))
   (g$rib-sealed/freq$7036$13P8LC
     g$rib-sealed/freq$10664$13P8LC
     (record-accessor g$8016$7028$13P8LC '3))
   (g$set-rib-sym*!$7037$13P8LC
     g$set-rib-sym*!$10665$13P8LC
     (record-mutator g$8016$7028$13P8LC '0))
   (g$set-rib-mark**!$7038$13P8LC
     g$set-rib-mark**!$10666$13P8LC
     (record-mutator g$8016$7028$13P8LC '1))
   (g$set-rib-label*!$7039$13P8LC
     g$set-rib-label*!$10667$13P8LC
     (record-mutator g$8016$7028$13P8LC '2))
   (g$set-rib-sealed/freq!$7040$13P8LC
     g$set-rib-sealed/freq!$10668$13P8LC
     (record-mutator g$8016$7028$13P8LC '3))
   (g$make-empty-rib$7041$13P8LC
     g$make-empty-rib$10669$13P8LC
     (case-lambda (() (g$make-rib$7032$13P8LC '() '() '() '#f))))
   (g$extend-rib!$7042$13P8LC
     g$extend-rib!$10670$13P8LC
     (case-lambda
       ((g$rib$7504$13P8LC g$id$7505$13P8LC g$label$7506$13P8LC)
        (letrec* ((g$find$7507$13P8LC
                    (case-lambda
                      ((g$sym$7513$13P8LC
                         g$mark*$7514$13P8LC
                         g$sym*$7515$13P8LC
                         g$mark**$7516$13P8LC
                         g$label*$7517$13P8LC)
                       (if (pair? g$sym*$7515$13P8LC)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7513$13P8LC
                                        (car g$sym*$7515$13P8LC))
                                 (begin
                                   '#f
                                   (g$same-marks?$7080$13P8LC
                                     g$mark*$7514$13P8LC
                                     (car g$mark**$7516$13P8LC)))
                                 '#f)
                             g$label*$7517$13P8LC
                             (g$find$7507$13P8LC
                               g$sym$7513$13P8LC
                               g$mark*$7514$13P8LC
                               (cdr g$sym*$7515$13P8LC)
                               (cdr g$mark**$7516$13P8LC)
                               (cdr g$label*$7517$13P8LC))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7036$13P8LC g$rib$7504$13P8LC)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7504$13P8LC)
              (void))
            ((case-lambda
               ((g$sym$7508$13P8LC g$mark*$7509$13P8LC)
                ((case-lambda
                   ((g$sym*$7510$13P8LC)
                    ((case-lambda
                       ((g$t$7511$13P8LC)
                        (if g$t$7511$13P8LC
                          ((case-lambda
                             ((g$p$7512$13P8LC)
                              (if (not (eq? g$label$7506$13P8LC
                                            (car g$p$7512$13P8LC)))
                                (if (g$top-level-context$7472$13P8LC)
                                  (set-car! g$p$7512$13P8LC g$label$7506$13P8LC)
                                  (g$syntax-violation$7465$13P8LC
                                    '#f
                                    '"cannot redefine"
                                    g$id$7505$13P8LC))
                                (void))))
                           g$t$7511$13P8LC)
                          (begin
                            (g$set-rib-sym*!$7037$13P8LC
                              g$rib$7504$13P8LC
                              (cons g$sym$7508$13P8LC g$sym*$7510$13P8LC))
                            (g$set-rib-mark**!$7038$13P8LC
                              g$rib$7504$13P8LC
                              (cons
                                g$mark*$7509$13P8LC
                                (g$rib-mark**$7034$13P8LC g$rib$7504$13P8LC)))
                            (g$set-rib-label*!$7039$13P8LC
                              g$rib$7504$13P8LC
                              (cons
                                g$label$7506$13P8LC
                                (g$rib-label*$7035$13P8LC
                                  g$rib$7504$13P8LC)))))))
                     (if (memq
                           g$sym$7508$13P8LC
                           (g$rib-sym*$7033$13P8LC g$rib$7504$13P8LC))
                       (begin
                         '#f
                         (g$find$7507$13P8LC
                           g$sym$7508$13P8LC
                           g$mark*$7509$13P8LC
                           g$sym*$7510$13P8LC
                           (g$rib-mark**$7034$13P8LC g$rib$7504$13P8LC)
                           (g$rib-label*$7035$13P8LC g$rib$7504$13P8LC)))
                       '#f))))
                 (g$rib-sym*$7033$13P8LC g$rib$7504$13P8LC))))
             (g$id->sym$7079$13P8LC g$id$7505$13P8LC)
             (g$stx-mark*$7053$13P8LC g$id$7505$13P8LC)))))))
   (g$make-rib-map$7043$13P8LC
     g$make-rib-map$10671$13P8LC
     (case-lambda
       ((g$sym*$7518$13P8LC)
        ((case-lambda
           ((g$ht$7519$13P8LC)
            ((letrec ((g$f$7520$13P8LC
                        (case-lambda
                          ((g$i$7521$13P8LC g$sym*$7522$13P8LC)
                           (if (null? g$sym*$7522$13P8LC)
                             g$ht$7519$13P8LC
                             (begin
                               (g$hashtable-update!$5156$13P8LC
                                 g$ht$7519$13P8LC
                                 (car g$sym*$7522$13P8LC)
                                 (case-lambda
                                   ((g$x$7523$13P8LC)
                                    (cons g$i$7521$13P8LC g$x$7523$13P8LC)))
                                 '())
                               (g$f$7520$13P8LC
                                 (+ g$i$7521$13P8LC '1)
                                 (cdr g$sym*$7522$13P8LC))))))))
               g$f$7520$13P8LC)
             '0
             g$sym*$7518$13P8LC)))
         (g$make-eq-hashtable$5149$13P8LC)))))
   (g$seal-rib!$7044$13P8LC
     g$seal-rib!$10672$13P8LC
     (case-lambda
       ((g$rib$7524$13P8LC)
        ((case-lambda
           ((g$sym*$7525$13P8LC)
            (if (not (null? g$sym*$7525$13P8LC))
              (begin
                (g$set-rib-sym*!$7037$13P8LC
                  g$rib$7524$13P8LC
                  (list->vector g$sym*$7525$13P8LC))
                (g$set-rib-mark**!$7038$13P8LC
                  g$rib$7524$13P8LC
                  (list->vector (g$rib-mark**$7034$13P8LC g$rib$7524$13P8LC)))
                (g$set-rib-label*!$7039$13P8LC
                  g$rib$7524$13P8LC
                  (list->vector (g$rib-label*$7035$13P8LC g$rib$7524$13P8LC)))
                (g$set-rib-sealed/freq!$7040$13P8LC
                  g$rib$7524$13P8LC
                  (g$make-rib-map$7043$13P8LC g$sym*$7525$13P8LC)))
              (void))))
         (g$rib-sym*$7033$13P8LC g$rib$7524$13P8LC)))))
   (g$unseal-rib!$7045$13P8LC
     g$unseal-rib!$10673$13P8LC
     (case-lambda
       ((g$rib$7526$13P8LC)
        (if (g$rib-sealed/freq$7036$13P8LC g$rib$7526$13P8LC)
          (begin
            (g$set-rib-sealed/freq!$7040$13P8LC g$rib$7526$13P8LC '#f)
            (g$set-rib-sym*!$7037$13P8LC
              g$rib$7526$13P8LC
              (vector->list (g$rib-sym*$7033$13P8LC g$rib$7526$13P8LC)))
            (g$set-rib-mark**!$7038$13P8LC
              g$rib$7526$13P8LC
              (vector->list (g$rib-mark**$7034$13P8LC g$rib$7526$13P8LC)))
            (g$set-rib-label*!$7039$13P8LC
              g$rib$7526$13P8LC
              (vector->list (g$rib-label*$7035$13P8LC g$rib$7526$13P8LC))))
          (void)))))
   (g$make-full-rib$7046$13P8LC
     g$make-full-rib$10674$13P8LC
     (case-lambda
       ((g$id*$7527$13P8LC g$label*$7528$13P8LC)
        ((case-lambda
           ((g$r$7529$13P8LC)
            (begin (g$seal-rib!$7044$13P8LC g$r$7529$13P8LC) g$r$7529$13P8LC)))
         (g$make-rib$7032$13P8LC
           (map g$id->sym$7079$13P8LC g$id*$7527$13P8LC)
           (map g$stx-mark*$7053$13P8LC g$id*$7527$13P8LC)
           g$label*$7528$13P8LC
           '#f)))))
   (g$8042$7047$13P8LC
     g$8042$10675$13P8LC
     (make-record-type-descriptor
       'stx
       '#f
       'g$8045$13P8LC
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8044$7048$13P8LC g$8044$10676$13P8LC '#f)
   (g$8043$7049$13P8LC
     g$8043$10677$13P8LC
     (make-record-constructor-descriptor
       g$8042$7047$13P8LC
       '#f
       g$8044$7048$13P8LC))
   (g$stx?$7050$13P8LC
     g$stx?$10678$13P8LC
     (record-predicate g$8042$7047$13P8LC))
   (g$make-stx$7051$13P8LC
     g$make-stx$10679$13P8LC
     (record-constructor g$8043$7049$13P8LC))
   (g$stx-expr$7052$13P8LC
     g$stx-expr$10680$13P8LC
     (record-accessor g$8042$7047$13P8LC '0))
   (g$stx-mark*$7053$13P8LC
     g$stx-mark*$10681$13P8LC
     (record-accessor g$8042$7047$13P8LC '1))
   (g$stx-subst*$7054$13P8LC
     g$stx-subst*$10682$13P8LC
     (record-accessor g$8042$7047$13P8LC '2))
   (g$stx-ae*$7055$13P8LC
     g$stx-ae*$10683$13P8LC
     (record-accessor g$8042$7047$13P8LC '3))
   (g$set-stx-expr!$7056$13P8LC
     g$set-stx-expr!$10684$13P8LC
     (record-mutator g$8042$7047$13P8LC '0))
   (g$set-stx-mark*!$7057$13P8LC
     g$set-stx-mark*!$10685$13P8LC
     (record-mutator g$8042$7047$13P8LC '1))
   (g$set-stx-subst*!$7058$13P8LC
     g$set-stx-subst*!$10686$13P8LC
     (record-mutator g$8042$7047$13P8LC '2))
   (g$set-stx-ae*!$7059$13P8LC
     g$set-stx-ae*!$10687$13P8LC
     (record-mutator g$8042$7047$13P8LC '3))
   (g$rp$7060$13P8LC
     g$rp$10688$13P8LC
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7530$13P8LC g$p$7531$13P8LC)
          (begin
            (display '"#<syntax " g$p$7531$13P8LC)
            (write (g$stx->datum$7089$13P8LC g$x$7530$13P8LC) g$p$7531$13P8LC)
            ((case-lambda
               ((g$expr$7532$13P8LC)
                (if (annotation? g$expr$7532$13P8LC)
                  ((case-lambda
                     ((g$src$7533$13P8LC)
                      (if (pair? g$src$7533$13P8LC)
                        (begin
                          (display '" [" g$p$7531$13P8LC)
                          (display (cdr g$src$7533$13P8LC) g$p$7531$13P8LC)
                          (display '" of " g$p$7531$13P8LC)
                          (display (car g$src$7533$13P8LC) g$p$7531$13P8LC)
                          (display '"]" g$p$7531$13P8LC))
                        (void))))
                   (annotation-source g$expr$7532$13P8LC))
                  (void))))
             (g$stx-expr$7052$13P8LC g$x$7530$13P8LC))
            (display '">" g$p$7531$13P8LC))))))
   (g$datum->stx$7061$13P8LC
     g$datum->stx$10689$13P8LC
     (case-lambda
       ((g$id$7534$13P8LC g$datum$7535$13P8LC)
        (g$make-stx$7051$13P8LC
          g$datum$7535$13P8LC
          (g$stx-mark*$7053$13P8LC g$id$7534$13P8LC)
          (g$stx-subst*$7054$13P8LC g$id$7534$13P8LC)
          (g$stx-ae*$7055$13P8LC g$id$7534$13P8LC)))))
   (g$gen-mark$7062$13P8LC
     g$gen-mark$10690$13P8LC
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7063$13P8LC g$anti-mark$10691$13P8LC '#f)
   (g$anti-mark?$7064$13P8LC g$anti-mark?$10692$13P8LC not)
   (g$join-wraps$7065$13P8LC
     g$join-wraps$10693$13P8LC
     (case-lambda
       ((g$m1*$7536$13P8LC
          g$s1*$7537$13P8LC
          g$ae1*$7538$13P8LC
          g$e$7539$13P8LC)
        (letrec* ((g$cancel$7540$13P8LC
                    (case-lambda
                      ((g$ls1$7544$13P8LC g$ls2$7545$13P8LC)
                       ((letrec ((g$f$7546$13P8LC
                                   (case-lambda
                                     ((g$x$7547$13P8LC g$ls1$7548$13P8LC)
                                      (if (null? g$ls1$7548$13P8LC)
                                        (cdr g$ls2$7545$13P8LC)
                                        (cons
                                          g$x$7547$13P8LC
                                          (g$f$7546$13P8LC
                                            (car g$ls1$7548$13P8LC)
                                            (cdr g$ls1$7548$13P8LC))))))))
                          g$f$7546$13P8LC)
                        (car g$ls1$7544$13P8LC)
                        (cdr g$ls1$7544$13P8LC))))))
          ((case-lambda
             ((g$m2*$7541$13P8LC g$s2*$7542$13P8LC g$ae2*$7543$13P8LC)
              (if (if (not (null? g$m1*$7536$13P8LC))
                    (if (not (null? g$m2*$7541$13P8LC))
                      (begin
                        '#f
                        (g$anti-mark?$7064$13P8LC (car g$m2*$7541$13P8LC)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7540$13P8LC g$m1*$7536$13P8LC g$m2*$7541$13P8LC)
                  (g$cancel$7540$13P8LC g$s1*$7537$13P8LC g$s2*$7542$13P8LC)
                  (g$cancel$7540$13P8LC g$ae1*$7538$13P8LC g$ae2*$7543$13P8LC))
                (values
                  (append g$m1*$7536$13P8LC g$m2*$7541$13P8LC)
                  (append g$s1*$7537$13P8LC g$s2*$7542$13P8LC)
                  (append g$ae1*$7538$13P8LC g$ae2*$7543$13P8LC)))))
           (g$stx-mark*$7053$13P8LC g$e$7539$13P8LC)
           (g$stx-subst*$7054$13P8LC g$e$7539$13P8LC)
           (g$stx-ae*$7055$13P8LC g$e$7539$13P8LC))))))
   (g$mkstx$7066$13P8LC
     g$mkstx$10694$13P8LC
     (case-lambda
       ((g$e$7549$13P8LC g$m*$7550$13P8LC g$s*$7551$13P8LC g$ae*$7552$13P8LC)
        (if (g$stx?$7050$13P8LC g$e$7549$13P8LC)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7065$13P8LC
                 g$m*$7550$13P8LC
                 g$s*$7551$13P8LC
                 g$ae*$7552$13P8LC
                 g$e$7549$13P8LC)))
            (case-lambda
              ((g$m*$7556$13P8LC g$s*$7557$13P8LC g$ae*$7558$13P8LC)
               ((case-lambda
                  ((g$ae*$7559$13P8LC g$s*$7560$13P8LC g$m*$7561$13P8LC)
                   (g$make-stx$7051$13P8LC
                     (g$stx-expr$7052$13P8LC g$e$7549$13P8LC)
                     g$m*$7561$13P8LC
                     g$s*$7560$13P8LC
                     g$ae*$7559$13P8LC)))
                g$ae*$7558$13P8LC
                g$s*$7557$13P8LC
                g$m*$7556$13P8LC))))
          (g$make-stx$7051$13P8LC
            g$e$7549$13P8LC
            g$m*$7550$13P8LC
            g$s*$7551$13P8LC
            g$ae*$7552$13P8LC)))))
   (g$add-mark$7067$13P8LC
     g$add-mark$10695$13P8LC
     (case-lambda
       ((g$m$7562$13P8LC g$e$7563$13P8LC g$ae$7564$13P8LC)
        (g$mkstx$7066$13P8LC
          g$e$7563$13P8LC
          (list g$m$7562$13P8LC)
          '(shift)
          (list g$ae$7564$13P8LC)))))
   (g$add-subst$7068$13P8LC
     g$add-subst$10696$13P8LC
     (case-lambda
       ((g$subst$7565$13P8LC g$e$7566$13P8LC)
        (g$mkstx$7066$13P8LC
          g$e$7566$13P8LC
          '()
          (list g$subst$7565$13P8LC)
          '()))))
   (g$syntax-kind?$7069$13P8LC
     g$syntax-kind?$10697$13P8LC
     (case-lambda
       ((g$x$7567$13P8LC g$p?$7568$13P8LC)
        (if (g$stx?$7050$13P8LC g$x$7567$13P8LC)
          (g$syntax-kind?$7069$13P8LC
            (g$stx-expr$7052$13P8LC g$x$7567$13P8LC)
            g$p?$7568$13P8LC)
          (if (annotation? g$x$7567$13P8LC)
            (g$syntax-kind?$7069$13P8LC
              (annotation-expression g$x$7567$13P8LC)
              g$p?$7568$13P8LC)
            (g$p?$7568$13P8LC g$x$7567$13P8LC))))))
   (g$syntax-vector->list$7070$13P8LC
     g$syntax-vector->list$10698$13P8LC
     (case-lambda
       ((g$x$7569$13P8LC)
        (if (g$stx?$7050$13P8LC g$x$7569$13P8LC)
          ((case-lambda
             ((g$ls$7570$13P8LC
                g$m*$7571$13P8LC
                g$s*$7572$13P8LC
                g$ae*$7573$13P8LC)
              (map (case-lambda
                     ((g$x$7574$13P8LC)
                      (g$mkstx$7066$13P8LC
                        g$x$7574$13P8LC
                        g$m*$7571$13P8LC
                        g$s*$7572$13P8LC
                        g$ae*$7573$13P8LC)))
                   g$ls$7570$13P8LC)))
           (g$syntax-vector->list$7070$13P8LC
             (g$stx-expr$7052$13P8LC g$x$7569$13P8LC))
           (g$stx-mark*$7053$13P8LC g$x$7569$13P8LC)
           (g$stx-subst*$7054$13P8LC g$x$7569$13P8LC)
           (g$stx-ae*$7055$13P8LC g$x$7569$13P8LC))
          (if (annotation? g$x$7569$13P8LC)
            (g$syntax-vector->list$7070$13P8LC
              (annotation-expression g$x$7569$13P8LC))
            (if (vector? g$x$7569$13P8LC)
              (vector->list g$x$7569$13P8LC)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7569$13P8LC)))))))
   (g$syntax-pair?$7071$13P8LC
     g$syntax-pair?$10699$13P8LC
     (case-lambda
       ((g$x$7575$13P8LC) (g$syntax-kind?$7069$13P8LC g$x$7575$13P8LC pair?))))
   (g$syntax-vector?$7072$13P8LC
     g$syntax-vector?$10700$13P8LC
     (case-lambda
       ((g$x$7576$13P8LC)
        (g$syntax-kind?$7069$13P8LC g$x$7576$13P8LC vector?))))
   (g$syntax-null?$7073$13P8LC
     g$syntax-null?$10701$13P8LC
     (case-lambda
       ((g$x$7577$13P8LC) (g$syntax-kind?$7069$13P8LC g$x$7577$13P8LC null?))))
   (g$syntax-list?$7074$13P8LC
     g$syntax-list?$10702$13P8LC
     (case-lambda
       ((g$x$7578$13P8LC)
        ((case-lambda
           ((g$t$7579$13P8LC)
            (if g$t$7579$13P8LC
              g$t$7579$13P8LC
              (begin
                '#f
                (if (g$syntax-pair?$7071$13P8LC g$x$7578$13P8LC)
                  (begin
                    '#f
                    (g$syntax-list?$7074$13P8LC
                      (g$syntax-cdr$7076$13P8LC g$x$7578$13P8LC)))
                  '#f)))))
         (g$syntax-null?$7073$13P8LC g$x$7578$13P8LC)))))
   (g$syntax-car$7075$13P8LC
     g$syntax-car$10703$13P8LC
     (case-lambda
       ((g$x$7580$13P8LC)
        (if (g$stx?$7050$13P8LC g$x$7580$13P8LC)
          (g$mkstx$7066$13P8LC
            (g$syntax-car$7075$13P8LC (g$stx-expr$7052$13P8LC g$x$7580$13P8LC))
            (g$stx-mark*$7053$13P8LC g$x$7580$13P8LC)
            (g$stx-subst*$7054$13P8LC g$x$7580$13P8LC)
            (g$stx-ae*$7055$13P8LC g$x$7580$13P8LC))
          (if (annotation? g$x$7580$13P8LC)
            (g$syntax-car$7075$13P8LC (annotation-expression g$x$7580$13P8LC))
            (if (pair? g$x$7580$13P8LC)
              (car g$x$7580$13P8LC)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7580$13P8LC)))))))
   (g$syntax-cdr$7076$13P8LC
     g$syntax-cdr$10704$13P8LC
     (case-lambda
       ((g$x$7581$13P8LC)
        (if (g$stx?$7050$13P8LC g$x$7581$13P8LC)
          (g$mkstx$7066$13P8LC
            (g$syntax-cdr$7076$13P8LC (g$stx-expr$7052$13P8LC g$x$7581$13P8LC))
            (g$stx-mark*$7053$13P8LC g$x$7581$13P8LC)
            (g$stx-subst*$7054$13P8LC g$x$7581$13P8LC)
            (g$stx-ae*$7055$13P8LC g$x$7581$13P8LC))
          (if (annotation? g$x$7581$13P8LC)
            (g$syntax-cdr$7076$13P8LC (annotation-expression g$x$7581$13P8LC))
            (if (pair? g$x$7581$13P8LC)
              (cdr g$x$7581$13P8LC)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7581$13P8LC)))))))
   (g$syntax->list$7077$13P8LC
     g$syntax->list$10705$13P8LC
     (case-lambda
       ((g$x$7582$13P8LC)
        (if (g$syntax-pair?$7071$13P8LC g$x$7582$13P8LC)
          (cons
            (g$syntax-car$7075$13P8LC g$x$7582$13P8LC)
            (g$syntax->list$7077$13P8LC
              (g$syntax-cdr$7076$13P8LC g$x$7582$13P8LC)))
          (if (g$syntax-null?$7073$13P8LC g$x$7582$13P8LC)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7582$13P8LC))))))
   (g$id?$7078$13P8LC
     g$id?$10706$13P8LC
     (case-lambda
       ((g$x$7583$13P8LC)
        (if (g$stx?$7050$13P8LC g$x$7583$13P8LC)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7584$13P8LC)
                (symbol?
                  (if (annotation? g$expr$7584$13P8LC)
                    (annotation-stripped g$expr$7584$13P8LC)
                    g$expr$7584$13P8LC))))
             (g$stx-expr$7052$13P8LC g$x$7583$13P8LC)))
          '#f))))
   (g$id->sym$7079$13P8LC
     g$id->sym$10707$13P8LC
     (case-lambda
       ((g$x$7585$13P8LC)
        (begin
          (if (not (g$stx?$7050$13P8LC g$x$7585$13P8LC))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7585$13P8LC)
            (void))
          ((case-lambda
             ((g$expr$7586$13P8LC)
              ((case-lambda
                 ((g$sym$7587$13P8LC)
                  (if (symbol? g$sym$7587$13P8LC)
                    g$sym$7587$13P8LC
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7585$13P8LC))))
               (if (annotation? g$expr$7586$13P8LC)
                 (annotation-stripped g$expr$7586$13P8LC)
                 g$expr$7586$13P8LC))))
           (g$stx-expr$7052$13P8LC g$x$7585$13P8LC))))))
   (g$same-marks?$7080$13P8LC
     g$same-marks?$10708$13P8LC
     (case-lambda
       ((g$x$7588$13P8LC g$y$7589$13P8LC)
        ((case-lambda
           ((g$t$7590$13P8LC)
            (if g$t$7590$13P8LC
              g$t$7590$13P8LC
              (begin
                '#f
                (if (pair? g$x$7588$13P8LC)
                  (if (pair? g$y$7589$13P8LC)
                    (if (eq? (car g$x$7588$13P8LC) (car g$y$7589$13P8LC))
                      (begin
                        '#f
                        (g$same-marks?$7080$13P8LC
                          (cdr g$x$7588$13P8LC)
                          (cdr g$y$7589$13P8LC)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7588$13P8LC)
           (begin '#f (null? g$y$7589$13P8LC))
           '#f)))))
   (g$bound-id=?$7081$13P8LC
     g$bound-id=?$10709$13P8LC
     (case-lambda
       ((g$x$7591$13P8LC g$y$7592$13P8LC)
        (if (eq? (g$id->sym$7079$13P8LC g$x$7591$13P8LC)
                 (g$id->sym$7079$13P8LC g$y$7592$13P8LC))
          (begin
            '#f
            (g$same-marks?$7080$13P8LC
              (g$stx-mark*$7053$13P8LC g$x$7591$13P8LC)
              (g$stx-mark*$7053$13P8LC g$y$7592$13P8LC)))
          '#f))))
   (g$free-id=?$7082$13P8LC
     g$free-id=?$10710$13P8LC
     (case-lambda
       ((g$i$7593$13P8LC g$j$7594$13P8LC)
        ((case-lambda
           ((g$t0$7595$13P8LC g$t1$7596$13P8LC)
            (if ((case-lambda
                   ((g$t$7597$13P8LC)
                    (if g$t$7597$13P8LC
                      g$t$7597$13P8LC
                      (begin '#f g$t1$7596$13P8LC))))
                 g$t0$7595$13P8LC)
              (eq? g$t0$7595$13P8LC g$t1$7596$13P8LC)
              (eq? (g$id->sym$7079$13P8LC g$i$7593$13P8LC)
                   (g$id->sym$7079$13P8LC g$j$7594$13P8LC)))))
         (g$id->real-label$7092$13P8LC g$i$7593$13P8LC)
         (g$id->real-label$7092$13P8LC g$j$7594$13P8LC)))))
   (g$valid-bound-ids?$7083$13P8LC
     g$valid-bound-ids?$10711$13P8LC
     (case-lambda
       ((g$id*$7598$13P8LC)
        (if (g$for-all$5356$13P8LC g$id?$7078$13P8LC g$id*$7598$13P8LC)
          (begin '#f (g$distinct-bound-ids?$7084$13P8LC g$id*$7598$13P8LC))
          '#f))))
   (g$distinct-bound-ids?$7084$13P8LC
     g$distinct-bound-ids?$10712$13P8LC
     (case-lambda
       ((g$id*$7599$13P8LC)
        ((case-lambda
           ((g$t$7600$13P8LC)
            (if g$t$7600$13P8LC
              g$t$7600$13P8LC
              (begin
                '#f
                (if (not (g$bound-id-member?$7085$13P8LC
                           (car g$id*$7599$13P8LC)
                           (cdr g$id*$7599$13P8LC)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7084$13P8LC (cdr g$id*$7599$13P8LC)))
                  '#f)))))
         (null? g$id*$7599$13P8LC)))))
   (g$bound-id-member?$7085$13P8LC
     g$bound-id-member?$10713$13P8LC
     (case-lambda
       ((g$id$7601$13P8LC g$id*$7602$13P8LC)
        (if (pair? g$id*$7602$13P8LC)
          (begin
            '#f
            ((case-lambda
               ((g$t$7603$13P8LC)
                (if g$t$7603$13P8LC
                  g$t$7603$13P8LC
                  (begin
                    '#f
                    (g$bound-id-member?$7085$13P8LC
                      g$id$7601$13P8LC
                      (cdr g$id*$7602$13P8LC))))))
             (g$bound-id=?$7081$13P8LC
               g$id$7601$13P8LC
               (car g$id*$7602$13P8LC))))
          '#f))))
   (g$self-evaluating?$7086$13P8LC
     g$self-evaluating?$10714$13P8LC
     (case-lambda
       ((g$x$7604$13P8LC)
        ((case-lambda
           ((g$t$7605$13P8LC)
            (if g$t$7605$13P8LC
              g$t$7605$13P8LC
              ((case-lambda
                 ((g$t$7606$13P8LC)
                  (if g$t$7606$13P8LC
                    g$t$7606$13P8LC
                    ((case-lambda
                       ((g$t$7607$13P8LC)
                        (if g$t$7607$13P8LC
                          g$t$7607$13P8LC
                          ((case-lambda
                             ((g$t$7608$13P8LC)
                              (if g$t$7608$13P8LC
                                g$t$7608$13P8LC
                                (begin '#f (bytevector? g$x$7604$13P8LC)))))
                           (boolean? g$x$7604$13P8LC)))))
                     (char? g$x$7604$13P8LC)))))
               (string? g$x$7604$13P8LC)))))
         (number? g$x$7604$13P8LC)))))
   (g$strip-annotations$7087$13P8LC
     g$strip-annotations$10715$13P8LC
     (case-lambda
       ((g$x$7609$13P8LC)
        (if (pair? g$x$7609$13P8LC)
          (cons
            (g$strip-annotations$7087$13P8LC (car g$x$7609$13P8LC))
            (g$strip-annotations$7087$13P8LC (cdr g$x$7609$13P8LC)))
          (if (vector? g$x$7609$13P8LC)
            (vector-map g$strip-annotations$7087$13P8LC g$x$7609$13P8LC)
            (if (annotation? g$x$7609$13P8LC)
              (annotation-stripped g$x$7609$13P8LC)
              g$x$7609$13P8LC))))))
   (g$strip$7088$13P8LC
     g$strip$10716$13P8LC
     (case-lambda
       ((g$x$7610$13P8LC g$m*$7611$13P8LC)
        (if (g$top-marked?$7021$13P8LC g$m*$7611$13P8LC)
          (if ((case-lambda
                 ((g$t$7612$13P8LC)
                  (if g$t$7612$13P8LC
                    g$t$7612$13P8LC
                    ((case-lambda
                       ((g$t$7613$13P8LC)
                        (if g$t$7613$13P8LC
                          g$t$7613$13P8LC
                          (begin
                            '#f
                            (if (vector? g$x$7610$13P8LC)
                              (if (> (vector-length g$x$7610$13P8LC) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7610$13P8LC '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7610$13P8LC)
                       (begin '#f (annotation? (car g$x$7610$13P8LC)))
                       '#f)))))
               (annotation? g$x$7610$13P8LC))
            (g$strip-annotations$7087$13P8LC g$x$7610$13P8LC)
            g$x$7610$13P8LC)
          ((letrec ((g$f$7614$13P8LC
                      (case-lambda
                        ((g$x$7615$13P8LC)
                         (if (g$stx?$7050$13P8LC g$x$7615$13P8LC)
                           (g$strip$7088$13P8LC
                             (g$stx-expr$7052$13P8LC g$x$7615$13P8LC)
                             (g$stx-mark*$7053$13P8LC g$x$7615$13P8LC))
                           (if (annotation? g$x$7615$13P8LC)
                             (annotation-stripped g$x$7615$13P8LC)
                             (if (pair? g$x$7615$13P8LC)
                               ((case-lambda
                                  ((g$a$7616$13P8LC g$d$7617$13P8LC)
                                   (if (if (eq? g$a$7616$13P8LC
                                                (car g$x$7615$13P8LC))
                                         (begin
                                           '#f
                                           (eq? g$d$7617$13P8LC
                                                (cdr g$x$7615$13P8LC)))
                                         '#f)
                                     g$x$7615$13P8LC
                                     (cons g$a$7616$13P8LC g$d$7617$13P8LC))))
                                (g$f$7614$13P8LC (car g$x$7615$13P8LC))
                                (g$f$7614$13P8LC (cdr g$x$7615$13P8LC)))
                               (if (vector? g$x$7615$13P8LC)
                                 ((case-lambda
                                    ((g$old$7618$13P8LC)
                                     ((case-lambda
                                        ((g$new$7619$13P8LC)
                                         (if (g$for-all$5356$13P8LC
                                               eq?
                                               g$old$7618$13P8LC
                                               g$new$7619$13P8LC)
                                           g$x$7615$13P8LC
                                           (list->vector g$new$7619$13P8LC))))
                                      (map g$f$7614$13P8LC g$old$7618$13P8LC))))
                                  (vector->list g$x$7615$13P8LC))
                                 g$x$7615$13P8LC))))))))
             g$f$7614$13P8LC)
           g$x$7610$13P8LC)))))
   (g$stx->datum$7089$13P8LC
     g$stx->datum$10717$13P8LC
     (case-lambda
       ((g$x$7620$13P8LC) (g$strip$7088$13P8LC g$x$7620$13P8LC '()))))
   (g$same-marks*?$7090$13P8LC
     g$same-marks*?$10718$13P8LC
     (case-lambda
       ((g$mark*$7621$13P8LC g$mark**$7622$13P8LC g$si$7623$13P8LC)
        (if (null? g$si$7623$13P8LC)
          '#f
          (if (g$same-marks?$7080$13P8LC
                g$mark*$7621$13P8LC
                (vector-ref g$mark**$7622$13P8LC (car g$si$7623$13P8LC)))
            (car g$si$7623$13P8LC)
            (g$same-marks*?$7090$13P8LC
              g$mark*$7621$13P8LC
              g$mark**$7622$13P8LC
              (cdr g$si$7623$13P8LC)))))))
   (g$id->label$7091$13P8LC
     g$id->label$10719$13P8LC
     (case-lambda
       ((g$id$7624$13P8LC)
        ((case-lambda
           ((g$t$7625$13P8LC)
            (if g$t$7625$13P8LC
              g$t$7625$13P8LC
              (begin
                '#f
                ((case-lambda
                   ((g$t$7626$13P8LC)
                    (if g$t$7626$13P8LC
                      ((case-lambda
                         ((g$env$7627$13P8LC)
                          ((case-lambda
                             ((g$rib$7628$13P8LC)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7026$13P8LC
                                     g$id$7624$13P8LC
                                     g$rib$7628$13P8LC)))
                                (case-lambda
                                  ((g$lab$7631$13P8LC g$loc_$7632$13P8LC)
                                   ((case-lambda
                                      ((g$loc_$7633$13P8LC g$lab$7634$13P8LC)
                                       (begin
                                         (g$extend-rib!$7042$13P8LC
                                           g$rib$7628$13P8LC
                                           g$id$7624$13P8LC
                                           g$lab$7634$13P8LC)
                                         g$lab$7634$13P8LC)))
                                    g$loc_$7632$13P8LC
                                    g$lab$7631$13P8LC))))))
                           (g$interaction-env-rib$7434$13P8LC
                             g$env$7627$13P8LC))))
                       g$t$7626$13P8LC)
                      '#f)))
                 (g$top-level-context$7472$13P8LC))))))
         (g$id->real-label$7092$13P8LC g$id$7624$13P8LC)))))
   (g$id->real-label$7092$13P8LC
     g$id->real-label$10720$13P8LC
     (case-lambda
       ((g$id$7635$13P8LC)
        ((case-lambda
           ((g$sym$7636$13P8LC)
            ((letrec ((g$search$7637$13P8LC
                        (case-lambda
                          ((g$subst*$7638$13P8LC g$mark*$7639$13P8LC)
                           (if (null? g$subst*$7638$13P8LC)
                             '#f
                             (if (eq? (car g$subst*$7638$13P8LC) 'shift)
                               (g$search$7637$13P8LC
                                 (cdr g$subst*$7638$13P8LC)
                                 (cdr g$mark*$7639$13P8LC))
                               ((case-lambda
                                  ((g$rib$7640$13P8LC)
                                   ((case-lambda
                                      ((g$t$7641$13P8LC)
                                       (if g$t$7641$13P8LC
                                         ((case-lambda
                                            ((g$ht$7642$13P8LC)
                                             ((case-lambda
                                                ((g$si$7643$13P8LC)
                                                 ((case-lambda
                                                    ((g$i$7644$13P8LC)
                                                     (if g$i$7644$13P8LC
                                                       (vector-ref
                                                         (g$rib-label*$7035$13P8LC
                                                           g$rib$7640$13P8LC)
                                                         g$i$7644$13P8LC)
                                                       (g$search$7637$13P8LC
                                                         (cdr g$subst*$7638$13P8LC)
                                                         g$mark*$7639$13P8LC))))
                                                  (if g$si$7643$13P8LC
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7090$13P8LC
                                                        g$mark*$7639$13P8LC
                                                        (g$rib-mark**$7034$13P8LC
                                                          g$rib$7640$13P8LC)
                                                        (reverse
                                                          g$si$7643$13P8LC)))
                                                    '#f))))
                                              (g$hashtable-ref$5152$13P8LC
                                                g$ht$7642$13P8LC
                                                g$sym$7636$13P8LC
                                                '#f))))
                                          g$t$7641$13P8LC)
                                         ((letrec ((g$f$7645$13P8LC
                                                     (case-lambda
                                                       ((g$sym*$7646$13P8LC
                                                          g$mark**$7647$13P8LC
                                                          g$label*$7648$13P8LC)
                                                        (if (null?
                                                              g$sym*$7646$13P8LC)
                                                          (g$search$7637$13P8LC
                                                            (cdr g$subst*$7638$13P8LC)
                                                            g$mark*$7639$13P8LC)
                                                          (if (if (eq? (car g$sym*$7646$13P8LC)
                                                                       g$sym$7636$13P8LC)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7080$13P8LC
                                                                    (car g$mark**$7647$13P8LC)
                                                                    g$mark*$7639$13P8LC))
                                                                '#f)
                                                            (car g$label*$7648$13P8LC)
                                                            (g$f$7645$13P8LC
                                                              (cdr g$sym*$7646$13P8LC)
                                                              (cdr g$mark**$7647$13P8LC)
                                                              (cdr g$label*$7648$13P8LC))))))))
                                            g$f$7645$13P8LC)
                                          (g$rib-sym*$7033$13P8LC
                                            g$rib$7640$13P8LC)
                                          (g$rib-mark**$7034$13P8LC
                                            g$rib$7640$13P8LC)
                                          (g$rib-label*$7035$13P8LC
                                            g$rib$7640$13P8LC)))))
                                    (g$rib-sealed/freq$7036$13P8LC
                                      g$rib$7640$13P8LC))))
                                (car g$subst*$7638$13P8LC))))))))
               g$search$7637$13P8LC)
             (g$stx-subst*$7054$13P8LC g$id$7635$13P8LC)
             (g$stx-mark*$7053$13P8LC g$id$7635$13P8LC))))
         (g$id->sym$7079$13P8LC g$id$7635$13P8LC)))))
   (g$label->binding$7093$13P8LC
     g$label->binding$10721$13P8LC
     (case-lambda
       ((g$x$7649$13P8LC g$r$7650$13P8LC)
        ((case-lambda
           ((g$t$7651$13P8LC)
            (if g$t$7651$13P8LC
              ((case-lambda
                 ((g$b$7652$13P8LC)
                  (if (if (pair? g$b$7652$13P8LC)
                        (begin '#f (eq? (car g$b$7652$13P8LC) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7319$13P8LC (cdr g$b$7652$13P8LC)))
                    (if (if (pair? g$b$7652$13P8LC)
                          (begin '#f (eq? (car g$b$7652$13P8LC) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7653$13P8LC g$loc$7654$13P8LC)
                          (cons '$rtd (symbol-value g$loc$7654$13P8LC))))
                       (g$cadr$4887$13P8LC g$b$7652$13P8LC)
                       (g$cddr$4889$13P8LC g$b$7652$13P8LC))
                      g$b$7652$13P8LC))))
               g$t$7651$13P8LC)
              ((case-lambda
                 ((g$t$7655$13P8LC)
                  (if g$t$7655$13P8LC
                    (cdr g$t$7655$13P8LC)
                    ((case-lambda
                       ((g$t$7656$13P8LC)
                        (if g$t$7656$13P8LC
                          ((case-lambda
                             ((g$env$7657$13P8LC)
                              ((case-lambda
                                 ((g$t$7658$13P8LC)
                                  (if g$t$7658$13P8LC
                                    ((case-lambda
                                       ((g$p$7659$13P8LC)
                                        (g$cons*$5358$13P8LC
                                          'lexical
                                          (cdr g$p$7659$13P8LC)
                                          '#f)))
                                     g$t$7658$13P8LC)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7649$13P8LC
                                 (g$interaction-env-locs$7436$13P8LC
                                   g$env$7657$13P8LC)))))
                           g$t$7656$13P8LC)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7472$13P8LC)))))
               (assq g$x$7649$13P8LC g$r$7650$13P8LC)))))
         (g$imported-label->binding$6892$13P8LC g$x$7649$13P8LC)))))
   (g$make-binding$7094$13P8LC g$make-binding$10722$13P8LC cons)
   (g$binding-type$7095$13P8LC g$binding-type$10723$13P8LC car)
   (g$binding-value$7096$13P8LC g$binding-value$10724$13P8LC cdr)
   (g$raise-unbound-error$7097$13P8LC
     g$raise-unbound-error$10725$13P8LC
     (case-lambda
       ((g$id$7660$13P8LC)
        (g$syntax-violation*$7464$13P8LC
          '#f
          '"unbound identifier"
          g$id$7660$13P8LC
          (g$make-undefined-violation$5692$13P8LC)))))
   (g$syntax-type$7098$13P8LC
     g$syntax-type$10726$13P8LC
     (case-lambda
       ((g$e$7661$13P8LC g$r$7662$13P8LC)
        (if (g$id?$7078$13P8LC g$e$7661$13P8LC)
          ((case-lambda
             ((g$id$7663$13P8LC)
              ((case-lambda
                 ((g$label$7664$13P8LC)
                  ((case-lambda
                     ((g$b$7665$13P8LC)
                      ((case-lambda
                         ((g$type$7666$13P8LC)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7664$13P8LC)
                                  (g$raise-unbound-error$7097$13P8LC
                                    g$id$7663$13P8LC)
                                  (void))
                                ((case-lambda
                                   ((g$t$7667$13P8LC)
                                    (if (memv
                                          g$t$7667$13P8LC
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7666$13P8LC
                                        (g$binding-value$7096$13P8LC
                                          g$b$7665$13P8LC)
                                        g$id$7663$13P8LC)
                                      (values 'other '#f '#f))))
                                 g$type$7666$13P8LC)))))))
                       (g$binding-type$7095$13P8LC g$b$7665$13P8LC))))
                   (g$label->binding$7093$13P8LC
                     g$label$7664$13P8LC
                     g$r$7662$13P8LC))))
               (g$id->label$7091$13P8LC g$id$7663$13P8LC))))
           g$e$7661$13P8LC)
          (if (g$syntax-pair?$7071$13P8LC g$e$7661$13P8LC)
            ((case-lambda
               ((g$id$7668$13P8LC)
                (if (g$id?$7078$13P8LC g$id$7668$13P8LC)
                  ((case-lambda
                     ((g$label$7669$13P8LC)
                      ((case-lambda
                         ((g$b$7670$13P8LC)
                          ((case-lambda
                             ((g$type$7671$13P8LC)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7669$13P8LC)
                                      (g$raise-unbound-error$7097$13P8LC
                                        g$id$7668$13P8LC)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7672$13P8LC)
                                        (if (memv
                                              g$t$7672$13P8LC
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7671$13P8LC
                                            (g$binding-value$7096$13P8LC
                                              g$b$7670$13P8LC)
                                            g$id$7668$13P8LC)
                                          (values 'call '#f '#f))))
                                     g$type$7671$13P8LC)))))))
                           (g$binding-type$7095$13P8LC g$b$7670$13P8LC))))
                       (g$label->binding$7093$13P8LC
                         g$label$7669$13P8LC
                         g$r$7662$13P8LC))))
                   (g$id->label$7091$13P8LC g$id$7668$13P8LC))
                  (values 'call '#f '#f))))
             (g$syntax-car$7075$13P8LC g$e$7661$13P8LC))
            ((case-lambda
               ((g$d$7673$13P8LC)
                (if (g$self-evaluating?$7086$13P8LC g$d$7673$13P8LC)
                  (values 'constant g$d$7673$13P8LC '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7089$13P8LC g$e$7661$13P8LC)))))))
   (g$sanitize-binding$7106$13P8LC
     g$sanitize-binding$10727$13P8LC
     (case-lambda
       ((g$x$7674$13P8LC g$src$7675$13P8LC)
        (if (procedure? g$x$7674$13P8LC)
          (g$cons*$5358$13P8LC 'local-macro g$x$7674$13P8LC g$src$7675$13P8LC)
          (if (if (pair? g$x$7674$13P8LC)
                (if (eq? (car g$x$7674$13P8LC) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7674$13P8LC)))
                  '#f)
                '#f)
            (g$cons*$5358$13P8LC
              'local-macro!
              (cdr g$x$7674$13P8LC)
              g$src$7675$13P8LC)
            (if (if (pair? g$x$7674$13P8LC)
                  (begin '#f (eq? (car g$x$7674$13P8LC) '$rtd))
                  '#f)
              g$x$7674$13P8LC
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7674$13P8LC)))))))
   (g$make-variable-transformer$7107$13P8LC
     g$make-variable-transformer$10728$13P8LC
     (case-lambda
       ((g$x$7676$13P8LC)
        (if (procedure? g$x$7676$13P8LC)
          (cons 'macro! g$x$7676$13P8LC)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7676$13P8LC)))))
   (g$variable-transformer?$7108$13P8LC
     g$variable-transformer?$10729$13P8LC
     (case-lambda
       ((g$x$7677$13P8LC)
        (if (pair? g$x$7677$13P8LC)
          (if (eq? (car g$x$7677$13P8LC) 'macro!)
            (begin '#f (procedure? (cdr g$x$7677$13P8LC)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7109$13P8LC
     g$variable-transformer-procedure$10730$13P8LC
     (case-lambda
       ((g$x$7678$13P8LC)
        (if (g$variable-transformer?$7108$13P8LC g$x$7678$13P8LC)
          (cdr g$x$7678$13P8LC)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7678$13P8LC)))))
   (g$make-eval-transformer$7110$13P8LC
     g$make-eval-transformer$10731$13P8LC
     (case-lambda
       ((g$x$7679$13P8LC)
        (g$sanitize-binding$7106$13P8LC
          (eval-core (g$expanded->core$6592$13P8LC g$x$7679$13P8LC))
          g$x$7679$13P8LC))))
   (g$parse-define$7296$13P8LC
     g$parse-define$10732$13P8LC
     (case-lambda
       ((g$x$7680$13P8LC)
        ((case-lambda
           ((g$t$7681$13P8LC)
            ((case-lambda
               ((g$ls/false$7682$13P8LC)
                (if (if g$ls/false$7682$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7683$13P8LC
                               g$fmls$7684$13P8LC
                               g$b$7685$13P8LC
                               g$b*$7686$13P8LC)
                             (g$id?$7078$13P8LC g$id$7683$13P8LC)))
                          g$ls/false$7682$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7687$13P8LC
                         g$fmls$7688$13P8LC
                         g$b$7689$13P8LC
                         g$b*$7690$13P8LC)
                       (begin
                         (g$verify-formals$7376$13P8LC
                           g$fmls$7688$13P8LC
                           g$x$7680$13P8LC)
                         (values
                           g$id$7687$13P8LC
                           (cons
                             'defun
                             (cons
                               g$fmls$7688$13P8LC
                               (cons g$b$7689$13P8LC g$b*$7690$13P8LC)))))))
                    g$ls/false$7682$13P8LC)
                  ((case-lambda
                     ((g$t$7691$13P8LC)
                      ((case-lambda
                         ((g$ls/false$7692$13P8LC)
                          (if (if g$ls/false$7692$13P8LC
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7693$13P8LC g$val$7694$13P8LC)
                                       (g$id?$7078$13P8LC g$id$7693$13P8LC)))
                                    g$ls/false$7692$13P8LC))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7695$13P8LC g$val$7696$13P8LC)
                                 (values
                                   g$id$7695$13P8LC
                                   (cons 'expr g$val$7696$13P8LC))))
                              g$ls/false$7692$13P8LC)
                            ((case-lambda
                               ((g$t$7697$13P8LC)
                                ((case-lambda
                                   ((g$ls/false$7698$13P8LC)
                                    (if (if g$ls/false$7698$13P8LC
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7699$13P8LC)
                                                 (g$id?$7078$13P8LC
                                                   g$id$7699$13P8LC)))
                                              g$ls/false$7698$13P8LC))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7700$13P8LC)
                                           (values
                                             g$id$7700$13P8LC
                                             (cons
                                               'expr
                                               (g$bless$7319$13P8LC '(void))))))
                                        g$ls/false$7698$13P8LC)
                                      (g$syntax-violation$7465$13P8LC
                                        '#f
                                        '"invalid syntax"
                                        g$t$7697$13P8LC))))
                                 (g$syntax-dispatch$7356$13P8LC
                                   g$t$7697$13P8LC
                                   '(_ any)))))
                             g$t$7691$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$7691$13P8LC
                         '(_ any any)))))
                   g$t$7681$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$7681$13P8LC
               '(_ (any . any) any . each-any)))))
         g$x$7680$13P8LC))))
   (g$parse-define-syntax$7297$13P8LC
     g$parse-define-syntax$10733$13P8LC
     (case-lambda
       ((g$x$7701$13P8LC)
        ((case-lambda
           ((g$t$7702$13P8LC)
            ((case-lambda
               ((g$ls/false$7703$13P8LC)
                (if (if g$ls/false$7703$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7704$13P8LC g$val$7705$13P8LC)
                             (g$id?$7078$13P8LC g$id$7704$13P8LC)))
                          g$ls/false$7703$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7706$13P8LC g$val$7707$13P8LC)
                       (values g$id$7706$13P8LC g$val$7707$13P8LC)))
                    g$ls/false$7703$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7702$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$7702$13P8LC '(_ any any)))))
         g$x$7701$13P8LC))))
   (g$scheme-stx-hashtable$7298$13P8LC
     g$scheme-stx-hashtable$10734$13P8LC
     (g$make-eq-hashtable$5149$13P8LC))
   (g$scheme-stx$7299$13P8LC
     g$scheme-stx$10735$13P8LC
     (case-lambda
       ((g$sym$7708$13P8LC)
        ((case-lambda
           ((g$t$7709$13P8LC)
            (if g$t$7709$13P8LC
              g$t$7709$13P8LC
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7710$13P8LC)
                    ((case-lambda
                       ((g$stx$7711$13P8LC)
                        ((case-lambda
                           ((g$stx$7712$13P8LC)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5153$13P8LC
                                    g$scheme-stx-hashtable$7298$13P8LC
                                    g$sym$7708$13P8LC
                                    g$stx$7712$13P8LC)
                                  g$stx$7712$13P8LC))))))
                         ((case-lambda
                            ((g$t$7713$13P8LC)
                             (if g$t$7713$13P8LC
                               ((case-lambda
                                  ((g$x$7714$13P8LC)
                                   ((case-lambda
                                      ((g$name$7715$13P8LC g$label$7716$13P8LC)
                                       (g$add-subst$7068$13P8LC
                                         (g$make-rib$7032$13P8LC
                                           (list g$name$7715$13P8LC)
                                           (list g$top-mark*$7020$13P8LC)
                                           (list g$label$7716$13P8LC)
                                           '#f)
                                         g$stx$7711$13P8LC)))
                                    (car g$x$7714$13P8LC)
                                    (cdr g$x$7714$13P8LC))))
                                g$t$7713$13P8LC)
                               g$stx$7711$13P8LC)))
                          (assq g$sym$7708$13P8LC g$subst$7710$13P8LC)))))
                     (g$make-stx$7051$13P8LC
                       g$sym$7708$13P8LC
                       g$top-mark*$7020$13P8LC
                       '()
                       '()))))
                 (g$library-subst$6850$13P8LC
                   (g$find-library-by-name$6886$13P8LC
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5152$13P8LC
           g$scheme-stx-hashtable$7298$13P8LC
           g$sym$7708$13P8LC
           '#f)))))
   (g$lexical-var$7300$13P8LC g$lexical-var$10736$13P8LC car)
   (g$lexical-mutable?$7301$13P8LC g$lexical-mutable?$10737$13P8LC cdr)
   (g$set-lexical-mutable!$7302$13P8LC
     g$set-lexical-mutable!$10738$13P8LC
     set-cdr!)
   (g$add-lexical$7303$13P8LC
     g$add-lexical$10739$13P8LC
     (case-lambda
       ((g$lab$7717$13P8LC g$lex$7718$13P8LC g$r$7719$13P8LC)
        (cons
          (g$cons*$5358$13P8LC g$lab$7717$13P8LC 'lexical g$lex$7718$13P8LC '#f)
          g$r$7719$13P8LC))))
   (g$add-lexicals$7304$13P8LC
     g$add-lexicals$10740$13P8LC
     (case-lambda
       ((g$lab*$7720$13P8LC g$lex*$7721$13P8LC g$r$7722$13P8LC)
        (if (null? g$lab*$7720$13P8LC)
          g$r$7722$13P8LC
          (g$add-lexicals$7304$13P8LC
            (cdr g$lab*$7720$13P8LC)
            (cdr g$lex*$7721$13P8LC)
            (g$add-lexical$7303$13P8LC
              (car g$lab*$7720$13P8LC)
              (car g$lex*$7721$13P8LC)
              g$r$7722$13P8LC))))))
   (g$letrec-helper$7305$13P8LC
     g$letrec-helper$10741$13P8LC
     (case-lambda
       ((g$e$7723$13P8LC g$r$7724$13P8LC g$mr$7725$13P8LC g$build$7726$13P8LC)
        ((case-lambda
           ((g$t$7727$13P8LC)
            ((case-lambda
               ((g$ls/false$7728$13P8LC)
                (if g$ls/false$7728$13P8LC
                  (apply
                    (case-lambda
                      ((g$lhs*$7729$13P8LC
                         g$rhs*$7730$13P8LC
                         g$b$7731$13P8LC
                         g$b*$7732$13P8LC)
                       (if (not (g$valid-bound-ids?$7083$13P8LC
                                  g$lhs*$7729$13P8LC))
                         (g$invalid-fmls-error$7321$13P8LC
                           g$e$7723$13P8LC
                           g$lhs*$7729$13P8LC)
                         ((case-lambda
                            ((g$lex*$7733$13P8LC g$lab*$7734$13P8LC)
                             ((case-lambda
                                ((g$rib$7735$13P8LC g$r$7736$13P8LC)
                                 ((case-lambda
                                    ((g$body$7737$13P8LC g$rhs*$7738$13P8LC)
                                     (g$build$7726$13P8LC
                                       '#f
                                       g$lex*$7733$13P8LC
                                       g$rhs*$7738$13P8LC
                                       g$body$7737$13P8LC)))
                                  (g$chi-internal$7385$13P8LC
                                    (g$add-subst$7068$13P8LC
                                      g$rib$7735$13P8LC
                                      (cons g$b$7731$13P8LC g$b*$7732$13P8LC))
                                    g$r$7736$13P8LC
                                    g$mr$7725$13P8LC)
                                  (g$chi-expr*$7372$13P8LC
                                    (map (case-lambda
                                           ((g$x$7739$13P8LC)
                                            (g$add-subst$7068$13P8LC
                                              g$rib$7735$13P8LC
                                              g$x$7739$13P8LC)))
                                         g$rhs*$7730$13P8LC)
                                    g$r$7736$13P8LC
                                    g$mr$7725$13P8LC))))
                              (g$make-full-rib$7046$13P8LC
                                g$lhs*$7729$13P8LC
                                g$lab*$7734$13P8LC)
                              (g$add-lexicals$7304$13P8LC
                                g$lab*$7734$13P8LC
                                g$lex*$7733$13P8LC
                                g$r$7724$13P8LC))))
                          (map g$gen-lexical$7022$13P8LC g$lhs*$7729$13P8LC)
                          (map g$gen-label$7024$13P8LC g$lhs*$7729$13P8LC)))))
                    g$ls/false$7728$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7727$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$7727$13P8LC
               '(_ #(each (any any)) any . each-any)))))
         g$e$7723$13P8LC))))
   (g$letrec-transformer$7306$13P8LC
     g$letrec-transformer$10742$13P8LC
     (case-lambda
       ((g$e$7740$13P8LC g$r$7741$13P8LC g$mr$7742$13P8LC)
        (g$letrec-helper$7305$13P8LC
          g$e$7740$13P8LC
          g$r$7741$13P8LC
          g$mr$7742$13P8LC
          g$build-letrec$7014$13P8LC))))
   (g$letrec*-transformer$7307$13P8LC
     g$letrec*-transformer$10743$13P8LC
     (case-lambda
       ((g$e$7743$13P8LC g$r$7744$13P8LC g$mr$7745$13P8LC)
        (g$letrec-helper$7305$13P8LC
          g$e$7743$13P8LC
          g$r$7744$13P8LC
          g$mr$7745$13P8LC
          g$build-letrec*$7015$13P8LC))))
   (g$fluid-let-syntax-transformer$7308$13P8LC
     g$fluid-let-syntax-transformer$10744$13P8LC
     (case-lambda
       ((g$e$7746$13P8LC g$r$7747$13P8LC g$mr$7748$13P8LC)
        (letrec* ((g$lookup$7749$13P8LC
                    (case-lambda
                      ((g$x$7759$13P8LC)
                       ((case-lambda
                          ((g$t$7760$13P8LC)
                           (if g$t$7760$13P8LC
                             g$t$7760$13P8LC
                             (begin
                               '#f
                               (g$syntax-violation$7465$13P8LC
                                 '#f
                                 '"unbound identifier"
                                 g$e$7746$13P8LC
                                 g$x$7759$13P8LC)))))
                        (g$id->label$7091$13P8LC g$x$7759$13P8LC))))))
          ((case-lambda
             ((g$t$7750$13P8LC)
              ((case-lambda
                 ((g$ls/false$7751$13P8LC)
                  (if g$ls/false$7751$13P8LC
                    (apply
                      (case-lambda
                        ((g$lhs*$7752$13P8LC
                           g$rhs*$7753$13P8LC
                           g$b$7754$13P8LC
                           g$b*$7755$13P8LC)
                         (if (not (g$valid-bound-ids?$7083$13P8LC
                                    g$lhs*$7752$13P8LC))
                           (g$invalid-fmls-error$7321$13P8LC
                             g$e$7746$13P8LC
                             g$lhs*$7752$13P8LC)
                           ((case-lambda
                              ((g$lab*$7756$13P8LC g$rhs*$7757$13P8LC)
                               (g$chi-internal$7385$13P8LC
                                 (cons g$b$7754$13P8LC g$b*$7755$13P8LC)
                                 (append
                                   (map cons
                                        g$lab*$7756$13P8LC
                                        g$rhs*$7757$13P8LC)
                                   g$r$7747$13P8LC)
                                 (append
                                   (map cons
                                        g$lab*$7756$13P8LC
                                        g$rhs*$7757$13P8LC)
                                   g$mr$7748$13P8LC))))
                            (map g$lookup$7749$13P8LC g$lhs*$7752$13P8LC)
                            (map (case-lambda
                                   ((g$x$7758$13P8LC)
                                    (g$make-eval-transformer$7110$13P8LC
                                      (g$expand-transformer$7401$13P8LC
                                        g$x$7758$13P8LC
                                        g$mr$7748$13P8LC))))
                                 g$rhs*$7753$13P8LC)))))
                      g$ls/false$7751$13P8LC)
                    (g$syntax-violation$7465$13P8LC
                      '#f
                      '"invalid syntax"
                      g$t$7750$13P8LC))))
               (g$syntax-dispatch$7356$13P8LC
                 g$t$7750$13P8LC
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7746$13P8LC)))))
   (g$type-descriptor-transformer$7309$13P8LC
     g$type-descriptor-transformer$10745$13P8LC
     (case-lambda
       ((g$e$7761$13P8LC g$r$7762$13P8LC g$mr$7763$13P8LC)
        ((case-lambda
           ((g$t$7764$13P8LC)
            ((case-lambda
               ((g$ls/false$7765$13P8LC)
                (if (if g$ls/false$7765$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7766$13P8LC)
                             (g$id?$7078$13P8LC g$id$7766$13P8LC)))
                          g$ls/false$7765$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7767$13P8LC)
                       ((case-lambda
                          ((g$lab$7768$13P8LC)
                           ((case-lambda
                              ((g$b$7769$13P8LC)
                               ((case-lambda
                                  ((g$type$7770$13P8LC)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7768$13P8LC)
                                           (g$raise-unbound-error$7097$13P8LC
                                             g$id$7767$13P8LC)
                                           (void))
                                         (if (not (if (eq? g$type$7770$13P8LC
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7096$13P8LC
                                                               g$b$7769$13P8LC))))
                                                    '#f))
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"not a record type"
                                             g$e$7761$13P8LC)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7096$13P8LC
                                             g$b$7769$13P8LC))))))))
                                (g$binding-type$7095$13P8LC g$b$7769$13P8LC))))
                            (g$label->binding$7093$13P8LC
                              g$lab$7768$13P8LC
                              g$r$7762$13P8LC))))
                        (g$id->label$7091$13P8LC g$id$7767$13P8LC))))
                    g$ls/false$7765$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7764$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$7764$13P8LC '(_ any)))))
         g$e$7761$13P8LC))))
   (g$record-type-descriptor-transformer$7310$13P8LC
     g$record-type-descriptor-transformer$10746$13P8LC
     (case-lambda
       ((g$e$7771$13P8LC g$r$7772$13P8LC g$mr$7773$13P8LC)
        ((case-lambda
           ((g$t$7774$13P8LC)
            ((case-lambda
               ((g$ls/false$7775$13P8LC)
                (if (if g$ls/false$7775$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7776$13P8LC)
                             (g$id?$7078$13P8LC g$id$7776$13P8LC)))
                          g$ls/false$7775$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7777$13P8LC)
                       ((case-lambda
                          ((g$lab$7778$13P8LC)
                           ((case-lambda
                              ((g$b$7779$13P8LC)
                               ((case-lambda
                                  ((g$type$7780$13P8LC)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7778$13P8LC)
                                           (g$raise-unbound-error$7097$13P8LC
                                             g$id$7777$13P8LC)
                                           (void))
                                         (if (not (if (eq? g$type$7780$13P8LC
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7096$13P8LC
                                                          g$b$7779$13P8LC)))
                                                    '#f))
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"not a record type"
                                             g$e$7771$13P8LC)
                                           (void))
                                         (g$chi-expr$7374$13P8LC
                                           (car (g$binding-value$7096$13P8LC
                                                  g$b$7779$13P8LC))
                                           g$r$7772$13P8LC
                                           g$mr$7773$13P8LC)))))))
                                (g$binding-type$7095$13P8LC g$b$7779$13P8LC))))
                            (g$label->binding$7093$13P8LC
                              g$lab$7778$13P8LC
                              g$r$7772$13P8LC))))
                        (g$id->label$7091$13P8LC g$id$7777$13P8LC))))
                    g$ls/false$7775$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7774$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$7774$13P8LC '(_ any)))))
         g$e$7771$13P8LC))))
   (g$record-constructor-descriptor-transformer$7311$13P8LC
     g$record-constructor-descriptor-transformer$10747$13P8LC
     (case-lambda
       ((g$e$7781$13P8LC g$r$7782$13P8LC g$mr$7783$13P8LC)
        ((case-lambda
           ((g$t$7784$13P8LC)
            ((case-lambda
               ((g$ls/false$7785$13P8LC)
                (if (if g$ls/false$7785$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7786$13P8LC)
                             (g$id?$7078$13P8LC g$id$7786$13P8LC)))
                          g$ls/false$7785$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7787$13P8LC)
                       ((case-lambda
                          ((g$lab$7788$13P8LC)
                           ((case-lambda
                              ((g$b$7789$13P8LC)
                               ((case-lambda
                                  ((g$type$7790$13P8LC)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7788$13P8LC)
                                           (g$raise-unbound-error$7097$13P8LC
                                             g$id$7787$13P8LC)
                                           (void))
                                         (if (not (if (eq? g$type$7790$13P8LC
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7096$13P8LC
                                                          g$b$7789$13P8LC)))
                                                    '#f))
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid type"
                                             g$e$7781$13P8LC)
                                           (void))
                                         (g$chi-expr$7374$13P8LC
                                           (g$cadr$4887$13P8LC
                                             (g$binding-value$7096$13P8LC
                                               g$b$7789$13P8LC))
                                           g$r$7782$13P8LC
                                           g$mr$7783$13P8LC)))))))
                                (g$binding-type$7095$13P8LC g$b$7789$13P8LC))))
                            (g$label->binding$7093$13P8LC
                              g$lab$7788$13P8LC
                              g$r$7782$13P8LC))))
                        (g$id->label$7091$13P8LC g$id$7787$13P8LC))))
                    g$ls/false$7785$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7784$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$7784$13P8LC '(_ any)))))
         g$e$7781$13P8LC))))
   (g$when-macro$7312$13P8LC
     g$when-macro$10748$13P8LC
     (case-lambda
       ((g$e$7791$13P8LC)
        ((case-lambda
           ((g$t$7792$13P8LC)
            ((case-lambda
               ((g$ls/false$7793$13P8LC)
                (if g$ls/false$7793$13P8LC
                  (apply
                    (case-lambda
                      ((g$test$7794$13P8LC g$e$7795$13P8LC g$e*$7796$13P8LC)
                       (g$bless$7319$13P8LC
                         (list
                           'if
                           g$test$7794$13P8LC
                           (cons
                             'begin
                             (cons g$e$7795$13P8LC g$e*$7796$13P8LC))))))
                    g$ls/false$7793$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7792$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$7792$13P8LC
               '(_ any any . each-any)))))
         g$e$7791$13P8LC))))
   (g$unless-macro$7313$13P8LC
     g$unless-macro$10749$13P8LC
     (case-lambda
       ((g$e$7797$13P8LC)
        ((case-lambda
           ((g$t$7798$13P8LC)
            ((case-lambda
               ((g$ls/false$7799$13P8LC)
                (if g$ls/false$7799$13P8LC
                  (apply
                    (case-lambda
                      ((g$test$7800$13P8LC g$e$7801$13P8LC g$e*$7802$13P8LC)
                       (g$bless$7319$13P8LC
                         (list
                           'if
                           (list 'not g$test$7800$13P8LC)
                           (cons
                             'begin
                             (cons g$e$7801$13P8LC g$e*$7802$13P8LC))))))
                    g$ls/false$7799$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7798$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$7798$13P8LC
               '(_ any any . each-any)))))
         g$e$7797$13P8LC))))
   (g$if-transformer$7314$13P8LC
     g$if-transformer$10750$13P8LC
     (case-lambda
       ((g$e$7803$13P8LC g$r$7804$13P8LC g$mr$7805$13P8LC)
        ((case-lambda
           ((g$t$7806$13P8LC)
            ((case-lambda
               ((g$ls/false$7807$13P8LC)
                (if g$ls/false$7807$13P8LC
                  (apply
                    (case-lambda
                      ((g$e0$7808$13P8LC g$e1$7809$13P8LC g$e2$7810$13P8LC)
                       (list
                         'if
                         (g$chi-expr$7374$13P8LC
                           g$e0$7808$13P8LC
                           g$r$7804$13P8LC
                           g$mr$7805$13P8LC)
                         (g$chi-expr$7374$13P8LC
                           g$e1$7809$13P8LC
                           g$r$7804$13P8LC
                           g$mr$7805$13P8LC)
                         (g$chi-expr$7374$13P8LC
                           g$e2$7810$13P8LC
                           g$r$7804$13P8LC
                           g$mr$7805$13P8LC))))
                    g$ls/false$7807$13P8LC)
                  ((case-lambda
                     ((g$t$7811$13P8LC)
                      ((case-lambda
                         ((g$ls/false$7812$13P8LC)
                          (if g$ls/false$7812$13P8LC
                            (apply
                              (case-lambda
                                ((g$e0$7813$13P8LC g$e1$7814$13P8LC)
                                 (list
                                   'if
                                   (g$chi-expr$7374$13P8LC
                                     g$e0$7813$13P8LC
                                     g$r$7804$13P8LC
                                     g$mr$7805$13P8LC)
                                   (g$chi-expr$7374$13P8LC
                                     g$e1$7814$13P8LC
                                     g$r$7804$13P8LC
                                     g$mr$7805$13P8LC)
                                   (g$build-void$7013$13P8LC))))
                              g$ls/false$7812$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$7811$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$7811$13P8LC
                         '(_ any any)))))
                   g$t$7806$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$7806$13P8LC '(_ any any any)))))
         g$e$7803$13P8LC))))
   (g$case-macro$7315$13P8LC
     g$case-macro$10751$13P8LC
     (case-lambda
       ((g$e$7815$13P8LC)
        (letrec* ((g$build-last$7816$13P8LC
                    (case-lambda
                      ((g$cls$7836$13P8LC)
                       ((case-lambda
                          ((g$t$7837$13P8LC)
                           ((case-lambda
                              ((g$ls/false$7838$13P8LC)
                               (if g$ls/false$7838$13P8LC
                                 (apply
                                   (case-lambda
                                     ((g$e$7839$13P8LC g$e*$7840$13P8LC)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$7839$13P8LC
                                          g$e*$7840$13P8LC))))
                                   g$ls/false$7838$13P8LC)
                                 ((case-lambda
                                    ((g$t$7841$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$7842$13P8LC)
                                         (if g$ls/false$7842$13P8LC
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$7817$13P8LC
                                                  g$cls$7836$13P8LC
                                                  '(if #f #f))))
                                             g$ls/false$7842$13P8LC)
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid syntax"
                                             g$t$7841$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$7841$13P8LC
                                        '_))))
                                  g$t$7837$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$7837$13P8LC
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$7836$13P8LC))))
                  (g$build-one$7817$13P8LC
                    (case-lambda
                      ((g$cls$7829$13P8LC g$k$7830$13P8LC)
                       ((case-lambda
                          ((g$t$7831$13P8LC)
                           ((case-lambda
                              ((g$ls/false$7832$13P8LC)
                               (if g$ls/false$7832$13P8LC
                                 (apply
                                   (case-lambda
                                     ((g$d*$7833$13P8LC
                                        g$e$7834$13P8LC
                                        g$e*$7835$13P8LC)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$7833$13P8LC))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$7834$13P8LC
                                            g$e*$7835$13P8LC))
                                        g$k$7830$13P8LC)))
                                   g$ls/false$7832$13P8LC)
                                 (g$syntax-violation$7465$13P8LC
                                   '#f
                                   '"invalid syntax"
                                   g$t$7831$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$7831$13P8LC
                              '(each-any any . each-any)))))
                        g$cls$7829$13P8LC)))))
          ((case-lambda
             ((g$t$7818$13P8LC)
              ((case-lambda
                 ((g$ls/false$7819$13P8LC)
                  (if g$ls/false$7819$13P8LC
                    (apply
                      (case-lambda
                        ((g$expr$7820$13P8LC)
                         (g$bless$7319$13P8LC
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$7820$13P8LC))
                               '((if #f #f)))))))
                      g$ls/false$7819$13P8LC)
                    ((case-lambda
                       ((g$t$7821$13P8LC)
                        ((case-lambda
                           ((g$ls/false$7822$13P8LC)
                            (if g$ls/false$7822$13P8LC
                              (apply
                                (case-lambda
                                  ((g$expr$7823$13P8LC
                                     g$cls$7824$13P8LC
                                     g$cls*$7825$13P8LC)
                                   (g$bless$7319$13P8LC
                                     (list
                                       'let
                                       (list (list 't g$expr$7823$13P8LC))
                                       ((letrec ((g$f$7826$13P8LC
                                                   (case-lambda
                                                     ((g$cls$7827$13P8LC
                                                        g$cls*$7828$13P8LC)
                                                      (if (null?
                                                            g$cls*$7828$13P8LC)
                                                        (g$build-last$7816$13P8LC
                                                          g$cls$7827$13P8LC)
                                                        (g$build-one$7817$13P8LC
                                                          g$cls$7827$13P8LC
                                                          (g$f$7826$13P8LC
                                                            (car g$cls*$7828$13P8LC)
                                                            (cdr g$cls*$7828$13P8LC))))))))
                                          g$f$7826$13P8LC)
                                        g$cls$7824$13P8LC
                                        g$cls*$7825$13P8LC)))))
                                g$ls/false$7822$13P8LC)
                              (g$syntax-violation$7465$13P8LC
                                '#f
                                '"invalid syntax"
                                g$t$7821$13P8LC))))
                         (g$syntax-dispatch$7356$13P8LC
                           g$t$7821$13P8LC
                           '(_ any any . each-any)))))
                     g$t$7818$13P8LC))))
               (g$syntax-dispatch$7356$13P8LC g$t$7818$13P8LC '(_ any)))))
           g$e$7815$13P8LC)))))
   (g$quote-transformer$7316$13P8LC
     g$quote-transformer$10752$13P8LC
     (case-lambda
       ((g$e$7843$13P8LC g$r$7844$13P8LC g$mr$7845$13P8LC)
        ((case-lambda
           ((g$t$7846$13P8LC)
            ((case-lambda
               ((g$ls/false$7847$13P8LC)
                (if g$ls/false$7847$13P8LC
                  (apply
                    (case-lambda
                      ((g$datum$7848$13P8LC)
                       (list
                         'quote
                         (g$stx->datum$7089$13P8LC g$datum$7848$13P8LC))))
                    g$ls/false$7847$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7846$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$7846$13P8LC '(_ any)))))
         g$e$7843$13P8LC))))
   (g$case-lambda-transformer$7317$13P8LC
     g$case-lambda-transformer$10753$13P8LC
     (case-lambda
       ((g$e$7849$13P8LC g$r$7850$13P8LC g$mr$7851$13P8LC)
        ((case-lambda
           ((g$t$7852$13P8LC)
            ((case-lambda
               ((g$ls/false$7853$13P8LC)
                (if g$ls/false$7853$13P8LC
                  (apply
                    (case-lambda
                      ((g$fmls*$7854$13P8LC g$b*$7855$13P8LC g$b**$7856$13P8LC)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7378$13P8LC
                              g$e$7849$13P8LC
                              g$fmls*$7854$13P8LC
                              (map cons g$b*$7855$13P8LC g$b**$7856$13P8LC)
                              g$r$7850$13P8LC
                              g$mr$7851$13P8LC)))
                         (case-lambda
                           ((g$fmls*$7859$13P8LC g$body*$7860$13P8LC)
                            ((case-lambda
                               ((g$body*$7861$13P8LC g$fmls*$7862$13P8LC)
                                (g$build-case-lambda$7010$13P8LC
                                  '#f
                                  g$fmls*$7862$13P8LC
                                  g$body*$7861$13P8LC)))
                             g$body*$7860$13P8LC
                             g$fmls*$7859$13P8LC))))))
                    g$ls/false$7853$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7852$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$7852$13P8LC
               '(_ . #(each (any any . each-any)))))))
         g$e$7849$13P8LC))))
   (g$lambda-transformer$7318$13P8LC
     g$lambda-transformer$10754$13P8LC
     (case-lambda
       ((g$e$7863$13P8LC g$r$7864$13P8LC g$mr$7865$13P8LC)
        ((case-lambda
           ((g$t$7866$13P8LC)
            ((case-lambda
               ((g$ls/false$7867$13P8LC)
                (if g$ls/false$7867$13P8LC
                  (apply
                    (case-lambda
                      ((g$fmls$7868$13P8LC g$b$7869$13P8LC g$b*$7870$13P8LC)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7377$13P8LC
                              g$e$7863$13P8LC
                              g$fmls$7868$13P8LC
                              (cons g$b$7869$13P8LC g$b*$7870$13P8LC)
                              g$r$7864$13P8LC
                              g$mr$7865$13P8LC)))
                         (case-lambda
                           ((g$fmls$7873$13P8LC g$body$7874$13P8LC)
                            ((case-lambda
                               ((g$body$7875$13P8LC g$fmls$7876$13P8LC)
                                (g$build-lambda$7009$13P8LC
                                  '#f
                                  g$fmls$7876$13P8LC
                                  g$body$7875$13P8LC)))
                             g$body$7874$13P8LC
                             g$fmls$7873$13P8LC))))))
                    g$ls/false$7867$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7866$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$7866$13P8LC
               '(_ any any . each-any)))))
         g$e$7863$13P8LC))))
   (g$bless$7319$13P8LC
     g$bless$10755$13P8LC
     (case-lambda
       ((g$x$7877$13P8LC)
        (g$mkstx$7066$13P8LC
          ((letrec ((g$f$7878$13P8LC
                      (case-lambda
                        ((g$x$7879$13P8LC)
                         (if (g$stx?$7050$13P8LC g$x$7879$13P8LC)
                           g$x$7879$13P8LC
                           (if (pair? g$x$7879$13P8LC)
                             (cons
                               (g$f$7878$13P8LC (car g$x$7879$13P8LC))
                               (g$f$7878$13P8LC (cdr g$x$7879$13P8LC)))
                             (if (symbol? g$x$7879$13P8LC)
                               (g$scheme-stx$7299$13P8LC g$x$7879$13P8LC)
                               (if (vector? g$x$7879$13P8LC)
                                 (vector-map g$f$7878$13P8LC g$x$7879$13P8LC)
                                 g$x$7879$13P8LC))))))))
             g$f$7878$13P8LC)
           g$x$7877$13P8LC)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7320$13P8LC
     g$with-syntax-macro$10756$13P8LC
     (case-lambda
       ((g$e$7880$13P8LC)
        ((case-lambda
           ((g$t$7881$13P8LC)
            ((case-lambda
               ((g$ls/false$7882$13P8LC)
                (if g$ls/false$7882$13P8LC
                  (apply
                    (case-lambda
                      ((g$pat*$7883$13P8LC
                         g$expr*$7884$13P8LC
                         g$b$7885$13P8LC
                         g$b*$7886$13P8LC)
                       ((case-lambda
                          ((g$idn*$7887$13P8LC)
                           (begin
                             (g$verify-formals$7376$13P8LC
                               (map car g$idn*$7887$13P8LC)
                               g$e$7880$13P8LC)
                             ((case-lambda
                                ((g$t*$7888$13P8LC)
                                 (g$bless$7319$13P8LC
                                   (list
                                     'let
                                     (map list
                                          g$t*$7888$13P8LC
                                          g$expr*$7884$13P8LC)
                                     ((letrec ((g$f$7889$13P8LC
                                                 (case-lambda
                                                   ((g$pat*$7890$13P8LC
                                                      g$t*$7891$13P8LC)
                                                    (if (null?
                                                          g$pat*$7890$13P8LC)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$7885$13P8LC
                                                            g$b*$7886$13P8LC)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$7891$13P8LC)
                                                        '()
                                                        (list
                                                          (car g$pat*$7890$13P8LC)
                                                          (g$f$7889$13P8LC
                                                            (cdr g$pat*$7890$13P8LC)
                                                            (cdr g$t*$7891$13P8LC)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$7890$13P8LC))
                                                            (car g$t*$7891$13P8LC)))))))))
                                        g$f$7889$13P8LC)
                                      g$pat*$7883$13P8LC
                                      g$t*$7888$13P8LC)))))
                              (g$generate-temporaries$7455$13P8LC
                                g$expr*$7884$13P8LC)))))
                        ((letrec ((g$f$7892$13P8LC
                                    (case-lambda
                                      ((g$pat*$7893$13P8LC)
                                       (if (null? g$pat*$7893$13P8LC)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7355$13P8LC
                                                (car g$pat*$7893$13P8LC)
                                                '())))
                                           (case-lambda
                                             ((g$pat$7896$13P8LC
                                                g$idn*$7897$13P8LC)
                                              ((case-lambda
                                                 ((g$idn*$7898$13P8LC
                                                    g$pat$7899$13P8LC)
                                                  (append
                                                    g$idn*$7898$13P8LC
                                                    (g$f$7892$13P8LC
                                                      (cdr g$pat*$7893$13P8LC)))))
                                               g$idn*$7897$13P8LC
                                               g$pat$7896$13P8LC)))))))))
                           g$f$7892$13P8LC)
                         g$pat*$7883$13P8LC))))
                    g$ls/false$7882$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$7881$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$7881$13P8LC
               '(_ #(each (any any)) any . each-any)))))
         g$e$7880$13P8LC))))
   (g$invalid-fmls-error$7321$13P8LC
     g$invalid-fmls-error$10757$13P8LC
     (case-lambda
       ((g$stx$7900$13P8LC g$fmls$7901$13P8LC)
        ((case-lambda
           ((g$t$7902$13P8LC)
            ((case-lambda
               ((g$ls/false$7903$13P8LC)
                (if g$ls/false$7903$13P8LC
                  (apply
                    (case-lambda
                      ((g$id*$7904$13P8LC g$last$7905$13P8LC)
                       ((letrec ((g$f$7906$13P8LC
                                   (case-lambda
                                     ((g$id*$7907$13P8LC)
                                      (if (null? g$id*$7907$13P8LC)
                                        (values)
                                        (if (not (g$id?$7078$13P8LC
                                                   (car g$id*$7907$13P8LC)))
                                          (g$syntax-violation$7465$13P8LC
                                            '#f
                                            '"not an identifier"
                                            g$stx$7900$13P8LC
                                            (car g$id*$7907$13P8LC))
                                          (begin
                                            (g$f$7906$13P8LC
                                              (cdr g$id*$7907$13P8LC))
                                            (if (g$bound-id-member?$7085$13P8LC
                                                  (car g$id*$7907$13P8LC)
                                                  (cdr g$id*$7907$13P8LC))
                                              (g$syntax-violation$7465$13P8LC
                                                '#f
                                                '"duplicate binding"
                                                g$stx$7900$13P8LC
                                                (car g$id*$7907$13P8LC))
                                              (void)))))))))
                          g$f$7906$13P8LC)
                        (if (g$id?$7078$13P8LC g$last$7905$13P8LC)
                          (cons g$last$7905$13P8LC g$id*$7904$13P8LC)
                          (if (g$syntax-null?$7073$13P8LC g$last$7905$13P8LC)
                            g$id*$7904$13P8LC
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"not an identifier"
                              g$stx$7900$13P8LC
                              g$last$7905$13P8LC))))))
                    g$ls/false$7903$13P8LC)
                  ((case-lambda
                     ((g$t$7908$13P8LC)
                      ((case-lambda
                         ((g$ls/false$7909$13P8LC)
                          (if g$ls/false$7909$13P8LC
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7465$13P8LC
                                   '#f
                                   '"malformed binding form"
                                   g$stx$7900$13P8LC
                                   g$fmls$7901$13P8LC)))
                              g$ls/false$7909$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$7908$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC g$t$7908$13P8LC '_))))
                   g$t$7902$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$7902$13P8LC
               '#(each+ any () any)))))
         g$fmls$7901$13P8LC))))
   (g$let-macro$7322$13P8LC
     g$let-macro$10758$13P8LC
     (case-lambda
       ((g$stx$7910$13P8LC)
        ((case-lambda
           ((g$t$7911$13P8LC)
            ((case-lambda
               ((g$ls/false$7912$13P8LC)
                (if g$ls/false$7912$13P8LC
                  (apply
                    (case-lambda
                      ((g$lhs*$7913$13P8LC
                         g$rhs*$7914$13P8LC
                         g$b$7915$13P8LC
                         g$b*$7916$13P8LC)
                       (if (g$valid-bound-ids?$7083$13P8LC g$lhs*$7913$13P8LC)
                         (g$bless$7319$13P8LC
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$7913$13P8LC
                                 (cons g$b$7915$13P8LC g$b*$7916$13P8LC)))
                             g$rhs*$7914$13P8LC))
                         (g$invalid-fmls-error$7321$13P8LC
                           g$stx$7910$13P8LC
                           g$lhs*$7913$13P8LC))))
                    g$ls/false$7912$13P8LC)
                  ((case-lambda
                     ((g$t$7917$13P8LC)
                      ((case-lambda
                         ((g$ls/false$7918$13P8LC)
                          (if (if g$ls/false$7918$13P8LC
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$7919$13P8LC
                                         g$lhs*$7920$13P8LC
                                         g$rhs*$7921$13P8LC
                                         g$b$7922$13P8LC
                                         g$b*$7923$13P8LC)
                                       (g$id?$7078$13P8LC g$f$7919$13P8LC)))
                                    g$ls/false$7918$13P8LC))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$7924$13P8LC
                                   g$lhs*$7925$13P8LC
                                   g$rhs*$7926$13P8LC
                                   g$b$7927$13P8LC
                                   g$b*$7928$13P8LC)
                                 (if (g$valid-bound-ids?$7083$13P8LC
                                       g$lhs*$7925$13P8LC)
                                   (g$bless$7319$13P8LC
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$7924$13P8LC
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$7925$13P8LC
                                                 (cons
                                                   g$b$7927$13P8LC
                                                   g$b*$7928$13P8LC)))))
                                         g$f$7924$13P8LC)
                                       g$rhs*$7926$13P8LC))
                                   (g$invalid-fmls-error$7321$13P8LC
                                     g$stx$7910$13P8LC
                                     g$lhs*$7925$13P8LC))))
                              g$ls/false$7918$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$7917$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$7917$13P8LC
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$7911$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$7911$13P8LC
               '(_ #(each (any any)) any . each-any)))))
         g$stx$7910$13P8LC))))
   (g$let-values-macro$7323$13P8LC
     g$let-values-macro$10759$13P8LC
     (case-lambda
       ((g$stx$7929$13P8LC)
        (letrec* ((g$rename$7930$13P8LC
                    (case-lambda
                      ((g$x$7981$13P8LC g$old*$7982$13P8LC g$new*$7983$13P8LC)
                       (begin
                         (if (not (g$id?$7078$13P8LC g$x$7981$13P8LC))
                           (g$syntax-violation$7465$13P8LC
                             '#f
                             '"not an indentifier"
                             g$stx$7929$13P8LC
                             g$x$7981$13P8LC)
                           (void))
                         (if (g$bound-id-member?$7085$13P8LC
                               g$x$7981$13P8LC
                               g$old*$7982$13P8LC)
                           (g$syntax-violation$7465$13P8LC
                             '#f
                             '"duplicate binding"
                             g$stx$7929$13P8LC
                             g$x$7981$13P8LC)
                           (void))
                         ((case-lambda
                            ((g$y$7984$13P8LC)
                             (values
                               g$y$7984$13P8LC
                               (cons g$x$7981$13P8LC g$old*$7982$13P8LC)
                               (cons g$y$7984$13P8LC g$new*$7983$13P8LC))))
                          (gensym
                            (g$syntax->datum$7468$13P8LC g$x$7981$13P8LC)))))))
                  (g$rename*$7931$13P8LC
                    (case-lambda
                      ((g$x*$7972$13P8LC g$old*$7973$13P8LC g$new*$7974$13P8LC)
                       (if (null? g$x*$7972$13P8LC)
                         (values '() g$old*$7973$13P8LC g$new*$7974$13P8LC)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$7930$13P8LC
                                (car g$x*$7972$13P8LC)
                                g$old*$7973$13P8LC
                                g$new*$7974$13P8LC)))
                           (case-lambda
                             ((g$x$7975$13P8LC
                                g$old*$7976$13P8LC
                                g$new*$7977$13P8LC)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$7931$13P8LC
                                     (cdr g$x*$7972$13P8LC)
                                     g$old*$7976$13P8LC
                                     g$new*$7977$13P8LC)))
                                (case-lambda
                                  ((g$x*$7978$13P8LC
                                     g$old*$7979$13P8LC
                                     g$new*$7980$13P8LC)
                                   (values
                                     (cons g$x$7975$13P8LC g$x*$7978$13P8LC)
                                     g$old*$7979$13P8LC
                                     g$new*$7980$13P8LC))))))))))))
          ((case-lambda
             ((g$t$7932$13P8LC)
              ((case-lambda
                 ((g$ls/false$7933$13P8LC)
                  (if g$ls/false$7933$13P8LC
                    (apply
                      (case-lambda
                        ((g$b$7934$13P8LC g$b*$7935$13P8LC)
                         (g$cons*$5358$13P8LC
                           (g$bless$7319$13P8LC 'let)
                           '()
                           g$b$7934$13P8LC
                           g$b*$7935$13P8LC)))
                      g$ls/false$7933$13P8LC)
                    ((case-lambda
                       ((g$t$7936$13P8LC)
                        ((case-lambda
                           ((g$ls/false$7937$13P8LC)
                            (if g$ls/false$7937$13P8LC
                              (apply
                                (case-lambda
                                  ((g$lhs*$7938$13P8LC
                                     g$rhs*$7939$13P8LC
                                     g$b$7940$13P8LC
                                     g$b*$7941$13P8LC)
                                   (g$bless$7319$13P8LC
                                     ((letrec ((g$f$7942$13P8LC
                                                 (case-lambda
                                                   ((g$lhs*$7943$13P8LC
                                                      g$rhs*$7944$13P8LC
                                                      g$old*$7945$13P8LC
                                                      g$new*$7946$13P8LC)
                                                    (if (null?
                                                          g$lhs*$7943$13P8LC)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$7945$13P8LC
                                                               g$new*$7946$13P8LC)
                                                          (cons
                                                            g$b$7940$13P8LC
                                                            g$b*$7941$13P8LC)))
                                                      ((case-lambda
                                                         ((g$t$7947$13P8LC)
                                                          ((case-lambda
                                                             ((g$ls/false$7948$13P8LC)
                                                              (if g$ls/false$7948$13P8LC
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$7949$13P8LC)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$7931$13P8LC
                                                                            g$x*$7949$13P8LC
                                                                            g$old*$7945$13P8LC
                                                                            g$new*$7946$13P8LC)))
                                                                       (case-lambda
                                                                         ((g$y*$7953$13P8LC
                                                                            g$old*$7954$13P8LC
                                                                            g$new*$7955$13P8LC)
                                                                          ((case-lambda
                                                                             ((g$new*$7956$13P8LC
                                                                                g$old*$7957$13P8LC
                                                                                g$y*$7958$13P8LC)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$7944$13P8LC))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$7958$13P8LC
                                                                                  (g$f$7942$13P8LC
                                                                                    (cdr g$lhs*$7943$13P8LC)
                                                                                    (cdr g$rhs*$7944$13P8LC)
                                                                                    g$old*$7957$13P8LC
                                                                                    g$new*$7956$13P8LC)))))
                                                                           g$new*$7955$13P8LC
                                                                           g$old*$7954$13P8LC
                                                                           g$y*$7953$13P8LC))))))
                                                                  g$ls/false$7948$13P8LC)
                                                                ((case-lambda
                                                                   ((g$t$7959$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$7960$13P8LC)
                                                                        (if g$ls/false$7960$13P8LC
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$7961$13P8LC
                                                                                 g$x$7962$13P8LC)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$7930$13P8LC
                                                                                      g$x$7962$13P8LC
                                                                                      g$old*$7945$13P8LC
                                                                                      g$new*$7946$13P8LC)))
                                                                                 (case-lambda
                                                                                   ((g$y$7963$13P8LC
                                                                                      g$old*$7964$13P8LC
                                                                                      g$new*$7965$13P8LC)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$7931$13P8LC
                                                                                           g$x*$7961$13P8LC
                                                                                           g$old*$7964$13P8LC
                                                                                           g$new*$7965$13P8LC)))
                                                                                      (case-lambda
                                                                                        ((g$y*$7966$13P8LC
                                                                                           g$old*$7967$13P8LC
                                                                                           g$new*$7968$13P8LC)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$7944$13P8LC))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$7966$13P8LC
                                                                                               g$y$7963$13P8LC)
                                                                                             (g$f$7942$13P8LC
                                                                                               (cdr g$lhs*$7943$13P8LC)
                                                                                               (cdr g$rhs*$7944$13P8LC)
                                                                                               g$old*$7967$13P8LC
                                                                                               g$new*$7968$13P8LC)))))))))))
                                                                            g$ls/false$7960$13P8LC)
                                                                          ((case-lambda
                                                                             ((g$t$7969$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$7970$13P8LC)
                                                                                  (if g$ls/false$7970$13P8LC
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$7971$13P8LC)
                                                                                         (g$syntax-violation$7465$13P8LC
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$7929$13P8LC
                                                                                           g$others$7971$13P8LC)))
                                                                                      g$ls/false$7970$13P8LC)
                                                                                    (g$syntax-violation$7465$13P8LC
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$7969$13P8LC))))
                                                                               (g$syntax-dispatch$7356$13P8LC
                                                                                 g$t$7969$13P8LC
                                                                                 'any))))
                                                                           g$t$7959$13P8LC))))
                                                                     (g$syntax-dispatch$7356$13P8LC
                                                                       g$t$7959$13P8LC
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$7947$13P8LC))))
                                                           (g$syntax-dispatch$7356$13P8LC
                                                             g$t$7947$13P8LC
                                                             'each-any))))
                                                       (car g$lhs*$7943$13P8LC)))))))
                                        g$f$7942$13P8LC)
                                      g$lhs*$7938$13P8LC
                                      g$rhs*$7939$13P8LC
                                      '()
                                      '()))))
                                g$ls/false$7937$13P8LC)
                              (g$syntax-violation$7465$13P8LC
                                '#f
                                '"invalid syntax"
                                g$t$7936$13P8LC))))
                         (g$syntax-dispatch$7356$13P8LC
                           g$t$7936$13P8LC
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$7932$13P8LC))))
               (g$syntax-dispatch$7356$13P8LC
                 g$t$7932$13P8LC
                 '(_ () any . each-any)))))
           g$stx$7929$13P8LC)))))
   (g$let*-values-macro$7324$13P8LC
     g$let*-values-macro$10760$13P8LC
     (case-lambda
       ((g$stx$7985$13P8LC)
        (letrec* ((g$check$7986$13P8LC
                    (case-lambda
                      ((g$x*$8010$13P8LC)
                       (if (not (null? g$x*$8010$13P8LC))
                         ((case-lambda
                            ((g$x$8011$13P8LC)
                             (begin
                               (if (not (g$id?$7078$13P8LC g$x$8011$13P8LC))
                                 (g$syntax-violation$7465$13P8LC
                                   '#f
                                   '"not an identifier"
                                   g$stx$7985$13P8LC
                                   g$x$8011$13P8LC)
                                 (void))
                               (g$check$7986$13P8LC (cdr g$x*$8010$13P8LC))
                               (if (g$bound-id-member?$7085$13P8LC
                                     g$x$8011$13P8LC
                                     (cdr g$x*$8010$13P8LC))
                                 (g$syntax-violation$7465$13P8LC
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$7985$13P8LC
                                   g$x$8011$13P8LC)
                                 (void)))))
                          (car g$x*$8010$13P8LC))
                         (void))))))
          ((case-lambda
             ((g$t$7987$13P8LC)
              ((case-lambda
                 ((g$ls/false$7988$13P8LC)
                  (if g$ls/false$7988$13P8LC
                    (apply
                      (case-lambda
                        ((g$b$7989$13P8LC g$b*$7990$13P8LC)
                         (g$cons*$5358$13P8LC
                           (g$bless$7319$13P8LC 'let)
                           '()
                           g$b$7989$13P8LC
                           g$b*$7990$13P8LC)))
                      g$ls/false$7988$13P8LC)
                    ((case-lambda
                       ((g$t$7991$13P8LC)
                        ((case-lambda
                           ((g$ls/false$7992$13P8LC)
                            (if g$ls/false$7992$13P8LC
                              (apply
                                (case-lambda
                                  ((g$lhs*$7993$13P8LC
                                     g$rhs*$7994$13P8LC
                                     g$b$7995$13P8LC
                                     g$b*$7996$13P8LC)
                                   (g$bless$7319$13P8LC
                                     ((letrec ((g$f$7997$13P8LC
                                                 (case-lambda
                                                   ((g$lhs*$7998$13P8LC
                                                      g$rhs*$7999$13P8LC)
                                                    (if (null?
                                                          g$lhs*$7998$13P8LC)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$7995$13P8LC
                                                          g$b*$7996$13P8LC))
                                                      ((case-lambda
                                                         ((g$t$8000$13P8LC)
                                                          ((case-lambda
                                                             ((g$ls/false$8001$13P8LC)
                                                              (if g$ls/false$8001$13P8LC
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8002$13P8LC)
                                                                     (begin
                                                                       (g$check$7986$13P8LC
                                                                         g$x*$8002$13P8LC)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$7999$13P8LC))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8002$13P8LC
                                                                           (g$f$7997$13P8LC
                                                                             (cdr g$lhs*$7998$13P8LC)
                                                                             (cdr g$rhs*$7999$13P8LC)))))))
                                                                  g$ls/false$8001$13P8LC)
                                                                ((case-lambda
                                                                   ((g$t$8003$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8004$13P8LC)
                                                                        (if g$ls/false$8004$13P8LC
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8005$13P8LC
                                                                                 g$x$8006$13P8LC)
                                                                               (begin
                                                                                 (g$check$7986$13P8LC
                                                                                   (cons
                                                                                     g$x$8006$13P8LC
                                                                                     g$x*$8005$13P8LC))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$7999$13P8LC))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8005$13P8LC
                                                                                       g$x$8006$13P8LC)
                                                                                     (g$f$7997$13P8LC
                                                                                       (cdr g$lhs*$7998$13P8LC)
                                                                                       (cdr g$rhs*$7999$13P8LC)))))))
                                                                            g$ls/false$8004$13P8LC)
                                                                          ((case-lambda
                                                                             ((g$t$8007$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8008$13P8LC)
                                                                                  (if g$ls/false$8008$13P8LC
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8009$13P8LC)
                                                                                         (g$syntax-violation$7465$13P8LC
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$7985$13P8LC
                                                                                           g$others$8009$13P8LC)))
                                                                                      g$ls/false$8008$13P8LC)
                                                                                    (g$syntax-violation$7465$13P8LC
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8007$13P8LC))))
                                                                               (g$syntax-dispatch$7356$13P8LC
                                                                                 g$t$8007$13P8LC
                                                                                 'any))))
                                                                           g$t$8003$13P8LC))))
                                                                     (g$syntax-dispatch$7356$13P8LC
                                                                       g$t$8003$13P8LC
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8000$13P8LC))))
                                                           (g$syntax-dispatch$7356$13P8LC
                                                             g$t$8000$13P8LC
                                                             'each-any))))
                                                       (car g$lhs*$7998$13P8LC)))))))
                                        g$f$7997$13P8LC)
                                      g$lhs*$7993$13P8LC
                                      g$rhs*$7994$13P8LC))))
                                g$ls/false$7992$13P8LC)
                              (g$syntax-violation$7465$13P8LC
                                '#f
                                '"invalid syntax"
                                g$t$7991$13P8LC))))
                         (g$syntax-dispatch$7356$13P8LC
                           g$t$7991$13P8LC
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$7987$13P8LC))))
               (g$syntax-dispatch$7356$13P8LC
                 g$t$7987$13P8LC
                 '(_ () any . each-any)))))
           g$stx$7985$13P8LC)))))
   (g$trace-lambda-macro$7325$13P8LC
     g$trace-lambda-macro$10761$13P8LC
     (case-lambda
       ((g$stx$8012$13P8LC)
        ((case-lambda
           ((g$t$8013$13P8LC)
            ((case-lambda
               ((g$ls/false$8014$13P8LC)
                (if g$ls/false$8014$13P8LC
                  (apply
                    (case-lambda
                      ((g$who$8015$13P8LC
                         g$fmls$8016$13P8LC
                         g$b$8017$13P8LC
                         g$b*$8018$13P8LC)
                       (if (g$valid-bound-ids?$7083$13P8LC g$fmls$8016$13P8LC)
                         (g$bless$7319$13P8LC
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8015$13P8LC)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8016$13P8LC
                                 (cons g$b$8017$13P8LC g$b*$8018$13P8LC)))))
                         (g$invalid-fmls-error$7321$13P8LC
                           g$stx$8012$13P8LC
                           g$fmls$8016$13P8LC))))
                    g$ls/false$8014$13P8LC)
                  ((case-lambda
                     ((g$t$8019$13P8LC)
                      ((case-lambda
                         ((g$ls/false$8020$13P8LC)
                          (if g$ls/false$8020$13P8LC
                            (apply
                              (case-lambda
                                ((g$who$8021$13P8LC
                                   g$fmls$8022$13P8LC
                                   g$last$8023$13P8LC
                                   g$b$8024$13P8LC
                                   g$b*$8025$13P8LC)
                                 (if (g$valid-bound-ids?$7083$13P8LC
                                       (cons
                                         g$last$8023$13P8LC
                                         g$fmls$8022$13P8LC))
                                   (g$bless$7319$13P8LC
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8021$13P8LC)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8022$13P8LC
                                             g$last$8023$13P8LC)
                                           (cons
                                             g$b$8024$13P8LC
                                             g$b*$8025$13P8LC)))))
                                   (g$invalid-fmls-error$7321$13P8LC
                                     g$stx$8012$13P8LC
                                     (append
                                       g$fmls$8022$13P8LC
                                       g$last$8023$13P8LC)))))
                              g$ls/false$8020$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$8019$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$8019$13P8LC
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8013$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$8013$13P8LC
               '(_ any each-any any . each-any)))))
         g$stx$8012$13P8LC))))
   (g$trace-define-macro$7326$13P8LC
     g$trace-define-macro$10762$13P8LC
     (case-lambda
       ((g$stx$8026$13P8LC)
        ((case-lambda
           ((g$t$8027$13P8LC)
            ((case-lambda
               ((g$ls/false$8028$13P8LC)
                (if g$ls/false$8028$13P8LC
                  (apply
                    (case-lambda
                      ((g$who$8029$13P8LC
                         g$fmls$8030$13P8LC
                         g$b$8031$13P8LC
                         g$b*$8032$13P8LC)
                       (if (g$valid-bound-ids?$7083$13P8LC g$fmls$8030$13P8LC)
                         (g$bless$7319$13P8LC
                           (list
                             'define
                             g$who$8029$13P8LC
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8029$13P8LC)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8030$13P8LC
                                   (cons g$b$8031$13P8LC g$b*$8032$13P8LC))))))
                         (g$invalid-fmls-error$7321$13P8LC
                           g$stx$8026$13P8LC
                           g$fmls$8030$13P8LC))))
                    g$ls/false$8028$13P8LC)
                  ((case-lambda
                     ((g$t$8033$13P8LC)
                      ((case-lambda
                         ((g$ls/false$8034$13P8LC)
                          (if g$ls/false$8034$13P8LC
                            (apply
                              (case-lambda
                                ((g$who$8035$13P8LC
                                   g$fmls$8036$13P8LC
                                   g$last$8037$13P8LC
                                   g$b$8038$13P8LC
                                   g$b*$8039$13P8LC)
                                 (if (g$valid-bound-ids?$7083$13P8LC
                                       (cons
                                         g$last$8037$13P8LC
                                         g$fmls$8036$13P8LC))
                                   (g$bless$7319$13P8LC
                                     (list
                                       'define
                                       g$who$8035$13P8LC
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8035$13P8LC)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8036$13P8LC
                                               g$last$8037$13P8LC)
                                             (cons
                                               g$b$8038$13P8LC
                                               g$b*$8039$13P8LC))))))
                                   (g$invalid-fmls-error$7321$13P8LC
                                     g$stx$8026$13P8LC
                                     (append
                                       g$fmls$8036$13P8LC
                                       g$last$8037$13P8LC)))))
                              g$ls/false$8034$13P8LC)
                            ((case-lambda
                               ((g$t$8040$13P8LC)
                                ((case-lambda
                                   ((g$ls/false$8041$13P8LC)
                                    (if g$ls/false$8041$13P8LC
                                      (apply
                                        (case-lambda
                                          ((g$who$8042$13P8LC
                                             g$expr$8043$13P8LC)
                                           (if (g$id?$7078$13P8LC
                                                 g$who$8042$13P8LC)
                                             (g$bless$7319$13P8LC
                                               (list
                                                 'define
                                                 g$who$8042$13P8LC
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8043$13P8LC))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8042$13P8LC)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7465$13P8LC
                                               '#f
                                               '"invalid name"
                                               g$stx$8026$13P8LC))))
                                        g$ls/false$8041$13P8LC)
                                      (g$syntax-violation$7465$13P8LC
                                        '#f
                                        '"invalid syntax"
                                        g$t$8040$13P8LC))))
                                 (g$syntax-dispatch$7356$13P8LC
                                   g$t$8040$13P8LC
                                   '(_ any any)))))
                             g$t$8033$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$8033$13P8LC
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8027$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$8027$13P8LC
               '(_ (any . each-any) any . each-any)))))
         g$stx$8026$13P8LC))))
   (g$trace-define-syntax-macro$7327$13P8LC
     g$trace-define-syntax-macro$10763$13P8LC
     (case-lambda
       ((g$stx$8044$13P8LC)
        ((case-lambda
           ((g$t$8045$13P8LC)
            ((case-lambda
               ((g$ls/false$8046$13P8LC)
                (if g$ls/false$8046$13P8LC
                  (apply
                    (case-lambda
                      ((g$who$8047$13P8LC g$expr$8048$13P8LC)
                       (if (g$id?$7078$13P8LC g$who$8047$13P8LC)
                         (g$bless$7319$13P8LC
                           (list
                             'define-syntax
                             g$who$8047$13P8LC
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8047$13P8LC)
                               g$expr$8048$13P8LC)))
                         (g$syntax-violation$7465$13P8LC
                           '#f
                           '"invalid name"
                           g$stx$8044$13P8LC))))
                    g$ls/false$8046$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8045$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$8045$13P8LC '(_ any any)))))
         g$stx$8044$13P8LC))))
   (g$trace-let/rec-syntax$7328$13P8LC
     g$trace-let/rec-syntax$10764$13P8LC
     (case-lambda
       ((g$who$8049$13P8LC)
        (case-lambda
          ((g$stx$8050$13P8LC)
           ((case-lambda
              ((g$t$8051$13P8LC)
               ((case-lambda
                  ((g$ls/false$8052$13P8LC)
                   (if g$ls/false$8052$13P8LC
                     (apply
                       (case-lambda
                         ((g$lhs*$8053$13P8LC
                            g$rhs*$8054$13P8LC
                            g$b$8055$13P8LC
                            g$b*$8056$13P8LC)
                          (if (g$valid-bound-ids?$7083$13P8LC
                                g$lhs*$8053$13P8LC)
                            ((case-lambda
                               ((g$rhs*$8057$13P8LC)
                                (g$bless$7319$13P8LC
                                  (cons
                                    g$who$8049$13P8LC
                                    (cons
                                      (map list
                                           g$lhs*$8053$13P8LC
                                           g$rhs*$8057$13P8LC)
                                      (cons
                                        g$b$8055$13P8LC
                                        g$b*$8056$13P8LC))))))
                             (map (case-lambda
                                    ((g$lhs$8058$13P8LC g$rhs$8059$13P8LC)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8058$13P8LC)
                                       g$rhs$8059$13P8LC)))
                                  g$lhs*$8053$13P8LC
                                  g$rhs*$8054$13P8LC))
                            (g$invalid-fmls-error$7321$13P8LC
                              g$stx$8050$13P8LC
                              g$lhs*$8053$13P8LC))))
                       g$ls/false$8052$13P8LC)
                     (g$syntax-violation$7465$13P8LC
                       '#f
                       '"invalid syntax"
                       g$t$8051$13P8LC))))
                (g$syntax-dispatch$7356$13P8LC
                  g$t$8051$13P8LC
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8050$13P8LC))))))
   (g$trace-let-syntax-macro$7329$13P8LC
     g$trace-let-syntax-macro$10765$13P8LC
     (g$trace-let/rec-syntax$7328$13P8LC 'let-syntax))
   (g$trace-letrec-syntax-macro$7330$13P8LC
     g$trace-letrec-syntax-macro$10766$13P8LC
     (g$trace-let/rec-syntax$7328$13P8LC 'letrec-syntax))
   (g$guard-macro$7331$13P8LC
     g$guard-macro$10767$13P8LC
     (case-lambda
       ((g$x$8060$13P8LC)
        (letrec* ((g$gen-clauses$8061$13P8LC
                    (case-lambda
                      ((g$con$8073$13P8LC
                         g$outerk$8074$13P8LC
                         g$clause*$8075$13P8LC)
                       (letrec* ((g$f$8076$13P8LC
                                   (case-lambda
                                     ((g$x$8104$13P8LC g$k$8105$13P8LC)
                                      ((case-lambda
                                         ((g$t$8106$13P8LC)
                                          ((case-lambda
                                             ((g$ls/false$8107$13P8LC)
                                              (if g$ls/false$8107$13P8LC
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8108$13P8LC
                                                       g$p$8109$13P8LC)
                                                     ((case-lambda
                                                        ((g$t$8110$13P8LC)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8110$13P8LC
                                                               g$e$8108$13P8LC))
                                                           (list
                                                             'if
                                                             g$t$8110$13P8LC
                                                             (list
                                                               g$p$8109$13P8LC
                                                               g$t$8110$13P8LC)
                                                             g$k$8105$13P8LC))))
                                                      (gensym))))
                                                  g$ls/false$8107$13P8LC)
                                                ((case-lambda
                                                   ((g$t$8111$13P8LC)
                                                    ((case-lambda
                                                       ((g$ls/false$8112$13P8LC)
                                                        (if g$ls/false$8112$13P8LC
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8113$13P8LC)
                                                               ((case-lambda
                                                                  ((g$t$8114$13P8LC)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8114$13P8LC
                                                                         g$e$8113$13P8LC))
                                                                     (list
                                                                       'if
                                                                       g$t$8114$13P8LC
                                                                       g$t$8114$13P8LC
                                                                       g$k$8105$13P8LC))))
                                                                (gensym))))
                                                            g$ls/false$8112$13P8LC)
                                                          ((case-lambda
                                                             ((g$t$8115$13P8LC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8116$13P8LC)
                                                                  (if g$ls/false$8116$13P8LC
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8117$13P8LC
                                                                           g$v$8118$13P8LC
                                                                           g$v*$8119$13P8LC)
                                                                         (list
                                                                           'if
                                                                           g$e$8117$13P8LC
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8118$13P8LC
                                                                               g$v*$8119$13P8LC))
                                                                           g$k$8105$13P8LC)))
                                                                      g$ls/false$8116$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$t$8120$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8121$13P8LC)
                                                                            (if g$ls/false$8121$13P8LC
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7465$13P8LC
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8104$13P8LC)))
                                                                                g$ls/false$8121$13P8LC)
                                                                              (g$syntax-violation$7465$13P8LC
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8120$13P8LC))))
                                                                         (g$syntax-dispatch$7356$13P8LC
                                                                           g$t$8120$13P8LC
                                                                           '_))))
                                                                     g$t$8115$13P8LC))))
                                                               (g$syntax-dispatch$7356$13P8LC
                                                                 g$t$8115$13P8LC
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8111$13P8LC))))
                                                     (g$syntax-dispatch$7356$13P8LC
                                                       g$t$8111$13P8LC
                                                       '(any)))))
                                                 g$t$8106$13P8LC))))
                                           (g$syntax-dispatch$7356$13P8LC
                                             g$t$8106$13P8LC
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8104$13P8LC))))
                                 (g$f*$8077$13P8LC
                                   (case-lambda
                                     ((g$x*$8084$13P8LC)
                                      ((case-lambda
                                         ((g$t$8085$13P8LC)
                                          ((case-lambda
                                             ((g$ls/false$8086$13P8LC)
                                              (if g$ls/false$8086$13P8LC
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8073$13P8LC)
                                                       '#t)))
                                                  g$ls/false$8086$13P8LC)
                                                ((case-lambda
                                                   ((g$t$8087$13P8LC)
                                                    ((case-lambda
                                                       ((g$ls/false$8088$13P8LC)
                                                        (if g$ls/false$8088$13P8LC
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8089$13P8LC
                                                                 g$e*$8090$13P8LC)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8089$13P8LC
                                                                     g$e*$8090$13P8LC))
                                                                 '#f)))
                                                            g$ls/false$8088$13P8LC)
                                                          ((case-lambda
                                                             ((g$t$8091$13P8LC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8092$13P8LC)
                                                                  (if g$ls/false$8092$13P8LC
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8093$13P8LC
                                                                           g$cls*$8094$13P8LC)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8077$13P8LC
                                                                                g$cls*$8094$13P8LC)))
                                                                           (case-lambda
                                                                             ((g$e$8097$13P8LC
                                                                                g$g$8098$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$g$8099$13P8LC
                                                                                    g$e$8100$13P8LC)
                                                                                  (values
                                                                                    (g$f$8076$13P8LC
                                                                                      g$cls$8093$13P8LC
                                                                                      g$e$8100$13P8LC)
                                                                                    g$g$8099$13P8LC)))
                                                                               g$g$8098$13P8LC
                                                                               g$e$8097$13P8LC))))))
                                                                      g$ls/false$8092$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$t$8101$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8102$13P8LC)
                                                                            (if g$ls/false$8102$13P8LC
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8103$13P8LC)
                                                                                   (g$syntax-violation$7465$13P8LC
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8103$13P8LC)))
                                                                                g$ls/false$8102$13P8LC)
                                                                              (g$syntax-violation$7465$13P8LC
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8101$13P8LC))))
                                                                         (g$syntax-dispatch$7356$13P8LC
                                                                           g$t$8101$13P8LC
                                                                           'any))))
                                                                     g$t$8091$13P8LC))))
                                                               (g$syntax-dispatch$7356$13P8LC
                                                                 g$t$8091$13P8LC
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8087$13P8LC))))
                                                     (g$syntax-dispatch$7356$13P8LC
                                                       g$t$8087$13P8LC
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8085$13P8LC))))
                                           (g$syntax-dispatch$7356$13P8LC
                                             g$t$8085$13P8LC
                                             '()))))
                                       g$x*$8084$13P8LC)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8077$13P8LC g$clause*$8075$13P8LC)))
                           (case-lambda
                             ((g$code$8080$13P8LC g$raisek$8081$13P8LC)
                              ((case-lambda
                                 ((g$raisek$8082$13P8LC g$code$8083$13P8LC)
                                  (if g$raisek$8082$13P8LC
                                    (list
                                      g$outerk$8074$13P8LC
                                      g$code$8083$13P8LC)
                                    g$code$8083$13P8LC)))
                               g$raisek$8081$13P8LC
                               g$code$8080$13P8LC)))))))))
          ((case-lambda
             ((g$t$8062$13P8LC)
              ((case-lambda
                 ((g$ls/false$8063$13P8LC)
                  (if (if g$ls/false$8063$13P8LC
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8064$13P8LC
                                 g$clause*$8065$13P8LC
                                 g$b$8066$13P8LC
                                 g$b*$8067$13P8LC)
                               (g$id?$7078$13P8LC g$con$8064$13P8LC)))
                            g$ls/false$8063$13P8LC))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8068$13P8LC
                           g$clause*$8069$13P8LC
                           g$b$8070$13P8LC
                           g$b*$8071$13P8LC)
                         ((case-lambda
                            ((g$outerk$8072$13P8LC)
                             (g$bless$7319$13P8LC
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8072$13P8LC)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8068$13P8LC)
                                           (g$gen-clauses$8061$13P8LC
                                             g$con$8068$13P8LC
                                             g$outerk$8072$13P8LC
                                             g$clause*$8069$13P8LC))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8070$13P8LC
                                                 g$b*$8071$13P8LC))))))))))))
                          (gensym))))
                      g$ls/false$8063$13P8LC)
                    (g$syntax-violation$7465$13P8LC
                      '#f
                      '"invalid syntax"
                      g$t$8062$13P8LC))))
               (g$syntax-dispatch$7356$13P8LC
                 g$t$8062$13P8LC
                 '(_ (any . each-any) any . each-any)))))
           g$x$8060$13P8LC)))))
   (g$define-enumeration-macro$7332$13P8LC
     g$define-enumeration-macro$10768$13P8LC
     (case-lambda
       ((g$stx$8122$13P8LC)
        (letrec* ((g$set?$8123$13P8LC
                    (case-lambda
                      ((g$x$8136$13P8LC)
                       ((case-lambda
                          ((g$t$8137$13P8LC)
                           (if g$t$8137$13P8LC
                             g$t$8137$13P8LC
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8136$13P8LC)
                                          (cdr g$x$8136$13P8LC)))
                                 (begin
                                   '#f
                                   (g$set?$8123$13P8LC (cdr g$x$8136$13P8LC)))
                                 '#f)))))
                        (null? g$x$8136$13P8LC)))))
                  (g$remove-dups$8124$13P8LC
                    (case-lambda
                      ((g$ls$8135$13P8LC)
                       (if (null? g$ls$8135$13P8LC)
                         '()
                         (cons
                           (car g$ls$8135$13P8LC)
                           (g$remove-dups$8124$13P8LC
                             (g$remq$5363$13P8LC
                               (car g$ls$8135$13P8LC)
                               (cdr g$ls$8135$13P8LC)))))))))
          ((case-lambda
             ((g$t$8125$13P8LC)
              ((case-lambda
                 ((g$ls/false$8126$13P8LC)
                  (if (if g$ls/false$8126$13P8LC
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8127$13P8LC
                                 g$id*$8128$13P8LC
                                 g$maker$8129$13P8LC)
                               (if (g$id?$7078$13P8LC g$name$8127$13P8LC)
                                 (if (g$id?$7078$13P8LC g$maker$8129$13P8LC)
                                   (begin
                                     '#f
                                     (g$for-all$5356$13P8LC
                                       g$id?$7078$13P8LC
                                       g$id*$8128$13P8LC))
                                   '#f)
                                 '#f)))
                            g$ls/false$8126$13P8LC))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8130$13P8LC
                           g$id*$8131$13P8LC
                           g$maker$8132$13P8LC)
                         ((case-lambda
                            ((g$name*$8133$13P8LC g$mk$8134$13P8LC)
                             (g$bless$7319$13P8LC
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8134$13P8LC
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8133$13P8LC))))
                                 (list
                                   'define-syntax
                                   g$name$8130$13P8LC
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8133$13P8LC))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8130$13P8LC)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8132$13P8LC
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8132$13P8LC)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8133$13P8LC))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8132$13P8LC)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8134$13P8LC
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8124$13P8LC
                            (g$syntax->datum$7468$13P8LC g$id*$8131$13P8LC))
                          (gensym))))
                      g$ls/false$8126$13P8LC)
                    (g$syntax-violation$7465$13P8LC
                      '#f
                      '"invalid syntax"
                      g$t$8125$13P8LC))))
               (g$syntax-dispatch$7356$13P8LC
                 g$t$8125$13P8LC
                 '(_ any each-any any)))))
           g$stx$8122$13P8LC)))))
   (g$time-macro$7333$13P8LC
     g$time-macro$10769$13P8LC
     (case-lambda
       ((g$stx$8138$13P8LC)
        ((case-lambda
           ((g$t$8139$13P8LC)
            ((case-lambda
               ((g$ls/false$8140$13P8LC)
                (if g$ls/false$8140$13P8LC
                  (apply
                    (case-lambda
                      ((g$expr$8141$13P8LC)
                       ((case-lambda
                          ((g$str$8142$13P8LC)
                           (g$bless$7319$13P8LC
                             (list
                               'time-it
                               g$str$8142$13P8LC
                               (list 'lambda '() g$expr$8141$13P8LC)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6093$13P8LC)))
                          (case-lambda
                            ((g$p$8145$13P8LC g$e$8146$13P8LC)
                             ((case-lambda
                                ((g$e$8147$13P8LC g$p$8148$13P8LC)
                                 (begin
                                   (write
                                     (g$syntax->datum$7468$13P8LC
                                       g$expr$8141$13P8LC)
                                     g$p$8148$13P8LC)
                                   (g$e$8147$13P8LC))))
                              g$e$8146$13P8LC
                              g$p$8145$13P8LC)))))))
                    g$ls/false$8140$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8139$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$8139$13P8LC '(_ any)))))
         g$stx$8138$13P8LC))))
   (g$delay-macro$7334$13P8LC
     g$delay-macro$10770$13P8LC
     (case-lambda
       ((g$stx$8149$13P8LC)
        ((case-lambda
           ((g$t$8150$13P8LC)
            ((case-lambda
               ((g$ls/false$8151$13P8LC)
                (if g$ls/false$8151$13P8LC
                  (apply
                    (case-lambda
                      ((g$expr$8152$13P8LC)
                       (g$bless$7319$13P8LC
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8152$13P8LC)))))
                    g$ls/false$8151$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8150$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$8150$13P8LC '(_ any)))))
         g$stx$8149$13P8LC))))
   (g$assert-macro$7335$13P8LC
     g$assert-macro$10771$13P8LC
     (case-lambda
       ((g$stx$8153$13P8LC)
        ((case-lambda
           ((g$t$8154$13P8LC)
            ((case-lambda
               ((g$ls/false$8155$13P8LC)
                (if g$ls/false$8155$13P8LC
                  (apply
                    (case-lambda
                      ((g$expr$8156$13P8LC)
                       ((case-lambda
                          ((g$pos$8157$13P8LC)
                           (g$bless$7319$13P8LC
                             (list
                               'unless
                               g$expr$8156$13P8LC
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8156$13P8LC)
                                 (list 'quote g$pos$8157$13P8LC))))))
                        ((case-lambda
                           ((g$t$8158$13P8LC)
                            (if g$t$8158$13P8LC
                              g$t$8158$13P8LC
                              (begin
                                '#f
                                (g$expression-position$7460$13P8LC
                                  g$expr$8156$13P8LC)))))
                         (g$expression-position$7460$13P8LC
                           g$stx$8153$13P8LC)))))
                    g$ls/false$8155$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8154$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$8154$13P8LC '(_ any)))))
         g$stx$8153$13P8LC))))
   (g$endianness-macro$7336$13P8LC
     g$endianness-macro$10772$13P8LC
     (case-lambda
       ((g$stx$8159$13P8LC)
        ((case-lambda
           ((g$t$8160$13P8LC)
            ((case-lambda
               ((g$ls/false$8161$13P8LC)
                (if g$ls/false$8161$13P8LC
                  (apply
                    (case-lambda
                      ((g$e$8162$13P8LC)
                       ((case-lambda
                          ((g$t$8163$13P8LC)
                           (if (memv g$t$8163$13P8LC '(little))
                             (g$bless$7319$13P8LC ''little)
                             (if (memv g$t$8163$13P8LC '(big))
                               (g$bless$7319$13P8LC ''big)
                               (g$syntax-violation$7465$13P8LC
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8159$13P8LC)))))
                        (g$syntax->datum$7468$13P8LC g$e$8162$13P8LC))))
                    g$ls/false$8161$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8160$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$8160$13P8LC '(_ any)))))
         g$stx$8159$13P8LC))))
   (g$identifier-syntax-macro$7337$13P8LC
     g$identifier-syntax-macro$10773$13P8LC
     (case-lambda
       ((g$stx$8164$13P8LC)
        ((case-lambda
           ((g$t$8165$13P8LC)
            ((case-lambda
               ((g$ls/false$8166$13P8LC)
                (if g$ls/false$8166$13P8LC
                  (apply
                    (case-lambda
                      ((g$expr$8167$13P8LC)
                       (g$bless$7319$13P8LC
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8167$13P8LC))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8167$13P8LC)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8166$13P8LC)
                  ((case-lambda
                     ((g$t$8168$13P8LC)
                      ((case-lambda
                         ((g$ls/false$8169$13P8LC)
                          (if (if g$ls/false$8169$13P8LC
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8170$13P8LC
                                         g$expr1$8171$13P8LC
                                         g$id2$8172$13P8LC
                                         g$expr2$8173$13P8LC
                                         g$expr3$8174$13P8LC)
                                       (if (g$id?$7078$13P8LC g$id1$8170$13P8LC)
                                         (if (g$id?$7078$13P8LC
                                               g$id2$8172$13P8LC)
                                           (begin
                                             '#f
                                             (g$id?$7078$13P8LC
                                               g$expr2$8173$13P8LC))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8169$13P8LC))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8175$13P8LC
                                   g$expr1$8176$13P8LC
                                   g$id2$8177$13P8LC
                                   g$expr2$8178$13P8LC
                                   g$expr3$8179$13P8LC)
                                 (g$bless$7319$13P8LC
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8176$13P8LC))
                                         (list
                                           (list 'set! 'id g$expr2$8178$13P8LC)
                                           (list 'syntax g$expr3$8179$13P8LC))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8176$13P8LC
                                               '(e* ...))))))))))
                              g$ls/false$8169$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$8168$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$8168$13P8LC
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8165$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$8165$13P8LC '(_ any)))))
         g$stx$8164$13P8LC))))
   (g$do-macro$7338$13P8LC
     g$do-macro$10774$13P8LC
     (case-lambda
       ((g$stx$8180$13P8LC)
        (letrec* ((g$bind$8181$13P8LC
                    (case-lambda
                      ((g$x$8193$13P8LC)
                       ((case-lambda
                          ((g$t$8194$13P8LC)
                           ((case-lambda
                              ((g$ls/false$8195$13P8LC)
                               (if g$ls/false$8195$13P8LC
                                 (apply
                                   (case-lambda
                                     ((g$x$8196$13P8LC g$init$8197$13P8LC)
                                      (list
                                        g$x$8196$13P8LC
                                        g$init$8197$13P8LC
                                        g$x$8196$13P8LC)))
                                   g$ls/false$8195$13P8LC)
                                 ((case-lambda
                                    ((g$t$8198$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8199$13P8LC)
                                         (if g$ls/false$8199$13P8LC
                                           (apply
                                             (case-lambda
                                               ((g$x$8200$13P8LC
                                                  g$init$8201$13P8LC
                                                  g$step$8202$13P8LC)
                                                (list
                                                  g$x$8200$13P8LC
                                                  g$init$8201$13P8LC
                                                  g$step$8202$13P8LC)))
                                             g$ls/false$8199$13P8LC)
                                           ((case-lambda
                                              ((g$t$8203$13P8LC)
                                               ((case-lambda
                                                  ((g$ls/false$8204$13P8LC)
                                                   (if g$ls/false$8204$13P8LC
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7465$13P8LC
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8180$13P8LC)))
                                                       g$ls/false$8204$13P8LC)
                                                     (g$syntax-violation$7465$13P8LC
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8203$13P8LC))))
                                                (g$syntax-dispatch$7356$13P8LC
                                                  g$t$8203$13P8LC
                                                  '_))))
                                            g$t$8198$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8198$13P8LC
                                        '(any any any)))))
                                  g$t$8194$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$8194$13P8LC
                              '(any any)))))
                        g$x$8193$13P8LC)))))
          ((case-lambda
             ((g$t$8182$13P8LC)
              ((case-lambda
                 ((g$ls/false$8183$13P8LC)
                  (if g$ls/false$8183$13P8LC
                    (apply
                      (case-lambda
                        ((g$binding*$8184$13P8LC
                           g$test$8185$13P8LC
                           g$expr*$8186$13P8LC
                           g$command*$8187$13P8LC)
                         ((case-lambda
                            ((g$t$8188$13P8LC)
                             ((case-lambda
                                ((g$ls/false$8189$13P8LC)
                                 (if g$ls/false$8189$13P8LC
                                   (apply
                                     (case-lambda
                                       ((g$x*$8190$13P8LC
                                          g$init*$8191$13P8LC
                                          g$step*$8192$13P8LC)
                                        (if (g$valid-bound-ids?$7083$13P8LC
                                              g$x*$8190$13P8LC)
                                          (g$bless$7319$13P8LC
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8190$13P8LC
                                                    (list
                                                      'if
                                                      g$test$8185$13P8LC
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8186$13P8LC))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8187$13P8LC
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8192$13P8LC))))))))
                                              (cons 'loop g$init*$8191$13P8LC)))
                                          (g$syntax-violation$7465$13P8LC
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8180$13P8LC))))
                                     g$ls/false$8189$13P8LC)
                                   (g$syntax-violation$7465$13P8LC
                                     '#f
                                     '"invalid syntax"
                                     g$t$8188$13P8LC))))
                              (g$syntax-dispatch$7356$13P8LC
                                g$t$8188$13P8LC
                                '#(each (any any any))))))
                          (map g$bind$8181$13P8LC g$binding*$8184$13P8LC))))
                      g$ls/false$8183$13P8LC)
                    (g$syntax-violation$7465$13P8LC
                      '#f
                      '"invalid syntax"
                      g$t$8182$13P8LC))))
               (g$syntax-dispatch$7356$13P8LC
                 g$t$8182$13P8LC
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8180$13P8LC)))))
   (g$let*-macro$7339$13P8LC
     g$let*-macro$10775$13P8LC
     (case-lambda
       ((g$stx$8205$13P8LC)
        ((case-lambda
           ((g$t$8206$13P8LC)
            ((case-lambda
               ((g$ls/false$8207$13P8LC)
                (if (if g$ls/false$8207$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8208$13P8LC
                               g$rhs*$8209$13P8LC
                               g$b$8210$13P8LC
                               g$b*$8211$13P8LC)
                             (g$for-all$5356$13P8LC
                               g$id?$7078$13P8LC
                               g$lhs*$8208$13P8LC)))
                          g$ls/false$8207$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8212$13P8LC
                         g$rhs*$8213$13P8LC
                         g$b$8214$13P8LC
                         g$b*$8215$13P8LC)
                       (g$bless$7319$13P8LC
                         ((letrec ((g$f$8216$13P8LC
                                     (case-lambda
                                       ((g$x*$8217$13P8LC)
                                        (if (null? g$x*$8217$13P8LC)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8214$13P8LC
                                                g$b*$8215$13P8LC)))
                                          (list
                                            'let
                                            (list (car g$x*$8217$13P8LC))
                                            (g$f$8216$13P8LC
                                              (cdr g$x*$8217$13P8LC))))))))
                            g$f$8216$13P8LC)
                          (map list g$lhs*$8212$13P8LC g$rhs*$8213$13P8LC)))))
                    g$ls/false$8207$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8206$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$8206$13P8LC
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8205$13P8LC))))
   (g$or-macro$7340$13P8LC
     g$or-macro$10776$13P8LC
     (case-lambda
       ((g$stx$8218$13P8LC)
        ((case-lambda
           ((g$t$8219$13P8LC)
            ((case-lambda
               ((g$ls/false$8220$13P8LC)
                (if g$ls/false$8220$13P8LC
                  (apply (case-lambda (() '#f)) g$ls/false$8220$13P8LC)
                  ((case-lambda
                     ((g$t$8221$13P8LC)
                      ((case-lambda
                         ((g$ls/false$8222$13P8LC)
                          (if g$ls/false$8222$13P8LC
                            (apply
                              (case-lambda
                                ((g$e$8223$13P8LC g$e*$8224$13P8LC)
                                 (g$bless$7319$13P8LC
                                   ((letrec ((g$f$8225$13P8LC
                                               (case-lambda
                                                 ((g$e$8226$13P8LC
                                                    g$e*$8227$13P8LC)
                                                  (if (null? g$e*$8227$13P8LC)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8226$13P8LC)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8226$13P8LC))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8225$13P8LC
                                                          (car g$e*$8227$13P8LC)
                                                          (cdr g$e*$8227$13P8LC)))))))))
                                      g$f$8225$13P8LC)
                                    g$e$8223$13P8LC
                                    g$e*$8224$13P8LC))))
                              g$ls/false$8222$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$8221$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$8221$13P8LC
                         '(_ any . each-any)))))
                   g$t$8219$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$8219$13P8LC '(_)))))
         g$stx$8218$13P8LC))))
   (g$and-macro$7341$13P8LC
     g$and-macro$10777$13P8LC
     (case-lambda
       ((g$stx$8228$13P8LC)
        ((case-lambda
           ((g$t$8229$13P8LC)
            ((case-lambda
               ((g$ls/false$8230$13P8LC)
                (if g$ls/false$8230$13P8LC
                  (apply (case-lambda (() '#t)) g$ls/false$8230$13P8LC)
                  ((case-lambda
                     ((g$t$8231$13P8LC)
                      ((case-lambda
                         ((g$ls/false$8232$13P8LC)
                          (if g$ls/false$8232$13P8LC
                            (apply
                              (case-lambda
                                ((g$e$8233$13P8LC g$e*$8234$13P8LC)
                                 (g$bless$7319$13P8LC
                                   ((letrec ((g$f$8235$13P8LC
                                               (case-lambda
                                                 ((g$e$8236$13P8LC
                                                    g$e*$8237$13P8LC)
                                                  (if (null? g$e*$8237$13P8LC)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8236$13P8LC)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8236$13P8LC
                                                        (cons
                                                          (g$f$8235$13P8LC
                                                            (car g$e*$8237$13P8LC)
                                                            (cdr g$e*$8237$13P8LC))
                                                          '(#f)))))))))
                                      g$f$8235$13P8LC)
                                    g$e$8233$13P8LC
                                    g$e*$8234$13P8LC))))
                              g$ls/false$8232$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$8231$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$8231$13P8LC
                         '(_ any . each-any)))))
                   g$t$8229$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$8229$13P8LC '(_)))))
         g$stx$8228$13P8LC))))
   (g$cond-macro$7342$13P8LC
     g$cond-macro$10778$13P8LC
     (case-lambda
       ((g$stx$8238$13P8LC)
        ((case-lambda
           ((g$t$8239$13P8LC)
            ((case-lambda
               ((g$ls/false$8240$13P8LC)
                (if g$ls/false$8240$13P8LC
                  (apply
                    (case-lambda
                      ((g$cls$8241$13P8LC g$cls*$8242$13P8LC)
                       (g$bless$7319$13P8LC
                         ((letrec ((g$f$8243$13P8LC
                                     (case-lambda
                                       ((g$cls$8244$13P8LC g$cls*$8245$13P8LC)
                                        (if (null? g$cls*$8245$13P8LC)
                                          ((case-lambda
                                             ((g$t$8246$13P8LC)
                                              ((case-lambda
                                                 ((g$ls/false$8247$13P8LC)
                                                  (if g$ls/false$8247$13P8LC
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8248$13P8LC
                                                           g$e*$8249$13P8LC)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8248$13P8LC
                                                             g$e*$8249$13P8LC))))
                                                      g$ls/false$8247$13P8LC)
                                                    ((case-lambda
                                                       ((g$t$8250$13P8LC)
                                                        ((case-lambda
                                                           ((g$ls/false$8251$13P8LC)
                                                            (if g$ls/false$8251$13P8LC
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8252$13P8LC
                                                                     g$p$8253$13P8LC)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8252$13P8LC))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8253$13P8LC
                                                                         '(t))))))
                                                                g$ls/false$8251$13P8LC)
                                                              ((case-lambda
                                                                 ((g$t$8254$13P8LC)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8255$13P8LC)
                                                                      (if g$ls/false$8255$13P8LC
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8256$13P8LC)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8256$13P8LC
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8255$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$t$8257$13P8LC)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8258$13P8LC)
                                                                                (if g$ls/false$8258$13P8LC
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8259$13P8LC
                                                                                         g$e*$8260$13P8LC)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8259$13P8LC
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8260$13P8LC))))
                                                                                    g$ls/false$8258$13P8LC)
                                                                                  ((case-lambda
                                                                                     ((g$t$8261$13P8LC)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8262$13P8LC)
                                                                                          (if g$ls/false$8262$13P8LC
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7465$13P8LC
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8238$13P8LC)))
                                                                                              g$ls/false$8262$13P8LC)
                                                                                            (g$syntax-violation$7465$13P8LC
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8261$13P8LC))))
                                                                                       (g$syntax-dispatch$7356$13P8LC
                                                                                         g$t$8261$13P8LC
                                                                                         '_))))
                                                                                   g$t$8257$13P8LC))))
                                                                             (g$syntax-dispatch$7356$13P8LC
                                                                               g$t$8257$13P8LC
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8254$13P8LC))))
                                                                   (g$syntax-dispatch$7356$13P8LC
                                                                     g$t$8254$13P8LC
                                                                     '(any)))))
                                                               g$t$8250$13P8LC))))
                                                         (g$syntax-dispatch$7356$13P8LC
                                                           g$t$8250$13P8LC
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8246$13P8LC))))
                                               (g$syntax-dispatch$7356$13P8LC
                                                 g$t$8246$13P8LC
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8244$13P8LC)
                                          ((case-lambda
                                             ((g$t$8263$13P8LC)
                                              ((case-lambda
                                                 ((g$ls/false$8264$13P8LC)
                                                  (if g$ls/false$8264$13P8LC
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8265$13P8LC
                                                           g$e*$8266$13P8LC)
                                                         (g$syntax-violation$7465$13P8LC
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8238$13P8LC)))
                                                      g$ls/false$8264$13P8LC)
                                                    ((case-lambda
                                                       ((g$t$8267$13P8LC)
                                                        ((case-lambda
                                                           ((g$ls/false$8268$13P8LC)
                                                            (if g$ls/false$8268$13P8LC
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8269$13P8LC
                                                                     g$p$8270$13P8LC)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8269$13P8LC))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8270$13P8LC
                                                                         '(t))
                                                                       (g$f$8243$13P8LC
                                                                         (car g$cls*$8245$13P8LC)
                                                                         (cdr g$cls*$8245$13P8LC))))))
                                                                g$ls/false$8268$13P8LC)
                                                              ((case-lambda
                                                                 ((g$t$8271$13P8LC)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8272$13P8LC)
                                                                      (if g$ls/false$8272$13P8LC
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8273$13P8LC)
                                                                             (list
                                                                               'or
                                                                               g$e$8273$13P8LC
                                                                               (g$f$8243$13P8LC
                                                                                 (car g$cls*$8245$13P8LC)
                                                                                 (cdr g$cls*$8245$13P8LC)))))
                                                                          g$ls/false$8272$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$t$8274$13P8LC)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8275$13P8LC)
                                                                                (if g$ls/false$8275$13P8LC
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8276$13P8LC
                                                                                         g$e*$8277$13P8LC)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8276$13P8LC
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8277$13P8LC)
                                                                                         (g$f$8243$13P8LC
                                                                                           (car g$cls*$8245$13P8LC)
                                                                                           (cdr g$cls*$8245$13P8LC)))))
                                                                                    g$ls/false$8275$13P8LC)
                                                                                  ((case-lambda
                                                                                     ((g$t$8278$13P8LC)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8279$13P8LC)
                                                                                          (if g$ls/false$8279$13P8LC
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7465$13P8LC
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8238$13P8LC)))
                                                                                              g$ls/false$8279$13P8LC)
                                                                                            (g$syntax-violation$7465$13P8LC
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8278$13P8LC))))
                                                                                       (g$syntax-dispatch$7356$13P8LC
                                                                                         g$t$8278$13P8LC
                                                                                         '_))))
                                                                                   g$t$8274$13P8LC))))
                                                                             (g$syntax-dispatch$7356$13P8LC
                                                                               g$t$8274$13P8LC
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8271$13P8LC))))
                                                                   (g$syntax-dispatch$7356$13P8LC
                                                                     g$t$8271$13P8LC
                                                                     '(any)))))
                                                               g$t$8267$13P8LC))))
                                                         (g$syntax-dispatch$7356$13P8LC
                                                           g$t$8267$13P8LC
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8263$13P8LC))))
                                               (g$syntax-dispatch$7356$13P8LC
                                                 g$t$8263$13P8LC
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8244$13P8LC))))))
                            g$f$8243$13P8LC)
                          g$cls$8241$13P8LC
                          g$cls*$8242$13P8LC))))
                    g$ls/false$8240$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8239$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$8239$13P8LC
               '(_ any . each-any)))))
         g$stx$8238$13P8LC))))
   (g$do-include$7343$13P8LC
     g$do-include$10779$13P8LC
     (case-lambda
       ((g$stx$8280$13P8LC g$id$8281$13P8LC g$filename$8282$13P8LC)
        ((case-lambda
           ((g$filename$8283$13P8LC)
            (begin
              (if (not (if (string? g$filename$8283$13P8LC)
                         (begin '#f (g$id?$7078$13P8LC g$id$8281$13P8LC))
                         '#f))
                (g$syntax-violation$7465$13P8LC
                  '#f
                  '"invalid syntax"
                  g$stx$8280$13P8LC)
                (void))
              (cons
                (g$bless$7319$13P8LC 'begin)
                (with-input-from-file
                  g$filename$8283$13P8LC
                  (case-lambda
                    (()
                     ((letrec ((g$f$8284$13P8LC
                                 (case-lambda
                                   ((g$ls$8285$13P8LC)
                                    ((case-lambda
                                       ((g$x$8286$13P8LC)
                                        (if (eof-object? g$x$8286$13P8LC)
                                          (reverse g$ls$8285$13P8LC)
                                          (g$f$8284$13P8LC
                                            (cons
                                              (g$datum->stx$7061$13P8LC
                                                g$id$8281$13P8LC
                                                g$x$8286$13P8LC)
                                              g$ls$8285$13P8LC)))))
                                     (read-annotated))))))
                        g$f$8284$13P8LC)
                      '()))))))))
         (g$stx->datum$7089$13P8LC g$filename$8282$13P8LC)))))
   (g$include-macro$7344$13P8LC
     g$include-macro$10780$13P8LC
     (case-lambda
       ((g$e$8287$13P8LC)
        ((case-lambda
           ((g$t$8288$13P8LC)
            ((case-lambda
               ((g$ls/false$8289$13P8LC)
                (if g$ls/false$8289$13P8LC
                  (apply
                    (case-lambda
                      ((g$id$8290$13P8LC g$filename$8291$13P8LC)
                       (g$do-include$7343$13P8LC
                         g$e$8287$13P8LC
                         g$id$8290$13P8LC
                         g$filename$8291$13P8LC)))
                    g$ls/false$8289$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8288$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$8288$13P8LC '(any any)))))
         g$e$8287$13P8LC))))
   (g$include-into-macro$7345$13P8LC
     g$include-into-macro$10781$13P8LC
     (case-lambda
       ((g$e$8292$13P8LC)
        ((case-lambda
           ((g$t$8293$13P8LC)
            ((case-lambda
               ((g$ls/false$8294$13P8LC)
                (if g$ls/false$8294$13P8LC
                  (apply
                    (case-lambda
                      ((g$id$8295$13P8LC g$filename$8296$13P8LC)
                       (g$do-include$7343$13P8LC
                         g$e$8292$13P8LC
                         g$id$8295$13P8LC
                         g$filename$8296$13P8LC)))
                    g$ls/false$8294$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8293$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$8293$13P8LC '(_ any any)))))
         g$e$8292$13P8LC))))
   (g$syntax-rules-macro$7346$13P8LC
     g$syntax-rules-macro$10782$13P8LC
     (case-lambda
       ((g$e$8297$13P8LC)
        ((case-lambda
           ((g$t$8298$13P8LC)
            ((case-lambda
               ((g$ls/false$8299$13P8LC)
                (if g$ls/false$8299$13P8LC
                  (apply
                    (case-lambda
                      ((g$lits$8300$13P8LC
                         g$pat*$8301$13P8LC
                         g$tmp*$8302$13P8LC)
                       (begin
                         (g$verify-literals$7359$13P8LC
                           g$lits$8300$13P8LC
                           g$e$8297$13P8LC)
                         (g$bless$7319$13P8LC
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8300$13P8LC
                                   (map (case-lambda
                                          ((g$pat$8303$13P8LC g$tmp$8304$13P8LC)
                                           ((case-lambda
                                              ((g$t$8305$13P8LC)
                                               ((case-lambda
                                                  ((g$ls/false$8306$13P8LC)
                                                   (if g$ls/false$8306$13P8LC
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8307$13P8LC)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8307$13P8LC)
                                                            (list
                                                              'syntax
                                                              g$tmp$8304$13P8LC))))
                                                       g$ls/false$8306$13P8LC)
                                                     ((case-lambda
                                                        ((g$t$8308$13P8LC)
                                                         ((case-lambda
                                                            ((g$ls/false$8309$13P8LC)
                                                             (if g$ls/false$8309$13P8LC
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7465$13P8LC
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8297$13P8LC
                                                                      g$pat$8303$13P8LC)))
                                                                 g$ls/false$8309$13P8LC)
                                                               (g$syntax-violation$7465$13P8LC
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8308$13P8LC))))
                                                          (g$syntax-dispatch$7356$13P8LC
                                                            g$t$8308$13P8LC
                                                            '_))))
                                                      g$t$8305$13P8LC))))
                                                (g$syntax-dispatch$7356$13P8LC
                                                  g$t$8305$13P8LC
                                                  '(_ . any)))))
                                            g$pat$8303$13P8LC)))
                                        g$pat*$8301$13P8LC
                                        g$tmp*$8302$13P8LC)))))))))
                    g$ls/false$8299$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8298$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$8298$13P8LC
               '(_ each-any . #(each (any any)))))))
         g$e$8297$13P8LC))))
   (g$quasiquote-macro$7347$13P8LC
     g$quasiquote-macro$10783$13P8LC
     ((case-lambda
        (()
         (letrec* ((g$datum$8310$13P8LC
                     (case-lambda
                       ((g$x$8441$13P8LC)
                        (list
                          (g$scheme-stx$7299$13P8LC 'quote)
                          (g$mkstx$7066$13P8LC g$x$8441$13P8LC '() '() '())))))
                   (g$quasicons*$8326$13P8LC
                     (case-lambda
                       ((g$x$8437$13P8LC g$y$8438$13P8LC)
                        ((letrec ((g$f$8439$13P8LC
                                    (case-lambda
                                      ((g$x$8440$13P8LC)
                                       (if (null? g$x$8440$13P8LC)
                                         g$y$8438$13P8LC
                                         (g$quasicons$8327$13P8LC
                                           (car g$x$8440$13P8LC)
                                           (g$f$8439$13P8LC
                                             (cdr g$x$8440$13P8LC))))))))
                           g$f$8439$13P8LC)
                         g$x$8437$13P8LC))))
                   (g$quasicons$8327$13P8LC
                     (case-lambda
                       ((g$x$8418$13P8LC g$y$8419$13P8LC)
                        ((case-lambda
                           ((g$t$8420$13P8LC)
                            ((case-lambda
                               ((g$ls/false$8421$13P8LC)
                                (if g$ls/false$8421$13P8LC
                                  (apply
                                    (case-lambda
                                      ((g$dy$8422$13P8LC)
                                       ((case-lambda
                                          ((g$t$8423$13P8LC)
                                           ((case-lambda
                                              ((g$ls/false$8424$13P8LC)
                                               (if g$ls/false$8424$13P8LC
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8425$13P8LC)
                                                      (list
                                                        (g$scheme-stx$7299$13P8LC
                                                          'quote)
                                                        (cons
                                                          g$dx$8425$13P8LC
                                                          g$dy$8422$13P8LC))))
                                                   g$ls/false$8424$13P8LC)
                                                 ((case-lambda
                                                    ((g$t$8426$13P8LC)
                                                     ((case-lambda
                                                        ((g$ls/false$8427$13P8LC)
                                                         (if g$ls/false$8427$13P8LC
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8428$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8429$13P8LC)
                                                                        (if g$ls/false$8429$13P8LC
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7299$13P8LC
                                                                                   'list)
                                                                                 g$x$8418$13P8LC)))
                                                                            g$ls/false$8429$13P8LC)
                                                                          ((case-lambda
                                                                             ((g$t$8430$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8431$13P8LC)
                                                                                  (if g$ls/false$8431$13P8LC
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7299$13P8LC
                                                                                             'cons)
                                                                                           g$x$8418$13P8LC
                                                                                           g$y$8419$13P8LC)))
                                                                                      g$ls/false$8431$13P8LC)
                                                                                    (g$syntax-violation$7465$13P8LC
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8430$13P8LC))))
                                                                               (g$syntax-dispatch$7356$13P8LC
                                                                                 g$t$8430$13P8LC
                                                                                 '_))))
                                                                           g$t$8428$13P8LC))))
                                                                     (g$syntax-dispatch$7356$13P8LC
                                                                       g$t$8428$13P8LC
                                                                       '()))))
                                                                 g$dy$8422$13P8LC)))
                                                             g$ls/false$8427$13P8LC)
                                                           (g$syntax-violation$7465$13P8LC
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8426$13P8LC))))
                                                      (g$syntax-dispatch$7356$13P8LC
                                                        g$t$8426$13P8LC
                                                        '_))))
                                                  g$t$8423$13P8LC))))
                                            (g$syntax-dispatch$7356$13P8LC
                                              g$t$8423$13P8LC
                                              '(#(scheme-id quote) any)))))
                                        g$x$8418$13P8LC)))
                                    g$ls/false$8421$13P8LC)
                                  ((case-lambda
                                     ((g$t$8432$13P8LC)
                                      ((case-lambda
                                         ((g$ls/false$8433$13P8LC)
                                          (if g$ls/false$8433$13P8LC
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8434$13P8LC)
                                                 (g$cons*$5358$13P8LC
                                                   (g$scheme-stx$7299$13P8LC
                                                     'list)
                                                   g$x$8418$13P8LC
                                                   g$stuff$8434$13P8LC)))
                                              g$ls/false$8433$13P8LC)
                                            ((case-lambda
                                               ((g$t$8435$13P8LC)
                                                ((case-lambda
                                                   ((g$ls/false$8436$13P8LC)
                                                    (if g$ls/false$8436$13P8LC
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7299$13P8LC
                                                               'cons)
                                                             g$x$8418$13P8LC
                                                             g$y$8419$13P8LC)))
                                                        g$ls/false$8436$13P8LC)
                                                      (g$syntax-violation$7465$13P8LC
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8435$13P8LC))))
                                                 (g$syntax-dispatch$7356$13P8LC
                                                   g$t$8435$13P8LC
                                                   '_))))
                                             g$t$8432$13P8LC))))
                                       (g$syntax-dispatch$7356$13P8LC
                                         g$t$8432$13P8LC
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8420$13P8LC))))
                             (g$syntax-dispatch$7356$13P8LC
                               g$t$8420$13P8LC
                               '(#(scheme-id quote) any)))))
                         g$y$8419$13P8LC))))
                   (g$quasiappend$8328$13P8LC
                     (case-lambda
                       ((g$x$8405$13P8LC g$y$8406$13P8LC)
                        ((case-lambda
                           ((g$ls$8407$13P8LC)
                            (if (null? g$ls$8407$13P8LC)
                              (list (g$scheme-stx$7299$13P8LC 'quote) '())
                              (if (null? (cdr g$ls$8407$13P8LC))
                                (car g$ls$8407$13P8LC)
                                (g$cons*$5358$13P8LC
                                  (g$scheme-stx$7299$13P8LC 'append)
                                  g$ls$8407$13P8LC)))))
                         ((letrec ((g$f$8408$13P8LC
                                     (case-lambda
                                       ((g$x$8409$13P8LC)
                                        (if (null? g$x$8409$13P8LC)
                                          ((case-lambda
                                             ((g$t$8410$13P8LC)
                                              ((case-lambda
                                                 ((g$ls/false$8411$13P8LC)
                                                  (if g$ls/false$8411$13P8LC
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8411$13P8LC)
                                                    ((case-lambda
                                                       ((g$t$8412$13P8LC)
                                                        ((case-lambda
                                                           ((g$ls/false$8413$13P8LC)
                                                            (if g$ls/false$8413$13P8LC
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8406$13P8LC)))
                                                                g$ls/false$8413$13P8LC)
                                                              (g$syntax-violation$7465$13P8LC
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8412$13P8LC))))
                                                         (g$syntax-dispatch$7356$13P8LC
                                                           g$t$8412$13P8LC
                                                           '_))))
                                                     g$t$8410$13P8LC))))
                                               (g$syntax-dispatch$7356$13P8LC
                                                 g$t$8410$13P8LC
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8406$13P8LC)
                                          ((case-lambda
                                             ((g$t$8414$13P8LC)
                                              ((case-lambda
                                                 ((g$ls/false$8415$13P8LC)
                                                  (if g$ls/false$8415$13P8LC
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8408$13P8LC
                                                           (cdr g$x$8409$13P8LC))))
                                                      g$ls/false$8415$13P8LC)
                                                    ((case-lambda
                                                       ((g$t$8416$13P8LC)
                                                        ((case-lambda
                                                           ((g$ls/false$8417$13P8LC)
                                                            (if g$ls/false$8417$13P8LC
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8409$13P8LC)
                                                                     (g$f$8408$13P8LC
                                                                       (cdr g$x$8409$13P8LC)))))
                                                                g$ls/false$8417$13P8LC)
                                                              (g$syntax-violation$7465$13P8LC
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8416$13P8LC))))
                                                         (g$syntax-dispatch$7356$13P8LC
                                                           g$t$8416$13P8LC
                                                           '_))))
                                                     g$t$8414$13P8LC))))
                                               (g$syntax-dispatch$7356$13P8LC
                                                 g$t$8414$13P8LC
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8409$13P8LC)))))))
                            g$f$8408$13P8LC)
                          g$x$8405$13P8LC)))))
                   (g$quasivector$8329$13P8LC
                     (case-lambda
                       ((g$x$8380$13P8LC)
                        ((case-lambda
                           ((g$pat-x$8381$13P8LC)
                            ((case-lambda
                               ((g$t$8382$13P8LC)
                                ((case-lambda
                                   ((g$ls/false$8383$13P8LC)
                                    (if g$ls/false$8383$13P8LC
                                      (apply
                                        (case-lambda
                                          ((g$x*$8384$13P8LC)
                                           (list
                                             (g$scheme-stx$7299$13P8LC 'quote)
                                             (list->vector g$x*$8384$13P8LC))))
                                        g$ls/false$8383$13P8LC)
                                      ((case-lambda
                                         ((g$t$8385$13P8LC)
                                          ((case-lambda
                                             ((g$ls/false$8386$13P8LC)
                                              (if g$ls/false$8386$13P8LC
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8387$13P8LC
                                                                 (case-lambda
                                                                   ((g$x$8388$13P8LC
                                                                      g$k$8389$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$t$8390$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8391$13P8LC)
                                                                            (if g$ls/false$8391$13P8LC
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8392$13P8LC)
                                                                                   (g$k$8389$13P8LC
                                                                                     (map (case-lambda
                                                                                            ((g$x$8393$13P8LC)
                                                                                             (list
                                                                                               (g$scheme-stx$7299$13P8LC
                                                                                                 'quote)
                                                                                               g$x$8393$13P8LC)))
                                                                                          g$x*$8392$13P8LC))))
                                                                                g$ls/false$8391$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$t$8394$13P8LC)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8395$13P8LC)
                                                                                      (if g$ls/false$8395$13P8LC
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8396$13P8LC)
                                                                                             (g$k$8389$13P8LC
                                                                                               g$x*$8396$13P8LC)))
                                                                                          g$ls/false$8395$13P8LC)
                                                                                        ((case-lambda
                                                                                           ((g$t$8397$13P8LC)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8398$13P8LC)
                                                                                                (if g$ls/false$8398$13P8LC
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8399$13P8LC
                                                                                                         g$y$8400$13P8LC)
                                                                                                       (g$f$8387$13P8LC
                                                                                                         g$y$8400$13P8LC
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8401$13P8LC)
                                                                                                            (g$k$8389$13P8LC
                                                                                                              (cons
                                                                                                                g$x$8399$13P8LC
                                                                                                                g$ls$8401$13P8LC)))))))
                                                                                                    g$ls/false$8398$13P8LC)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8402$13P8LC)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8403$13P8LC)
                                                                                                          (if g$ls/false$8403$13P8LC
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7299$13P8LC
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8381$13P8LC)))
                                                                                                              g$ls/false$8403$13P8LC)
                                                                                                            (g$syntax-violation$7465$13P8LC
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8402$13P8LC))))
                                                                                                       (g$syntax-dispatch$7356$13P8LC
                                                                                                         g$t$8402$13P8LC
                                                                                                         '_))))
                                                                                                   g$t$8397$13P8LC))))
                                                                                             (g$syntax-dispatch$7356$13P8LC
                                                                                               g$t$8397$13P8LC
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8394$13P8LC))))
                                                                                   (g$syntax-dispatch$7356$13P8LC
                                                                                     g$t$8394$13P8LC
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8390$13P8LC))))
                                                                         (g$syntax-dispatch$7356$13P8LC
                                                                           g$t$8390$13P8LC
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8388$13P8LC)))))
                                                        g$f$8387$13P8LC)
                                                      g$x$8380$13P8LC
                                                      (case-lambda
                                                        ((g$ls$8404$13P8LC)
                                                         (g$cons*$5358$13P8LC
                                                           (g$scheme-stx$7299$13P8LC
                                                             'vector)
                                                           g$ls$8404$13P8LC))))))
                                                  g$ls/false$8386$13P8LC)
                                                (g$syntax-violation$7465$13P8LC
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8385$13P8LC))))
                                           (g$syntax-dispatch$7356$13P8LC
                                             g$t$8385$13P8LC
                                             '_))))
                                       g$t$8382$13P8LC))))
                                 (g$syntax-dispatch$7356$13P8LC
                                   g$t$8382$13P8LC
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8381$13P8LC)))
                         g$x$8380$13P8LC))))
                   (g$vquasi$8330$13P8LC
                     (case-lambda
                       ((g$p$8363$13P8LC g$lev$8364$13P8LC)
                        ((case-lambda
                           ((g$t$8365$13P8LC)
                            ((case-lambda
                               ((g$ls/false$8366$13P8LC)
                                (if g$ls/false$8366$13P8LC
                                  (apply
                                    (case-lambda
                                      ((g$p$8367$13P8LC g$q$8368$13P8LC)
                                       ((case-lambda
                                          ((g$t$8369$13P8LC)
                                           ((case-lambda
                                              ((g$ls/false$8370$13P8LC)
                                               (if g$ls/false$8370$13P8LC
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8371$13P8LC)
                                                      (if (= g$lev$8364$13P8LC
                                                             '0)
                                                        (g$quasicons*$8326$13P8LC
                                                          g$p$8371$13P8LC
                                                          (g$vquasi$8330$13P8LC
                                                            g$q$8368$13P8LC
                                                            g$lev$8364$13P8LC))
                                                        (g$quasicons$8327$13P8LC
                                                          (g$quasicons$8327$13P8LC
                                                            (g$datum$8310$13P8LC
                                                              'unquote)
                                                            (g$quasi$8331$13P8LC
                                                              g$p$8371$13P8LC
                                                              (- g$lev$8364$13P8LC
                                                                 '1)))
                                                          (g$vquasi$8330$13P8LC
                                                            g$q$8368$13P8LC
                                                            g$lev$8364$13P8LC)))))
                                                   g$ls/false$8370$13P8LC)
                                                 ((case-lambda
                                                    ((g$t$8372$13P8LC)
                                                     ((case-lambda
                                                        ((g$ls/false$8373$13P8LC)
                                                         (if g$ls/false$8373$13P8LC
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8374$13P8LC)
                                                                (if (= g$lev$8364$13P8LC
                                                                       '0)
                                                                  (g$quasiappend$8328$13P8LC
                                                                    g$p$8374$13P8LC
                                                                    (g$vquasi$8330$13P8LC
                                                                      g$q$8368$13P8LC
                                                                      g$lev$8364$13P8LC))
                                                                  (g$quasicons$8327$13P8LC
                                                                    (g$quasicons$8327$13P8LC
                                                                      (g$datum$8310$13P8LC
                                                                        'unquote-splicing)
                                                                      (g$quasi$8331$13P8LC
                                                                        g$p$8374$13P8LC
                                                                        (- g$lev$8364$13P8LC
                                                                           '1)))
                                                                    (g$vquasi$8330$13P8LC
                                                                      g$q$8368$13P8LC
                                                                      g$lev$8364$13P8LC)))))
                                                             g$ls/false$8373$13P8LC)
                                                           ((case-lambda
                                                              ((g$t$8375$13P8LC)
                                                               ((case-lambda
                                                                  ((g$ls/false$8376$13P8LC)
                                                                   (if g$ls/false$8376$13P8LC
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8377$13P8LC)
                                                                          (g$quasicons$8327$13P8LC
                                                                            (g$quasi$8331$13P8LC
                                                                              g$p$8377$13P8LC
                                                                              g$lev$8364$13P8LC)
                                                                            (g$vquasi$8330$13P8LC
                                                                              g$q$8368$13P8LC
                                                                              g$lev$8364$13P8LC))))
                                                                       g$ls/false$8376$13P8LC)
                                                                     (g$syntax-violation$7465$13P8LC
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8375$13P8LC))))
                                                                (g$syntax-dispatch$7356$13P8LC
                                                                  g$t$8375$13P8LC
                                                                  'any))))
                                                            g$t$8372$13P8LC))))
                                                      (g$syntax-dispatch$7356$13P8LC
                                                        g$t$8372$13P8LC
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8369$13P8LC))))
                                            (g$syntax-dispatch$7356$13P8LC
                                              g$t$8369$13P8LC
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8367$13P8LC)))
                                    g$ls/false$8366$13P8LC)
                                  ((case-lambda
                                     ((g$t$8378$13P8LC)
                                      ((case-lambda
                                         ((g$ls/false$8379$13P8LC)
                                          (if g$ls/false$8379$13P8LC
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7299$13P8LC
                                                     'quote)
                                                   '())))
                                              g$ls/false$8379$13P8LC)
                                            (g$syntax-violation$7465$13P8LC
                                              '#f
                                              '"invalid syntax"
                                              g$t$8378$13P8LC))))
                                       (g$syntax-dispatch$7356$13P8LC
                                         g$t$8378$13P8LC
                                         '()))))
                                   g$t$8365$13P8LC))))
                             (g$syntax-dispatch$7356$13P8LC
                               g$t$8365$13P8LC
                               '(any . any)))))
                         g$p$8363$13P8LC))))
                   (g$quasi$8331$13P8LC
                     (case-lambda
                       ((g$p$8336$13P8LC g$lev$8337$13P8LC)
                        ((case-lambda
                           ((g$t$8338$13P8LC)
                            ((case-lambda
                               ((g$ls/false$8339$13P8LC)
                                (if g$ls/false$8339$13P8LC
                                  (apply
                                    (case-lambda
                                      ((g$p$8340$13P8LC)
                                       (if (= g$lev$8337$13P8LC '0)
                                         g$p$8340$13P8LC
                                         (g$quasicons$8327$13P8LC
                                           (g$datum$8310$13P8LC 'unquote)
                                           (g$quasi$8331$13P8LC
                                             (list g$p$8340$13P8LC)
                                             (- g$lev$8337$13P8LC '1))))))
                                    g$ls/false$8339$13P8LC)
                                  ((case-lambda
                                     ((g$t$8341$13P8LC)
                                      ((case-lambda
                                         ((g$ls/false$8342$13P8LC)
                                          (if g$ls/false$8342$13P8LC
                                            (apply
                                              (case-lambda
                                                ((g$p$8343$13P8LC
                                                   g$q$8344$13P8LC)
                                                 (if (= g$lev$8337$13P8LC '0)
                                                   (g$quasicons*$8326$13P8LC
                                                     g$p$8343$13P8LC
                                                     (g$quasi$8331$13P8LC
                                                       g$q$8344$13P8LC
                                                       g$lev$8337$13P8LC))
                                                   (g$quasicons$8327$13P8LC
                                                     (g$quasicons$8327$13P8LC
                                                       (g$datum$8310$13P8LC
                                                         'unquote)
                                                       (g$quasi$8331$13P8LC
                                                         g$p$8343$13P8LC
                                                         (- g$lev$8337$13P8LC
                                                            '1)))
                                                     (g$quasi$8331$13P8LC
                                                       g$q$8344$13P8LC
                                                       g$lev$8337$13P8LC)))))
                                              g$ls/false$8342$13P8LC)
                                            ((case-lambda
                                               ((g$t$8345$13P8LC)
                                                ((case-lambda
                                                   ((g$ls/false$8346$13P8LC)
                                                    (if g$ls/false$8346$13P8LC
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8347$13P8LC
                                                             g$q$8348$13P8LC)
                                                           (if (= g$lev$8337$13P8LC
                                                                  '0)
                                                             (g$quasiappend$8328$13P8LC
                                                               g$p$8347$13P8LC
                                                               (g$quasi$8331$13P8LC
                                                                 g$q$8348$13P8LC
                                                                 g$lev$8337$13P8LC))
                                                             (g$quasicons$8327$13P8LC
                                                               (g$quasicons$8327$13P8LC
                                                                 (g$datum$8310$13P8LC
                                                                   'unquote-splicing)
                                                                 (g$quasi$8331$13P8LC
                                                                   g$p$8347$13P8LC
                                                                   (- g$lev$8337$13P8LC
                                                                      '1)))
                                                               (g$quasi$8331$13P8LC
                                                                 g$q$8348$13P8LC
                                                                 g$lev$8337$13P8LC)))))
                                                        g$ls/false$8346$13P8LC)
                                                      ((case-lambda
                                                         ((g$t$8349$13P8LC)
                                                          ((case-lambda
                                                             ((g$ls/false$8350$13P8LC)
                                                              (if g$ls/false$8350$13P8LC
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8351$13P8LC)
                                                                     (g$quasicons$8327$13P8LC
                                                                       (g$datum$8310$13P8LC
                                                                         'quasiquote)
                                                                       (g$quasi$8331$13P8LC
                                                                         (list
                                                                           g$p$8351$13P8LC)
                                                                         (+ g$lev$8337$13P8LC
                                                                            '1)))))
                                                                  g$ls/false$8350$13P8LC)
                                                                ((case-lambda
                                                                   ((g$t$8352$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8353$13P8LC)
                                                                        (if g$ls/false$8353$13P8LC
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8354$13P8LC
                                                                                 g$q$8355$13P8LC)
                                                                               (g$quasicons$8327$13P8LC
                                                                                 (g$quasi$8331$13P8LC
                                                                                   g$p$8354$13P8LC
                                                                                   g$lev$8337$13P8LC)
                                                                                 (g$quasi$8331$13P8LC
                                                                                   g$q$8355$13P8LC
                                                                                   g$lev$8337$13P8LC))))
                                                                            g$ls/false$8353$13P8LC)
                                                                          ((case-lambda
                                                                             ((g$t$8356$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8357$13P8LC)
                                                                                  (if (if g$ls/false$8357$13P8LC
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8358$13P8LC)
                                                                                               (not (g$stx?$7050$13P8LC
                                                                                                      g$x$8358$13P8LC))))
                                                                                            g$ls/false$8357$13P8LC))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8359$13P8LC)
                                                                                         (g$quasivector$8329$13P8LC
                                                                                           (g$vquasi$8330$13P8LC
                                                                                             g$x$8359$13P8LC
                                                                                             g$lev$8337$13P8LC))))
                                                                                      g$ls/false$8357$13P8LC)
                                                                                    ((case-lambda
                                                                                       ((g$t$8360$13P8LC)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8361$13P8LC)
                                                                                            (if g$ls/false$8361$13P8LC
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8362$13P8LC)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7299$13P8LC
                                                                                                       'quote)
                                                                                                     g$p$8362$13P8LC)))
                                                                                                g$ls/false$8361$13P8LC)
                                                                                              (g$syntax-violation$7465$13P8LC
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8360$13P8LC))))
                                                                                         (g$syntax-dispatch$7356$13P8LC
                                                                                           g$t$8360$13P8LC
                                                                                           'any))))
                                                                                     g$t$8356$13P8LC))))
                                                                               (g$syntax-dispatch$7356$13P8LC
                                                                                 g$t$8356$13P8LC
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8352$13P8LC))))
                                                                     (g$syntax-dispatch$7356$13P8LC
                                                                       g$t$8352$13P8LC
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8349$13P8LC))))
                                                           (g$syntax-dispatch$7356$13P8LC
                                                             g$t$8349$13P8LC
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8345$13P8LC))))
                                                 (g$syntax-dispatch$7356$13P8LC
                                                   g$t$8345$13P8LC
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8341$13P8LC))))
                                       (g$syntax-dispatch$7356$13P8LC
                                         g$t$8341$13P8LC
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8338$13P8LC))))
                             (g$syntax-dispatch$7356$13P8LC
                               g$t$8338$13P8LC
                               '(#(scheme-id unquote) any)))))
                         g$p$8336$13P8LC)))))
           (case-lambda
             ((g$x$8332$13P8LC)
              ((case-lambda
                 ((g$t$8333$13P8LC)
                  ((case-lambda
                     ((g$ls/false$8334$13P8LC)
                      (if g$ls/false$8334$13P8LC
                        (apply
                          (case-lambda
                            ((g$e$8335$13P8LC)
                             (g$quasi$8331$13P8LC g$e$8335$13P8LC '0)))
                          g$ls/false$8334$13P8LC)
                        (g$syntax-violation$7465$13P8LC
                          '#f
                          '"invalid syntax"
                          g$t$8333$13P8LC))))
                   (g$syntax-dispatch$7356$13P8LC g$t$8333$13P8LC '(_ any)))))
               g$x$8332$13P8LC))))))))
   (g$quasisyntax-macro$7348$13P8LC
     g$quasisyntax-macro$10784$13P8LC
     ((case-lambda
        (()
         (letrec* ((g$quasi$8442$13P8LC
                     (case-lambda
                       ((g$p$8456$13P8LC g$lev$8457$13P8LC)
                        ((case-lambda
                           ((g$t$8458$13P8LC)
                            ((case-lambda
                               ((g$ls/false$8459$13P8LC)
                                (if g$ls/false$8459$13P8LC
                                  (apply
                                    (case-lambda
                                      ((g$p$8460$13P8LC)
                                       (if (= g$lev$8457$13P8LC '0)
                                         ((case-lambda
                                            ((g$g$8461$13P8LC)
                                             (values
                                               (list g$g$8461$13P8LC)
                                               (list g$p$8460$13P8LC)
                                               g$g$8461$13P8LC)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8442$13P8LC
                                                g$p$8460$13P8LC
                                                (- g$lev$8457$13P8LC '1))))
                                           (case-lambda
                                             ((g$lhs*$8465$13P8LC
                                                g$rhs*$8466$13P8LC
                                                g$p$8467$13P8LC)
                                              ((case-lambda
                                                 ((g$p$8468$13P8LC
                                                    g$rhs*$8469$13P8LC
                                                    g$lhs*$8470$13P8LC)
                                                  (values
                                                    g$lhs*$8470$13P8LC
                                                    g$rhs*$8469$13P8LC
                                                    (list
                                                      'unsyntax
                                                      g$p$8468$13P8LC))))
                                               g$p$8467$13P8LC
                                               g$rhs*$8466$13P8LC
                                               g$lhs*$8465$13P8LC)))))))
                                    g$ls/false$8459$13P8LC)
                                  ((case-lambda
                                     ((g$t$8471$13P8LC)
                                      ((case-lambda
                                         ((g$ls/false$8472$13P8LC)
                                          (if (if g$ls/false$8472$13P8LC
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8457$13P8LC
                                                          '0)))
                                                    g$ls/false$8472$13P8LC))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7465$13P8LC
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8456$13P8LC)))
                                              g$ls/false$8472$13P8LC)
                                            ((case-lambda
                                               ((g$t$8473$13P8LC)
                                                ((case-lambda
                                                   ((g$ls/false$8474$13P8LC)
                                                    (if g$ls/false$8474$13P8LC
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8475$13P8LC
                                                             g$q$8476$13P8LC)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8442$13P8LC
                                                                  g$q$8476$13P8LC
                                                                  g$lev$8457$13P8LC)))
                                                             (case-lambda
                                                               ((g$lhs*$8480$13P8LC
                                                                  g$rhs*$8481$13P8LC
                                                                  g$q$8482$13P8LC)
                                                                ((case-lambda
                                                                   ((g$q$8483$13P8LC
                                                                      g$rhs*$8484$13P8LC
                                                                      g$lhs*$8485$13P8LC)
                                                                    (if (= g$lev$8457$13P8LC
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8486$13P8LC)
                                                                          (values
                                                                            (append
                                                                              g$g*$8486$13P8LC
                                                                              g$lhs*$8485$13P8LC)
                                                                            (append
                                                                              g$p*$8475$13P8LC
                                                                              g$rhs*$8484$13P8LC)
                                                                            (append
                                                                              g$g*$8486$13P8LC
                                                                              g$q$8483$13P8LC))))
                                                                       (map (case-lambda
                                                                              ((g$x$8487$13P8LC)
                                                                               (gensym)))
                                                                            g$p*$8475$13P8LC))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8442$13P8LC
                                                                             g$p*$8475$13P8LC
                                                                             (- g$lev$8457$13P8LC
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8491$13P8LC
                                                                             g$rhs2*$8492$13P8LC
                                                                             g$p*$8493$13P8LC)
                                                                           ((case-lambda
                                                                              ((g$p*$8494$13P8LC
                                                                                 g$rhs2*$8495$13P8LC
                                                                                 g$lhs2*$8496$13P8LC)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8496$13P8LC
                                                                                   g$lhs*$8485$13P8LC)
                                                                                 (append
                                                                                   g$rhs2*$8495$13P8LC
                                                                                   g$rhs*$8484$13P8LC)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8494$13P8LC)
                                                                                   g$q$8483$13P8LC))))
                                                                            g$p*$8493$13P8LC
                                                                            g$rhs2*$8492$13P8LC
                                                                            g$lhs2*$8491$13P8LC)))))))
                                                                 g$q$8482$13P8LC
                                                                 g$rhs*$8481$13P8LC
                                                                 g$lhs*$8480$13P8LC))))))
                                                        g$ls/false$8474$13P8LC)
                                                      ((case-lambda
                                                         ((g$t$8497$13P8LC)
                                                          ((case-lambda
                                                             ((g$ls/false$8498$13P8LC)
                                                              (if g$ls/false$8498$13P8LC
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8499$13P8LC
                                                                       g$q$8500$13P8LC)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8442$13P8LC
                                                                            g$q$8500$13P8LC
                                                                            g$lev$8457$13P8LC)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8504$13P8LC
                                                                            g$rhs*$8505$13P8LC
                                                                            g$q$8506$13P8LC)
                                                                          ((case-lambda
                                                                             ((g$q$8507$13P8LC
                                                                                g$rhs*$8508$13P8LC
                                                                                g$lhs*$8509$13P8LC)
                                                                              (if (= g$lev$8457$13P8LC
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8510$13P8LC)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8511$13P8LC)
                                                                                                (cons
                                                                                                  g$g$8511$13P8LC
                                                                                                  '(...))))
                                                                                             g$g*$8510$13P8LC)
                                                                                        g$lhs*$8509$13P8LC)
                                                                                      (append
                                                                                        g$p*$8499$13P8LC
                                                                                        g$rhs*$8508$13P8LC)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8512$13P8LC)
                                                                                                  (cons
                                                                                                    g$g$8512$13P8LC
                                                                                                    '(...))))
                                                                                               g$g*$8510$13P8LC))
                                                                                        g$q$8507$13P8LC))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8513$13P8LC)
                                                                                         (gensym)))
                                                                                      g$p*$8499$13P8LC))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8442$13P8LC
                                                                                       g$p*$8499$13P8LC
                                                                                       (- g$lev$8457$13P8LC
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8517$13P8LC
                                                                                       g$rhs2*$8518$13P8LC
                                                                                       g$p*$8519$13P8LC)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8520$13P8LC
                                                                                           g$rhs2*$8521$13P8LC
                                                                                           g$lhs2*$8522$13P8LC)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8522$13P8LC
                                                                                             g$lhs*$8509$13P8LC)
                                                                                           (append
                                                                                             g$rhs2*$8521$13P8LC
                                                                                             g$rhs*$8508$13P8LC)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8520$13P8LC)
                                                                                             g$q$8507$13P8LC))))
                                                                                      g$p*$8519$13P8LC
                                                                                      g$rhs2*$8518$13P8LC
                                                                                      g$lhs2*$8517$13P8LC)))))))
                                                                           g$q$8506$13P8LC
                                                                           g$rhs*$8505$13P8LC
                                                                           g$lhs*$8504$13P8LC))))))
                                                                  g$ls/false$8498$13P8LC)
                                                                ((case-lambda
                                                                   ((g$t$8523$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8524$13P8LC)
                                                                        (if (if g$ls/false$8524$13P8LC
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8457$13P8LC
                                                                                        '0)))
                                                                                  g$ls/false$8524$13P8LC))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7465$13P8LC
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8456$13P8LC)))
                                                                            g$ls/false$8524$13P8LC)
                                                                          ((case-lambda
                                                                             ((g$t$8525$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8526$13P8LC)
                                                                                  (if g$ls/false$8526$13P8LC
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8527$13P8LC)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8442$13P8LC
                                                                                                g$p$8527$13P8LC
                                                                                                (+ g$lev$8457$13P8LC
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8531$13P8LC
                                                                                                g$rhs*$8532$13P8LC
                                                                                                g$p$8533$13P8LC)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8534$13P8LC
                                                                                                    g$rhs*$8535$13P8LC
                                                                                                    g$lhs*$8536$13P8LC)
                                                                                                  (values
                                                                                                    g$lhs*$8536$13P8LC
                                                                                                    g$rhs*$8535$13P8LC
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8534$13P8LC))))
                                                                                               g$p$8533$13P8LC
                                                                                               g$rhs*$8532$13P8LC
                                                                                               g$lhs*$8531$13P8LC))))))
                                                                                      g$ls/false$8526$13P8LC)
                                                                                    ((case-lambda
                                                                                       ((g$t$8537$13P8LC)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8538$13P8LC)
                                                                                            (if g$ls/false$8538$13P8LC
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8539$13P8LC
                                                                                                     g$q$8540$13P8LC)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8442$13P8LC
                                                                                                          g$p$8539$13P8LC
                                                                                                          g$lev$8457$13P8LC)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8547$13P8LC
                                                                                                          g$rhs*$8548$13P8LC
                                                                                                          g$p$8549$13P8LC)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8442$13P8LC
                                                                                                               g$q$8540$13P8LC
                                                                                                               g$lev$8457$13P8LC)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8550$13P8LC
                                                                                                               g$rhs2*$8551$13P8LC
                                                                                                               g$q$8552$13P8LC)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8553$13P8LC
                                                                                                                   g$rhs2*$8554$13P8LC
                                                                                                                   g$lhs2*$8555$13P8LC
                                                                                                                   g$p$8556$13P8LC
                                                                                                                   g$rhs*$8557$13P8LC
                                                                                                                   g$lhs*$8558$13P8LC)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8555$13P8LC
                                                                                                                     g$lhs*$8558$13P8LC)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8554$13P8LC
                                                                                                                     g$rhs*$8557$13P8LC)
                                                                                                                   (cons
                                                                                                                     g$p$8556$13P8LC
                                                                                                                     g$q$8553$13P8LC))))
                                                                                                              g$q$8552$13P8LC
                                                                                                              g$rhs2*$8551$13P8LC
                                                                                                              g$lhs2*$8550$13P8LC
                                                                                                              g$p$8549$13P8LC
                                                                                                              g$rhs*$8548$13P8LC
                                                                                                              g$lhs*$8547$13P8LC)))))))))
                                                                                                g$ls/false$8538$13P8LC)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8559$13P8LC)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8560$13P8LC)
                                                                                                      (if g$ls/false$8560$13P8LC
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8561$13P8LC)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8442$13P8LC
                                                                                                                    g$x*$8561$13P8LC
                                                                                                                    g$lev$8457$13P8LC)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8565$13P8LC
                                                                                                                    g$rhs*$8566$13P8LC
                                                                                                                    g$x*$8567$13P8LC)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8568$13P8LC
                                                                                                                        g$rhs*$8569$13P8LC
                                                                                                                        g$lhs*$8570$13P8LC)
                                                                                                                      (values
                                                                                                                        g$lhs*$8570$13P8LC
                                                                                                                        g$rhs*$8569$13P8LC
                                                                                                                        (list->vector
                                                                                                                          g$x*$8568$13P8LC))))
                                                                                                                   g$x*$8567$13P8LC
                                                                                                                   g$rhs*$8566$13P8LC
                                                                                                                   g$lhs*$8565$13P8LC))))))
                                                                                                          g$ls/false$8560$13P8LC)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8571$13P8LC)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8572$13P8LC)
                                                                                                                (if g$ls/false$8572$13P8LC
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8456$13P8LC)))
                                                                                                                    g$ls/false$8572$13P8LC)
                                                                                                                  (g$syntax-violation$7465$13P8LC
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8571$13P8LC))))
                                                                                                             (g$syntax-dispatch$7356$13P8LC
                                                                                                               g$t$8571$13P8LC
                                                                                                               '_))))
                                                                                                         g$t$8559$13P8LC))))
                                                                                                   (g$syntax-dispatch$7356$13P8LC
                                                                                                     g$t$8559$13P8LC
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8537$13P8LC))))
                                                                                         (g$syntax-dispatch$7356$13P8LC
                                                                                           g$t$8537$13P8LC
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8525$13P8LC))))
                                                                               (g$syntax-dispatch$7356$13P8LC
                                                                                 g$t$8525$13P8LC
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8523$13P8LC))))
                                                                     (g$syntax-dispatch$7356$13P8LC
                                                                       g$t$8523$13P8LC
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8497$13P8LC))))
                                                           (g$syntax-dispatch$7356$13P8LC
                                                             g$t$8497$13P8LC
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8473$13P8LC))))
                                                 (g$syntax-dispatch$7356$13P8LC
                                                   g$t$8473$13P8LC
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8471$13P8LC))))
                                       (g$syntax-dispatch$7356$13P8LC
                                         g$t$8471$13P8LC
                                         '#(scheme-id unsyntax)))))
                                   g$t$8458$13P8LC))))
                             (g$syntax-dispatch$7356$13P8LC
                               g$t$8458$13P8LC
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8456$13P8LC)))))
           (case-lambda
             ((g$x$8443$13P8LC)
              ((case-lambda
                 ((g$t$8444$13P8LC)
                  ((case-lambda
                     ((g$ls/false$8445$13P8LC)
                      (if g$ls/false$8445$13P8LC
                        (apply
                          (case-lambda
                            ((g$e$8446$13P8LC)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8442$13P8LC g$e$8446$13P8LC '0)))
                               (case-lambda
                                 ((g$lhs*$8450$13P8LC
                                    g$rhs*$8451$13P8LC
                                    g$v$8452$13P8LC)
                                  ((case-lambda
                                     ((g$v$8453$13P8LC
                                        g$rhs*$8454$13P8LC
                                        g$lhs*$8455$13P8LC)
                                      (g$bless$7319$13P8LC
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8454$13P8LC)
                                          '()
                                          (list
                                            g$lhs*$8455$13P8LC
                                            (list 'syntax g$v$8453$13P8LC))))))
                                   g$v$8452$13P8LC
                                   g$rhs*$8451$13P8LC
                                   g$lhs*$8450$13P8LC))))))
                          g$ls/false$8445$13P8LC)
                        (g$syntax-violation$7465$13P8LC
                          '#f
                          '"invalid syntax"
                          g$t$8444$13P8LC))))
                   (g$syntax-dispatch$7356$13P8LC g$t$8444$13P8LC '(_ any)))))
               g$x$8443$13P8LC))))))))
   (g$define-struct-macro$7349$13P8LC
     g$define-struct-macro$10785$13P8LC
     (case-lambda
       ((g$stx$8573$13P8LC)
        (g$syntax-violation$7465$13P8LC
          '#f
          '"define-struct not supported"
          g$stx$8573$13P8LC))))
   (g$define-record-type-macro$7350$13P8LC
     g$define-record-type-macro$10786$13P8LC
     (case-lambda
       ((g$x$8574$13P8LC)
        (letrec* ((g$id$8575$13P8LC
                    (case-lambda
                      ((g$ctxt$8827$13P8LC . g$str*$8828$13P8LC)
                       (g$datum->syntax$7467$13P8LC
                         g$ctxt$8827$13P8LC
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$8829$13P8LC)
                                     (if (symbol? g$x$8829$13P8LC)
                                       (symbol->string g$x$8829$13P8LC)
                                       (if (string? g$x$8829$13P8LC)
                                         g$x$8829$13P8LC
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$8828$13P8LC)))))))
                  (g$get-record-name$8576$13P8LC
                    (case-lambda
                      ((g$spec$8818$13P8LC)
                       ((case-lambda
                          ((g$t$8819$13P8LC)
                           ((case-lambda
                              ((g$ls/false$8820$13P8LC)
                               (if g$ls/false$8820$13P8LC
                                 (apply
                                   (case-lambda
                                     ((g$foo$8821$13P8LC
                                        g$make-foo$8822$13P8LC
                                        g$foo?$8823$13P8LC)
                                      g$foo$8821$13P8LC))
                                   g$ls/false$8820$13P8LC)
                                 ((case-lambda
                                    ((g$t$8824$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8825$13P8LC)
                                         (if g$ls/false$8825$13P8LC
                                           (apply
                                             (case-lambda
                                               ((g$foo$8826$13P8LC)
                                                g$foo$8826$13P8LC))
                                             g$ls/false$8825$13P8LC)
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8824$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8824$13P8LC
                                        'any))))
                                  g$t$8819$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$8819$13P8LC
                              '(any any any)))))
                        g$spec$8818$13P8LC))))
                  (g$get-record-constructor-name$8577$13P8LC
                    (case-lambda
                      ((g$spec$8808$13P8LC)
                       ((case-lambda
                          ((g$t$8809$13P8LC)
                           ((case-lambda
                              ((g$ls/false$8810$13P8LC)
                               (if g$ls/false$8810$13P8LC
                                 (apply
                                   (case-lambda
                                     ((g$foo$8811$13P8LC
                                        g$make-foo$8812$13P8LC
                                        g$foo?$8813$13P8LC)
                                      g$make-foo$8812$13P8LC))
                                   g$ls/false$8810$13P8LC)
                                 ((case-lambda
                                    ((g$t$8814$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8815$13P8LC)
                                         (if (if g$ls/false$8815$13P8LC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8816$13P8LC)
                                                      (g$id?$7078$13P8LC
                                                        g$foo$8816$13P8LC)))
                                                   g$ls/false$8815$13P8LC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8817$13P8LC)
                                                (g$id$8575$13P8LC
                                                  g$foo$8817$13P8LC
                                                  '"make-"
                                                  (g$stx->datum$7089$13P8LC
                                                    g$foo$8817$13P8LC))))
                                             g$ls/false$8815$13P8LC)
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8814$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8814$13P8LC
                                        'any))))
                                  g$t$8809$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$8809$13P8LC
                              '(any any any)))))
                        g$spec$8808$13P8LC))))
                  (g$get-record-predicate-name$8578$13P8LC
                    (case-lambda
                      ((g$spec$8798$13P8LC)
                       ((case-lambda
                          ((g$t$8799$13P8LC)
                           ((case-lambda
                              ((g$ls/false$8800$13P8LC)
                               (if g$ls/false$8800$13P8LC
                                 (apply
                                   (case-lambda
                                     ((g$foo$8801$13P8LC
                                        g$make-foo$8802$13P8LC
                                        g$foo?$8803$13P8LC)
                                      g$foo?$8803$13P8LC))
                                   g$ls/false$8800$13P8LC)
                                 ((case-lambda
                                    ((g$t$8804$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8805$13P8LC)
                                         (if (if g$ls/false$8805$13P8LC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8806$13P8LC)
                                                      (g$id?$7078$13P8LC
                                                        g$foo$8806$13P8LC)))
                                                   g$ls/false$8805$13P8LC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8807$13P8LC)
                                                (g$id$8575$13P8LC
                                                  g$foo$8807$13P8LC
                                                  (g$stx->datum$7089$13P8LC
                                                    g$foo$8807$13P8LC)
                                                  '"?")))
                                             g$ls/false$8805$13P8LC)
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8804$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8804$13P8LC
                                        'any))))
                                  g$t$8799$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$8799$13P8LC
                              '(any any any)))))
                        g$spec$8798$13P8LC))))
                  (g$get-clause$8579$13P8LC
                    (case-lambda
                      ((g$id$8789$13P8LC g$ls$8790$13P8LC)
                       ((case-lambda
                          ((g$t$8791$13P8LC)
                           ((case-lambda
                              ((g$ls/false$8792$13P8LC)
                               (if g$ls/false$8792$13P8LC
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$8792$13P8LC)
                                 ((case-lambda
                                    ((g$t$8793$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8794$13P8LC)
                                         (if g$ls/false$8794$13P8LC
                                           (apply
                                             (case-lambda
                                               ((g$x$8795$13P8LC
                                                  g$rest$8796$13P8LC
                                                  g$ls$8797$13P8LC)
                                                (if (g$free-id=?$7082$13P8LC
                                                      (g$bless$7319$13P8LC
                                                        g$id$8789$13P8LC)
                                                      g$x$8795$13P8LC)
                                                  (cons
                                                    g$x$8795$13P8LC
                                                    g$rest$8796$13P8LC)
                                                  (g$get-clause$8579$13P8LC
                                                    g$id$8789$13P8LC
                                                    g$ls$8797$13P8LC))))
                                             g$ls/false$8794$13P8LC)
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8793$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8793$13P8LC
                                        '((any . any) . any)))))
                                  g$t$8791$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$8791$13P8LC
                              '()))))
                        g$ls$8790$13P8LC))))
                  (g$foo-rtd-code$8580$13P8LC
                    (case-lambda
                      ((g$name$8748$13P8LC
                         g$clause*$8749$13P8LC
                         g$parent-rtd-code$8750$13P8LC)
                       (letrec* ((g$convert-field-spec*$8751$13P8LC
                                   (case-lambda
                                     ((g$ls$8776$13P8LC)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$8777$13P8LC)
                                                ((case-lambda
                                                   ((g$t$8778$13P8LC)
                                                    ((case-lambda
                                                       ((g$ls/false$8779$13P8LC)
                                                        (if g$ls/false$8779$13P8LC
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$8780$13P8LC
                                                                 g$rest$8781$13P8LC)
                                                               (list
                                                                 'mutable
                                                                 g$name$8780$13P8LC)))
                                                            g$ls/false$8779$13P8LC)
                                                          ((case-lambda
                                                             ((g$t$8782$13P8LC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8783$13P8LC)
                                                                  (if g$ls/false$8783$13P8LC
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$8784$13P8LC
                                                                           g$rest$8785$13P8LC)
                                                                         (list
                                                                           'immutable
                                                                           g$name$8784$13P8LC)))
                                                                      g$ls/false$8783$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$t$8786$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8787$13P8LC)
                                                                            (if g$ls/false$8787$13P8LC
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$8788$13P8LC)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$8788$13P8LC)))
                                                                                g$ls/false$8787$13P8LC)
                                                                              (g$syntax-violation$7465$13P8LC
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8786$13P8LC))))
                                                                         (g$syntax-dispatch$7356$13P8LC
                                                                           g$t$8786$13P8LC
                                                                           'any))))
                                                                     g$t$8782$13P8LC))))
                                                               (g$syntax-dispatch$7356$13P8LC
                                                                 g$t$8782$13P8LC
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$8778$13P8LC))))
                                                     (g$syntax-dispatch$7356$13P8LC
                                                       g$t$8778$13P8LC
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$8777$13P8LC)))
                                             g$ls$8776$13P8LC))))))
                         ((case-lambda
                            ((g$uid-code$8752$13P8LC
                               g$sealed?$8753$13P8LC
                               g$opaque?$8754$13P8LC
                               g$fields$8755$13P8LC)
                             (g$bless$7319$13P8LC
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8748$13P8LC)
                                 g$parent-rtd-code$8750$13P8LC
                                 g$uid-code$8752$13P8LC
                                 g$sealed?$8753$13P8LC
                                 g$opaque?$8754$13P8LC
                                 g$fields$8755$13P8LC))))
                          ((case-lambda
                             ((g$t$8756$13P8LC)
                              ((case-lambda
                                 ((g$ls/false$8757$13P8LC)
                                  (if g$ls/false$8757$13P8LC
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$8757$13P8LC)
                                    ((case-lambda
                                       ((g$t$8758$13P8LC)
                                        ((case-lambda
                                           ((g$ls/false$8759$13P8LC)
                                            (if g$ls/false$8759$13P8LC
                                              (apply
                                                (case-lambda
                                                  ((g$uid$8760$13P8LC)
                                                   (list
                                                     'quote
                                                     g$uid$8760$13P8LC)))
                                                g$ls/false$8759$13P8LC)
                                              ((case-lambda
                                                 ((g$t$8761$13P8LC)
                                                  ((case-lambda
                                                     ((g$ls/false$8762$13P8LC)
                                                      (if g$ls/false$8762$13P8LC
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$8762$13P8LC)
                                                        (g$syntax-violation$7465$13P8LC
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$8761$13P8LC))))
                                                   (g$syntax-dispatch$7356$13P8LC
                                                     g$t$8761$13P8LC
                                                     '_))))
                                               g$t$8758$13P8LC))))
                                         (g$syntax-dispatch$7356$13P8LC
                                           g$t$8758$13P8LC
                                           '(_ any)))))
                                     g$t$8756$13P8LC))))
                               (g$syntax-dispatch$7356$13P8LC
                                 g$t$8756$13P8LC
                                 '(_)))))
                           (g$get-clause$8579$13P8LC
                             'nongenerative
                             g$clause*$8749$13P8LC))
                          ((case-lambda
                             ((g$t$8763$13P8LC)
                              ((case-lambda
                                 ((g$ls/false$8764$13P8LC)
                                  (if g$ls/false$8764$13P8LC
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8764$13P8LC)
                                    ((case-lambda
                                       ((g$t$8765$13P8LC)
                                        ((case-lambda
                                           ((g$ls/false$8766$13P8LC)
                                            (if g$ls/false$8766$13P8LC
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8766$13P8LC)
                                              (g$syntax-violation$7465$13P8LC
                                                '#f
                                                '"invalid syntax"
                                                g$t$8765$13P8LC))))
                                         (g$syntax-dispatch$7356$13P8LC
                                           g$t$8765$13P8LC
                                           '_))))
                                     g$t$8763$13P8LC))))
                               (g$syntax-dispatch$7356$13P8LC
                                 g$t$8763$13P8LC
                                 '(_ #(atom #t))))))
                           (g$get-clause$8579$13P8LC
                             'sealed
                             g$clause*$8749$13P8LC))
                          ((case-lambda
                             ((g$t$8767$13P8LC)
                              ((case-lambda
                                 ((g$ls/false$8768$13P8LC)
                                  (if g$ls/false$8768$13P8LC
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8768$13P8LC)
                                    ((case-lambda
                                       ((g$t$8769$13P8LC)
                                        ((case-lambda
                                           ((g$ls/false$8770$13P8LC)
                                            (if g$ls/false$8770$13P8LC
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8770$13P8LC)
                                              (g$syntax-violation$7465$13P8LC
                                                '#f
                                                '"invalid syntax"
                                                g$t$8769$13P8LC))))
                                         (g$syntax-dispatch$7356$13P8LC
                                           g$t$8769$13P8LC
                                           '_))))
                                     g$t$8767$13P8LC))))
                               (g$syntax-dispatch$7356$13P8LC
                                 g$t$8767$13P8LC
                                 '(_ #(atom #t))))))
                           (g$get-clause$8579$13P8LC
                             'opaque
                             g$clause*$8749$13P8LC))
                          ((case-lambda
                             ((g$t$8771$13P8LC)
                              ((case-lambda
                                 ((g$ls/false$8772$13P8LC)
                                  (if g$ls/false$8772$13P8LC
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$8773$13P8LC)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8751$13P8LC
                                             g$field-spec*$8773$13P8LC))))
                                      g$ls/false$8772$13P8LC)
                                    ((case-lambda
                                       ((g$t$8774$13P8LC)
                                        ((case-lambda
                                           ((g$ls/false$8775$13P8LC)
                                            (if g$ls/false$8775$13P8LC
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$8775$13P8LC)
                                              (g$syntax-violation$7465$13P8LC
                                                '#f
                                                '"invalid syntax"
                                                g$t$8774$13P8LC))))
                                         (g$syntax-dispatch$7356$13P8LC
                                           g$t$8774$13P8LC
                                           '_))))
                                     g$t$8771$13P8LC))))
                               (g$syntax-dispatch$7356$13P8LC
                                 g$t$8771$13P8LC
                                 '(_ . each-any)))))
                           (g$get-clause$8579$13P8LC
                             'fields
                             g$clause*$8749$13P8LC)))))))
                  (g$parent-rtd-code$8581$13P8LC
                    (case-lambda
                      ((g$clause*$8736$13P8LC)
                       ((case-lambda
                          ((g$t$8737$13P8LC)
                           ((case-lambda
                              ((g$ls/false$8738$13P8LC)
                               (if g$ls/false$8738$13P8LC
                                 (apply
                                   (case-lambda
                                     ((g$name$8739$13P8LC)
                                      (list
                                        'record-type-descriptor
                                        g$name$8739$13P8LC)))
                                   g$ls/false$8738$13P8LC)
                                 ((case-lambda
                                    ((g$t$8740$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8741$13P8LC)
                                         (if g$ls/false$8741$13P8LC
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8742$13P8LC)
                                                    ((case-lambda
                                                       ((g$ls/false$8743$13P8LC)
                                                        (if g$ls/false$8743$13P8LC
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8744$13P8LC
                                                                 g$rcd$8745$13P8LC)
                                                               g$rtd$8744$13P8LC))
                                                            g$ls/false$8743$13P8LC)
                                                          ((case-lambda
                                                             ((g$t$8746$13P8LC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8747$13P8LC)
                                                                  (if g$ls/false$8747$13P8LC
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8747$13P8LC)
                                                                    (g$syntax-violation$7465$13P8LC
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8746$13P8LC))))
                                                               (g$syntax-dispatch$7356$13P8LC
                                                                 g$t$8746$13P8LC
                                                                 '#(atom #f)))))
                                                           g$t$8742$13P8LC))))
                                                     (g$syntax-dispatch$7356$13P8LC
                                                       g$t$8742$13P8LC
                                                       '(_ any any)))))
                                                 (g$get-clause$8579$13P8LC
                                                   'parent-rtd
                                                   g$clause*$8736$13P8LC))))
                                             g$ls/false$8741$13P8LC)
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8740$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8740$13P8LC
                                        '#(atom #f)))))
                                  g$t$8737$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$8737$13P8LC
                              '(_ any)))))
                        (g$get-clause$8579$13P8LC
                          'parent
                          g$clause*$8736$13P8LC)))))
                  (g$parent-rcd-code$8582$13P8LC
                    (case-lambda
                      ((g$clause*$8724$13P8LC)
                       ((case-lambda
                          ((g$t$8725$13P8LC)
                           ((case-lambda
                              ((g$ls/false$8726$13P8LC)
                               (if g$ls/false$8726$13P8LC
                                 (apply
                                   (case-lambda
                                     ((g$name$8727$13P8LC)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$8727$13P8LC)))
                                   g$ls/false$8726$13P8LC)
                                 ((case-lambda
                                    ((g$t$8728$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8729$13P8LC)
                                         (if g$ls/false$8729$13P8LC
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8730$13P8LC)
                                                    ((case-lambda
                                                       ((g$ls/false$8731$13P8LC)
                                                        (if g$ls/false$8731$13P8LC
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8732$13P8LC
                                                                 g$rcd$8733$13P8LC)
                                                               g$rcd$8733$13P8LC))
                                                            g$ls/false$8731$13P8LC)
                                                          ((case-lambda
                                                             ((g$t$8734$13P8LC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8735$13P8LC)
                                                                  (if g$ls/false$8735$13P8LC
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8735$13P8LC)
                                                                    (g$syntax-violation$7465$13P8LC
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8734$13P8LC))))
                                                               (g$syntax-dispatch$7356$13P8LC
                                                                 g$t$8734$13P8LC
                                                                 '#(atom #f)))))
                                                           g$t$8730$13P8LC))))
                                                     (g$syntax-dispatch$7356$13P8LC
                                                       g$t$8730$13P8LC
                                                       '(_ any any)))))
                                                 (g$get-clause$8579$13P8LC
                                                   'parent-rtd
                                                   g$clause*$8724$13P8LC))))
                                             g$ls/false$8729$13P8LC)
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8728$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8728$13P8LC
                                        '#(atom #f)))))
                                  g$t$8725$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$8725$13P8LC
                              '(_ any)))))
                        (g$get-clause$8579$13P8LC
                          'parent
                          g$clause*$8724$13P8LC)))))
                  (g$foo-rcd-code$8583$13P8LC
                    (case-lambda
                      ((g$clause*$8720$13P8LC
                         g$foo-rtd$8721$13P8LC
                         g$protocol$8722$13P8LC
                         g$parent-rcd-code$8723$13P8LC)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$8721$13P8LC
                         g$parent-rcd-code$8723$13P8LC
                         g$protocol$8722$13P8LC))))
                  (g$get-protocol-code$8584$13P8LC
                    (case-lambda
                      ((g$clause*$8714$13P8LC)
                       ((case-lambda
                          ((g$t$8715$13P8LC)
                           ((case-lambda
                              ((g$ls/false$8716$13P8LC)
                               (if g$ls/false$8716$13P8LC
                                 (apply
                                   (case-lambda
                                     ((g$expr$8717$13P8LC) g$expr$8717$13P8LC))
                                   g$ls/false$8716$13P8LC)
                                 ((case-lambda
                                    ((g$t$8718$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8719$13P8LC)
                                         (if g$ls/false$8719$13P8LC
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8719$13P8LC)
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid syntax"
                                             g$t$8718$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8718$13P8LC
                                        '_))))
                                  g$t$8715$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$8715$13P8LC
                              '(_ any)))))
                        (g$get-clause$8579$13P8LC
                          'protocol
                          g$clause*$8714$13P8LC)))))
                  (g$get-fields$8585$13P8LC
                    (case-lambda
                      ((g$clause*$8705$13P8LC)
                       ((case-lambda
                          ((g$t$8706$13P8LC)
                           ((case-lambda
                              ((g$ls/false$8707$13P8LC)
                               (if g$ls/false$8707$13P8LC
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8707$13P8LC)
                                 ((case-lambda
                                    ((g$t$8708$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8709$13P8LC)
                                         (if g$ls/false$8709$13P8LC
                                           (apply
                                             (case-lambda
                                               ((g$f*$8710$13P8LC)
                                                g$f*$8710$13P8LC))
                                             g$ls/false$8709$13P8LC)
                                           ((case-lambda
                                              ((g$t$8711$13P8LC)
                                               ((case-lambda
                                                  ((g$ls/false$8712$13P8LC)
                                                   (if g$ls/false$8712$13P8LC
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8713$13P8LC)
                                                          (g$get-fields$8585$13P8LC
                                                            g$rest$8713$13P8LC)))
                                                       g$ls/false$8712$13P8LC)
                                                     (g$syntax-violation$7465$13P8LC
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8711$13P8LC))))
                                                (g$syntax-dispatch$7356$13P8LC
                                                  g$t$8711$13P8LC
                                                  '(_ . any)))))
                                            g$t$8708$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8708$13P8LC
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8706$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$8706$13P8LC
                              '()))))
                        g$clause*$8705$13P8LC))))
                  (g$get-mutator-indices$8586$13P8LC
                    (case-lambda
                      ((g$fields$8693$13P8LC)
                       ((letrec ((g$f$8694$13P8LC
                                   (case-lambda
                                     ((g$fields$8695$13P8LC g$i$8696$13P8LC)
                                      ((case-lambda
                                         ((g$t$8697$13P8LC)
                                          ((case-lambda
                                             ((g$ls/false$8698$13P8LC)
                                              (if g$ls/false$8698$13P8LC
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8698$13P8LC)
                                                ((case-lambda
                                                   ((g$t$8699$13P8LC)
                                                    ((case-lambda
                                                       ((g$ls/false$8700$13P8LC)
                                                        (if g$ls/false$8700$13P8LC
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8701$13P8LC)
                                                               (cons
                                                                 g$i$8696$13P8LC
                                                                 (g$f$8694$13P8LC
                                                                   g$rest$8701$13P8LC
                                                                   (+ g$i$8696$13P8LC
                                                                      '1)))))
                                                            g$ls/false$8700$13P8LC)
                                                          ((case-lambda
                                                             ((g$t$8702$13P8LC)
                                                              ((case-lambda
                                                                 ((g$ls/false$8703$13P8LC)
                                                                  (if g$ls/false$8703$13P8LC
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8704$13P8LC)
                                                                         (g$f$8694$13P8LC
                                                                           g$rest$8704$13P8LC
                                                                           (+ g$i$8696$13P8LC
                                                                              '1))))
                                                                      g$ls/false$8703$13P8LC)
                                                                    (g$syntax-violation$7465$13P8LC
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8702$13P8LC))))
                                                               (g$syntax-dispatch$7356$13P8LC
                                                                 g$t$8702$13P8LC
                                                                 '(_ . any)))))
                                                           g$t$8699$13P8LC))))
                                                     (g$syntax-dispatch$7356$13P8LC
                                                       g$t$8699$13P8LC
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8697$13P8LC))))
                                           (g$syntax-dispatch$7356$13P8LC
                                             g$t$8697$13P8LC
                                             '()))))
                                       g$fields$8695$13P8LC)))))
                          g$f$8694$13P8LC)
                        g$fields$8693$13P8LC
                        '0))))
                  (g$get-mutators$8587$13P8LC
                    (case-lambda
                      ((g$foo$8672$13P8LC g$fields$8673$13P8LC)
                       (letrec* ((g$gen-name$8674$13P8LC
                                   (case-lambda
                                     ((g$x$8692$13P8LC)
                                      (g$datum->syntax$7467$13P8LC
                                        g$foo$8672$13P8LC
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7468$13P8LC
                                                g$foo$8672$13P8LC))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7468$13P8LC
                                                g$x$8692$13P8LC))
                                            '"-set!")))))))
                         ((letrec ((g$f$8675$13P8LC
                                     (case-lambda
                                       ((g$fields$8676$13P8LC)
                                        ((case-lambda
                                           ((g$t$8677$13P8LC)
                                            ((case-lambda
                                               ((g$ls/false$8678$13P8LC)
                                                (if g$ls/false$8678$13P8LC
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8678$13P8LC)
                                                  ((case-lambda
                                                     ((g$t$8679$13P8LC)
                                                      ((case-lambda
                                                         ((g$ls/false$8680$13P8LC)
                                                          (if g$ls/false$8680$13P8LC
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8681$13P8LC
                                                                   g$accessor$8682$13P8LC
                                                                   g$mutator$8683$13P8LC
                                                                   g$rest$8684$13P8LC)
                                                                 (cons
                                                                   g$mutator$8683$13P8LC
                                                                   (g$f$8675$13P8LC
                                                                     g$rest$8684$13P8LC))))
                                                              g$ls/false$8680$13P8LC)
                                                            ((case-lambda
                                                               ((g$t$8685$13P8LC)
                                                                ((case-lambda
                                                                   ((g$ls/false$8686$13P8LC)
                                                                    (if g$ls/false$8686$13P8LC
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8687$13P8LC
                                                                             g$rest$8688$13P8LC)
                                                                           (cons
                                                                             (g$gen-name$8674$13P8LC
                                                                               g$name$8687$13P8LC)
                                                                             (g$f$8675$13P8LC
                                                                               g$rest$8688$13P8LC))))
                                                                        g$ls/false$8686$13P8LC)
                                                                      ((case-lambda
                                                                         ((g$t$8689$13P8LC)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8690$13P8LC)
                                                                              (if g$ls/false$8690$13P8LC
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8691$13P8LC)
                                                                                     (g$f$8675$13P8LC
                                                                                       g$rest$8691$13P8LC)))
                                                                                  g$ls/false$8690$13P8LC)
                                                                                (g$syntax-violation$7465$13P8LC
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8689$13P8LC))))
                                                                           (g$syntax-dispatch$7356$13P8LC
                                                                             g$t$8689$13P8LC
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8685$13P8LC))))
                                                                 (g$syntax-dispatch$7356$13P8LC
                                                                   g$t$8685$13P8LC
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8679$13P8LC))))
                                                       (g$syntax-dispatch$7356$13P8LC
                                                         g$t$8679$13P8LC
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8677$13P8LC))))
                                             (g$syntax-dispatch$7356$13P8LC
                                               g$t$8677$13P8LC
                                               '()))))
                                         g$fields$8676$13P8LC)))))
                            g$f$8675$13P8LC)
                          g$fields$8673$13P8LC)))))
                  (g$get-accessors$8588$13P8LC
                    (case-lambda
                      ((g$foo$8638$13P8LC g$fields$8639$13P8LC)
                       (letrec* ((g$gen-name$8640$13P8LC
                                   (case-lambda
                                     ((g$x$8671$13P8LC)
                                      (g$datum->syntax$7467$13P8LC
                                        g$foo$8638$13P8LC
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7468$13P8LC
                                                g$foo$8638$13P8LC))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7468$13P8LC
                                                g$x$8671$13P8LC)))))))))
                         (map (case-lambda
                                ((g$field$8641$13P8LC)
                                 ((case-lambda
                                    ((g$t$8642$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8643$13P8LC)
                                         (if (if g$ls/false$8643$13P8LC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8644$13P8LC
                                                        g$accessor$8645$13P8LC
                                                        g$mutator$8646$13P8LC)
                                                      (g$id?$7078$13P8LC
                                                        g$accessor$8645$13P8LC)))
                                                   g$ls/false$8643$13P8LC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8647$13P8LC
                                                  g$accessor$8648$13P8LC
                                                  g$mutator$8649$13P8LC)
                                                g$accessor$8648$13P8LC))
                                             g$ls/false$8643$13P8LC)
                                           ((case-lambda
                                              ((g$t$8650$13P8LC)
                                               ((case-lambda
                                                  ((g$ls/false$8651$13P8LC)
                                                   (if (if g$ls/false$8651$13P8LC
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8652$13P8LC
                                                                  g$accessor$8653$13P8LC)
                                                                (g$id?$7078$13P8LC
                                                                  g$accessor$8653$13P8LC)))
                                                             g$ls/false$8651$13P8LC))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8654$13P8LC
                                                            g$accessor$8655$13P8LC)
                                                          g$accessor$8655$13P8LC))
                                                       g$ls/false$8651$13P8LC)
                                                     ((case-lambda
                                                        ((g$t$8656$13P8LC)
                                                         ((case-lambda
                                                            ((g$ls/false$8657$13P8LC)
                                                             (if (if g$ls/false$8657$13P8LC
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8658$13P8LC)
                                                                          (g$id?$7078$13P8LC
                                                                            g$name$8658$13P8LC)))
                                                                       g$ls/false$8657$13P8LC))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8659$13P8LC)
                                                                    (g$gen-name$8640$13P8LC
                                                                      g$name$8659$13P8LC)))
                                                                 g$ls/false$8657$13P8LC)
                                                               ((case-lambda
                                                                  ((g$t$8660$13P8LC)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8661$13P8LC)
                                                                       (if (if g$ls/false$8661$13P8LC
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8662$13P8LC)
                                                                                    (g$id?$7078$13P8LC
                                                                                      g$name$8662$13P8LC)))
                                                                                 g$ls/false$8661$13P8LC))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8663$13P8LC)
                                                                              (g$gen-name$8640$13P8LC
                                                                                g$name$8663$13P8LC)))
                                                                           g$ls/false$8661$13P8LC)
                                                                         ((case-lambda
                                                                            ((g$t$8664$13P8LC)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8665$13P8LC)
                                                                                 (if (if g$ls/false$8665$13P8LC
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8666$13P8LC)
                                                                                              (g$id?$7078$13P8LC
                                                                                                g$name$8666$13P8LC)))
                                                                                           g$ls/false$8665$13P8LC))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8667$13P8LC)
                                                                                        (g$gen-name$8640$13P8LC
                                                                                          g$name$8667$13P8LC)))
                                                                                     g$ls/false$8665$13P8LC)
                                                                                   ((case-lambda
                                                                                      ((g$t$8668$13P8LC)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8669$13P8LC)
                                                                                           (if g$ls/false$8669$13P8LC
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8670$13P8LC)
                                                                                                  (g$syntax-violation$7465$13P8LC
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8641$13P8LC)))
                                                                                               g$ls/false$8669$13P8LC)
                                                                                             (g$syntax-violation$7465$13P8LC
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8668$13P8LC))))
                                                                                        (g$syntax-dispatch$7356$13P8LC
                                                                                          g$t$8668$13P8LC
                                                                                          'any))))
                                                                                    g$t$8664$13P8LC))))
                                                                              (g$syntax-dispatch$7356$13P8LC
                                                                                g$t$8664$13P8LC
                                                                                'any))))
                                                                          g$t$8660$13P8LC))))
                                                                    (g$syntax-dispatch$7356$13P8LC
                                                                      g$t$8660$13P8LC
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8656$13P8LC))))
                                                          (g$syntax-dispatch$7356$13P8LC
                                                            g$t$8656$13P8LC
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8650$13P8LC))))
                                                (g$syntax-dispatch$7356$13P8LC
                                                  g$t$8650$13P8LC
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8642$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8642$13P8LC
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8641$13P8LC)))
                              g$fields$8639$13P8LC)))))
                  (g$enumerate$8589$13P8LC
                    (case-lambda
                      ((g$ls$8634$13P8LC)
                       ((letrec ((g$f$8635$13P8LC
                                   (case-lambda
                                     ((g$ls$8636$13P8LC g$i$8637$13P8LC)
                                      (if (null? g$ls$8636$13P8LC)
                                        '()
                                        (cons
                                          g$i$8637$13P8LC
                                          (g$f$8635$13P8LC
                                            (cdr g$ls$8636$13P8LC)
                                            (+ g$i$8637$13P8LC '1))))))))
                          g$f$8635$13P8LC)
                        g$ls$8634$13P8LC
                        '0))))
                  (g$do-define-record$8590$13P8LC
                    (case-lambda
                      ((g$namespec$8614$13P8LC g$clause*$8615$13P8LC)
                       ((case-lambda
                          ((g$foo$8616$13P8LC)
                           ((case-lambda
                              ((g$foo-rtd$8617$13P8LC)
                               ((case-lambda
                                  ((g$foo-rcd$8618$13P8LC)
                                   ((case-lambda
                                      ((g$protocol$8619$13P8LC)
                                       ((case-lambda
                                          ((g$make-foo$8620$13P8LC)
                                           ((case-lambda
                                              ((g$fields$8621$13P8LC)
                                               ((case-lambda
                                                  ((g$idx*$8622$13P8LC)
                                                   ((case-lambda
                                                      ((g$foo-x*$8623$13P8LC)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8624$13P8LC)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8625$13P8LC)
                                                               ((case-lambda
                                                                  ((g$foo?$8626$13P8LC)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8627$13P8LC)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8628$13P8LC)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8629$13P8LC)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7319$13P8LC
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8617$13P8LC
                                                                                           g$foo-rtd-code$8627$13P8LC)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8619$13P8LC
                                                                                             g$protocol-code$8629$13P8LC)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8618$13P8LC
                                                                                               g$foo-rcd-code$8628$13P8LC)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8616$13P8LC
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8617$13P8LC)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8618$13P8LC)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8626$13P8LC
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8617$13P8LC))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8620$13P8LC
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8618$13P8LC))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8630$13P8LC
                                                                                                               g$idx$8631$13P8LC)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8630$13P8LC
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8617$13P8LC
                                                                                                                 g$idx$8631$13P8LC))))
                                                                                                          g$foo-x*$8623$13P8LC
                                                                                                          g$idx*$8622$13P8LC)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8632$13P8LC
                                                                                                               g$idx$8633$13P8LC)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8632$13P8LC
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8617$13P8LC
                                                                                                                 g$idx$8633$13P8LC))))
                                                                                                          g$set-foo-x!*$8624$13P8LC
                                                                                                          g$set-foo-idx*$8625$13P8LC)))))))))))))))
                                                                            (g$get-protocol-code$8584$13P8LC
                                                                              g$clause*$8615$13P8LC))))
                                                                        (g$foo-rcd-code$8583$13P8LC
                                                                          g$clause*$8615$13P8LC
                                                                          g$foo-rtd$8617$13P8LC
                                                                          g$protocol$8619$13P8LC
                                                                          (g$parent-rcd-code$8582$13P8LC
                                                                            g$clause*$8615$13P8LC)))))
                                                                    (g$foo-rtd-code$8580$13P8LC
                                                                      g$foo$8616$13P8LC
                                                                      g$clause*$8615$13P8LC
                                                                      (g$parent-rtd-code$8581$13P8LC
                                                                        g$clause*$8615$13P8LC)))))
                                                                (g$get-record-predicate-name$8578$13P8LC
                                                                  g$namespec$8614$13P8LC))))
                                                            (g$get-mutator-indices$8586$13P8LC
                                                              g$fields$8621$13P8LC))))
                                                        (g$get-mutators$8587$13P8LC
                                                          g$foo$8616$13P8LC
                                                          g$fields$8621$13P8LC))))
                                                    (g$get-accessors$8588$13P8LC
                                                      g$foo$8616$13P8LC
                                                      g$fields$8621$13P8LC))))
                                                (g$enumerate$8589$13P8LC
                                                  g$fields$8621$13P8LC))))
                                            (g$get-fields$8585$13P8LC
                                              g$clause*$8615$13P8LC))))
                                        (g$get-record-constructor-name$8577$13P8LC
                                          g$namespec$8614$13P8LC))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8576$13P8LC
                          g$namespec$8614$13P8LC)))))
                  (g$verify-clauses$8591$13P8LC
                    (case-lambda
                      ((g$x$8596$13P8LC g$cls*$8597$13P8LC)
                       (letrec* ((g$valid-kwds$8598$13P8LC
                                   (map g$bless$7319$13P8LC
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8599$13P8LC
                                   (case-lambda
                                     ((g$x$8611$13P8LC g$ls$8612$13P8LC)
                                      (if (pair? g$ls$8612$13P8LC)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8613$13P8LC)
                                              (if g$t$8613$13P8LC
                                                g$t$8613$13P8LC
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8599$13P8LC
                                                    g$x$8611$13P8LC
                                                    (cdr g$ls$8612$13P8LC))))))
                                           (g$free-id=?$7082$13P8LC
                                             g$x$8611$13P8LC
                                             (car g$ls$8612$13P8LC))))
                                        '#f)))))
                         ((letrec ((g$f$8600$13P8LC
                                     (case-lambda
                                       ((g$cls*$8601$13P8LC g$seen*$8602$13P8LC)
                                        (if (not (null? g$cls*$8601$13P8LC))
                                          ((case-lambda
                                             ((g$t$8603$13P8LC)
                                              ((case-lambda
                                                 ((g$ls/false$8604$13P8LC)
                                                  (if g$ls/false$8604$13P8LC
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8605$13P8LC
                                                           g$rest$8606$13P8LC)
                                                         (if ((case-lambda
                                                                ((g$t$8607$13P8LC)
                                                                 (if g$t$8607$13P8LC
                                                                   g$t$8607$13P8LC
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8599$13P8LC
                                                                            g$kwd$8605$13P8LC
                                                                            g$valid-kwds$8598$13P8LC))))))
                                                              (not (g$id?$7078$13P8LC
                                                                     g$kwd$8605$13P8LC)))
                                                           (g$syntax-violation$7465$13P8LC
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8605$13P8LC)
                                                           (if (g$bound-id-member?$7085$13P8LC
                                                                 g$kwd$8605$13P8LC
                                                                 g$seen*$8602$13P8LC)
                                                             (g$syntax-violation$7465$13P8LC
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8596$13P8LC
                                                               g$kwd$8605$13P8LC)
                                                             (g$f$8600$13P8LC
                                                               (cdr g$cls*$8601$13P8LC)
                                                               (cons
                                                                 g$kwd$8605$13P8LC
                                                                 g$seen*$8602$13P8LC))))))
                                                      g$ls/false$8604$13P8LC)
                                                    ((case-lambda
                                                       ((g$t$8608$13P8LC)
                                                        ((case-lambda
                                                           ((g$ls/false$8609$13P8LC)
                                                            (if g$ls/false$8609$13P8LC
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8610$13P8LC)
                                                                   (g$syntax-violation$7465$13P8LC
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8610$13P8LC)))
                                                                g$ls/false$8609$13P8LC)
                                                              (g$syntax-violation$7465$13P8LC
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8608$13P8LC))))
                                                         (g$syntax-dispatch$7356$13P8LC
                                                           g$t$8608$13P8LC
                                                           'any))))
                                                     g$t$8603$13P8LC))))
                                               (g$syntax-dispatch$7356$13P8LC
                                                 g$t$8603$13P8LC
                                                 '(any . any)))))
                                           (car g$cls*$8601$13P8LC))
                                          (void))))))
                            g$f$8600$13P8LC)
                          g$cls*$8597$13P8LC
                          '()))))))
          ((case-lambda
             ((g$t$8592$13P8LC)
              ((case-lambda
                 ((g$ls/false$8593$13P8LC)
                  (if g$ls/false$8593$13P8LC
                    (apply
                      (case-lambda
                        ((g$namespec$8594$13P8LC g$clause*$8595$13P8LC)
                         (begin
                           (g$verify-clauses$8591$13P8LC
                             g$x$8574$13P8LC
                             g$clause*$8595$13P8LC)
                           (g$do-define-record$8590$13P8LC
                             g$namespec$8594$13P8LC
                             g$clause*$8595$13P8LC))))
                      g$ls/false$8593$13P8LC)
                    (g$syntax-violation$7465$13P8LC
                      '#f
                      '"invalid syntax"
                      g$t$8592$13P8LC))))
               (g$syntax-dispatch$7356$13P8LC
                 g$t$8592$13P8LC
                 '(_ any . each-any)))))
           g$x$8574$13P8LC)))))
   (g$define-condition-type-macro$7351$13P8LC
     g$define-condition-type-macro$10787$13P8LC
     (case-lambda
       ((g$x$8830$13P8LC)
        (letrec* ((g$mkname$8831$13P8LC
                    (case-lambda
                      ((g$name$8854$13P8LC g$suffix$8855$13P8LC)
                       (g$datum->syntax$7467$13P8LC
                         g$name$8854$13P8LC
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7468$13P8LC g$name$8854$13P8LC))
                             g$suffix$8855$13P8LC)))))))
          ((case-lambda
             ((g$t$8832$13P8LC)
              ((case-lambda
                 ((g$ls/false$8833$13P8LC)
                  (if (if g$ls/false$8833$13P8LC
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$8834$13P8LC
                                 g$name$8835$13P8LC
                                 g$super$8836$13P8LC
                                 g$constructor$8837$13P8LC
                                 g$predicate$8838$13P8LC
                                 g$field*$8839$13P8LC
                                 g$accessor*$8840$13P8LC)
                               (if (g$id?$7078$13P8LC g$name$8835$13P8LC)
                                 (if (g$id?$7078$13P8LC g$super$8836$13P8LC)
                                   (if (g$id?$7078$13P8LC
                                         g$constructor$8837$13P8LC)
                                     (if (g$id?$7078$13P8LC
                                           g$predicate$8838$13P8LC)
                                       (if (g$for-all$5356$13P8LC
                                             g$id?$7078$13P8LC
                                             g$field*$8839$13P8LC)
                                         (begin
                                           '#f
                                           (g$for-all$5356$13P8LC
                                             g$id?$7078$13P8LC
                                             g$accessor*$8840$13P8LC))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$8833$13P8LC))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$8841$13P8LC
                           g$name$8842$13P8LC
                           g$super$8843$13P8LC
                           g$constructor$8844$13P8LC
                           g$predicate$8845$13P8LC
                           g$field*$8846$13P8LC
                           g$accessor*$8847$13P8LC)
                         ((case-lambda
                            ((g$aux-accessor*$8848$13P8LC)
                             (g$bless$7319$13P8LC
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$8842$13P8LC
                                         g$constructor$8844$13P8LC
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$8843$13P8LC)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$8849$13P8LC
                                                       g$aux$8850$13P8LC)
                                                     (list
                                                       'immutable
                                                       g$field$8849$13P8LC
                                                       g$aux$8850$13P8LC)))
                                                  g$field*$8846$13P8LC
                                                  g$aux-accessor*$8848$13P8LC))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$8845$13P8LC
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$8842$13P8LC)))
                                     (map (case-lambda
                                            ((g$accessor$8851$13P8LC
                                               g$aux$8852$13P8LC)
                                             (list
                                               'define
                                               g$accessor$8851$13P8LC
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$8842$13P8LC)
                                                 g$aux$8852$13P8LC))))
                                          g$accessor*$8847$13P8LC
                                          g$aux-accessor*$8848$13P8LC)))))))
                          (map (case-lambda ((g$x$8853$13P8LC) (gensym)))
                               g$accessor*$8847$13P8LC))))
                      g$ls/false$8833$13P8LC)
                    (g$syntax-violation$7465$13P8LC
                      '#f
                      '"invalid syntax"
                      g$t$8832$13P8LC))))
               (g$syntax-dispatch$7356$13P8LC
                 g$t$8832$13P8LC
                 '(any any any any any . #(each (any any)))))))
           g$x$8830$13P8LC)))))
   (g$incorrect-usage-macro$7352$13P8LC
     g$incorrect-usage-macro$10788$13P8LC
     (case-lambda
       ((g$e$8856$13P8LC)
        (g$syntax-violation$7465$13P8LC
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$8856$13P8LC))))
   (g$parameterize-macro$7353$13P8LC
     g$parameterize-macro$10789$13P8LC
     (case-lambda
       ((g$e$8857$13P8LC)
        ((case-lambda
           ((g$t$8858$13P8LC)
            ((case-lambda
               ((g$ls/false$8859$13P8LC)
                (if g$ls/false$8859$13P8LC
                  (apply
                    (case-lambda
                      ((g$b$8860$13P8LC g$b*$8861$13P8LC)
                       (g$bless$7319$13P8LC
                         (cons
                           'begin
                           (cons g$b$8860$13P8LC g$b*$8861$13P8LC)))))
                    g$ls/false$8859$13P8LC)
                  ((case-lambda
                     ((g$t$8862$13P8LC)
                      ((case-lambda
                         ((g$ls/false$8863$13P8LC)
                          (if g$ls/false$8863$13P8LC
                            (apply
                              (case-lambda
                                ((g$olhs*$8864$13P8LC
                                   g$orhs*$8865$13P8LC
                                   g$b$8866$13P8LC
                                   g$b*$8867$13P8LC)
                                 ((case-lambda
                                    ((g$lhs*$8868$13P8LC g$rhs*$8869$13P8LC)
                                     (g$bless$7319$13P8LC
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$8868$13P8LC
                                             g$rhs*$8869$13P8LC)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$8870$13P8LC
                                                               g$rhs$8871$13P8LC)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$8870$13P8LC)))
                                                               (list
                                                                 g$lhs$8870$13P8LC
                                                                 g$rhs$8871$13P8LC)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$8871$13P8LC
                                                                   '(t))))))
                                                          g$lhs*$8868$13P8LC
                                                          g$rhs*$8869$13P8LC)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$8866$13P8LC
                                                         g$b*$8867$13P8LC)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$8864$13P8LC
                                           g$orhs*$8865$13P8LC)))))
                                  (g$generate-temporaries$7455$13P8LC
                                    g$olhs*$8864$13P8LC)
                                  (g$generate-temporaries$7455$13P8LC
                                    g$orhs*$8865$13P8LC))))
                              g$ls/false$8863$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$8862$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$8862$13P8LC
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$8858$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$8858$13P8LC
               '(_ () any . each-any)))))
         g$e$8857$13P8LC))))
   (g$foreign-call-transformer$7354$13P8LC
     g$foreign-call-transformer$10790$13P8LC
     (case-lambda
       ((g$e$8872$13P8LC g$r$8873$13P8LC g$mr$8874$13P8LC)
        ((case-lambda
           ((g$t$8875$13P8LC)
            ((case-lambda
               ((g$ls/false$8876$13P8LC)
                (if g$ls/false$8876$13P8LC
                  (apply
                    (case-lambda
                      ((g$name$8877$13P8LC g$arg*$8878$13P8LC)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7374$13P8LC
                             g$name$8877$13P8LC
                             g$r$8873$13P8LC
                             g$mr$8874$13P8LC)
                           (g$chi-expr*$7372$13P8LC
                             g$arg*$8878$13P8LC
                             g$r$8873$13P8LC
                             g$mr$8874$13P8LC)))))
                    g$ls/false$8876$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$8875$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$8875$13P8LC
               '(_ any . each-any)))))
         g$e$8872$13P8LC))))
   (g$convert-pattern$7355$13P8LC
     g$convert-pattern$10791$13P8LC
     (case-lambda
       ((g$pattern$8879$13P8LC g$keys$8880$13P8LC)
        (letrec* ((g$cvt*$8881$13P8LC
                    (case-lambda
                      ((g$p*$8961$13P8LC g$n$8962$13P8LC g$ids$8963$13P8LC)
                       (if (null? g$p*$8961$13P8LC)
                         (values '() g$ids$8963$13P8LC)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$8881$13P8LC
                                (cdr g$p*$8961$13P8LC)
                                g$n$8962$13P8LC
                                g$ids$8963$13P8LC)))
                           (case-lambda
                             ((g$y$8966$13P8LC g$ids$8967$13P8LC)
                              ((case-lambda
                                 ((g$ids$8968$13P8LC g$y$8969$13P8LC)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$8882$13P8LC
                                         (car g$p*$8961$13P8LC)
                                         g$n$8962$13P8LC
                                         g$ids$8968$13P8LC)))
                                    (case-lambda
                                      ((g$x$8972$13P8LC g$ids$8973$13P8LC)
                                       ((case-lambda
                                          ((g$ids$8974$13P8LC g$x$8975$13P8LC)
                                           (values
                                             (cons
                                               g$x$8975$13P8LC
                                               g$y$8969$13P8LC)
                                             g$ids$8974$13P8LC)))
                                        g$ids$8973$13P8LC
                                        g$x$8972$13P8LC))))))
                               g$ids$8967$13P8LC
                               g$y$8966$13P8LC))))))))
                  (g$cvt$8882$13P8LC
                    (case-lambda
                      ((g$p$8883$13P8LC g$n$8884$13P8LC g$ids$8885$13P8LC)
                       ((case-lambda
                          ((g$t$8886$13P8LC)
                           ((case-lambda
                              ((g$ls/false$8887$13P8LC)
                               (if (if g$ls/false$8887$13P8LC
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$8888$13P8LC)
                                            (g$id?$7078$13P8LC
                                              g$id$8888$13P8LC)))
                                         g$ls/false$8887$13P8LC))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$8889$13P8LC)
                                      (if (g$bound-id-member?$7085$13P8LC
                                            g$p$8883$13P8LC
                                            g$keys$8880$13P8LC)
                                        (values
                                          (vector 'free-id g$p$8883$13P8LC)
                                          g$ids$8885$13P8LC)
                                        (if (g$free-id=?$7082$13P8LC
                                              g$p$8883$13P8LC
                                              (g$scheme-stx$7299$13P8LC '_))
                                          (values '_ g$ids$8885$13P8LC)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$8883$13P8LC
                                                g$n$8884$13P8LC)
                                              g$ids$8885$13P8LC))))))
                                   g$ls/false$8887$13P8LC)
                                 ((case-lambda
                                    ((g$t$8890$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$8891$13P8LC)
                                         (if (if g$ls/false$8891$13P8LC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8892$13P8LC
                                                        g$dots$8893$13P8LC)
                                                      (g$ellipsis?$7357$13P8LC
                                                        g$dots$8893$13P8LC)))
                                                   g$ls/false$8891$13P8LC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$8894$13P8LC
                                                  g$dots$8895$13P8LC)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$8882$13P8LC
                                                       g$p$8894$13P8LC
                                                       (+ g$n$8884$13P8LC '1)
                                                       g$ids$8885$13P8LC)))
                                                  (case-lambda
                                                    ((g$p$8898$13P8LC
                                                       g$ids$8899$13P8LC)
                                                     ((case-lambda
                                                        ((g$ids$8900$13P8LC
                                                           g$p$8901$13P8LC)
                                                         (values
                                                           (if (eq? g$p$8901$13P8LC
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$8901$13P8LC))
                                                           g$ids$8900$13P8LC)))
                                                      g$ids$8899$13P8LC
                                                      g$p$8898$13P8LC))))))
                                             g$ls/false$8891$13P8LC)
                                           ((case-lambda
                                              ((g$t$8902$13P8LC)
                                               ((case-lambda
                                                  ((g$ls/false$8903$13P8LC)
                                                   (if (if g$ls/false$8903$13P8LC
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$8904$13P8LC
                                                                  g$dots$8905$13P8LC
                                                                  g$ys$8906$13P8LC
                                                                  g$z$8907$13P8LC)
                                                                (g$ellipsis?$7357$13P8LC
                                                                  g$dots$8905$13P8LC)))
                                                             g$ls/false$8903$13P8LC))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$8908$13P8LC
                                                            g$dots$8909$13P8LC
                                                            g$ys$8910$13P8LC
                                                            g$z$8911$13P8LC)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$8882$13P8LC
                                                                 g$z$8911$13P8LC
                                                                 g$n$8884$13P8LC
                                                                 g$ids$8885$13P8LC)))
                                                            (case-lambda
                                                              ((g$z$8914$13P8LC
                                                                 g$ids$8915$13P8LC)
                                                               ((case-lambda
                                                                  ((g$ids$8916$13P8LC
                                                                     g$z$8917$13P8LC)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$8881$13P8LC
                                                                          g$ys$8910$13P8LC
                                                                          g$n$8884$13P8LC
                                                                          g$ids$8916$13P8LC)))
                                                                     (case-lambda
                                                                       ((g$ys$8920$13P8LC
                                                                          g$ids$8921$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$ids$8922$13P8LC
                                                                              g$ys$8923$13P8LC)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$8882$13P8LC
                                                                                   g$x$8908$13P8LC
                                                                                   (+ g$n$8884$13P8LC
                                                                                      '1)
                                                                                   g$ids$8922$13P8LC)))
                                                                              (case-lambda
                                                                                ((g$x$8926$13P8LC
                                                                                   g$ids$8927$13P8LC)
                                                                                 ((case-lambda
                                                                                    ((g$ids$8928$13P8LC
                                                                                       g$x$8929$13P8LC)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$8929$13P8LC
                                                                                         (reverse
                                                                                           g$ys$8923$13P8LC)
                                                                                         g$z$8917$13P8LC)
                                                                                       g$ids$8928$13P8LC)))
                                                                                  g$ids$8927$13P8LC
                                                                                  g$x$8926$13P8LC))))))
                                                                         g$ids$8921$13P8LC
                                                                         g$ys$8920$13P8LC))))))
                                                                g$ids$8915$13P8LC
                                                                g$z$8914$13P8LC))))))
                                                       g$ls/false$8903$13P8LC)
                                                     ((case-lambda
                                                        ((g$t$8930$13P8LC)
                                                         ((case-lambda
                                                            ((g$ls/false$8931$13P8LC)
                                                             (if g$ls/false$8931$13P8LC
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$8932$13P8LC
                                                                      g$y$8933$13P8LC)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$8882$13P8LC
                                                                           g$y$8933$13P8LC
                                                                           g$n$8884$13P8LC
                                                                           g$ids$8885$13P8LC)))
                                                                      (case-lambda
                                                                        ((g$y$8936$13P8LC
                                                                           g$ids$8937$13P8LC)
                                                                         ((case-lambda
                                                                            ((g$ids$8938$13P8LC
                                                                               g$y$8939$13P8LC)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$8882$13P8LC
                                                                                    g$x$8932$13P8LC
                                                                                    g$n$8884$13P8LC
                                                                                    g$ids$8938$13P8LC)))
                                                                               (case-lambda
                                                                                 ((g$x$8942$13P8LC
                                                                                    g$ids$8943$13P8LC)
                                                                                  ((case-lambda
                                                                                     ((g$ids$8944$13P8LC
                                                                                        g$x$8945$13P8LC)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$8945$13P8LC
                                                                                          g$y$8939$13P8LC)
                                                                                        g$ids$8944$13P8LC)))
                                                                                   g$ids$8943$13P8LC
                                                                                   g$x$8942$13P8LC))))))
                                                                          g$ids$8937$13P8LC
                                                                          g$y$8936$13P8LC))))))
                                                                 g$ls/false$8931$13P8LC)
                                                               ((case-lambda
                                                                  ((g$t$8946$13P8LC)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8947$13P8LC)
                                                                       (if g$ls/false$8947$13P8LC
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$8885$13P8LC)))
                                                                           g$ls/false$8947$13P8LC)
                                                                         ((case-lambda
                                                                            ((g$t$8948$13P8LC)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8949$13P8LC)
                                                                                 (if (if g$ls/false$8949$13P8LC
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$8950$13P8LC)
                                                                                              (not (g$stx?$7050$13P8LC
                                                                                                     g$p$8950$13P8LC))))
                                                                                           g$ls/false$8949$13P8LC))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$8951$13P8LC)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$8882$13P8LC
                                                                                               g$p$8951$13P8LC
                                                                                               g$n$8884$13P8LC
                                                                                               g$ids$8885$13P8LC)))
                                                                                          (case-lambda
                                                                                            ((g$p$8954$13P8LC
                                                                                               g$ids$8955$13P8LC)
                                                                                             ((case-lambda
                                                                                                ((g$ids$8956$13P8LC
                                                                                                   g$p$8957$13P8LC)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$8957$13P8LC)
                                                                                                   g$ids$8956$13P8LC)))
                                                                                              g$ids$8955$13P8LC
                                                                                              g$p$8954$13P8LC))))))
                                                                                     g$ls/false$8949$13P8LC)
                                                                                   ((case-lambda
                                                                                      ((g$t$8958$13P8LC)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8959$13P8LC)
                                                                                           (if g$ls/false$8959$13P8LC
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$8960$13P8LC)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7089$13P8LC
                                                                                                        g$datum$8960$13P8LC))
                                                                                                    g$ids$8885$13P8LC)))
                                                                                               g$ls/false$8959$13P8LC)
                                                                                             (g$syntax-violation$7465$13P8LC
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8958$13P8LC))))
                                                                                        (g$syntax-dispatch$7356$13P8LC
                                                                                          g$t$8958$13P8LC
                                                                                          'any))))
                                                                                    g$t$8948$13P8LC))))
                                                                              (g$syntax-dispatch$7356$13P8LC
                                                                                g$t$8948$13P8LC
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$8946$13P8LC))))
                                                                    (g$syntax-dispatch$7356$13P8LC
                                                                      g$t$8946$13P8LC
                                                                      '()))))
                                                                g$t$8930$13P8LC))))
                                                          (g$syntax-dispatch$7356$13P8LC
                                                            g$t$8930$13P8LC
                                                            '(any . any)))))
                                                      g$t$8902$13P8LC))))
                                                (g$syntax-dispatch$7356$13P8LC
                                                  g$t$8902$13P8LC
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$8890$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$8890$13P8LC
                                        '(any any)))))
                                  g$t$8886$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$8886$13P8LC
                              'any))))
                        g$p$8883$13P8LC)))))
          (g$cvt$8882$13P8LC g$pattern$8879$13P8LC '0 '())))))
   (g$syntax-dispatch$7356$13P8LC
     g$syntax-dispatch$10792$13P8LC
     (case-lambda
       ((g$e$8976$13P8LC g$p$8977$13P8LC)
        (letrec* ((g$stx^$8978$13P8LC
                    (case-lambda
                      ((g$e$9086$13P8LC
                         g$m*$9087$13P8LC
                         g$s*$9088$13P8LC
                         g$ae*$9089$13P8LC)
                       (if (if (null? g$m*$9087$13P8LC)
                             (if (null? g$s*$9088$13P8LC)
                               (begin '#f (null? g$ae*$9089$13P8LC))
                               '#f)
                             '#f)
                         g$e$9086$13P8LC
                         (g$mkstx$7066$13P8LC
                           g$e$9086$13P8LC
                           g$m*$9087$13P8LC
                           g$s*$9088$13P8LC
                           g$ae*$9089$13P8LC)))))
                  (g$match-each$8979$13P8LC
                    (case-lambda
                      ((g$e$9070$13P8LC
                         g$p$9071$13P8LC
                         g$m*$9072$13P8LC
                         g$s*$9073$13P8LC
                         g$ae*$9074$13P8LC)
                       (if (pair? g$e$9070$13P8LC)
                         ((case-lambda
                            ((g$first$9075$13P8LC)
                             (if g$first$9075$13P8LC
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9076$13P8LC)
                                     (if g$rest$9076$13P8LC
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9075$13P8LC
                                           g$rest$9076$13P8LC))
                                       '#f)))
                                  (g$match-each$8979$13P8LC
                                    (cdr g$e$9070$13P8LC)
                                    g$p$9071$13P8LC
                                    g$m*$9072$13P8LC
                                    g$s*$9073$13P8LC
                                    g$ae*$9074$13P8LC)))
                               '#f)))
                          (g$match$8985$13P8LC
                            (car g$e$9070$13P8LC)
                            g$p$9071$13P8LC
                            g$m*$9072$13P8LC
                            g$s*$9073$13P8LC
                            g$ae*$9074$13P8LC
                            '()))
                         (if (null? g$e$9070$13P8LC)
                           '()
                           (if (g$stx?$7050$13P8LC g$e$9070$13P8LC)
                             (if (not (g$top-marked?$7021$13P8LC
                                        g$m*$9072$13P8LC))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7065$13P8LC
                                        g$m*$9072$13P8LC
                                        g$s*$9073$13P8LC
                                        g$ae*$9074$13P8LC
                                        g$e$9070$13P8LC)))
                                   (case-lambda
                                     ((g$m*$9080$13P8LC
                                        g$s*$9081$13P8LC
                                        g$ae*$9082$13P8LC)
                                      ((case-lambda
                                         ((g$ae*$9083$13P8LC
                                            g$s*$9084$13P8LC
                                            g$m*$9085$13P8LC)
                                          (g$match-each$8979$13P8LC
                                            (g$stx-expr$7052$13P8LC
                                              g$e$9070$13P8LC)
                                            g$p$9071$13P8LC
                                            g$m*$9085$13P8LC
                                            g$s*$9084$13P8LC
                                            g$ae*$9083$13P8LC)))
                                       g$ae*$9082$13P8LC
                                       g$s*$9081$13P8LC
                                       g$m*$9080$13P8LC)))))
                               '#f)
                             (if (annotation? g$e$9070$13P8LC)
                               (g$match-each$8979$13P8LC
                                 (annotation-expression g$e$9070$13P8LC)
                                 g$p$9071$13P8LC
                                 g$m*$9072$13P8LC
                                 g$s*$9073$13P8LC
                                 g$ae*$9074$13P8LC)
                               '#f)))))))
                  (g$match-each+$8980$13P8LC
                    (case-lambda
                      ((g$e$9038$13P8LC
                         g$x-pat$9039$13P8LC
                         g$y-pat$9040$13P8LC
                         g$z-pat$9041$13P8LC
                         g$m*$9042$13P8LC
                         g$s*$9043$13P8LC
                         g$ae*$9044$13P8LC
                         g$r$9045$13P8LC)
                       ((letrec ((g$f$9046$13P8LC
                                   (case-lambda
                                     ((g$e$9047$13P8LC
                                        g$m*$9048$13P8LC
                                        g$s*$9049$13P8LC
                                        g$ae*$9050$13P8LC)
                                      (if (pair? g$e$9047$13P8LC)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9046$13P8LC
                                               (cdr g$e$9047$13P8LC)
                                               g$m*$9048$13P8LC
                                               g$s*$9049$13P8LC
                                               g$ae*$9050$13P8LC)))
                                          (case-lambda
                                            ((g$xr*$9054$13P8LC
                                               g$y-pat$9055$13P8LC
                                               g$r$9056$13P8LC)
                                             ((case-lambda
                                                ((g$r$9057$13P8LC
                                                   g$y-pat$9058$13P8LC
                                                   g$xr*$9059$13P8LC)
                                                 (if g$r$9057$13P8LC
                                                   (if (null?
                                                         g$y-pat$9058$13P8LC)
                                                     ((case-lambda
                                                        ((g$xr$9060$13P8LC)
                                                         (if g$xr$9060$13P8LC
                                                           (values
                                                             (cons
                                                               g$xr$9060$13P8LC
                                                               g$xr*$9059$13P8LC)
                                                             g$y-pat$9058$13P8LC
                                                             g$r$9057$13P8LC)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$8985$13P8LC
                                                        (car g$e$9047$13P8LC)
                                                        g$x-pat$9039$13P8LC
                                                        g$m*$9048$13P8LC
                                                        g$s*$9049$13P8LC
                                                        g$ae*$9050$13P8LC
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9058$13P8LC)
                                                       (g$match$8985$13P8LC
                                                         (car g$e$9047$13P8LC)
                                                         (car g$y-pat$9058$13P8LC)
                                                         g$m*$9048$13P8LC
                                                         g$s*$9049$13P8LC
                                                         g$ae*$9050$13P8LC
                                                         g$r$9057$13P8LC)))
                                                   (values '#f '#f '#f))))
                                              g$r$9056$13P8LC
                                              g$y-pat$9055$13P8LC
                                              g$xr*$9054$13P8LC))))
                                        (if (g$stx?$7050$13P8LC g$e$9047$13P8LC)
                                          (if (g$top-marked?$7021$13P8LC
                                                g$m*$9048$13P8LC)
                                            (values
                                              '()
                                              g$y-pat$9040$13P8LC
                                              (g$match$8985$13P8LC
                                                g$e$9047$13P8LC
                                                g$z-pat$9041$13P8LC
                                                g$m*$9048$13P8LC
                                                g$s*$9049$13P8LC
                                                g$ae*$9050$13P8LC
                                                g$r$9045$13P8LC))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7065$13P8LC
                                                   g$m*$9048$13P8LC
                                                   g$s*$9049$13P8LC
                                                   g$ae*$9050$13P8LC
                                                   g$e$9047$13P8LC)))
                                              (case-lambda
                                                ((g$m*$9064$13P8LC
                                                   g$s*$9065$13P8LC
                                                   g$ae*$9066$13P8LC)
                                                 ((case-lambda
                                                    ((g$ae*$9067$13P8LC
                                                       g$s*$9068$13P8LC
                                                       g$m*$9069$13P8LC)
                                                     (g$f$9046$13P8LC
                                                       (g$stx-expr$7052$13P8LC
                                                         g$e$9047$13P8LC)
                                                       g$m*$9069$13P8LC
                                                       g$s*$9068$13P8LC
                                                       g$ae*$9067$13P8LC)))
                                                  g$ae*$9066$13P8LC
                                                  g$s*$9065$13P8LC
                                                  g$m*$9064$13P8LC)))))
                                          (if (annotation? g$e$9047$13P8LC)
                                            (g$f$9046$13P8LC
                                              (annotation-expression
                                                g$e$9047$13P8LC)
                                              g$m*$9048$13P8LC
                                              g$s*$9049$13P8LC
                                              g$ae*$9050$13P8LC)
                                            (values
                                              '()
                                              g$y-pat$9040$13P8LC
                                              (g$match$8985$13P8LC
                                                g$e$9047$13P8LC
                                                g$z-pat$9041$13P8LC
                                                g$m*$9048$13P8LC
                                                g$s*$9049$13P8LC
                                                g$ae*$9050$13P8LC
                                                g$r$9045$13P8LC)))))))))
                          g$f$9046$13P8LC)
                        g$e$9038$13P8LC
                        g$m*$9042$13P8LC
                        g$s*$9043$13P8LC
                        g$ae*$9044$13P8LC))))
                  (g$match-each-any$8981$13P8LC
                    (case-lambda
                      ((g$e$9024$13P8LC
                         g$m*$9025$13P8LC
                         g$s*$9026$13P8LC
                         g$ae*$9027$13P8LC)
                       (if (pair? g$e$9024$13P8LC)
                         ((case-lambda
                            ((g$l$9028$13P8LC)
                             (if g$l$9028$13P8LC
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$8978$13P8LC
                                     (car g$e$9024$13P8LC)
                                     g$m*$9025$13P8LC
                                     g$s*$9026$13P8LC
                                     g$ae*$9027$13P8LC)
                                   g$l$9028$13P8LC))
                               '#f)))
                          (g$match-each-any$8981$13P8LC
                            (cdr g$e$9024$13P8LC)
                            g$m*$9025$13P8LC
                            g$s*$9026$13P8LC
                            g$ae*$9027$13P8LC))
                         (if (null? g$e$9024$13P8LC)
                           '()
                           (if (g$stx?$7050$13P8LC g$e$9024$13P8LC)
                             (if (not (g$top-marked?$7021$13P8LC
                                        g$m*$9025$13P8LC))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7065$13P8LC
                                        g$m*$9025$13P8LC
                                        g$s*$9026$13P8LC
                                        g$ae*$9027$13P8LC
                                        g$e$9024$13P8LC)))
                                   (case-lambda
                                     ((g$m*$9032$13P8LC
                                        g$s*$9033$13P8LC
                                        g$ae*$9034$13P8LC)
                                      ((case-lambda
                                         ((g$ae*$9035$13P8LC
                                            g$s*$9036$13P8LC
                                            g$m*$9037$13P8LC)
                                          (g$match-each-any$8981$13P8LC
                                            (g$stx-expr$7052$13P8LC
                                              g$e$9024$13P8LC)
                                            g$m*$9037$13P8LC
                                            g$s*$9036$13P8LC
                                            g$ae*$9035$13P8LC)))
                                       g$ae*$9034$13P8LC
                                       g$s*$9033$13P8LC
                                       g$m*$9032$13P8LC)))))
                               '#f)
                             (if (annotation? g$e$9024$13P8LC)
                               (g$match-each-any$8981$13P8LC
                                 (annotation-expression g$e$9024$13P8LC)
                                 g$m*$9025$13P8LC
                                 g$s*$9026$13P8LC
                                 g$ae*$9027$13P8LC)
                               '#f)))))))
                  (g$match-empty$8982$13P8LC
                    (case-lambda
                      ((g$p$9021$13P8LC g$r$9022$13P8LC)
                       (if (null? g$p$9021$13P8LC)
                         g$r$9022$13P8LC
                         (if (eq? g$p$9021$13P8LC '_)
                           g$r$9022$13P8LC
                           (if (eq? g$p$9021$13P8LC 'any)
                             (cons '() g$r$9022$13P8LC)
                             (if (pair? g$p$9021$13P8LC)
                               (g$match-empty$8982$13P8LC
                                 (car g$p$9021$13P8LC)
                                 (g$match-empty$8982$13P8LC
                                   (cdr g$p$9021$13P8LC)
                                   g$r$9022$13P8LC))
                               (if (eq? g$p$9021$13P8LC 'each-any)
                                 (cons '() g$r$9022$13P8LC)
                                 ((case-lambda
                                    ((g$t$9023$13P8LC)
                                     (if (memv g$t$9023$13P8LC '(each))
                                       (g$match-empty$8982$13P8LC
                                         (vector-ref g$p$9021$13P8LC '1)
                                         g$r$9022$13P8LC)
                                       (if (memv g$t$9023$13P8LC '(each+))
                                         (g$match-empty$8982$13P8LC
                                           (vector-ref g$p$9021$13P8LC '1)
                                           (g$match-empty$8982$13P8LC
                                             (reverse
                                               (vector-ref g$p$9021$13P8LC '2))
                                             (g$match-empty$8982$13P8LC
                                               (vector-ref g$p$9021$13P8LC '3)
                                               g$r$9022$13P8LC)))
                                         (if (memv
                                               g$t$9023$13P8LC
                                               '(free-id atom))
                                           g$r$9022$13P8LC
                                           (if (memv
                                                 g$t$9023$13P8LC
                                                 '(scheme-id atom))
                                             g$r$9022$13P8LC
                                             (if (memv
                                                   g$t$9023$13P8LC
                                                   '(vector))
                                               (g$match-empty$8982$13P8LC
                                                 (vector-ref g$p$9021$13P8LC '1)
                                                 g$r$9022$13P8LC)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9021$13P8LC))))))))
                                  (vector-ref g$p$9021$13P8LC '0))))))))))
                  (g$combine$8983$13P8LC
                    (case-lambda
                      ((g$r*$9019$13P8LC g$r$9020$13P8LC)
                       (if (null? (car g$r*$9019$13P8LC))
                         g$r$9020$13P8LC
                         (cons
                           (map car g$r*$9019$13P8LC)
                           (g$combine$8983$13P8LC
                             (map cdr g$r*$9019$13P8LC)
                             g$r$9020$13P8LC))))))
                  (g$match*$8984$13P8LC
                    (case-lambda
                      ((g$e$9001$13P8LC
                         g$p$9002$13P8LC
                         g$m*$9003$13P8LC
                         g$s*$9004$13P8LC
                         g$ae*$9005$13P8LC
                         g$r$9006$13P8LC)
                       (if (null? g$p$9002$13P8LC)
                         (if (null? g$e$9001$13P8LC)
                           (begin '#f g$r$9006$13P8LC)
                           '#f)
                         (if (pair? g$p$9002$13P8LC)
                           (if (pair? g$e$9001$13P8LC)
                             (begin
                               '#f
                               (g$match$8985$13P8LC
                                 (car g$e$9001$13P8LC)
                                 (car g$p$9002$13P8LC)
                                 g$m*$9003$13P8LC
                                 g$s*$9004$13P8LC
                                 g$ae*$9005$13P8LC
                                 (g$match$8985$13P8LC
                                   (cdr g$e$9001$13P8LC)
                                   (cdr g$p$9002$13P8LC)
                                   g$m*$9003$13P8LC
                                   g$s*$9004$13P8LC
                                   g$ae*$9005$13P8LC
                                   g$r$9006$13P8LC)))
                             '#f)
                           (if (eq? g$p$9002$13P8LC 'each-any)
                             ((case-lambda
                                ((g$l$9007$13P8LC)
                                 (if g$l$9007$13P8LC
                                   (begin
                                     '#f
                                     (cons g$l$9007$13P8LC g$r$9006$13P8LC))
                                   '#f)))
                              (g$match-each-any$8981$13P8LC
                                g$e$9001$13P8LC
                                g$m*$9003$13P8LC
                                g$s*$9004$13P8LC
                                g$ae*$9005$13P8LC))
                             ((case-lambda
                                ((g$t$9008$13P8LC)
                                 (if (memv g$t$9008$13P8LC '(each))
                                   (if (null? g$e$9001$13P8LC)
                                     (g$match-empty$8982$13P8LC
                                       (vector-ref g$p$9002$13P8LC '1)
                                       g$r$9006$13P8LC)
                                     ((case-lambda
                                        ((g$r*$9009$13P8LC)
                                         (if g$r*$9009$13P8LC
                                           (begin
                                             '#f
                                             (g$combine$8983$13P8LC
                                               g$r*$9009$13P8LC
                                               g$r$9006$13P8LC))
                                           '#f)))
                                      (g$match-each$8979$13P8LC
                                        g$e$9001$13P8LC
                                        (vector-ref g$p$9002$13P8LC '1)
                                        g$m*$9003$13P8LC
                                        g$s*$9004$13P8LC
                                        g$ae*$9005$13P8LC)))
                                   (if (memv g$t$9008$13P8LC '(free-id))
                                     (if (symbol? g$e$9001$13P8LC)
                                       (if (g$top-marked?$7021$13P8LC
                                             g$m*$9003$13P8LC)
                                         (if (g$free-id=?$7082$13P8LC
                                               (g$stx^$8978$13P8LC
                                                 g$e$9001$13P8LC
                                                 g$m*$9003$13P8LC
                                                 g$s*$9004$13P8LC
                                                 g$ae*$9005$13P8LC)
                                               (vector-ref g$p$9002$13P8LC '1))
                                           (begin '#f g$r$9006$13P8LC)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (memv g$t$9008$13P8LC '(scheme-id))
                                       (if (symbol? g$e$9001$13P8LC)
                                         (if (g$top-marked?$7021$13P8LC
                                               g$m*$9003$13P8LC)
                                           (if (g$free-id=?$7082$13P8LC
                                                 (g$stx^$8978$13P8LC
                                                   g$e$9001$13P8LC
                                                   g$m*$9003$13P8LC
                                                   g$s*$9004$13P8LC
                                                   g$ae*$9005$13P8LC)
                                                 (g$scheme-stx$7299$13P8LC
                                                   (vector-ref
                                                     g$p$9002$13P8LC
                                                     '1)))
                                             (begin '#f g$r$9006$13P8LC)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (memv g$t$9008$13P8LC '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$8980$13P8LC
                                                g$e$9001$13P8LC
                                                (vector-ref g$p$9002$13P8LC '1)
                                                (vector-ref g$p$9002$13P8LC '2)
                                                (vector-ref g$p$9002$13P8LC '3)
                                                g$m*$9003$13P8LC
                                                g$s*$9004$13P8LC
                                                g$ae*$9005$13P8LC
                                                g$r$9006$13P8LC)))
                                           (case-lambda
                                             ((g$xr*$9013$13P8LC
                                                g$y-pat$9014$13P8LC
                                                g$r$9015$13P8LC)
                                              ((case-lambda
                                                 ((g$r$9016$13P8LC
                                                    g$y-pat$9017$13P8LC
                                                    g$xr*$9018$13P8LC)
                                                  (if g$r$9016$13P8LC
                                                    (if (null?
                                                          g$y-pat$9017$13P8LC)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9018$13P8LC)
                                                          (g$match-empty$8982$13P8LC
                                                            (vector-ref
                                                              g$p$9002$13P8LC
                                                              '1)
                                                            g$r$9016$13P8LC)
                                                          (g$combine$8983$13P8LC
                                                            g$xr*$9018$13P8LC
                                                            g$r$9016$13P8LC)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9015$13P8LC
                                               g$y-pat$9014$13P8LC
                                               g$xr*$9013$13P8LC))))
                                         (if (memv g$t$9008$13P8LC '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9002$13P8LC '1)
                                                 (g$strip$7088$13P8LC
                                                   g$e$9001$13P8LC
                                                   g$m*$9003$13P8LC))
                                             (begin '#f g$r$9006$13P8LC)
                                             '#f)
                                           (if (memv g$t$9008$13P8LC '(vector))
                                             (if (vector? g$e$9001$13P8LC)
                                               (begin
                                                 '#f
                                                 (g$match$8985$13P8LC
                                                   (vector->list
                                                     g$e$9001$13P8LC)
                                                   (vector-ref
                                                     g$p$9002$13P8LC
                                                     '1)
                                                   g$m*$9003$13P8LC
                                                   g$s*$9004$13P8LC
                                                   g$ae*$9005$13P8LC
                                                   g$r$9006$13P8LC))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9002$13P8LC)))))))))
                              (vector-ref g$p$9002$13P8LC '0))))))))
                  (g$match$8985$13P8LC
                    (case-lambda
                      ((g$e$8986$13P8LC
                         g$p$8987$13P8LC
                         g$m*$8988$13P8LC
                         g$s*$8989$13P8LC
                         g$ae*$8990$13P8LC
                         g$r$8991$13P8LC)
                       (if (not g$r$8991$13P8LC)
                         '#f
                         (if (eq? g$p$8987$13P8LC '_)
                           g$r$8991$13P8LC
                           (if (eq? g$p$8987$13P8LC 'any)
                             (cons
                               (g$stx^$8978$13P8LC
                                 g$e$8986$13P8LC
                                 g$m*$8988$13P8LC
                                 g$s*$8989$13P8LC
                                 g$ae*$8990$13P8LC)
                               g$r$8991$13P8LC)
                             (if (g$stx?$7050$13P8LC g$e$8986$13P8LC)
                               (if (not (g$top-marked?$7021$13P8LC
                                          g$m*$8988$13P8LC))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7065$13P8LC
                                          g$m*$8988$13P8LC
                                          g$s*$8989$13P8LC
                                          g$ae*$8990$13P8LC
                                          g$e$8986$13P8LC)))
                                     (case-lambda
                                       ((g$m*$8995$13P8LC
                                          g$s*$8996$13P8LC
                                          g$ae*$8997$13P8LC)
                                        ((case-lambda
                                           ((g$ae*$8998$13P8LC
                                              g$s*$8999$13P8LC
                                              g$m*$9000$13P8LC)
                                            (g$match$8985$13P8LC
                                              (g$stx-expr$7052$13P8LC
                                                g$e$8986$13P8LC)
                                              g$p$8987$13P8LC
                                              g$m*$9000$13P8LC
                                              g$s*$8999$13P8LC
                                              g$ae*$8998$13P8LC
                                              g$r$8991$13P8LC)))
                                         g$ae*$8997$13P8LC
                                         g$s*$8996$13P8LC
                                         g$m*$8995$13P8LC)))))
                                 '#f)
                               (if (annotation? g$e$8986$13P8LC)
                                 (g$match$8985$13P8LC
                                   (annotation-expression g$e$8986$13P8LC)
                                   g$p$8987$13P8LC
                                   g$m*$8988$13P8LC
                                   g$s*$8989$13P8LC
                                   g$ae*$8990$13P8LC
                                   g$r$8991$13P8LC)
                                 (g$match*$8984$13P8LC
                                   g$e$8986$13P8LC
                                   g$p$8987$13P8LC
                                   g$m*$8988$13P8LC
                                   g$s*$8989$13P8LC
                                   g$ae*$8990$13P8LC
                                   g$r$8991$13P8LC))))))))))
          (g$match$8985$13P8LC
            g$e$8976$13P8LC
            g$p$8977$13P8LC
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7357$13P8LC
     g$ellipsis?$10793$13P8LC
     (case-lambda
       ((g$x$9090$13P8LC)
        (if (g$id?$7078$13P8LC g$x$9090$13P8LC)
          (begin
            '#f
            (g$free-id=?$7082$13P8LC
              g$x$9090$13P8LC
              (g$scheme-stx$7299$13P8LC '...)))
          '#f))))
   (g$underscore?$7358$13P8LC
     g$underscore?$10794$13P8LC
     (case-lambda
       ((g$x$9091$13P8LC)
        (if (g$id?$7078$13P8LC g$x$9091$13P8LC)
          (begin
            '#f
            (g$free-id=?$7082$13P8LC
              g$x$9091$13P8LC
              (g$scheme-stx$7299$13P8LC '_)))
          '#f))))
   (g$verify-literals$7359$13P8LC
     g$verify-literals$10795$13P8LC
     (case-lambda
       ((g$lits$9092$13P8LC g$expr$9093$13P8LC)
        (for-each
          (case-lambda
            ((g$x$9094$13P8LC)
             (if ((case-lambda
                    ((g$t$9095$13P8LC)
                     (if g$t$9095$13P8LC
                       g$t$9095$13P8LC
                       ((case-lambda
                          ((g$t$9096$13P8LC)
                           (if g$t$9096$13P8LC
                             g$t$9096$13P8LC
                             (begin
                               '#f
                               (g$underscore?$7358$13P8LC g$x$9094$13P8LC)))))
                        (g$ellipsis?$7357$13P8LC g$x$9094$13P8LC)))))
                  (not (g$id?$7078$13P8LC g$x$9094$13P8LC)))
               (g$syntax-violation$7465$13P8LC
                 '#f
                 '"invalid literal"
                 g$expr$9093$13P8LC
                 g$x$9094$13P8LC)
               (void))))
          g$lits$9092$13P8LC))))
   (g$syntax-case-transformer$7360$13P8LC
     g$syntax-case-transformer$10796$13P8LC
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9097$13P8LC
                     (case-lambda
                       ((g$pvars$9154$13P8LC
                          g$expr$9155$13P8LC
                          g$y$9156$13P8LC
                          g$r$9157$13P8LC
                          g$mr$9158$13P8LC)
                        ((case-lambda
                           ((g$ids$9159$13P8LC g$levels$9160$13P8LC)
                            ((case-lambda
                               ((g$labels$9161$13P8LC g$new-vars$9162$13P8LC)
                                ((case-lambda
                                   ((g$body$9163$13P8LC)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7009$13P8LC
                                        '#f
                                        g$new-vars$9162$13P8LC
                                        g$body$9163$13P8LC)
                                      g$y$9156$13P8LC)))
                                 (g$chi-expr$7374$13P8LC
                                   (g$add-subst$7068$13P8LC
                                     (g$make-full-rib$7046$13P8LC
                                       g$ids$9159$13P8LC
                                       g$labels$9161$13P8LC)
                                     g$expr$9155$13P8LC)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9164$13P8LC
                                               g$var$9165$13P8LC
                                               g$level$9166$13P8LC)
                                             (cons
                                               g$label$9164$13P8LC
                                               (g$make-binding$7094$13P8LC
                                                 'syntax
                                                 (cons
                                                   g$var$9165$13P8LC
                                                   g$level$9166$13P8LC)))))
                                          g$labels$9161$13P8LC
                                          g$new-vars$9162$13P8LC
                                          (map cdr g$pvars$9154$13P8LC))
                                     g$r$9157$13P8LC)
                                   g$mr$9158$13P8LC))))
                             (map g$gen-label$7024$13P8LC g$ids$9159$13P8LC)
                             (map g$gen-lexical$7022$13P8LC
                                  g$ids$9159$13P8LC))))
                         (map car g$pvars$9154$13P8LC)
                         (map cdr g$pvars$9154$13P8LC)))))
                   (g$invalid-ids-error$9098$13P8LC
                     (case-lambda
                       ((g$id*$9148$13P8LC g$e$9149$13P8LC g$class$9150$13P8LC)
                        ((letrec ((g$find$9151$13P8LC
                                    (case-lambda
                                      ((g$id*$9152$13P8LC g$ok*$9153$13P8LC)
                                       (if (null? g$id*$9152$13P8LC)
                                         (g$syntax-violation$7465$13P8LC
                                           '#f
                                           '"invalid syntax"
                                           g$e$9149$13P8LC)
                                         (if (g$id?$7078$13P8LC
                                               (car g$id*$9152$13P8LC))
                                           (if (g$bound-id-member?$7085$13P8LC
                                                 (car g$id*$9152$13P8LC)
                                                 g$ok*$9153$13P8LC)
                                             (g$syntax-error$7462$13P8LC
                                               (car g$id*$9152$13P8LC)
                                               '"duplicate "
                                               g$class$9150$13P8LC)
                                             (g$find$9151$13P8LC
                                               (cdr g$id*$9152$13P8LC)
                                               (cons
                                                 (car g$id*$9152$13P8LC)
                                                 g$ok*$9153$13P8LC)))
                                           (g$syntax-error$7462$13P8LC
                                             (car g$id*$9152$13P8LC)
                                             '"invalid "
                                             g$class$9150$13P8LC)))))))
                           g$find$9151$13P8LC)
                         g$id*$9148$13P8LC
                         '()))))
                   (g$gen-clause$9099$13P8LC
                     (case-lambda
                       ((g$x$9128$13P8LC
                          g$keys$9129$13P8LC
                          g$clauses$9130$13P8LC
                          g$r$9131$13P8LC
                          g$mr$9132$13P8LC
                          g$pat$9133$13P8LC
                          g$fender$9134$13P8LC
                          g$expr$9135$13P8LC)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7355$13P8LC
                               g$pat$9133$13P8LC
                               g$keys$9129$13P8LC)))
                          (case-lambda
                            ((g$p$9138$13P8LC g$pvars$9139$13P8LC)
                             ((case-lambda
                                ((g$pvars$9140$13P8LC g$p$9141$13P8LC)
                                 (if (not (g$distinct-bound-ids?$7084$13P8LC
                                            (map car g$pvars$9140$13P8LC)))
                                   (g$invalid-ids-error$9098$13P8LC
                                     (map car g$pvars$9140$13P8LC)
                                     g$pat$9133$13P8LC
                                     '"pattern variable")
                                   (if (not (g$for-all$5356$13P8LC
                                              (case-lambda
                                                ((g$x$9142$13P8LC)
                                                 (not (g$ellipsis?$7357$13P8LC
                                                        (car g$x$9142$13P8LC)))))
                                              g$pvars$9140$13P8LC))
                                     (g$syntax-violation$7465$13P8LC
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9133$13P8LC)
                                     ((case-lambda
                                        ((g$y$9143$13P8LC)
                                         ((case-lambda
                                            ((g$test$9144$13P8LC)
                                             ((case-lambda
                                                ((g$conseq$9145$13P8LC)
                                                 ((case-lambda
                                                    ((g$altern$9146$13P8LC)
                                                     (list
                                                       (g$build-lambda$7009$13P8LC
                                                         '#f
                                                         (list g$y$9143$13P8LC)
                                                         (list
                                                           'if
                                                           g$test$9144$13P8LC
                                                           g$conseq$9145$13P8LC
                                                           g$altern$9146$13P8LC))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9128$13P8LC
                                                         (list
                                                           'quote
                                                           g$p$9141$13P8LC)))))
                                                  (g$gen-syntax-case$9100$13P8LC
                                                    g$x$9128$13P8LC
                                                    g$keys$9129$13P8LC
                                                    g$clauses$9130$13P8LC
                                                    g$r$9131$13P8LC
                                                    g$mr$9132$13P8LC))))
                                              (g$build-dispatch-call$9097$13P8LC
                                                g$pvars$9140$13P8LC
                                                g$expr$9135$13P8LC
                                                g$y$9143$13P8LC
                                                g$r$9131$13P8LC
                                                g$mr$9132$13P8LC))))
                                          (if (eq? g$fender$9134$13P8LC '#t)
                                            g$y$9143$13P8LC
                                            ((case-lambda
                                               ((g$call$9147$13P8LC)
                                                (list
                                                  'if
                                                  g$y$9143$13P8LC
                                                  g$call$9147$13P8LC
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9097$13P8LC
                                               g$pvars$9140$13P8LC
                                               g$fender$9134$13P8LC
                                               g$y$9143$13P8LC
                                               g$r$9131$13P8LC
                                               g$mr$9132$13P8LC))))))
                                      (g$gen-lexical$7022$13P8LC 'tmp))))))
                              g$pvars$9139$13P8LC
                              g$p$9138$13P8LC)))))))
                   (g$gen-syntax-case$9100$13P8LC
                     (case-lambda
                       ((g$x$9111$13P8LC
                          g$keys$9112$13P8LC
                          g$clauses$9113$13P8LC
                          g$r$9114$13P8LC
                          g$mr$9115$13P8LC)
                        (if (null? g$clauses$9113$13P8LC)
                          (list '(primitive syntax-error) g$x$9111$13P8LC)
                          ((case-lambda
                             ((g$t$9116$13P8LC)
                              ((case-lambda
                                 ((g$ls/false$9117$13P8LC)
                                  (if g$ls/false$9117$13P8LC
                                    (apply
                                      (case-lambda
                                        ((g$pat$9118$13P8LC g$expr$9119$13P8LC)
                                         (if (if (g$id?$7078$13P8LC
                                                   g$pat$9118$13P8LC)
                                               (if (not (g$bound-id-member?$7085$13P8LC
                                                          g$pat$9118$13P8LC
                                                          g$keys$9112$13P8LC))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7357$13P8LC
                                                          g$pat$9118$13P8LC)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7082$13P8LC
                                                 g$pat$9118$13P8LC
                                                 (g$scheme-stx$7299$13P8LC '_))
                                             (g$chi-expr$7374$13P8LC
                                               g$expr$9119$13P8LC
                                               g$r$9114$13P8LC
                                               g$mr$9115$13P8LC)
                                             ((case-lambda
                                                ((g$lab$9120$13P8LC
                                                   g$lex$9121$13P8LC)
                                                 ((case-lambda
                                                    ((g$body$9122$13P8LC)
                                                     (list
                                                       (g$build-lambda$7009$13P8LC
                                                         '#f
                                                         (list
                                                           g$lex$9121$13P8LC)
                                                         g$body$9122$13P8LC)
                                                       g$x$9111$13P8LC)))
                                                  (g$chi-expr$7374$13P8LC
                                                    (g$add-subst$7068$13P8LC
                                                      (g$make-full-rib$7046$13P8LC
                                                        (list g$pat$9118$13P8LC)
                                                        (list
                                                          g$lab$9120$13P8LC))
                                                      g$expr$9119$13P8LC)
                                                    (cons
                                                      (cons
                                                        g$lab$9120$13P8LC
                                                        (g$make-binding$7094$13P8LC
                                                          'syntax
                                                          (cons
                                                            g$lex$9121$13P8LC
                                                            '0)))
                                                      g$r$9114$13P8LC)
                                                    g$mr$9115$13P8LC))))
                                              (g$gen-label$7024$13P8LC
                                                g$pat$9118$13P8LC)
                                              (g$gen-lexical$7022$13P8LC
                                                g$pat$9118$13P8LC)))
                                           (g$gen-clause$9099$13P8LC
                                             g$x$9111$13P8LC
                                             g$keys$9112$13P8LC
                                             (cdr g$clauses$9113$13P8LC)
                                             g$r$9114$13P8LC
                                             g$mr$9115$13P8LC
                                             g$pat$9118$13P8LC
                                             '#t
                                             g$expr$9119$13P8LC))))
                                      g$ls/false$9117$13P8LC)
                                    ((case-lambda
                                       ((g$t$9123$13P8LC)
                                        ((case-lambda
                                           ((g$ls/false$9124$13P8LC)
                                            (if g$ls/false$9124$13P8LC
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9125$13P8LC
                                                     g$fender$9126$13P8LC
                                                     g$expr$9127$13P8LC)
                                                   (g$gen-clause$9099$13P8LC
                                                     g$x$9111$13P8LC
                                                     g$keys$9112$13P8LC
                                                     (cdr g$clauses$9113$13P8LC)
                                                     g$r$9114$13P8LC
                                                     g$mr$9115$13P8LC
                                                     g$pat$9125$13P8LC
                                                     g$fender$9126$13P8LC
                                                     g$expr$9127$13P8LC)))
                                                g$ls/false$9124$13P8LC)
                                              (g$syntax-violation$7465$13P8LC
                                                '#f
                                                '"invalid syntax"
                                                g$t$9123$13P8LC))))
                                         (g$syntax-dispatch$7356$13P8LC
                                           g$t$9123$13P8LC
                                           '(any any any)))))
                                     g$t$9116$13P8LC))))
                               (g$syntax-dispatch$7356$13P8LC
                                 g$t$9116$13P8LC
                                 '(any any)))))
                           (car g$clauses$9113$13P8LC)))))))
           (case-lambda
             ((g$e$9101$13P8LC g$r$9102$13P8LC g$mr$9103$13P8LC)
              ((case-lambda
                 ((g$t$9104$13P8LC)
                  ((case-lambda
                     ((g$ls/false$9105$13P8LC)
                      (if g$ls/false$9105$13P8LC
                        (apply
                          (case-lambda
                            ((g$expr$9106$13P8LC
                               g$keys$9107$13P8LC
                               g$clauses$9108$13P8LC)
                             (begin
                               (g$verify-literals$7359$13P8LC
                                 g$keys$9107$13P8LC
                                 g$e$9101$13P8LC)
                               ((case-lambda
                                  ((g$x$9109$13P8LC)
                                   ((case-lambda
                                      ((g$body$9110$13P8LC)
                                       (list
                                         (g$build-lambda$7009$13P8LC
                                           '#f
                                           (list g$x$9109$13P8LC)
                                           g$body$9110$13P8LC)
                                         (g$chi-expr$7374$13P8LC
                                           g$expr$9106$13P8LC
                                           g$r$9102$13P8LC
                                           g$mr$9103$13P8LC))))
                                    (g$gen-syntax-case$9100$13P8LC
                                      g$x$9109$13P8LC
                                      g$keys$9107$13P8LC
                                      g$clauses$9108$13P8LC
                                      g$r$9102$13P8LC
                                      g$mr$9103$13P8LC))))
                                (g$gen-lexical$7022$13P8LC 'tmp)))))
                          g$ls/false$9105$13P8LC)
                        (g$syntax-violation$7465$13P8LC
                          '#f
                          '"invalid syntax"
                          g$t$9104$13P8LC))))
                   (g$syntax-dispatch$7356$13P8LC
                     g$t$9104$13P8LC
                     '(_ any each-any . each-any)))))
               g$e$9101$13P8LC))))))))
   (g$ellipsis-map$7361$13P8LC
     g$ellipsis-map$10797$13P8LC
     (case-lambda
       ((g$proc$9167$13P8LC g$ls$9168$13P8LC . g$ls*$9169$13P8LC)
        (letrec* ((g$who$9170$13P8LC '...))
          (begin
            (if (not (list? g$ls$9168$13P8LC))
              (assertion-violation
                g$who$9170$13P8LC
                '"not a list"
                g$ls$9168$13P8LC)
              (void))
            (if (not (null? g$ls*$9169$13P8LC))
              ((case-lambda
                 ((g$n$9171$13P8LC)
                  (for-each
                    (case-lambda
                      ((g$x$9172$13P8LC)
                       (begin
                         (if (not (list? g$x$9172$13P8LC))
                           (assertion-violation
                             g$who$9170$13P8LC
                             '"not a list"
                             g$x$9172$13P8LC)
                           (void))
                         (if (not (= (length g$x$9172$13P8LC) g$n$9171$13P8LC))
                           (assertion-violation
                             g$who$9170$13P8LC
                             '"length mismatch"
                             g$ls$9168$13P8LC
                             g$x$9172$13P8LC)
                           (void)))))
                    g$ls*$9169$13P8LC)))
               (length g$ls$9168$13P8LC))
              (void))
            (apply
              map
              g$proc$9167$13P8LC
              g$ls$9168$13P8LC
              g$ls*$9169$13P8LC))))))
   (g$syntax-transformer$7362$13P8LC
     g$syntax-transformer$10798$13P8LC
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9173$13P8LC
                     (case-lambda
                       ((g$src$9233$13P8LC
                          g$e$9234$13P8LC
                          g$r$9235$13P8LC
                          g$maps$9236$13P8LC
                          g$ellipsis?$9237$13P8LC
                          g$vec?$9238$13P8LC)
                        ((case-lambda
                           ((g$t$9239$13P8LC)
                            ((case-lambda
                               ((g$ls/false$9240$13P8LC)
                                (if (if g$ls/false$9240$13P8LC
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9241$13P8LC)
                                             (g$ellipsis?$9237$13P8LC
                                               g$dots$9241$13P8LC)))
                                          g$ls/false$9240$13P8LC))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9242$13P8LC)
                                       (g$syntax-violation$7465$13P8LC
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9233$13P8LC)))
                                    g$ls/false$9240$13P8LC)
                                  ((case-lambda
                                     ((g$t$9243$13P8LC)
                                      ((case-lambda
                                         ((g$ls/false$9244$13P8LC)
                                          (if (if g$ls/false$9244$13P8LC
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9245$13P8LC)
                                                       (g$id?$7078$13P8LC
                                                         g$id$9245$13P8LC)))
                                                    g$ls/false$9244$13P8LC))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9246$13P8LC)
                                                 ((case-lambda
                                                    ((g$label$9247$13P8LC)
                                                     ((case-lambda
                                                        ((g$b$9248$13P8LC)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7095$13P8LC
                                                                        g$b$9248$13P8LC)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9251$13P8LC)
                                                                        (g$gen-ref$9174$13P8LC
                                                                          g$src$9233$13P8LC
                                                                          (car g$var.lev$9251$13P8LC)
                                                                          (cdr g$var.lev$9251$13P8LC)
                                                                          g$maps$9236$13P8LC)))
                                                                     (g$binding-value$7096$13P8LC
                                                                       g$b$9248$13P8LC))))
                                                                 (case-lambda
                                                                   ((g$var$9252$13P8LC
                                                                      g$maps$9253$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$maps$9254$13P8LC
                                                                          g$var$9255$13P8LC)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9255$13P8LC)
                                                                          g$maps$9254$13P8LC)))
                                                                     g$maps$9253$13P8LC
                                                                     g$var$9252$13P8LC))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9234$13P8LC)
                                                                 g$maps$9236$13P8LC)))))))
                                                      (g$label->binding$7093$13P8LC
                                                        g$label$9247$13P8LC
                                                        g$r$9235$13P8LC))))
                                                  (g$id->label$7091$13P8LC
                                                    g$e$9234$13P8LC))))
                                              g$ls/false$9244$13P8LC)
                                            ((case-lambda
                                               ((g$t$9256$13P8LC)
                                                ((case-lambda
                                                   ((g$ls/false$9257$13P8LC)
                                                    (if (if g$ls/false$9257$13P8LC
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9258$13P8LC
                                                                   g$e$9259$13P8LC)
                                                                 (g$ellipsis?$9237$13P8LC
                                                                   g$dots$9258$13P8LC)))
                                                              g$ls/false$9257$13P8LC))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9260$13P8LC
                                                             g$e$9261$13P8LC)
                                                           (if g$vec?$9238$13P8LC
                                                             (g$syntax-violation$7465$13P8LC
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9233$13P8LC)
                                                             (g$gen-syntax$9173$13P8LC
                                                               g$src$9233$13P8LC
                                                               g$e$9261$13P8LC
                                                               g$r$9235$13P8LC
                                                               g$maps$9236$13P8LC
                                                               (case-lambda
                                                                 ((g$x$9262$13P8LC)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9257$13P8LC)
                                                      ((case-lambda
                                                         ((g$t$9263$13P8LC)
                                                          ((case-lambda
                                                             ((g$ls/false$9264$13P8LC)
                                                              (if (if g$ls/false$9264$13P8LC
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9265$13P8LC
                                                                             g$dots$9266$13P8LC
                                                                             g$y$9267$13P8LC)
                                                                           (g$ellipsis?$9237$13P8LC
                                                                             g$dots$9266$13P8LC)))
                                                                        g$ls/false$9264$13P8LC))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9268$13P8LC
                                                                       g$dots$9269$13P8LC
                                                                       g$y$9270$13P8LC)
                                                                     ((letrec ((g$f$9271$13P8LC
                                                                                 (case-lambda
                                                                                   ((g$y$9272$13P8LC
                                                                                      g$k$9273$13P8LC)
                                                                                    ((case-lambda
                                                                                       ((g$t$9274$13P8LC)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9275$13P8LC)
                                                                                            (if g$ls/false$9275$13P8LC
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9273$13P8LC
                                                                                                     g$maps$9236$13P8LC)))
                                                                                                g$ls/false$9275$13P8LC)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9276$13P8LC)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9277$13P8LC)
                                                                                                      (if (if g$ls/false$9277$13P8LC
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9278$13P8LC
                                                                                                                     g$y$9279$13P8LC)
                                                                                                                   (g$ellipsis?$9237$13P8LC
                                                                                                                     g$dots$9278$13P8LC)))
                                                                                                                g$ls/false$9277$13P8LC))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9280$13P8LC
                                                                                                               g$y$9281$13P8LC)
                                                                                                             (g$f$9271$13P8LC
                                                                                                               g$y$9281$13P8LC
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9282$13P8LC)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9273$13P8LC
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9282$13P8LC))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9285$13P8LC
                                                                                                                         g$maps$9286$13P8LC)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9287$13P8LC
                                                                                                                             g$x$9288$13P8LC)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9287$13P8LC))
                                                                                                                             (g$syntax-violation$7465$13P8LC
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9233$13P8LC)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9176$13P8LC
                                                                                                                                 g$x$9288$13P8LC
                                                                                                                                 (car g$maps$9287$13P8LC))
                                                                                                                               (cdr g$maps$9287$13P8LC)))))
                                                                                                                        g$maps$9286$13P8LC
                                                                                                                        g$x$9285$13P8LC)))))))))
                                                                                                          g$ls/false$9277$13P8LC)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9289$13P8LC)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9290$13P8LC)
                                                                                                                (if g$ls/false$9290$13P8LC
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9173$13P8LC
                                                                                                                              g$src$9233$13P8LC
                                                                                                                              g$y$9272$13P8LC
                                                                                                                              g$r$9235$13P8LC
                                                                                                                              g$maps$9236$13P8LC
                                                                                                                              g$ellipsis?$9237$13P8LC
                                                                                                                              g$vec?$9238$13P8LC)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9293$13P8LC
                                                                                                                              g$maps$9294$13P8LC)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9295$13P8LC
                                                                                                                                  g$y$9296$13P8LC)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9273$13P8LC
                                                                                                                                       g$maps$9295$13P8LC)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9299$13P8LC
                                                                                                                                       g$maps$9300$13P8LC)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9301$13P8LC
                                                                                                                                           g$x$9302$13P8LC)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9175$13P8LC
                                                                                                                                             g$x$9302$13P8LC
                                                                                                                                             g$y$9296$13P8LC)
                                                                                                                                           g$maps$9301$13P8LC)))
                                                                                                                                      g$maps$9300$13P8LC
                                                                                                                                      g$x$9299$13P8LC))))))
                                                                                                                             g$maps$9294$13P8LC
                                                                                                                             g$y$9293$13P8LC))))))
                                                                                                                    g$ls/false$9290$13P8LC)
                                                                                                                  (g$syntax-violation$7465$13P8LC
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9289$13P8LC))))
                                                                                                             (g$syntax-dispatch$7356$13P8LC
                                                                                                               g$t$9289$13P8LC
                                                                                                               '_))))
                                                                                                         g$t$9276$13P8LC))))
                                                                                                   (g$syntax-dispatch$7356$13P8LC
                                                                                                     g$t$9276$13P8LC
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9274$13P8LC))))
                                                                                         (g$syntax-dispatch$7356$13P8LC
                                                                                           g$t$9274$13P8LC
                                                                                           '()))))
                                                                                     g$y$9272$13P8LC)))))
                                                                        g$f$9271$13P8LC)
                                                                      g$y$9270$13P8LC
                                                                      (case-lambda
                                                                        ((g$maps$9303$13P8LC)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9173$13P8LC
                                                                                g$src$9233$13P8LC
                                                                                g$x$9268$13P8LC
                                                                                g$r$9235$13P8LC
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9303$13P8LC)
                                                                                g$ellipsis?$9237$13P8LC
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9306$13P8LC
                                                                                g$maps$9307$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$maps$9308$13P8LC
                                                                                    g$x$9309$13P8LC)
                                                                                  (if (null?
                                                                                        (car g$maps$9308$13P8LC))
                                                                                    (g$syntax-violation$7465$13P8LC
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9233$13P8LC)
                                                                                    (values
                                                                                      (g$gen-map$9177$13P8LC
                                                                                        g$x$9309$13P8LC
                                                                                        (car g$maps$9308$13P8LC))
                                                                                      (cdr g$maps$9308$13P8LC)))))
                                                                               g$maps$9307$13P8LC
                                                                               g$x$9306$13P8LC)))))))))
                                                                  g$ls/false$9264$13P8LC)
                                                                ((case-lambda
                                                                   ((g$t$9310$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9311$13P8LC)
                                                                        (if g$ls/false$9311$13P8LC
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9312$13P8LC
                                                                                 g$y$9313$13P8LC)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9173$13P8LC
                                                                                      g$src$9233$13P8LC
                                                                                      g$x$9312$13P8LC
                                                                                      g$r$9235$13P8LC
                                                                                      g$maps$9236$13P8LC
                                                                                      g$ellipsis?$9237$13P8LC
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9316$13P8LC
                                                                                      g$maps$9317$13P8LC)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9318$13P8LC
                                                                                          g$xnew$9319$13P8LC)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9173$13P8LC
                                                                                               g$src$9233$13P8LC
                                                                                               g$y$9313$13P8LC
                                                                                               g$r$9235$13P8LC
                                                                                               g$maps$9318$13P8LC
                                                                                               g$ellipsis?$9237$13P8LC
                                                                                               g$vec?$9238$13P8LC)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9322$13P8LC
                                                                                               g$maps$9323$13P8LC)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9324$13P8LC
                                                                                                   g$ynew$9325$13P8LC)
                                                                                                 (values
                                                                                                   (g$gen-cons$9178$13P8LC
                                                                                                     g$e$9234$13P8LC
                                                                                                     g$x$9312$13P8LC
                                                                                                     g$y$9313$13P8LC
                                                                                                     g$xnew$9319$13P8LC
                                                                                                     g$ynew$9325$13P8LC)
                                                                                                   g$maps$9324$13P8LC)))
                                                                                              g$maps$9323$13P8LC
                                                                                              g$ynew$9322$13P8LC))))))
                                                                                     g$maps$9317$13P8LC
                                                                                     g$xnew$9316$13P8LC))))))
                                                                            g$ls/false$9311$13P8LC)
                                                                          ((case-lambda
                                                                             ((g$t$9326$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9327$13P8LC)
                                                                                  (if g$ls/false$9327$13P8LC
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9328$13P8LC)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9173$13P8LC
                                                                                                g$src$9233$13P8LC
                                                                                                g$ls$9328$13P8LC
                                                                                                g$r$9235$13P8LC
                                                                                                g$maps$9236$13P8LC
                                                                                                g$ellipsis?$9237$13P8LC
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9331$13P8LC
                                                                                                g$maps$9332$13P8LC)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9333$13P8LC
                                                                                                    g$lsnew$9334$13P8LC)
                                                                                                  (values
                                                                                                    (g$gen-vector$9179$13P8LC
                                                                                                      g$e$9234$13P8LC
                                                                                                      g$ls$9328$13P8LC
                                                                                                      g$lsnew$9334$13P8LC)
                                                                                                    g$maps$9333$13P8LC)))
                                                                                               g$maps$9332$13P8LC
                                                                                               g$lsnew$9331$13P8LC))))))
                                                                                      g$ls/false$9327$13P8LC)
                                                                                    ((case-lambda
                                                                                       ((g$t$9335$13P8LC)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9336$13P8LC)
                                                                                            (if g$ls/false$9336$13P8LC
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9234$13P8LC)
                                                                                                     g$maps$9236$13P8LC)))
                                                                                                g$ls/false$9336$13P8LC)
                                                                                              (g$syntax-violation$7465$13P8LC
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9335$13P8LC))))
                                                                                         (g$syntax-dispatch$7356$13P8LC
                                                                                           g$t$9335$13P8LC
                                                                                           '_))))
                                                                                     g$t$9326$13P8LC))))
                                                                               (g$syntax-dispatch$7356$13P8LC
                                                                                 g$t$9326$13P8LC
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9310$13P8LC))))
                                                                     (g$syntax-dispatch$7356$13P8LC
                                                                       g$t$9310$13P8LC
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9263$13P8LC))))
                                                           (g$syntax-dispatch$7356$13P8LC
                                                             g$t$9263$13P8LC
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9256$13P8LC))))
                                                 (g$syntax-dispatch$7356$13P8LC
                                                   g$t$9256$13P8LC
                                                   '(any any)))))
                                             g$t$9243$13P8LC))))
                                       (g$syntax-dispatch$7356$13P8LC
                                         g$t$9243$13P8LC
                                         'any))))
                                   g$t$9239$13P8LC))))
                             (g$syntax-dispatch$7356$13P8LC
                               g$t$9239$13P8LC
                               'any))))
                         g$e$9234$13P8LC))))
                   (g$gen-ref$9174$13P8LC
                     (case-lambda
                       ((g$src$9220$13P8LC
                          g$var$9221$13P8LC
                          g$level$9222$13P8LC
                          g$maps$9223$13P8LC)
                        (if (= g$level$9222$13P8LC '0)
                          (values g$var$9221$13P8LC g$maps$9223$13P8LC)
                          (if (null? g$maps$9223$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9220$13P8LC)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9174$13P8LC
                                   g$src$9220$13P8LC
                                   g$var$9221$13P8LC
                                   (- g$level$9222$13P8LC '1)
                                   (cdr g$maps$9223$13P8LC))))
                              (case-lambda
                                ((g$outer-var$9226$13P8LC
                                   g$outer-maps$9227$13P8LC)
                                 ((case-lambda
                                    ((g$outer-maps$9228$13P8LC
                                       g$outer-var$9229$13P8LC)
                                     ((case-lambda
                                        ((g$t$9230$13P8LC)
                                         (if g$t$9230$13P8LC
                                           ((case-lambda
                                              ((g$b$9231$13P8LC)
                                               (values
                                                 (cdr g$b$9231$13P8LC)
                                                 g$maps$9223$13P8LC)))
                                            g$t$9230$13P8LC)
                                           ((case-lambda
                                              ((g$inner-var$9232$13P8LC)
                                               (values
                                                 g$inner-var$9232$13P8LC
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9229$13P8LC
                                                       g$inner-var$9232$13P8LC)
                                                     (car g$maps$9223$13P8LC))
                                                   g$outer-maps$9228$13P8LC))))
                                            (g$gen-lexical$7022$13P8LC 'tmp)))))
                                      (assq
                                        g$outer-var$9229$13P8LC
                                        (car g$maps$9223$13P8LC)))))
                                  g$outer-maps$9227$13P8LC
                                  g$outer-var$9226$13P8LC)))))))))
                   (g$gen-append$9175$13P8LC
                     (case-lambda
                       ((g$x$9218$13P8LC g$y$9219$13P8LC)
                        (if (equal? g$y$9219$13P8LC ''())
                          g$x$9218$13P8LC
                          (list 'append g$x$9218$13P8LC g$y$9219$13P8LC)))))
                   (g$gen-mappend$9176$13P8LC
                     (case-lambda
                       ((g$e$9216$13P8LC g$map-env$9217$13P8LC)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9177$13P8LC
                            g$e$9216$13P8LC
                            g$map-env$9217$13P8LC)))))
                   (g$gen-map$9177$13P8LC
                     (case-lambda
                       ((g$e$9207$13P8LC g$map-env$9208$13P8LC)
                        ((case-lambda
                           ((g$formals$9209$13P8LC g$actuals$9210$13P8LC)
                            (if (eq? (car g$e$9207$13P8LC) 'ref)
                              (car g$actuals$9210$13P8LC)
                              (if (g$for-all$5356$13P8LC
                                    (case-lambda
                                      ((g$x$9211$13P8LC)
                                       (if (eq? (car g$x$9211$13P8LC) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$4887$13P8LC
                                               g$x$9211$13P8LC)
                                             g$formals$9209$13P8LC))
                                         '#f)))
                                    (cdr g$e$9207$13P8LC))
                                ((case-lambda
                                   ((g$args$9212$13P8LC)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9207$13P8LC))
                                        g$args$9212$13P8LC))))
                                 (map ((case-lambda
                                         ((g$r$9213$13P8LC)
                                          (case-lambda
                                            ((g$x$9214$13P8LC)
                                             (cdr (assq
                                                    (g$cadr$4887$13P8LC
                                                      g$x$9214$13P8LC)
                                                    g$r$9213$13P8LC))))))
                                       (map cons
                                            g$formals$9209$13P8LC
                                            g$actuals$9210$13P8LC))
                                      (cdr g$e$9207$13P8LC)))
                                (g$cons*$5358$13P8LC
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9209$13P8LC
                                    g$e$9207$13P8LC)
                                  g$actuals$9210$13P8LC)))))
                         (map cdr g$map-env$9208$13P8LC)
                         (map (case-lambda
                                ((g$x$9215$13P8LC)
                                 (list 'ref (car g$x$9215$13P8LC))))
                              g$map-env$9208$13P8LC)))))
                   (g$gen-cons$9178$13P8LC
                     (case-lambda
                       ((g$e$9199$13P8LC
                          g$x$9200$13P8LC
                          g$y$9201$13P8LC
                          g$xnew$9202$13P8LC
                          g$ynew$9203$13P8LC)
                        ((case-lambda
                           ((g$t$9204$13P8LC)
                            (if (memv g$t$9204$13P8LC '(quote))
                              (if (eq? (car g$xnew$9202$13P8LC) 'quote)
                                ((case-lambda
                                   ((g$xnew$9205$13P8LC g$ynew$9206$13P8LC)
                                    (if (if (eq? g$xnew$9205$13P8LC
                                                 g$x$9200$13P8LC)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9206$13P8LC
                                                 g$y$9201$13P8LC))
                                          '#f)
                                      (list 'quote g$e$9199$13P8LC)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9205$13P8LC
                                          g$ynew$9206$13P8LC)))))
                                 (g$cadr$4887$13P8LC g$xnew$9202$13P8LC)
                                 (g$cadr$4887$13P8LC g$ynew$9203$13P8LC))
                                (if (null?
                                      (g$cadr$4887$13P8LC g$ynew$9203$13P8LC))
                                  (list 'list g$xnew$9202$13P8LC)
                                  (list
                                    'cons
                                    g$xnew$9202$13P8LC
                                    g$ynew$9203$13P8LC)))
                              (if (memv g$t$9204$13P8LC '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9202$13P8LC
                                    (cdr g$ynew$9203$13P8LC)))
                                (list
                                  'cons
                                  g$xnew$9202$13P8LC
                                  g$ynew$9203$13P8LC)))))
                         (car g$ynew$9203$13P8LC)))))
                   (g$gen-vector$9179$13P8LC
                     (case-lambda
                       ((g$e$9196$13P8LC g$ls$9197$13P8LC g$lsnew$9198$13P8LC)
                        (if (eq? (car g$lsnew$9198$13P8LC) 'quote)
                          (if (eq? (g$cadr$4887$13P8LC g$lsnew$9198$13P8LC)
                                   g$ls$9197$13P8LC)
                            (list 'quote g$e$9196$13P8LC)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$4887$13P8LC g$lsnew$9198$13P8LC))))
                          (if (eq? (car g$lsnew$9198$13P8LC) 'list)
                            (cons 'vector (cdr g$lsnew$9198$13P8LC))
                            (list 'list->vector g$lsnew$9198$13P8LC))))))
                   (g$regen$9180$13P8LC
                     (case-lambda
                       ((g$x$9193$13P8LC)
                        ((case-lambda
                           ((g$t$9194$13P8LC)
                            (if (memv g$t$9194$13P8LC '(ref))
                              (g$cadr$4887$13P8LC g$x$9193$13P8LC)
                              (if (memv g$t$9194$13P8LC '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$4887$13P8LC g$x$9193$13P8LC))
                                (if (memv g$t$9194$13P8LC '(quote))
                                  (list
                                    'quote
                                    (g$cadr$4887$13P8LC g$x$9193$13P8LC))
                                  (if (memv g$t$9194$13P8LC '(lambda))
                                    (g$build-lambda$7009$13P8LC
                                      '#f
                                      (g$cadr$4887$13P8LC g$x$9193$13P8LC)
                                      (g$regen$9180$13P8LC
                                        (g$caddr$4893$13P8LC g$x$9193$13P8LC)))
                                    (if (memv g$t$9194$13P8LC '(map))
                                      ((case-lambda
                                         ((g$ls$9195$13P8LC)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9195$13P8LC)))
                                       (map g$regen$9180$13P8LC
                                            (cdr g$x$9193$13P8LC)))
                                      (cons
                                        (list 'primitive (car g$x$9193$13P8LC))
                                        (map g$regen$9180$13P8LC
                                             (cdr g$x$9193$13P8LC))))))))))
                         (car g$x$9193$13P8LC))))))
           (case-lambda
             ((g$e$9181$13P8LC g$r$9182$13P8LC g$mr$9183$13P8LC)
              ((case-lambda
                 ((g$t$9184$13P8LC)
                  ((case-lambda
                     ((g$ls/false$9185$13P8LC)
                      (if g$ls/false$9185$13P8LC
                        (apply
                          (case-lambda
                            ((g$x$9186$13P8LC)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9173$13P8LC
                                    g$e$9181$13P8LC
                                    g$x$9186$13P8LC
                                    g$r$9182$13P8LC
                                    '()
                                    g$ellipsis?$7357$13P8LC
                                    '#f)))
                               (case-lambda
                                 ((g$e$9189$13P8LC g$maps$9190$13P8LC)
                                  ((case-lambda
                                     ((g$maps$9191$13P8LC g$e$9192$13P8LC)
                                      (g$regen$9180$13P8LC g$e$9192$13P8LC)))
                                   g$maps$9190$13P8LC
                                   g$e$9189$13P8LC))))))
                          g$ls/false$9185$13P8LC)
                        (g$syntax-violation$7465$13P8LC
                          '#f
                          '"invalid syntax"
                          g$t$9184$13P8LC))))
                   (g$syntax-dispatch$7356$13P8LC g$t$9184$13P8LC '(_ any)))))
               g$e$9181$13P8LC))))))))
   (g$core-macro-transformer$7363$13P8LC
     g$core-macro-transformer$10799$13P8LC
     (case-lambda
       ((g$name$9337$13P8LC)
        ((case-lambda
           ((g$t$9338$13P8LC)
            (if (memv g$t$9338$13P8LC '(quote))
              g$quote-transformer$7316$13P8LC
              (if (memv g$t$9338$13P8LC '(lambda))
                g$lambda-transformer$7318$13P8LC
                (if (memv g$t$9338$13P8LC '(case-lambda))
                  g$case-lambda-transformer$7317$13P8LC
                  (if (memv g$t$9338$13P8LC '(letrec))
                    g$letrec-transformer$7306$13P8LC
                    (if (memv g$t$9338$13P8LC '(letrec*))
                      g$letrec*-transformer$7307$13P8LC
                      (if (memv g$t$9338$13P8LC '(if))
                        g$if-transformer$7314$13P8LC
                        (if (memv g$t$9338$13P8LC '(foreign-call))
                          g$foreign-call-transformer$7354$13P8LC
                          (if (memv g$t$9338$13P8LC '(syntax-case))
                            g$syntax-case-transformer$7360$13P8LC
                            (if (memv g$t$9338$13P8LC '(syntax))
                              g$syntax-transformer$7362$13P8LC
                              (if (memv g$t$9338$13P8LC '(type-descriptor))
                                g$type-descriptor-transformer$7309$13P8LC
                                (if (memv
                                      g$t$9338$13P8LC
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7310$13P8LC
                                  (if (memv
                                        g$t$9338$13P8LC
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7311$13P8LC
                                    (if (memv
                                          g$t$9338$13P8LC
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7308$13P8LC
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9337$13P8LC))))))))))))))))
         g$name$9337$13P8LC))))
   (g$file-options-macro$7364$13P8LC
     g$file-options-macro$10800$13P8LC
     (case-lambda
       ((g$x$9339$13P8LC)
        ((case-lambda
           ((g$t$9340$13P8LC)
            ((case-lambda
               ((g$ls/false$9341$13P8LC)
                (if (if g$ls/false$9341$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$9342$13P8LC)
                             (if (g$for-all$5356$13P8LC
                                   g$id?$7078$13P8LC
                                   g$opt*$9342$13P8LC)
                               (begin
                                 '#f
                                 (g$file-options-spec$6347$13P8LC
                                   (map g$id->sym$7079$13P8LC
                                        g$opt*$9342$13P8LC)))
                               '#f)))
                          g$ls/false$9341$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$9343$13P8LC)
                       (g$bless$7319$13P8LC
                         (list
                           'quote
                           (g$file-options-spec$6347$13P8LC
                             (map g$id->sym$7079$13P8LC g$opt*$9343$13P8LC))))))
                    g$ls/false$9341$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$9340$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$9340$13P8LC '(_ . each-any)))))
         g$x$9339$13P8LC))))
   (g$symbol-macro$7365$13P8LC
     g$symbol-macro$10801$13P8LC
     (case-lambda
       ((g$x$9344$13P8LC g$set$9345$13P8LC)
        ((case-lambda
           ((g$t$9346$13P8LC)
            ((case-lambda
               ((g$ls/false$9347$13P8LC)
                (if (if g$ls/false$9347$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9348$13P8LC)
                             (if (g$id?$7078$13P8LC g$name$9348$13P8LC)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7079$13P8LC g$name$9348$13P8LC)
                                   g$set$9345$13P8LC))
                               '#f)))
                          g$ls/false$9347$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9349$13P8LC)
                       (g$bless$7319$13P8LC (list 'quote g$name$9349$13P8LC))))
                    g$ls/false$9347$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$9346$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$9346$13P8LC '(_ any)))))
         g$x$9344$13P8LC))))
   (g$macro-transformer$7366$13P8LC
     g$macro-transformer$10802$13P8LC
     (case-lambda
       ((g$x$9350$13P8LC)
        (if (procedure? g$x$9350$13P8LC)
          g$x$9350$13P8LC
          (if (symbol? g$x$9350$13P8LC)
            ((case-lambda
               ((g$t$9351$13P8LC)
                (if (memv g$t$9351$13P8LC '(define-record-type))
                  g$define-record-type-macro$7350$13P8LC
                  (if (memv g$t$9351$13P8LC '(define-struct))
                    g$define-struct-macro$7349$13P8LC
                    (if (memv g$t$9351$13P8LC '(include))
                      g$include-macro$7344$13P8LC
                      (if (memv g$t$9351$13P8LC '(cond))
                        g$cond-macro$7342$13P8LC
                        (if (memv g$t$9351$13P8LC '(let))
                          g$let-macro$7322$13P8LC
                          (if (memv g$t$9351$13P8LC '(do))
                            g$do-macro$7338$13P8LC
                            (if (memv g$t$9351$13P8LC '(or))
                              g$or-macro$7340$13P8LC
                              (if (memv g$t$9351$13P8LC '(and))
                                g$and-macro$7341$13P8LC
                                (if (memv g$t$9351$13P8LC '(let*))
                                  g$let*-macro$7339$13P8LC
                                  (if (memv g$t$9351$13P8LC '(let-values))
                                    g$let-values-macro$7323$13P8LC
                                    (if (memv g$t$9351$13P8LC '(let*-values))
                                      g$let*-values-macro$7324$13P8LC
                                      (if (memv g$t$9351$13P8LC '(syntax-rules))
                                        g$syntax-rules-macro$7346$13P8LC
                                        (if (memv g$t$9351$13P8LC '(quasiquote))
                                          g$quasiquote-macro$7347$13P8LC
                                          (if (memv
                                                g$t$9351$13P8LC
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7348$13P8LC
                                            (if (memv
                                                  g$t$9351$13P8LC
                                                  '(with-syntax))
                                              g$with-syntax-macro$7320$13P8LC
                                              (if (memv g$t$9351$13P8LC '(when))
                                                g$when-macro$7312$13P8LC
                                                (if (memv
                                                      g$t$9351$13P8LC
                                                      '(unless))
                                                  g$unless-macro$7313$13P8LC
                                                  (if (memv
                                                        g$t$9351$13P8LC
                                                        '(case))
                                                    g$case-macro$7315$13P8LC
                                                    (if (memv
                                                          g$t$9351$13P8LC
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7337$13P8LC
                                                      (if (memv
                                                            g$t$9351$13P8LC
                                                            '(time))
                                                        g$time-macro$7333$13P8LC
                                                        (if (memv
                                                              g$t$9351$13P8LC
                                                              '(delay))
                                                          g$delay-macro$7334$13P8LC
                                                          (if (memv
                                                                g$t$9351$13P8LC
                                                                '(assert))
                                                            g$assert-macro$7335$13P8LC
                                                            (if (memv
                                                                  g$t$9351$13P8LC
                                                                  '(endianness))
                                                              g$endianness-macro$7336$13P8LC
                                                              (if (memv
                                                                    g$t$9351$13P8LC
                                                                    '(guard))
                                                                g$guard-macro$7331$13P8LC
                                                                (if (memv
                                                                      g$t$9351$13P8LC
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7332$13P8LC
                                                                  (if (memv
                                                                        g$t$9351$13P8LC
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7325$13P8LC
                                                                    (if (memv
                                                                          g$t$9351$13P8LC
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7326$13P8LC
                                                                      (if (memv
                                                                            g$t$9351$13P8LC
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7327$13P8LC
                                                                        (if (memv
                                                                              g$t$9351$13P8LC
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7329$13P8LC
                                                                          (if (memv
                                                                                g$t$9351$13P8LC
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7330$13P8LC
                                                                            (if (memv
                                                                                  g$t$9351$13P8LC
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7351$13P8LC
                                                                              (if (memv
                                                                                    g$t$9351$13P8LC
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7353$13P8LC
                                                                                (if (memv
                                                                                      g$t$9351$13P8LC
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7345$13P8LC
                                                                                  (if (memv
                                                                                        g$t$9351$13P8LC
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9352$13P8LC)
                                                                                       (g$symbol-macro$7365$13P8LC
                                                                                         g$x$9352$13P8LC
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (memv
                                                                                          g$t$9351$13P8LC
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9353$13P8LC)
                                                                                         (g$symbol-macro$7365$13P8LC
                                                                                           g$x$9353$13P8LC
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (memv
                                                                                            g$t$9351$13P8LC
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9354$13P8LC)
                                                                                           (g$symbol-macro$7365$13P8LC
                                                                                             g$x$9354$13P8LC
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (memv
                                                                                              g$t$9351$13P8LC
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7364$13P8LC
                                                                                          (if (memv
                                                                                                g$t$9351$13P8LC
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7352$13P8LC
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9350$13P8LC)))))))))))))))))))))))))))))))))))))))))
             g$x$9350$13P8LC)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9350$13P8LC))))))
   (g$local-macro-transformer$7367$13P8LC
     g$local-macro-transformer$10803$13P8LC
     (case-lambda ((g$x$9355$13P8LC) (car g$x$9355$13P8LC))))
   (g$do-macro-call$7368$13P8LC
     g$do-macro-call$10804$13P8LC
     (case-lambda
       ((g$transformer$9356$13P8LC g$expr$9357$13P8LC)
        ((case-lambda
           ((g$out$9358$13P8LC)
            (begin
              ((letrec ((g$f$9359$13P8LC
                          (case-lambda
                            ((g$x$9360$13P8LC)
                             (if (not (g$stx?$7050$13P8LC g$x$9360$13P8LC))
                               (if (pair? g$x$9360$13P8LC)
                                 (begin
                                   (g$f$9359$13P8LC (car g$x$9360$13P8LC))
                                   (g$f$9359$13P8LC (cdr g$x$9360$13P8LC)))
                                 (if (vector? g$x$9360$13P8LC)
                                   (vector-for-each
                                     g$f$9359$13P8LC
                                     g$x$9360$13P8LC)
                                   (if (symbol? g$x$9360$13P8LC)
                                     (g$syntax-violation$7465$13P8LC
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9357$13P8LC
                                       g$x$9360$13P8LC)
                                     (void))))
                               (void))))))
                 g$f$9359$13P8LC)
               g$out$9358$13P8LC)
              (g$add-mark$7067$13P8LC
                (g$gen-mark$7062$13P8LC)
                g$out$9358$13P8LC
                g$expr$9357$13P8LC))))
         (g$transformer$9356$13P8LC
           (g$add-mark$7067$13P8LC
             g$anti-mark$7063$13P8LC
             g$expr$9357$13P8LC
             '#f))))))
   (g$chi-macro$7369$13P8LC
     g$chi-macro$10805$13P8LC
     (case-lambda
       ((g$p$9361$13P8LC g$e$9362$13P8LC)
        (g$do-macro-call$7368$13P8LC
          (g$macro-transformer$7366$13P8LC g$p$9361$13P8LC)
          g$e$9362$13P8LC))))
   (g$chi-local-macro$7370$13P8LC
     g$chi-local-macro$10806$13P8LC
     (case-lambda
       ((g$p$9363$13P8LC g$e$9364$13P8LC)
        (g$do-macro-call$7368$13P8LC
          (g$local-macro-transformer$7367$13P8LC g$p$9363$13P8LC)
          g$e$9364$13P8LC))))
   (g$chi-global-macro$7371$13P8LC
     g$chi-global-macro$10807$13P8LC
     (case-lambda
       ((g$p$9365$13P8LC g$e$9366$13P8LC)
        ((case-lambda
           ((g$lib$9367$13P8LC g$loc$9368$13P8LC)
            (begin
              (g$visit-library$6894$13P8LC g$lib$9367$13P8LC)
              ((case-lambda
                 ((g$x$9369$13P8LC)
                  ((case-lambda
                     ((g$transformer$9370$13P8LC)
                      (g$do-macro-call$7368$13P8LC
                        g$transformer$9370$13P8LC
                        g$e$9366$13P8LC)))
                   (if (procedure? g$x$9369$13P8LC)
                     g$x$9369$13P8LC
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9369$13P8LC)))))
               (symbol-value g$loc$9368$13P8LC)))))
         (car g$p$9365$13P8LC)
         (cdr g$p$9365$13P8LC)))))
   (g$chi-expr*$7372$13P8LC
     g$chi-expr*$10808$13P8LC
     (case-lambda
       ((g$e*$9371$13P8LC g$r$9372$13P8LC g$mr$9373$13P8LC)
        (if (null? g$e*$9371$13P8LC)
          '()
          ((case-lambda
             ((g$e$9374$13P8LC)
              (cons
                g$e$9374$13P8LC
                (g$chi-expr*$7372$13P8LC
                  (cdr g$e*$9371$13P8LC)
                  g$r$9372$13P8LC
                  g$mr$9373$13P8LC))))
           (g$chi-expr$7374$13P8LC
             (car g$e*$9371$13P8LC)
             g$r$9372$13P8LC
             g$mr$9373$13P8LC))))))
   (g$chi-application$7373$13P8LC
     g$chi-application$10809$13P8LC
     (case-lambda
       ((g$e$9375$13P8LC g$r$9376$13P8LC g$mr$9377$13P8LC)
        ((case-lambda
           ((g$t$9378$13P8LC)
            ((case-lambda
               ((g$ls/false$9379$13P8LC)
                (if g$ls/false$9379$13P8LC
                  (apply
                    (case-lambda
                      ((g$rator$9380$13P8LC g$rands$9381$13P8LC)
                       ((case-lambda
                          ((g$rator$9382$13P8LC)
                           (cons
                             g$rator$9382$13P8LC
                             (g$chi-expr*$7372$13P8LC
                               g$rands$9381$13P8LC
                               g$r$9376$13P8LC
                               g$mr$9377$13P8LC))))
                        (g$chi-expr$7374$13P8LC
                          g$rator$9380$13P8LC
                          g$r$9376$13P8LC
                          g$mr$9377$13P8LC))))
                    g$ls/false$9379$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$9378$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$9378$13P8LC
               '(any . each-any)))))
         g$e$9375$13P8LC))))
   (g$chi-expr$7374$13P8LC
     g$chi-expr$10810$13P8LC
     (case-lambda
       ((g$e$9383$13P8LC g$r$9384$13P8LC g$mr$9385$13P8LC)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7098$13P8LC g$e$9383$13P8LC g$r$9384$13P8LC)))
          (case-lambda
            ((g$type$9389$13P8LC g$value$9390$13P8LC g$kwd$9391$13P8LC)
             ((case-lambda
                ((g$kwd$9392$13P8LC g$value$9393$13P8LC g$type$9394$13P8LC)
                 ((case-lambda
                    ((g$t$9395$13P8LC)
                     (if (memv g$t$9395$13P8LC '(core-macro))
                       ((case-lambda
                          ((g$transformer$9396$13P8LC)
                           (g$transformer$9396$13P8LC
                             g$e$9383$13P8LC
                             g$r$9384$13P8LC
                             g$mr$9385$13P8LC)))
                        (g$core-macro-transformer$7363$13P8LC
                          g$value$9393$13P8LC))
                       (if (memv g$t$9395$13P8LC '(global))
                         ((case-lambda
                            ((g$lib$9397$13P8LC)
                             ((case-lambda
                                ((g$loc$9398$13P8LC)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7408$13P8LC)
                                        g$lib$9397$13P8LC)
                                       g$loc$9398$13P8LC))))))
                              (cdr g$value$9393$13P8LC))))
                          (car g$value$9393$13P8LC))
                         (if (memv g$t$9395$13P8LC '(core-prim))
                           ((case-lambda
                              ((g$name$9399$13P8LC)
                               (list 'primitive g$name$9399$13P8LC)))
                            g$value$9393$13P8LC)
                           (if (memv g$t$9395$13P8LC '(call))
                             (g$chi-application$7373$13P8LC
                               g$e$9383$13P8LC
                               g$r$9384$13P8LC
                               g$mr$9385$13P8LC)
                             (if (memv g$t$9395$13P8LC '(lexical))
                               ((case-lambda
                                  ((g$lex$9400$13P8LC) g$lex$9400$13P8LC))
                                (g$lexical-var$7300$13P8LC g$value$9393$13P8LC))
                               (if (memv
                                     g$t$9395$13P8LC
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7374$13P8LC
                                   (g$chi-global-macro$7371$13P8LC
                                     g$value$9393$13P8LC
                                     g$e$9383$13P8LC)
                                   g$r$9384$13P8LC
                                   g$mr$9385$13P8LC)
                                 (if (memv
                                       g$t$9395$13P8LC
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7374$13P8LC
                                     (g$chi-local-macro$7370$13P8LC
                                       g$value$9393$13P8LC
                                       g$e$9383$13P8LC)
                                     g$r$9384$13P8LC
                                     g$mr$9385$13P8LC)
                                   (if (memv g$t$9395$13P8LC '(macro macro!))
                                     (g$chi-expr$7374$13P8LC
                                       (g$chi-macro$7369$13P8LC
                                         g$value$9393$13P8LC
                                         g$e$9383$13P8LC)
                                       g$r$9384$13P8LC
                                       g$mr$9385$13P8LC)
                                     (if (memv g$t$9395$13P8LC '(constant))
                                       ((case-lambda
                                          ((g$datum$9401$13P8LC)
                                           (list 'quote g$datum$9401$13P8LC)))
                                        g$value$9393$13P8LC)
                                       (if (memv g$t$9395$13P8LC '(set!))
                                         (g$chi-set!$7375$13P8LC
                                           g$e$9383$13P8LC
                                           g$r$9384$13P8LC
                                           g$mr$9385$13P8LC)
                                         (if (memv g$t$9395$13P8LC '(begin))
                                           ((case-lambda
                                              ((g$t$9402$13P8LC)
                                               ((case-lambda
                                                  ((g$ls/false$9403$13P8LC)
                                                   (if g$ls/false$9403$13P8LC
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9404$13P8LC
                                                            g$x*$9405$13P8LC)
                                                          (g$build-sequence$7012$13P8LC
                                                            '#f
                                                            (g$chi-expr*$7372$13P8LC
                                                              (cons
                                                                g$x$9404$13P8LC
                                                                g$x*$9405$13P8LC)
                                                              g$r$9384$13P8LC
                                                              g$mr$9385$13P8LC))))
                                                       g$ls/false$9403$13P8LC)
                                                     (g$syntax-violation$7465$13P8LC
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9402$13P8LC))))
                                                (g$syntax-dispatch$7356$13P8LC
                                                  g$t$9402$13P8LC
                                                  '(_ any . each-any)))))
                                            g$e$9383$13P8LC)
                                           (if (memv
                                                 g$t$9395$13P8LC
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9406$13P8LC)
                                                 ((case-lambda
                                                    ((g$ls/false$9407$13P8LC)
                                                     (if (if g$ls/false$9407$13P8LC
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9408$13P8LC
                                                                    g$xrhs*$9409$13P8LC
                                                                    g$xbody$9410$13P8LC
                                                                    g$xbody*$9411$13P8LC)
                                                                  (if (not (g$valid-bound-ids?$7083$13P8LC
                                                                             g$xlhs*$9408$13P8LC))
                                                                    (g$syntax-violation$7465$13P8LC
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9383$13P8LC)
                                                                    (void))))
                                                               g$ls/false$9407$13P8LC))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9412$13P8LC
                                                              g$xrhs*$9413$13P8LC
                                                              g$xbody$9414$13P8LC
                                                              g$xbody*$9415$13P8LC)
                                                            ((case-lambda
                                                               ((g$xlab*$9416$13P8LC)
                                                                ((case-lambda
                                                                   ((g$xrib$9417$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$xb*$9418$13P8LC)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7012$13P8LC
                                                                              '#f
                                                                              (g$chi-expr*$7372$13P8LC
                                                                                (map (case-lambda
                                                                                       ((g$x$9419$13P8LC)
                                                                                        (g$add-subst$7068$13P8LC
                                                                                          g$xrib$9417$13P8LC
                                                                                          g$x$9419$13P8LC)))
                                                                                     (cons
                                                                                       g$xbody$9414$13P8LC
                                                                                       g$xbody*$9415$13P8LC))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9416$13P8LC
                                                                                       g$xb*$9418$13P8LC)
                                                                                  g$r$9384$13P8LC)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9416$13P8LC
                                                                                       g$xb*$9418$13P8LC)
                                                                                  g$mr$9385$13P8LC))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9420$13P8LC)
                                                                             (g$make-eval-transformer$7110$13P8LC
                                                                               (g$expand-transformer$7401$13P8LC
                                                                                 (if (eq? g$type$9394$13P8LC
                                                                                          'let-syntax)
                                                                                   g$x$9420$13P8LC
                                                                                   (g$add-subst$7068$13P8LC
                                                                                     g$xrib$9417$13P8LC
                                                                                     g$x$9420$13P8LC))
                                                                                 g$mr$9385$13P8LC))))
                                                                          g$xrhs*$9413$13P8LC))))
                                                                 (g$make-full-rib$7046$13P8LC
                                                                   g$xlhs*$9412$13P8LC
                                                                   g$xlab*$9416$13P8LC))))
                                                             (map g$gen-label$7024$13P8LC
                                                                  g$xlhs*$9412$13P8LC))))
                                                         g$ls/false$9407$13P8LC)
                                                       (g$syntax-violation$7465$13P8LC
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9406$13P8LC))))
                                                  (g$syntax-dispatch$7356$13P8LC
                                                    g$t$9406$13P8LC
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9383$13P8LC)
                                             (if (memv
                                                   g$t$9395$13P8LC
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7465$13P8LC
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9383$13P8LC)
                                               (if (memv
                                                     g$t$9395$13P8LC
                                                     '(syntax))
                                                 (g$syntax-violation$7465$13P8LC
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9383$13P8LC)
                                                 (if (memv
                                                       g$t$9395$13P8LC
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7465$13P8LC
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9421$13P8LC)
                                                           (if (memv
                                                                 g$t$9421$13P8LC
                                                                 '(define))
                                                             '"a definition"
                                                             (if (memv
                                                                   g$t$9421$13P8LC
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (memv
                                                                     g$t$9421$13P8LC
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (memv
                                                                       g$t$9421$13P8LC
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (memv
                                                                         g$t$9421$13P8LC
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9394$13P8LC)
                                                       '" was found where an expression was expected")
                                                     g$e$9383$13P8LC)
                                                   (if (memv
                                                         g$t$9395$13P8LC
                                                         '(mutable))
                                                     (g$syntax-violation$7465$13P8LC
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9383$13P8LC)
                                                     (g$syntax-violation$7465$13P8LC
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9383$13P8LC)))))))))))))))))))
                  g$type$9394$13P8LC)))
              g$kwd$9391$13P8LC
              g$value$9390$13P8LC
              g$type$9389$13P8LC)))))))
   (g$chi-set!$7375$13P8LC
     g$chi-set!$10811$13P8LC
     (case-lambda
       ((g$e$9422$13P8LC g$r$9423$13P8LC g$mr$9424$13P8LC)
        ((case-lambda
           ((g$t$9425$13P8LC)
            ((case-lambda
               ((g$ls/false$9426$13P8LC)
                (if (if g$ls/false$9426$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9427$13P8LC g$v$9428$13P8LC)
                             (g$id?$7078$13P8LC g$x$9427$13P8LC)))
                          g$ls/false$9426$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9429$13P8LC g$v$9430$13P8LC)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7098$13P8LC
                              g$x$9429$13P8LC
                              g$r$9423$13P8LC)))
                         (case-lambda
                           ((g$type$9434$13P8LC
                              g$value$9435$13P8LC
                              g$kwd$9436$13P8LC)
                            ((case-lambda
                               ((g$kwd$9437$13P8LC
                                  g$value$9438$13P8LC
                                  g$type$9439$13P8LC)
                                ((case-lambda
                                   ((g$t$9440$13P8LC)
                                    (if (memv g$t$9440$13P8LC '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7302$13P8LC
                                          g$value$9438$13P8LC
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7300$13P8LC
                                            g$value$9438$13P8LC)
                                          (g$chi-expr$7374$13P8LC
                                            g$v$9430$13P8LC
                                            g$r$9423$13P8LC
                                            g$mr$9424$13P8LC)))
                                      (if (memv g$t$9440$13P8LC '(core-prim))
                                        (g$syntax-violation$7465$13P8LC
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9422$13P8LC)
                                        (if (memv g$t$9440$13P8LC '(global))
                                          (g$syntax-violation$7465$13P8LC
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9422$13P8LC)
                                          (if (memv
                                                g$t$9440$13P8LC
                                                '(global-macro!))
                                            (g$chi-expr$7374$13P8LC
                                              (g$chi-global-macro$7371$13P8LC
                                                g$value$9438$13P8LC
                                                g$e$9422$13P8LC)
                                              g$r$9423$13P8LC
                                              g$mr$9424$13P8LC)
                                            (if (memv
                                                  g$t$9440$13P8LC
                                                  '(local-macro!))
                                              (g$chi-expr$7374$13P8LC
                                                (g$chi-local-macro$7370$13P8LC
                                                  g$value$9438$13P8LC
                                                  g$e$9422$13P8LC)
                                                g$r$9423$13P8LC
                                                g$mr$9424$13P8LC)
                                              (if (memv
                                                    g$t$9440$13P8LC
                                                    '(mutable))
                                                (g$syntax-violation$7465$13P8LC
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9422$13P8LC)
                                                (g$syntax-violation$7465$13P8LC
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9422$13P8LC)))))))))
                                 g$type$9439$13P8LC)))
                             g$kwd$9436$13P8LC
                             g$value$9435$13P8LC
                             g$type$9434$13P8LC))))))
                    g$ls/false$9426$13P8LC)
                  (g$syntax-violation$7465$13P8LC
                    '#f
                    '"invalid syntax"
                    g$t$9425$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$9425$13P8LC '(_ any any)))))
         g$e$9422$13P8LC))))
   (g$verify-formals$7376$13P8LC
     g$verify-formals$10812$13P8LC
     (case-lambda
       ((g$fmls$9441$13P8LC g$stx$9442$13P8LC)
        ((case-lambda
           ((g$t$9443$13P8LC)
            ((case-lambda
               ((g$ls/false$9444$13P8LC)
                (if g$ls/false$9444$13P8LC
                  (apply
                    (case-lambda
                      ((g$x*$9445$13P8LC)
                       (if (not (g$valid-bound-ids?$7083$13P8LC
                                  g$x*$9445$13P8LC))
                         (g$invalid-fmls-error$7321$13P8LC
                           g$stx$9442$13P8LC
                           g$fmls$9441$13P8LC)
                         (void))))
                    g$ls/false$9444$13P8LC)
                  ((case-lambda
                     ((g$t$9446$13P8LC)
                      ((case-lambda
                         ((g$ls/false$9447$13P8LC)
                          (if g$ls/false$9447$13P8LC
                            (apply
                              (case-lambda
                                ((g$x*$9448$13P8LC g$x$9449$13P8LC)
                                 (if (not (g$valid-bound-ids?$7083$13P8LC
                                            (cons
                                              g$x$9449$13P8LC
                                              g$x*$9448$13P8LC)))
                                   (g$invalid-fmls-error$7321$13P8LC
                                     g$stx$9442$13P8LC
                                     g$fmls$9441$13P8LC)
                                   (void))))
                              g$ls/false$9447$13P8LC)
                            ((case-lambda
                               ((g$t$9450$13P8LC)
                                ((case-lambda
                                   ((g$ls/false$9451$13P8LC)
                                    (if g$ls/false$9451$13P8LC
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9442$13P8LC)))
                                        g$ls/false$9451$13P8LC)
                                      (g$syntax-violation$7465$13P8LC
                                        '#f
                                        '"invalid syntax"
                                        g$t$9450$13P8LC))))
                                 (g$syntax-dispatch$7356$13P8LC
                                   g$t$9450$13P8LC
                                   '_))))
                             g$t$9446$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$9446$13P8LC
                         '#(each+ any () any)))))
                   g$t$9443$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$9443$13P8LC 'each-any))))
         g$fmls$9441$13P8LC))))
   (g$chi-lambda-clause$7377$13P8LC
     g$chi-lambda-clause$10813$13P8LC
     (case-lambda
       ((g$stx$9452$13P8LC
          g$fmls$9453$13P8LC
          g$body*$9454$13P8LC
          g$r$9455$13P8LC
          g$mr$9456$13P8LC)
        ((case-lambda
           ((g$t$9457$13P8LC)
            ((case-lambda
               ((g$ls/false$9458$13P8LC)
                (if g$ls/false$9458$13P8LC
                  (apply
                    (case-lambda
                      ((g$x*$9459$13P8LC)
                       (begin
                         (g$verify-formals$7376$13P8LC
                           g$fmls$9453$13P8LC
                           g$stx$9452$13P8LC)
                         ((case-lambda
                            ((g$lex*$9460$13P8LC g$lab*$9461$13P8LC)
                             (values
                               g$lex*$9460$13P8LC
                               (g$chi-internal$7385$13P8LC
                                 (g$add-subst$7068$13P8LC
                                   (g$make-full-rib$7046$13P8LC
                                     g$x*$9459$13P8LC
                                     g$lab*$9461$13P8LC)
                                   g$body*$9454$13P8LC)
                                 (g$add-lexicals$7304$13P8LC
                                   g$lab*$9461$13P8LC
                                   g$lex*$9460$13P8LC
                                   g$r$9455$13P8LC)
                                 g$mr$9456$13P8LC))))
                          (map g$gen-lexical$7022$13P8LC g$x*$9459$13P8LC)
                          (map g$gen-label$7024$13P8LC g$x*$9459$13P8LC)))))
                    g$ls/false$9458$13P8LC)
                  ((case-lambda
                     ((g$t$9462$13P8LC)
                      ((case-lambda
                         ((g$ls/false$9463$13P8LC)
                          (if g$ls/false$9463$13P8LC
                            (apply
                              (case-lambda
                                ((g$x*$9464$13P8LC g$x$9465$13P8LC)
                                 (begin
                                   (g$verify-formals$7376$13P8LC
                                     g$fmls$9453$13P8LC
                                     g$stx$9452$13P8LC)
                                   ((case-lambda
                                      ((g$lex*$9466$13P8LC
                                         g$lab*$9467$13P8LC
                                         g$lex$9468$13P8LC
                                         g$lab$9469$13P8LC)
                                       (values
                                         (append
                                           g$lex*$9466$13P8LC
                                           g$lex$9468$13P8LC)
                                         (g$chi-internal$7385$13P8LC
                                           (g$add-subst$7068$13P8LC
                                             (g$make-full-rib$7046$13P8LC
                                               (cons
                                                 g$x$9465$13P8LC
                                                 g$x*$9464$13P8LC)
                                               (cons
                                                 g$lab$9469$13P8LC
                                                 g$lab*$9467$13P8LC))
                                             g$body*$9454$13P8LC)
                                           (g$add-lexicals$7304$13P8LC
                                             (cons
                                               g$lab$9469$13P8LC
                                               g$lab*$9467$13P8LC)
                                             (cons
                                               g$lex$9468$13P8LC
                                               g$lex*$9466$13P8LC)
                                             g$r$9455$13P8LC)
                                           g$mr$9456$13P8LC))))
                                    (map g$gen-lexical$7022$13P8LC
                                         g$x*$9464$13P8LC)
                                    (map g$gen-label$7024$13P8LC
                                         g$x*$9464$13P8LC)
                                    (g$gen-lexical$7022$13P8LC g$x$9465$13P8LC)
                                    (g$gen-label$7024$13P8LC
                                      g$x$9465$13P8LC)))))
                              g$ls/false$9463$13P8LC)
                            ((case-lambda
                               ((g$t$9470$13P8LC)
                                ((case-lambda
                                   ((g$ls/false$9471$13P8LC)
                                    (if g$ls/false$9471$13P8LC
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7465$13P8LC
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9453$13P8LC)))
                                        g$ls/false$9471$13P8LC)
                                      (g$syntax-violation$7465$13P8LC
                                        '#f
                                        '"invalid syntax"
                                        g$t$9470$13P8LC))))
                                 (g$syntax-dispatch$7356$13P8LC
                                   g$t$9470$13P8LC
                                   '_))))
                             g$t$9462$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$9462$13P8LC
                         '#(each+ any () any)))))
                   g$t$9457$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$9457$13P8LC 'each-any))))
         g$fmls$9453$13P8LC))))
   (g$chi-lambda-clause*$7378$13P8LC
     g$chi-lambda-clause*$10814$13P8LC
     (case-lambda
       ((g$stx$9472$13P8LC
          g$fmls*$9473$13P8LC
          g$body**$9474$13P8LC
          g$r$9475$13P8LC
          g$mr$9476$13P8LC)
        (if (null? g$fmls*$9473$13P8LC)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7377$13P8LC
                 g$stx$9472$13P8LC
                 (car g$fmls*$9473$13P8LC)
                 (car g$body**$9474$13P8LC)
                 g$r$9475$13P8LC
                 g$mr$9476$13P8LC)))
            (case-lambda
              ((g$a$9479$13P8LC g$b$9480$13P8LC)
               ((case-lambda
                  ((g$b$9481$13P8LC g$a$9482$13P8LC)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7378$13P8LC
                          g$stx$9472$13P8LC
                          (cdr g$fmls*$9473$13P8LC)
                          (cdr g$body**$9474$13P8LC)
                          g$r$9475$13P8LC
                          g$mr$9476$13P8LC)))
                     (case-lambda
                       ((g$a*$9485$13P8LC g$b*$9486$13P8LC)
                        ((case-lambda
                           ((g$b*$9487$13P8LC g$a*$9488$13P8LC)
                            (values
                              (cons g$a$9482$13P8LC g$a*$9488$13P8LC)
                              (cons g$b$9481$13P8LC g$b*$9487$13P8LC))))
                         g$b*$9486$13P8LC
                         g$a*$9485$13P8LC))))))
                g$b$9480$13P8LC
                g$a$9479$13P8LC))))))))
   (g$chi-defun$7379$13P8LC
     g$chi-defun$10815$13P8LC
     (case-lambda
       ((g$x$9489$13P8LC g$r$9490$13P8LC g$mr$9491$13P8LC)
        ((case-lambda
           ((g$fmls$9492$13P8LC g$body*$9493$13P8LC)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7377$13P8LC
                   g$fmls$9492$13P8LC
                   g$fmls$9492$13P8LC
                   g$body*$9493$13P8LC
                   g$r$9490$13P8LC
                   g$mr$9491$13P8LC)))
              (case-lambda
                ((g$fmls$9496$13P8LC g$body$9497$13P8LC)
                 ((case-lambda
                    ((g$body$9498$13P8LC g$fmls$9499$13P8LC)
                     (g$build-lambda$7009$13P8LC
                       '#f
                       g$fmls$9499$13P8LC
                       g$body$9498$13P8LC)))
                  g$body$9497$13P8LC
                  g$fmls$9496$13P8LC))))))
         (car g$x$9489$13P8LC)
         (cdr g$x$9489$13P8LC)))))
   (g$chi-rhs$7380$13P8LC
     g$chi-rhs$10816$13P8LC
     (case-lambda
       ((g$rhs$9500$13P8LC g$r$9501$13P8LC g$mr$9502$13P8LC)
        ((case-lambda
           ((g$t$9503$13P8LC)
            (if (memv g$t$9503$13P8LC '(defun))
              (g$chi-defun$7379$13P8LC
                (cdr g$rhs$9500$13P8LC)
                g$r$9501$13P8LC
                g$mr$9502$13P8LC)
              (if (memv g$t$9503$13P8LC '(expr))
                ((case-lambda
                   ((g$expr$9504$13P8LC)
                    (g$chi-expr$7374$13P8LC
                      g$expr$9504$13P8LC
                      g$r$9501$13P8LC
                      g$mr$9502$13P8LC)))
                 (cdr g$rhs$9500$13P8LC))
                (if (memv g$t$9503$13P8LC '(top-expr))
                  ((case-lambda
                     ((g$expr$9505$13P8LC)
                      (g$build-sequence$7012$13P8LC
                        '#f
                        (list
                          (g$chi-expr$7374$13P8LC
                            g$expr$9505$13P8LC
                            g$r$9501$13P8LC
                            g$mr$9502$13P8LC)
                          (g$build-void$7013$13P8LC)))))
                   (cdr g$rhs$9500$13P8LC))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9500$13P8LC))))))
         (car g$rhs$9500$13P8LC)))))
   (g$expand-interaction-rhs*/init*$7381$13P8LC
     g$expand-interaction-rhs*/init*$10817$13P8LC
     (case-lambda
       ((g$lhs*$9506$13P8LC
          g$rhs*$9507$13P8LC
          g$init*$9508$13P8LC
          g$r$9509$13P8LC
          g$mr$9510$13P8LC)
        ((letrec ((g$f$9511$13P8LC
                    (case-lambda
                      ((g$lhs*$9512$13P8LC g$rhs*$9513$13P8LC)
                       (if (null? g$lhs*$9512$13P8LC)
                         (map (case-lambda
                                ((g$x$9514$13P8LC)
                                 (g$chi-expr$7374$13P8LC
                                   g$x$9514$13P8LC
                                   g$r$9509$13P8LC
                                   g$mr$9510$13P8LC)))
                              g$init*$9508$13P8LC)
                         ((case-lambda
                            ((g$lhs$9515$13P8LC g$rhs$9516$13P8LC)
                             ((case-lambda
                                ((g$t$9517$13P8LC)
                                 (if (memv g$t$9517$13P8LC '(defun))
                                   ((case-lambda
                                      ((g$rhs$9518$13P8LC)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9515$13P8LC
                                           g$rhs$9518$13P8LC)
                                         (g$f$9511$13P8LC
                                           (cdr g$lhs*$9512$13P8LC)
                                           (cdr g$rhs*$9513$13P8LC)))))
                                    (g$chi-defun$7379$13P8LC
                                      (cdr g$rhs$9516$13P8LC)
                                      g$r$9509$13P8LC
                                      g$mr$9510$13P8LC))
                                   (if (memv g$t$9517$13P8LC '(expr))
                                     ((case-lambda
                                        ((g$rhs$9519$13P8LC)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9515$13P8LC
                                             g$rhs$9519$13P8LC)
                                           (g$f$9511$13P8LC
                                             (cdr g$lhs*$9512$13P8LC)
                                             (cdr g$rhs*$9513$13P8LC)))))
                                      (g$chi-expr$7374$13P8LC
                                        (cdr g$rhs$9516$13P8LC)
                                        g$r$9509$13P8LC
                                        g$mr$9510$13P8LC))
                                     (if (memv g$t$9517$13P8LC '(top-expr))
                                       ((case-lambda
                                          ((g$e$9520$13P8LC)
                                           (cons
                                             g$e$9520$13P8LC
                                             (g$f$9511$13P8LC
                                               (cdr g$lhs*$9512$13P8LC)
                                               (cdr g$rhs*$9513$13P8LC)))))
                                        (g$chi-expr$7374$13P8LC
                                          (cdr g$rhs$9516$13P8LC)
                                          g$r$9509$13P8LC
                                          g$mr$9510$13P8LC))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9516$13P8LC))))))
                              (car g$rhs$9516$13P8LC))))
                          (car g$lhs*$9512$13P8LC)
                          (car g$rhs*$9513$13P8LC)))))))
           g$f$9511$13P8LC)
         g$lhs*$9506$13P8LC
         g$rhs*$9507$13P8LC))))
   (g$chi-rhs*$7382$13P8LC
     g$chi-rhs*$10818$13P8LC
     (case-lambda
       ((g$rhs*$9521$13P8LC g$r$9522$13P8LC g$mr$9523$13P8LC)
        ((letrec ((g$f$9524$13P8LC
                    (case-lambda
                      ((g$ls$9525$13P8LC)
                       (if (null? g$ls$9525$13P8LC)
                         '()
                         ((case-lambda
                            ((g$a$9526$13P8LC)
                             (cons
                               g$a$9526$13P8LC
                               (g$f$9524$13P8LC (cdr g$ls$9525$13P8LC)))))
                          (g$chi-rhs$7380$13P8LC
                            (car g$ls$9525$13P8LC)
                            g$r$9522$13P8LC
                            g$mr$9523$13P8LC)))))))
           g$f$9524$13P8LC)
         g$rhs*$9521$13P8LC))))
   (g$find-bound=?$7383$13P8LC
     g$find-bound=?$10819$13P8LC
     (case-lambda
       ((g$x$9527$13P8LC g$lhs*$9528$13P8LC g$rhs*$9529$13P8LC)
        (if (null? g$lhs*$9528$13P8LC)
          '#f
          (if (g$bound-id=?$7081$13P8LC
                g$x$9527$13P8LC
                (car g$lhs*$9528$13P8LC))
            (car g$rhs*$9529$13P8LC)
            (g$find-bound=?$7383$13P8LC
              g$x$9527$13P8LC
              (cdr g$lhs*$9528$13P8LC)
              (cdr g$rhs*$9529$13P8LC)))))))
   (g$find-dups$7384$13P8LC
     g$find-dups$10820$13P8LC
     (case-lambda
       ((g$ls$9530$13P8LC)
        ((letrec ((g$f$9531$13P8LC
                    (case-lambda
                      ((g$ls$9532$13P8LC g$dups$9533$13P8LC)
                       (if (null? g$ls$9532$13P8LC)
                         g$dups$9533$13P8LC
                         ((case-lambda
                            ((g$t$9534$13P8LC)
                             (if g$t$9534$13P8LC
                               ((case-lambda
                                  ((g$x$9535$13P8LC)
                                   (g$f$9531$13P8LC
                                     (cdr g$ls$9532$13P8LC)
                                     (cons
                                       (list
                                         (car g$ls$9532$13P8LC)
                                         g$x$9535$13P8LC)
                                       g$dups$9533$13P8LC))))
                                g$t$9534$13P8LC)
                               (g$f$9531$13P8LC
                                 (cdr g$ls$9532$13P8LC)
                                 g$dups$9533$13P8LC))))
                          (g$find-bound=?$7383$13P8LC
                            (car g$ls$9532$13P8LC)
                            (cdr g$ls$9532$13P8LC)
                            (cdr g$ls$9532$13P8LC))))))))
           g$f$9531$13P8LC)
         g$ls$9530$13P8LC
         '()))))
   (g$chi-internal$7385$13P8LC
     g$chi-internal$10821$13P8LC
     (case-lambda
       ((g$e*$9536$13P8LC g$r$9537$13P8LC g$mr$9538$13P8LC)
        ((case-lambda
           ((g$rib$9539$13P8LC)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7400$13P8LC
                   (map (case-lambda
                          ((g$x$9547$13P8LC)
                           (g$add-subst$7068$13P8LC
                             g$rib$9539$13P8LC
                             g$x$9547$13P8LC)))
                        (g$syntax->list$7077$13P8LC g$e*$9536$13P8LC))
                   g$r$9537$13P8LC
                   g$mr$9538$13P8LC
                   '()
                   '()
                   '()
                   '()
                   g$rib$9539$13P8LC
                   '#f)))
              (case-lambda
                ((g$e*$9548$13P8LC
                   g$r$9549$13P8LC
                   g$mr$9550$13P8LC
                   g$lex*$9551$13P8LC
                   g$rhs*$9552$13P8LC
                   g$mod**$9553$13P8LC
                   g$kwd*$9554$13P8LC)
                 ((case-lambda
                    ((g$kwd*$9555$13P8LC
                       g$mod**$9556$13P8LC
                       g$rhs*$9557$13P8LC
                       g$lex*$9558$13P8LC
                       g$mr$9559$13P8LC
                       g$r$9560$13P8LC
                       g$e*$9561$13P8LC)
                     (begin
                       (if (null? g$e*$9561$13P8LC)
                         (g$syntax-violation$7465$13P8LC
                           '#f
                           '"no expression in body"
                           g$e*$9561$13P8LC)
                         (void))
                       ((case-lambda
                          ((g$init*$9562$13P8LC)
                           ((case-lambda
                              ((g$rhs*$9563$13P8LC)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7015$13P8LC
                                     '#f
                                     (reverse g$lex*$9558$13P8LC)
                                     (reverse g$rhs*$9563$13P8LC)
                                     (g$build-sequence$7012$13P8LC
                                       '#f
                                       g$init*$9562$13P8LC)))))))
                            (g$chi-rhs*$7382$13P8LC
                              g$rhs*$9557$13P8LC
                              g$r$9560$13P8LC
                              g$mr$9559$13P8LC))))
                        (g$chi-expr*$7372$13P8LC
                          (append
                            (apply append (reverse g$mod**$9556$13P8LC))
                            g$e*$9561$13P8LC)
                          g$r$9560$13P8LC
                          g$mr$9559$13P8LC)))))
                  g$kwd*$9554$13P8LC
                  g$mod**$9553$13P8LC
                  g$rhs*$9552$13P8LC
                  g$lex*$9551$13P8LC
                  g$mr$9550$13P8LC
                  g$r$9549$13P8LC
                  g$e*$9548$13P8LC))))))
         (g$make-empty-rib$7041$13P8LC)))))
   (g$parse-module$7386$13P8LC
     g$parse-module$10822$13P8LC
     (case-lambda
       ((g$e$9564$13P8LC)
        ((case-lambda
           ((g$t$9565$13P8LC)
            ((case-lambda
               ((g$ls/false$9566$13P8LC)
                (if g$ls/false$9566$13P8LC
                  (apply
                    (case-lambda
                      ((g$export*$9567$13P8LC g$b*$9568$13P8LC)
                       (begin
                         (if (not (g$for-all$5356$13P8LC
                                    g$id?$7078$13P8LC
                                    g$export*$9567$13P8LC))
                           (g$syntax-violation$7465$13P8LC
                             '#f
                             '"module exports must be identifiers"
                             g$e$9564$13P8LC)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9567$13P8LC)
                           g$b*$9568$13P8LC))))
                    g$ls/false$9566$13P8LC)
                  ((case-lambda
                     ((g$t$9569$13P8LC)
                      ((case-lambda
                         ((g$ls/false$9570$13P8LC)
                          (if g$ls/false$9570$13P8LC
                            (apply
                              (case-lambda
                                ((g$name$9571$13P8LC
                                   g$export*$9572$13P8LC
                                   g$b*$9573$13P8LC)
                                 (begin
                                   (if (not (g$id?$7078$13P8LC
                                              g$name$9571$13P8LC))
                                     (g$syntax-violation$7465$13P8LC
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9564$13P8LC)
                                     (void))
                                   (if (not (g$for-all$5356$13P8LC
                                              g$id?$7078$13P8LC
                                              g$export*$9572$13P8LC))
                                     (g$syntax-violation$7465$13P8LC
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9564$13P8LC)
                                     (void))
                                   (values
                                     g$name$9571$13P8LC
                                     (list->vector g$export*$9572$13P8LC)
                                     g$b*$9573$13P8LC))))
                              g$ls/false$9570$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$9569$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$9569$13P8LC
                         '(_ any each-any . each-any)))))
                   g$t$9565$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$9565$13P8LC
               '(_ each-any . each-any)))))
         g$e$9564$13P8LC))))
   (g$8412$7387$13P8LC
     g$8412$10823$13P8LC
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8415$13P8LC
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8414$7388$13P8LC g$8414$10824$13P8LC '#f)
   (g$8413$7389$13P8LC
     g$8413$10825$13P8LC
     (make-record-constructor-descriptor
       g$8412$7387$13P8LC
       '#f
       g$8414$7388$13P8LC))
   (g$module-interface?$7390$13P8LC
     g$module-interface?$10826$13P8LC
     (record-predicate g$8412$7387$13P8LC))
   (g$make-module-interface$7391$13P8LC
     g$make-module-interface$10827$13P8LC
     (record-constructor g$8413$7389$13P8LC))
   (g$module-interface-first-mark$7392$13P8LC
     g$module-interface-first-mark$10828$13P8LC
     (record-accessor g$8412$7387$13P8LC '0))
   (g$module-interface-exp-id-vec$7393$13P8LC
     g$module-interface-exp-id-vec$10829$13P8LC
     (record-accessor g$8412$7387$13P8LC '1))
   (g$module-interface-exp-lab-vec$7394$13P8LC
     g$module-interface-exp-lab-vec$10830$13P8LC
     (record-accessor g$8412$7387$13P8LC '2))
   (g$set-module-interface-first-mark!$7395$13P8LC
     g$set-module-interface-first-mark!$10831$13P8LC
     (record-mutator g$8412$7387$13P8LC '0))
   (g$set-module-interface-exp-id-vec!$7396$13P8LC
     g$set-module-interface-exp-id-vec!$10832$13P8LC
     (record-mutator g$8412$7387$13P8LC '1))
   (g$set-module-interface-exp-lab-vec!$7397$13P8LC
     g$set-module-interface-exp-lab-vec!$10833$13P8LC
     (record-mutator g$8412$7387$13P8LC '2))
   (g$module-interface-exp-id*$7398$13P8LC
     g$module-interface-exp-id*$10834$13P8LC
     (case-lambda
       ((g$iface$9574$13P8LC g$id$9575$13P8LC)
        (letrec* ((g$diff-marks$9576$13P8LC
                    (case-lambda
                      ((g$ls$9580$13P8LC g$x$9581$13P8LC)
                       (begin
                         (if (null? g$ls$9580$13P8LC)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9582$13P8LC)
                             (if (eq? g$a$9582$13P8LC g$x$9581$13P8LC)
                               '()
                               (cons
                                 g$a$9582$13P8LC
                                 (g$diff-marks$9576$13P8LC
                                   (cdr g$ls$9580$13P8LC)
                                   g$x$9581$13P8LC)))))
                          (car g$ls$9580$13P8LC)))))))
          ((case-lambda
             ((g$diff$9577$13P8LC g$id-vec$9578$13P8LC)
              (if (null? g$diff$9577$13P8LC)
                g$id-vec$9578$13P8LC
                (vector-map
                  (case-lambda
                    ((g$x$9579$13P8LC)
                     (g$make-stx$7051$13P8LC
                       (g$stx-expr$7052$13P8LC g$x$9579$13P8LC)
                       (append
                         g$diff$9577$13P8LC
                         (g$stx-mark*$7053$13P8LC g$x$9579$13P8LC))
                       '()
                       '())))
                  g$id-vec$9578$13P8LC))))
           (g$diff-marks$9576$13P8LC
             (g$stx-mark*$7053$13P8LC g$id$9575$13P8LC)
             (g$module-interface-first-mark$7392$13P8LC g$iface$9574$13P8LC))
           (g$module-interface-exp-id-vec$7393$13P8LC g$iface$9574$13P8LC))))))
   (g$chi-internal-module$7399$13P8LC
     g$chi-internal-module$10835$13P8LC
     (case-lambda
       ((g$e$9583$13P8LC
          g$r$9584$13P8LC
          g$mr$9585$13P8LC
          g$lex*$9586$13P8LC
          g$rhs*$9587$13P8LC
          g$mod**$9588$13P8LC
          g$kwd*$9589$13P8LC)
        (call-with-values
          (case-lambda (() (g$parse-module$7386$13P8LC g$e$9583$13P8LC)))
          (case-lambda
            ((g$name$9593$13P8LC g$exp-id*$9594$13P8LC g$e*$9595$13P8LC)
             ((case-lambda
                ((g$e*$9596$13P8LC g$exp-id*$9597$13P8LC g$name$9598$13P8LC)
                 ((case-lambda
                    ((g$rib$9599$13P8LC)
                     ((case-lambda
                        ((g$e*$9600$13P8LC)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7400$13P8LC
                                    g$e*$9600$13P8LC
                                    g$r$9584$13P8LC
                                    g$mr$9585$13P8LC
                                    g$lex*$9586$13P8LC
                                    g$rhs*$9587$13P8LC
                                    g$mod**$9588$13P8LC
                                    g$kwd*$9589$13P8LC
                                    g$rib$9599$13P8LC
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9608$13P8LC
                                    g$r$9609$13P8LC
                                    g$mr$9610$13P8LC
                                    g$lex*$9611$13P8LC
                                    g$rhs*$9612$13P8LC
                                    g$mod**$9613$13P8LC
                                    g$kwd*$9614$13P8LC)
                                  ((case-lambda
                                     ((g$kwd*$9615$13P8LC
                                        g$mod**$9616$13P8LC
                                        g$rhs*$9617$13P8LC
                                        g$lex*$9618$13P8LC
                                        g$mr$9619$13P8LC
                                        g$r$9620$13P8LC
                                        g$e*$9621$13P8LC)
                                      ((case-lambda
                                         ((g$exp-lab*$9622$13P8LC
                                            g$mod**$9623$13P8LC)
                                          (if (not g$name$9598$13P8LC)
                                            (values
                                              g$lex*$9618$13P8LC
                                              g$rhs*$9617$13P8LC
                                              g$exp-id*$9597$13P8LC
                                              g$exp-lab*$9622$13P8LC
                                              g$r$9620$13P8LC
                                              g$mr$9619$13P8LC
                                              g$mod**$9623$13P8LC
                                              g$kwd*$9615$13P8LC)
                                            ((case-lambda
                                               ((g$lab$9624$13P8LC
                                                  g$iface$9625$13P8LC)
                                                (values
                                                  g$lex*$9618$13P8LC
                                                  g$rhs*$9617$13P8LC
                                                  (vector g$name$9598$13P8LC)
                                                  (vector g$lab$9624$13P8LC)
                                                  (cons
                                                    (cons
                                                      g$lab$9624$13P8LC
                                                      (cons
                                                        '$module
                                                        g$iface$9625$13P8LC))
                                                    g$r$9620$13P8LC)
                                                  (cons
                                                    (cons
                                                      g$lab$9624$13P8LC
                                                      (cons
                                                        '$module
                                                        g$iface$9625$13P8LC))
                                                    g$mr$9619$13P8LC)
                                                  g$mod**$9623$13P8LC
                                                  g$kwd*$9615$13P8LC)))
                                             (g$gen-label$7024$13P8LC 'module)
                                             (g$make-module-interface$7391$13P8LC
                                               (car (g$stx-mark*$7053$13P8LC
                                                      g$name$9598$13P8LC))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9626$13P8LC)
                                                    (g$make-stx$7051$13P8LC
                                                      (g$stx-expr$7052$13P8LC
                                                        g$x$9626$13P8LC)
                                                      (g$stx-mark*$7053$13P8LC
                                                        g$x$9626$13P8LC)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9597$13P8LC)
                                               g$exp-lab*$9622$13P8LC)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9627$13P8LC)
                                            ((case-lambda
                                               ((g$t$9628$13P8LC)
                                                (if g$t$9628$13P8LC
                                                  g$t$9628$13P8LC
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7465$13P8LC
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9627$13P8LC)))))
                                             (g$id->label$7091$13P8LC
                                               (g$make-stx$7051$13P8LC
                                                 (g$id->sym$7079$13P8LC
                                                   g$x$9627$13P8LC)
                                                 (g$stx-mark*$7053$13P8LC
                                                   g$x$9627$13P8LC)
                                                 (list g$rib$9599$13P8LC)
                                                 '())))))
                                         g$exp-id*$9597$13P8LC)
                                       (cons
                                         g$e*$9621$13P8LC
                                         g$mod**$9616$13P8LC))))
                                   g$kwd*$9614$13P8LC
                                   g$mod**$9613$13P8LC
                                   g$rhs*$9612$13P8LC
                                   g$lex*$9611$13P8LC
                                   g$mr$9610$13P8LC
                                   g$r$9609$13P8LC
                                   g$e*$9608$13P8LC)))))))))
                      (map (case-lambda
                             ((g$x$9629$13P8LC)
                              (g$add-subst$7068$13P8LC
                                g$rib$9599$13P8LC
                                g$x$9629$13P8LC)))
                           (g$syntax->list$7077$13P8LC g$e*$9596$13P8LC)))))
                  (g$make-empty-rib$7041$13P8LC))))
              g$e*$9595$13P8LC
              g$exp-id*$9594$13P8LC
              g$name$9593$13P8LC)))))))
   (g$chi-body*$7400$13P8LC
     g$chi-body*$10836$13P8LC
     (case-lambda
       ((g$e*$9630$13P8LC
          g$r$9631$13P8LC
          g$mr$9632$13P8LC
          g$lex*$9633$13P8LC
          g$rhs*$9634$13P8LC
          g$mod**$9635$13P8LC
          g$kwd*$9636$13P8LC
          g$rib$9637$13P8LC
          g$top?$9638$13P8LC)
        (if (null? g$e*$9630$13P8LC)
          (values
            g$e*$9630$13P8LC
            g$r$9631$13P8LC
            g$mr$9632$13P8LC
            g$lex*$9633$13P8LC
            g$rhs*$9634$13P8LC
            g$mod**$9635$13P8LC
            g$kwd*$9636$13P8LC)
          ((case-lambda
             ((g$e$9639$13P8LC)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7098$13P8LC g$e$9639$13P8LC g$r$9631$13P8LC)))
                (case-lambda
                  ((g$type$9643$13P8LC g$value$9644$13P8LC g$kwd$9645$13P8LC)
                   ((case-lambda
                      ((g$kwd$9646$13P8LC
                         g$value$9647$13P8LC
                         g$type$9648$13P8LC)
                       ((case-lambda
                          ((g$kwd*$9649$13P8LC)
                           ((case-lambda
                              ((g$t$9650$13P8LC)
                               (if (memv g$t$9650$13P8LC '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7296$13P8LC
                                        g$e$9639$13P8LC)))
                                   (case-lambda
                                     ((g$id$9653$13P8LC g$rhs$9654$13P8LC)
                                      ((case-lambda
                                         ((g$rhs$9655$13P8LC g$id$9656$13P8LC)
                                          (begin
                                            (if (g$bound-id-member?$7085$13P8LC
                                                  g$id$9656$13P8LC
                                                  g$kwd*$9649$13P8LC)
                                              (g$syntax-violation$7465$13P8LC
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9639$13P8LC)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7026$13P8LC
                                                   g$id$9656$13P8LC
                                                   g$rib$9637$13P8LC)))
                                              (case-lambda
                                                ((g$lab$9659$13P8LC
                                                   g$lex$9660$13P8LC)
                                                 ((case-lambda
                                                    ((g$lex$9661$13P8LC
                                                       g$lab$9662$13P8LC)
                                                     (begin
                                                       (g$extend-rib!$7042$13P8LC
                                                         g$rib$9637$13P8LC
                                                         g$id$9656$13P8LC
                                                         g$lab$9662$13P8LC)
                                                       (g$chi-body*$7400$13P8LC
                                                         (cdr g$e*$9630$13P8LC)
                                                         (g$add-lexical$7303$13P8LC
                                                           g$lab$9662$13P8LC
                                                           g$lex$9661$13P8LC
                                                           g$r$9631$13P8LC)
                                                         g$mr$9632$13P8LC
                                                         (cons
                                                           g$lex$9661$13P8LC
                                                           g$lex*$9633$13P8LC)
                                                         (cons
                                                           g$rhs$9655$13P8LC
                                                           g$rhs*$9634$13P8LC)
                                                         g$mod**$9635$13P8LC
                                                         g$kwd*$9649$13P8LC
                                                         g$rib$9637$13P8LC
                                                         g$top?$9638$13P8LC))))
                                                  g$lex$9660$13P8LC
                                                  g$lab$9659$13P8LC)))))))
                                       g$rhs$9654$13P8LC
                                       g$id$9653$13P8LC))))
                                 (if (memv g$t$9650$13P8LC '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7297$13P8LC
                                          g$e$9639$13P8LC)))
                                     (case-lambda
                                       ((g$id$9665$13P8LC g$rhs$9666$13P8LC)
                                        ((case-lambda
                                           ((g$rhs$9667$13P8LC g$id$9668$13P8LC)
                                            (begin
                                              (if (g$bound-id-member?$7085$13P8LC
                                                    g$id$9668$13P8LC
                                                    g$kwd*$9649$13P8LC)
                                                (g$syntax-violation$7465$13P8LC
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9639$13P8LC)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9669$13P8LC
                                                    g$expanded-rhs$9670$13P8LC)
                                                  (begin
                                                    (g$extend-rib!$7042$13P8LC
                                                      g$rib$9637$13P8LC
                                                      g$id$9668$13P8LC
                                                      g$lab$9669$13P8LC)
                                                    ((case-lambda
                                                       ((g$b$9671$13P8LC)
                                                        (g$chi-body*$7400$13P8LC
                                                          (cdr g$e*$9630$13P8LC)
                                                          (cons
                                                            (cons
                                                              g$lab$9669$13P8LC
                                                              g$b$9671$13P8LC)
                                                            g$r$9631$13P8LC)
                                                          (cons
                                                            (cons
                                                              g$lab$9669$13P8LC
                                                              g$b$9671$13P8LC)
                                                            g$mr$9632$13P8LC)
                                                          g$lex*$9633$13P8LC
                                                          g$rhs*$9634$13P8LC
                                                          g$mod**$9635$13P8LC
                                                          g$kwd*$9649$13P8LC
                                                          g$rib$9637$13P8LC
                                                          g$top?$9638$13P8LC)))
                                                     (g$make-eval-transformer$7110$13P8LC
                                                       g$expanded-rhs$9670$13P8LC)))))
                                               (g$gen-define-label$7027$13P8LC
                                                 g$id$9668$13P8LC
                                                 g$rib$9637$13P8LC)
                                               (g$expand-transformer$7401$13P8LC
                                                 g$rhs$9667$13P8LC
                                                 g$mr$9632$13P8LC)))))
                                         g$rhs$9666$13P8LC
                                         g$id$9665$13P8LC))))
                                   (if (memv
                                         g$t$9650$13P8LC
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9672$13P8LC)
                                         ((case-lambda
                                            ((g$ls/false$9673$13P8LC)
                                             (if (if g$ls/false$9673$13P8LC
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9674$13P8LC
                                                            g$xrhs*$9675$13P8LC
                                                            g$xbody*$9676$13P8LC)
                                                          (if (not (g$valid-bound-ids?$7083$13P8LC
                                                                     g$xlhs*$9674$13P8LC))
                                                            (g$syntax-violation$7465$13P8LC
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9639$13P8LC)
                                                            (void))))
                                                       g$ls/false$9673$13P8LC))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9677$13P8LC
                                                      g$xrhs*$9678$13P8LC
                                                      g$xbody*$9679$13P8LC)
                                                    ((case-lambda
                                                       ((g$xlab*$9680$13P8LC)
                                                        ((case-lambda
                                                           ((g$xrib$9681$13P8LC)
                                                            ((case-lambda
                                                               ((g$xb*$9682$13P8LC)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7400$13P8LC
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9683$13P8LC)
                                                                                (g$add-subst$7068$13P8LC
                                                                                  g$xrib$9681$13P8LC
                                                                                  g$x$9683$13P8LC)))
                                                                             g$xbody*$9679$13P8LC)
                                                                        (cdr g$e*$9630$13P8LC))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9680$13P8LC
                                                                             g$xb*$9682$13P8LC)
                                                                        g$r$9631$13P8LC)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9680$13P8LC
                                                                             g$xb*$9682$13P8LC)
                                                                        g$mr$9632$13P8LC)
                                                                      g$lex*$9633$13P8LC
                                                                      g$rhs*$9634$13P8LC
                                                                      g$mod**$9635$13P8LC
                                                                      g$kwd*$9649$13P8LC
                                                                      g$rib$9637$13P8LC
                                                                      g$top?$9638$13P8LC))))))
                                                             (map (case-lambda
                                                                    ((g$x$9684$13P8LC)
                                                                     (g$make-eval-transformer$7110$13P8LC
                                                                       (g$expand-transformer$7401$13P8LC
                                                                         (if (eq? g$type$9648$13P8LC
                                                                                  'let-syntax)
                                                                           g$x$9684$13P8LC
                                                                           (g$add-subst$7068$13P8LC
                                                                             g$xrib$9681$13P8LC
                                                                             g$x$9684$13P8LC))
                                                                         g$mr$9632$13P8LC))))
                                                                  g$xrhs*$9678$13P8LC))))
                                                         (g$make-full-rib$7046$13P8LC
                                                           g$xlhs*$9677$13P8LC
                                                           g$xlab*$9680$13P8LC))))
                                                     (map g$gen-label$7024$13P8LC
                                                          g$xlhs*$9677$13P8LC))))
                                                 g$ls/false$9673$13P8LC)
                                               (g$syntax-violation$7465$13P8LC
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9672$13P8LC))))
                                          (g$syntax-dispatch$7356$13P8LC
                                            g$t$9672$13P8LC
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9639$13P8LC)
                                     (if (memv g$t$9650$13P8LC '(begin))
                                       ((case-lambda
                                          ((g$t$9685$13P8LC)
                                           ((case-lambda
                                              ((g$ls/false$9686$13P8LC)
                                               (if g$ls/false$9686$13P8LC
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9687$13P8LC)
                                                      (g$chi-body*$7400$13P8LC
                                                        (append
                                                          g$x*$9687$13P8LC
                                                          (cdr g$e*$9630$13P8LC))
                                                        g$r$9631$13P8LC
                                                        g$mr$9632$13P8LC
                                                        g$lex*$9633$13P8LC
                                                        g$rhs*$9634$13P8LC
                                                        g$mod**$9635$13P8LC
                                                        g$kwd*$9649$13P8LC
                                                        g$rib$9637$13P8LC
                                                        g$top?$9638$13P8LC)))
                                                   g$ls/false$9686$13P8LC)
                                                 (g$syntax-violation$7465$13P8LC
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9685$13P8LC))))
                                            (g$syntax-dispatch$7356$13P8LC
                                              g$t$9685$13P8LC
                                              '(_ . each-any)))))
                                        g$e$9639$13P8LC)
                                       (if (memv
                                             g$t$9650$13P8LC
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7400$13P8LC
                                           (cons
                                             (g$add-subst$7068$13P8LC
                                               g$rib$9637$13P8LC
                                               (g$chi-global-macro$7371$13P8LC
                                                 g$value$9647$13P8LC
                                                 g$e$9639$13P8LC))
                                             (cdr g$e*$9630$13P8LC))
                                           g$r$9631$13P8LC
                                           g$mr$9632$13P8LC
                                           g$lex*$9633$13P8LC
                                           g$rhs*$9634$13P8LC
                                           g$mod**$9635$13P8LC
                                           g$kwd*$9649$13P8LC
                                           g$rib$9637$13P8LC
                                           g$top?$9638$13P8LC)
                                         (if (memv
                                               g$t$9650$13P8LC
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7400$13P8LC
                                             (cons
                                               (g$add-subst$7068$13P8LC
                                                 g$rib$9637$13P8LC
                                                 (g$chi-local-macro$7370$13P8LC
                                                   g$value$9647$13P8LC
                                                   g$e$9639$13P8LC))
                                               (cdr g$e*$9630$13P8LC))
                                             g$r$9631$13P8LC
                                             g$mr$9632$13P8LC
                                             g$lex*$9633$13P8LC
                                             g$rhs*$9634$13P8LC
                                             g$mod**$9635$13P8LC
                                             g$kwd*$9649$13P8LC
                                             g$rib$9637$13P8LC
                                             g$top?$9638$13P8LC)
                                           (if (memv
                                                 g$t$9650$13P8LC
                                                 '(macro macro!))
                                             (g$chi-body*$7400$13P8LC
                                               (cons
                                                 (g$add-subst$7068$13P8LC
                                                   g$rib$9637$13P8LC
                                                   (g$chi-macro$7369$13P8LC
                                                     g$value$9647$13P8LC
                                                     g$e$9639$13P8LC))
                                                 (cdr g$e*$9630$13P8LC))
                                               g$r$9631$13P8LC
                                               g$mr$9632$13P8LC
                                               g$lex*$9633$13P8LC
                                               g$rhs*$9634$13P8LC
                                               g$mod**$9635$13P8LC
                                               g$kwd*$9649$13P8LC
                                               g$rib$9637$13P8LC
                                               g$top?$9638$13P8LC)
                                             (if (memv
                                                   g$t$9650$13P8LC
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7399$13P8LC
                                                      g$e$9639$13P8LC
                                                      g$r$9631$13P8LC
                                                      g$mr$9632$13P8LC
                                                      g$lex*$9633$13P8LC
                                                      g$rhs*$9634$13P8LC
                                                      g$mod**$9635$13P8LC
                                                      g$kwd*$9649$13P8LC)))
                                                 (case-lambda
                                                   ((g$lex*$9696$13P8LC
                                                      g$rhs*$9697$13P8LC
                                                      g$m-exp-id*$9698$13P8LC
                                                      g$m-exp-lab*$9699$13P8LC
                                                      g$r$9700$13P8LC
                                                      g$mr$9701$13P8LC
                                                      g$mod**$9702$13P8LC
                                                      g$kwd*$9703$13P8LC)
                                                    ((case-lambda
                                                       ((g$kwd*$9704$13P8LC
                                                          g$mod**$9705$13P8LC
                                                          g$mr$9706$13P8LC
                                                          g$r$9707$13P8LC
                                                          g$m-exp-lab*$9708$13P8LC
                                                          g$m-exp-id*$9709$13P8LC
                                                          g$rhs*$9710$13P8LC
                                                          g$lex*$9711$13P8LC)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9712$13P8LC
                                                                 g$lab$9713$13P8LC)
                                                               (g$extend-rib!$7042$13P8LC
                                                                 g$rib$9637$13P8LC
                                                                 g$id$9712$13P8LC
                                                                 g$lab$9713$13P8LC)))
                                                            g$m-exp-id*$9709$13P8LC
                                                            g$m-exp-lab*$9708$13P8LC)
                                                          (g$chi-body*$7400$13P8LC
                                                            (cdr g$e*$9630$13P8LC)
                                                            g$r$9707$13P8LC
                                                            g$mr$9706$13P8LC
                                                            g$lex*$9711$13P8LC
                                                            g$rhs*$9710$13P8LC
                                                            g$mod**$9705$13P8LC
                                                            g$kwd*$9704$13P8LC
                                                            g$rib$9637$13P8LC
                                                            g$top?$9638$13P8LC))))
                                                     g$kwd*$9703$13P8LC
                                                     g$mod**$9702$13P8LC
                                                     g$mr$9701$13P8LC
                                                     g$r$9700$13P8LC
                                                     g$m-exp-lab*$9699$13P8LC
                                                     g$m-exp-id*$9698$13P8LC
                                                     g$rhs*$9697$13P8LC
                                                     g$lex*$9696$13P8LC))))
                                               (if (memv
                                                     g$t$9650$13P8LC
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7449$13P8LC
                                                     (g$stx->datum$7089$13P8LC
                                                       g$e$9639$13P8LC))
                                                   (g$chi-body*$7400$13P8LC
                                                     (cdr g$e*$9630$13P8LC)
                                                     g$r$9631$13P8LC
                                                     g$mr$9632$13P8LC
                                                     g$lex*$9633$13P8LC
                                                     g$rhs*$9634$13P8LC
                                                     g$mod**$9635$13P8LC
                                                     g$kwd*$9649$13P8LC
                                                     g$rib$9637$13P8LC
                                                     g$top?$9638$13P8LC))
                                                 (if (memv
                                                       g$t$9650$13P8LC
                                                       '(import))
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$9714$13P8LC
                                                                     (case-lambda
                                                                       ((g$e$9756$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$t$9757$13P8LC)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9758$13P8LC)
                                                                                (if (if g$ls/false$9758$13P8LC
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9759$13P8LC)
                                                                                             (g$id?$7078$13P8LC
                                                                                               g$id$9759$13P8LC)))
                                                                                          g$ls/false$9758$13P8LC))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9760$13P8LC)
                                                                                       '#t))
                                                                                    g$ls/false$9758$13P8LC)
                                                                                  ((case-lambda
                                                                                     ((g$t$9761$13P8LC)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9762$13P8LC)
                                                                                          (if g$ls/false$9762$13P8LC
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$9763$13P8LC)
                                                                                                 '#f))
                                                                                              g$ls/false$9762$13P8LC)
                                                                                            ((case-lambda
                                                                                               ((g$t$9764$13P8LC)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$9765$13P8LC)
                                                                                                    (if g$ls/false$9765$13P8LC
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7465$13P8LC
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$9756$13P8LC)))
                                                                                                        g$ls/false$9765$13P8LC)
                                                                                                      (g$syntax-violation$7465$13P8LC
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$9764$13P8LC))))
                                                                                                 (g$syntax-dispatch$7356$13P8LC
                                                                                                   g$t$9764$13P8LC
                                                                                                   '_))))
                                                                                             g$t$9761$13P8LC))))
                                                                                       (g$syntax-dispatch$7356$13P8LC
                                                                                         g$t$9761$13P8LC
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$9757$13P8LC))))
                                                                             (g$syntax-dispatch$7356$13P8LC
                                                                               g$t$9757$13P8LC
                                                                               '(_ any)))))
                                                                         g$e$9756$13P8LC))))
                                                                   (g$module-import$9715$13P8LC
                                                                     (case-lambda
                                                                       ((g$e$9739$13P8LC
                                                                          g$r$9740$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$t$9741$13P8LC)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9742$13P8LC)
                                                                                (if (if g$ls/false$9742$13P8LC
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9743$13P8LC)
                                                                                             (g$id?$7078$13P8LC
                                                                                               g$id$9743$13P8LC)))
                                                                                          g$ls/false$9742$13P8LC))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9744$13P8LC)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7098$13P8LC
                                                                                              g$id$9744$13P8LC
                                                                                              g$r$9740$13P8LC)))
                                                                                         (case-lambda
                                                                                           ((g$type$9748$13P8LC
                                                                                              g$value$9749$13P8LC
                                                                                              g$kwd$9750$13P8LC)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$9751$13P8LC
                                                                                                  g$value$9752$13P8LC
                                                                                                  g$type$9753$13P8LC)
                                                                                                ((case-lambda
                                                                                                   ((g$t$9754$13P8LC)
                                                                                                    (if (memv
                                                                                                          g$t$9754$13P8LC
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$9755$13P8LC)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7398$13P8LC
                                                                                                              g$iface$9755$13P8LC
                                                                                                              g$id$9744$13P8LC)
                                                                                                            (g$module-interface-exp-lab-vec$7394$13P8LC
                                                                                                              g$iface$9755$13P8LC))))
                                                                                                       g$value$9752$13P8LC)
                                                                                                      (g$syntax-violation$7465$13P8LC
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$9739$13P8LC))))
                                                                                                 g$type$9753$13P8LC)))
                                                                                             g$kwd$9750$13P8LC
                                                                                             g$value$9749$13P8LC
                                                                                             g$type$9748$13P8LC))))))
                                                                                    g$ls/false$9742$13P8LC)
                                                                                  (g$syntax-violation$7465$13P8LC
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$9741$13P8LC))))
                                                                             (g$syntax-dispatch$7356$13P8LC
                                                                               g$t$9741$13P8LC
                                                                               '(_ any)))))
                                                                         g$e$9739$13P8LC))))
                                                                   (g$library-import$9716$13P8LC
                                                                     (case-lambda
                                                                       ((g$e$9725$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$t$9726$13P8LC)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9727$13P8LC)
                                                                                (if g$ls/false$9727$13P8LC
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$9728$13P8LC
                                                                                         g$imp*$9729$13P8LC)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7405$13P8LC
                                                                                              (g$syntax->datum$7468$13P8LC
                                                                                                g$imp*$9729$13P8LC))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$9732$13P8LC
                                                                                              g$subst-labels$9733$13P8LC)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$9734$13P8LC
                                                                                                  g$subst-names$9735$13P8LC)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$9736$13P8LC)
                                                                                                       (g$datum->stx$7061$13P8LC
                                                                                                         g$ctxt$9728$13P8LC
                                                                                                         g$name$9736$13P8LC)))
                                                                                                    g$subst-names$9735$13P8LC)
                                                                                                  g$subst-labels$9734$13P8LC)))
                                                                                             g$subst-labels$9733$13P8LC
                                                                                             g$subst-names$9732$13P8LC))))))
                                                                                    g$ls/false$9727$13P8LC)
                                                                                  ((case-lambda
                                                                                     ((g$t$9737$13P8LC)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9738$13P8LC)
                                                                                          (if g$ls/false$9738$13P8LC
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7465$13P8LC
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$9725$13P8LC)))
                                                                                              g$ls/false$9738$13P8LC)
                                                                                            (g$syntax-violation$7465$13P8LC
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9737$13P8LC))))
                                                                                       (g$syntax-dispatch$7356$13P8LC
                                                                                         g$t$9737$13P8LC
                                                                                         '_))))
                                                                                   g$t$9726$13P8LC))))
                                                                             (g$syntax-dispatch$7356$13P8LC
                                                                               g$t$9726$13P8LC
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$9725$13P8LC)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$9714$13P8LC
                                                                      g$e$9639$13P8LC)
                                                                  (g$module-import$9715$13P8LC
                                                                    g$e$9639$13P8LC
                                                                    g$r$9631$13P8LC)
                                                                  (g$library-import$9716$13P8LC
                                                                    g$e$9639$13P8LC))))
                                                             (case-lambda
                                                               ((g$id*$9719$13P8LC
                                                                  g$lab*$9720$13P8LC)
                                                                ((case-lambda
                                                                   ((g$lab*$9721$13P8LC
                                                                      g$id*$9722$13P8LC)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$9723$13P8LC
                                                                           g$lab$9724$13P8LC)
                                                                         (g$extend-rib!$7042$13P8LC
                                                                           g$rib$9637$13P8LC
                                                                           g$id$9723$13P8LC
                                                                           g$lab$9724$13P8LC)))
                                                                      g$id*$9722$13P8LC
                                                                      g$lab*$9721$13P8LC)))
                                                                 g$lab*$9720$13P8LC
                                                                 g$id*$9719$13P8LC))))))))
                                                     (g$chi-body*$7400$13P8LC
                                                       (cdr g$e*$9630$13P8LC)
                                                       g$r$9631$13P8LC
                                                       g$mr$9632$13P8LC
                                                       g$lex*$9633$13P8LC
                                                       g$rhs*$9634$13P8LC
                                                       g$mod**$9635$13P8LC
                                                       g$kwd*$9649$13P8LC
                                                       g$rib$9637$13P8LC
                                                       g$top?$9638$13P8LC))
                                                   (if g$top?$9638$13P8LC
                                                     (g$chi-body*$7400$13P8LC
                                                       (cdr g$e*$9630$13P8LC)
                                                       g$r$9631$13P8LC
                                                       g$mr$9632$13P8LC
                                                       (cons
                                                         (g$gen-lexical$7022$13P8LC
                                                           'dummy)
                                                         g$lex*$9633$13P8LC)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9639$13P8LC)
                                                         g$rhs*$9634$13P8LC)
                                                       g$mod**$9635$13P8LC
                                                       g$kwd*$9649$13P8LC
                                                       g$rib$9637$13P8LC
                                                       g$top?$9638$13P8LC)
                                                     (values
                                                       g$e*$9630$13P8LC
                                                       g$r$9631$13P8LC
                                                       g$mr$9632$13P8LC
                                                       g$lex*$9633$13P8LC
                                                       g$rhs*$9634$13P8LC
                                                       g$mod**$9635$13P8LC
                                                       g$kwd*$9649$13P8LC))))))))))))))
                            g$type$9648$13P8LC)))
                        (if (g$id?$7078$13P8LC g$kwd$9646$13P8LC)
                          (cons g$kwd$9646$13P8LC g$kwd*$9636$13P8LC)
                          g$kwd*$9636$13P8LC))))
                    g$kwd$9645$13P8LC
                    g$value$9644$13P8LC
                    g$type$9643$13P8LC))))))
           (car g$e*$9630$13P8LC))))))
   (g$expand-transformer$7401$13P8LC
     g$expand-transformer$10837$13P8LC
     (case-lambda
       ((g$expr$9766$13P8LC g$r$9767$13P8LC)
        ((case-lambda
           ((g$rtc$9768$13P8LC)
            ((case-lambda
               ((g$expanded-rhs$9769$13P8LC)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$9770$13P8LC)
                        (case-lambda
                          ((g$x$9771$13P8LC)
                           (begin
                             (g$invoke-library$6893$13P8LC g$x$9771$13P8LC)
                             (g$mark-visit$9770$13P8LC g$x$9771$13P8LC))))))
                     (g$vis-collector$7409$13P8LC))
                    (g$rtc$9768$13P8LC))
                  g$expanded-rhs$9769$13P8LC)))
             ((case-lambda
                ((g$inv-collector$9776$13P8LC
                   g$vis-collector$9777$13P8LC
                   g$inv-collector$9778$13P8LC
                   g$vis-collector$9779$13P8LC)
                 ((case-lambda
                    ((g$swap$9780$13P8LC)
                     (dynamic-wind
                       g$swap$9780$13P8LC
                       (case-lambda
                         (()
                          (g$chi-expr$7374$13P8LC
                            g$expr$9766$13P8LC
                            g$r$9767$13P8LC
                            g$r$9767$13P8LC)))
                       g$swap$9780$13P8LC)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$9781$13P8LC)
                           (begin
                             (g$inv-collector$9776$13P8LC
                               g$inv-collector$9778$13P8LC)
                             (set! g$inv-collector$9778$13P8LC
                               g$t$9781$13P8LC))))
                        (g$inv-collector$9776$13P8LC))
                       ((case-lambda
                          ((g$t$9782$13P8LC)
                           (begin
                             (g$vis-collector$9777$13P8LC
                               g$vis-collector$9779$13P8LC)
                             (set! g$vis-collector$9779$13P8LC
                               g$t$9782$13P8LC))))
                        (g$vis-collector$9777$13P8LC))))))))
              g$inv-collector$7408$13P8LC
              g$vis-collector$7409$13P8LC
              g$rtc$9768$13P8LC
              (case-lambda ((g$x$9783$13P8LC) (values)))))))
         (g$make-collector$7407$13P8LC)))))
   (g$parse-exports$7402$13P8LC
     g$parse-exports$10838$13P8LC
     (case-lambda
       ((g$exp*$9784$13P8LC)
        (letrec* ((g$idsyn?$9785$13P8LC
                    (case-lambda
                      ((g$x$9800$13P8LC)
                       (symbol?
                         (g$syntax->datum$7468$13P8LC g$x$9800$13P8LC))))))
          ((letrec ((g$f$9786$13P8LC
                      (case-lambda
                        ((g$exp*$9787$13P8LC
                           g$int*$9788$13P8LC
                           g$ext*$9789$13P8LC)
                         (if (null? g$exp*$9787$13P8LC)
                           (begin
                             ((case-lambda
                                ((g$id*$9790$13P8LC)
                                 (if (not (g$valid-bound-ids?$7083$13P8LC
                                            g$id*$9790$13P8LC))
                                   (g$syntax-violation$7465$13P8LC
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7384$13P8LC
                                       g$id*$9790$13P8LC))
                                   (void))))
                              (map (case-lambda
                                     ((g$x$9791$13P8LC)
                                      (g$make-stx$7051$13P8LC
                                        g$x$9791$13P8LC
                                        g$top-mark*$7020$13P8LC
                                        '()
                                        '())))
                                   g$ext*$9789$13P8LC))
                             (values
                               (map g$syntax->datum$7468$13P8LC
                                    g$int*$9788$13P8LC)
                               (map g$syntax->datum$7468$13P8LC
                                    g$ext*$9789$13P8LC)))
                           ((case-lambda
                              ((g$t$9792$13P8LC)
                               ((case-lambda
                                  ((g$ls/false$9793$13P8LC)
                                   (if g$ls/false$9793$13P8LC
                                     (apply
                                       (case-lambda
                                         ((g$rename$9794$13P8LC
                                            g$i*$9795$13P8LC
                                            g$e*$9796$13P8LC)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$7468$13P8LC
                                                                g$rename$9794$13P8LC)
                                                              'rename)
                                                       (if (g$for-all$5356$13P8LC
                                                             g$idsyn?$9785$13P8LC
                                                             g$i*$9795$13P8LC)
                                                         (begin
                                                           '#f
                                                           (g$for-all$5356$13P8LC
                                                             g$idsyn?$9785$13P8LC
                                                             g$e*$9796$13P8LC))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$7465$13P8LC
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$9787$13P8LC))
                                              (void))
                                            (g$f$9786$13P8LC
                                              (cdr g$exp*$9787$13P8LC)
                                              (append
                                                g$i*$9795$13P8LC
                                                g$int*$9788$13P8LC)
                                              (append
                                                g$e*$9796$13P8LC
                                                g$ext*$9789$13P8LC)))))
                                       g$ls/false$9793$13P8LC)
                                     ((case-lambda
                                        ((g$t$9797$13P8LC)
                                         ((case-lambda
                                            ((g$ls/false$9798$13P8LC)
                                             (if g$ls/false$9798$13P8LC
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$9799$13P8LC)
                                                    (begin
                                                      (if (not (g$idsyn?$9785$13P8LC
                                                                 g$ie$9799$13P8LC))
                                                        (g$syntax-violation$7465$13P8LC
                                                          'export
                                                          '"invalid export"
                                                          g$ie$9799$13P8LC)
                                                        (void))
                                                      (g$f$9786$13P8LC
                                                        (cdr g$exp*$9787$13P8LC)
                                                        (cons
                                                          g$ie$9799$13P8LC
                                                          g$int*$9788$13P8LC)
                                                        (cons
                                                          g$ie$9799$13P8LC
                                                          g$ext*$9789$13P8LC)))))
                                                 g$ls/false$9798$13P8LC)
                                               (g$syntax-violation$7465$13P8LC
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9797$13P8LC))))
                                          (g$syntax-dispatch$7356$13P8LC
                                            g$t$9797$13P8LC
                                            'any))))
                                      g$t$9792$13P8LC))))
                                (g$syntax-dispatch$7356$13P8LC
                                  g$t$9792$13P8LC
                                  '(any . #(each (any any)))))))
                            (car g$exp*$9787$13P8LC)))))))
             g$f$9786$13P8LC)
           g$exp*$9784$13P8LC
           '()
           '())))))
   (g$parse-library-name$7403$13P8LC
     g$parse-library-name$10839$13P8LC
     (case-lambda
       ((g$spec$9801$13P8LC)
        (letrec* ((g$parse$9802$13P8LC
                    (case-lambda
                      ((g$x$9809$13P8LC)
                       ((case-lambda
                          ((g$t$9810$13P8LC)
                           ((case-lambda
                              ((g$ls/false$9811$13P8LC)
                               (if (if g$ls/false$9811$13P8LC
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$9812$13P8LC)
                                            (g$for-all$5356$13P8LC
                                              (case-lambda
                                                ((g$x$9813$13P8LC)
                                                 ((case-lambda
                                                    ((g$x$9814$13P8LC)
                                                     (if (integer?
                                                           g$x$9814$13P8LC)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$9814$13P8LC))
                                                       '#f)))
                                                  (g$syntax->datum$7468$13P8LC
                                                    g$x$9813$13P8LC))))
                                              g$v*$9812$13P8LC)))
                                         g$ls/false$9811$13P8LC))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$9815$13P8LC)
                                      (values
                                        '()
                                        (map g$syntax->datum$7468$13P8LC
                                             g$v*$9815$13P8LC))))
                                   g$ls/false$9811$13P8LC)
                                 ((case-lambda
                                    ((g$t$9816$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$9817$13P8LC)
                                         (if (if g$ls/false$9817$13P8LC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$9818$13P8LC
                                                        g$rest$9819$13P8LC)
                                                      (symbol?
                                                        (g$syntax->datum$7468$13P8LC
                                                          g$x$9818$13P8LC))))
                                                   g$ls/false$9817$13P8LC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$9820$13P8LC
                                                  g$rest$9821$13P8LC)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$9802$13P8LC
                                                       g$rest$9821$13P8LC)))
                                                  (case-lambda
                                                    ((g$x*$9824$13P8LC
                                                       g$v*$9825$13P8LC)
                                                     ((case-lambda
                                                        ((g$v*$9826$13P8LC
                                                           g$x*$9827$13P8LC)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7468$13P8LC
                                                               g$x$9820$13P8LC)
                                                             g$x*$9827$13P8LC)
                                                           g$v*$9826$13P8LC)))
                                                      g$v*$9825$13P8LC
                                                      g$x*$9824$13P8LC))))))
                                             g$ls/false$9817$13P8LC)
                                           ((case-lambda
                                              ((g$t$9828$13P8LC)
                                               ((case-lambda
                                                  ((g$ls/false$9829$13P8LC)
                                                   (if g$ls/false$9829$13P8LC
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$9829$13P8LC)
                                                     ((case-lambda
                                                        ((g$t$9830$13P8LC)
                                                         ((case-lambda
                                                            ((g$ls/false$9831$13P8LC)
                                                             (if g$ls/false$9831$13P8LC
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7465$13P8LC
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$9801$13P8LC)))
                                                                 g$ls/false$9831$13P8LC)
                                                               (g$syntax-violation$7465$13P8LC
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$9830$13P8LC))))
                                                          (g$syntax-dispatch$7356$13P8LC
                                                            g$t$9830$13P8LC
                                                            '_))))
                                                      g$t$9828$13P8LC))))
                                                (g$syntax-dispatch$7356$13P8LC
                                                  g$t$9828$13P8LC
                                                  '()))))
                                            g$t$9816$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$9816$13P8LC
                                        '(any . any)))))
                                  g$t$9810$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$9810$13P8LC
                              '(each-any)))))
                        g$x$9809$13P8LC)))))
          (call-with-values
            (case-lambda (() (g$parse$9802$13P8LC g$spec$9801$13P8LC)))
            (case-lambda
              ((g$name*$9805$13P8LC g$ver*$9806$13P8LC)
               ((case-lambda
                  ((g$ver*$9807$13P8LC g$name*$9808$13P8LC)
                   (begin
                     (if (null? g$name*$9808$13P8LC)
                       (g$syntax-violation$7465$13P8LC
                         '#f
                         '"empty library name"
                         g$spec$9801$13P8LC)
                       (void))
                     (values g$name*$9808$13P8LC g$ver*$9807$13P8LC))))
                g$ver*$9806$13P8LC
                g$name*$9805$13P8LC))))))))
   (g$parse-library$7404$13P8LC
     g$parse-library$10840$13P8LC
     (case-lambda
       ((g$e$9832$13P8LC)
        ((case-lambda
           ((g$t$9833$13P8LC)
            ((case-lambda
               ((g$ls/false$9834$13P8LC)
                (if (if g$ls/false$9834$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$9835$13P8LC
                               g$name*$9836$13P8LC
                               g$export$9837$13P8LC
                               g$exp*$9838$13P8LC
                               g$import$9839$13P8LC
                               g$imp*$9840$13P8LC
                               g$b*$9841$13P8LC)
                             (if (eq? (g$syntax->datum$7468$13P8LC
                                        g$export$9837$13P8LC)
                                      'export)
                               (if (eq? (g$syntax->datum$7468$13P8LC
                                          g$import$9839$13P8LC)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7468$13P8LC
                                          g$library$9835$13P8LC)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$9834$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$9842$13P8LC
                         g$name*$9843$13P8LC
                         g$export$9844$13P8LC
                         g$exp*$9845$13P8LC
                         g$import$9846$13P8LC
                         g$imp*$9847$13P8LC
                         g$b*$9848$13P8LC)
                       (values
                         g$name*$9843$13P8LC
                         g$exp*$9845$13P8LC
                         g$imp*$9847$13P8LC
                         g$b*$9848$13P8LC)))
                    g$ls/false$9834$13P8LC)
                  ((case-lambda
                     ((g$t$9849$13P8LC)
                      ((case-lambda
                         ((g$ls/false$9850$13P8LC)
                          (if g$ls/false$9850$13P8LC
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7465$13P8LC
                                   '#f
                                   '"malformed library"
                                   g$e$9832$13P8LC)))
                              g$ls/false$9850$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$9849$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC g$t$9849$13P8LC '_))))
                   g$t$9833$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$9833$13P8LC
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$9832$13P8LC))))
   (g$parse-import-spec*$7405$13P8LC
     g$parse-import-spec*$10841$13P8LC
     (case-lambda
       ((g$imp*$9851$13P8LC)
        (letrec* ((g$idsyn?$9852$13P8LC
                    (case-lambda
                      ((g$x$10111$13P8LC)
                       (symbol?
                         (g$syntax->datum$7468$13P8LC g$x$10111$13P8LC)))))
                  (g$dup-error$9853$13P8LC
                    (case-lambda
                      ((g$name$10110$13P8LC)
                       (g$syntax-violation$7465$13P8LC
                         'import
                         '"two imports with different bindings"
                         g$name$10110$13P8LC))))
                  (g$merge-substs$9854$13P8LC
                    (case-lambda
                      ((g$s$10101$13P8LC g$subst$10102$13P8LC)
                       (letrec* ((g$insert-to-subst$10103$13P8LC
                                   (case-lambda
                                     ((g$a$10104$13P8LC g$subst$10105$13P8LC)
                                      ((case-lambda
                                         ((g$name$10106$13P8LC
                                            g$label$10107$13P8LC)
                                          ((case-lambda
                                             ((g$t$10108$13P8LC)
                                              (if g$t$10108$13P8LC
                                                ((case-lambda
                                                   ((g$x$10109$13P8LC)
                                                    (if (eq? (cdr g$x$10109$13P8LC)
                                                             g$label$10107$13P8LC)
                                                      g$subst$10105$13P8LC
                                                      (g$dup-error$9853$13P8LC
                                                        g$name$10106$13P8LC))))
                                                 g$t$10108$13P8LC)
                                                (cons
                                                  g$a$10104$13P8LC
                                                  g$subst$10105$13P8LC))))
                                           (assq
                                             g$name$10106$13P8LC
                                             g$subst$10105$13P8LC))))
                                       (car g$a$10104$13P8LC)
                                       (cdr g$a$10104$13P8LC))))))
                         (if (null? g$s$10101$13P8LC)
                           g$subst$10102$13P8LC
                           (g$insert-to-subst$10103$13P8LC
                             (car g$s$10101$13P8LC)
                             (g$merge-substs$9854$13P8LC
                               (cdr g$s$10101$13P8LC)
                               g$subst$10102$13P8LC)))))))
                  (g$exclude*$9855$13P8LC
                    (case-lambda
                      ((g$sym*$10077$13P8LC g$subst$10078$13P8LC)
                       (letrec* ((g$exclude$10079$13P8LC
                                   (case-lambda
                                     ((g$sym$10092$13P8LC g$subst$10093$13P8LC)
                                      (if (null? g$subst$10093$13P8LC)
                                        (g$syntax-violation$7465$13P8LC
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10092$13P8LC)
                                        (if (eq? g$sym$10092$13P8LC
                                                 (g$caar$4886$13P8LC
                                                   g$subst$10093$13P8LC))
                                          (values
                                            (g$cdar$4888$13P8LC
                                              g$subst$10093$13P8LC)
                                            (cdr g$subst$10093$13P8LC))
                                          ((case-lambda
                                             ((g$a$10094$13P8LC)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10079$13P8LC
                                                     g$sym$10092$13P8LC
                                                     (cdr g$subst$10093$13P8LC))))
                                                (case-lambda
                                                  ((g$old$10097$13P8LC
                                                     g$subst$10098$13P8LC)
                                                   ((case-lambda
                                                      ((g$subst$10099$13P8LC
                                                         g$old$10100$13P8LC)
                                                       (values
                                                         g$old$10100$13P8LC
                                                         (cons
                                                           g$a$10094$13P8LC
                                                           g$subst$10099$13P8LC))))
                                                    g$subst$10098$13P8LC
                                                    g$old$10097$13P8LC))))))
                                           (car g$subst$10093$13P8LC))))))))
                         (if (null? g$sym*$10077$13P8LC)
                           (values '() g$subst$10078$13P8LC)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10079$13P8LC
                                  (car g$sym*$10077$13P8LC)
                                  g$subst$10078$13P8LC)))
                             (case-lambda
                               ((g$old$10082$13P8LC g$subst$10083$13P8LC)
                                ((case-lambda
                                   ((g$subst$10084$13P8LC g$old$10085$13P8LC)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$9855$13P8LC
                                           (cdr g$sym*$10077$13P8LC)
                                           g$subst$10084$13P8LC)))
                                      (case-lambda
                                        ((g$old*$10088$13P8LC
                                           g$subst$10089$13P8LC)
                                         ((case-lambda
                                            ((g$subst$10090$13P8LC
                                               g$old*$10091$13P8LC)
                                             (values
                                               (cons
                                                 g$old$10085$13P8LC
                                                 g$old*$10091$13P8LC)
                                               g$subst$10090$13P8LC)))
                                          g$subst$10089$13P8LC
                                          g$old*$10088$13P8LC))))))
                                 g$subst$10083$13P8LC
                                 g$old$10082$13P8LC)))))))))
                  (g$find*$9856$13P8LC
                    (case-lambda
                      ((g$sym*$10073$13P8LC g$subst$10074$13P8LC)
                       (map (case-lambda
                              ((g$x$10075$13P8LC)
                               ((case-lambda
                                  ((g$t$10076$13P8LC)
                                   (if g$t$10076$13P8LC
                                     (cdr g$t$10076$13P8LC)
                                     (g$syntax-violation$7465$13P8LC
                                       'import
                                       '"cannot find identifier"
                                       g$x$10075$13P8LC))))
                                (assq g$x$10075$13P8LC g$subst$10074$13P8LC))))
                            g$sym*$10073$13P8LC))))
                  (g$rem*$9857$13P8LC
                    (case-lambda
                      ((g$sym*$10069$13P8LC g$subst$10070$13P8LC)
                       ((letrec ((g$f$10071$13P8LC
                                   (case-lambda
                                     ((g$subst$10072$13P8LC)
                                      (if (null? g$subst$10072$13P8LC)
                                        '()
                                        (if (memq
                                              (g$caar$4886$13P8LC
                                                g$subst$10072$13P8LC)
                                              g$sym*$10069$13P8LC)
                                          (g$f$10071$13P8LC
                                            (cdr g$subst$10072$13P8LC))
                                          (cons
                                            (car g$subst$10072$13P8LC)
                                            (g$f$10071$13P8LC
                                              (cdr g$subst$10072$13P8LC)))))))))
                          g$f$10071$13P8LC)
                        g$subst$10070$13P8LC))))
                  (g$remove-dups$9858$13P8LC
                    (case-lambda
                      ((g$ls$10068$13P8LC)
                       (if (null? g$ls$10068$13P8LC)
                         '()
                         (if (memq
                               (car g$ls$10068$13P8LC)
                               (cdr g$ls$10068$13P8LC))
                           (g$remove-dups$9858$13P8LC (cdr g$ls$10068$13P8LC))
                           (cons
                             (car g$ls$10068$13P8LC)
                             (g$remove-dups$9858$13P8LC
                               (cdr g$ls$10068$13P8LC))))))))
                  (g$parse-library-name$9859$13P8LC
                    (case-lambda
                      ((g$spec$9953$13P8LC)
                       (letrec* ((g$subversion?$9954$13P8LC
                                   (case-lambda
                                     ((g$x$10067$13P8LC)
                                      (if (integer? g$x$10067$13P8LC)
                                        (if (exact? g$x$10067$13P8LC)
                                          (begin '#f (>= g$x$10067$13P8LC '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$9955$13P8LC
                                   (case-lambda
                                     ((g$x*$10019$13P8LC)
                                      ((case-lambda
                                         ((g$t$10020$13P8LC)
                                          ((case-lambda
                                             ((g$ls/false$10021$13P8LC)
                                              (if (if g$ls/false$10021$13P8LC
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10022$13P8LC)
                                                           (g$subversion?$9954$13P8LC
                                                             (g$syntax->datum$7468$13P8LC
                                                               g$n$10022$13P8LC))))
                                                        g$ls/false$10021$13P8LC))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10023$13P8LC)
                                                     (case-lambda
                                                       ((g$x$10024$13P8LC)
                                                        (= g$x$10024$13P8LC
                                                           (g$syntax->datum$7468$13P8LC
                                                             g$n$10023$13P8LC))))))
                                                  g$ls/false$10021$13P8LC)
                                                ((case-lambda
                                                   ((g$t$10025$13P8LC)
                                                    ((case-lambda
                                                       ((g$ls/false$10026$13P8LC)
                                                        (if (if g$ls/false$10026$13P8LC
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10027$13P8LC
                                                                       g$sub*$10028$13P8LC)
                                                                     (eq? (g$syntax->datum$7468$13P8LC
                                                                            g$p?$10027$13P8LC)
                                                                          'and)))
                                                                  g$ls/false$10026$13P8LC))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10029$13P8LC
                                                                 g$sub*$10030$13P8LC)
                                                               ((case-lambda
                                                                  ((g$p*$10031$13P8LC)
                                                                   (case-lambda
                                                                     ((g$x$10032$13P8LC)
                                                                      (g$for-all$5356$13P8LC
                                                                        (case-lambda
                                                                          ((g$p$10033$13P8LC)
                                                                           (g$p$10033$13P8LC
                                                                             g$x$10032$13P8LC)))
                                                                        g$p*$10031$13P8LC)))))
                                                                (map g$subversion-pred$9955$13P8LC
                                                                     g$sub*$10030$13P8LC))))
                                                            g$ls/false$10026$13P8LC)
                                                          ((case-lambda
                                                             ((g$t$10034$13P8LC)
                                                              ((case-lambda
                                                                 ((g$ls/false$10035$13P8LC)
                                                                  (if (if g$ls/false$10035$13P8LC
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10036$13P8LC
                                                                                 g$sub*$10037$13P8LC)
                                                                               (eq? (g$syntax->datum$7468$13P8LC
                                                                                      g$p?$10036$13P8LC)
                                                                                    'or)))
                                                                            g$ls/false$10035$13P8LC))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10038$13P8LC
                                                                           g$sub*$10039$13P8LC)
                                                                         ((case-lambda
                                                                            ((g$p*$10040$13P8LC)
                                                                             (case-lambda
                                                                               ((g$x$10041$13P8LC)
                                                                                (g$exists$5357$13P8LC
                                                                                  (case-lambda
                                                                                    ((g$p$10042$13P8LC)
                                                                                     (g$p$10042$13P8LC
                                                                                       g$x$10041$13P8LC)))
                                                                                  g$p*$10040$13P8LC)))))
                                                                          (map g$subversion-pred$9955$13P8LC
                                                                               g$sub*$10039$13P8LC))))
                                                                      g$ls/false$10035$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$t$10043$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10044$13P8LC)
                                                                            (if (if g$ls/false$10044$13P8LC
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10045$13P8LC
                                                                                           g$sub$10046$13P8LC)
                                                                                         (eq? (g$syntax->datum$7468$13P8LC
                                                                                                g$p?$10045$13P8LC)
                                                                                              'not)))
                                                                                      g$ls/false$10044$13P8LC))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10047$13P8LC
                                                                                     g$sub$10048$13P8LC)
                                                                                   ((case-lambda
                                                                                      ((g$p$10049$13P8LC)
                                                                                       (case-lambda
                                                                                         ((g$x$10050$13P8LC)
                                                                                          (not (g$p$10049$13P8LC
                                                                                                 g$x$10050$13P8LC))))))
                                                                                    (g$subversion-pred$9955$13P8LC
                                                                                      g$sub$10048$13P8LC))))
                                                                                g$ls/false$10044$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$t$10051$13P8LC)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10052$13P8LC)
                                                                                      (if (if g$ls/false$10052$13P8LC
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10053$13P8LC
                                                                                                     g$n$10054$13P8LC)
                                                                                                   (if (eq? (g$syntax->datum$7468$13P8LC
                                                                                                              g$p?$10053$13P8LC)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$9954$13P8LC
                                                                                                         (g$syntax->datum$7468$13P8LC
                                                                                                           g$n$10054$13P8LC)))
                                                                                                     '#f)))
                                                                                                g$ls/false$10052$13P8LC))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10055$13P8LC
                                                                                               g$n$10056$13P8LC)
                                                                                             (case-lambda
                                                                                               ((g$x$10057$13P8LC)
                                                                                                (<= g$x$10057$13P8LC
                                                                                                    (g$syntax->datum$7468$13P8LC
                                                                                                      g$n$10056$13P8LC))))))
                                                                                          g$ls/false$10052$13P8LC)
                                                                                        ((case-lambda
                                                                                           ((g$t$10058$13P8LC)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10059$13P8LC)
                                                                                                (if (if g$ls/false$10059$13P8LC
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10060$13P8LC
                                                                                                               g$n$10061$13P8LC)
                                                                                                             (if (eq? (g$syntax->datum$7468$13P8LC
                                                                                                                        g$p?$10060$13P8LC)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$9954$13P8LC
                                                                                                                   g$n$10061$13P8LC))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10059$13P8LC))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10062$13P8LC
                                                                                                         g$n$10063$13P8LC)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10064$13P8LC)
                                                                                                          (>= g$x$10064$13P8LC
                                                                                                              (g$syntax->datum$7468$13P8LC
                                                                                                                g$n$10063$13P8LC))))))
                                                                                                    g$ls/false$10059$13P8LC)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10065$13P8LC)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10066$13P8LC)
                                                                                                          (if g$ls/false$10066$13P8LC
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7465$13P8LC
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$9953$13P8LC
                                                                                                                   g$x*$10019$13P8LC)))
                                                                                                              g$ls/false$10066$13P8LC)
                                                                                                            (g$syntax-violation$7465$13P8LC
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10065$13P8LC))))
                                                                                                       (g$syntax-dispatch$7356$13P8LC
                                                                                                         g$t$10065$13P8LC
                                                                                                         '_))))
                                                                                                   g$t$10058$13P8LC))))
                                                                                             (g$syntax-dispatch$7356$13P8LC
                                                                                               g$t$10058$13P8LC
                                                                                               '(any any)))))
                                                                                         g$t$10051$13P8LC))))
                                                                                   (g$syntax-dispatch$7356$13P8LC
                                                                                     g$t$10051$13P8LC
                                                                                     '(any any)))))
                                                                               g$t$10043$13P8LC))))
                                                                         (g$syntax-dispatch$7356$13P8LC
                                                                           g$t$10043$13P8LC
                                                                           '(any any)))))
                                                                     g$t$10034$13P8LC))))
                                                               (g$syntax-dispatch$7356$13P8LC
                                                                 g$t$10034$13P8LC
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10025$13P8LC))))
                                                     (g$syntax-dispatch$7356$13P8LC
                                                       g$t$10025$13P8LC
                                                       '(any . each-any)))))
                                                 g$t$10020$13P8LC))))
                                           (g$syntax-dispatch$7356$13P8LC
                                             g$t$10020$13P8LC
                                             'any))))
                                       g$x*$10019$13P8LC))))
                                 (g$version-pred$9956$13P8LC
                                   (case-lambda
                                     ((g$x*$9979$13P8LC)
                                      ((case-lambda
                                         ((g$t$9980$13P8LC)
                                          ((case-lambda
                                             ((g$ls/false$9981$13P8LC)
                                              (if g$ls/false$9981$13P8LC
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$9982$13P8LC)
                                                        '#t))))
                                                  g$ls/false$9981$13P8LC)
                                                ((case-lambda
                                                   ((g$t$9983$13P8LC)
                                                    ((case-lambda
                                                       ((g$ls/false$9984$13P8LC)
                                                        (if (if g$ls/false$9984$13P8LC
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$9985$13P8LC
                                                                       g$ver*$9986$13P8LC)
                                                                     (eq? (g$syntax->datum$7468$13P8LC
                                                                            g$c$9985$13P8LC)
                                                                          'and)))
                                                                  g$ls/false$9984$13P8LC))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$9987$13P8LC
                                                                 g$ver*$9988$13P8LC)
                                                               ((case-lambda
                                                                  ((g$p*$9989$13P8LC)
                                                                   (case-lambda
                                                                     ((g$x$9990$13P8LC)
                                                                      (g$for-all$5356$13P8LC
                                                                        (case-lambda
                                                                          ((g$p$9991$13P8LC)
                                                                           (g$p$9991$13P8LC
                                                                             g$x$9990$13P8LC)))
                                                                        g$p*$9989$13P8LC)))))
                                                                (map g$version-pred$9956$13P8LC
                                                                     g$ver*$9988$13P8LC))))
                                                            g$ls/false$9984$13P8LC)
                                                          ((case-lambda
                                                             ((g$t$9992$13P8LC)
                                                              ((case-lambda
                                                                 ((g$ls/false$9993$13P8LC)
                                                                  (if (if g$ls/false$9993$13P8LC
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$9994$13P8LC
                                                                                 g$ver*$9995$13P8LC)
                                                                               (eq? (g$syntax->datum$7468$13P8LC
                                                                                      g$c$9994$13P8LC)
                                                                                    'or)))
                                                                            g$ls/false$9993$13P8LC))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$9996$13P8LC
                                                                           g$ver*$9997$13P8LC)
                                                                         ((case-lambda
                                                                            ((g$p*$9998$13P8LC)
                                                                             (case-lambda
                                                                               ((g$x$9999$13P8LC)
                                                                                (g$exists$5357$13P8LC
                                                                                  (case-lambda
                                                                                    ((g$p$10000$13P8LC)
                                                                                     (g$p$10000$13P8LC
                                                                                       g$x$9999$13P8LC)))
                                                                                  g$p*$9998$13P8LC)))))
                                                                          (map g$version-pred$9956$13P8LC
                                                                               g$ver*$9997$13P8LC))))
                                                                      g$ls/false$9993$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$t$10001$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10002$13P8LC)
                                                                            (if (if g$ls/false$10002$13P8LC
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10003$13P8LC
                                                                                           g$ver$10004$13P8LC)
                                                                                         (eq? (g$syntax->datum$7468$13P8LC
                                                                                                g$c$10003$13P8LC)
                                                                                              'not)))
                                                                                      g$ls/false$10002$13P8LC))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10005$13P8LC
                                                                                     g$ver$10006$13P8LC)
                                                                                   ((case-lambda
                                                                                      ((g$p$10007$13P8LC)
                                                                                       (case-lambda
                                                                                         ((g$x$10008$13P8LC)
                                                                                          (not (g$p$10007$13P8LC
                                                                                                 g$x$10008$13P8LC))))))
                                                                                    (g$version-pred$9956$13P8LC
                                                                                      g$ver$10006$13P8LC))))
                                                                                g$ls/false$10002$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$t$10009$13P8LC)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10010$13P8LC)
                                                                                      (if g$ls/false$10010$13P8LC
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10011$13P8LC)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10012$13P8LC)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10013$13P8LC)
                                                                                                    ((letrec ((g$f$10014$13P8LC
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10015$13P8LC
                                                                                                                     g$x$10016$13P8LC)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10015$13P8LC)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10016$13P8LC)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10015$13P8LC)
                                                                                                                            (car g$x$10016$13P8LC))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10014$13P8LC
                                                                                                                             (cdr g$p*$10015$13P8LC)
                                                                                                                             (cdr g$x$10016$13P8LC)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10014$13P8LC)
                                                                                                     g$p*$10012$13P8LC
                                                                                                     g$x$10013$13P8LC)))))
                                                                                              (map g$subversion-pred$9955$13P8LC
                                                                                                   g$sub*$10011$13P8LC))))
                                                                                          g$ls/false$10010$13P8LC)
                                                                                        ((case-lambda
                                                                                           ((g$t$10017$13P8LC)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10018$13P8LC)
                                                                                                (if g$ls/false$10018$13P8LC
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7465$13P8LC
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$9953$13P8LC
                                                                                                         g$x*$9979$13P8LC)))
                                                                                                    g$ls/false$10018$13P8LC)
                                                                                                  (g$syntax-violation$7465$13P8LC
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10017$13P8LC))))
                                                                                             (g$syntax-dispatch$7356$13P8LC
                                                                                               g$t$10017$13P8LC
                                                                                               '_))))
                                                                                         g$t$10009$13P8LC))))
                                                                                   (g$syntax-dispatch$7356$13P8LC
                                                                                     g$t$10009$13P8LC
                                                                                     'each-any))))
                                                                               g$t$10001$13P8LC))))
                                                                         (g$syntax-dispatch$7356$13P8LC
                                                                           g$t$10001$13P8LC
                                                                           '(any any)))))
                                                                     g$t$9992$13P8LC))))
                                                               (g$syntax-dispatch$7356$13P8LC
                                                                 g$t$9992$13P8LC
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$9983$13P8LC))))
                                                     (g$syntax-dispatch$7356$13P8LC
                                                       g$t$9983$13P8LC
                                                       '(any . each-any)))))
                                                 g$t$9980$13P8LC))))
                                           (g$syntax-dispatch$7356$13P8LC
                                             g$t$9980$13P8LC
                                             '()))))
                                       g$x*$9979$13P8LC)))))
                         ((letrec ((g$f$9957$13P8LC
                                     (case-lambda
                                       ((g$x$9958$13P8LC)
                                        ((case-lambda
                                           ((g$t$9959$13P8LC)
                                            ((case-lambda
                                               ((g$ls/false$9960$13P8LC)
                                                (if g$ls/false$9960$13P8LC
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$9961$13P8LC)
                                                       (values
                                                         '()
                                                         (g$version-pred$9956$13P8LC
                                                           g$version-spec*$9961$13P8LC))))
                                                    g$ls/false$9960$13P8LC)
                                                  ((case-lambda
                                                     ((g$t$9962$13P8LC)
                                                      ((case-lambda
                                                         ((g$ls/false$9963$13P8LC)
                                                          (if (if g$ls/false$9963$13P8LC
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$9964$13P8LC
                                                                         g$x*$9965$13P8LC)
                                                                       (g$idsyn?$9852$13P8LC
                                                                         g$x$9964$13P8LC)))
                                                                    g$ls/false$9963$13P8LC))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$9966$13P8LC
                                                                   g$x*$9967$13P8LC)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$9957$13P8LC
                                                                        g$x*$9967$13P8LC)))
                                                                   (case-lambda
                                                                     ((g$name$9970$13P8LC
                                                                        g$pred$9971$13P8LC)
                                                                      ((case-lambda
                                                                         ((g$pred$9972$13P8LC
                                                                            g$name$9973$13P8LC)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7468$13P8LC
                                                                                g$x$9966$13P8LC)
                                                                              g$name$9973$13P8LC)
                                                                            g$pred$9972$13P8LC)))
                                                                       g$pred$9971$13P8LC
                                                                       g$name$9970$13P8LC))))))
                                                              g$ls/false$9963$13P8LC)
                                                            ((case-lambda
                                                               ((g$t$9974$13P8LC)
                                                                ((case-lambda
                                                                   ((g$ls/false$9975$13P8LC)
                                                                    (if g$ls/false$9975$13P8LC
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$9976$13P8LC)
                                                                                '#t)))))
                                                                        g$ls/false$9975$13P8LC)
                                                                      ((case-lambda
                                                                         ((g$t$9977$13P8LC)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9978$13P8LC)
                                                                              (if g$ls/false$9978$13P8LC
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7465$13P8LC
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$9953$13P8LC)))
                                                                                  g$ls/false$9978$13P8LC)
                                                                                (g$syntax-violation$7465$13P8LC
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9977$13P8LC))))
                                                                           (g$syntax-dispatch$7356$13P8LC
                                                                             g$t$9977$13P8LC
                                                                             '_))))
                                                                       g$t$9974$13P8LC))))
                                                                 (g$syntax-dispatch$7356$13P8LC
                                                                   g$t$9974$13P8LC
                                                                   '()))))
                                                             g$t$9962$13P8LC))))
                                                       (g$syntax-dispatch$7356$13P8LC
                                                         g$t$9962$13P8LC
                                                         '(any . any)))))
                                                   g$t$9959$13P8LC))))
                                             (g$syntax-dispatch$7356$13P8LC
                                               g$t$9959$13P8LC
                                               '(each-any)))))
                                         g$x$9958$13P8LC)))))
                            g$f$9957$13P8LC)
                          g$spec$9953$13P8LC)))))
                  (g$import-library$9860$13P8LC
                    (case-lambda
                      ((g$spec*$9945$13P8LC)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$9859$13P8LC
                              g$spec*$9945$13P8LC)))
                         (case-lambda
                           ((g$name$9948$13P8LC g$pred$9949$13P8LC)
                            ((case-lambda
                               ((g$pred$9950$13P8LC g$name$9951$13P8LC)
                                (begin
                                  (if (null? g$name$9951$13P8LC)
                                    (g$syntax-violation$7465$13P8LC
                                      'import
                                      '"empty library name"
                                      g$spec*$9945$13P8LC)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$9952$13P8LC)
                                      (begin
                                        (if (not g$lib$9952$13P8LC)
                                          (g$syntax-violation$7465$13P8LC
                                            'import
                                            '"cannot find library with required name"
                                            g$name$9951$13P8LC)
                                          (void))
                                        (if (not (g$pred$9950$13P8LC
                                                   (g$library-version$6846$13P8LC
                                                     g$lib$9952$13P8LC)))
                                          (g$syntax-violation$7465$13P8LC
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$9945$13P8LC
                                            g$lib$9952$13P8LC)
                                          (void))
                                        ((g$imp-collector$7410$13P8LC)
                                         g$lib$9952$13P8LC)
                                        (g$library-subst$6850$13P8LC
                                          g$lib$9952$13P8LC))))
                                   (g$find-library-by-name$6886$13P8LC
                                     g$name$9951$13P8LC)))))
                             g$pred$9949$13P8LC
                             g$name$9948$13P8LC)))))))
                  (g$get-import$9861$13P8LC
                    (case-lambda
                      ((g$spec$9874$13P8LC)
                       ((case-lambda
                          ((g$t$9875$13P8LC)
                           ((case-lambda
                              ((g$ls/false$9876$13P8LC)
                               (if (if g$ls/false$9876$13P8LC
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$9877$13P8LC g$x*$9878$13P8LC)
                                            (not (memq
                                                   (g$syntax->datum$7468$13P8LC
                                                     g$x$9877$13P8LC)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$9876$13P8LC))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$9879$13P8LC g$x*$9880$13P8LC)
                                      (g$import-library$9860$13P8LC
                                        (cons
                                          g$x$9879$13P8LC
                                          g$x*$9880$13P8LC))))
                                   g$ls/false$9876$13P8LC)
                                 ((case-lambda
                                    ((g$t$9881$13P8LC)
                                     ((case-lambda
                                        ((g$ls/false$9882$13P8LC)
                                         (if (if g$ls/false$9882$13P8LC
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$9883$13P8LC
                                                        g$isp$9884$13P8LC
                                                        g$old*$9885$13P8LC
                                                        g$new*$9886$13P8LC)
                                                      (if (eq? (g$syntax->datum$7468$13P8LC
                                                                 g$rename$9883$13P8LC)
                                                               'rename)
                                                        (if (g$for-all$5356$13P8LC
                                                              g$idsyn?$9852$13P8LC
                                                              g$old*$9885$13P8LC)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5356$13P8LC
                                                              g$idsyn?$9852$13P8LC
                                                              g$new*$9886$13P8LC))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$9882$13P8LC))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$9887$13P8LC
                                                  g$isp$9888$13P8LC
                                                  g$old*$9889$13P8LC
                                                  g$new*$9890$13P8LC)
                                                ((case-lambda
                                                   ((g$subst$9891$13P8LC
                                                      g$old*$9892$13P8LC
                                                      g$new*$9893$13P8LC)
                                                    ((case-lambda
                                                       ((g$old-label*$9894$13P8LC)
                                                        ((case-lambda
                                                           ((g$subst$9895$13P8LC)
                                                            (g$merge-substs$9854$13P8LC
                                                              (map cons
                                                                   g$new*$9893$13P8LC
                                                                   g$old-label*$9894$13P8LC)
                                                              g$subst$9895$13P8LC)))
                                                         (g$rem*$9857$13P8LC
                                                           g$old*$9892$13P8LC
                                                           g$subst$9891$13P8LC))))
                                                     (g$find*$9856$13P8LC
                                                       g$old*$9892$13P8LC
                                                       g$subst$9891$13P8LC))))
                                                 (g$get-import$9861$13P8LC
                                                   g$isp$9888$13P8LC)
                                                 (map g$syntax->datum$7468$13P8LC
                                                      g$old*$9889$13P8LC)
                                                 (map g$syntax->datum$7468$13P8LC
                                                      g$new*$9890$13P8LC))))
                                             g$ls/false$9882$13P8LC)
                                           ((case-lambda
                                              ((g$t$9896$13P8LC)
                                               ((case-lambda
                                                  ((g$ls/false$9897$13P8LC)
                                                   (if (if g$ls/false$9897$13P8LC
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$9898$13P8LC
                                                                  g$isp$9899$13P8LC
                                                                  g$sym*$9900$13P8LC)
                                                                (if (eq? (g$syntax->datum$7468$13P8LC
                                                                           g$except$9898$13P8LC)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5356$13P8LC
                                                                      g$idsyn?$9852$13P8LC
                                                                      g$sym*$9900$13P8LC))
                                                                  '#f)))
                                                             g$ls/false$9897$13P8LC))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$9901$13P8LC
                                                            g$isp$9902$13P8LC
                                                            g$sym*$9903$13P8LC)
                                                          ((case-lambda
                                                             ((g$subst$9904$13P8LC)
                                                              (g$rem*$9857$13P8LC
                                                                (map g$syntax->datum$7468$13P8LC
                                                                     g$sym*$9903$13P8LC)
                                                                g$subst$9904$13P8LC)))
                                                           (g$get-import$9861$13P8LC
                                                             g$isp$9902$13P8LC))))
                                                       g$ls/false$9897$13P8LC)
                                                     ((case-lambda
                                                        ((g$t$9905$13P8LC)
                                                         ((case-lambda
                                                            ((g$ls/false$9906$13P8LC)
                                                             (if (if g$ls/false$9906$13P8LC
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$9907$13P8LC
                                                                            g$isp$9908$13P8LC
                                                                            g$sym*$9909$13P8LC)
                                                                          (if (eq? (g$syntax->datum$7468$13P8LC
                                                                                     g$only$9907$13P8LC)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5356$13P8LC
                                                                                g$idsyn?$9852$13P8LC
                                                                                g$sym*$9909$13P8LC))
                                                                            '#f)))
                                                                       g$ls/false$9906$13P8LC))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$9910$13P8LC
                                                                      g$isp$9911$13P8LC
                                                                      g$sym*$9912$13P8LC)
                                                                    ((case-lambda
                                                                       ((g$subst$9913$13P8LC
                                                                          g$sym*$9914$13P8LC)
                                                                        ((case-lambda
                                                                           ((g$sym*$9915$13P8LC)
                                                                            ((case-lambda
                                                                               ((g$lab*$9916$13P8LC)
                                                                                (map cons
                                                                                     g$sym*$9915$13P8LC
                                                                                     g$lab*$9916$13P8LC)))
                                                                             (g$find*$9856$13P8LC
                                                                               g$sym*$9915$13P8LC
                                                                               g$subst$9913$13P8LC))))
                                                                         (g$remove-dups$9858$13P8LC
                                                                           g$sym*$9914$13P8LC))))
                                                                     (g$get-import$9861$13P8LC
                                                                       g$isp$9911$13P8LC)
                                                                     (map g$syntax->datum$7468$13P8LC
                                                                          g$sym*$9912$13P8LC))))
                                                                 g$ls/false$9906$13P8LC)
                                                               ((case-lambda
                                                                  ((g$t$9917$13P8LC)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9918$13P8LC)
                                                                       (if (if g$ls/false$9918$13P8LC
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$9919$13P8LC
                                                                                      g$isp$9920$13P8LC
                                                                                      g$p$9921$13P8LC)
                                                                                    (if (eq? (g$syntax->datum$7468$13P8LC
                                                                                               g$prefix$9919$13P8LC)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$9852$13P8LC
                                                                                          g$p$9921$13P8LC))
                                                                                      '#f)))
                                                                                 g$ls/false$9918$13P8LC))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$9922$13P8LC
                                                                                g$isp$9923$13P8LC
                                                                                g$p$9924$13P8LC)
                                                                              ((case-lambda
                                                                                 ((g$subst$9925$13P8LC
                                                                                    g$prefix$9926$13P8LC)
                                                                                  (map (case-lambda
                                                                                         ((g$x$9927$13P8LC)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$9926$13P8LC
                                                                                                (symbol->string
                                                                                                  (car g$x$9927$13P8LC))))
                                                                                            (cdr g$x$9927$13P8LC))))
                                                                                       g$subst$9925$13P8LC)))
                                                                               (g$get-import$9861$13P8LC
                                                                                 g$isp$9923$13P8LC)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7468$13P8LC
                                                                                   g$p$9924$13P8LC)))))
                                                                           g$ls/false$9918$13P8LC)
                                                                         ((case-lambda
                                                                            ((g$t$9928$13P8LC)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9929$13P8LC)
                                                                                 (if (if g$ls/false$9929$13P8LC
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$9930$13P8LC
                                                                                                g$spec*$9931$13P8LC)
                                                                                              (eq? (g$syntax->datum$7468$13P8LC
                                                                                                     g$library$9930$13P8LC)
                                                                                                   'library)))
                                                                                           g$ls/false$9929$13P8LC))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$9932$13P8LC
                                                                                          g$spec*$9933$13P8LC)
                                                                                        (g$import-library$9860$13P8LC
                                                                                          g$spec*$9933$13P8LC)))
                                                                                     g$ls/false$9929$13P8LC)
                                                                                   ((case-lambda
                                                                                      ((g$t$9934$13P8LC)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9935$13P8LC)
                                                                                           (if (if g$ls/false$9935$13P8LC
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$9936$13P8LC
                                                                                                          g$isp$9937$13P8LC
                                                                                                          g$rest$9938$13P8LC)
                                                                                                        (eq? (g$syntax->datum$7468$13P8LC
                                                                                                               g$for$9936$13P8LC)
                                                                                                             'for)))
                                                                                                     g$ls/false$9935$13P8LC))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$9939$13P8LC
                                                                                                    g$isp$9940$13P8LC
                                                                                                    g$rest$9941$13P8LC)
                                                                                                  (g$get-import$9861$13P8LC
                                                                                                    g$isp$9940$13P8LC)))
                                                                                               g$ls/false$9935$13P8LC)
                                                                                             ((case-lambda
                                                                                                ((g$t$9942$13P8LC)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$9943$13P8LC)
                                                                                                     (if g$ls/false$9943$13P8LC
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$9944$13P8LC)
                                                                                                            (g$syntax-violation$7465$13P8LC
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$9944$13P8LC)))
                                                                                                         g$ls/false$9943$13P8LC)
                                                                                                       (g$syntax-violation$7465$13P8LC
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$9942$13P8LC))))
                                                                                                  (g$syntax-dispatch$7356$13P8LC
                                                                                                    g$t$9942$13P8LC
                                                                                                    'any))))
                                                                                              g$t$9934$13P8LC))))
                                                                                        (g$syntax-dispatch$7356$13P8LC
                                                                                          g$t$9934$13P8LC
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$9928$13P8LC))))
                                                                              (g$syntax-dispatch$7356$13P8LC
                                                                                g$t$9928$13P8LC
                                                                                '(any each-any)))))
                                                                          g$t$9917$13P8LC))))
                                                                    (g$syntax-dispatch$7356$13P8LC
                                                                      g$t$9917$13P8LC
                                                                      '(any any
                                                                            any)))))
                                                                g$t$9905$13P8LC))))
                                                          (g$syntax-dispatch$7356$13P8LC
                                                            g$t$9905$13P8LC
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$9896$13P8LC))))
                                                (g$syntax-dispatch$7356$13P8LC
                                                  g$t$9896$13P8LC
                                                  '(any any . each-any)))))
                                            g$t$9881$13P8LC))))
                                      (g$syntax-dispatch$7356$13P8LC
                                        g$t$9881$13P8LC
                                        '(any any . #(each (any any)))))))
                                  g$t$9875$13P8LC))))
                            (g$syntax-dispatch$7356$13P8LC
                              g$t$9875$13P8LC
                              '(any . each-any)))))
                        g$spec$9874$13P8LC))))
                  (g$add-imports!$9862$13P8LC
                    (case-lambda
                      ((g$imp$9866$13P8LC g$h$9867$13P8LC)
                       ((case-lambda
                          ((g$subst$9868$13P8LC)
                           (for-each
                             (case-lambda
                               ((g$x$9869$13P8LC)
                                ((case-lambda
                                   ((g$name$9870$13P8LC g$label$9871$13P8LC)
                                    ((case-lambda
                                       ((g$t$9872$13P8LC)
                                        (if g$t$9872$13P8LC
                                          ((case-lambda
                                             ((g$l$9873$13P8LC)
                                              (if (not (eq? g$l$9873$13P8LC
                                                            g$label$9871$13P8LC))
                                                (g$dup-error$9853$13P8LC
                                                  g$name$9870$13P8LC)
                                                (void))))
                                           g$t$9872$13P8LC)
                                          (g$hashtable-set!$5153$13P8LC
                                            g$h$9867$13P8LC
                                            g$name$9870$13P8LC
                                            g$label$9871$13P8LC))))
                                     (g$hashtable-ref$5152$13P8LC
                                       g$h$9867$13P8LC
                                       g$name$9870$13P8LC
                                       '#f))))
                                 (car g$x$9869$13P8LC)
                                 (cdr g$x$9869$13P8LC))))
                             g$subst$9868$13P8LC)))
                        (g$get-import$9861$13P8LC g$imp$9866$13P8LC))))))
          ((letrec ((g$f$9863$13P8LC
                      (case-lambda
                        ((g$imp*$9864$13P8LC g$h$9865$13P8LC)
                         (if (null? g$imp*$9864$13P8LC)
                           (hashtable-entries g$h$9865$13P8LC)
                           (begin
                             (g$add-imports!$9862$13P8LC
                               (car g$imp*$9864$13P8LC)
                               g$h$9865$13P8LC)
                             (g$f$9863$13P8LC
                               (cdr g$imp*$9864$13P8LC)
                               g$h$9865$13P8LC)))))))
             g$f$9863$13P8LC)
           g$imp*$9851$13P8LC
           (g$make-eq-hashtable$5149$13P8LC))))))
   (g$make-top-rib$7406$13P8LC
     g$make-top-rib$10842$13P8LC
     (case-lambda
       ((g$names$10112$13P8LC g$labels$10113$13P8LC)
        ((case-lambda
           ((g$rib$10114$13P8LC)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10115$13P8LC g$label$10116$13P8LC)
                   (begin
                     (if (not (symbol? g$name$10115$13P8LC))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10115$13P8LC)
                       (void))
                     (g$extend-rib!$7042$13P8LC
                       g$rib$10114$13P8LC
                       (g$make-stx$7051$13P8LC
                         g$name$10115$13P8LC
                         g$top-mark*$7020$13P8LC
                         '()
                         '())
                       g$label$10116$13P8LC))))
                g$names$10112$13P8LC
                g$labels$10113$13P8LC)
              g$rib$10114$13P8LC)))
         (g$make-empty-rib$7041$13P8LC)))))
   (g$make-collector$7407$13P8LC
     g$make-collector$10843$13P8LC
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10117$13P8LC)
            (case-lambda
              (() g$ls$10117$13P8LC)
              ((g$x$10118$13P8LC)
               (set! g$ls$10117$13P8LC
                 (g$set-cons$7017$13P8LC
                   g$x$10118$13P8LC
                   g$ls$10117$13P8LC))))))
         '()))))
   (g$inv-collector$7408$13P8LC
     g$inv-collector$10844$13P8LC
     (g$make-parameter$6345$13P8LC
       (case-lambda
         (g$args$10119$13P8LC
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10120$13P8LC)
          (begin
            (if (not (procedure? g$x$10120$13P8LC))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10120$13P8LC)
              (void))
            g$x$10120$13P8LC)))))
   (g$vis-collector$7409$13P8LC
     g$vis-collector$10845$13P8LC
     (g$make-parameter$6345$13P8LC
       (case-lambda
         (g$args$10121$13P8LC
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10122$13P8LC)
          (begin
            (if (not (procedure? g$x$10122$13P8LC))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10122$13P8LC)
              (void))
            g$x$10122$13P8LC)))))
   (g$imp-collector$7410$13P8LC
     g$imp-collector$10846$13P8LC
     (g$make-parameter$6345$13P8LC
       (case-lambda
         (g$args$10123$13P8LC
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10124$13P8LC)
          (begin
            (if (not (procedure? g$x$10124$13P8LC))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10124$13P8LC)
              (void))
            g$x$10124$13P8LC)))))
   (g$chi-library-internal$7411$13P8LC
     g$chi-library-internal$10847$13P8LC
     (case-lambda
       ((g$e*$10125$13P8LC g$rib$10126$13P8LC g$top?$10127$13P8LC)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7400$13P8LC
               g$e*$10125$13P8LC
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10126$13P8LC
               g$top?$10127$13P8LC)))
          (case-lambda
            ((g$e*$10135$13P8LC
               g$r$10136$13P8LC
               g$mr$10137$13P8LC
               g$lex*$10138$13P8LC
               g$rhs*$10139$13P8LC
               g$mod**$10140$13P8LC
               g$_kwd*$10141$13P8LC)
             ((case-lambda
                ((g$_kwd*$10142$13P8LC
                   g$mod**$10143$13P8LC
                   g$rhs*$10144$13P8LC
                   g$lex*$10145$13P8LC
                   g$mr$10146$13P8LC
                   g$r$10147$13P8LC
                   g$e*$10148$13P8LC)
                 (values
                   (append
                     (apply append (reverse g$mod**$10143$13P8LC))
                     g$e*$10148$13P8LC)
                   g$r$10147$13P8LC
                   g$mr$10146$13P8LC
                   (reverse g$lex*$10145$13P8LC)
                   (reverse g$rhs*$10144$13P8LC))))
              g$_kwd*$10141$13P8LC
              g$mod**$10140$13P8LC
              g$rhs*$10139$13P8LC
              g$lex*$10138$13P8LC
              g$mr$10137$13P8LC
              g$r$10136$13P8LC
              g$e*$10135$13P8LC)))))))
   (g$chi-interaction-expr$7412$13P8LC
     g$chi-interaction-expr$10848$13P8LC
     (case-lambda
       ((g$e$10149$13P8LC g$rib$10150$13P8LC g$r$10151$13P8LC)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7400$13P8LC
               (list g$e$10149$13P8LC)
               g$r$10151$13P8LC
               g$r$10151$13P8LC
               '()
               '()
               '()
               '()
               g$rib$10150$13P8LC
               '#t)))
          (case-lambda
            ((g$e*$10159$13P8LC
               g$r$10160$13P8LC
               g$mr$10161$13P8LC
               g$lex*$10162$13P8LC
               g$rhs*$10163$13P8LC
               g$mod**$10164$13P8LC
               g$_kwd*$10165$13P8LC)
             ((case-lambda
                ((g$_kwd*$10166$13P8LC
                   g$mod**$10167$13P8LC
                   g$rhs*$10168$13P8LC
                   g$lex*$10169$13P8LC
                   g$mr$10170$13P8LC
                   g$r$10171$13P8LC
                   g$e*$10172$13P8LC)
                 ((case-lambda
                    ((g$e*$10173$13P8LC)
                     ((case-lambda
                        ((g$e$10174$13P8LC)
                         (values g$e$10174$13P8LC g$r$10171$13P8LC)))
                      (if (null? g$e*$10173$13P8LC)
                        (g$build-void$7013$13P8LC)
                        (if (null? (cdr g$e*$10173$13P8LC))
                          (car g$e*$10173$13P8LC)
                          (g$build-sequence$7012$13P8LC
                            '#f
                            g$e*$10173$13P8LC))))))
                  (g$expand-interaction-rhs*/init*$7381$13P8LC
                    (reverse g$lex*$10169$13P8LC)
                    (reverse g$rhs*$10168$13P8LC)
                    (append
                      (apply append (reverse g$mod**$10167$13P8LC))
                      g$e*$10172$13P8LC)
                    g$r$10171$13P8LC
                    g$mr$10170$13P8LC))))
              g$_kwd*$10165$13P8LC
              g$mod**$10164$13P8LC
              g$rhs*$10163$13P8LC
              g$lex*$10162$13P8LC
              g$mr$10161$13P8LC
              g$r$10160$13P8LC
              g$e*$10159$13P8LC)))))))
   (g$library-body-expander$7413$13P8LC
     g$library-body-expander$10849$13P8LC
     (case-lambda
       ((g$name$10175$13P8LC
          g$exp*$10176$13P8LC
          g$imp*$10177$13P8LC
          g$b*$10178$13P8LC
          g$top?$10179$13P8LC)
        (letrec* ((g$itc$10180$13P8LC (g$make-collector$7407$13P8LC)))
          ((case-lambda
             ((g$imp-collector$10185$13P8LC
                g$top-level-context$10186$13P8LC
                g$imp-collector$10187$13P8LC
                g$top-level-context$10188$13P8LC)
              ((case-lambda
                 ((g$swap$10189$13P8LC)
                  (dynamic-wind
                    g$swap$10189$13P8LC
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-exports$7402$13P8LC g$exp*$10176$13P8LC)))
                         (case-lambda
                           ((g$exp-int*$10192$13P8LC g$exp-ext*$10193$13P8LC)
                            ((case-lambda
                               ((g$exp-ext*$10194$13P8LC
                                  g$exp-int*$10195$13P8LC)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7405$13P8LC
                                       g$imp*$10177$13P8LC)))
                                  (case-lambda
                                    ((g$subst-names$10198$13P8LC
                                       g$subst-labels$10199$13P8LC)
                                     ((case-lambda
                                        ((g$subst-labels$10200$13P8LC
                                           g$subst-names$10201$13P8LC)
                                         ((case-lambda
                                            ((g$rib$10202$13P8LC)
                                             ((case-lambda
                                                ((g$b*$10203$13P8LC
                                                   g$rtc$10204$13P8LC
                                                   g$vtc$10205$13P8LC)
                                                 ((case-lambda
                                                    ((g$inv-collector$10210$13P8LC
                                                       g$vis-collector$10211$13P8LC
                                                       g$inv-collector$10212$13P8LC
                                                       g$vis-collector$10213$13P8LC)
                                                     ((case-lambda
                                                        ((g$swap$10214$13P8LC)
                                                         (dynamic-wind
                                                           g$swap$10214$13P8LC
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7411$13P8LC
                                                                     g$b*$10203$13P8LC
                                                                     g$rib$10202$13P8LC
                                                                     g$top?$10179$13P8LC)))
                                                                (case-lambda
                                                                  ((g$init*$10220$13P8LC
                                                                     g$r$10221$13P8LC
                                                                     g$mr$10222$13P8LC
                                                                     g$lex*$10223$13P8LC
                                                                     g$rhs*$10224$13P8LC)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10225$13P8LC
                                                                         g$lex*$10226$13P8LC
                                                                         g$mr$10227$13P8LC
                                                                         g$r$10228$13P8LC
                                                                         g$init*$10229$13P8LC)
                                                                       (begin
                                                                         (g$seal-rib!$7044$13P8LC
                                                                           g$rib$10202$13P8LC)
                                                                         ((case-lambda
                                                                            ((g$init*$10230$13P8LC)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10231$13P8LC)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7045$13P8LC
                                                                                         g$rib$10202$13P8LC)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10232$13P8LC
                                                                                             g$export-subst$10233$13P8LC)
                                                                                           (letrec* ((g$errstr$10234$13P8LC
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7454$13P8LC
                                                                                                    g$lex*$10226$13P8LC
                                                                                                    g$loc*$10232$13P8LC
                                                                                                    g$r$10228$13P8LC)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10238$13P8LC
                                                                                                    g$global*$10239$13P8LC
                                                                                                    g$macro*$10240$13P8LC)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10241$13P8LC
                                                                                                        g$global*$10242$13P8LC
                                                                                                        g$export-env$10243$13P8LC)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10244$13P8LC)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10245$13P8LC
                                                                                                                   g$label$10246$13P8LC)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10247$13P8LC)
                                                                                                                     (if g$p$10247$13P8LC
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10248$13P8LC)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10249$13P8LC)
                                                                                                                               (if (eq? g$type$10249$13P8LC
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7465$13P8LC
                                                                                                                                   'export
                                                                                                                                   g$errstr$10234$13P8LC
                                                                                                                                   g$name$10245$13P8LC)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10248$13P8LC))))
                                                                                                                        (cdr g$p$10247$13P8LC))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10246$13P8LC
                                                                                                                    g$export-env$10243$13P8LC))))
                                                                                                              (car g$s$10244$13P8LC)
                                                                                                              (cdr g$s$10244$13P8LC))))
                                                                                                          g$export-subst$10233$13P8LC)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10250$13P8LC
                                                                                                              g$invoke-definitions$10251$13P8LC)
                                                                                                            (values
                                                                                                              (g$itc$10180$13P8LC)
                                                                                                              (g$rtc$10204$13P8LC)
                                                                                                              (g$vtc$10205$13P8LC)
                                                                                                              (g$build-sequence$7012$13P8LC
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10251$13P8LC
                                                                                                                  (list
                                                                                                                    g$invoke-body$10250$13P8LC)))
                                                                                                              g$macro*$10241$13P8LC
                                                                                                              g$export-subst$10233$13P8LC
                                                                                                              g$export-env$10243$13P8LC)))
                                                                                                         (g$build-library-letrec*$7016$13P8LC
                                                                                                           '#f
                                                                                                           g$name$10175$13P8LC
                                                                                                           g$lex*$10226$13P8LC
                                                                                                           g$loc*$10232$13P8LC
                                                                                                           g$rhs*$10231$13P8LC
                                                                                                           (if (null?
                                                                                                                 g$init*$10230$13P8LC)
                                                                                                             (g$build-void$7013$13P8LC)
                                                                                                             (g$build-sequence$7012$13P8LC
                                                                                                               '#f
                                                                                                               g$init*$10230$13P8LC)))
                                                                                                         (map g$build-global-define$7008$13P8LC
                                                                                                              (map cdr
                                                                                                                   g$global*$10242$13P8LC))))))
                                                                                                   g$macro*$10240$13P8LC
                                                                                                   g$global*$10239$13P8LC
                                                                                                   g$export-env$10238$13P8LC)))))))
                                                                                        (map g$gen-global$7023$13P8LC
                                                                                             g$lex*$10226$13P8LC)
                                                                                        (g$make-export-subst$7453$13P8LC
                                                                                          g$exp-int*$10195$13P8LC
                                                                                          g$exp-ext*$10194$13P8LC
                                                                                          g$rib$10202$13P8LC))))))))
                                                                              (g$chi-rhs*$7382$13P8LC
                                                                                g$rhs*$10225$13P8LC
                                                                                g$r$10228$13P8LC
                                                                                g$mr$10227$13P8LC))))
                                                                          (g$chi-expr*$7372$13P8LC
                                                                            g$init*$10229$13P8LC
                                                                            g$r$10228$13P8LC
                                                                            g$mr$10227$13P8LC)))))
                                                                    g$rhs*$10224$13P8LC
                                                                    g$lex*$10223$13P8LC
                                                                    g$mr$10222$13P8LC
                                                                    g$r$10221$13P8LC
                                                                    g$init*$10220$13P8LC))))))
                                                           g$swap$10214$13P8LC)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10252$13P8LC)
                                                               (begin
                                                                 (g$inv-collector$10210$13P8LC
                                                                   g$inv-collector$10212$13P8LC)
                                                                 (set! g$inv-collector$10212$13P8LC
                                                                   g$t$10252$13P8LC))))
                                                            (g$inv-collector$10210$13P8LC))
                                                           ((case-lambda
                                                              ((g$t$10253$13P8LC)
                                                               (begin
                                                                 (g$vis-collector$10211$13P8LC
                                                                   g$vis-collector$10213$13P8LC)
                                                                 (set! g$vis-collector$10213$13P8LC
                                                                   g$t$10253$13P8LC))))
                                                            (g$vis-collector$10211$13P8LC))))))))
                                                  g$inv-collector$7408$13P8LC
                                                  g$vis-collector$7409$13P8LC
                                                  g$rtc$10204$13P8LC
                                                  g$vtc$10205$13P8LC)))
                                              (map (case-lambda
                                                     ((g$x$10254$13P8LC)
                                                      (g$make-stx$7051$13P8LC
                                                        g$x$10254$13P8LC
                                                        g$top-mark*$7020$13P8LC
                                                        (list
                                                          g$rib$10202$13P8LC)
                                                        '())))
                                                   g$b*$10178$13P8LC)
                                              (g$make-collector$7407$13P8LC)
                                              (g$make-collector$7407$13P8LC))))
                                          (g$make-top-rib$7406$13P8LC
                                            g$subst-names$10201$13P8LC
                                            g$subst-labels$10200$13P8LC))))
                                      g$subst-labels$10199$13P8LC
                                      g$subst-names$10198$13P8LC))))))
                             g$exp-ext*$10193$13P8LC
                             g$exp-int*$10192$13P8LC))))))
                    g$swap$10189$13P8LC)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10255$13P8LC)
                        (begin
                          (g$imp-collector$10185$13P8LC
                            g$imp-collector$10187$13P8LC)
                          (set! g$imp-collector$10187$13P8LC
                            g$t$10255$13P8LC))))
                     (g$imp-collector$10185$13P8LC))
                    ((case-lambda
                       ((g$t$10256$13P8LC)
                        (begin
                          (g$top-level-context$10186$13P8LC
                            g$top-level-context$10188$13P8LC)
                          (set! g$top-level-context$10188$13P8LC
                            g$t$10256$13P8LC))))
                     (g$top-level-context$10186$13P8LC))))))))
           g$imp-collector$7410$13P8LC
           g$top-level-context$7472$13P8LC
           g$itc$10180$13P8LC
           '#f)))))
   (g$core-library-expander$7414$13P8LC
     g$core-library-expander$10850$13P8LC
     (case-lambda
       ((g$e$10257$13P8LC g$verify-name$10258$13P8LC)
        (call-with-values
          (case-lambda (() (g$parse-library$7404$13P8LC g$e$10257$13P8LC)))
          (case-lambda
            ((g$name*$10263$13P8LC
               g$exp*$10264$13P8LC
               g$imp*$10265$13P8LC
               g$b*$10266$13P8LC)
             ((case-lambda
                ((g$b*$10267$13P8LC
                   g$imp*$10268$13P8LC
                   g$exp*$10269$13P8LC
                   g$name*$10270$13P8LC)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7403$13P8LC g$name*$10270$13P8LC)))
                   (case-lambda
                     ((g$name$10273$13P8LC g$ver$10274$13P8LC)
                      ((case-lambda
                         ((g$ver$10275$13P8LC g$name$10276$13P8LC)
                          (begin
                            (g$verify-name$10258$13P8LC g$name$10276$13P8LC)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7413$13P8LC
                                   g$name$10276$13P8LC
                                   g$exp*$10269$13P8LC
                                   g$imp*$10268$13P8LC
                                   g$b*$10267$13P8LC
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10284$13P8LC
                                   g$invoke-req*$10285$13P8LC
                                   g$visit-req*$10286$13P8LC
                                   g$invoke-code$10287$13P8LC
                                   g$visit-code$10288$13P8LC
                                   g$export-subst$10289$13P8LC
                                   g$export-env$10290$13P8LC)
                                 ((case-lambda
                                    ((g$export-env$10291$13P8LC
                                       g$export-subst$10292$13P8LC
                                       g$visit-code$10293$13P8LC
                                       g$invoke-code$10294$13P8LC
                                       g$visit-req*$10295$13P8LC
                                       g$invoke-req*$10296$13P8LC
                                       g$imp*$10297$13P8LC)
                                     (values
                                       g$name$10276$13P8LC
                                       g$ver$10275$13P8LC
                                       g$imp*$10297$13P8LC
                                       g$invoke-req*$10296$13P8LC
                                       g$visit-req*$10295$13P8LC
                                       g$invoke-code$10294$13P8LC
                                       g$visit-code$10293$13P8LC
                                       g$export-subst$10292$13P8LC
                                       g$export-env$10291$13P8LC)))
                                  g$export-env$10290$13P8LC
                                  g$export-subst$10289$13P8LC
                                  g$visit-code$10288$13P8LC
                                  g$invoke-code$10287$13P8LC
                                  g$visit-req*$10286$13P8LC
                                  g$invoke-req*$10285$13P8LC
                                  g$imp*$10284$13P8LC)))))))
                       g$ver$10274$13P8LC
                       g$name$10273$13P8LC))))))
              g$b*$10266$13P8LC
              g$imp*$10265$13P8LC
              g$exp*$10264$13P8LC
              g$name*$10263$13P8LC)))))))
   (g$parse-top-level-program$7415$13P8LC
     g$parse-top-level-program$10851$13P8LC
     (case-lambda
       ((g$e*$10298$13P8LC)
        ((case-lambda
           ((g$t$10299$13P8LC)
            ((case-lambda
               ((g$ls/false$10300$13P8LC)
                (if (if g$ls/false$10300$13P8LC
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10301$13P8LC
                               g$imp*$10302$13P8LC
                               g$b*$10303$13P8LC)
                             (eq? (g$syntax->datum$7468$13P8LC
                                    g$import$10301$13P8LC)
                                  'import)))
                          g$ls/false$10300$13P8LC))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10304$13P8LC
                         g$imp*$10305$13P8LC
                         g$b*$10306$13P8LC)
                       (values g$imp*$10305$13P8LC g$b*$10306$13P8LC)))
                    g$ls/false$10300$13P8LC)
                  ((case-lambda
                     ((g$t$10307$13P8LC)
                      ((case-lambda
                         ((g$ls/false$10308$13P8LC)
                          (if (if g$ls/false$10308$13P8LC
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10309$13P8LC
                                         g$x$10310$13P8LC
                                         g$y$10311$13P8LC)
                                       (eq? (g$syntax->datum$7468$13P8LC
                                              g$import$10309$13P8LC)
                                            'import)))
                                    g$ls/false$10308$13P8LC))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10312$13P8LC
                                   g$x$10313$13P8LC
                                   g$y$10314$13P8LC)
                                 (g$syntax-violation$7465$13P8LC
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7075$13P8LC
                                     g$e*$10298$13P8LC))))
                              g$ls/false$10308$13P8LC)
                            ((case-lambda
                               ((g$t$10315$13P8LC)
                                ((case-lambda
                                   ((g$ls/false$10316$13P8LC)
                                    (if g$ls/false$10316$13P8LC
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10316$13P8LC)
                                      (g$syntax-violation$7465$13P8LC
                                        '#f
                                        '"invalid syntax"
                                        g$t$10315$13P8LC))))
                                 (g$syntax-dispatch$7356$13P8LC
                                   g$t$10315$13P8LC
                                   '_))))
                             g$t$10307$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC
                         g$t$10307$13P8LC
                         '((any . any) . any)))))
                   g$t$10299$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC
               g$t$10299$13P8LC
               '((any . each-any) . each-any)))))
         g$e*$10298$13P8LC))))
   (g$top-level-expander$7416$13P8LC
     g$top-level-expander$10852$13P8LC
     (case-lambda
       ((g$e*$10317$13P8LC)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7415$13P8LC g$e*$10317$13P8LC)))
          (case-lambda
            ((g$imp*$10320$13P8LC g$b*$10321$13P8LC)
             ((case-lambda
                ((g$b*$10322$13P8LC g$imp*$10323$13P8LC)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7413$13P8LC
                        '()
                        '()
                        g$imp*$10323$13P8LC
                        g$b*$10322$13P8LC
                        '#t)))
                   (case-lambda
                     ((g$imp*$10331$13P8LC
                        g$invoke-req*$10332$13P8LC
                        g$visit-req*$10333$13P8LC
                        g$invoke-code$10334$13P8LC
                        g$visit-code$10335$13P8LC
                        g$export-subst$10336$13P8LC
                        g$export-env$10337$13P8LC)
                      ((case-lambda
                         ((g$export-env$10338$13P8LC
                            g$export-subst$10339$13P8LC
                            g$visit-code$10340$13P8LC
                            g$invoke-code$10341$13P8LC
                            g$visit-req*$10342$13P8LC
                            g$invoke-req*$10343$13P8LC
                            g$imp*$10344$13P8LC)
                          (values
                            g$invoke-req*$10343$13P8LC
                            g$invoke-code$10341$13P8LC)))
                       g$export-env$10337$13P8LC
                       g$export-subst$10336$13P8LC
                       g$visit-code$10335$13P8LC
                       g$invoke-code$10334$13P8LC
                       g$visit-req*$10333$13P8LC
                       g$invoke-req*$10332$13P8LC
                       g$imp*$10331$13P8LC))))))
              g$b*$10321$13P8LC
              g$imp*$10320$13P8LC)))))))
   (g$8449$7417$13P8LC
     g$8449$10853$13P8LC
     (make-record-type-descriptor
       'env
       '#f
       'g$8452$13P8LC
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8451$7418$13P8LC g$8451$10854$13P8LC '#f)
   (g$8450$7419$13P8LC
     g$8450$10855$13P8LC
     (make-record-constructor-descriptor
       g$8449$7417$13P8LC
       '#f
       g$8451$7418$13P8LC))
   (g$env?$7420$13P8LC
     g$env?$10856$13P8LC
     (record-predicate g$8449$7417$13P8LC))
   (g$make-env$7421$13P8LC
     g$make-env$10857$13P8LC
     (record-constructor g$8450$7419$13P8LC))
   (g$env-names$7422$13P8LC
     g$env-names$10858$13P8LC
     (record-accessor g$8449$7417$13P8LC '0))
   (g$env-labels$7423$13P8LC
     g$env-labels$10859$13P8LC
     (record-accessor g$8449$7417$13P8LC '1))
   (g$env-itc$7424$13P8LC
     g$env-itc$10860$13P8LC
     (record-accessor g$8449$7417$13P8LC '2))
   (g$set-env-names!$7425$13P8LC
     g$set-env-names!$10861$13P8LC
     (record-mutator g$8449$7417$13P8LC '0))
   (g$set-env-labels!$7426$13P8LC
     g$set-env-labels!$10862$13P8LC
     (record-mutator g$8449$7417$13P8LC '1))
   (g$set-env-itc!$7427$13P8LC
     g$set-env-itc!$10863$13P8LC
     (record-mutator g$8449$7417$13P8LC '2))
   (g$rp$7428$13P8LC
     g$rp$10864$13P8LC
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10345$13P8LC g$p$10346$13P8LC)
          (display '"#<environment>" g$p$10346$13P8LC)))))
   (g$8468$7429$13P8LC
     g$8468$10865$13P8LC
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8471$13P8LC
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8470$7430$13P8LC g$8470$10866$13P8LC '#f)
   (g$8469$7431$13P8LC
     g$8469$10867$13P8LC
     (make-record-constructor-descriptor
       g$8468$7429$13P8LC
       '#f
       g$8470$7430$13P8LC))
   (g$interaction-env?$7432$13P8LC
     g$interaction-env?$10868$13P8LC
     (record-predicate g$8468$7429$13P8LC))
   (g$make-interaction-env$7433$13P8LC
     g$make-interaction-env$10869$13P8LC
     (record-constructor g$8469$7431$13P8LC))
   (g$interaction-env-rib$7434$13P8LC
     g$interaction-env-rib$10870$13P8LC
     (record-accessor g$8468$7429$13P8LC '0))
   (g$interaction-env-r$7435$13P8LC
     g$interaction-env-r$10871$13P8LC
     (record-accessor g$8468$7429$13P8LC '1))
   (g$interaction-env-locs$7436$13P8LC
     g$interaction-env-locs$10872$13P8LC
     (record-accessor g$8468$7429$13P8LC '2))
   (g$set-interaction-env-rib!$7437$13P8LC
     g$set-interaction-env-rib!$10873$13P8LC
     (record-mutator g$8468$7429$13P8LC '0))
   (g$set-interaction-env-r!$7438$13P8LC
     g$set-interaction-env-r!$10874$13P8LC
     (record-mutator g$8468$7429$13P8LC '1))
   (g$set-interaction-env-locs!$7439$13P8LC
     g$set-interaction-env-locs!$10875$13P8LC
     (record-mutator g$8468$7429$13P8LC '2))
   (g$rp$7440$13P8LC
     g$rp$10876$13P8LC
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10347$13P8LC g$p$10348$13P8LC)
          (display '"#<environment>" g$p$10348$13P8LC)))))
   (g$interaction-environment-symbols$7441$13P8LC
     g$interaction-environment-symbols$10877$13P8LC
     (case-lambda
       (()
        (map (case-lambda ((g$x$10349$13P8LC) g$x$10349$13P8LC))
             (g$rib-sym*$7033$13P8LC
               (g$interaction-env-rib$7434$13P8LC
                 (g$interaction-environment$7471$13P8LC)))))))
   (g$environment-symbols$7442$13P8LC
     g$environment-symbols$10878$13P8LC
     (case-lambda
       ((g$e$10350$13P8LC)
        (vector->list (g$env-names$7422$13P8LC g$e$10350$13P8LC)))))
   (g$environment?$7443$13P8LC
     g$environment?$10879$13P8LC
     (case-lambda
       ((g$x$10351$13P8LC)
        ((case-lambda
           ((g$t$10352$13P8LC)
            (if g$t$10352$13P8LC
              g$t$10352$13P8LC
              (begin '#f (g$interaction-env?$7432$13P8LC g$x$10351$13P8LC)))))
         (g$env?$7420$13P8LC g$x$10351$13P8LC)))))
   (g$environment$7444$13P8LC
     g$environment$10880$13P8LC
     (case-lambda
       (g$imp*$10353$13P8LC
        ((case-lambda
           ((g$itc$10354$13P8LC)
            ((case-lambda
               ((g$imp-collector$10357$13P8LC g$imp-collector$10358$13P8LC)
                ((case-lambda
                   ((g$swap$10359$13P8LC)
                    (dynamic-wind
                      g$swap$10359$13P8LC
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7405$13P8LC
                                g$imp*$10353$13P8LC)))
                           (case-lambda
                             ((g$subst-names$10362$13P8LC
                                g$subst-labels$10363$13P8LC)
                              ((case-lambda
                                 ((g$subst-labels$10364$13P8LC
                                    g$subst-names$10365$13P8LC)
                                  (g$make-env$7421$13P8LC
                                    g$subst-names$10365$13P8LC
                                    g$subst-labels$10364$13P8LC
                                    g$itc$10354$13P8LC)))
                               g$subst-labels$10363$13P8LC
                               g$subst-names$10362$13P8LC))))))
                      g$swap$10359$13P8LC)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10366$13P8LC)
                        (begin
                          (g$imp-collector$10357$13P8LC
                            g$imp-collector$10358$13P8LC)
                          (set! g$imp-collector$10358$13P8LC
                            g$t$10366$13P8LC))))
                     (g$imp-collector$10357$13P8LC)))))))
             g$imp-collector$7410$13P8LC
             g$itc$10354$13P8LC)))
         (g$make-collector$7407$13P8LC)))))
   (g$null-environment$7445$13P8LC
     g$null-environment$10881$13P8LC
     (case-lambda
       ((g$n$10367$13P8LC)
        (begin
          (if (not (eqv? g$n$10367$13P8LC '5))
            (assertion-violation 'null-environment '"not 5" g$n$10367$13P8LC)
            (void))
          (g$environment$7444$13P8LC '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7446$13P8LC
     g$scheme-report-environment$10882$13P8LC
     (case-lambda
       ((g$n$10368$13P8LC)
        (begin
          (if (not (eqv? g$n$10368$13P8LC '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10368$13P8LC)
            (void))
          (g$environment$7444$13P8LC '(psyntax scheme-report-environment-5))))))
   (g$expand$7447$13P8LC
     g$expand$10883$13P8LC
     (case-lambda
       ((g$x$10369$13P8LC g$env$10370$13P8LC)
        (if (g$env?$7420$13P8LC g$env$10370$13P8LC)
          ((case-lambda
             ((g$rib$10371$13P8LC)
              ((case-lambda
                 ((g$x$10372$13P8LC
                    g$itc$10373$13P8LC
                    g$rtc$10374$13P8LC
                    g$vtc$10375$13P8LC)
                  ((case-lambda
                     ((g$x$10376$13P8LC)
                      (begin
                        (g$seal-rib!$7044$13P8LC g$rib$10371$13P8LC)
                        (values g$x$10376$13P8LC (g$rtc$10374$13P8LC)))))
                   ((case-lambda
                      ((g$inv-collector$10383$13P8LC
                         g$vis-collector$10384$13P8LC
                         g$imp-collector$10385$13P8LC
                         g$inv-collector$10386$13P8LC
                         g$vis-collector$10387$13P8LC
                         g$imp-collector$10388$13P8LC)
                       ((case-lambda
                          ((g$swap$10389$13P8LC)
                           (dynamic-wind
                             g$swap$10389$13P8LC
                             (case-lambda
                               (()
                                (g$chi-expr$7374$13P8LC
                                  g$x$10372$13P8LC
                                  '()
                                  '())))
                             g$swap$10389$13P8LC)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10390$13P8LC)
                                 (begin
                                   (g$inv-collector$10383$13P8LC
                                     g$inv-collector$10386$13P8LC)
                                   (set! g$inv-collector$10386$13P8LC
                                     g$t$10390$13P8LC))))
                              (g$inv-collector$10383$13P8LC))
                             ((case-lambda
                                ((g$t$10391$13P8LC)
                                 (begin
                                   (g$vis-collector$10384$13P8LC
                                     g$vis-collector$10387$13P8LC)
                                   (set! g$vis-collector$10387$13P8LC
                                     g$t$10391$13P8LC))))
                              (g$vis-collector$10384$13P8LC))
                             ((case-lambda
                                ((g$t$10392$13P8LC)
                                 (begin
                                   (g$imp-collector$10385$13P8LC
                                     g$imp-collector$10388$13P8LC)
                                   (set! g$imp-collector$10388$13P8LC
                                     g$t$10392$13P8LC))))
                              (g$imp-collector$10385$13P8LC))))))))
                    g$inv-collector$7408$13P8LC
                    g$vis-collector$7409$13P8LC
                    g$imp-collector$7410$13P8LC
                    g$rtc$10374$13P8LC
                    g$vtc$10375$13P8LC
                    g$itc$10373$13P8LC))))
               (g$make-stx$7051$13P8LC
                 g$x$10369$13P8LC
                 g$top-mark*$7020$13P8LC
                 (list g$rib$10371$13P8LC)
                 '())
               (g$env-itc$7424$13P8LC g$env$10370$13P8LC)
               (g$make-collector$7407$13P8LC)
               (g$make-collector$7407$13P8LC))))
           (g$make-top-rib$7406$13P8LC
             (g$env-names$7422$13P8LC g$env$10370$13P8LC)
             (g$env-labels$7423$13P8LC g$env$10370$13P8LC)))
          (if (g$interaction-env?$7432$13P8LC g$env$10370$13P8LC)
            ((case-lambda
               ((g$rib$10393$13P8LC g$r$10394$13P8LC g$rtc$10395$13P8LC)
                ((case-lambda
                   ((g$x$10396$13P8LC)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10407$13P8LC
                               g$inv-collector$10408$13P8LC
                               g$vis-collector$10409$13P8LC
                               g$imp-collector$10410$13P8LC
                               g$top-level-context$10411$13P8LC
                               g$inv-collector$10412$13P8LC
                               g$vis-collector$10413$13P8LC
                               g$imp-collector$10414$13P8LC)
                             ((case-lambda
                                ((g$swap$10415$13P8LC)
                                 (dynamic-wind
                                   g$swap$10415$13P8LC
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7412$13P8LC
                                        g$x$10396$13P8LC
                                        g$rib$10393$13P8LC
                                        g$r$10394$13P8LC)))
                                   g$swap$10415$13P8LC)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10416$13P8LC)
                                       (begin
                                         (g$top-level-context$10407$13P8LC
                                           g$top-level-context$10411$13P8LC)
                                         (set! g$top-level-context$10411$13P8LC
                                           g$t$10416$13P8LC))))
                                    (g$top-level-context$10407$13P8LC))
                                   ((case-lambda
                                      ((g$t$10417$13P8LC)
                                       (begin
                                         (g$inv-collector$10408$13P8LC
                                           g$inv-collector$10412$13P8LC)
                                         (set! g$inv-collector$10412$13P8LC
                                           g$t$10417$13P8LC))))
                                    (g$inv-collector$10408$13P8LC))
                                   ((case-lambda
                                      ((g$t$10418$13P8LC)
                                       (begin
                                         (g$vis-collector$10409$13P8LC
                                           g$vis-collector$10413$13P8LC)
                                         (set! g$vis-collector$10413$13P8LC
                                           g$t$10418$13P8LC))))
                                    (g$vis-collector$10409$13P8LC))
                                   ((case-lambda
                                      ((g$t$10419$13P8LC)
                                       (begin
                                         (g$imp-collector$10410$13P8LC
                                           g$imp-collector$10414$13P8LC)
                                         (set! g$imp-collector$10414$13P8LC
                                           g$t$10419$13P8LC))))
                                    (g$imp-collector$10410$13P8LC))))))))
                          g$top-level-context$7472$13P8LC
                          g$inv-collector$7408$13P8LC
                          g$vis-collector$7409$13P8LC
                          g$imp-collector$7410$13P8LC
                          g$env$10370$13P8LC
                          g$rtc$10395$13P8LC
                          (g$make-collector$7407$13P8LC)
                          (g$make-collector$7407$13P8LC))))
                      (case-lambda
                        ((g$e$10420$13P8LC g$r^$10421$13P8LC)
                         ((case-lambda
                            ((g$r^$10422$13P8LC g$e$10423$13P8LC)
                             (begin
                               (g$set-interaction-env-r!$7438$13P8LC
                                 g$env$10370$13P8LC
                                 g$r^$10422$13P8LC)
                               (values g$e$10423$13P8LC (g$rtc$10395$13P8LC)))))
                          g$r^$10421$13P8LC
                          g$e$10420$13P8LC))))))
                 (g$make-stx$7051$13P8LC
                   g$x$10369$13P8LC
                   g$top-mark*$7020$13P8LC
                   (list g$rib$10393$13P8LC)
                   '()))))
             (g$interaction-env-rib$7434$13P8LC g$env$10370$13P8LC)
             (g$interaction-env-r$7435$13P8LC g$env$10370$13P8LC)
             (g$make-collector$7407$13P8LC))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10370$13P8LC))))))
   (g$eval$7448$13P8LC
     g$eval$10884$13P8LC
     (case-lambda
       ((g$x$10424$13P8LC g$env$10425$13P8LC)
        (begin
          (if (not (g$environment?$7443$13P8LC g$env$10425$13P8LC))
            (error 'eval '"not an environment" g$env$10425$13P8LC)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7447$13P8LC g$x$10424$13P8LC g$env$10425$13P8LC)))
            (case-lambda
              ((g$x$10428$13P8LC g$invoke-req*$10429$13P8LC)
               ((case-lambda
                  ((g$invoke-req*$10430$13P8LC g$x$10431$13P8LC)
                   (begin
                     (for-each
                       g$invoke-library$6893$13P8LC
                       g$invoke-req*$10430$13P8LC)
                     (eval-core
                       (g$expanded->core$6592$13P8LC g$x$10431$13P8LC)))))
                g$invoke-req*$10429$13P8LC
                g$x$10428$13P8LC))))))))
   (g$library-expander$7449$13P8LC
     g$library-expander$10885$13P8LC
     (case-lambda
       ((g$x$10432$13P8LC g$filename$10433$13P8LC g$verify-name$10434$13P8LC)
        (letrec* ((g$build-visit-code$10435$13P8LC
                    (case-lambda
                      ((g$macro*$10478$13P8LC)
                       (if (null? g$macro*$10478$13P8LC)
                         (g$build-void$7013$13P8LC)
                         (g$build-sequence$7012$13P8LC
                           '#f
                           (map (case-lambda
                                  ((g$x$10479$13P8LC)
                                   ((case-lambda
                                      ((g$loc$10480$13P8LC g$src$10481$13P8LC)
                                       (list
                                         'set!
                                         g$loc$10480$13P8LC
                                         g$src$10481$13P8LC)))
                                    (car g$x$10479$13P8LC)
                                    (g$cddr$4889$13P8LC g$x$10479$13P8LC))))
                                g$macro*$10478$13P8LC))))))
                  (g$visit!$10436$13P8LC
                    (case-lambda
                      ((g$macro*$10474$13P8LC)
                       (for-each
                         (case-lambda
                           ((g$x$10475$13P8LC)
                            ((case-lambda
                               ((g$loc$10476$13P8LC g$proc$10477$13P8LC)
                                (set-symbol-value!
                                  g$loc$10476$13P8LC
                                  g$proc$10477$13P8LC)))
                             (car g$x$10475$13P8LC)
                             (g$cadr$4887$13P8LC g$x$10475$13P8LC))))
                         g$macro*$10474$13P8LC)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7414$13P8LC
                 g$x$10432$13P8LC
                 g$verify-name$10434$13P8LC)))
            (case-lambda
              ((g$name$10446$13P8LC
                 g$ver$10447$13P8LC
                 g$imp*$10448$13P8LC
                 g$inv*$10449$13P8LC
                 g$vis*$10450$13P8LC
                 g$invoke-code$10451$13P8LC
                 g$macro*$10452$13P8LC
                 g$export-subst$10453$13P8LC
                 g$export-env$10454$13P8LC)
               ((case-lambda
                  ((g$export-env$10455$13P8LC
                     g$export-subst$10456$13P8LC
                     g$macro*$10457$13P8LC
                     g$invoke-code$10458$13P8LC
                     g$vis*$10459$13P8LC
                     g$inv*$10460$13P8LC
                     g$imp*$10461$13P8LC
                     g$ver$10462$13P8LC
                     g$name$10463$13P8LC)
                   ((case-lambda
                      ((g$id$10464$13P8LC
                         g$name$10465$13P8LC
                         g$ver$10466$13P8LC
                         g$imp*$10467$13P8LC
                         g$vis*$10468$13P8LC
                         g$inv*$10469$13P8LC
                         g$visit-proc$10470$13P8LC
                         g$invoke-proc$10471$13P8LC
                         g$visit-code$10472$13P8LC
                         g$invoke-code$10473$13P8LC)
                       (begin
                         (g$install-library$6891$13P8LC
                           g$id$10464$13P8LC
                           g$name$10465$13P8LC
                           g$ver$10466$13P8LC
                           g$imp*$10467$13P8LC
                           g$vis*$10468$13P8LC
                           g$inv*$10469$13P8LC
                           g$export-subst$10456$13P8LC
                           g$export-env$10455$13P8LC
                           g$visit-proc$10470$13P8LC
                           g$invoke-proc$10471$13P8LC
                           g$visit-code$10472$13P8LC
                           g$invoke-code$10473$13P8LC
                           '#t
                           g$filename$10433$13P8LC)
                         (values
                           g$id$10464$13P8LC
                           g$name$10465$13P8LC
                           g$ver$10466$13P8LC
                           g$imp*$10467$13P8LC
                           g$vis*$10468$13P8LC
                           g$inv*$10469$13P8LC
                           g$invoke-code$10473$13P8LC
                           g$visit-code$10472$13P8LC
                           g$export-subst$10456$13P8LC
                           g$export-env$10455$13P8LC))))
                    (gensym)
                    g$name$10463$13P8LC
                    g$ver$10462$13P8LC
                    (map g$library-spec$6897$13P8LC g$imp*$10461$13P8LC)
                    (map g$library-spec$6897$13P8LC g$vis*$10459$13P8LC)
                    (map g$library-spec$6897$13P8LC g$inv*$10460$13P8LC)
                    (case-lambda
                      (() (g$visit!$10436$13P8LC g$macro*$10457$13P8LC)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6592$13P8LC
                           g$invoke-code$10458$13P8LC))))
                    (g$build-visit-code$10435$13P8LC g$macro*$10457$13P8LC)
                    g$invoke-code$10458$13P8LC)))
                g$export-env$10454$13P8LC
                g$export-subst$10453$13P8LC
                g$macro*$10452$13P8LC
                g$invoke-code$10451$13P8LC
                g$vis*$10450$13P8LC
                g$inv*$10449$13P8LC
                g$imp*$10448$13P8LC
                g$ver$10447$13P8LC
                g$name$10446$13P8LC))))))
       ((g$x$10482$13P8LC g$filename$10483$13P8LC)
        (g$library-expander$7449$13P8LC
          g$x$10482$13P8LC
          g$filename$10483$13P8LC
          (case-lambda ((g$x$10484$13P8LC) (values)))))
       ((g$x$10485$13P8LC)
        (g$library-expander$7449$13P8LC
          g$x$10485$13P8LC
          '#f
          (case-lambda ((g$x$10486$13P8LC) (values)))))))
   (g$boot-library-expand$7450$13P8LC
     g$boot-library-expand$10886$13P8LC
     (case-lambda
       ((g$x$10487$13P8LC)
        (call-with-values
          (case-lambda (() (g$library-expander$7449$13P8LC g$x$10487$13P8LC)))
          (case-lambda
            ((g$id$10498$13P8LC
               g$name$10499$13P8LC
               g$ver$10500$13P8LC
               g$imp*$10501$13P8LC
               g$vis*$10502$13P8LC
               g$inv*$10503$13P8LC
               g$invoke-code$10504$13P8LC
               g$visit-code$10505$13P8LC
               g$export-subst$10506$13P8LC
               g$export-env$10507$13P8LC)
             ((case-lambda
                ((g$export-env$10508$13P8LC
                   g$export-subst$10509$13P8LC
                   g$visit-code$10510$13P8LC
                   g$invoke-code$10511$13P8LC
                   g$inv*$10512$13P8LC
                   g$vis*$10513$13P8LC
                   g$imp*$10514$13P8LC
                   g$ver$10515$13P8LC
                   g$name$10516$13P8LC
                   g$id$10517$13P8LC)
                 (values
                   g$name$10516$13P8LC
                   g$invoke-code$10511$13P8LC
                   g$export-subst$10509$13P8LC
                   g$export-env$10508$13P8LC)))
              g$export-env$10507$13P8LC
              g$export-subst$10506$13P8LC
              g$visit-code$10505$13P8LC
              g$invoke-code$10504$13P8LC
              g$inv*$10503$13P8LC
              g$vis*$10502$13P8LC
              g$imp*$10501$13P8LC
              g$ver$10500$13P8LC
              g$name$10499$13P8LC
              g$id$10498$13P8LC)))))))
   (g$rev-map-append$7451$13P8LC
     g$rev-map-append$10887$13P8LC
     (case-lambda
       ((g$f$10518$13P8LC g$ls$10519$13P8LC g$ac$10520$13P8LC)
        (if (null? g$ls$10519$13P8LC)
          g$ac$10520$13P8LC
          (g$rev-map-append$7451$13P8LC
            g$f$10518$13P8LC
            (cdr g$ls$10519$13P8LC)
            (cons
              (g$f$10518$13P8LC (car g$ls$10519$13P8LC))
              g$ac$10520$13P8LC))))))
   (g$build-exports$7452$13P8LC
     g$build-exports$10888$13P8LC
     (case-lambda
       ((g$lex*+loc*$10521$13P8LC g$init*$10522$13P8LC)
        (g$build-sequence$7012$13P8LC
          '#f
          (cons
            (g$build-void$7013$13P8LC)
            (g$rev-map-append$7451$13P8LC
              (case-lambda
                ((g$x$10523$13P8LC)
                 (list 'set! (cdr g$x$10523$13P8LC) (car g$x$10523$13P8LC))))
              g$lex*+loc*$10521$13P8LC
              g$init*$10522$13P8LC))))))
   (g$make-export-subst$7453$13P8LC
     g$make-export-subst$10889$13P8LC
     (case-lambda
       ((g$int*$10524$13P8LC g$ext*$10525$13P8LC g$rib$10526$13P8LC)
        (map (case-lambda
               ((g$int$10527$13P8LC g$ext$10528$13P8LC)
                ((case-lambda
                   ((g$id$10529$13P8LC)
                    ((case-lambda
                       ((g$label$10530$13P8LC)
                        ((case-lambda
                           (()
                            (begin
                              (if (not g$label$10530$13P8LC)
                                (g$syntax-violation$7465$13P8LC
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10529$13P8LC)
                                (void))
                              (cons
                                g$ext$10528$13P8LC
                                g$label$10530$13P8LC)))))))
                     (g$id->label$7091$13P8LC g$id$10529$13P8LC))))
                 (g$make-stx$7051$13P8LC
                   g$int$10527$13P8LC
                   g$top-mark*$7020$13P8LC
                   (list g$rib$10526$13P8LC)
                   '()))))
             g$int*$10524$13P8LC
             g$ext*$10525$13P8LC))))
   (g$make-export-env/macros$7454$13P8LC
     g$make-export-env/macros$10890$13P8LC
     (case-lambda
       ((g$lex*$10531$13P8LC g$loc*$10532$13P8LC g$r$10533$13P8LC)
        (letrec* ((g$lookup$10534$13P8LC
                    (case-lambda
                      ((g$x$10549$13P8LC)
                       ((letrec ((g$f$10550$13P8LC
                                   (case-lambda
                                     ((g$x$10551$13P8LC
                                        g$lex*$10552$13P8LC
                                        g$loc*$10553$13P8LC)
                                      (if (pair? g$lex*$10552$13P8LC)
                                        (if (eq? g$x$10551$13P8LC
                                                 (car g$lex*$10552$13P8LC))
                                          (car g$loc*$10553$13P8LC)
                                          (g$f$10550$13P8LC
                                            g$x$10551$13P8LC
                                            (cdr g$lex*$10552$13P8LC)
                                            (cdr g$loc*$10553$13P8LC)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10550$13P8LC)
                        g$x$10549$13P8LC
                        g$lex*$10531$13P8LC
                        g$loc*$10532$13P8LC)))))
          ((letrec ((g$f$10535$13P8LC
                      (case-lambda
                        ((g$r$10536$13P8LC
                           g$env$10537$13P8LC
                           g$global*$10538$13P8LC
                           g$macro*$10539$13P8LC)
                         (if (null? g$r$10536$13P8LC)
                           (values
                             g$env$10537$13P8LC
                             g$global*$10538$13P8LC
                             g$macro*$10539$13P8LC)
                           ((case-lambda
                              ((g$x$10540$13P8LC)
                               ((case-lambda
                                  ((g$label$10541$13P8LC g$b$10542$13P8LC)
                                   ((case-lambda
                                      ((g$t$10543$13P8LC)
                                       (if (memv g$t$10543$13P8LC '(lexical))
                                         ((case-lambda
                                            ((g$v$10544$13P8LC)
                                             ((case-lambda
                                                ((g$loc$10545$13P8LC
                                                   g$type$10546$13P8LC)
                                                 (g$f$10535$13P8LC
                                                   (cdr g$r$10536$13P8LC)
                                                   (cons
                                                     (g$cons*$5358$13P8LC
                                                       g$label$10541$13P8LC
                                                       g$type$10546$13P8LC
                                                       g$loc$10545$13P8LC)
                                                     g$env$10537$13P8LC)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7300$13P8LC
                                                         g$v$10544$13P8LC)
                                                       g$loc$10545$13P8LC)
                                                     g$global*$10538$13P8LC)
                                                   g$macro*$10539$13P8LC)))
                                              (g$lookup$10534$13P8LC
                                                (g$lexical-var$7300$13P8LC
                                                  g$v$10544$13P8LC))
                                              (if (g$lexical-mutable?$7301$13P8LC
                                                    g$v$10544$13P8LC)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7096$13P8LC
                                            g$b$10542$13P8LC))
                                         (if (memv
                                               g$t$10543$13P8LC
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10547$13P8LC)
                                               (g$f$10535$13P8LC
                                                 (cdr g$r$10536$13P8LC)
                                                 (cons
                                                   (g$cons*$5358$13P8LC
                                                     g$label$10541$13P8LC
                                                     'global-macro
                                                     g$loc$10547$13P8LC)
                                                   g$env$10537$13P8LC)
                                                 g$global*$10538$13P8LC
                                                 (cons
                                                   (cons
                                                     g$loc$10547$13P8LC
                                                     (g$binding-value$7096$13P8LC
                                                       g$b$10542$13P8LC))
                                                   g$macro*$10539$13P8LC))))
                                            (gensym))
                                           (if (memv
                                                 g$t$10543$13P8LC
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10548$13P8LC)
                                                 (g$f$10535$13P8LC
                                                   (cdr g$r$10536$13P8LC)
                                                   (cons
                                                     (g$cons*$5358$13P8LC
                                                       g$label$10541$13P8LC
                                                       'global-macro!
                                                       g$loc$10548$13P8LC)
                                                     g$env$10537$13P8LC)
                                                   g$global*$10538$13P8LC
                                                   (cons
                                                     (cons
                                                       g$loc$10548$13P8LC
                                                       (g$binding-value$7096$13P8LC
                                                         g$b$10542$13P8LC))
                                                     g$macro*$10539$13P8LC))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10543$13P8LC
                                                   '($rtd $module))
                                               (g$f$10535$13P8LC
                                                 (cdr g$r$10536$13P8LC)
                                                 (cons
                                                   g$x$10540$13P8LC
                                                   g$env$10537$13P8LC)
                                                 g$global*$10538$13P8LC
                                                 g$macro*$10539$13P8LC)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7095$13P8LC
                                                   g$b$10542$13P8LC)
                                                 (g$binding-value$7096$13P8LC
                                                   g$b$10542$13P8LC))))))))
                                    (g$binding-type$7095$13P8LC
                                      g$b$10542$13P8LC))))
                                (car g$x$10540$13P8LC)
                                (cdr g$x$10540$13P8LC))))
                            (car g$r$10536$13P8LC)))))))
             g$f$10535$13P8LC)
           g$r$10533$13P8LC
           '()
           '()
           '())))))
   (g$generate-temporaries$7455$13P8LC
     g$generate-temporaries$10891$13P8LC
     (case-lambda
       ((g$ls$10554$13P8LC)
        ((case-lambda
           ((g$t$10555$13P8LC)
            ((case-lambda
               ((g$ls/false$10556$13P8LC)
                (if g$ls/false$10556$13P8LC
                  (apply
                    (case-lambda
                      ((g$ls$10557$13P8LC)
                       (map (case-lambda
                              ((g$x$10558$13P8LC)
                               (g$make-stx$7051$13P8LC
                                 ((case-lambda
                                    ((g$x$10559$13P8LC)
                                     (if ((case-lambda
                                            ((g$t$10560$13P8LC)
                                             (if g$t$10560$13P8LC
                                               g$t$10560$13P8LC
                                               (begin
                                                 '#f
                                                 (string? g$x$10559$13P8LC)))))
                                          (symbol? g$x$10559$13P8LC))
                                       (gensym g$x$10559$13P8LC)
                                       (gensym 't))))
                                  (g$syntax->datum$7468$13P8LC
                                    g$x$10558$13P8LC))
                                 g$top-mark*$7020$13P8LC
                                 '()
                                 '())))
                            g$ls$10557$13P8LC)))
                    g$ls/false$10556$13P8LC)
                  ((case-lambda
                     ((g$t$10561$13P8LC)
                      ((case-lambda
                         ((g$ls/false$10562$13P8LC)
                          (if g$ls/false$10562$13P8LC
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10562$13P8LC)
                            (g$syntax-violation$7465$13P8LC
                              '#f
                              '"invalid syntax"
                              g$t$10561$13P8LC))))
                       (g$syntax-dispatch$7356$13P8LC g$t$10561$13P8LC '_))))
                   g$t$10555$13P8LC))))
             (g$syntax-dispatch$7356$13P8LC g$t$10555$13P8LC 'each-any))))
         g$ls$10554$13P8LC))))
   (g$free-identifier=?$7456$13P8LC
     g$free-identifier=?$10892$13P8LC
     (case-lambda
       ((g$x$10563$13P8LC g$y$10564$13P8LC)
        (if (g$id?$7078$13P8LC g$x$10563$13P8LC)
          (if (g$id?$7078$13P8LC g$y$10564$13P8LC)
            (g$free-id=?$7082$13P8LC g$x$10563$13P8LC g$y$10564$13P8LC)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10564$13P8LC))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10563$13P8LC)))))
   (g$bound-identifier=?$7457$13P8LC
     g$bound-identifier=?$10893$13P8LC
     (case-lambda
       ((g$x$10565$13P8LC g$y$10566$13P8LC)
        (if (g$id?$7078$13P8LC g$x$10565$13P8LC)
          (if (g$id?$7078$13P8LC g$y$10566$13P8LC)
            (g$bound-id=?$7081$13P8LC g$x$10565$13P8LC g$y$10566$13P8LC)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10566$13P8LC))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10565$13P8LC)))))
   (g$make-source-condition$7458$13P8LC
     g$make-source-condition$10894$13P8LC
     (case-lambda
       ((g$x$10567$13P8LC)
        (letrec* ((g$11350$10568$13P8LC
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11353$13P8LC
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11352$10569$13P8LC '#f)
                  (g$11351$10570$13P8LC
                    (make-record-constructor-descriptor
                      g$11350$10568$13P8LC
                      &condition-rcd
                      g$11352$10569$13P8LC))
                  (g$11349$10571$13P8LC (record-predicate g$11350$10568$13P8LC))
                  (g$make-source-condition$10572$13P8LC
                    (record-constructor g$11351$10570$13P8LC))
                  (g$11347$10573$13P8LC
                    (record-accessor g$11350$10568$13P8LC '0))
                  (g$11348$10574$13P8LC
                    (record-accessor g$11350$10568$13P8LC '1))
                  (g$source-condition?$10575$13P8LC
                    (condition-predicate g$11350$10568$13P8LC))
                  (g$source-filename$10576$13P8LC
                    (condition-accessor
                      g$11350$10568$13P8LC
                      g$11347$10573$13P8LC))
                  (g$source-character$10577$13P8LC
                    (condition-accessor
                      g$11350$10568$13P8LC
                      g$11348$10574$13P8LC)))
          (if (pair? g$x$10567$13P8LC)
            (g$make-source-condition$10572$13P8LC
              (car g$x$10567$13P8LC)
              (cdr g$x$10567$13P8LC))
            (condition))))))
   (g$extract-position-condition$7459$13P8LC
     g$extract-position-condition$10895$13P8LC
     (case-lambda
       ((g$x$10578$13P8LC)
        (g$make-source-condition$7458$13P8LC
          (g$expression-position$7460$13P8LC g$x$10578$13P8LC)))))
   (g$expression-position$7460$13P8LC
     g$expression-position$10896$13P8LC
     (case-lambda
       ((g$x$10579$13P8LC)
        (if (g$stx?$7050$13P8LC g$x$10579$13P8LC)
          (begin
            '#f
            ((case-lambda
               ((g$x$10580$13P8LC)
                (if (annotation? g$x$10580$13P8LC)
                  (begin '#f (annotation-source g$x$10580$13P8LC))
                  '#f)))
             (g$stx-expr$7052$13P8LC g$x$10579$13P8LC)))
          '#f))))
   (g$assertion-error$7461$13P8LC
     g$assertion-error$10897$13P8LC
     (case-lambda
       ((g$expr$10581$13P8LC g$pos$10582$13P8LC)
        (raise
          (condition
            (g$make-assertion-violation$5642$13P8LC)
            (g$make-who-condition$5656$13P8LC 'assert)
            (g$make-message-condition$5610$13P8LC '"assertion failed")
            (g$make-irritants-condition$5648$13P8LC (list g$expr$10581$13P8LC))
            (g$make-source-condition$7458$13P8LC g$pos$10582$13P8LC))))))
   (g$syntax-error$7462$13P8LC
     g$syntax-error$10898$13P8LC
     (case-lambda
       ((g$x$10583$13P8LC . g$args$10584$13P8LC)
        (begin
          (if (not (g$for-all$5356$13P8LC string? g$args$10584$13P8LC))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10584$13P8LC)
            (void))
          (raise
            (condition
              (g$make-message-condition$5610$13P8LC
                (if (null? g$args$10584$13P8LC)
                  '"invalid syntax"
                  (apply string-append g$args$10584$13P8LC)))
              (g$make-syntax-violation$5682$13P8LC
                (g$syntax->datum$7468$13P8LC g$x$10583$13P8LC)
                '#f)
              (g$extract-position-condition$7459$13P8LC g$x$10583$13P8LC)
              (g$extract-trace$7463$13P8LC g$x$10583$13P8LC)))))))
   (g$extract-trace$7463$13P8LC
     g$extract-trace$10899$13P8LC
     (case-lambda
       ((g$x$10585$13P8LC)
        (letrec* ((g$11377$10586$13P8LC
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11380$13P8LC
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11379$10587$13P8LC '#f)
                  (g$11378$10588$13P8LC
                    (make-record-constructor-descriptor
                      g$11377$10586$13P8LC
                      &condition-rcd
                      g$11379$10587$13P8LC))
                  (g$11376$10589$13P8LC (record-predicate g$11377$10586$13P8LC))
                  (g$make-trace$10590$13P8LC
                    (record-constructor g$11378$10588$13P8LC))
                  (g$11375$10591$13P8LC
                    (record-accessor g$11377$10586$13P8LC '0))
                  (g$trace?$10592$13P8LC
                    (condition-predicate g$11377$10586$13P8LC))
                  (g$trace-form$10593$13P8LC
                    (condition-accessor
                      g$11377$10586$13P8LC
                      g$11375$10591$13P8LC)))
          ((letrec ((g$f$10594$13P8LC
                      (case-lambda
                        ((g$x$10595$13P8LC)
                         (if (g$stx?$7050$13P8LC g$x$10595$13P8LC)
                           (apply
                             condition
                             (g$make-trace$10590$13P8LC g$x$10595$13P8LC)
                             (map g$f$10594$13P8LC
                                  (g$stx-ae*$7055$13P8LC g$x$10595$13P8LC)))
                           (if (annotation? g$x$10595$13P8LC)
                             (g$make-trace$10590$13P8LC
                               (g$make-stx$7051$13P8LC
                                 g$x$10595$13P8LC
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10594$13P8LC)
           g$x$10585$13P8LC)))))
   (g$syntax-violation*$7464$13P8LC
     g$syntax-violation*$10900$13P8LC
     (case-lambda
       ((g$who$10596$13P8LC
          g$msg$10597$13P8LC
          g$form$10598$13P8LC
          g$condition-object$10599$13P8LC)
        (begin
          (if (not (string? g$msg$10597$13P8LC))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10597$13P8LC)
            (void))
          ((case-lambda
             ((g$who$10600$13P8LC)
              (raise
                (condition
                  (if g$who$10600$13P8LC
                    (g$make-who-condition$5656$13P8LC g$who$10600$13P8LC)
                    (condition))
                  (g$make-message-condition$5610$13P8LC g$msg$10597$13P8LC)
                  g$condition-object$10599$13P8LC
                  (g$extract-position-condition$7459$13P8LC g$form$10598$13P8LC)
                  (g$extract-trace$7463$13P8LC g$form$10598$13P8LC)))))
           (if ((case-lambda
                  ((g$t$10601$13P8LC)
                   (if g$t$10601$13P8LC
                     g$t$10601$13P8LC
                     (begin '#f (symbol? g$who$10596$13P8LC)))))
                (string? g$who$10596$13P8LC))
             g$who$10596$13P8LC
             (if (not g$who$10596$13P8LC)
               ((case-lambda
                  ((g$t$10602$13P8LC)
                   ((case-lambda
                      ((g$ls/false$10603$13P8LC)
                       (if (if g$ls/false$10603$13P8LC
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10604$13P8LC)
                                    (g$id?$7078$13P8LC g$id$10604$13P8LC)))
                                 g$ls/false$10603$13P8LC))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10605$13P8LC)
                              (g$syntax->datum$7468$13P8LC g$id$10605$13P8LC)))
                           g$ls/false$10603$13P8LC)
                         ((case-lambda
                            ((g$t$10606$13P8LC)
                             ((case-lambda
                                ((g$ls/false$10607$13P8LC)
                                 (if (if g$ls/false$10607$13P8LC
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10608$13P8LC
                                                g$rest$10609$13P8LC)
                                              (g$id?$7078$13P8LC
                                                g$id$10608$13P8LC)))
                                           g$ls/false$10607$13P8LC))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10610$13P8LC g$rest$10611$13P8LC)
                                        (g$syntax->datum$7468$13P8LC
                                          g$id$10610$13P8LC)))
                                     g$ls/false$10607$13P8LC)
                                   ((case-lambda
                                      ((g$t$10612$13P8LC)
                                       ((case-lambda
                                          ((g$ls/false$10613$13P8LC)
                                           (if g$ls/false$10613$13P8LC
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10613$13P8LC)
                                             (g$syntax-violation$7465$13P8LC
                                               '#f
                                               '"invalid syntax"
                                               g$t$10612$13P8LC))))
                                        (g$syntax-dispatch$7356$13P8LC
                                          g$t$10612$13P8LC
                                          '_))))
                                    g$t$10606$13P8LC))))
                              (g$syntax-dispatch$7356$13P8LC
                                g$t$10606$13P8LC
                                '(any . any)))))
                          g$t$10602$13P8LC))))
                    (g$syntax-dispatch$7356$13P8LC g$t$10602$13P8LC 'any))))
                g$form$10598$13P8LC)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10596$13P8LC))))))))
   (g$syntax-violation$7465$13P8LC
     g$syntax-violation$10901$13P8LC
     (case-lambda
       ((g$who$10614$13P8LC g$msg$10615$13P8LC g$form$10616$13P8LC)
        (g$syntax-violation$7465$13P8LC
          g$who$10614$13P8LC
          g$msg$10615$13P8LC
          g$form$10616$13P8LC
          '#f))
       ((g$who$10617$13P8LC
          g$msg$10618$13P8LC
          g$form$10619$13P8LC
          g$subform$10620$13P8LC)
        (g$syntax-violation*$7464$13P8LC
          g$who$10617$13P8LC
          g$msg$10618$13P8LC
          g$form$10619$13P8LC
          (g$make-syntax-violation$5682$13P8LC
            (g$syntax->datum$7468$13P8LC g$form$10619$13P8LC)
            (g$syntax->datum$7468$13P8LC g$subform$10620$13P8LC))))))
   (g$identifier?$7466$13P8LC
     g$identifier?$10902$13P8LC
     (case-lambda ((g$x$10621$13P8LC) (g$id?$7078$13P8LC g$x$10621$13P8LC))))
   (g$datum->syntax$7467$13P8LC
     g$datum->syntax$10903$13P8LC
     (case-lambda
       ((g$id$10622$13P8LC g$datum$10623$13P8LC)
        (if (g$id?$7078$13P8LC g$id$10622$13P8LC)
          (g$datum->stx$7061$13P8LC g$id$10622$13P8LC g$datum$10623$13P8LC)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10622$13P8LC)))))
   (g$syntax->datum$7468$13P8LC
     g$syntax->datum$10904$13P8LC
     (case-lambda
       ((g$x$10624$13P8LC) (g$stx->datum$7089$13P8LC g$x$10624$13P8LC))))
   (g$compile-r6rs-top-level$7469$13P8LC
     g$compile-r6rs-top-level$10905$13P8LC
     (case-lambda
       ((g$x*$10625$13P8LC)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7416$13P8LC g$x*$10625$13P8LC)))
          (case-lambda
            ((g$lib*$10628$13P8LC g$invoke-code$10629$13P8LC)
             ((case-lambda
                ((g$invoke-code$10630$13P8LC g$lib*$10631$13P8LC)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$6893$13P8LC
                        g$lib*$10631$13P8LC)
                      (eval-core
                        (g$expanded->core$6592$13P8LC
                          g$invoke-code$10630$13P8LC)))))))
              g$invoke-code$10629$13P8LC
              g$lib*$10628$13P8LC)))))))
   (g$pre-compile-r6rs-top-level$7470$13P8LC
     g$pre-compile-r6rs-top-level$10906$13P8LC
     (case-lambda
       ((g$x*$10632$13P8LC)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7416$13P8LC g$x*$10632$13P8LC)))
          (case-lambda
            ((g$lib*$10635$13P8LC g$invoke-code$10636$13P8LC)
             ((case-lambda
                ((g$invoke-code$10637$13P8LC g$lib*$10638$13P8LC)
                 (begin
                   (for-each g$invoke-library$6893$13P8LC g$lib*$10638$13P8LC)
                   (compile-core
                     (g$expanded->core$6592$13P8LC
                       g$invoke-code$10637$13P8LC)))))
              g$invoke-code$10636$13P8LC
              g$lib*$10635$13P8LC)))))))
   (g$interaction-environment$7471$13P8LC
     g$interaction-environment$10907$13P8LC
     ((case-lambda
        ((g$the-env$10639$13P8LC)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10640$13P8LC)
                (if g$t$10640$13P8LC
                  g$t$10640$13P8LC
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10641$13P8LC g$rib$10642$13P8LC)
                        (begin
                          ((case-lambda
                             ((g$subst$10643$13P8LC)
                              (begin
                                (g$set-rib-sym*!$7037$13P8LC
                                  g$rib$10642$13P8LC
                                  (map car g$subst$10643$13P8LC))
                                (g$set-rib-mark**!$7038$13P8LC
                                  g$rib$10642$13P8LC
                                  (map (case-lambda
                                         ((g$x$10644$13P8LC)
                                          g$top-mark*$7020$13P8LC))
                                       g$subst$10643$13P8LC))
                                (g$set-rib-label*!$7039$13P8LC
                                  g$rib$10642$13P8LC
                                  (map cdr g$subst$10643$13P8LC)))))
                           (g$library-subst$6850$13P8LC g$lib$10641$13P8LC))
                          ((case-lambda
                             ((g$env$10645$13P8LC)
                              (begin
                                (set! g$the-env$10639$13P8LC g$env$10645$13P8LC)
                                g$env$10645$13P8LC)))
                           (g$make-interaction-env$7433$13P8LC
                             g$rib$10642$13P8LC
                             '()
                             '())))))
                     (g$find-library-by-name$6886$13P8LC '(ironscheme))
                     (g$make-empty-rib$7041$13P8LC))))))
             g$the-env$10639$13P8LC)))))
      '#f))
   (g$top-level-context$7472$13P8LC
     g$top-level-context$10908$13P8LC
     (g$make-parameter$6345$13P8LC '#f)))
  (g$current-library-expander$6883$13P8LC g$library-expander$7449$13P8LC))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6589$13P8LC
      (case-lambda
        ((g$x$10961$13P8LC)
         ((case-lambda
            ((g$t$10962$13P8LC)
             (if g$t$10962$13P8LC (cdr g$t$10962$13P8LC) '#f)))
          (assq
            g$x$10961$13P8LC
            '((ellipsis-map . g$ellipsis-map$10797$13P8LC)
              (ironscheme-build . g$ironscheme-build$10954$13P8LC)
              (syntax-error . g$syntax-error$10898$13P8LC)
              (syntax-dispatch . g$syntax-dispatch$10792$13P8LC)
              (compile-system-libraries
                .
                g$compile-system-libraries$10956$13P8LC)
              (compile->closure . g$compile->closure$10958$13P8LC)
              (compile . g$compile$10957$13P8LC)
              (load . g$load$10953$13P8LC)
              (interaction-environment . g$interaction-environment$10907$13P8LC)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10730$13P8LC)
              (variable-transformer? . g$variable-transformer?$10729$13P8LC)
              (make-variable-transformer
                .
                g$make-variable-transformer$10728$13P8LC)
              (identifier? . g$identifier?$10902$13P8LC)
              (generate-temporaries . g$generate-temporaries$10891$13P8LC)
              (free-identifier=? . g$free-identifier=?$10892$13P8LC)
              (syntax->datum . g$syntax->datum$10904$13P8LC)
              (datum->syntax . g$datum->syntax$10903$13P8LC)
              (bound-identifier=? . g$bound-identifier=?$10893$13P8LC)
              (delete-file . g$delete-file$5228$13P8LC)
              (file-exists? . g$file-exists?$5227$13P8LC)
              (list-sort . g$list-sort$5753$13P8LC)
              (make-eqv-hashtable . g$make-eqv-hashtable$5150$13P8LC)
              (make-eq-hashtable . g$make-eq-hashtable$5149$13P8LC)
              (hashtable-update! . g$hashtable-update!$5156$13P8LC)
              (hashtable-size . g$hashtable-size$5151$13P8LC)
              (hashtable-set! . g$hashtable-set!$5153$13P8LC)
              (hashtable-ref . g$hashtable-ref$5152$13P8LC)
              (hashtable-delete! . g$hashtable-delete!$5154$13P8LC)
              (hashtable-contains? . g$hashtable-contains?$5155$13P8LC)
              (hashtable-clear! . g$hashtable-clear!$5157$13P8LC)
              (port? . g$port?$6094$13P8LC)
              (open-string-output-port . g$open-string-output-port$6093$13P8LC)
              (make-i/o-write-error . g$make-i/o-write-error$6019$13P8LC)
              (make-i/o-read-error . g$make-i/o-read-error$6013$13P8LC)
              (make-i/o-port-error . g$make-i/o-port-error$6065$13P8LC)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6025$13P8LC)
              (make-i/o-filename-error . g$make-i/o-filename-error$6033$13P8LC)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6041$13P8LC)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6047$13P8LC)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6059$13P8LC)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6053$13P8LC)
              (make-i/o-error . g$make-i/o-error$6007$13P8LC)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6079$13P8LC)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6073$13P8LC)
              (i/o-write-error? . g$i/o-write-error?$6020$13P8LC)
              (i/o-read-error? . g$i/o-read-error?$6014$13P8LC)
              (i/o-port-error? . g$i/o-port-error?$6067$13P8LC)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6027$13P8LC)
              (i/o-error-position . g$i/o-error-position$6028$13P8LC)
              (i/o-filename-error? . g$i/o-filename-error?$6035$13P8LC)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6042$13P8LC)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6048$13P8LC)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6060$13P8LC)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6054$13P8LC)
              (i/o-error? . g$i/o-error?$6008$13P8LC)
              (i/o-error-port . g$i/o-error-port$6068$13P8LC)
              (i/o-error-filename . g$i/o-error-filename$6036$13P8LC)
              (i/o-encoding-error? . g$i/o-encoding-error?$6081$13P8LC)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6082$13P8LC)
              (i/o-decoding-error? . g$i/o-decoding-error?$6074$13P8LC)
              (scheme-report-environment
                .
                g$scheme-report-environment$10882$13P8LC)
              (quotient . g$quotient$5720$13P8LC)
              (null-environment . g$null-environment$10881$13P8LC)
              (remainder . g$remainder$5721$13P8LC)
              (modulo . g$modulo$5722$13P8LC)
              (force . g$force$5724$13P8LC)
              (command-line . g$command-line$10950$13P8LC)
              (remove . g$remove$5361$13P8LC)
              (remv . g$remv$5362$13P8LC)
              (remp . g$remp$5347$13P8LC)
              (remq . g$remq$5363$13P8LC)
              (partition . g$partition$5346$13P8LC)
              (memp . g$memp$5353$13P8LC)
              (member . g$member$5352$13P8LC)
              (exists . g$exists$5357$13P8LC)
              (for-all . g$for-all$5356$13P8LC)
              (fold-right . g$fold-right$5360$13P8LC)
              (fold-left . g$fold-left$5359$13P8LC)
              (find . g$find$5345$13P8LC)
              (filter . g$filter$5348$13P8LC)
              (cons* . g$cons*$5358$13P8LC)
              (assv . g$assv$5349$13P8LC)
              (assp . g$assp$5351$13P8LC)
              (assoc . g$assoc$5350$13P8LC)
              (eval . g$eval$10884$13P8LC)
              (environment . g$environment$10880$13P8LC)
              (make-enumeration . g$make-enumeration$6222$13P8LC)
              (enum-set=? . g$enum-set=?$6229$13P8LC)
              (enum-set-universe . g$enum-set-universe$6223$13P8LC)
              (enum-set-union . g$enum-set-union$6230$13P8LC)
              (enum-set-subset? . g$enum-set-subset?$6228$13P8LC)
              (enum-set-projection . g$enum-set-projection$6234$13P8LC)
              (enum-set-member? . g$enum-set-member?$6227$13P8LC)
              (enum-set-intersection . g$enum-set-intersection$6231$13P8LC)
              (enum-set-indexer . g$enum-set-indexer$6224$13P8LC)
              (enum-set-difference . g$enum-set-difference$6232$13P8LC)
              (enum-set-constructor . g$enum-set-constructor$6225$13P8LC)
              (enum-set-complement . g$enum-set-complement$6233$13P8LC)
              (enum-set->list . g$enum-set->list$6226$13P8LC)
              (who-condition? . g$who-condition?$5658$13P8LC)
              (warning? . g$warning?$5619$13P8LC)
              (violation? . g$violation?$5637$13P8LC)
              (undefined-violation? . g$undefined-violation?$5693$13P8LC)
              (syntax-violation? . g$syntax-violation?$5685$13P8LC)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5687$13P8LC)
              (syntax-violation-form . g$syntax-violation-form$5686$13P8LC)
              (syntax-violation . g$syntax-violation$10901$13P8LC)
              (serious-condition? . g$serious-condition?$5625$13P8LC)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5665$13P8LC)
              (message-condition? . g$message-condition?$5612$13P8LC)
              (make-who-condition . g$make-who-condition$5656$13P8LC)
              (make-warning . g$make-warning$5618$13P8LC)
              (make-violation . g$make-violation$5636$13P8LC)
              (make-undefined-violation
                .
                g$make-undefined-violation$5692$13P8LC)
              (make-syntax-violation . g$make-syntax-violation$5682$13P8LC)
              (make-serious-condition . g$make-serious-condition$5624$13P8LC)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5664$13P8LC)
              (make-message-condition . g$make-message-condition$5610$13P8LC)
              (make-lexical-violation . g$make-lexical-violation$5676$13P8LC)
              (make-irritants-condition
                .
                g$make-irritants-condition$5648$13P8LC)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5670$13P8LC)
              (make-error . g$make-error$5630$13P8LC)
              (make-assertion-violation
                .
                g$make-assertion-violation$5642$13P8LC)
              (lexical-violation? . g$lexical-violation?$5677$13P8LC)
              (irritants-condition? . g$irritants-condition?$5650$13P8LC)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5671$13P8LC)
              (error? . g$error?$5631$13P8LC)
              (condition-who . g$condition-who$5659$13P8LC)
              (condition-message . g$condition-message$5613$13P8LC)
              (condition-irritants . g$condition-irritants$5651$13P8LC)
              (assertion-violation? . g$assertion-violation?$5643$13P8LC)
              (native-endianness . g$native-endianness$5475$13P8LC)
              (bytevector-u64-set! . g$bytevector-u64-set!$5496$13P8LC)
              (bytevector-u64-ref . g$bytevector-u64-ref$5492$13P8LC)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5498$13P8LC)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5494$13P8LC)
              (bytevector-u32-set! . g$bytevector-u32-set!$5488$13P8LC)
              (bytevector-u32-ref . g$bytevector-u32-ref$5484$13P8LC)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5490$13P8LC)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5486$13P8LC)
              (bytevector-u16-set! . g$bytevector-u16-set!$5480$13P8LC)
              (bytevector-u16-ref . g$bytevector-u16-ref$5476$13P8LC)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5482$13P8LC)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5478$13P8LC)
              (bytevector-s64-set! . g$bytevector-s64-set!$5497$13P8LC)
              (bytevector-s64-ref . g$bytevector-s64-ref$5493$13P8LC)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5499$13P8LC)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5495$13P8LC)
              (bytevector-s32-set! . g$bytevector-s32-set!$5489$13P8LC)
              (bytevector-s32-ref . g$bytevector-s32-ref$5485$13P8LC)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5491$13P8LC)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5487$13P8LC)
              (bytevector-s16-set! . g$bytevector-s16-set!$5481$13P8LC)
              (bytevector-s16-ref . g$bytevector-s16-ref$5477$13P8LC)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5483$13P8LC)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5479$13P8LC)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5502$13P8LC)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5500$13P8LC)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5503$13P8LC)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5501$13P8LC)
              (no-nans-violation? . g$no-nans-violation?$5922$13P8LC)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$5916$13P8LC)
              (make-no-nans-violation . g$make-no-nans-violation$5921$13P8LC)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$5915$13P8LC)
              (fxrotate-bit-field . g$fxrotate-bit-field$5898$13P8LC)
              (fxif . g$fxif$5892$13P8LC)
              (fxcopy-bit-field . g$fxcopy-bit-field$5895$13P8LC)
              (fxcopy-bit . g$fxcopy-bit$5893$13P8LC)
              (fxbit-field . g$fxbit-field$5894$13P8LC)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$5897$13P8LC)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$5896$13P8LC)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$5844$13P8LC)
              (bitwise-if . g$bitwise-if$5838$13P8LC)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$5841$13P8LC)
              (bitwise-copy-bit . g$bitwise-copy-bit$5839$13P8LC)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$5843$13P8LC)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$5842$13P8LC)
              (rationalize . g$rationalize$4914$13P8LC)
              (cddddr . g$cddddr$4913$13P8LC)
              (cdddar . g$cdddar$4912$13P8LC)
              (cddadr . g$cddadr$4911$13P8LC)
              (cddaar . g$cddaar$4910$13P8LC)
              (cdaddr . g$cdaddr$4909$13P8LC)
              (cdadar . g$cdadar$4908$13P8LC)
              (cdaadr . g$cdaadr$4907$13P8LC)
              (cdaaar . g$cdaaar$4906$13P8LC)
              (cadddr . g$cadddr$4905$13P8LC)
              (caddar . g$caddar$4904$13P8LC)
              (cadadr . g$cadadr$4903$13P8LC)
              (cadaar . g$cadaar$4902$13P8LC)
              (caaddr . g$caaddr$4901$13P8LC)
              (caadar . g$caadar$4900$13P8LC)
              (caaadr . g$caaadr$4899$13P8LC)
              (caaaar . g$caaaar$4898$13P8LC)
              (cdddr . g$cdddr$4897$13P8LC)
              (cddar . g$cddar$4896$13P8LC)
              (cdadr . g$cdadr$4895$13P8LC)
              (cdaar . g$cdaar$4894$13P8LC)
              (caddr . g$caddr$4893$13P8LC)
              (cadar . g$cadar$4892$13P8LC)
              (caadr . g$caadr$4891$13P8LC)
              (caaar . g$caaar$4890$13P8LC)
              (cddr . g$cddr$4889$13P8LC)
              (cdar . g$cdar$4888$13P8LC)
              (cadr . g$cadr$4887$13P8LC)
              (caar . g$caar$4886$13P8LC)
              (make-promise . g$make-promise$5723$13P8LC)
              (load/args . g$load/args$10952$13P8LC)
              (printf . g$printf$6258$13P8LC)
              (fprintf . g$fprintf$6259$13P8LC)
              (format . g$format$6260$13P8LC)
              (trace-printer . g$trace-printer$10949$13P8LC)
              (make-traced-macro . g$make-traced-macro$6264$13P8LC)
              (assertion-error . g$assertion-error$10897$13P8LC)
              (make-parameter . g$make-parameter$6345$13P8LC)
              (environment-symbols . g$environment-symbols$10878$13P8LC)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$10877$13P8LC)
              (library-path . g$library-path$6875$13P8LC)
              (library-extensions . g$library-extensions$6876$13P8LC)
              (installed-libraries . g$installed-libraries$6896$13P8LC)
              (expand . g$expand$10883$13P8LC)))))))
    (g$install-library$6891$13P8LC
      'g$12124$13P8LC
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12061$13P8LC)
        (cosh . g$12060$13P8LC)
        (sinh . g$12059$13P8LC)
        (make-guid . g$12058$13P8LC)
        (unspecified? . g$12057$13P8LC)
        (make-trace . g$12056$13P8LC)
        (make-list . g$12055$13P8LC)
        (last-pair . g$12054$13P8LC)
        (load-r5rs . g$12053$13P8LC)
        (license . g$12052$13P8LC)
        (stacktrace . g$12051$13P8LC)
        (ironscheme-build . g$11449$13P8LC)
        (set-symbol-value! . g$12037$13P8LC)
        (symbol-value . g$12036$13P8LC)
        (ungensym . g$12035$13P8LC)
        (gensym . g$12034$13P8LC)
        (void . g$12033$13P8LC)
        (compile-system-libraries . g$11451$13P8LC)
        (compile->closure . g$11453$13P8LC)
        (compile . g$11452$13P8LC)
        (load . g$11448$13P8LC)
        (interaction-environment . g$8517$13P8LC)
        (string-upcase . g$12029$13P8LC)
        (string-titlecase . g$12028$13P8LC)
        (string-normalize-nfkd . g$12027$13P8LC)
        (string-normalize-nfkc . g$12026$13P8LC)
        (string-normalize-nfd . g$12025$13P8LC)
        (string-normalize-nfc . g$12024$13P8LC)
        (string-foldcase . g$12023$13P8LC)
        (string-downcase . g$12022$13P8LC)
        (string-ci>? . g$12021$13P8LC)
        (string-ci>=? . g$12020$13P8LC)
        (string-ci=? . g$12019$13P8LC)
        (string-ci<? . g$12018$13P8LC)
        (string-ci<=? . g$12017$13P8LC)
        (char-whitespace? . g$12016$13P8LC)
        (char-upper-case? . g$12015$13P8LC)
        (char-title-case? . g$12014$13P8LC)
        (char-numeric? . g$12013$13P8LC)
        (char-lower-case? . g$12012$13P8LC)
        (char-general-category . g$12011$13P8LC)
        (char-upcase . g$12010$13P8LC)
        (char-titlecase . g$12009$13P8LC)
        (char-foldcase . g$12008$13P8LC)
        (char-downcase . g$12007$13P8LC)
        (char-ci>? . g$12006$13P8LC)
        (char-ci>=? . g$12005$13P8LC)
        (char-ci=? . g$12004$13P8LC)
        (char-ci<? . g$12003$13P8LC)
        (char-ci<=? . g$12002$13P8LC)
        (char-alphabetic? . g$12001$13P8LC)
        (variable-transformer-procedure . g$8118$13P8LC)
        (variable-transformer? . g$8117$13P8LC)
        (make-variable-transformer . g$8116$13P8LC)
        (identifier? . g$8512$13P8LC)
        (generate-temporaries . g$8501$13P8LC)
        (free-identifier=? . g$8502$13P8LC)
        (syntax->datum . g$8514$13P8LC)
        (datum->syntax . g$8513$13P8LC)
        (bound-identifier=? . g$8503$13P8LC)
        (record-type-descriptor? . g$12000$13P8LC)
        (record-predicate . g$11999$13P8LC)
        (record-mutator . g$11998$13P8LC)
        (record-constructor . g$11997$13P8LC)
        (record-accessor . g$11996$13P8LC)
        (make-record-type-descriptor . g$11995$13P8LC)
        (make-record-constructor-descriptor . g$11994$13P8LC)
        (record? . g$11993$13P8LC)
        (record-type-uid . g$11992$13P8LC)
        (record-type-sealed? . g$11991$13P8LC)
        (record-type-parent . g$11990$13P8LC)
        (record-type-opaque? . g$11989$13P8LC)
        (record-type-name . g$11988$13P8LC)
        (record-type-generative? . g$11987$13P8LC)
        (record-type-field-names . g$11986$13P8LC)
        (record-rtd . g$11985$13P8LC)
        (record-field-mutable? . g$11984$13P8LC)
        (delete-file . g$6170$13P8LC)
        (file-exists? . g$6169$13P8LC)
        (vector-sort! . g$11983$13P8LC)
        (vector-sort . g$11982$13P8LC)
        (list-sort . g$6683$13P8LC)
        (symbol-hash . g$11981$13P8LC)
        (string-ci-hash . g$11980$13P8LC)
        (string-hash . g$11979$13P8LC)
        (equal-hash . g$11978$13P8LC)
        (hashtable-equivalence-function . g$11977$13P8LC)
        (make-hashtable . g$11976$13P8LC)
        (hashtable-hash-function . g$11975$13P8LC)
        (make-eqv-hashtable . g$6137$13P8LC)
        (make-eq-hashtable . g$6136$13P8LC)
        (hashtable? . g$11974$13P8LC)
        (hashtable-update! . g$6143$13P8LC)
        (hashtable-size . g$6138$13P8LC)
        (hashtable-set! . g$6140$13P8LC)
        (hashtable-ref . g$6139$13P8LC)
        (hashtable-mutable? . g$11973$13P8LC)
        (hashtable-keys . g$11972$13P8LC)
        (hashtable-entries . g$11971$13P8LC)
        (hashtable-delete! . g$6141$13P8LC)
        (hashtable-copy . g$11970$13P8LC)
        (hashtable-contains? . g$6142$13P8LC)
        (hashtable-clear! . g$6144$13P8LC)
        (call-with-output-file . g$11969$13P8LC)
        (call-with-input-file . g$11968$13P8LC)
        (write-char . g$11967$13P8LC)
        (write . g$11966$13P8LC)
        (with-output-to-file . g$11965$13P8LC)
        (with-input-from-file . g$11964$13P8LC)
        (read-char . g$11963$13P8LC)
        (read . g$11962$13P8LC)
        (peek-char . g$11961$13P8LC)
        (open-output-file . g$11960$13P8LC)
        (open-input-file . g$11959$13P8LC)
        (newline . g$11958$13P8LC)
        (display . g$11957$13P8LC)
        (close-output-port . g$11956$13P8LC)
        (close-input-port . g$11955$13P8LC)
        (eof-object? . g$11954$13P8LC)
        (eof-object . g$11953$13P8LC)
        (current-error-port . g$11952$13P8LC)
        (current-output-port . g$11951$13P8LC)
        (current-input-port . g$11950$13P8LC)
        (output-port? . g$11949$13P8LC)
        (input-port? . g$11948$13P8LC)
        (utf-8-codec . g$11947$13P8LC)
        (utf-16-codec . g$11946$13P8LC)
        (transcoder-error-handling-mode . g$11945$13P8LC)
        (transcoder-eol-style . g$11944$13P8LC)
        (transcoder-codec . g$11943$13P8LC)
        (transcoded-port . g$11942$13P8LC)
        (textual-port? . g$11941$13P8LC)
        (string->bytevector . g$11940$13P8LC)
        (standard-output-port . g$11939$13P8LC)
        (standard-input-port . g$11938$13P8LC)
        (standard-error-port . g$11937$13P8LC)
        (set-port-position! . g$11936$13P8LC)
        (put-u8 . g$11935$13P8LC)
        (put-string . g$11934$13P8LC)
        (put-datum . g$11933$13P8LC)
        (put-char . g$11932$13P8LC)
        (put-bytevector . g$11931$13P8LC)
        (port? . g$7071$13P8LC)
        (port-transcoder . g$11930$13P8LC)
        (port-position . g$11929$13P8LC)
        (port-has-set-port-position!? . g$11928$13P8LC)
        (port-has-port-position? . g$11927$13P8LC)
        (port-eof? . g$11926$13P8LC)
        (output-port-buffer-mode . g$11925$13P8LC)
        (open-string-output-port . g$7070$13P8LC)
        (open-string-input-port . g$11924$13P8LC)
        (open-file-output-port . g$11923$13P8LC)
        (open-file-input/output-port . g$11922$13P8LC)
        (open-file-input-port . g$11921$13P8LC)
        (open-bytevector-output-port . g$11920$13P8LC)
        (open-bytevector-input-port . g$11919$13P8LC)
        (native-transcoder . g$11918$13P8LC)
        (native-eol-style . g$11917$13P8LC)
        (make-transcoder . g$11916$13P8LC)
        (latin-1-codec . g$11915$13P8LC)
        (make-i/o-write-error . g$6927$13P8LC)
        (make-i/o-read-error . g$6913$13P8LC)
        (make-i/o-port-error . g$7032$13P8LC)
        (make-i/o-invalid-position-error . g$6942$13P8LC)
        (make-i/o-filename-error . g$6959$13P8LC)
        (make-i/o-file-protection-error . g$6975$13P8LC)
        (make-i/o-file-is-read-only-error . g$6989$13P8LC)
        (make-i/o-file-does-not-exist-error . g$7017$13P8LC)
        (make-i/o-file-already-exists-error . g$7003$13P8LC)
        (make-i/o-error . g$6899$13P8LC)
        (make-i/o-encoding-error . g$7063$13P8LC)
        (make-i/o-decoding-error . g$7048$13P8LC)
        (make-custom-textual-output-port . g$11914$13P8LC)
        (make-custom-textual-input/output-port . g$11913$13P8LC)
        (make-custom-textual-input-port . g$11912$13P8LC)
        (make-custom-binary-output-port . g$11911$13P8LC)
        (make-custom-binary-input/output-port . g$11910$13P8LC)
        (make-custom-binary-input-port . g$11909$13P8LC)
        (make-bytevector . g$11908$13P8LC)
        (lookahead-u8 . g$11907$13P8LC)
        (lookahead-char . g$11906$13P8LC)
        (i/o-write-error? . g$6928$13P8LC)
        (i/o-read-error? . g$6914$13P8LC)
        (i/o-port-error? . g$7034$13P8LC)
        (i/o-invalid-position-error? . g$6944$13P8LC)
        (i/o-error-position . g$6945$13P8LC)
        (i/o-filename-error? . g$6961$13P8LC)
        (i/o-file-protection-error? . g$6976$13P8LC)
        (i/o-file-is-read-only-error? . g$6990$13P8LC)
        (i/o-file-does-not-exist-error? . g$7018$13P8LC)
        (i/o-file-already-exists-error? . g$7004$13P8LC)
        (i/o-error? . g$6900$13P8LC)
        (i/o-error-port . g$7035$13P8LC)
        (i/o-error-filename . g$6962$13P8LC)
        (i/o-encoding-error? . g$7065$13P8LC)
        (i/o-encoding-error-char . g$7066$13P8LC)
        (i/o-decoding-error? . g$7049$13P8LC)
        (get-u8 . g$11905$13P8LC)
        (get-string-n! . g$11904$13P8LC)
        (get-string-n . g$11903$13P8LC)
        (get-string-all . g$11902$13P8LC)
        (get-line . g$11901$13P8LC)
        (get-datum . g$11900$13P8LC)
        (get-char . g$11899$13P8LC)
        (get-bytevector-some . g$11898$13P8LC)
        (get-bytevector-n! . g$11897$13P8LC)
        (get-bytevector-n . g$11896$13P8LC)
        (get-bytevector-all . g$11895$13P8LC)
        (flush-output-port . g$11894$13P8LC)
        (close-port . g$11893$13P8LC)
        (call-with-string-output-port . g$11892$13P8LC)
        (call-with-port . g$11891$13P8LC)
        (call-with-bytevector-output-port . g$11890$13P8LC)
        (bytevector->string . g$11889$13P8LC)
        (buffer-mode? . g$11888$13P8LC)
        (binary-port? . g$11887$13P8LC)
        (scheme-report-environment . g$8492$13P8LC)
        (quotient . g$6663$13P8LC)
        (null-environment . g$8491$13P8LC)
        (remainder . g$6664$13P8LC)
        (modulo . g$6665$13P8LC)
        (inexact->exact . g$11886$13P8LC)
        (force . g$6667$13P8LC)
        (exact->inexact . g$11885$13P8LC)
        (exit . g$11884$13P8LC)
        (command-line . g$11445$13P8LC)
        (string-fill! . g$11883$13P8LC)
        (string-set! . g$11882$13P8LC)
        (set-cdr! . g$11881$13P8LC)
        (set-car! . g$11880$13P8LC)
        (remove . g$6250$13P8LC)
        (remv . g$6251$13P8LC)
        (remp . g$6236$13P8LC)
        (remq . g$6252$13P8LC)
        (partition . g$6235$13P8LC)
        (memv . g$11879$13P8LC)
        (memq . g$11878$13P8LC)
        (memp . g$6242$13P8LC)
        (member . g$6241$13P8LC)
        (exists . g$6246$13P8LC)
        (for-all . g$6245$13P8LC)
        (fold-right . g$6249$13P8LC)
        (fold-left . g$6248$13P8LC)
        (find . g$6234$13P8LC)
        (filter . g$6237$13P8LC)
        (cons* . g$6247$13P8LC)
        (assv . g$6238$13P8LC)
        (assq . g$11877$13P8LC)
        (assp . g$6240$13P8LC)
        (assoc . g$6239$13P8LC)
        (with-exception-handler . g$11876$13P8LC)
        (raise-continuable . g$11875$13P8LC)
        (raise . g$11874$13P8LC)
        (eval . g$8494$13P8LC)
        (environment . g$8490$13P8LC)
        (make-enumeration . g$7114$13P8LC)
        (enum-set=? . g$7121$13P8LC)
        (enum-set-universe . g$7115$13P8LC)
        (enum-set-union . g$7122$13P8LC)
        (enum-set-subset? . g$7120$13P8LC)
        (enum-set-projection . g$7126$13P8LC)
        (enum-set-member? . g$7119$13P8LC)
        (enum-set-intersection . g$7123$13P8LC)
        (enum-set-indexer . g$7116$13P8LC)
        (enum-set-difference . g$7124$13P8LC)
        (enum-set-constructor . g$7117$13P8LC)
        (enum-set-complement . g$7125$13P8LC)
        (enum-set->list . g$7118$13P8LC)
        (who-condition? . g$6574$13P8LC)
        (warning? . g$6485$13P8LC)
        (violation? . g$6527$13P8LC)
        (undefined-violation? . g$6651$13P8LC)
        (syntax-violation? . g$6635$13P8LC)
        (syntax-violation-subform . g$6637$13P8LC)
        (syntax-violation-form . g$6636$13P8LC)
        (syntax-violation . g$8511$13P8LC)
        (simple-conditions . g$11873$13P8LC)
        (serious-condition? . g$6499$13P8LC)
        (non-continuable-violation? . g$6589$13P8LC)
        (message-condition? . g$6470$13P8LC)
        (make-who-condition . g$6572$13P8LC)
        (make-warning . g$6484$13P8LC)
        (make-violation . g$6526$13P8LC)
        (make-undefined-violation . g$6650$13P8LC)
        (make-syntax-violation . g$6632$13P8LC)
        (make-serious-condition . g$6498$13P8LC)
        (make-non-continuable-violation . g$6588$13P8LC)
        (make-message-condition . g$6468$13P8LC)
        (make-lexical-violation . g$6616$13P8LC)
        (make-irritants-condition . g$6555$13P8LC)
        (make-implementation-restriction-violation . g$6602$13P8LC)
        (make-error . g$6512$13P8LC)
        (make-assertion-violation . g$6540$13P8LC)
        (lexical-violation? . g$6617$13P8LC)
        (irritants-condition? . g$6557$13P8LC)
        (implementation-restriction-violation? . g$6603$13P8LC)
        (error? . g$6513$13P8LC)
        (condition-who . g$6575$13P8LC)
        (condition-predicate . g$11872$13P8LC)
        (condition-message . g$6471$13P8LC)
        (condition-irritants . g$6558$13P8LC)
        (condition-accessor . g$11871$13P8LC)
        (condition . g$11870$13P8LC)
        (assertion-violation? . g$6541$13P8LC)
        (condition? . g$11869$13P8LC)
        (utf32->string . g$11868$13P8LC)
        (utf16->string . g$11867$13P8LC)
        (utf8->string . g$11866$13P8LC)
        (uint-list->bytevector . g$11865$13P8LC)
        (u8-list->bytevector . g$11864$13P8LC)
        (string->utf8 . g$11863$13P8LC)
        (string->utf32 . g$11862$13P8LC)
        (string->utf16 . g$11861$13P8LC)
        (sint-list->bytevector . g$11860$13P8LC)
        (native-endianness . g$6326$13P8LC)
        (bytevector? . g$11859$13P8LC)
        (bytevector=? . g$11858$13P8LC)
        (bytevector-uint-set! . g$11857$13P8LC)
        (bytevector-uint-ref . g$11856$13P8LC)
        (bytevector-u8-set! . g$11855$13P8LC)
        (bytevector-u8-ref . g$11854$13P8LC)
        (bytevector-u64-set! . g$6347$13P8LC)
        (bytevector-u64-ref . g$6343$13P8LC)
        (bytevector-u64-native-set! . g$6349$13P8LC)
        (bytevector-u64-native-ref . g$6345$13P8LC)
        (bytevector-u32-set! . g$6339$13P8LC)
        (bytevector-u32-ref . g$6335$13P8LC)
        (bytevector-u32-native-set! . g$6341$13P8LC)
        (bytevector-u32-native-ref . g$6337$13P8LC)
        (bytevector-u16-set! . g$6331$13P8LC)
        (bytevector-u16-ref . g$6327$13P8LC)
        (bytevector-u16-native-set! . g$6333$13P8LC)
        (bytevector-u16-native-ref . g$6329$13P8LC)
        (bytevector-sint-set! . g$11853$13P8LC)
        (bytevector-sint-ref . g$11852$13P8LC)
        (bytevector-s8-set! . g$11851$13P8LC)
        (bytevector-s8-ref . g$11850$13P8LC)
        (bytevector-s64-set! . g$6348$13P8LC)
        (bytevector-s64-ref . g$6344$13P8LC)
        (bytevector-s64-native-set! . g$6350$13P8LC)
        (bytevector-s64-native-ref . g$6346$13P8LC)
        (bytevector-s32-set! . g$6340$13P8LC)
        (bytevector-s32-ref . g$6336$13P8LC)
        (bytevector-s32-native-set! . g$6342$13P8LC)
        (bytevector-s32-native-ref . g$6338$13P8LC)
        (bytevector-s16-set! . g$6332$13P8LC)
        (bytevector-s16-ref . g$6328$13P8LC)
        (bytevector-s16-native-set! . g$6334$13P8LC)
        (bytevector-s16-native-ref . g$6330$13P8LC)
        (bytevector-length . g$11849$13P8LC)
        (bytevector-ieee-single-set! . g$11848$13P8LC)
        (bytevector-ieee-single-ref . g$11847$13P8LC)
        (bytevector-ieee-single-native-set! . g$6353$13P8LC)
        (bytevector-ieee-single-native-ref . g$6351$13P8LC)
        (bytevector-ieee-double-set! . g$11846$13P8LC)
        (bytevector-ieee-double-ref . g$11845$13P8LC)
        (bytevector-ieee-double-native-set! . g$6354$13P8LC)
        (bytevector-ieee-double-native-ref . g$6352$13P8LC)
        (bytevector-fill! . g$11844$13P8LC)
        (bytevector-copy! . g$11843$13P8LC)
        (bytevector-copy . g$11842$13P8LC)
        (bytevector->uint-list . g$11841$13P8LC)
        (bytevector->u8-list . g$11840$13P8LC)
        (bytevector->sint-list . g$11839$13P8LC)
        (no-nans-violation? . g$6885$13P8LC)
        (no-infinities-violation? . g$6871$13P8LC)
        (make-no-nans-violation . g$6884$13P8LC)
        (make-no-infinities-violation . g$6870$13P8LC)
        (real->flonum . g$11838$13P8LC)
        (flzero? . g$11837$13P8LC)
        (fltruncate . g$11836$13P8LC)
        (fltan . g$11835$13P8LC)
        (flsqrt . g$11834$13P8LC)
        (flsin . g$11833$13P8LC)
        (flround . g$11832$13P8LC)
        (flpositive? . g$11831$13P8LC)
        (flonum? . g$11830$13P8LC)
        (flodd? . g$11829$13P8LC)
        (flnumerator . g$11828$13P8LC)
        (flnegative? . g$11827$13P8LC)
        (flnan? . g$11826$13P8LC)
        (flmod0 . g$11825$13P8LC)
        (flmod . g$11824$13P8LC)
        (flmin . g$11823$13P8LC)
        (flmax . g$11822$13P8LC)
        (fllog . g$11821$13P8LC)
        (flinteger? . g$11820$13P8LC)
        (flinfinite? . g$11819$13P8LC)
        (flfloor . g$11818$13P8LC)
        (flfinite? . g$11817$13P8LC)
        (flexpt . g$11816$13P8LC)
        (flexp . g$11815$13P8LC)
        (fleven? . g$11814$13P8LC)
        (fldiv0-and-mod0 . g$11813$13P8LC)
        (fldiv0 . g$11812$13P8LC)
        (fldiv-and-mod . g$11811$13P8LC)
        (fldiv . g$11810$13P8LC)
        (fldenominator . g$11809$13P8LC)
        (flcos . g$11808$13P8LC)
        (flceiling . g$11807$13P8LC)
        (flatan . g$11806$13P8LC)
        (flasin . g$11805$13P8LC)
        (flacos . g$11804$13P8LC)
        (flabs . g$11803$13P8LC)
        (fl>? . g$11802$13P8LC)
        (fl>=? . g$11801$13P8LC)
        (fl=? . g$11800$13P8LC)
        (fl<? . g$11799$13P8LC)
        (fl<=? . g$11798$13P8LC)
        (fl/ . g$11797$13P8LC)
        (fl- . g$11796$13P8LC)
        (fl+ . g$11795$13P8LC)
        (fl* . g$11794$13P8LC)
        (fixnum->flonum . g$11793$13P8LC)
        (fxzero? . g$11792$13P8LC)
        (fxxor . g$11791$13P8LC)
        (fxrotate-bit-field . g$6816$13P8LC)
        (fxreverse-bit-field . g$11790$13P8LC)
        (fxpositive? . g$11789$13P8LC)
        (fxodd? . g$11788$13P8LC)
        (fxnot . g$11787$13P8LC)
        (fxnegative? . g$11786$13P8LC)
        (fxmod0 . g$11785$13P8LC)
        (fxmod . g$11784$13P8LC)
        (fxmin . g$11783$13P8LC)
        (fxmax . g$11782$13P8LC)
        (fxlength . g$11781$13P8LC)
        (fxior . g$11780$13P8LC)
        (fxif . g$6810$13P8LC)
        (fxfirst-bit-set . g$11779$13P8LC)
        (fxeven? . g$11778$13P8LC)
        (fxdiv0-and-mod0 . g$11777$13P8LC)
        (fxdiv0 . g$11776$13P8LC)
        (fxdiv-and-mod . g$11775$13P8LC)
        (fxdiv . g$11774$13P8LC)
        (fxcopy-bit-field . g$6813$13P8LC)
        (fxcopy-bit . g$6811$13P8LC)
        (fxbit-set? . g$11773$13P8LC)
        (fxbit-field . g$6812$13P8LC)
        (fxbit-count . g$11772$13P8LC)
        (fxarithmetic-shift-right . g$6815$13P8LC)
        (fxarithmetic-shift-left . g$6814$13P8LC)
        (fxarithmetic-shift . g$11771$13P8LC)
        (fxand . g$11770$13P8LC)
        (fx>? . g$11769$13P8LC)
        (fx>=? . g$11768$13P8LC)
        (fx=? . g$11767$13P8LC)
        (fx<? . g$11766$13P8LC)
        (fx<=? . g$11765$13P8LC)
        (fx-/carry . g$11764$13P8LC)
        (fx- . g$11763$13P8LC)
        (fx+/carry . g$11762$13P8LC)
        (fx+ . g$11761$13P8LC)
        (fx*/carry . g$11760$13P8LC)
        (fx* . g$11759$13P8LC)
        (greatest-fixnum . g$11758$13P8LC)
        (least-fixnum . g$11757$13P8LC)
        (fixnum-width . g$11756$13P8LC)
        (fixnum? . g$11755$13P8LC)
        (bitwise-rotate-bit-field . g$6768$13P8LC)
        (bitwise-reverse-bit-field . g$11754$13P8LC)
        (bitwise-length . g$11753$13P8LC)
        (bitwise-if . g$6762$13P8LC)
        (bitwise-first-bit-set . g$11752$13P8LC)
        (bitwise-copy-bit-field . g$6765$13P8LC)
        (bitwise-copy-bit . g$6763$13P8LC)
        (bitwise-bit-set? . g$11751$13P8LC)
        (bitwise-bit-field . g$11750$13P8LC)
        (bitwise-bit-count . g$11749$13P8LC)
        (bitwise-xor . g$11748$13P8LC)
        (bitwise-ior . g$11747$13P8LC)
        (bitwise-and . g$11746$13P8LC)
        (bitwise-not . g$11745$13P8LC)
        (bitwise-arithmetic-shift-right . g$6767$13P8LC)
        (bitwise-arithmetic-shift-left . g$6766$13P8LC)
        (bitwise-arithmetic-shift . g$11744$13P8LC)
        (zero? . g$11743$13P8LC)
        (vector? . g$11742$13P8LC)
        (vector-set! . g$11741$13P8LC)
        (vector-ref . g$11740$13P8LC)
        (vector-map . g$11739$13P8LC)
        (vector-length . g$11738$13P8LC)
        (vector-for-each . g$11737$13P8LC)
        (vector-fill! . g$11736$13P8LC)
        (vector->list . g$11735$13P8LC)
        (vector . g$11734$13P8LC)
        (values . g$11733$13P8LC)
        (truncate . g$11732$13P8LC)
        (tan . g$11731$13P8LC)
        (symbol? . g$11730$13P8LC)
        (symbol=? . g$11729$13P8LC)
        (symbol->string . g$11728$13P8LC)
        (substring . g$11727$13P8LC)
        (string? . g$11726$13P8LC)
        (string>? . g$11725$13P8LC)
        (string>=? . g$11724$13P8LC)
        (string=? . g$11723$13P8LC)
        (string<? . g$11722$13P8LC)
        (string<=? . g$11721$13P8LC)
        (string-ref . g$11720$13P8LC)
        (string-length . g$11719$13P8LC)
        (string-for-each . g$11718$13P8LC)
        (string-copy . g$11717$13P8LC)
        (string-append . g$11716$13P8LC)
        (string->symbol . g$11715$13P8LC)
        (string->number . g$11714$13P8LC)
        (string->list . g$11713$13P8LC)
        (string . g$11712$13P8LC)
        (sqrt . g$11711$13P8LC)
        (sin . g$11710$13P8LC)
        (round . g$11709$13P8LC)
        (reverse . g$11708$13P8LC)
        (real? . g$11707$13P8LC)
        (real-valued? . g$11706$13P8LC)
        (real-part . g$11705$13P8LC)
        (rationalize . g$5786$13P8LC)
        (rational? . g$11704$13P8LC)
        (rational-valued? . g$11703$13P8LC)
        (procedure? . g$11702$13P8LC)
        (positive? . g$11701$13P8LC)
        (pair? . g$11700$13P8LC)
        (odd? . g$11699$13P8LC)
        (numerator . g$11698$13P8LC)
        (number? . g$11697$13P8LC)
        (number->string . g$11696$13P8LC)
        (null? . g$11695$13P8LC)
        (not . g$11694$13P8LC)
        (negative? . g$11693$13P8LC)
        (nan? . g$11692$13P8LC)
        (min . g$11691$13P8LC)
        (max . g$11690$13P8LC)
        (map . g$11689$13P8LC)
        (make-vector . g$11688$13P8LC)
        (make-string . g$11687$13P8LC)
        (make-rectangular . g$11686$13P8LC)
        (make-polar . g$11685$13P8LC)
        (magnitude . g$11684$13P8LC)
        (log . g$11683$13P8LC)
        (list? . g$11682$13P8LC)
        (list-tail . g$11681$13P8LC)
        (list-ref . g$11680$13P8LC)
        (list->vector . g$11679$13P8LC)
        (list->string . g$11678$13P8LC)
        (list . g$11677$13P8LC)
        (length . g$11676$13P8LC)
        (lcm . g$11675$13P8LC)
        (integer? . g$11674$13P8LC)
        (integer-valued? . g$11673$13P8LC)
        (integer->char . g$11672$13P8LC)
        (infinite? . g$11671$13P8LC)
        (inexact? . g$11670$13P8LC)
        (inexact . g$11669$13P8LC)
        (imag-part . g$11668$13P8LC)
        (gcd . g$11667$13P8LC)
        (for-each . g$11666$13P8LC)
        (floor . g$11665$13P8LC)
        (finite? . g$11664$13P8LC)
        (expt . g$11663$13P8LC)
        (exp . g$11662$13P8LC)
        (exact? . g$11661$13P8LC)
        (exact-integer-sqrt . g$11660$13P8LC)
        (exact . g$11659$13P8LC)
        (even? . g$11658$13P8LC)
        (error . g$11657$13P8LC)
        (eqv? . g$11656$13P8LC)
        (equal? . g$11655$13P8LC)
        (eq? . g$11654$13P8LC)
        (dynamic-wind . g$11653$13P8LC)
        (div0-and-mod0 . g$11652$13P8LC)
        (mod0 . g$11651$13P8LC)
        (div0 . g$11650$13P8LC)
        (div-and-mod . g$11649$13P8LC)
        (mod . g$11648$13P8LC)
        (div . g$11647$13P8LC)
        (denominator . g$11646$13P8LC)
        (cos . g$11645$13P8LC)
        (cons . g$11644$13P8LC)
        (complex? . g$11643$13P8LC)
        (char? . g$11642$13P8LC)
        (char>? . g$11641$13P8LC)
        (char>=? . g$11640$13P8LC)
        (char=? . g$11639$13P8LC)
        (char<? . g$11638$13P8LC)
        (char<=? . g$11637$13P8LC)
        (char->integer . g$11636$13P8LC)
        (ceiling . g$11635$13P8LC)
        (call-with-values . g$11634$13P8LC)
        (call/cc . g$11633$13P8LC)
        (call-with-current-continuation . g$11632$13P8LC)
        (cddddr . g$5785$13P8LC)
        (cdddar . g$5784$13P8LC)
        (cddadr . g$5783$13P8LC)
        (cddaar . g$5782$13P8LC)
        (cdaddr . g$5781$13P8LC)
        (cdadar . g$5780$13P8LC)
        (cdaadr . g$5779$13P8LC)
        (cdaaar . g$5778$13P8LC)
        (cadddr . g$5777$13P8LC)
        (caddar . g$5776$13P8LC)
        (cadadr . g$5775$13P8LC)
        (cadaar . g$5774$13P8LC)
        (caaddr . g$5773$13P8LC)
        (caadar . g$5772$13P8LC)
        (caaadr . g$5771$13P8LC)
        (caaaar . g$5770$13P8LC)
        (cdddr . g$5769$13P8LC)
        (cddar . g$5768$13P8LC)
        (cdadr . g$5767$13P8LC)
        (cdaar . g$5766$13P8LC)
        (caddr . g$5765$13P8LC)
        (cadar . g$5764$13P8LC)
        (caadr . g$5763$13P8LC)
        (caaar . g$5762$13P8LC)
        (cddr . g$5761$13P8LC)
        (cdar . g$5760$13P8LC)
        (cadr . g$5759$13P8LC)
        (caar . g$5758$13P8LC)
        (cdr . g$11631$13P8LC)
        (car . g$11630$13P8LC)
        (boolean? . g$11629$13P8LC)
        (boolean=? . g$11628$13P8LC)
        (atan . g$11627$13P8LC)
        (assertion-violation . g$11626$13P8LC)
        (asin . g$11625$13P8LC)
        (apply . g$11624$13P8LC)
        (append . g$11623$13P8LC)
        (angle . g$11622$13P8LC)
        (acos . g$11621$13P8LC)
        (abs . g$11620$13P8LC)
        (/ . g$11619$13P8LC)
        (* . g$11618$13P8LC)
        (- . g$11617$13P8LC)
        (+ . g$11616$13P8LC)
        (>= . g$11615$13P8LC)
        (> . g$11614$13P8LC)
        (= . g$11613$13P8LC)
        (<= . g$11612$13P8LC)
        (< . g$11611$13P8LC)
        (make-promise . g$6666$13P8LC)
        (load/args . g$11447$13P8LC)
        (printf . g$7198$13P8LC)
        (fprintf . g$7199$13P8LC)
        (format . g$7200$13P8LC)
        (get-arity . g$11606$13P8LC)
        (gc-collect . g$11605$13P8LC)
        (clr-type? . g$11604$13P8LC)
        (get-clr-type . g$11603$13P8LC)
        (vector-append . g$11601$13P8LC)
        (vector-filter . g$11600$13P8LC)
        (vector-reverse! . g$11599$13P8LC)
        (vector-contains? . g$11598$13P8LC)
        (vector-index-of . g$11597$13P8LC)
        (vector-copy . g$11596$13P8LC)
        (vector-binary-search . g$11595$13P8LC)
        (get-output-string . g$11594$13P8LC)
        (open-output-string . g$11593$13P8LC)
        (open-input-string . g$11592$13P8LC)
        (string-format . g$11591$13P8LC)
        (trace-printer . g$11444$13P8LC)
        (make-traced-procedure . g$11590$13P8LC)
        (make-traced-macro . g$7220$13P8LC)
        (pmap . g$11589$13P8LC)
        (time-it . g$11588$13P8LC)
        (make-parameter . g$7225$13P8LC)
        (library-locator . g$11587$13P8LC)
        (get-library-paths . g$11586$13P8LC)
        (environment-symbols . g$8488$13P8LC)
        (interaction-environment-symbols . g$8487$13P8LC)
        (library-path . g$7656$13P8LC)
        (library-extensions . g$7657$13P8LC)
        (installed-libraries . g$7677$13P8LC)
        (expand . g$8493$13P8LC)
        (&no-nans . g$11585$13P8LC)
        (&no-infinities . g$11584$13P8LC)
        (&i/o-encoding . g$11583$13P8LC)
        (&i/o-decoding . g$11582$13P8LC)
        (&i/o-port . g$11581$13P8LC)
        (&i/o-file-does-not-exist . g$11580$13P8LC)
        (&i/o-file-already-exists . g$11579$13P8LC)
        (&i/o-file-is-read-only . g$11578$13P8LC)
        (&i/o-file-protection . g$11577$13P8LC)
        (&i/o-filename . g$11576$13P8LC)
        (&i/o-invalid-position . g$11575$13P8LC)
        (&i/o-write . g$11574$13P8LC)
        (&i/o-read . g$11573$13P8LC)
        (&i/o . g$11572$13P8LC)
        (&non-continuable . g$11571$13P8LC)
        (&undefined . g$11570$13P8LC)
        (&syntax . g$11569$13P8LC)
        (&lexical . g$11568$13P8LC)
        (&implementation-restriction . g$11567$13P8LC)
        (&who . g$11565$13P8LC)
        (&irritants . g$11564$13P8LC)
        (&assertion . g$11563$13P8LC)
        (&violation . g$11562$13P8LC)
        (&error . g$11561$13P8LC)
        (&serious . g$11560$13P8LC)
        (&warning . g$11559$13P8LC)
        (&message . g$11558$13P8LC)
        (&condition . g$11557$13P8LC)
        (define-condition-type . g$11556$13P8LC)
        (define-enumeration . g$11555$13P8LC)
        (define-record-type . g$11554$13P8LC)
        (parent-rtd . g$11553$13P8LC)
        (nongenerative . g$11552$13P8LC)
        (opaque . g$11551$13P8LC)
        (sealed . g$11550$13P8LC)
        (protocol . g$11549$13P8LC)
        (parent . g$11548$13P8LC)
        (immutable . g$11547$13P8LC)
        (mutable . g$11546$13P8LC)
        (fields . g$11545$13P8LC)
        (error-handling-mode . g$11544$13P8LC)
        (file-options . g$11543$13P8LC)
        (buffer-mode . g$11542$13P8LC)
        (eol-style . g$11541$13P8LC)
        (guard . g$11540$13P8LC)
        (trace-letrec-syntax . g$11539$13P8LC)
        (trace-let-syntax . g$11538$13P8LC)
        (trace-define-syntax . g$11537$13P8LC)
        (trace-define . g$11536$13P8LC)
        (trace-lambda . g$11535$13P8LC)
        (unsyntax-splicing . g$11534$13P8LC)
        (unsyntax . g$11533$13P8LC)
        (unquote-splicing . g$11532$13P8LC)
        (unquote . g$11531$13P8LC)
        (_ . g$11530$13P8LC)
        (else . g$11529$13P8LC)
        (=> . g$11528$13P8LC)
        (... . g$11527$13P8LC)
        (assert . g$11526$13P8LC)
        (endianness . g$11525$13P8LC)
        (delay . g$11524$13P8LC)
        (time . g$11523$13P8LC)
        (or . g$11522$13P8LC)
        (and . g$11521$13P8LC)
        (do . g$11520$13P8LC)
        (cond . g$11519$13P8LC)
        (let* . g$11518$13P8LC)
        (let . g$11517$13P8LC)
        (identifier-syntax . g$11516$13P8LC)
        (with-syntax . g$11515$13P8LC)
        (quasisyntax . g$11514$13P8LC)
        (quasiquote . g$11513$13P8LC)
        (syntax-rules . g$11512$13P8LC)
        (include-into . g$11511$13P8LC)
        (include . g$11510$13P8LC)
        (let-values . g$11508$13P8LC)
        (let*-values . g$11507$13P8LC)
        (record-constructor-descriptor . g$11506$13P8LC)
        (record-type-descriptor . g$11505$13P8LC)
        (fluid-let-syntax . g$11504$13P8LC)
        (case . g$11503$13P8LC)
        (parameterize . g$11502$13P8LC)
        (unless . g$11501$13P8LC)
        (when . g$11500$13P8LC)
        (if . g$11499$13P8LC)
        (letrec* . g$11498$13P8LC)
        (letrec . g$11497$13P8LC)
        (case-lambda . g$11495$13P8LC)
        (lambda . g$11494$13P8LC)
        (syntax . g$11493$13P8LC)
        (syntax-case . g$11492$13P8LC)
        (quote . g$11491$13P8LC)
        (letrec-syntax . g$11489$13P8LC)
        (let-syntax . g$11488$13P8LC)
        (set! . g$11487$13P8LC)
        (import . g$11486$13P8LC)
        (library . g$11485$13P8LC)
        (begin . g$11484$13P8LC)
        (module . g$11483$13P8LC)
        (define-syntax . g$11482$13P8LC)
        (define . g$11481$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12125$13P8LC
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11586$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6891$13P8LC
      'g$12126$13P8LC
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12066$13P8LC)
        (annotation-source . g$12065$13P8LC)
        (annotation-expression . g$12064$13P8LC)
        (annotation? . g$12063$13P8LC)
        (read-annotated . g$12062$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6891$13P8LC
      'g$12127$13P8LC
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12032$13P8LC)
        (serialize-library . g$12031$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6891$13P8LC
      'g$12128$13P8LC
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8118$13P8LC)
        (variable-transformer? . g$8117$13P8LC)
        (eqv-hash . g$11609$13P8LC)
        (eq-hash . g$11608$13P8LC)
        (reverse! . g$11607$13P8LC)
        (format . g$7200$13P8LC)
        (get-command-line . g$11602$13P8LC)
        (make-traced-procedure . g$11590$13P8LC)
        (assertion-error . g$8507$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6891$13P8LC
      'g$12129$13P8LC
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11610$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12130$13P8LC
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12050$13P8LC)
        (clr-field-set!-internal . g$12049$13P8LC)
        (clr-field-get-internal . g$12048$13P8LC)
        (clr-cast-internal . g$12047$13P8LC)
        (clr-call-internal . g$12046$13P8LC)
        (clr-new-internal . g$12045$13P8LC)
        (clr-new-array-internal . g$12044$13P8LC)
        (clr-is-internal . g$12043$13P8LC)
        (clr-reference-internal . g$12042$13P8LC)
        (clr-using-internal . g$12041$13P8LC)
        (clr-clear-usings-internal . g$12040$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12131$13P8LC
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11532$13P8LC)
        (unquote . g$11531$13P8LC)
        (else . g$11529$13P8LC)
        (=> . g$11528$13P8LC)
        (delay . g$11524$13P8LC)
        (or . g$11522$13P8LC)
        (and . g$11521$13P8LC)
        (do . g$11520$13P8LC)
        (cond . g$11519$13P8LC)
        (let* . g$11518$13P8LC)
        (let . g$11517$13P8LC)
        (quasiquote . g$11513$13P8LC)
        (syntax-rules . g$11512$13P8LC)
        (case . g$11503$13P8LC)
        (if . g$11499$13P8LC)
        (letrec . g$11497$13P8LC)
        (lambda . g$11494$13P8LC)
        (quote . g$11491$13P8LC)
        (letrec-syntax . g$11489$13P8LC)
        (let-syntax . g$11488$13P8LC)
        (set! . g$11487$13P8LC)
        (begin . g$11484$13P8LC)
        (define-syntax . g$11482$13P8LC)
        (define . g$11481$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6891$13P8LC
      'g$12132$13P8LC
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8517$13P8LC)
        (char-ready? . g$12030$13P8LC)
        (string-ci>? . g$12021$13P8LC)
        (string-ci>=? . g$12020$13P8LC)
        (string-ci=? . g$12019$13P8LC)
        (string-ci<? . g$12018$13P8LC)
        (string-ci<=? . g$12017$13P8LC)
        (char-whitespace? . g$12016$13P8LC)
        (char-upper-case? . g$12015$13P8LC)
        (char-numeric? . g$12013$13P8LC)
        (char-lower-case? . g$12012$13P8LC)
        (char-upcase . g$12010$13P8LC)
        (char-downcase . g$12007$13P8LC)
        (char-ci>? . g$12006$13P8LC)
        (char-ci>=? . g$12005$13P8LC)
        (char-ci=? . g$12004$13P8LC)
        (char-ci<? . g$12003$13P8LC)
        (char-ci<=? . g$12002$13P8LC)
        (char-alphabetic? . g$12001$13P8LC)
        (call-with-output-file . g$11969$13P8LC)
        (call-with-input-file . g$11968$13P8LC)
        (write-char . g$11967$13P8LC)
        (write . g$11966$13P8LC)
        (with-output-to-file . g$11965$13P8LC)
        (with-input-from-file . g$11964$13P8LC)
        (read-char . g$11963$13P8LC)
        (read . g$11962$13P8LC)
        (peek-char . g$11961$13P8LC)
        (open-output-file . g$11960$13P8LC)
        (open-input-file . g$11959$13P8LC)
        (newline . g$11958$13P8LC)
        (display . g$11957$13P8LC)
        (close-output-port . g$11956$13P8LC)
        (close-input-port . g$11955$13P8LC)
        (eof-object? . g$11954$13P8LC)
        (eof-object . g$11953$13P8LC)
        (current-error-port . g$11952$13P8LC)
        (current-output-port . g$11951$13P8LC)
        (current-input-port . g$11950$13P8LC)
        (output-port? . g$11949$13P8LC)
        (input-port? . g$11948$13P8LC)
        (scheme-report-environment . g$8492$13P8LC)
        (quotient . g$6663$13P8LC)
        (null-environment . g$8491$13P8LC)
        (remainder . g$6664$13P8LC)
        (modulo . g$6665$13P8LC)
        (inexact->exact . g$11886$13P8LC)
        (force . g$6667$13P8LC)
        (exact->inexact . g$11885$13P8LC)
        (string-fill! . g$11883$13P8LC)
        (string-set! . g$11882$13P8LC)
        (set-cdr! . g$11881$13P8LC)
        (set-car! . g$11880$13P8LC)
        (memv . g$11879$13P8LC)
        (memq . g$11878$13P8LC)
        (member . g$6241$13P8LC)
        (assv . g$6238$13P8LC)
        (assq . g$11877$13P8LC)
        (assoc . g$6239$13P8LC)
        (eval . g$8494$13P8LC)
        (zero? . g$11743$13P8LC)
        (vector? . g$11742$13P8LC)
        (vector-set! . g$11741$13P8LC)
        (vector-ref . g$11740$13P8LC)
        (vector-length . g$11738$13P8LC)
        (vector-fill! . g$11736$13P8LC)
        (vector->list . g$11735$13P8LC)
        (vector . g$11734$13P8LC)
        (values . g$11733$13P8LC)
        (truncate . g$11732$13P8LC)
        (tan . g$11731$13P8LC)
        (symbol? . g$11730$13P8LC)
        (symbol->string . g$11728$13P8LC)
        (substring . g$11727$13P8LC)
        (string? . g$11726$13P8LC)
        (string>? . g$11725$13P8LC)
        (string>=? . g$11724$13P8LC)
        (string=? . g$11723$13P8LC)
        (string<? . g$11722$13P8LC)
        (string<=? . g$11721$13P8LC)
        (string-ref . g$11720$13P8LC)
        (string-length . g$11719$13P8LC)
        (string-copy . g$11717$13P8LC)
        (string-append . g$11716$13P8LC)
        (string->symbol . g$11715$13P8LC)
        (string->number . g$11714$13P8LC)
        (string->list . g$11713$13P8LC)
        (string . g$11712$13P8LC)
        (sqrt . g$11711$13P8LC)
        (sin . g$11710$13P8LC)
        (round . g$11709$13P8LC)
        (reverse . g$11708$13P8LC)
        (real? . g$11707$13P8LC)
        (real-part . g$11705$13P8LC)
        (rationalize . g$5786$13P8LC)
        (rational? . g$11704$13P8LC)
        (procedure? . g$11702$13P8LC)
        (positive? . g$11701$13P8LC)
        (pair? . g$11700$13P8LC)
        (odd? . g$11699$13P8LC)
        (numerator . g$11698$13P8LC)
        (number? . g$11697$13P8LC)
        (number->string . g$11696$13P8LC)
        (null? . g$11695$13P8LC)
        (not . g$11694$13P8LC)
        (negative? . g$11693$13P8LC)
        (min . g$11691$13P8LC)
        (max . g$11690$13P8LC)
        (map . g$11689$13P8LC)
        (make-vector . g$11688$13P8LC)
        (make-string . g$11687$13P8LC)
        (make-rectangular . g$11686$13P8LC)
        (make-polar . g$11685$13P8LC)
        (magnitude . g$11684$13P8LC)
        (log . g$11683$13P8LC)
        (list? . g$11682$13P8LC)
        (list-tail . g$11681$13P8LC)
        (list-ref . g$11680$13P8LC)
        (list->vector . g$11679$13P8LC)
        (list->string . g$11678$13P8LC)
        (list . g$11677$13P8LC)
        (length . g$11676$13P8LC)
        (lcm . g$11675$13P8LC)
        (integer? . g$11674$13P8LC)
        (integer->char . g$11672$13P8LC)
        (inexact? . g$11670$13P8LC)
        (imag-part . g$11668$13P8LC)
        (gcd . g$11667$13P8LC)
        (for-each . g$11666$13P8LC)
        (floor . g$11665$13P8LC)
        (expt . g$11663$13P8LC)
        (exp . g$11662$13P8LC)
        (exact? . g$11661$13P8LC)
        (even? . g$11658$13P8LC)
        (eqv? . g$11656$13P8LC)
        (equal? . g$11655$13P8LC)
        (eq? . g$11654$13P8LC)
        (dynamic-wind . g$11653$13P8LC)
        (denominator . g$11646$13P8LC)
        (cos . g$11645$13P8LC)
        (cons . g$11644$13P8LC)
        (complex? . g$11643$13P8LC)
        (char? . g$11642$13P8LC)
        (char>? . g$11641$13P8LC)
        (char>=? . g$11640$13P8LC)
        (char=? . g$11639$13P8LC)
        (char<? . g$11638$13P8LC)
        (char<=? . g$11637$13P8LC)
        (char->integer . g$11636$13P8LC)
        (ceiling . g$11635$13P8LC)
        (call-with-values . g$11634$13P8LC)
        (call-with-current-continuation . g$11632$13P8LC)
        (cddddr . g$5785$13P8LC)
        (cdddar . g$5784$13P8LC)
        (cddadr . g$5783$13P8LC)
        (cddaar . g$5782$13P8LC)
        (cdaddr . g$5781$13P8LC)
        (cdadar . g$5780$13P8LC)
        (cdaadr . g$5779$13P8LC)
        (cdaaar . g$5778$13P8LC)
        (cadddr . g$5777$13P8LC)
        (caddar . g$5776$13P8LC)
        (cadadr . g$5775$13P8LC)
        (cadaar . g$5774$13P8LC)
        (caaddr . g$5773$13P8LC)
        (caadar . g$5772$13P8LC)
        (caaadr . g$5771$13P8LC)
        (caaaar . g$5770$13P8LC)
        (cdddr . g$5769$13P8LC)
        (cddar . g$5768$13P8LC)
        (cdadr . g$5767$13P8LC)
        (cdaar . g$5766$13P8LC)
        (caddr . g$5765$13P8LC)
        (cadar . g$5764$13P8LC)
        (caadr . g$5763$13P8LC)
        (caaar . g$5762$13P8LC)
        (cddr . g$5761$13P8LC)
        (cdar . g$5760$13P8LC)
        (cadr . g$5759$13P8LC)
        (caar . g$5758$13P8LC)
        (cdr . g$11631$13P8LC)
        (car . g$11630$13P8LC)
        (boolean? . g$11629$13P8LC)
        (atan . g$11627$13P8LC)
        (asin . g$11625$13P8LC)
        (apply . g$11624$13P8LC)
        (append . g$11623$13P8LC)
        (angle . g$11622$13P8LC)
        (acos . g$11621$13P8LC)
        (abs . g$11620$13P8LC)
        (/ . g$11619$13P8LC)
        (* . g$11618$13P8LC)
        (- . g$11617$13P8LC)
        (+ . g$11616$13P8LC)
        (>= . g$11615$13P8LC)
        (> . g$11614$13P8LC)
        (= . g$11613$13P8LC)
        (<= . g$11612$13P8LC)
        (< . g$11611$13P8LC)
        (unquote-splicing . g$11532$13P8LC)
        (unquote . g$11531$13P8LC)
        (else . g$11529$13P8LC)
        (=> . g$11528$13P8LC)
        (... . g$11527$13P8LC)
        (delay . g$11524$13P8LC)
        (or . g$11522$13P8LC)
        (and . g$11521$13P8LC)
        (do . g$11520$13P8LC)
        (cond . g$11519$13P8LC)
        (let* . g$11518$13P8LC)
        (let . g$11517$13P8LC)
        (quasiquote . g$11513$13P8LC)
        (syntax-rules . g$11512$13P8LC)
        (case . g$11503$13P8LC)
        (if . g$11499$13P8LC)
        (letrec . g$11497$13P8LC)
        (lambda . g$11494$13P8LC)
        (quote . g$11491$13P8LC)
        (letrec-syntax . g$11489$13P8LC)
        (let-syntax . g$11488$13P8LC)
        (set! . g$11487$13P8LC)
        (begin . g$11484$13P8LC)
        (define-syntax . g$11482$13P8LC)
        (define . g$11481$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6891$13P8LC
      'g$12133$13P8LC
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12029$13P8LC)
        (string-titlecase . g$12028$13P8LC)
        (string-normalize-nfkd . g$12027$13P8LC)
        (string-normalize-nfkc . g$12026$13P8LC)
        (string-normalize-nfd . g$12025$13P8LC)
        (string-normalize-nfc . g$12024$13P8LC)
        (string-foldcase . g$12023$13P8LC)
        (string-downcase . g$12022$13P8LC)
        (string-ci>? . g$12021$13P8LC)
        (string-ci>=? . g$12020$13P8LC)
        (string-ci=? . g$12019$13P8LC)
        (string-ci<? . g$12018$13P8LC)
        (string-ci<=? . g$12017$13P8LC)
        (char-whitespace? . g$12016$13P8LC)
        (char-upper-case? . g$12015$13P8LC)
        (char-title-case? . g$12014$13P8LC)
        (char-numeric? . g$12013$13P8LC)
        (char-lower-case? . g$12012$13P8LC)
        (char-general-category . g$12011$13P8LC)
        (char-upcase . g$12010$13P8LC)
        (char-titlecase . g$12009$13P8LC)
        (char-foldcase . g$12008$13P8LC)
        (char-downcase . g$12007$13P8LC)
        (char-ci>? . g$12006$13P8LC)
        (char-ci>=? . g$12005$13P8LC)
        (char-ci=? . g$12004$13P8LC)
        (char-ci<? . g$12003$13P8LC)
        (char-ci<=? . g$12002$13P8LC)
        (char-alphabetic? . g$12001$13P8LC)
        (make-variable-transformer . g$8116$13P8LC)
        (identifier? . g$8512$13P8LC)
        (generate-temporaries . g$8501$13P8LC)
        (free-identifier=? . g$8502$13P8LC)
        (syntax->datum . g$8514$13P8LC)
        (datum->syntax . g$8513$13P8LC)
        (bound-identifier=? . g$8503$13P8LC)
        (record-type-descriptor? . g$12000$13P8LC)
        (record-predicate . g$11999$13P8LC)
        (record-mutator . g$11998$13P8LC)
        (record-constructor . g$11997$13P8LC)
        (record-accessor . g$11996$13P8LC)
        (make-record-type-descriptor . g$11995$13P8LC)
        (make-record-constructor-descriptor . g$11994$13P8LC)
        (record? . g$11993$13P8LC)
        (record-type-uid . g$11992$13P8LC)
        (record-type-sealed? . g$11991$13P8LC)
        (record-type-parent . g$11990$13P8LC)
        (record-type-opaque? . g$11989$13P8LC)
        (record-type-name . g$11988$13P8LC)
        (record-type-generative? . g$11987$13P8LC)
        (record-type-field-names . g$11986$13P8LC)
        (record-rtd . g$11985$13P8LC)
        (record-field-mutable? . g$11984$13P8LC)
        (delete-file . g$6170$13P8LC)
        (file-exists? . g$6169$13P8LC)
        (vector-sort! . g$11983$13P8LC)
        (vector-sort . g$11982$13P8LC)
        (list-sort . g$6683$13P8LC)
        (symbol-hash . g$11981$13P8LC)
        (string-ci-hash . g$11980$13P8LC)
        (string-hash . g$11979$13P8LC)
        (equal-hash . g$11978$13P8LC)
        (hashtable-equivalence-function . g$11977$13P8LC)
        (make-hashtable . g$11976$13P8LC)
        (hashtable-hash-function . g$11975$13P8LC)
        (make-eqv-hashtable . g$6137$13P8LC)
        (make-eq-hashtable . g$6136$13P8LC)
        (hashtable? . g$11974$13P8LC)
        (hashtable-update! . g$6143$13P8LC)
        (hashtable-size . g$6138$13P8LC)
        (hashtable-set! . g$6140$13P8LC)
        (hashtable-ref . g$6139$13P8LC)
        (hashtable-mutable? . g$11973$13P8LC)
        (hashtable-keys . g$11972$13P8LC)
        (hashtable-entries . g$11971$13P8LC)
        (hashtable-delete! . g$6141$13P8LC)
        (hashtable-copy . g$11970$13P8LC)
        (hashtable-contains? . g$6142$13P8LC)
        (hashtable-clear! . g$6144$13P8LC)
        (call-with-output-file . g$11969$13P8LC)
        (call-with-input-file . g$11968$13P8LC)
        (write-char . g$11967$13P8LC)
        (write . g$11966$13P8LC)
        (with-output-to-file . g$11965$13P8LC)
        (with-input-from-file . g$11964$13P8LC)
        (read-char . g$11963$13P8LC)
        (read . g$11962$13P8LC)
        (peek-char . g$11961$13P8LC)
        (open-output-file . g$11960$13P8LC)
        (open-input-file . g$11959$13P8LC)
        (newline . g$11958$13P8LC)
        (display . g$11957$13P8LC)
        (close-output-port . g$11956$13P8LC)
        (close-input-port . g$11955$13P8LC)
        (eof-object? . g$11954$13P8LC)
        (eof-object . g$11953$13P8LC)
        (current-error-port . g$11952$13P8LC)
        (current-output-port . g$11951$13P8LC)
        (current-input-port . g$11950$13P8LC)
        (output-port? . g$11949$13P8LC)
        (input-port? . g$11948$13P8LC)
        (utf-8-codec . g$11947$13P8LC)
        (utf-16-codec . g$11946$13P8LC)
        (transcoder-error-handling-mode . g$11945$13P8LC)
        (transcoder-eol-style . g$11944$13P8LC)
        (transcoder-codec . g$11943$13P8LC)
        (transcoded-port . g$11942$13P8LC)
        (textual-port? . g$11941$13P8LC)
        (string->bytevector . g$11940$13P8LC)
        (standard-output-port . g$11939$13P8LC)
        (standard-input-port . g$11938$13P8LC)
        (standard-error-port . g$11937$13P8LC)
        (set-port-position! . g$11936$13P8LC)
        (put-u8 . g$11935$13P8LC)
        (put-string . g$11934$13P8LC)
        (put-datum . g$11933$13P8LC)
        (put-char . g$11932$13P8LC)
        (put-bytevector . g$11931$13P8LC)
        (port? . g$7071$13P8LC)
        (port-transcoder . g$11930$13P8LC)
        (port-position . g$11929$13P8LC)
        (port-has-set-port-position!? . g$11928$13P8LC)
        (port-has-port-position? . g$11927$13P8LC)
        (port-eof? . g$11926$13P8LC)
        (output-port-buffer-mode . g$11925$13P8LC)
        (open-string-output-port . g$7070$13P8LC)
        (open-string-input-port . g$11924$13P8LC)
        (open-file-output-port . g$11923$13P8LC)
        (open-file-input/output-port . g$11922$13P8LC)
        (open-file-input-port . g$11921$13P8LC)
        (open-bytevector-output-port . g$11920$13P8LC)
        (open-bytevector-input-port . g$11919$13P8LC)
        (native-transcoder . g$11918$13P8LC)
        (native-eol-style . g$11917$13P8LC)
        (make-transcoder . g$11916$13P8LC)
        (latin-1-codec . g$11915$13P8LC)
        (make-i/o-write-error . g$6927$13P8LC)
        (make-i/o-read-error . g$6913$13P8LC)
        (make-i/o-port-error . g$7032$13P8LC)
        (make-i/o-invalid-position-error . g$6942$13P8LC)
        (make-i/o-filename-error . g$6959$13P8LC)
        (make-i/o-file-protection-error . g$6975$13P8LC)
        (make-i/o-file-is-read-only-error . g$6989$13P8LC)
        (make-i/o-file-does-not-exist-error . g$7017$13P8LC)
        (make-i/o-file-already-exists-error . g$7003$13P8LC)
        (make-i/o-error . g$6899$13P8LC)
        (make-i/o-encoding-error . g$7063$13P8LC)
        (make-i/o-decoding-error . g$7048$13P8LC)
        (make-custom-textual-output-port . g$11914$13P8LC)
        (make-custom-textual-input/output-port . g$11913$13P8LC)
        (make-custom-textual-input-port . g$11912$13P8LC)
        (make-custom-binary-output-port . g$11911$13P8LC)
        (make-custom-binary-input/output-port . g$11910$13P8LC)
        (make-custom-binary-input-port . g$11909$13P8LC)
        (make-bytevector . g$11908$13P8LC)
        (lookahead-u8 . g$11907$13P8LC)
        (lookahead-char . g$11906$13P8LC)
        (i/o-write-error? . g$6928$13P8LC)
        (i/o-read-error? . g$6914$13P8LC)
        (i/o-port-error? . g$7034$13P8LC)
        (i/o-invalid-position-error? . g$6944$13P8LC)
        (i/o-error-position . g$6945$13P8LC)
        (i/o-filename-error? . g$6961$13P8LC)
        (i/o-file-protection-error? . g$6976$13P8LC)
        (i/o-file-is-read-only-error? . g$6990$13P8LC)
        (i/o-file-does-not-exist-error? . g$7018$13P8LC)
        (i/o-file-already-exists-error? . g$7004$13P8LC)
        (i/o-error? . g$6900$13P8LC)
        (i/o-error-port . g$7035$13P8LC)
        (i/o-error-filename . g$6962$13P8LC)
        (i/o-encoding-error? . g$7065$13P8LC)
        (i/o-encoding-error-char . g$7066$13P8LC)
        (i/o-decoding-error? . g$7049$13P8LC)
        (get-u8 . g$11905$13P8LC)
        (get-string-n! . g$11904$13P8LC)
        (get-string-n . g$11903$13P8LC)
        (get-string-all . g$11902$13P8LC)
        (get-line . g$11901$13P8LC)
        (get-datum . g$11900$13P8LC)
        (get-char . g$11899$13P8LC)
        (get-bytevector-some . g$11898$13P8LC)
        (get-bytevector-n! . g$11897$13P8LC)
        (get-bytevector-n . g$11896$13P8LC)
        (get-bytevector-all . g$11895$13P8LC)
        (flush-output-port . g$11894$13P8LC)
        (close-port . g$11893$13P8LC)
        (call-with-string-output-port . g$11892$13P8LC)
        (call-with-port . g$11891$13P8LC)
        (call-with-bytevector-output-port . g$11890$13P8LC)
        (bytevector->string . g$11889$13P8LC)
        (buffer-mode? . g$11888$13P8LC)
        (binary-port? . g$11887$13P8LC)
        (exit . g$11884$13P8LC)
        (command-line . g$11445$13P8LC)
        (remove . g$6250$13P8LC)
        (remv . g$6251$13P8LC)
        (remp . g$6236$13P8LC)
        (remq . g$6252$13P8LC)
        (partition . g$6235$13P8LC)
        (memv . g$11879$13P8LC)
        (memq . g$11878$13P8LC)
        (memp . g$6242$13P8LC)
        (member . g$6241$13P8LC)
        (exists . g$6246$13P8LC)
        (for-all . g$6245$13P8LC)
        (fold-right . g$6249$13P8LC)
        (fold-left . g$6248$13P8LC)
        (find . g$6234$13P8LC)
        (filter . g$6237$13P8LC)
        (cons* . g$6247$13P8LC)
        (assv . g$6238$13P8LC)
        (assq . g$11877$13P8LC)
        (assp . g$6240$13P8LC)
        (assoc . g$6239$13P8LC)
        (with-exception-handler . g$11876$13P8LC)
        (raise-continuable . g$11875$13P8LC)
        (raise . g$11874$13P8LC)
        (make-enumeration . g$7114$13P8LC)
        (enum-set=? . g$7121$13P8LC)
        (enum-set-universe . g$7115$13P8LC)
        (enum-set-union . g$7122$13P8LC)
        (enum-set-subset? . g$7120$13P8LC)
        (enum-set-projection . g$7126$13P8LC)
        (enum-set-member? . g$7119$13P8LC)
        (enum-set-intersection . g$7123$13P8LC)
        (enum-set-indexer . g$7116$13P8LC)
        (enum-set-difference . g$7124$13P8LC)
        (enum-set-constructor . g$7117$13P8LC)
        (enum-set-complement . g$7125$13P8LC)
        (enum-set->list . g$7118$13P8LC)
        (who-condition? . g$6574$13P8LC)
        (warning? . g$6485$13P8LC)
        (violation? . g$6527$13P8LC)
        (undefined-violation? . g$6651$13P8LC)
        (syntax-violation? . g$6635$13P8LC)
        (syntax-violation-subform . g$6637$13P8LC)
        (syntax-violation-form . g$6636$13P8LC)
        (syntax-violation . g$8511$13P8LC)
        (simple-conditions . g$11873$13P8LC)
        (serious-condition? . g$6499$13P8LC)
        (non-continuable-violation? . g$6589$13P8LC)
        (message-condition? . g$6470$13P8LC)
        (make-who-condition . g$6572$13P8LC)
        (make-warning . g$6484$13P8LC)
        (make-violation . g$6526$13P8LC)
        (make-undefined-violation . g$6650$13P8LC)
        (make-syntax-violation . g$6632$13P8LC)
        (make-serious-condition . g$6498$13P8LC)
        (make-non-continuable-violation . g$6588$13P8LC)
        (make-message-condition . g$6468$13P8LC)
        (make-lexical-violation . g$6616$13P8LC)
        (make-irritants-condition . g$6555$13P8LC)
        (make-implementation-restriction-violation . g$6602$13P8LC)
        (make-error . g$6512$13P8LC)
        (make-assertion-violation . g$6540$13P8LC)
        (lexical-violation? . g$6617$13P8LC)
        (irritants-condition? . g$6557$13P8LC)
        (implementation-restriction-violation? . g$6603$13P8LC)
        (error? . g$6513$13P8LC)
        (condition-who . g$6575$13P8LC)
        (condition-predicate . g$11872$13P8LC)
        (condition-message . g$6471$13P8LC)
        (condition-irritants . g$6558$13P8LC)
        (condition-accessor . g$11871$13P8LC)
        (condition . g$11870$13P8LC)
        (assertion-violation? . g$6541$13P8LC)
        (condition? . g$11869$13P8LC)
        (utf32->string . g$11868$13P8LC)
        (utf16->string . g$11867$13P8LC)
        (utf8->string . g$11866$13P8LC)
        (uint-list->bytevector . g$11865$13P8LC)
        (u8-list->bytevector . g$11864$13P8LC)
        (string->utf8 . g$11863$13P8LC)
        (string->utf32 . g$11862$13P8LC)
        (string->utf16 . g$11861$13P8LC)
        (sint-list->bytevector . g$11860$13P8LC)
        (native-endianness . g$6326$13P8LC)
        (bytevector? . g$11859$13P8LC)
        (bytevector=? . g$11858$13P8LC)
        (bytevector-uint-set! . g$11857$13P8LC)
        (bytevector-uint-ref . g$11856$13P8LC)
        (bytevector-u8-set! . g$11855$13P8LC)
        (bytevector-u8-ref . g$11854$13P8LC)
        (bytevector-u64-set! . g$6347$13P8LC)
        (bytevector-u64-ref . g$6343$13P8LC)
        (bytevector-u64-native-set! . g$6349$13P8LC)
        (bytevector-u64-native-ref . g$6345$13P8LC)
        (bytevector-u32-set! . g$6339$13P8LC)
        (bytevector-u32-ref . g$6335$13P8LC)
        (bytevector-u32-native-set! . g$6341$13P8LC)
        (bytevector-u32-native-ref . g$6337$13P8LC)
        (bytevector-u16-set! . g$6331$13P8LC)
        (bytevector-u16-ref . g$6327$13P8LC)
        (bytevector-u16-native-set! . g$6333$13P8LC)
        (bytevector-u16-native-ref . g$6329$13P8LC)
        (bytevector-sint-set! . g$11853$13P8LC)
        (bytevector-sint-ref . g$11852$13P8LC)
        (bytevector-s8-set! . g$11851$13P8LC)
        (bytevector-s8-ref . g$11850$13P8LC)
        (bytevector-s64-set! . g$6348$13P8LC)
        (bytevector-s64-ref . g$6344$13P8LC)
        (bytevector-s64-native-set! . g$6350$13P8LC)
        (bytevector-s64-native-ref . g$6346$13P8LC)
        (bytevector-s32-set! . g$6340$13P8LC)
        (bytevector-s32-ref . g$6336$13P8LC)
        (bytevector-s32-native-set! . g$6342$13P8LC)
        (bytevector-s32-native-ref . g$6338$13P8LC)
        (bytevector-s16-set! . g$6332$13P8LC)
        (bytevector-s16-ref . g$6328$13P8LC)
        (bytevector-s16-native-set! . g$6334$13P8LC)
        (bytevector-s16-native-ref . g$6330$13P8LC)
        (bytevector-length . g$11849$13P8LC)
        (bytevector-ieee-single-set! . g$11848$13P8LC)
        (bytevector-ieee-single-ref . g$11847$13P8LC)
        (bytevector-ieee-single-native-set! . g$6353$13P8LC)
        (bytevector-ieee-single-native-ref . g$6351$13P8LC)
        (bytevector-ieee-double-set! . g$11846$13P8LC)
        (bytevector-ieee-double-ref . g$11845$13P8LC)
        (bytevector-ieee-double-native-set! . g$6354$13P8LC)
        (bytevector-ieee-double-native-ref . g$6352$13P8LC)
        (bytevector-fill! . g$11844$13P8LC)
        (bytevector-copy! . g$11843$13P8LC)
        (bytevector-copy . g$11842$13P8LC)
        (bytevector->uint-list . g$11841$13P8LC)
        (bytevector->u8-list . g$11840$13P8LC)
        (bytevector->sint-list . g$11839$13P8LC)
        (no-nans-violation? . g$6885$13P8LC)
        (no-infinities-violation? . g$6871$13P8LC)
        (make-no-nans-violation . g$6884$13P8LC)
        (make-no-infinities-violation . g$6870$13P8LC)
        (real->flonum . g$11838$13P8LC)
        (flzero? . g$11837$13P8LC)
        (fltruncate . g$11836$13P8LC)
        (fltan . g$11835$13P8LC)
        (flsqrt . g$11834$13P8LC)
        (flsin . g$11833$13P8LC)
        (flround . g$11832$13P8LC)
        (flpositive? . g$11831$13P8LC)
        (flonum? . g$11830$13P8LC)
        (flodd? . g$11829$13P8LC)
        (flnumerator . g$11828$13P8LC)
        (flnegative? . g$11827$13P8LC)
        (flnan? . g$11826$13P8LC)
        (flmod0 . g$11825$13P8LC)
        (flmod . g$11824$13P8LC)
        (flmin . g$11823$13P8LC)
        (flmax . g$11822$13P8LC)
        (fllog . g$11821$13P8LC)
        (flinteger? . g$11820$13P8LC)
        (flinfinite? . g$11819$13P8LC)
        (flfloor . g$11818$13P8LC)
        (flfinite? . g$11817$13P8LC)
        (flexpt . g$11816$13P8LC)
        (flexp . g$11815$13P8LC)
        (fleven? . g$11814$13P8LC)
        (fldiv0-and-mod0 . g$11813$13P8LC)
        (fldiv0 . g$11812$13P8LC)
        (fldiv-and-mod . g$11811$13P8LC)
        (fldiv . g$11810$13P8LC)
        (fldenominator . g$11809$13P8LC)
        (flcos . g$11808$13P8LC)
        (flceiling . g$11807$13P8LC)
        (flatan . g$11806$13P8LC)
        (flasin . g$11805$13P8LC)
        (flacos . g$11804$13P8LC)
        (flabs . g$11803$13P8LC)
        (fl>? . g$11802$13P8LC)
        (fl>=? . g$11801$13P8LC)
        (fl=? . g$11800$13P8LC)
        (fl<? . g$11799$13P8LC)
        (fl<=? . g$11798$13P8LC)
        (fl/ . g$11797$13P8LC)
        (fl- . g$11796$13P8LC)
        (fl+ . g$11795$13P8LC)
        (fl* . g$11794$13P8LC)
        (fixnum->flonum . g$11793$13P8LC)
        (fxzero? . g$11792$13P8LC)
        (fxxor . g$11791$13P8LC)
        (fxrotate-bit-field . g$6816$13P8LC)
        (fxreverse-bit-field . g$11790$13P8LC)
        (fxpositive? . g$11789$13P8LC)
        (fxodd? . g$11788$13P8LC)
        (fxnot . g$11787$13P8LC)
        (fxnegative? . g$11786$13P8LC)
        (fxmod0 . g$11785$13P8LC)
        (fxmod . g$11784$13P8LC)
        (fxmin . g$11783$13P8LC)
        (fxmax . g$11782$13P8LC)
        (fxlength . g$11781$13P8LC)
        (fxior . g$11780$13P8LC)
        (fxif . g$6810$13P8LC)
        (fxfirst-bit-set . g$11779$13P8LC)
        (fxeven? . g$11778$13P8LC)
        (fxdiv0-and-mod0 . g$11777$13P8LC)
        (fxdiv0 . g$11776$13P8LC)
        (fxdiv-and-mod . g$11775$13P8LC)
        (fxdiv . g$11774$13P8LC)
        (fxcopy-bit-field . g$6813$13P8LC)
        (fxcopy-bit . g$6811$13P8LC)
        (fxbit-set? . g$11773$13P8LC)
        (fxbit-field . g$6812$13P8LC)
        (fxbit-count . g$11772$13P8LC)
        (fxarithmetic-shift-right . g$6815$13P8LC)
        (fxarithmetic-shift-left . g$6814$13P8LC)
        (fxarithmetic-shift . g$11771$13P8LC)
        (fxand . g$11770$13P8LC)
        (fx>? . g$11769$13P8LC)
        (fx>=? . g$11768$13P8LC)
        (fx=? . g$11767$13P8LC)
        (fx<? . g$11766$13P8LC)
        (fx<=? . g$11765$13P8LC)
        (fx-/carry . g$11764$13P8LC)
        (fx- . g$11763$13P8LC)
        (fx+/carry . g$11762$13P8LC)
        (fx+ . g$11761$13P8LC)
        (fx*/carry . g$11760$13P8LC)
        (fx* . g$11759$13P8LC)
        (greatest-fixnum . g$11758$13P8LC)
        (least-fixnum . g$11757$13P8LC)
        (fixnum-width . g$11756$13P8LC)
        (fixnum? . g$11755$13P8LC)
        (bitwise-rotate-bit-field . g$6768$13P8LC)
        (bitwise-reverse-bit-field . g$11754$13P8LC)
        (bitwise-length . g$11753$13P8LC)
        (bitwise-if . g$6762$13P8LC)
        (bitwise-first-bit-set . g$11752$13P8LC)
        (bitwise-copy-bit-field . g$6765$13P8LC)
        (bitwise-copy-bit . g$6763$13P8LC)
        (bitwise-bit-set? . g$11751$13P8LC)
        (bitwise-bit-field . g$11750$13P8LC)
        (bitwise-bit-count . g$11749$13P8LC)
        (bitwise-xor . g$11748$13P8LC)
        (bitwise-ior . g$11747$13P8LC)
        (bitwise-and . g$11746$13P8LC)
        (bitwise-not . g$11745$13P8LC)
        (bitwise-arithmetic-shift-right . g$6767$13P8LC)
        (bitwise-arithmetic-shift-left . g$6766$13P8LC)
        (bitwise-arithmetic-shift . g$11744$13P8LC)
        (zero? . g$11743$13P8LC)
        (vector? . g$11742$13P8LC)
        (vector-set! . g$11741$13P8LC)
        (vector-ref . g$11740$13P8LC)
        (vector-map . g$11739$13P8LC)
        (vector-length . g$11738$13P8LC)
        (vector-for-each . g$11737$13P8LC)
        (vector-fill! . g$11736$13P8LC)
        (vector->list . g$11735$13P8LC)
        (vector . g$11734$13P8LC)
        (values . g$11733$13P8LC)
        (truncate . g$11732$13P8LC)
        (tan . g$11731$13P8LC)
        (symbol? . g$11730$13P8LC)
        (symbol=? . g$11729$13P8LC)
        (symbol->string . g$11728$13P8LC)
        (substring . g$11727$13P8LC)
        (string? . g$11726$13P8LC)
        (string>? . g$11725$13P8LC)
        (string>=? . g$11724$13P8LC)
        (string=? . g$11723$13P8LC)
        (string<? . g$11722$13P8LC)
        (string<=? . g$11721$13P8LC)
        (string-ref . g$11720$13P8LC)
        (string-length . g$11719$13P8LC)
        (string-for-each . g$11718$13P8LC)
        (string-copy . g$11717$13P8LC)
        (string-append . g$11716$13P8LC)
        (string->symbol . g$11715$13P8LC)
        (string->number . g$11714$13P8LC)
        (string->list . g$11713$13P8LC)
        (string . g$11712$13P8LC)
        (sqrt . g$11711$13P8LC)
        (sin . g$11710$13P8LC)
        (round . g$11709$13P8LC)
        (reverse . g$11708$13P8LC)
        (real? . g$11707$13P8LC)
        (real-valued? . g$11706$13P8LC)
        (real-part . g$11705$13P8LC)
        (rationalize . g$5786$13P8LC)
        (rational? . g$11704$13P8LC)
        (rational-valued? . g$11703$13P8LC)
        (procedure? . g$11702$13P8LC)
        (positive? . g$11701$13P8LC)
        (pair? . g$11700$13P8LC)
        (odd? . g$11699$13P8LC)
        (numerator . g$11698$13P8LC)
        (number? . g$11697$13P8LC)
        (number->string . g$11696$13P8LC)
        (null? . g$11695$13P8LC)
        (not . g$11694$13P8LC)
        (negative? . g$11693$13P8LC)
        (nan? . g$11692$13P8LC)
        (min . g$11691$13P8LC)
        (max . g$11690$13P8LC)
        (map . g$11689$13P8LC)
        (make-vector . g$11688$13P8LC)
        (make-string . g$11687$13P8LC)
        (make-rectangular . g$11686$13P8LC)
        (make-polar . g$11685$13P8LC)
        (magnitude . g$11684$13P8LC)
        (log . g$11683$13P8LC)
        (list? . g$11682$13P8LC)
        (list-tail . g$11681$13P8LC)
        (list-ref . g$11680$13P8LC)
        (list->vector . g$11679$13P8LC)
        (list->string . g$11678$13P8LC)
        (list . g$11677$13P8LC)
        (length . g$11676$13P8LC)
        (lcm . g$11675$13P8LC)
        (integer? . g$11674$13P8LC)
        (integer-valued? . g$11673$13P8LC)
        (integer->char . g$11672$13P8LC)
        (infinite? . g$11671$13P8LC)
        (inexact? . g$11670$13P8LC)
        (inexact . g$11669$13P8LC)
        (imag-part . g$11668$13P8LC)
        (gcd . g$11667$13P8LC)
        (for-each . g$11666$13P8LC)
        (floor . g$11665$13P8LC)
        (finite? . g$11664$13P8LC)
        (expt . g$11663$13P8LC)
        (exp . g$11662$13P8LC)
        (exact? . g$11661$13P8LC)
        (exact-integer-sqrt . g$11660$13P8LC)
        (exact . g$11659$13P8LC)
        (even? . g$11658$13P8LC)
        (error . g$11657$13P8LC)
        (eqv? . g$11656$13P8LC)
        (equal? . g$11655$13P8LC)
        (eq? . g$11654$13P8LC)
        (dynamic-wind . g$11653$13P8LC)
        (div0-and-mod0 . g$11652$13P8LC)
        (mod0 . g$11651$13P8LC)
        (div0 . g$11650$13P8LC)
        (div-and-mod . g$11649$13P8LC)
        (mod . g$11648$13P8LC)
        (div . g$11647$13P8LC)
        (denominator . g$11646$13P8LC)
        (cos . g$11645$13P8LC)
        (cons . g$11644$13P8LC)
        (complex? . g$11643$13P8LC)
        (char? . g$11642$13P8LC)
        (char>? . g$11641$13P8LC)
        (char>=? . g$11640$13P8LC)
        (char=? . g$11639$13P8LC)
        (char<? . g$11638$13P8LC)
        (char<=? . g$11637$13P8LC)
        (char->integer . g$11636$13P8LC)
        (ceiling . g$11635$13P8LC)
        (call-with-values . g$11634$13P8LC)
        (call/cc . g$11633$13P8LC)
        (call-with-current-continuation . g$11632$13P8LC)
        (cddddr . g$5785$13P8LC)
        (cdddar . g$5784$13P8LC)
        (cddadr . g$5783$13P8LC)
        (cddaar . g$5782$13P8LC)
        (cdaddr . g$5781$13P8LC)
        (cdadar . g$5780$13P8LC)
        (cdaadr . g$5779$13P8LC)
        (cdaaar . g$5778$13P8LC)
        (cadddr . g$5777$13P8LC)
        (caddar . g$5776$13P8LC)
        (cadadr . g$5775$13P8LC)
        (cadaar . g$5774$13P8LC)
        (caaddr . g$5773$13P8LC)
        (caadar . g$5772$13P8LC)
        (caaadr . g$5771$13P8LC)
        (caaaar . g$5770$13P8LC)
        (cdddr . g$5769$13P8LC)
        (cddar . g$5768$13P8LC)
        (cdadr . g$5767$13P8LC)
        (cdaar . g$5766$13P8LC)
        (caddr . g$5765$13P8LC)
        (cadar . g$5764$13P8LC)
        (caadr . g$5763$13P8LC)
        (caaar . g$5762$13P8LC)
        (cddr . g$5761$13P8LC)
        (cdar . g$5760$13P8LC)
        (cadr . g$5759$13P8LC)
        (caar . g$5758$13P8LC)
        (cdr . g$11631$13P8LC)
        (car . g$11630$13P8LC)
        (boolean? . g$11629$13P8LC)
        (boolean=? . g$11628$13P8LC)
        (atan . g$11627$13P8LC)
        (assertion-violation . g$11626$13P8LC)
        (asin . g$11625$13P8LC)
        (apply . g$11624$13P8LC)
        (append . g$11623$13P8LC)
        (angle . g$11622$13P8LC)
        (acos . g$11621$13P8LC)
        (abs . g$11620$13P8LC)
        (/ . g$11619$13P8LC)
        (* . g$11618$13P8LC)
        (- . g$11617$13P8LC)
        (+ . g$11616$13P8LC)
        (>= . g$11615$13P8LC)
        (> . g$11614$13P8LC)
        (= . g$11613$13P8LC)
        (<= . g$11612$13P8LC)
        (< . g$11611$13P8LC)
        (&no-nans . g$11585$13P8LC)
        (&no-infinities . g$11584$13P8LC)
        (&i/o-encoding . g$11583$13P8LC)
        (&i/o-decoding . g$11582$13P8LC)
        (&i/o-port . g$11581$13P8LC)
        (&i/o-file-does-not-exist . g$11580$13P8LC)
        (&i/o-file-already-exists . g$11579$13P8LC)
        (&i/o-file-is-read-only . g$11578$13P8LC)
        (&i/o-file-protection . g$11577$13P8LC)
        (&i/o-filename . g$11576$13P8LC)
        (&i/o-invalid-position . g$11575$13P8LC)
        (&i/o-write . g$11574$13P8LC)
        (&i/o-read . g$11573$13P8LC)
        (&i/o . g$11572$13P8LC)
        (&non-continuable . g$11571$13P8LC)
        (&undefined . g$11570$13P8LC)
        (&syntax . g$11569$13P8LC)
        (&lexical . g$11568$13P8LC)
        (&implementation-restriction . g$11567$13P8LC)
        (&who . g$11565$13P8LC)
        (&irritants . g$11564$13P8LC)
        (&assertion . g$11563$13P8LC)
        (&violation . g$11562$13P8LC)
        (&error . g$11561$13P8LC)
        (&serious . g$11560$13P8LC)
        (&warning . g$11559$13P8LC)
        (&message . g$11558$13P8LC)
        (&condition . g$11557$13P8LC)
        (define-condition-type . g$11556$13P8LC)
        (define-enumeration . g$11555$13P8LC)
        (define-record-type . g$11554$13P8LC)
        (parent-rtd . g$11553$13P8LC)
        (nongenerative . g$11552$13P8LC)
        (opaque . g$11551$13P8LC)
        (sealed . g$11550$13P8LC)
        (protocol . g$11549$13P8LC)
        (parent . g$11548$13P8LC)
        (immutable . g$11547$13P8LC)
        (mutable . g$11546$13P8LC)
        (fields . g$11545$13P8LC)
        (error-handling-mode . g$11544$13P8LC)
        (file-options . g$11543$13P8LC)
        (buffer-mode . g$11542$13P8LC)
        (eol-style . g$11541$13P8LC)
        (guard . g$11540$13P8LC)
        (unsyntax-splicing . g$11534$13P8LC)
        (unsyntax . g$11533$13P8LC)
        (unquote-splicing . g$11532$13P8LC)
        (unquote . g$11531$13P8LC)
        (_ . g$11530$13P8LC)
        (else . g$11529$13P8LC)
        (=> . g$11528$13P8LC)
        (... . g$11527$13P8LC)
        (assert . g$11526$13P8LC)
        (endianness . g$11525$13P8LC)
        (or . g$11522$13P8LC)
        (and . g$11521$13P8LC)
        (do . g$11520$13P8LC)
        (cond . g$11519$13P8LC)
        (let* . g$11518$13P8LC)
        (let . g$11517$13P8LC)
        (identifier-syntax . g$11516$13P8LC)
        (with-syntax . g$11515$13P8LC)
        (quasisyntax . g$11514$13P8LC)
        (quasiquote . g$11513$13P8LC)
        (syntax-rules . g$11512$13P8LC)
        (let-values . g$11508$13P8LC)
        (let*-values . g$11507$13P8LC)
        (record-constructor-descriptor . g$11506$13P8LC)
        (record-type-descriptor . g$11505$13P8LC)
        (case . g$11503$13P8LC)
        (unless . g$11501$13P8LC)
        (when . g$11500$13P8LC)
        (if . g$11499$13P8LC)
        (letrec* . g$11498$13P8LC)
        (letrec . g$11497$13P8LC)
        (case-lambda . g$11495$13P8LC)
        (lambda . g$11494$13P8LC)
        (syntax . g$11493$13P8LC)
        (syntax-case . g$11492$13P8LC)
        (quote . g$11491$13P8LC)
        (letrec-syntax . g$11489$13P8LC)
        (let-syntax . g$11488$13P8LC)
        (set! . g$11487$13P8LC)
        (import . g$11486$13P8LC)
        (library . g$11485$13P8LC)
        (begin . g$11484$13P8LC)
        (define-syntax . g$11482$13P8LC)
        (define . g$11481$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12134$13P8LC
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8517$13P8LC)
        (scheme-report-environment . g$8492$13P8LC)
        (quotient . g$6663$13P8LC)
        (null-environment . g$8491$13P8LC)
        (remainder . g$6664$13P8LC)
        (modulo . g$6665$13P8LC)
        (inexact->exact . g$11886$13P8LC)
        (force . g$6667$13P8LC)
        (exact->inexact . g$11885$13P8LC)
        (delay . g$11524$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12135$13P8LC
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11520$13P8LC)
        (unless . g$11501$13P8LC)
        (when . g$11500$13P8LC)
        (case-lambda . g$11495$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12136$13P8LC
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8494$13P8LC) (environment . g$8490$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12137$13P8LC
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$11881$13P8LC) (set-car! . g$11880$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12138$13P8LC
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$11883$13P8LC) (string-set! . g$11882$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12139$13P8LC
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$11884$13P8LC) (command-line . g$11445$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12140$13P8LC
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8116$13P8LC)
        (identifier? . g$8512$13P8LC)
        (generate-temporaries . g$8501$13P8LC)
        (free-identifier=? . g$8502$13P8LC)
        (syntax->datum . g$8514$13P8LC)
        (datum->syntax . g$8513$13P8LC)
        (bound-identifier=? . g$8503$13P8LC)
        (syntax-violation . g$8511$13P8LC)
        (unsyntax-splicing . g$11534$13P8LC)
        (unsyntax . g$11533$13P8LC)
        (_ . g$11530$13P8LC)
        (... . g$11527$13P8LC)
        (with-syntax . g$11515$13P8LC)
        (quasisyntax . g$11514$13P8LC)
        (syntax . g$11493$13P8LC)
        (syntax-case . g$11492$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12141$13P8LC
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6170$13P8LC)
        (file-exists? . g$6169$13P8LC)
        (make-i/o-write-error . g$6927$13P8LC)
        (make-i/o-read-error . g$6913$13P8LC)
        (make-i/o-port-error . g$7032$13P8LC)
        (make-i/o-invalid-position-error . g$6942$13P8LC)
        (make-i/o-filename-error . g$6959$13P8LC)
        (make-i/o-file-protection-error . g$6975$13P8LC)
        (make-i/o-file-is-read-only-error . g$6989$13P8LC)
        (make-i/o-file-does-not-exist-error . g$7017$13P8LC)
        (make-i/o-file-already-exists-error . g$7003$13P8LC)
        (make-i/o-error . g$6899$13P8LC)
        (i/o-write-error? . g$6928$13P8LC)
        (i/o-read-error? . g$6914$13P8LC)
        (i/o-port-error? . g$7034$13P8LC)
        (i/o-invalid-position-error? . g$6944$13P8LC)
        (i/o-error-position . g$6945$13P8LC)
        (i/o-filename-error? . g$6961$13P8LC)
        (i/o-file-protection-error? . g$6976$13P8LC)
        (i/o-file-is-read-only-error? . g$6990$13P8LC)
        (i/o-file-does-not-exist-error? . g$7018$13P8LC)
        (i/o-file-already-exists-error? . g$7004$13P8LC)
        (i/o-error? . g$6900$13P8LC)
        (i/o-error-port . g$7035$13P8LC)
        (i/o-error-filename . g$6962$13P8LC)
        (&i/o-port . g$11581$13P8LC)
        (&i/o-file-does-not-exist . g$11580$13P8LC)
        (&i/o-file-already-exists . g$11579$13P8LC)
        (&i/o-file-is-read-only . g$11578$13P8LC)
        (&i/o-file-protection . g$11577$13P8LC)
        (&i/o-filename . g$11576$13P8LC)
        (&i/o-invalid-position . g$11575$13P8LC)
        (&i/o-write . g$11574$13P8LC)
        (&i/o-read . g$11573$13P8LC)
        (&i/o . g$11572$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12142$13P8LC
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$11983$13P8LC)
        (vector-sort . g$11982$13P8LC)
        (list-sort . g$6683$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12143$13P8LC
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$11743$13P8LC)
        (vector? . g$11742$13P8LC)
        (vector-set! . g$11741$13P8LC)
        (vector-ref . g$11740$13P8LC)
        (vector-map . g$11739$13P8LC)
        (vector-length . g$11738$13P8LC)
        (vector-for-each . g$11737$13P8LC)
        (vector-fill! . g$11736$13P8LC)
        (vector->list . g$11735$13P8LC)
        (vector . g$11734$13P8LC)
        (values . g$11733$13P8LC)
        (truncate . g$11732$13P8LC)
        (tan . g$11731$13P8LC)
        (symbol? . g$11730$13P8LC)
        (symbol=? . g$11729$13P8LC)
        (symbol->string . g$11728$13P8LC)
        (substring . g$11727$13P8LC)
        (string? . g$11726$13P8LC)
        (string>? . g$11725$13P8LC)
        (string>=? . g$11724$13P8LC)
        (string=? . g$11723$13P8LC)
        (string<? . g$11722$13P8LC)
        (string<=? . g$11721$13P8LC)
        (string-ref . g$11720$13P8LC)
        (string-length . g$11719$13P8LC)
        (string-for-each . g$11718$13P8LC)
        (string-copy . g$11717$13P8LC)
        (string-append . g$11716$13P8LC)
        (string->symbol . g$11715$13P8LC)
        (string->number . g$11714$13P8LC)
        (string->list . g$11713$13P8LC)
        (string . g$11712$13P8LC)
        (sqrt . g$11711$13P8LC)
        (sin . g$11710$13P8LC)
        (round . g$11709$13P8LC)
        (reverse . g$11708$13P8LC)
        (real? . g$11707$13P8LC)
        (real-valued? . g$11706$13P8LC)
        (real-part . g$11705$13P8LC)
        (rationalize . g$5786$13P8LC)
        (rational? . g$11704$13P8LC)
        (rational-valued? . g$11703$13P8LC)
        (procedure? . g$11702$13P8LC)
        (positive? . g$11701$13P8LC)
        (pair? . g$11700$13P8LC)
        (odd? . g$11699$13P8LC)
        (numerator . g$11698$13P8LC)
        (number? . g$11697$13P8LC)
        (number->string . g$11696$13P8LC)
        (null? . g$11695$13P8LC)
        (not . g$11694$13P8LC)
        (negative? . g$11693$13P8LC)
        (nan? . g$11692$13P8LC)
        (min . g$11691$13P8LC)
        (max . g$11690$13P8LC)
        (map . g$11689$13P8LC)
        (make-vector . g$11688$13P8LC)
        (make-string . g$11687$13P8LC)
        (make-rectangular . g$11686$13P8LC)
        (make-polar . g$11685$13P8LC)
        (magnitude . g$11684$13P8LC)
        (log . g$11683$13P8LC)
        (list? . g$11682$13P8LC)
        (list-tail . g$11681$13P8LC)
        (list-ref . g$11680$13P8LC)
        (list->vector . g$11679$13P8LC)
        (list->string . g$11678$13P8LC)
        (list . g$11677$13P8LC)
        (length . g$11676$13P8LC)
        (lcm . g$11675$13P8LC)
        (integer? . g$11674$13P8LC)
        (integer-valued? . g$11673$13P8LC)
        (integer->char . g$11672$13P8LC)
        (infinite? . g$11671$13P8LC)
        (inexact? . g$11670$13P8LC)
        (inexact . g$11669$13P8LC)
        (imag-part . g$11668$13P8LC)
        (gcd . g$11667$13P8LC)
        (for-each . g$11666$13P8LC)
        (floor . g$11665$13P8LC)
        (finite? . g$11664$13P8LC)
        (expt . g$11663$13P8LC)
        (exp . g$11662$13P8LC)
        (exact? . g$11661$13P8LC)
        (exact-integer-sqrt . g$11660$13P8LC)
        (exact . g$11659$13P8LC)
        (even? . g$11658$13P8LC)
        (error . g$11657$13P8LC)
        (eqv? . g$11656$13P8LC)
        (equal? . g$11655$13P8LC)
        (eq? . g$11654$13P8LC)
        (dynamic-wind . g$11653$13P8LC)
        (div0-and-mod0 . g$11652$13P8LC)
        (mod0 . g$11651$13P8LC)
        (div0 . g$11650$13P8LC)
        (div-and-mod . g$11649$13P8LC)
        (mod . g$11648$13P8LC)
        (div . g$11647$13P8LC)
        (denominator . g$11646$13P8LC)
        (cos . g$11645$13P8LC)
        (cons . g$11644$13P8LC)
        (complex? . g$11643$13P8LC)
        (char? . g$11642$13P8LC)
        (char>? . g$11641$13P8LC)
        (char>=? . g$11640$13P8LC)
        (char=? . g$11639$13P8LC)
        (char<? . g$11638$13P8LC)
        (char<=? . g$11637$13P8LC)
        (char->integer . g$11636$13P8LC)
        (ceiling . g$11635$13P8LC)
        (call-with-values . g$11634$13P8LC)
        (call/cc . g$11633$13P8LC)
        (call-with-current-continuation . g$11632$13P8LC)
        (cddddr . g$5785$13P8LC)
        (cdddar . g$5784$13P8LC)
        (cddadr . g$5783$13P8LC)
        (cddaar . g$5782$13P8LC)
        (cdaddr . g$5781$13P8LC)
        (cdadar . g$5780$13P8LC)
        (cdaadr . g$5779$13P8LC)
        (cdaaar . g$5778$13P8LC)
        (cadddr . g$5777$13P8LC)
        (caddar . g$5776$13P8LC)
        (cadadr . g$5775$13P8LC)
        (cadaar . g$5774$13P8LC)
        (caaddr . g$5773$13P8LC)
        (caadar . g$5772$13P8LC)
        (caaadr . g$5771$13P8LC)
        (caaaar . g$5770$13P8LC)
        (cdddr . g$5769$13P8LC)
        (cddar . g$5768$13P8LC)
        (cdadr . g$5767$13P8LC)
        (cdaar . g$5766$13P8LC)
        (caddr . g$5765$13P8LC)
        (cadar . g$5764$13P8LC)
        (caadr . g$5763$13P8LC)
        (caaar . g$5762$13P8LC)
        (cddr . g$5761$13P8LC)
        (cdar . g$5760$13P8LC)
        (cadr . g$5759$13P8LC)
        (caar . g$5758$13P8LC)
        (cdr . g$11631$13P8LC)
        (car . g$11630$13P8LC)
        (boolean? . g$11629$13P8LC)
        (boolean=? . g$11628$13P8LC)
        (atan . g$11627$13P8LC)
        (assertion-violation . g$11626$13P8LC)
        (asin . g$11625$13P8LC)
        (apply . g$11624$13P8LC)
        (append . g$11623$13P8LC)
        (angle . g$11622$13P8LC)
        (acos . g$11621$13P8LC)
        (abs . g$11620$13P8LC)
        (/ . g$11619$13P8LC)
        (* . g$11618$13P8LC)
        (- . g$11617$13P8LC)
        (+ . g$11616$13P8LC)
        (>= . g$11615$13P8LC)
        (> . g$11614$13P8LC)
        (= . g$11613$13P8LC)
        (<= . g$11612$13P8LC)
        (< . g$11611$13P8LC)
        (unquote-splicing . g$11532$13P8LC)
        (unquote . g$11531$13P8LC)
        (_ . g$11530$13P8LC)
        (else . g$11529$13P8LC)
        (=> . g$11528$13P8LC)
        (... . g$11527$13P8LC)
        (assert . g$11526$13P8LC)
        (or . g$11522$13P8LC)
        (and . g$11521$13P8LC)
        (cond . g$11519$13P8LC)
        (let* . g$11518$13P8LC)
        (let . g$11517$13P8LC)
        (identifier-syntax . g$11516$13P8LC)
        (quasiquote . g$11513$13P8LC)
        (syntax-rules . g$11512$13P8LC)
        (let-values . g$11508$13P8LC)
        (let*-values . g$11507$13P8LC)
        (case . g$11503$13P8LC)
        (if . g$11499$13P8LC)
        (letrec* . g$11498$13P8LC)
        (letrec . g$11497$13P8LC)
        (lambda . g$11494$13P8LC)
        (quote . g$11491$13P8LC)
        (letrec-syntax . g$11489$13P8LC)
        (let-syntax . g$11488$13P8LC)
        (set! . g$11487$13P8LC)
        (begin . g$11484$13P8LC)
        (define-syntax . g$11482$13P8LC)
        (define . g$11481$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12144$13P8LC
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6250$13P8LC)
        (remv . g$6251$13P8LC)
        (remp . g$6236$13P8LC)
        (remq . g$6252$13P8LC)
        (partition . g$6235$13P8LC)
        (memv . g$11879$13P8LC)
        (memq . g$11878$13P8LC)
        (memp . g$6242$13P8LC)
        (member . g$6241$13P8LC)
        (exists . g$6246$13P8LC)
        (for-all . g$6245$13P8LC)
        (fold-right . g$6249$13P8LC)
        (fold-left . g$6248$13P8LC)
        (find . g$6234$13P8LC)
        (filter . g$6237$13P8LC)
        (cons* . g$6247$13P8LC)
        (assv . g$6238$13P8LC)
        (assq . g$11877$13P8LC)
        (assp . g$6240$13P8LC)
        (assoc . g$6239$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12145$13P8LC
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$11969$13P8LC)
        (call-with-input-file . g$11968$13P8LC)
        (write-char . g$11967$13P8LC)
        (write . g$11966$13P8LC)
        (with-output-to-file . g$11965$13P8LC)
        (with-input-from-file . g$11964$13P8LC)
        (read-char . g$11963$13P8LC)
        (read . g$11962$13P8LC)
        (peek-char . g$11961$13P8LC)
        (open-output-file . g$11960$13P8LC)
        (open-input-file . g$11959$13P8LC)
        (newline . g$11958$13P8LC)
        (display . g$11957$13P8LC)
        (close-output-port . g$11956$13P8LC)
        (close-input-port . g$11955$13P8LC)
        (eof-object? . g$11954$13P8LC)
        (eof-object . g$11953$13P8LC)
        (current-error-port . g$11952$13P8LC)
        (current-output-port . g$11951$13P8LC)
        (current-input-port . g$11950$13P8LC)
        (output-port? . g$11949$13P8LC)
        (input-port? . g$11948$13P8LC)
        (make-i/o-write-error . g$6927$13P8LC)
        (make-i/o-read-error . g$6913$13P8LC)
        (make-i/o-port-error . g$7032$13P8LC)
        (make-i/o-invalid-position-error . g$6942$13P8LC)
        (make-i/o-filename-error . g$6959$13P8LC)
        (make-i/o-file-protection-error . g$6975$13P8LC)
        (make-i/o-file-is-read-only-error . g$6989$13P8LC)
        (make-i/o-file-does-not-exist-error . g$7017$13P8LC)
        (make-i/o-file-already-exists-error . g$7003$13P8LC)
        (make-i/o-error . g$6899$13P8LC)
        (i/o-write-error? . g$6928$13P8LC)
        (i/o-read-error? . g$6914$13P8LC)
        (i/o-port-error? . g$7034$13P8LC)
        (i/o-invalid-position-error? . g$6944$13P8LC)
        (i/o-error-position . g$6945$13P8LC)
        (i/o-filename-error? . g$6961$13P8LC)
        (i/o-file-protection-error? . g$6976$13P8LC)
        (i/o-file-is-read-only-error? . g$6990$13P8LC)
        (i/o-file-does-not-exist-error? . g$7018$13P8LC)
        (i/o-file-already-exists-error? . g$7004$13P8LC)
        (i/o-error? . g$6900$13P8LC)
        (i/o-error-port . g$7035$13P8LC)
        (i/o-error-filename . g$6962$13P8LC)
        (&i/o-port . g$11581$13P8LC)
        (&i/o-file-does-not-exist . g$11580$13P8LC)
        (&i/o-file-already-exists . g$11579$13P8LC)
        (&i/o-file-is-read-only . g$11578$13P8LC)
        (&i/o-file-protection . g$11577$13P8LC)
        (&i/o-filename . g$11576$13P8LC)
        (&i/o-invalid-position . g$11575$13P8LC)
        (&i/o-write . g$11574$13P8LC)
        (&i/o-read . g$11573$13P8LC)
        (&i/o . g$11572$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12146$13P8LC
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$11908$13P8LC)
        (utf32->string . g$11868$13P8LC)
        (utf16->string . g$11867$13P8LC)
        (utf8->string . g$11866$13P8LC)
        (uint-list->bytevector . g$11865$13P8LC)
        (u8-list->bytevector . g$11864$13P8LC)
        (string->utf8 . g$11863$13P8LC)
        (string->utf32 . g$11862$13P8LC)
        (string->utf16 . g$11861$13P8LC)
        (sint-list->bytevector . g$11860$13P8LC)
        (native-endianness . g$6326$13P8LC)
        (bytevector? . g$11859$13P8LC)
        (bytevector=? . g$11858$13P8LC)
        (bytevector-uint-set! . g$11857$13P8LC)
        (bytevector-uint-ref . g$11856$13P8LC)
        (bytevector-u8-set! . g$11855$13P8LC)
        (bytevector-u8-ref . g$11854$13P8LC)
        (bytevector-u64-set! . g$6347$13P8LC)
        (bytevector-u64-ref . g$6343$13P8LC)
        (bytevector-u64-native-set! . g$6349$13P8LC)
        (bytevector-u64-native-ref . g$6345$13P8LC)
        (bytevector-u32-set! . g$6339$13P8LC)
        (bytevector-u32-ref . g$6335$13P8LC)
        (bytevector-u32-native-set! . g$6341$13P8LC)
        (bytevector-u32-native-ref . g$6337$13P8LC)
        (bytevector-u16-set! . g$6331$13P8LC)
        (bytevector-u16-ref . g$6327$13P8LC)
        (bytevector-u16-native-set! . g$6333$13P8LC)
        (bytevector-u16-native-ref . g$6329$13P8LC)
        (bytevector-sint-set! . g$11853$13P8LC)
        (bytevector-sint-ref . g$11852$13P8LC)
        (bytevector-s8-set! . g$11851$13P8LC)
        (bytevector-s8-ref . g$11850$13P8LC)
        (bytevector-s64-set! . g$6348$13P8LC)
        (bytevector-s64-ref . g$6344$13P8LC)
        (bytevector-s64-native-set! . g$6350$13P8LC)
        (bytevector-s64-native-ref . g$6346$13P8LC)
        (bytevector-s32-set! . g$6340$13P8LC)
        (bytevector-s32-ref . g$6336$13P8LC)
        (bytevector-s32-native-set! . g$6342$13P8LC)
        (bytevector-s32-native-ref . g$6338$13P8LC)
        (bytevector-s16-set! . g$6332$13P8LC)
        (bytevector-s16-ref . g$6328$13P8LC)
        (bytevector-s16-native-set! . g$6334$13P8LC)
        (bytevector-s16-native-ref . g$6330$13P8LC)
        (bytevector-length . g$11849$13P8LC)
        (bytevector-ieee-single-set! . g$11848$13P8LC)
        (bytevector-ieee-single-ref . g$11847$13P8LC)
        (bytevector-ieee-single-native-set! . g$6353$13P8LC)
        (bytevector-ieee-single-native-ref . g$6351$13P8LC)
        (bytevector-ieee-double-set! . g$11846$13P8LC)
        (bytevector-ieee-double-ref . g$11845$13P8LC)
        (bytevector-ieee-double-native-set! . g$6354$13P8LC)
        (bytevector-ieee-double-native-ref . g$6352$13P8LC)
        (bytevector-fill! . g$11844$13P8LC)
        (bytevector-copy! . g$11843$13P8LC)
        (bytevector-copy . g$11842$13P8LC)
        (bytevector->uint-list . g$11841$13P8LC)
        (bytevector->u8-list . g$11840$13P8LC)
        (bytevector->sint-list . g$11839$13P8LC)
        (endianness . g$11525$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12147$13P8LC
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12029$13P8LC)
        (string-titlecase . g$12028$13P8LC)
        (string-normalize-nfkd . g$12027$13P8LC)
        (string-normalize-nfkc . g$12026$13P8LC)
        (string-normalize-nfd . g$12025$13P8LC)
        (string-normalize-nfc . g$12024$13P8LC)
        (string-foldcase . g$12023$13P8LC)
        (string-downcase . g$12022$13P8LC)
        (string-ci>? . g$12021$13P8LC)
        (string-ci>=? . g$12020$13P8LC)
        (string-ci=? . g$12019$13P8LC)
        (string-ci<? . g$12018$13P8LC)
        (string-ci<=? . g$12017$13P8LC)
        (char-whitespace? . g$12016$13P8LC)
        (char-upper-case? . g$12015$13P8LC)
        (char-title-case? . g$12014$13P8LC)
        (char-numeric? . g$12013$13P8LC)
        (char-lower-case? . g$12012$13P8LC)
        (char-general-category . g$12011$13P8LC)
        (char-upcase . g$12010$13P8LC)
        (char-titlecase . g$12009$13P8LC)
        (char-foldcase . g$12008$13P8LC)
        (char-downcase . g$12007$13P8LC)
        (char-ci>? . g$12006$13P8LC)
        (char-ci>=? . g$12005$13P8LC)
        (char-ci=? . g$12004$13P8LC)
        (char-ci<? . g$12003$13P8LC)
        (char-ci<=? . g$12002$13P8LC)
        (char-alphabetic? . g$12001$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12148$13P8LC
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$11876$13P8LC)
        (raise-continuable . g$11875$13P8LC)
        (raise . g$11874$13P8LC)
        (guard . g$11540$13P8LC)
        (else . g$11529$13P8LC)
        (=> . g$11528$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12149$13P8LC
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6768$13P8LC)
        (bitwise-reverse-bit-field . g$11754$13P8LC)
        (bitwise-length . g$11753$13P8LC)
        (bitwise-if . g$6762$13P8LC)
        (bitwise-first-bit-set . g$11752$13P8LC)
        (bitwise-copy-bit-field . g$6765$13P8LC)
        (bitwise-copy-bit . g$6763$13P8LC)
        (bitwise-bit-set? . g$11751$13P8LC)
        (bitwise-bit-field . g$11750$13P8LC)
        (bitwise-bit-count . g$11749$13P8LC)
        (bitwise-xor . g$11748$13P8LC)
        (bitwise-ior . g$11747$13P8LC)
        (bitwise-and . g$11746$13P8LC)
        (bitwise-not . g$11745$13P8LC)
        (bitwise-arithmetic-shift-right . g$6767$13P8LC)
        (bitwise-arithmetic-shift-left . g$6766$13P8LC)
        (bitwise-arithmetic-shift . g$11744$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12150$13P8LC
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$11792$13P8LC)
        (fxxor . g$11791$13P8LC)
        (fxrotate-bit-field . g$6816$13P8LC)
        (fxreverse-bit-field . g$11790$13P8LC)
        (fxpositive? . g$11789$13P8LC)
        (fxodd? . g$11788$13P8LC)
        (fxnot . g$11787$13P8LC)
        (fxnegative? . g$11786$13P8LC)
        (fxmod0 . g$11785$13P8LC)
        (fxmod . g$11784$13P8LC)
        (fxmin . g$11783$13P8LC)
        (fxmax . g$11782$13P8LC)
        (fxlength . g$11781$13P8LC)
        (fxior . g$11780$13P8LC)
        (fxif . g$6810$13P8LC)
        (fxfirst-bit-set . g$11779$13P8LC)
        (fxeven? . g$11778$13P8LC)
        (fxdiv0-and-mod0 . g$11777$13P8LC)
        (fxdiv0 . g$11776$13P8LC)
        (fxdiv-and-mod . g$11775$13P8LC)
        (fxdiv . g$11774$13P8LC)
        (fxcopy-bit-field . g$6813$13P8LC)
        (fxcopy-bit . g$6811$13P8LC)
        (fxbit-set? . g$11773$13P8LC)
        (fxbit-field . g$6812$13P8LC)
        (fxbit-count . g$11772$13P8LC)
        (fxarithmetic-shift-right . g$6815$13P8LC)
        (fxarithmetic-shift-left . g$6814$13P8LC)
        (fxarithmetic-shift . g$11771$13P8LC)
        (fxand . g$11770$13P8LC)
        (fx>? . g$11769$13P8LC)
        (fx>=? . g$11768$13P8LC)
        (fx=? . g$11767$13P8LC)
        (fx<? . g$11766$13P8LC)
        (fx<=? . g$11765$13P8LC)
        (fx-/carry . g$11764$13P8LC)
        (fx- . g$11763$13P8LC)
        (fx+/carry . g$11762$13P8LC)
        (fx+ . g$11761$13P8LC)
        (fx*/carry . g$11760$13P8LC)
        (fx* . g$11759$13P8LC)
        (greatest-fixnum . g$11758$13P8LC)
        (least-fixnum . g$11757$13P8LC)
        (fixnum-width . g$11756$13P8LC)
        (fixnum? . g$11755$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12151$13P8LC
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6885$13P8LC)
        (no-infinities-violation? . g$6871$13P8LC)
        (make-no-nans-violation . g$6884$13P8LC)
        (make-no-infinities-violation . g$6870$13P8LC)
        (real->flonum . g$11838$13P8LC)
        (flzero? . g$11837$13P8LC)
        (fltruncate . g$11836$13P8LC)
        (fltan . g$11835$13P8LC)
        (flsqrt . g$11834$13P8LC)
        (flsin . g$11833$13P8LC)
        (flround . g$11832$13P8LC)
        (flpositive? . g$11831$13P8LC)
        (flonum? . g$11830$13P8LC)
        (flodd? . g$11829$13P8LC)
        (flnumerator . g$11828$13P8LC)
        (flnegative? . g$11827$13P8LC)
        (flnan? . g$11826$13P8LC)
        (flmod0 . g$11825$13P8LC)
        (flmod . g$11824$13P8LC)
        (flmin . g$11823$13P8LC)
        (flmax . g$11822$13P8LC)
        (fllog . g$11821$13P8LC)
        (flinteger? . g$11820$13P8LC)
        (flinfinite? . g$11819$13P8LC)
        (flfloor . g$11818$13P8LC)
        (flfinite? . g$11817$13P8LC)
        (flexpt . g$11816$13P8LC)
        (flexp . g$11815$13P8LC)
        (fleven? . g$11814$13P8LC)
        (fldiv0-and-mod0 . g$11813$13P8LC)
        (fldiv0 . g$11812$13P8LC)
        (fldiv-and-mod . g$11811$13P8LC)
        (fldiv . g$11810$13P8LC)
        (fldenominator . g$11809$13P8LC)
        (flcos . g$11808$13P8LC)
        (flceiling . g$11807$13P8LC)
        (flatan . g$11806$13P8LC)
        (flasin . g$11805$13P8LC)
        (flacos . g$11804$13P8LC)
        (flabs . g$11803$13P8LC)
        (fl>? . g$11802$13P8LC)
        (fl>=? . g$11801$13P8LC)
        (fl=? . g$11800$13P8LC)
        (fl<? . g$11799$13P8LC)
        (fl<=? . g$11798$13P8LC)
        (fl/ . g$11797$13P8LC)
        (fl- . g$11796$13P8LC)
        (fl+ . g$11795$13P8LC)
        (fl* . g$11794$13P8LC)
        (fixnum->flonum . g$11793$13P8LC)
        (&no-nans . g$11585$13P8LC)
        (&no-infinities . g$11584$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12152$13P8LC
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$11981$13P8LC)
        (string-ci-hash . g$11980$13P8LC)
        (string-hash . g$11979$13P8LC)
        (equal-hash . g$11978$13P8LC)
        (hashtable-equivalence-function . g$11977$13P8LC)
        (make-hashtable . g$11976$13P8LC)
        (hashtable-hash-function . g$11975$13P8LC)
        (make-eqv-hashtable . g$6137$13P8LC)
        (make-eq-hashtable . g$6136$13P8LC)
        (hashtable? . g$11974$13P8LC)
        (hashtable-update! . g$6143$13P8LC)
        (hashtable-size . g$6138$13P8LC)
        (hashtable-set! . g$6140$13P8LC)
        (hashtable-ref . g$6139$13P8LC)
        (hashtable-mutable? . g$11973$13P8LC)
        (hashtable-keys . g$11972$13P8LC)
        (hashtable-entries . g$11971$13P8LC)
        (hashtable-delete! . g$6141$13P8LC)
        (hashtable-copy . g$11970$13P8LC)
        (hashtable-contains? . g$6142$13P8LC)
        (hashtable-clear! . g$6144$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12153$13P8LC
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$11954$13P8LC)
        (eof-object . g$11953$13P8LC)
        (current-error-port . g$11952$13P8LC)
        (current-output-port . g$11951$13P8LC)
        (current-input-port . g$11950$13P8LC)
        (output-port? . g$11949$13P8LC)
        (input-port? . g$11948$13P8LC)
        (utf-8-codec . g$11947$13P8LC)
        (utf-16-codec . g$11946$13P8LC)
        (transcoder-error-handling-mode . g$11945$13P8LC)
        (transcoder-eol-style . g$11944$13P8LC)
        (transcoder-codec . g$11943$13P8LC)
        (transcoded-port . g$11942$13P8LC)
        (textual-port? . g$11941$13P8LC)
        (string->bytevector . g$11940$13P8LC)
        (standard-output-port . g$11939$13P8LC)
        (standard-input-port . g$11938$13P8LC)
        (standard-error-port . g$11937$13P8LC)
        (set-port-position! . g$11936$13P8LC)
        (put-u8 . g$11935$13P8LC)
        (put-string . g$11934$13P8LC)
        (put-datum . g$11933$13P8LC)
        (put-char . g$11932$13P8LC)
        (put-bytevector . g$11931$13P8LC)
        (port? . g$7071$13P8LC)
        (port-transcoder . g$11930$13P8LC)
        (port-position . g$11929$13P8LC)
        (port-has-set-port-position!? . g$11928$13P8LC)
        (port-has-port-position? . g$11927$13P8LC)
        (port-eof? . g$11926$13P8LC)
        (output-port-buffer-mode . g$11925$13P8LC)
        (open-string-output-port . g$7070$13P8LC)
        (open-string-input-port . g$11924$13P8LC)
        (open-file-output-port . g$11923$13P8LC)
        (open-file-input/output-port . g$11922$13P8LC)
        (open-file-input-port . g$11921$13P8LC)
        (open-bytevector-output-port . g$11920$13P8LC)
        (open-bytevector-input-port . g$11919$13P8LC)
        (native-transcoder . g$11918$13P8LC)
        (native-eol-style . g$11917$13P8LC)
        (make-transcoder . g$11916$13P8LC)
        (latin-1-codec . g$11915$13P8LC)
        (make-i/o-write-error . g$6927$13P8LC)
        (make-i/o-read-error . g$6913$13P8LC)
        (make-i/o-port-error . g$7032$13P8LC)
        (make-i/o-invalid-position-error . g$6942$13P8LC)
        (make-i/o-filename-error . g$6959$13P8LC)
        (make-i/o-file-protection-error . g$6975$13P8LC)
        (make-i/o-file-is-read-only-error . g$6989$13P8LC)
        (make-i/o-file-does-not-exist-error . g$7017$13P8LC)
        (make-i/o-file-already-exists-error . g$7003$13P8LC)
        (make-i/o-error . g$6899$13P8LC)
        (make-i/o-encoding-error . g$7063$13P8LC)
        (make-i/o-decoding-error . g$7048$13P8LC)
        (make-custom-textual-output-port . g$11914$13P8LC)
        (make-custom-textual-input/output-port . g$11913$13P8LC)
        (make-custom-textual-input-port . g$11912$13P8LC)
        (make-custom-binary-output-port . g$11911$13P8LC)
        (make-custom-binary-input/output-port . g$11910$13P8LC)
        (make-custom-binary-input-port . g$11909$13P8LC)
        (lookahead-u8 . g$11907$13P8LC)
        (lookahead-char . g$11906$13P8LC)
        (i/o-write-error? . g$6928$13P8LC)
        (i/o-read-error? . g$6914$13P8LC)
        (i/o-port-error? . g$7034$13P8LC)
        (i/o-invalid-position-error? . g$6944$13P8LC)
        (i/o-error-position . g$6945$13P8LC)
        (i/o-filename-error? . g$6961$13P8LC)
        (i/o-file-protection-error? . g$6976$13P8LC)
        (i/o-file-is-read-only-error? . g$6990$13P8LC)
        (i/o-file-does-not-exist-error? . g$7018$13P8LC)
        (i/o-file-already-exists-error? . g$7004$13P8LC)
        (i/o-error? . g$6900$13P8LC)
        (i/o-error-port . g$7035$13P8LC)
        (i/o-error-filename . g$6962$13P8LC)
        (i/o-encoding-error? . g$7065$13P8LC)
        (i/o-encoding-error-char . g$7066$13P8LC)
        (i/o-decoding-error? . g$7049$13P8LC)
        (get-u8 . g$11905$13P8LC)
        (get-string-n! . g$11904$13P8LC)
        (get-string-n . g$11903$13P8LC)
        (get-string-all . g$11902$13P8LC)
        (get-line . g$11901$13P8LC)
        (get-datum . g$11900$13P8LC)
        (get-char . g$11899$13P8LC)
        (get-bytevector-some . g$11898$13P8LC)
        (get-bytevector-n! . g$11897$13P8LC)
        (get-bytevector-n . g$11896$13P8LC)
        (get-bytevector-all . g$11895$13P8LC)
        (flush-output-port . g$11894$13P8LC)
        (close-port . g$11893$13P8LC)
        (call-with-string-output-port . g$11892$13P8LC)
        (call-with-port . g$11891$13P8LC)
        (call-with-bytevector-output-port . g$11890$13P8LC)
        (bytevector->string . g$11889$13P8LC)
        (buffer-mode? . g$11888$13P8LC)
        (binary-port? . g$11887$13P8LC)
        (&i/o-encoding . g$11583$13P8LC)
        (&i/o-decoding . g$11582$13P8LC)
        (&i/o-port . g$11581$13P8LC)
        (&i/o-file-does-not-exist . g$11580$13P8LC)
        (&i/o-file-already-exists . g$11579$13P8LC)
        (&i/o-file-is-read-only . g$11578$13P8LC)
        (&i/o-file-protection . g$11577$13P8LC)
        (&i/o-filename . g$11576$13P8LC)
        (&i/o-invalid-position . g$11575$13P8LC)
        (&i/o-write . g$11574$13P8LC)
        (&i/o-read . g$11573$13P8LC)
        (&i/o . g$11572$13P8LC)
        (error-handling-mode . g$11544$13P8LC)
        (file-options . g$11543$13P8LC)
        (buffer-mode . g$11542$13P8LC)
        (eol-style . g$11541$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12154$13P8LC
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7114$13P8LC)
        (enum-set=? . g$7121$13P8LC)
        (enum-set-universe . g$7115$13P8LC)
        (enum-set-union . g$7122$13P8LC)
        (enum-set-subset? . g$7120$13P8LC)
        (enum-set-projection . g$7126$13P8LC)
        (enum-set-member? . g$7119$13P8LC)
        (enum-set-intersection . g$7123$13P8LC)
        (enum-set-indexer . g$7116$13P8LC)
        (enum-set-difference . g$7124$13P8LC)
        (enum-set-constructor . g$7117$13P8LC)
        (enum-set-complement . g$7125$13P8LC)
        (enum-set->list . g$7118$13P8LC)
        (define-enumeration . g$11555$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12155$13P8LC
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6574$13P8LC)
        (warning? . g$6485$13P8LC)
        (violation? . g$6527$13P8LC)
        (undefined-violation? . g$6651$13P8LC)
        (syntax-violation? . g$6635$13P8LC)
        (syntax-violation-subform . g$6637$13P8LC)
        (syntax-violation-form . g$6636$13P8LC)
        (syntax-violation . g$8511$13P8LC)
        (simple-conditions . g$11873$13P8LC)
        (serious-condition? . g$6499$13P8LC)
        (non-continuable-violation? . g$6589$13P8LC)
        (message-condition? . g$6470$13P8LC)
        (make-who-condition . g$6572$13P8LC)
        (make-warning . g$6484$13P8LC)
        (make-violation . g$6526$13P8LC)
        (make-undefined-violation . g$6650$13P8LC)
        (make-syntax-violation . g$6632$13P8LC)
        (make-serious-condition . g$6498$13P8LC)
        (make-non-continuable-violation . g$6588$13P8LC)
        (make-message-condition . g$6468$13P8LC)
        (make-lexical-violation . g$6616$13P8LC)
        (make-irritants-condition . g$6555$13P8LC)
        (make-implementation-restriction-violation . g$6602$13P8LC)
        (make-error . g$6512$13P8LC)
        (make-assertion-violation . g$6540$13P8LC)
        (lexical-violation? . g$6617$13P8LC)
        (irritants-condition? . g$6557$13P8LC)
        (implementation-restriction-violation? . g$6603$13P8LC)
        (error? . g$6513$13P8LC)
        (condition-who . g$6575$13P8LC)
        (condition-predicate . g$11872$13P8LC)
        (condition-message . g$6471$13P8LC)
        (condition-irritants . g$6558$13P8LC)
        (condition-accessor . g$11871$13P8LC)
        (condition . g$11870$13P8LC)
        (assertion-violation? . g$6541$13P8LC)
        (condition? . g$11869$13P8LC)
        (&non-continuable . g$11571$13P8LC)
        (&undefined . g$11570$13P8LC)
        (&syntax . g$11569$13P8LC)
        (&lexical . g$11568$13P8LC)
        (&implementation-restriction . g$11567$13P8LC)
        (&who . g$11565$13P8LC)
        (&irritants . g$11564$13P8LC)
        (&assertion . g$11563$13P8LC)
        (&violation . g$11562$13P8LC)
        (&error . g$11561$13P8LC)
        (&serious . g$11560$13P8LC)
        (&warning . g$11559$13P8LC)
        (&message . g$11558$13P8LC)
        (&condition . g$11557$13P8LC)
        (define-condition-type . g$11556$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12156$13P8LC
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$11993$13P8LC)
        (record-type-uid . g$11992$13P8LC)
        (record-type-sealed? . g$11991$13P8LC)
        (record-type-parent . g$11990$13P8LC)
        (record-type-opaque? . g$11989$13P8LC)
        (record-type-name . g$11988$13P8LC)
        (record-type-generative? . g$11987$13P8LC)
        (record-type-field-names . g$11986$13P8LC)
        (record-rtd . g$11985$13P8LC)
        (record-field-mutable? . g$11984$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12157$13P8LC
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12000$13P8LC)
        (record-predicate . g$11999$13P8LC)
        (record-mutator . g$11998$13P8LC)
        (record-constructor . g$11997$13P8LC)
        (record-accessor . g$11996$13P8LC)
        (make-record-type-descriptor . g$11995$13P8LC)
        (make-record-constructor-descriptor . g$11994$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12158$13P8LC
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11554$13P8LC)
        (parent-rtd . g$11553$13P8LC)
        (nongenerative . g$11552$13P8LC)
        (opaque . g$11551$13P8LC)
        (sealed . g$11550$13P8LC)
        (protocol . g$11549$13P8LC)
        (parent . g$11548$13P8LC)
        (immutable . g$11547$13P8LC)
        (mutable . g$11546$13P8LC)
        (fields . g$11545$13P8LC)
        (record-constructor-descriptor . g$11506$13P8LC)
        (record-type-descriptor . g$11505$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6891$13P8LC
      'g$12159$13P8LC
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8386$13P8LC)
        (&no-nans-rcd . g$12123$13P8LC)
        (&no-nans-rtd . g$12122$13P8LC)
        (&no-infinities-rcd . g$12121$13P8LC)
        (&no-infinities-rtd . g$12120$13P8LC)
        (&i/o-encoding-rcd . g$12119$13P8LC)
        (&i/o-encoding-rtd . g$12118$13P8LC)
        (&i/o-decoding-rcd . g$12117$13P8LC)
        (&i/o-decoding-rtd . g$12116$13P8LC)
        (&i/o-port-rcd . g$12115$13P8LC)
        (&i/o-port-rtd . g$12114$13P8LC)
        (&i/o-file-does-not-exist-rcd . g$12113$13P8LC)
        (&i/o-file-does-not-exist-rtd . g$12112$13P8LC)
        (&i/o-file-already-exists-rcd . g$12111$13P8LC)
        (&i/o-file-already-exists-rtd . g$12110$13P8LC)
        (&i/o-file-is-read-only-rcd . g$12109$13P8LC)
        (&i/o-file-is-read-only-rtd . g$12108$13P8LC)
        (&i/o-file-protection-rcd . g$12107$13P8LC)
        (&i/o-file-protection-rtd . g$12106$13P8LC)
        (&i/o-filename-rcd . g$12105$13P8LC)
        (&i/o-filename-rtd . g$12104$13P8LC)
        (&i/o-invalid-position-rcd . g$12103$13P8LC)
        (&i/o-invalid-position-rtd . g$12102$13P8LC)
        (&i/o-write-rcd . g$12101$13P8LC)
        (&i/o-write-rtd . g$12100$13P8LC)
        (&i/o-read-rcd . g$12099$13P8LC)
        (&i/o-read-rtd . g$12098$13P8LC)
        (&i/o-rcd . g$12097$13P8LC)
        (&i/o-rtd . g$12096$13P8LC)
        (&undefined-rcd . g$12095$13P8LC)
        (&undefined-rtd . g$12094$13P8LC)
        (&syntax-rcd . g$12093$13P8LC)
        (&syntax-rtd . g$12092$13P8LC)
        (&lexical-rcd . g$12091$13P8LC)
        (&lexical-rtd . g$12090$13P8LC)
        (&implementation-restriction-rcd . g$12089$13P8LC)
        (&implementation-restriction-rtd . g$12088$13P8LC)
        (&non-continuable-rcd . g$12087$13P8LC)
        (&non-continuable-rtd . g$12086$13P8LC)
        (&who-rcd . g$12085$13P8LC)
        (&who-rtd . g$12084$13P8LC)
        (&irritants-rcd . g$12083$13P8LC)
        (&irritants-rtd . g$12082$13P8LC)
        (&assertion-rcd . g$12081$13P8LC)
        (&assertion-rtd . g$12080$13P8LC)
        (&violation-rcd . g$12079$13P8LC)
        (&violation-rtd . g$12078$13P8LC)
        (&error-rcd . g$12077$13P8LC)
        (&error-rtd . g$12076$13P8LC)
        (&serious-rcd . g$12075$13P8LC)
        (&serious-rtd . g$12074$13P8LC)
        (&warning-rcd . g$12073$13P8LC)
        (&warning-rtd . g$12072$13P8LC)
        (&message-rcd . g$12071$13P8LC)
        (&message-rtd . g$12070$13P8LC)
        (&condition-rcd . g$12069$13P8LC)
        (&condition-rtd . g$12068$13P8LC)
        (library-letrec* . g$12067$13P8LC)
        (annotation-stripped . g$12066$13P8LC)
        (annotation-source . g$12065$13P8LC)
        (annotation-expression . g$12064$13P8LC)
        (annotation? . g$12063$13P8LC)
        (read-annotated . g$12062$13P8LC)
        (tanh . g$12061$13P8LC)
        (cosh . g$12060$13P8LC)
        (sinh . g$12059$13P8LC)
        (make-guid . g$12058$13P8LC)
        (unspecified? . g$12057$13P8LC)
        (make-trace . g$12056$13P8LC)
        (make-list . g$12055$13P8LC)
        (last-pair . g$12054$13P8LC)
        (load-r5rs . g$12053$13P8LC)
        (license . g$12052$13P8LC)
        (stacktrace . g$12051$13P8LC)
        (ironscheme-build . g$11449$13P8LC)
        (define-clr-class-internal . g$12050$13P8LC)
        (clr-field-set!-internal . g$12049$13P8LC)
        (clr-field-get-internal . g$12048$13P8LC)
        (clr-cast-internal . g$12047$13P8LC)
        (clr-call-internal . g$12046$13P8LC)
        (clr-new-internal . g$12045$13P8LC)
        (clr-new-array-internal . g$12044$13P8LC)
        (clr-is-internal . g$12043$13P8LC)
        (clr-reference-internal . g$12042$13P8LC)
        (clr-using-internal . g$12041$13P8LC)
        (clr-clear-usings-internal . g$12040$13P8LC)
        (syntax-error . g$8508$13P8LC)
        (syntax-dispatch . g$8381$13P8LC)
        (compile-core . g$12039$13P8LC)
        (eval-core . g$12038$13P8LC)
        (set-symbol-value! . g$12037$13P8LC)
        (symbol-value . g$12036$13P8LC)
        (ungensym . g$12035$13P8LC)
        (gensym . g$12034$13P8LC)
        (void . g$12033$13P8LC)
        (load-serialized-library . g$12032$13P8LC)
        (serialize-library . g$12031$13P8LC)
        (compile-system-libraries . g$11451$13P8LC)
        (compile->closure . g$11453$13P8LC)
        (compile . g$11452$13P8LC)
        (load . g$11448$13P8LC)
        (interaction-environment . g$8517$13P8LC)
        (char-ready? . g$12030$13P8LC)
        (string-upcase . g$12029$13P8LC)
        (string-titlecase . g$12028$13P8LC)
        (string-normalize-nfkd . g$12027$13P8LC)
        (string-normalize-nfkc . g$12026$13P8LC)
        (string-normalize-nfd . g$12025$13P8LC)
        (string-normalize-nfc . g$12024$13P8LC)
        (string-foldcase . g$12023$13P8LC)
        (string-downcase . g$12022$13P8LC)
        (string-ci>? . g$12021$13P8LC)
        (string-ci>=? . g$12020$13P8LC)
        (string-ci=? . g$12019$13P8LC)
        (string-ci<? . g$12018$13P8LC)
        (string-ci<=? . g$12017$13P8LC)
        (char-whitespace? . g$12016$13P8LC)
        (char-upper-case? . g$12015$13P8LC)
        (char-title-case? . g$12014$13P8LC)
        (char-numeric? . g$12013$13P8LC)
        (char-lower-case? . g$12012$13P8LC)
        (char-general-category . g$12011$13P8LC)
        (char-upcase . g$12010$13P8LC)
        (char-titlecase . g$12009$13P8LC)
        (char-foldcase . g$12008$13P8LC)
        (char-downcase . g$12007$13P8LC)
        (char-ci>? . g$12006$13P8LC)
        (char-ci>=? . g$12005$13P8LC)
        (char-ci=? . g$12004$13P8LC)
        (char-ci<? . g$12003$13P8LC)
        (char-ci<=? . g$12002$13P8LC)
        (char-alphabetic? . g$12001$13P8LC)
        (variable-transformer-procedure . g$8118$13P8LC)
        (variable-transformer? . g$8117$13P8LC)
        (make-variable-transformer . g$8116$13P8LC)
        (identifier? . g$8512$13P8LC)
        (generate-temporaries . g$8501$13P8LC)
        (free-identifier=? . g$8502$13P8LC)
        (syntax->datum . g$8514$13P8LC)
        (datum->syntax . g$8513$13P8LC)
        (bound-identifier=? . g$8503$13P8LC)
        (record-type-descriptor? . g$12000$13P8LC)
        (record-predicate . g$11999$13P8LC)
        (record-mutator . g$11998$13P8LC)
        (record-constructor . g$11997$13P8LC)
        (record-accessor . g$11996$13P8LC)
        (make-record-type-descriptor . g$11995$13P8LC)
        (make-record-constructor-descriptor . g$11994$13P8LC)
        (record? . g$11993$13P8LC)
        (record-type-uid . g$11992$13P8LC)
        (record-type-sealed? . g$11991$13P8LC)
        (record-type-parent . g$11990$13P8LC)
        (record-type-opaque? . g$11989$13P8LC)
        (record-type-name . g$11988$13P8LC)
        (record-type-generative? . g$11987$13P8LC)
        (record-type-field-names . g$11986$13P8LC)
        (record-rtd . g$11985$13P8LC)
        (record-field-mutable? . g$11984$13P8LC)
        (delete-file . g$6170$13P8LC)
        (file-exists? . g$6169$13P8LC)
        (vector-sort! . g$11983$13P8LC)
        (vector-sort . g$11982$13P8LC)
        (list-sort . g$6683$13P8LC)
        (symbol-hash . g$11981$13P8LC)
        (string-ci-hash . g$11980$13P8LC)
        (string-hash . g$11979$13P8LC)
        (equal-hash . g$11978$13P8LC)
        (hashtable-equivalence-function . g$11977$13P8LC)
        (make-hashtable . g$11976$13P8LC)
        (hashtable-hash-function . g$11975$13P8LC)
        (make-eqv-hashtable . g$6137$13P8LC)
        (make-eq-hashtable . g$6136$13P8LC)
        (hashtable? . g$11974$13P8LC)
        (hashtable-update! . g$6143$13P8LC)
        (hashtable-size . g$6138$13P8LC)
        (hashtable-set! . g$6140$13P8LC)
        (hashtable-ref . g$6139$13P8LC)
        (hashtable-mutable? . g$11973$13P8LC)
        (hashtable-keys . g$11972$13P8LC)
        (hashtable-entries . g$11971$13P8LC)
        (hashtable-delete! . g$6141$13P8LC)
        (hashtable-copy . g$11970$13P8LC)
        (hashtable-contains? . g$6142$13P8LC)
        (hashtable-clear! . g$6144$13P8LC)
        (call-with-output-file . g$11969$13P8LC)
        (call-with-input-file . g$11968$13P8LC)
        (write-char . g$11967$13P8LC)
        (write . g$11966$13P8LC)
        (with-output-to-file . g$11965$13P8LC)
        (with-input-from-file . g$11964$13P8LC)
        (read-char . g$11963$13P8LC)
        (read . g$11962$13P8LC)
        (peek-char . g$11961$13P8LC)
        (open-output-file . g$11960$13P8LC)
        (open-input-file . g$11959$13P8LC)
        (newline . g$11958$13P8LC)
        (display . g$11957$13P8LC)
        (close-output-port . g$11956$13P8LC)
        (close-input-port . g$11955$13P8LC)
        (eof-object? . g$11954$13P8LC)
        (eof-object . g$11953$13P8LC)
        (current-error-port . g$11952$13P8LC)
        (current-output-port . g$11951$13P8LC)
        (current-input-port . g$11950$13P8LC)
        (output-port? . g$11949$13P8LC)
        (input-port? . g$11948$13P8LC)
        (utf-8-codec . g$11947$13P8LC)
        (utf-16-codec . g$11946$13P8LC)
        (transcoder-error-handling-mode . g$11945$13P8LC)
        (transcoder-eol-style . g$11944$13P8LC)
        (transcoder-codec . g$11943$13P8LC)
        (transcoded-port . g$11942$13P8LC)
        (textual-port? . g$11941$13P8LC)
        (string->bytevector . g$11940$13P8LC)
        (standard-output-port . g$11939$13P8LC)
        (standard-input-port . g$11938$13P8LC)
        (standard-error-port . g$11937$13P8LC)
        (set-port-position! . g$11936$13P8LC)
        (put-u8 . g$11935$13P8LC)
        (put-string . g$11934$13P8LC)
        (put-datum . g$11933$13P8LC)
        (put-char . g$11932$13P8LC)
        (put-bytevector . g$11931$13P8LC)
        (port? . g$7071$13P8LC)
        (port-transcoder . g$11930$13P8LC)
        (port-position . g$11929$13P8LC)
        (port-has-set-port-position!? . g$11928$13P8LC)
        (port-has-port-position? . g$11927$13P8LC)
        (port-eof? . g$11926$13P8LC)
        (output-port-buffer-mode . g$11925$13P8LC)
        (open-string-output-port . g$7070$13P8LC)
        (open-string-input-port . g$11924$13P8LC)
        (open-file-output-port . g$11923$13P8LC)
        (open-file-input/output-port . g$11922$13P8LC)
        (open-file-input-port . g$11921$13P8LC)
        (open-bytevector-output-port . g$11920$13P8LC)
        (open-bytevector-input-port . g$11919$13P8LC)
        (native-transcoder . g$11918$13P8LC)
        (native-eol-style . g$11917$13P8LC)
        (make-transcoder . g$11916$13P8LC)
        (latin-1-codec . g$11915$13P8LC)
        (make-i/o-write-error . g$6927$13P8LC)
        (make-i/o-read-error . g$6913$13P8LC)
        (make-i/o-port-error . g$7032$13P8LC)
        (make-i/o-invalid-position-error . g$6942$13P8LC)
        (make-i/o-filename-error . g$6959$13P8LC)
        (make-i/o-file-protection-error . g$6975$13P8LC)
        (make-i/o-file-is-read-only-error . g$6989$13P8LC)
        (make-i/o-file-does-not-exist-error . g$7017$13P8LC)
        (make-i/o-file-already-exists-error . g$7003$13P8LC)
        (make-i/o-error . g$6899$13P8LC)
        (make-i/o-encoding-error . g$7063$13P8LC)
        (make-i/o-decoding-error . g$7048$13P8LC)
        (make-custom-textual-output-port . g$11914$13P8LC)
        (make-custom-textual-input/output-port . g$11913$13P8LC)
        (make-custom-textual-input-port . g$11912$13P8LC)
        (make-custom-binary-output-port . g$11911$13P8LC)
        (make-custom-binary-input/output-port . g$11910$13P8LC)
        (make-custom-binary-input-port . g$11909$13P8LC)
        (make-bytevector . g$11908$13P8LC)
        (lookahead-u8 . g$11907$13P8LC)
        (lookahead-char . g$11906$13P8LC)
        (i/o-write-error? . g$6928$13P8LC)
        (i/o-read-error? . g$6914$13P8LC)
        (i/o-port-error? . g$7034$13P8LC)
        (i/o-invalid-position-error? . g$6944$13P8LC)
        (i/o-error-position . g$6945$13P8LC)
        (i/o-filename-error? . g$6961$13P8LC)
        (i/o-file-protection-error? . g$6976$13P8LC)
        (i/o-file-is-read-only-error? . g$6990$13P8LC)
        (i/o-file-does-not-exist-error? . g$7018$13P8LC)
        (i/o-file-already-exists-error? . g$7004$13P8LC)
        (i/o-error? . g$6900$13P8LC)
        (i/o-error-port . g$7035$13P8LC)
        (i/o-error-filename . g$6962$13P8LC)
        (i/o-encoding-error? . g$7065$13P8LC)
        (i/o-encoding-error-char . g$7066$13P8LC)
        (i/o-decoding-error? . g$7049$13P8LC)
        (get-u8 . g$11905$13P8LC)
        (get-string-n! . g$11904$13P8LC)
        (get-string-n . g$11903$13P8LC)
        (get-string-all . g$11902$13P8LC)
        (get-line . g$11901$13P8LC)
        (get-datum . g$11900$13P8LC)
        (get-char . g$11899$13P8LC)
        (get-bytevector-some . g$11898$13P8LC)
        (get-bytevector-n! . g$11897$13P8LC)
        (get-bytevector-n . g$11896$13P8LC)
        (get-bytevector-all . g$11895$13P8LC)
        (flush-output-port . g$11894$13P8LC)
        (close-port . g$11893$13P8LC)
        (call-with-string-output-port . g$11892$13P8LC)
        (call-with-port . g$11891$13P8LC)
        (call-with-bytevector-output-port . g$11890$13P8LC)
        (bytevector->string . g$11889$13P8LC)
        (buffer-mode? . g$11888$13P8LC)
        (binary-port? . g$11887$13P8LC)
        (scheme-report-environment . g$8492$13P8LC)
        (quotient . g$6663$13P8LC)
        (null-environment . g$8491$13P8LC)
        (remainder . g$6664$13P8LC)
        (modulo . g$6665$13P8LC)
        (inexact->exact . g$11886$13P8LC)
        (force . g$6667$13P8LC)
        (exact->inexact . g$11885$13P8LC)
        (exit . g$11884$13P8LC)
        (command-line . g$11445$13P8LC)
        (string-fill! . g$11883$13P8LC)
        (string-set! . g$11882$13P8LC)
        (set-cdr! . g$11881$13P8LC)
        (set-car! . g$11880$13P8LC)
        (remove . g$6250$13P8LC)
        (remv . g$6251$13P8LC)
        (remp . g$6236$13P8LC)
        (remq . g$6252$13P8LC)
        (partition . g$6235$13P8LC)
        (memv . g$11879$13P8LC)
        (memq . g$11878$13P8LC)
        (memp . g$6242$13P8LC)
        (member . g$6241$13P8LC)
        (exists . g$6246$13P8LC)
        (for-all . g$6245$13P8LC)
        (fold-right . g$6249$13P8LC)
        (fold-left . g$6248$13P8LC)
        (find . g$6234$13P8LC)
        (filter . g$6237$13P8LC)
        (cons* . g$6247$13P8LC)
        (assv . g$6238$13P8LC)
        (assq . g$11877$13P8LC)
        (assp . g$6240$13P8LC)
        (assoc . g$6239$13P8LC)
        (with-exception-handler . g$11876$13P8LC)
        (raise-continuable . g$11875$13P8LC)
        (raise . g$11874$13P8LC)
        (eval . g$8494$13P8LC)
        (environment . g$8490$13P8LC)
        (make-enumeration . g$7114$13P8LC)
        (enum-set=? . g$7121$13P8LC)
        (enum-set-universe . g$7115$13P8LC)
        (enum-set-union . g$7122$13P8LC)
        (enum-set-subset? . g$7120$13P8LC)
        (enum-set-projection . g$7126$13P8LC)
        (enum-set-member? . g$7119$13P8LC)
        (enum-set-intersection . g$7123$13P8LC)
        (enum-set-indexer . g$7116$13P8LC)
        (enum-set-difference . g$7124$13P8LC)
        (enum-set-constructor . g$7117$13P8LC)
        (enum-set-complement . g$7125$13P8LC)
        (enum-set->list . g$7118$13P8LC)
        (who-condition? . g$6574$13P8LC)
        (warning? . g$6485$13P8LC)
        (violation? . g$6527$13P8LC)
        (undefined-violation? . g$6651$13P8LC)
        (syntax-violation? . g$6635$13P8LC)
        (syntax-violation-subform . g$6637$13P8LC)
        (syntax-violation-form . g$6636$13P8LC)
        (syntax-violation . g$8511$13P8LC)
        (simple-conditions . g$11873$13P8LC)
        (serious-condition? . g$6499$13P8LC)
        (non-continuable-violation? . g$6589$13P8LC)
        (message-condition? . g$6470$13P8LC)
        (make-who-condition . g$6572$13P8LC)
        (make-warning . g$6484$13P8LC)
        (make-violation . g$6526$13P8LC)
        (make-undefined-violation . g$6650$13P8LC)
        (make-syntax-violation . g$6632$13P8LC)
        (make-serious-condition . g$6498$13P8LC)
        (make-non-continuable-violation . g$6588$13P8LC)
        (make-message-condition . g$6468$13P8LC)
        (make-lexical-violation . g$6616$13P8LC)
        (make-irritants-condition . g$6555$13P8LC)
        (make-implementation-restriction-violation . g$6602$13P8LC)
        (make-error . g$6512$13P8LC)
        (make-assertion-violation . g$6540$13P8LC)
        (lexical-violation? . g$6617$13P8LC)
        (irritants-condition? . g$6557$13P8LC)
        (implementation-restriction-violation? . g$6603$13P8LC)
        (error? . g$6513$13P8LC)
        (condition-who . g$6575$13P8LC)
        (condition-predicate . g$11872$13P8LC)
        (condition-message . g$6471$13P8LC)
        (condition-irritants . g$6558$13P8LC)
        (condition-accessor . g$11871$13P8LC)
        (condition . g$11870$13P8LC)
        (assertion-violation? . g$6541$13P8LC)
        (condition? . g$11869$13P8LC)
        (utf32->string . g$11868$13P8LC)
        (utf16->string . g$11867$13P8LC)
        (utf8->string . g$11866$13P8LC)
        (uint-list->bytevector . g$11865$13P8LC)
        (u8-list->bytevector . g$11864$13P8LC)
        (string->utf8 . g$11863$13P8LC)
        (string->utf32 . g$11862$13P8LC)
        (string->utf16 . g$11861$13P8LC)
        (sint-list->bytevector . g$11860$13P8LC)
        (native-endianness . g$6326$13P8LC)
        (bytevector? . g$11859$13P8LC)
        (bytevector=? . g$11858$13P8LC)
        (bytevector-uint-set! . g$11857$13P8LC)
        (bytevector-uint-ref . g$11856$13P8LC)
        (bytevector-u8-set! . g$11855$13P8LC)
        (bytevector-u8-ref . g$11854$13P8LC)
        (bytevector-u64-set! . g$6347$13P8LC)
        (bytevector-u64-ref . g$6343$13P8LC)
        (bytevector-u64-native-set! . g$6349$13P8LC)
        (bytevector-u64-native-ref . g$6345$13P8LC)
        (bytevector-u32-set! . g$6339$13P8LC)
        (bytevector-u32-ref . g$6335$13P8LC)
        (bytevector-u32-native-set! . g$6341$13P8LC)
        (bytevector-u32-native-ref . g$6337$13P8LC)
        (bytevector-u16-set! . g$6331$13P8LC)
        (bytevector-u16-ref . g$6327$13P8LC)
        (bytevector-u16-native-set! . g$6333$13P8LC)
        (bytevector-u16-native-ref . g$6329$13P8LC)
        (bytevector-sint-set! . g$11853$13P8LC)
        (bytevector-sint-ref . g$11852$13P8LC)
        (bytevector-s8-set! . g$11851$13P8LC)
        (bytevector-s8-ref . g$11850$13P8LC)
        (bytevector-s64-set! . g$6348$13P8LC)
        (bytevector-s64-ref . g$6344$13P8LC)
        (bytevector-s64-native-set! . g$6350$13P8LC)
        (bytevector-s64-native-ref . g$6346$13P8LC)
        (bytevector-s32-set! . g$6340$13P8LC)
        (bytevector-s32-ref . g$6336$13P8LC)
        (bytevector-s32-native-set! . g$6342$13P8LC)
        (bytevector-s32-native-ref . g$6338$13P8LC)
        (bytevector-s16-set! . g$6332$13P8LC)
        (bytevector-s16-ref . g$6328$13P8LC)
        (bytevector-s16-native-set! . g$6334$13P8LC)
        (bytevector-s16-native-ref . g$6330$13P8LC)
        (bytevector-length . g$11849$13P8LC)
        (bytevector-ieee-single-set! . g$11848$13P8LC)
        (bytevector-ieee-single-ref . g$11847$13P8LC)
        (bytevector-ieee-single-native-set! . g$6353$13P8LC)
        (bytevector-ieee-single-native-ref . g$6351$13P8LC)
        (bytevector-ieee-double-set! . g$11846$13P8LC)
        (bytevector-ieee-double-ref . g$11845$13P8LC)
        (bytevector-ieee-double-native-set! . g$6354$13P8LC)
        (bytevector-ieee-double-native-ref . g$6352$13P8LC)
        (bytevector-fill! . g$11844$13P8LC)
        (bytevector-copy! . g$11843$13P8LC)
        (bytevector-copy . g$11842$13P8LC)
        (bytevector->uint-list . g$11841$13P8LC)
        (bytevector->u8-list . g$11840$13P8LC)
        (bytevector->sint-list . g$11839$13P8LC)
        (no-nans-violation? . g$6885$13P8LC)
        (no-infinities-violation? . g$6871$13P8LC)
        (make-no-nans-violation . g$6884$13P8LC)
        (make-no-infinities-violation . g$6870$13P8LC)
        (real->flonum . g$11838$13P8LC)
        (flzero? . g$11837$13P8LC)
        (fltruncate . g$11836$13P8LC)
        (fltan . g$11835$13P8LC)
        (flsqrt . g$11834$13P8LC)
        (flsin . g$11833$13P8LC)
        (flround . g$11832$13P8LC)
        (flpositive? . g$11831$13P8LC)
        (flonum? . g$11830$13P8LC)
        (flodd? . g$11829$13P8LC)
        (flnumerator . g$11828$13P8LC)
        (flnegative? . g$11827$13P8LC)
        (flnan? . g$11826$13P8LC)
        (flmod0 . g$11825$13P8LC)
        (flmod . g$11824$13P8LC)
        (flmin . g$11823$13P8LC)
        (flmax . g$11822$13P8LC)
        (fllog . g$11821$13P8LC)
        (flinteger? . g$11820$13P8LC)
        (flinfinite? . g$11819$13P8LC)
        (flfloor . g$11818$13P8LC)
        (flfinite? . g$11817$13P8LC)
        (flexpt . g$11816$13P8LC)
        (flexp . g$11815$13P8LC)
        (fleven? . g$11814$13P8LC)
        (fldiv0-and-mod0 . g$11813$13P8LC)
        (fldiv0 . g$11812$13P8LC)
        (fldiv-and-mod . g$11811$13P8LC)
        (fldiv . g$11810$13P8LC)
        (fldenominator . g$11809$13P8LC)
        (flcos . g$11808$13P8LC)
        (flceiling . g$11807$13P8LC)
        (flatan . g$11806$13P8LC)
        (flasin . g$11805$13P8LC)
        (flacos . g$11804$13P8LC)
        (flabs . g$11803$13P8LC)
        (fl>? . g$11802$13P8LC)
        (fl>=? . g$11801$13P8LC)
        (fl=? . g$11800$13P8LC)
        (fl<? . g$11799$13P8LC)
        (fl<=? . g$11798$13P8LC)
        (fl/ . g$11797$13P8LC)
        (fl- . g$11796$13P8LC)
        (fl+ . g$11795$13P8LC)
        (fl* . g$11794$13P8LC)
        (fixnum->flonum . g$11793$13P8LC)
        (fxzero? . g$11792$13P8LC)
        (fxxor . g$11791$13P8LC)
        (fxrotate-bit-field . g$6816$13P8LC)
        (fxreverse-bit-field . g$11790$13P8LC)
        (fxpositive? . g$11789$13P8LC)
        (fxodd? . g$11788$13P8LC)
        (fxnot . g$11787$13P8LC)
        (fxnegative? . g$11786$13P8LC)
        (fxmod0 . g$11785$13P8LC)
        (fxmod . g$11784$13P8LC)
        (fxmin . g$11783$13P8LC)
        (fxmax . g$11782$13P8LC)
        (fxlength . g$11781$13P8LC)
        (fxior . g$11780$13P8LC)
        (fxif . g$6810$13P8LC)
        (fxfirst-bit-set . g$11779$13P8LC)
        (fxeven? . g$11778$13P8LC)
        (fxdiv0-and-mod0 . g$11777$13P8LC)
        (fxdiv0 . g$11776$13P8LC)
        (fxdiv-and-mod . g$11775$13P8LC)
        (fxdiv . g$11774$13P8LC)
        (fxcopy-bit-field . g$6813$13P8LC)
        (fxcopy-bit . g$6811$13P8LC)
        (fxbit-set? . g$11773$13P8LC)
        (fxbit-field . g$6812$13P8LC)
        (fxbit-count . g$11772$13P8LC)
        (fxarithmetic-shift-right . g$6815$13P8LC)
        (fxarithmetic-shift-left . g$6814$13P8LC)
        (fxarithmetic-shift . g$11771$13P8LC)
        (fxand . g$11770$13P8LC)
        (fx>? . g$11769$13P8LC)
        (fx>=? . g$11768$13P8LC)
        (fx=? . g$11767$13P8LC)
        (fx<? . g$11766$13P8LC)
        (fx<=? . g$11765$13P8LC)
        (fx-/carry . g$11764$13P8LC)
        (fx- . g$11763$13P8LC)
        (fx+/carry . g$11762$13P8LC)
        (fx+ . g$11761$13P8LC)
        (fx*/carry . g$11760$13P8LC)
        (fx* . g$11759$13P8LC)
        (greatest-fixnum . g$11758$13P8LC)
        (least-fixnum . g$11757$13P8LC)
        (fixnum-width . g$11756$13P8LC)
        (fixnum? . g$11755$13P8LC)
        (bitwise-rotate-bit-field . g$6768$13P8LC)
        (bitwise-reverse-bit-field . g$11754$13P8LC)
        (bitwise-length . g$11753$13P8LC)
        (bitwise-if . g$6762$13P8LC)
        (bitwise-first-bit-set . g$11752$13P8LC)
        (bitwise-copy-bit-field . g$6765$13P8LC)
        (bitwise-copy-bit . g$6763$13P8LC)
        (bitwise-bit-set? . g$11751$13P8LC)
        (bitwise-bit-field . g$11750$13P8LC)
        (bitwise-bit-count . g$11749$13P8LC)
        (bitwise-xor . g$11748$13P8LC)
        (bitwise-ior . g$11747$13P8LC)
        (bitwise-and . g$11746$13P8LC)
        (bitwise-not . g$11745$13P8LC)
        (bitwise-arithmetic-shift-right . g$6767$13P8LC)
        (bitwise-arithmetic-shift-left . g$6766$13P8LC)
        (bitwise-arithmetic-shift . g$11744$13P8LC)
        (zero? . g$11743$13P8LC)
        (vector? . g$11742$13P8LC)
        (vector-set! . g$11741$13P8LC)
        (vector-ref . g$11740$13P8LC)
        (vector-map . g$11739$13P8LC)
        (vector-length . g$11738$13P8LC)
        (vector-for-each . g$11737$13P8LC)
        (vector-fill! . g$11736$13P8LC)
        (vector->list . g$11735$13P8LC)
        (vector . g$11734$13P8LC)
        (values . g$11733$13P8LC)
        (truncate . g$11732$13P8LC)
        (tan . g$11731$13P8LC)
        (symbol? . g$11730$13P8LC)
        (symbol=? . g$11729$13P8LC)
        (symbol->string . g$11728$13P8LC)
        (substring . g$11727$13P8LC)
        (string? . g$11726$13P8LC)
        (string>? . g$11725$13P8LC)
        (string>=? . g$11724$13P8LC)
        (string=? . g$11723$13P8LC)
        (string<? . g$11722$13P8LC)
        (string<=? . g$11721$13P8LC)
        (string-ref . g$11720$13P8LC)
        (string-length . g$11719$13P8LC)
        (string-for-each . g$11718$13P8LC)
        (string-copy . g$11717$13P8LC)
        (string-append . g$11716$13P8LC)
        (string->symbol . g$11715$13P8LC)
        (string->number . g$11714$13P8LC)
        (string->list . g$11713$13P8LC)
        (string . g$11712$13P8LC)
        (sqrt . g$11711$13P8LC)
        (sin . g$11710$13P8LC)
        (round . g$11709$13P8LC)
        (reverse . g$11708$13P8LC)
        (real? . g$11707$13P8LC)
        (real-valued? . g$11706$13P8LC)
        (real-part . g$11705$13P8LC)
        (rationalize . g$5786$13P8LC)
        (rational? . g$11704$13P8LC)
        (rational-valued? . g$11703$13P8LC)
        (procedure? . g$11702$13P8LC)
        (positive? . g$11701$13P8LC)
        (pair? . g$11700$13P8LC)
        (odd? . g$11699$13P8LC)
        (numerator . g$11698$13P8LC)
        (number? . g$11697$13P8LC)
        (number->string . g$11696$13P8LC)
        (null? . g$11695$13P8LC)
        (not . g$11694$13P8LC)
        (negative? . g$11693$13P8LC)
        (nan? . g$11692$13P8LC)
        (min . g$11691$13P8LC)
        (max . g$11690$13P8LC)
        (map . g$11689$13P8LC)
        (make-vector . g$11688$13P8LC)
        (make-string . g$11687$13P8LC)
        (make-rectangular . g$11686$13P8LC)
        (make-polar . g$11685$13P8LC)
        (magnitude . g$11684$13P8LC)
        (log . g$11683$13P8LC)
        (list? . g$11682$13P8LC)
        (list-tail . g$11681$13P8LC)
        (list-ref . g$11680$13P8LC)
        (list->vector . g$11679$13P8LC)
        (list->string . g$11678$13P8LC)
        (list . g$11677$13P8LC)
        (length . g$11676$13P8LC)
        (lcm . g$11675$13P8LC)
        (integer? . g$11674$13P8LC)
        (integer-valued? . g$11673$13P8LC)
        (integer->char . g$11672$13P8LC)
        (infinite? . g$11671$13P8LC)
        (inexact? . g$11670$13P8LC)
        (inexact . g$11669$13P8LC)
        (imag-part . g$11668$13P8LC)
        (gcd . g$11667$13P8LC)
        (for-each . g$11666$13P8LC)
        (floor . g$11665$13P8LC)
        (finite? . g$11664$13P8LC)
        (expt . g$11663$13P8LC)
        (exp . g$11662$13P8LC)
        (exact? . g$11661$13P8LC)
        (exact-integer-sqrt . g$11660$13P8LC)
        (exact . g$11659$13P8LC)
        (even? . g$11658$13P8LC)
        (error . g$11657$13P8LC)
        (eqv? . g$11656$13P8LC)
        (equal? . g$11655$13P8LC)
        (eq? . g$11654$13P8LC)
        (dynamic-wind . g$11653$13P8LC)
        (div0-and-mod0 . g$11652$13P8LC)
        (mod0 . g$11651$13P8LC)
        (div0 . g$11650$13P8LC)
        (div-and-mod . g$11649$13P8LC)
        (mod . g$11648$13P8LC)
        (div . g$11647$13P8LC)
        (denominator . g$11646$13P8LC)
        (cos . g$11645$13P8LC)
        (cons . g$11644$13P8LC)
        (complex? . g$11643$13P8LC)
        (char? . g$11642$13P8LC)
        (char>? . g$11641$13P8LC)
        (char>=? . g$11640$13P8LC)
        (char=? . g$11639$13P8LC)
        (char<? . g$11638$13P8LC)
        (char<=? . g$11637$13P8LC)
        (char->integer . g$11636$13P8LC)
        (ceiling . g$11635$13P8LC)
        (call-with-values . g$11634$13P8LC)
        (call/cc . g$11633$13P8LC)
        (call-with-current-continuation . g$11632$13P8LC)
        (cddddr . g$5785$13P8LC)
        (cdddar . g$5784$13P8LC)
        (cddadr . g$5783$13P8LC)
        (cddaar . g$5782$13P8LC)
        (cdaddr . g$5781$13P8LC)
        (cdadar . g$5780$13P8LC)
        (cdaadr . g$5779$13P8LC)
        (cdaaar . g$5778$13P8LC)
        (cadddr . g$5777$13P8LC)
        (caddar . g$5776$13P8LC)
        (cadadr . g$5775$13P8LC)
        (cadaar . g$5774$13P8LC)
        (caaddr . g$5773$13P8LC)
        (caadar . g$5772$13P8LC)
        (caaadr . g$5771$13P8LC)
        (caaaar . g$5770$13P8LC)
        (cdddr . g$5769$13P8LC)
        (cddar . g$5768$13P8LC)
        (cdadr . g$5767$13P8LC)
        (cdaar . g$5766$13P8LC)
        (caddr . g$5765$13P8LC)
        (cadar . g$5764$13P8LC)
        (caadr . g$5763$13P8LC)
        (caaar . g$5762$13P8LC)
        (cddr . g$5761$13P8LC)
        (cdar . g$5760$13P8LC)
        (cadr . g$5759$13P8LC)
        (caar . g$5758$13P8LC)
        (cdr . g$11631$13P8LC)
        (car . g$11630$13P8LC)
        (boolean? . g$11629$13P8LC)
        (boolean=? . g$11628$13P8LC)
        (atan . g$11627$13P8LC)
        (assertion-violation . g$11626$13P8LC)
        (asin . g$11625$13P8LC)
        (apply . g$11624$13P8LC)
        (append . g$11623$13P8LC)
        (angle . g$11622$13P8LC)
        (acos . g$11621$13P8LC)
        (abs . g$11620$13P8LC)
        (/ . g$11619$13P8LC)
        (* . g$11618$13P8LC)
        (- . g$11617$13P8LC)
        (+ . g$11616$13P8LC)
        (>= . g$11615$13P8LC)
        (> . g$11614$13P8LC)
        (= . g$11613$13P8LC)
        (<= . g$11612$13P8LC)
        (< . g$11611$13P8LC)
        (make-record-printer . g$11610$13P8LC)
        (eqv-hash . g$11609$13P8LC)
        (eq-hash . g$11608$13P8LC)
        (reverse! . g$11607$13P8LC)
        (make-promise . g$6666$13P8LC)
        (load/args . g$11447$13P8LC)
        (printf . g$7198$13P8LC)
        (fprintf . g$7199$13P8LC)
        (format . g$7200$13P8LC)
        (get-arity . g$11606$13P8LC)
        (gc-collect . g$11605$13P8LC)
        (clr-type? . g$11604$13P8LC)
        (get-clr-type . g$11603$13P8LC)
        (get-command-line . g$11602$13P8LC)
        (vector-append . g$11601$13P8LC)
        (vector-filter . g$11600$13P8LC)
        (vector-reverse! . g$11599$13P8LC)
        (vector-contains? . g$11598$13P8LC)
        (vector-index-of . g$11597$13P8LC)
        (vector-copy . g$11596$13P8LC)
        (vector-binary-search . g$11595$13P8LC)
        (get-output-string . g$11594$13P8LC)
        (open-output-string . g$11593$13P8LC)
        (open-input-string . g$11592$13P8LC)
        (string-format . g$11591$13P8LC)
        (trace-printer . g$11444$13P8LC)
        (make-traced-procedure . g$11590$13P8LC)
        (make-traced-macro . g$7220$13P8LC)
        (assertion-error . g$8507$13P8LC)
        (pmap . g$11589$13P8LC)
        (time-it . g$11588$13P8LC)
        (make-parameter . g$7225$13P8LC)
        (library-locator . g$11587$13P8LC)
        (get-library-paths . g$11586$13P8LC)
        (environment-symbols . g$8488$13P8LC)
        (interaction-environment-symbols . g$8487$13P8LC)
        (library-path . g$7656$13P8LC)
        (library-extensions . g$7657$13P8LC)
        (installed-libraries . g$7677$13P8LC)
        (expand . g$8493$13P8LC)
        (&no-nans . g$11585$13P8LC)
        (&no-infinities . g$11584$13P8LC)
        (&i/o-encoding . g$11583$13P8LC)
        (&i/o-decoding . g$11582$13P8LC)
        (&i/o-port . g$11581$13P8LC)
        (&i/o-file-does-not-exist . g$11580$13P8LC)
        (&i/o-file-already-exists . g$11579$13P8LC)
        (&i/o-file-is-read-only . g$11578$13P8LC)
        (&i/o-file-protection . g$11577$13P8LC)
        (&i/o-filename . g$11576$13P8LC)
        (&i/o-invalid-position . g$11575$13P8LC)
        (&i/o-write . g$11574$13P8LC)
        (&i/o-read . g$11573$13P8LC)
        (&i/o . g$11572$13P8LC)
        (&non-continuable . g$11571$13P8LC)
        (&undefined . g$11570$13P8LC)
        (&syntax . g$11569$13P8LC)
        (&lexical . g$11568$13P8LC)
        (&implementation-restriction . g$11567$13P8LC)
        (&non . g$11566$13P8LC)
        (&who . g$11565$13P8LC)
        (&irritants . g$11564$13P8LC)
        (&assertion . g$11563$13P8LC)
        (&violation . g$11562$13P8LC)
        (&error . g$11561$13P8LC)
        (&serious . g$11560$13P8LC)
        (&warning . g$11559$13P8LC)
        (&message . g$11558$13P8LC)
        (&condition . g$11557$13P8LC)
        (define-condition-type . g$11556$13P8LC)
        (define-enumeration . g$11555$13P8LC)
        (define-record-type . g$11554$13P8LC)
        (parent-rtd . g$11553$13P8LC)
        (nongenerative . g$11552$13P8LC)
        (opaque . g$11551$13P8LC)
        (sealed . g$11550$13P8LC)
        (protocol . g$11549$13P8LC)
        (parent . g$11548$13P8LC)
        (immutable . g$11547$13P8LC)
        (mutable . g$11546$13P8LC)
        (fields . g$11545$13P8LC)
        (error-handling-mode . g$11544$13P8LC)
        (file-options . g$11543$13P8LC)
        (buffer-mode . g$11542$13P8LC)
        (eol-style . g$11541$13P8LC)
        (guard . g$11540$13P8LC)
        (trace-letrec-syntax . g$11539$13P8LC)
        (trace-let-syntax . g$11538$13P8LC)
        (trace-define-syntax . g$11537$13P8LC)
        (trace-define . g$11536$13P8LC)
        (trace-lambda . g$11535$13P8LC)
        (unsyntax-splicing . g$11534$13P8LC)
        (unsyntax . g$11533$13P8LC)
        (unquote-splicing . g$11532$13P8LC)
        (unquote . g$11531$13P8LC)
        (_ . g$11530$13P8LC)
        (else . g$11529$13P8LC)
        (=> . g$11528$13P8LC)
        (... . g$11527$13P8LC)
        (assert . g$11526$13P8LC)
        (endianness . g$11525$13P8LC)
        (delay . g$11524$13P8LC)
        (time . g$11523$13P8LC)
        (or . g$11522$13P8LC)
        (and . g$11521$13P8LC)
        (do . g$11520$13P8LC)
        (cond . g$11519$13P8LC)
        (let* . g$11518$13P8LC)
        (let . g$11517$13P8LC)
        (identifier-syntax . g$11516$13P8LC)
        (with-syntax . g$11515$13P8LC)
        (quasisyntax . g$11514$13P8LC)
        (quasiquote . g$11513$13P8LC)
        (syntax-rules . g$11512$13P8LC)
        (include-into . g$11511$13P8LC)
        (include . g$11510$13P8LC)
        (define-struct . g$11509$13P8LC)
        (let-values . g$11508$13P8LC)
        (let*-values . g$11507$13P8LC)
        (record-constructor-descriptor . g$11506$13P8LC)
        (record-type-descriptor . g$11505$13P8LC)
        (fluid-let-syntax . g$11504$13P8LC)
        (case . g$11503$13P8LC)
        (parameterize . g$11502$13P8LC)
        (unless . g$11501$13P8LC)
        (when . g$11500$13P8LC)
        (if . g$11499$13P8LC)
        (letrec* . g$11498$13P8LC)
        (letrec . g$11497$13P8LC)
        (type-descriptor . g$11496$13P8LC)
        (case-lambda . g$11495$13P8LC)
        (lambda . g$11494$13P8LC)
        (syntax . g$11493$13P8LC)
        (syntax-case . g$11492$13P8LC)
        (quote . g$11491$13P8LC)
        (foreign-call . g$11490$13P8LC)
        (letrec-syntax . g$11489$13P8LC)
        (let-syntax . g$11488$13P8LC)
        (set! . g$11487$13P8LC)
        (import . g$11486$13P8LC)
        (library . g$11485$13P8LC)
        (begin . g$11484$13P8LC)
        (module . g$11483$13P8LC)
        (define-syntax . g$11482$13P8LC)
        (define . g$11481$13P8LC))
      '((g$8386$13P8LC core-prim . ellipsis-map)
        (g$12123$13P8LC core-prim . &no-nans-rcd)
        (g$12122$13P8LC core-prim . &no-nans-rtd)
        (g$12121$13P8LC core-prim . &no-infinities-rcd)
        (g$12120$13P8LC core-prim . &no-infinities-rtd)
        (g$12119$13P8LC core-prim . &i/o-encoding-rcd)
        (g$12118$13P8LC core-prim . &i/o-encoding-rtd)
        (g$12117$13P8LC core-prim . &i/o-decoding-rcd)
        (g$12116$13P8LC core-prim . &i/o-decoding-rtd)
        (g$12115$13P8LC core-prim . &i/o-port-rcd)
        (g$12114$13P8LC core-prim . &i/o-port-rtd)
        (g$12113$13P8LC core-prim . &i/o-file-does-not-exist-rcd)
        (g$12112$13P8LC core-prim . &i/o-file-does-not-exist-rtd)
        (g$12111$13P8LC core-prim . &i/o-file-already-exists-rcd)
        (g$12110$13P8LC core-prim . &i/o-file-already-exists-rtd)
        (g$12109$13P8LC core-prim . &i/o-file-is-read-only-rcd)
        (g$12108$13P8LC core-prim . &i/o-file-is-read-only-rtd)
        (g$12107$13P8LC core-prim . &i/o-file-protection-rcd)
        (g$12106$13P8LC core-prim . &i/o-file-protection-rtd)
        (g$12105$13P8LC core-prim . &i/o-filename-rcd)
        (g$12104$13P8LC core-prim . &i/o-filename-rtd)
        (g$12103$13P8LC core-prim . &i/o-invalid-position-rcd)
        (g$12102$13P8LC core-prim . &i/o-invalid-position-rtd)
        (g$12101$13P8LC core-prim . &i/o-write-rcd)
        (g$12100$13P8LC core-prim . &i/o-write-rtd)
        (g$12099$13P8LC core-prim . &i/o-read-rcd)
        (g$12098$13P8LC core-prim . &i/o-read-rtd)
        (g$12097$13P8LC core-prim . &i/o-rcd)
        (g$12096$13P8LC core-prim . &i/o-rtd)
        (g$12095$13P8LC core-prim . &undefined-rcd)
        (g$12094$13P8LC core-prim . &undefined-rtd)
        (g$12093$13P8LC core-prim . &syntax-rcd)
        (g$12092$13P8LC core-prim . &syntax-rtd)
        (g$12091$13P8LC core-prim . &lexical-rcd)
        (g$12090$13P8LC core-prim . &lexical-rtd)
        (g$12089$13P8LC core-prim . &implementation-restriction-rcd)
        (g$12088$13P8LC core-prim . &implementation-restriction-rtd)
        (g$12087$13P8LC core-prim . &non-continuable-rcd)
        (g$12086$13P8LC core-prim . &non-continuable-rtd)
        (g$12085$13P8LC core-prim . &who-rcd)
        (g$12084$13P8LC core-prim . &who-rtd)
        (g$12083$13P8LC core-prim . &irritants-rcd)
        (g$12082$13P8LC core-prim . &irritants-rtd)
        (g$12081$13P8LC core-prim . &assertion-rcd)
        (g$12080$13P8LC core-prim . &assertion-rtd)
        (g$12079$13P8LC core-prim . &violation-rcd)
        (g$12078$13P8LC core-prim . &violation-rtd)
        (g$12077$13P8LC core-prim . &error-rcd)
        (g$12076$13P8LC core-prim . &error-rtd)
        (g$12075$13P8LC core-prim . &serious-rcd)
        (g$12074$13P8LC core-prim . &serious-rtd)
        (g$12073$13P8LC core-prim . &warning-rcd)
        (g$12072$13P8LC core-prim . &warning-rtd)
        (g$12071$13P8LC core-prim . &message-rcd)
        (g$12070$13P8LC core-prim . &message-rtd)
        (g$12069$13P8LC core-prim . &condition-rcd)
        (g$12068$13P8LC core-prim . &condition-rtd)
        (g$12067$13P8LC core-prim . library-letrec*)
        (g$12066$13P8LC core-prim . annotation-stripped)
        (g$12065$13P8LC core-prim . annotation-source)
        (g$12064$13P8LC core-prim . annotation-expression)
        (g$12063$13P8LC core-prim . annotation?)
        (g$12062$13P8LC core-prim . read-annotated)
        (g$12061$13P8LC core-prim . tanh)
        (g$12060$13P8LC core-prim . cosh)
        (g$12059$13P8LC core-prim . sinh)
        (g$12058$13P8LC core-prim . make-guid)
        (g$12057$13P8LC core-prim . unspecified?)
        (g$12056$13P8LC core-prim . make-trace)
        (g$12055$13P8LC core-prim . make-list)
        (g$12054$13P8LC core-prim . last-pair)
        (g$12053$13P8LC core-prim . load-r5rs)
        (g$12052$13P8LC core-prim . license)
        (g$12051$13P8LC core-prim . stacktrace)
        (g$11449$13P8LC core-prim . ironscheme-build)
        (g$12050$13P8LC core-prim . define-clr-class-internal)
        (g$12049$13P8LC core-prim . clr-field-set!-internal)
        (g$12048$13P8LC core-prim . clr-field-get-internal)
        (g$12047$13P8LC core-prim . clr-cast-internal)
        (g$12046$13P8LC core-prim . clr-call-internal)
        (g$12045$13P8LC core-prim . clr-new-internal)
        (g$12044$13P8LC core-prim . clr-new-array-internal)
        (g$12043$13P8LC core-prim . clr-is-internal)
        (g$12042$13P8LC core-prim . clr-reference-internal)
        (g$12041$13P8LC core-prim . clr-using-internal)
        (g$12040$13P8LC core-prim . clr-clear-usings-internal)
        (g$8508$13P8LC core-prim . syntax-error)
        (g$8381$13P8LC core-prim . syntax-dispatch)
        (g$12039$13P8LC core-prim . compile-core)
        (g$12038$13P8LC core-prim . eval-core)
        (g$12037$13P8LC core-prim . set-symbol-value!)
        (g$12036$13P8LC core-prim . symbol-value)
        (g$12035$13P8LC core-prim . ungensym)
        (g$12034$13P8LC core-prim . gensym)
        (g$12033$13P8LC core-prim . void)
        (g$12032$13P8LC core-prim . load-serialized-library)
        (g$12031$13P8LC core-prim . serialize-library)
        (g$11451$13P8LC core-prim . compile-system-libraries)
        (g$11453$13P8LC core-prim . compile->closure)
        (g$11452$13P8LC core-prim . compile)
        (g$11448$13P8LC core-prim . load)
        (g$8517$13P8LC core-prim . interaction-environment)
        (g$12030$13P8LC core-prim . char-ready?)
        (g$12029$13P8LC core-prim . string-upcase)
        (g$12028$13P8LC core-prim . string-titlecase)
        (g$12027$13P8LC core-prim . string-normalize-nfkd)
        (g$12026$13P8LC core-prim . string-normalize-nfkc)
        (g$12025$13P8LC core-prim . string-normalize-nfd)
        (g$12024$13P8LC core-prim . string-normalize-nfc)
        (g$12023$13P8LC core-prim . string-foldcase)
        (g$12022$13P8LC core-prim . string-downcase)
        (g$12021$13P8LC core-prim . string-ci>?)
        (g$12020$13P8LC core-prim . string-ci>=?)
        (g$12019$13P8LC core-prim . string-ci=?)
        (g$12018$13P8LC core-prim . string-ci<?)
        (g$12017$13P8LC core-prim . string-ci<=?)
        (g$12016$13P8LC core-prim . char-whitespace?)
        (g$12015$13P8LC core-prim . char-upper-case?)
        (g$12014$13P8LC core-prim . char-title-case?)
        (g$12013$13P8LC core-prim . char-numeric?)
        (g$12012$13P8LC core-prim . char-lower-case?)
        (g$12011$13P8LC core-prim . char-general-category)
        (g$12010$13P8LC core-prim . char-upcase)
        (g$12009$13P8LC core-prim . char-titlecase)
        (g$12008$13P8LC core-prim . char-foldcase)
        (g$12007$13P8LC core-prim . char-downcase)
        (g$12006$13P8LC core-prim . char-ci>?)
        (g$12005$13P8LC core-prim . char-ci>=?)
        (g$12004$13P8LC core-prim . char-ci=?)
        (g$12003$13P8LC core-prim . char-ci<?)
        (g$12002$13P8LC core-prim . char-ci<=?)
        (g$12001$13P8LC core-prim . char-alphabetic?)
        (g$8118$13P8LC core-prim . variable-transformer-procedure)
        (g$8117$13P8LC core-prim . variable-transformer?)
        (g$8116$13P8LC core-prim . make-variable-transformer)
        (g$8512$13P8LC core-prim . identifier?)
        (g$8501$13P8LC core-prim . generate-temporaries)
        (g$8502$13P8LC core-prim . free-identifier=?)
        (g$8514$13P8LC core-prim . syntax->datum)
        (g$8513$13P8LC core-prim . datum->syntax)
        (g$8503$13P8LC core-prim . bound-identifier=?)
        (g$12000$13P8LC core-prim . record-type-descriptor?)
        (g$11999$13P8LC core-prim . record-predicate)
        (g$11998$13P8LC core-prim . record-mutator)
        (g$11997$13P8LC core-prim . record-constructor)
        (g$11996$13P8LC core-prim . record-accessor)
        (g$11995$13P8LC core-prim . make-record-type-descriptor)
        (g$11994$13P8LC core-prim . make-record-constructor-descriptor)
        (g$11993$13P8LC core-prim . record?)
        (g$11992$13P8LC core-prim . record-type-uid)
        (g$11991$13P8LC core-prim . record-type-sealed?)
        (g$11990$13P8LC core-prim . record-type-parent)
        (g$11989$13P8LC core-prim . record-type-opaque?)
        (g$11988$13P8LC core-prim . record-type-name)
        (g$11987$13P8LC core-prim . record-type-generative?)
        (g$11986$13P8LC core-prim . record-type-field-names)
        (g$11985$13P8LC core-prim . record-rtd)
        (g$11984$13P8LC core-prim . record-field-mutable?)
        (g$6170$13P8LC core-prim . delete-file)
        (g$6169$13P8LC core-prim . file-exists?)
        (g$11983$13P8LC core-prim . vector-sort!)
        (g$11982$13P8LC core-prim . vector-sort)
        (g$6683$13P8LC core-prim . list-sort)
        (g$11981$13P8LC core-prim . symbol-hash)
        (g$11980$13P8LC core-prim . string-ci-hash)
        (g$11979$13P8LC core-prim . string-hash)
        (g$11978$13P8LC core-prim . equal-hash)
        (g$11977$13P8LC core-prim . hashtable-equivalence-function)
        (g$11976$13P8LC core-prim . make-hashtable)
        (g$11975$13P8LC core-prim . hashtable-hash-function)
        (g$6137$13P8LC core-prim . make-eqv-hashtable)
        (g$6136$13P8LC core-prim . make-eq-hashtable)
        (g$11974$13P8LC core-prim . hashtable?)
        (g$6143$13P8LC core-prim . hashtable-update!)
        (g$6138$13P8LC core-prim . hashtable-size)
        (g$6140$13P8LC core-prim . hashtable-set!)
        (g$6139$13P8LC core-prim . hashtable-ref)
        (g$11973$13P8LC core-prim . hashtable-mutable?)
        (g$11972$13P8LC core-prim . hashtable-keys)
        (g$11971$13P8LC core-prim . hashtable-entries)
        (g$6141$13P8LC core-prim . hashtable-delete!)
        (g$11970$13P8LC core-prim . hashtable-copy)
        (g$6142$13P8LC core-prim . hashtable-contains?)
        (g$6144$13P8LC core-prim . hashtable-clear!)
        (g$11969$13P8LC core-prim . call-with-output-file)
        (g$11968$13P8LC core-prim . call-with-input-file)
        (g$11967$13P8LC core-prim . write-char)
        (g$11966$13P8LC core-prim . write)
        (g$11965$13P8LC core-prim . with-output-to-file)
        (g$11964$13P8LC core-prim . with-input-from-file)
        (g$11963$13P8LC core-prim . read-char)
        (g$11962$13P8LC core-prim . read)
        (g$11961$13P8LC core-prim . peek-char)
        (g$11960$13P8LC core-prim . open-output-file)
        (g$11959$13P8LC core-prim . open-input-file)
        (g$11958$13P8LC core-prim . newline)
        (g$11957$13P8LC core-prim . display)
        (g$11956$13P8LC core-prim . close-output-port)
        (g$11955$13P8LC core-prim . close-input-port)
        (g$11954$13P8LC core-prim . eof-object?)
        (g$11953$13P8LC core-prim . eof-object)
        (g$11952$13P8LC core-prim . current-error-port)
        (g$11951$13P8LC core-prim . current-output-port)
        (g$11950$13P8LC core-prim . current-input-port)
        (g$11949$13P8LC core-prim . output-port?)
        (g$11948$13P8LC core-prim . input-port?)
        (g$11947$13P8LC core-prim . utf-8-codec)
        (g$11946$13P8LC core-prim . utf-16-codec)
        (g$11945$13P8LC core-prim . transcoder-error-handling-mode)
        (g$11944$13P8LC core-prim . transcoder-eol-style)
        (g$11943$13P8LC core-prim . transcoder-codec)
        (g$11942$13P8LC core-prim . transcoded-port)
        (g$11941$13P8LC core-prim . textual-port?)
        (g$11940$13P8LC core-prim . string->bytevector)
        (g$11939$13P8LC core-prim . standard-output-port)
        (g$11938$13P8LC core-prim . standard-input-port)
        (g$11937$13P8LC core-prim . standard-error-port)
        (g$11936$13P8LC core-prim . set-port-position!)
        (g$11935$13P8LC core-prim . put-u8)
        (g$11934$13P8LC core-prim . put-string)
        (g$11933$13P8LC core-prim . put-datum)
        (g$11932$13P8LC core-prim . put-char)
        (g$11931$13P8LC core-prim . put-bytevector)
        (g$7071$13P8LC core-prim . port?)
        (g$11930$13P8LC core-prim . port-transcoder)
        (g$11929$13P8LC core-prim . port-position)
        (g$11928$13P8LC core-prim . port-has-set-port-position!?)
        (g$11927$13P8LC core-prim . port-has-port-position?)
        (g$11926$13P8LC core-prim . port-eof?)
        (g$11925$13P8LC core-prim . output-port-buffer-mode)
        (g$7070$13P8LC core-prim . open-string-output-port)
        (g$11924$13P8LC core-prim . open-string-input-port)
        (g$11923$13P8LC core-prim . open-file-output-port)
        (g$11922$13P8LC core-prim . open-file-input/output-port)
        (g$11921$13P8LC core-prim . open-file-input-port)
        (g$11920$13P8LC core-prim . open-bytevector-output-port)
        (g$11919$13P8LC core-prim . open-bytevector-input-port)
        (g$11918$13P8LC core-prim . native-transcoder)
        (g$11917$13P8LC core-prim . native-eol-style)
        (g$11916$13P8LC core-prim . make-transcoder)
        (g$11915$13P8LC core-prim . latin-1-codec)
        (g$6927$13P8LC core-prim . make-i/o-write-error)
        (g$6913$13P8LC core-prim . make-i/o-read-error)
        (g$7032$13P8LC core-prim . make-i/o-port-error)
        (g$6942$13P8LC core-prim . make-i/o-invalid-position-error)
        (g$6959$13P8LC core-prim . make-i/o-filename-error)
        (g$6975$13P8LC core-prim . make-i/o-file-protection-error)
        (g$6989$13P8LC core-prim . make-i/o-file-is-read-only-error)
        (g$7017$13P8LC core-prim . make-i/o-file-does-not-exist-error)
        (g$7003$13P8LC core-prim . make-i/o-file-already-exists-error)
        (g$6899$13P8LC core-prim . make-i/o-error)
        (g$7063$13P8LC core-prim . make-i/o-encoding-error)
        (g$7048$13P8LC core-prim . make-i/o-decoding-error)
        (g$11914$13P8LC core-prim . make-custom-textual-output-port)
        (g$11913$13P8LC core-prim . make-custom-textual-input/output-port)
        (g$11912$13P8LC core-prim . make-custom-textual-input-port)
        (g$11911$13P8LC core-prim . make-custom-binary-output-port)
        (g$11910$13P8LC core-prim . make-custom-binary-input/output-port)
        (g$11909$13P8LC core-prim . make-custom-binary-input-port)
        (g$11908$13P8LC core-prim . make-bytevector)
        (g$11907$13P8LC core-prim . lookahead-u8)
        (g$11906$13P8LC core-prim . lookahead-char)
        (g$6928$13P8LC core-prim . i/o-write-error?)
        (g$6914$13P8LC core-prim . i/o-read-error?)
        (g$7034$13P8LC core-prim . i/o-port-error?)
        (g$6944$13P8LC core-prim . i/o-invalid-position-error?)
        (g$6945$13P8LC core-prim . i/o-error-position)
        (g$6961$13P8LC core-prim . i/o-filename-error?)
        (g$6976$13P8LC core-prim . i/o-file-protection-error?)
        (g$6990$13P8LC core-prim . i/o-file-is-read-only-error?)
        (g$7018$13P8LC core-prim . i/o-file-does-not-exist-error?)
        (g$7004$13P8LC core-prim . i/o-file-already-exists-error?)
        (g$6900$13P8LC core-prim . i/o-error?)
        (g$7035$13P8LC core-prim . i/o-error-port)
        (g$6962$13P8LC core-prim . i/o-error-filename)
        (g$7065$13P8LC core-prim . i/o-encoding-error?)
        (g$7066$13P8LC core-prim . i/o-encoding-error-char)
        (g$7049$13P8LC core-prim . i/o-decoding-error?)
        (g$11905$13P8LC core-prim . get-u8)
        (g$11904$13P8LC core-prim . get-string-n!)
        (g$11903$13P8LC core-prim . get-string-n)
        (g$11902$13P8LC core-prim . get-string-all)
        (g$11901$13P8LC core-prim . get-line)
        (g$11900$13P8LC core-prim . get-datum)
        (g$11899$13P8LC core-prim . get-char)
        (g$11898$13P8LC core-prim . get-bytevector-some)
        (g$11897$13P8LC core-prim . get-bytevector-n!)
        (g$11896$13P8LC core-prim . get-bytevector-n)
        (g$11895$13P8LC core-prim . get-bytevector-all)
        (g$11894$13P8LC core-prim . flush-output-port)
        (g$11893$13P8LC core-prim . close-port)
        (g$11892$13P8LC core-prim . call-with-string-output-port)
        (g$11891$13P8LC core-prim . call-with-port)
        (g$11890$13P8LC core-prim . call-with-bytevector-output-port)
        (g$11889$13P8LC core-prim . bytevector->string)
        (g$11888$13P8LC core-prim . buffer-mode?)
        (g$11887$13P8LC core-prim . binary-port?)
        (g$8492$13P8LC core-prim . scheme-report-environment)
        (g$6663$13P8LC core-prim . quotient)
        (g$8491$13P8LC core-prim . null-environment)
        (g$6664$13P8LC core-prim . remainder)
        (g$6665$13P8LC core-prim . modulo)
        (g$11886$13P8LC core-prim . inexact->exact)
        (g$6667$13P8LC core-prim . force)
        (g$11885$13P8LC core-prim . exact->inexact)
        (g$11884$13P8LC core-prim . exit)
        (g$11445$13P8LC core-prim . command-line)
        (g$11883$13P8LC core-prim . string-fill!)
        (g$11882$13P8LC core-prim . string-set!)
        (g$11881$13P8LC core-prim . set-cdr!)
        (g$11880$13P8LC core-prim . set-car!)
        (g$6250$13P8LC core-prim . remove)
        (g$6251$13P8LC core-prim . remv)
        (g$6236$13P8LC core-prim . remp)
        (g$6252$13P8LC core-prim . remq)
        (g$6235$13P8LC core-prim . partition)
        (g$11879$13P8LC core-prim . memv)
        (g$11878$13P8LC core-prim . memq)
        (g$6242$13P8LC core-prim . memp)
        (g$6241$13P8LC core-prim . member)
        (g$6246$13P8LC core-prim . exists)
        (g$6245$13P8LC core-prim . for-all)
        (g$6249$13P8LC core-prim . fold-right)
        (g$6248$13P8LC core-prim . fold-left)
        (g$6234$13P8LC core-prim . find)
        (g$6237$13P8LC core-prim . filter)
        (g$6247$13P8LC core-prim . cons*)
        (g$6238$13P8LC core-prim . assv)
        (g$11877$13P8LC core-prim . assq)
        (g$6240$13P8LC core-prim . assp)
        (g$6239$13P8LC core-prim . assoc)
        (g$11876$13P8LC core-prim . with-exception-handler)
        (g$11875$13P8LC core-prim . raise-continuable)
        (g$11874$13P8LC core-prim . raise)
        (g$8494$13P8LC core-prim . eval)
        (g$8490$13P8LC core-prim . environment)
        (g$7114$13P8LC core-prim . make-enumeration)
        (g$7121$13P8LC core-prim . enum-set=?)
        (g$7115$13P8LC core-prim . enum-set-universe)
        (g$7122$13P8LC core-prim . enum-set-union)
        (g$7120$13P8LC core-prim . enum-set-subset?)
        (g$7126$13P8LC core-prim . enum-set-projection)
        (g$7119$13P8LC core-prim . enum-set-member?)
        (g$7123$13P8LC core-prim . enum-set-intersection)
        (g$7116$13P8LC core-prim . enum-set-indexer)
        (g$7124$13P8LC core-prim . enum-set-difference)
        (g$7117$13P8LC core-prim . enum-set-constructor)
        (g$7125$13P8LC core-prim . enum-set-complement)
        (g$7118$13P8LC core-prim . enum-set->list)
        (g$6574$13P8LC core-prim . who-condition?)
        (g$6485$13P8LC core-prim . warning?)
        (g$6527$13P8LC core-prim . violation?)
        (g$6651$13P8LC core-prim . undefined-violation?)
        (g$6635$13P8LC core-prim . syntax-violation?)
        (g$6637$13P8LC core-prim . syntax-violation-subform)
        (g$6636$13P8LC core-prim . syntax-violation-form)
        (g$8511$13P8LC core-prim . syntax-violation)
        (g$11873$13P8LC core-prim . simple-conditions)
        (g$6499$13P8LC core-prim . serious-condition?)
        (g$6589$13P8LC core-prim . non-continuable-violation?)
        (g$6470$13P8LC core-prim . message-condition?)
        (g$6572$13P8LC core-prim . make-who-condition)
        (g$6484$13P8LC core-prim . make-warning)
        (g$6526$13P8LC core-prim . make-violation)
        (g$6650$13P8LC core-prim . make-undefined-violation)
        (g$6632$13P8LC core-prim . make-syntax-violation)
        (g$6498$13P8LC core-prim . make-serious-condition)
        (g$6588$13P8LC core-prim . make-non-continuable-violation)
        (g$6468$13P8LC core-prim . make-message-condition)
        (g$6616$13P8LC core-prim . make-lexical-violation)
        (g$6555$13P8LC core-prim . make-irritants-condition)
        (g$6602$13P8LC core-prim . make-implementation-restriction-violation)
        (g$6512$13P8LC core-prim . make-error)
        (g$6540$13P8LC core-prim . make-assertion-violation)
        (g$6617$13P8LC core-prim . lexical-violation?)
        (g$6557$13P8LC core-prim . irritants-condition?)
        (g$6603$13P8LC core-prim . implementation-restriction-violation?)
        (g$6513$13P8LC core-prim . error?)
        (g$6575$13P8LC core-prim . condition-who)
        (g$11872$13P8LC core-prim . condition-predicate)
        (g$6471$13P8LC core-prim . condition-message)
        (g$6558$13P8LC core-prim . condition-irritants)
        (g$11871$13P8LC core-prim . condition-accessor)
        (g$11870$13P8LC core-prim . condition)
        (g$6541$13P8LC core-prim . assertion-violation?)
        (g$11869$13P8LC core-prim . condition?)
        (g$11868$13P8LC core-prim . utf32->string)
        (g$11867$13P8LC core-prim . utf16->string)
        (g$11866$13P8LC core-prim . utf8->string)
        (g$11865$13P8LC core-prim . uint-list->bytevector)
        (g$11864$13P8LC core-prim . u8-list->bytevector)
        (g$11863$13P8LC core-prim . string->utf8)
        (g$11862$13P8LC core-prim . string->utf32)
        (g$11861$13P8LC core-prim . string->utf16)
        (g$11860$13P8LC core-prim . sint-list->bytevector)
        (g$6326$13P8LC core-prim . native-endianness)
        (g$11859$13P8LC core-prim . bytevector?)
        (g$11858$13P8LC core-prim . bytevector=?)
        (g$11857$13P8LC core-prim . bytevector-uint-set!)
        (g$11856$13P8LC core-prim . bytevector-uint-ref)
        (g$11855$13P8LC core-prim . bytevector-u8-set!)
        (g$11854$13P8LC core-prim . bytevector-u8-ref)
        (g$6347$13P8LC core-prim . bytevector-u64-set!)
        (g$6343$13P8LC core-prim . bytevector-u64-ref)
        (g$6349$13P8LC core-prim . bytevector-u64-native-set!)
        (g$6345$13P8LC core-prim . bytevector-u64-native-ref)
        (g$6339$13P8LC core-prim . bytevector-u32-set!)
        (g$6335$13P8LC core-prim . bytevector-u32-ref)
        (g$6341$13P8LC core-prim . bytevector-u32-native-set!)
        (g$6337$13P8LC core-prim . bytevector-u32-native-ref)
        (g$6331$13P8LC core-prim . bytevector-u16-set!)
        (g$6327$13P8LC core-prim . bytevector-u16-ref)
        (g$6333$13P8LC core-prim . bytevector-u16-native-set!)
        (g$6329$13P8LC core-prim . bytevector-u16-native-ref)
        (g$11853$13P8LC core-prim . bytevector-sint-set!)
        (g$11852$13P8LC core-prim . bytevector-sint-ref)
        (g$11851$13P8LC core-prim . bytevector-s8-set!)
        (g$11850$13P8LC core-prim . bytevector-s8-ref)
        (g$6348$13P8LC core-prim . bytevector-s64-set!)
        (g$6344$13P8LC core-prim . bytevector-s64-ref)
        (g$6350$13P8LC core-prim . bytevector-s64-native-set!)
        (g$6346$13P8LC core-prim . bytevector-s64-native-ref)
        (g$6340$13P8LC core-prim . bytevector-s32-set!)
        (g$6336$13P8LC core-prim . bytevector-s32-ref)
        (g$6342$13P8LC core-prim . bytevector-s32-native-set!)
        (g$6338$13P8LC core-prim . bytevector-s32-native-ref)
        (g$6332$13P8LC core-prim . bytevector-s16-set!)
        (g$6328$13P8LC core-prim . bytevector-s16-ref)
        (g$6334$13P8LC core-prim . bytevector-s16-native-set!)
        (g$6330$13P8LC core-prim . bytevector-s16-native-ref)
        (g$11849$13P8LC core-prim . bytevector-length)
        (g$11848$13P8LC core-prim . bytevector-ieee-single-set!)
        (g$11847$13P8LC core-prim . bytevector-ieee-single-ref)
        (g$6353$13P8LC core-prim . bytevector-ieee-single-native-set!)
        (g$6351$13P8LC core-prim . bytevector-ieee-single-native-ref)
        (g$11846$13P8LC core-prim . bytevector-ieee-double-set!)
        (g$11845$13P8LC core-prim . bytevector-ieee-double-ref)
        (g$6354$13P8LC core-prim . bytevector-ieee-double-native-set!)
        (g$6352$13P8LC core-prim . bytevector-ieee-double-native-ref)
        (g$11844$13P8LC core-prim . bytevector-fill!)
        (g$11843$13P8LC core-prim . bytevector-copy!)
        (g$11842$13P8LC core-prim . bytevector-copy)
        (g$11841$13P8LC core-prim . bytevector->uint-list)
        (g$11840$13P8LC core-prim . bytevector->u8-list)
        (g$11839$13P8LC core-prim . bytevector->sint-list)
        (g$6885$13P8LC core-prim . no-nans-violation?)
        (g$6871$13P8LC core-prim . no-infinities-violation?)
        (g$6884$13P8LC core-prim . make-no-nans-violation)
        (g$6870$13P8LC core-prim . make-no-infinities-violation)
        (g$11838$13P8LC core-prim . real->flonum)
        (g$11837$13P8LC core-prim . flzero?)
        (g$11836$13P8LC core-prim . fltruncate)
        (g$11835$13P8LC core-prim . fltan)
        (g$11834$13P8LC core-prim . flsqrt)
        (g$11833$13P8LC core-prim . flsin)
        (g$11832$13P8LC core-prim . flround)
        (g$11831$13P8LC core-prim . flpositive?)
        (g$11830$13P8LC core-prim . flonum?)
        (g$11829$13P8LC core-prim . flodd?)
        (g$11828$13P8LC core-prim . flnumerator)
        (g$11827$13P8LC core-prim . flnegative?)
        (g$11826$13P8LC core-prim . flnan?)
        (g$11825$13P8LC core-prim . flmod0)
        (g$11824$13P8LC core-prim . flmod)
        (g$11823$13P8LC core-prim . flmin)
        (g$11822$13P8LC core-prim . flmax)
        (g$11821$13P8LC core-prim . fllog)
        (g$11820$13P8LC core-prim . flinteger?)
        (g$11819$13P8LC core-prim . flinfinite?)
        (g$11818$13P8LC core-prim . flfloor)
        (g$11817$13P8LC core-prim . flfinite?)
        (g$11816$13P8LC core-prim . flexpt)
        (g$11815$13P8LC core-prim . flexp)
        (g$11814$13P8LC core-prim . fleven?)
        (g$11813$13P8LC core-prim . fldiv0-and-mod0)
        (g$11812$13P8LC core-prim . fldiv0)
        (g$11811$13P8LC core-prim . fldiv-and-mod)
        (g$11810$13P8LC core-prim . fldiv)
        (g$11809$13P8LC core-prim . fldenominator)
        (g$11808$13P8LC core-prim . flcos)
        (g$11807$13P8LC core-prim . flceiling)
        (g$11806$13P8LC core-prim . flatan)
        (g$11805$13P8LC core-prim . flasin)
        (g$11804$13P8LC core-prim . flacos)
        (g$11803$13P8LC core-prim . flabs)
        (g$11802$13P8LC core-prim . fl>?)
        (g$11801$13P8LC core-prim . fl>=?)
        (g$11800$13P8LC core-prim . fl=?)
        (g$11799$13P8LC core-prim . fl<?)
        (g$11798$13P8LC core-prim . fl<=?)
        (g$11797$13P8LC core-prim . fl/)
        (g$11796$13P8LC core-prim . fl-)
        (g$11795$13P8LC core-prim . fl+)
        (g$11794$13P8LC core-prim . fl*)
        (g$11793$13P8LC core-prim . fixnum->flonum)
        (g$11792$13P8LC core-prim . fxzero?)
        (g$11791$13P8LC core-prim . fxxor)
        (g$6816$13P8LC core-prim . fxrotate-bit-field)
        (g$11790$13P8LC core-prim . fxreverse-bit-field)
        (g$11789$13P8LC core-prim . fxpositive?)
        (g$11788$13P8LC core-prim . fxodd?)
        (g$11787$13P8LC core-prim . fxnot)
        (g$11786$13P8LC core-prim . fxnegative?)
        (g$11785$13P8LC core-prim . fxmod0)
        (g$11784$13P8LC core-prim . fxmod)
        (g$11783$13P8LC core-prim . fxmin)
        (g$11782$13P8LC core-prim . fxmax)
        (g$11781$13P8LC core-prim . fxlength)
        (g$11780$13P8LC core-prim . fxior)
        (g$6810$13P8LC core-prim . fxif)
        (g$11779$13P8LC core-prim . fxfirst-bit-set)
        (g$11778$13P8LC core-prim . fxeven?)
        (g$11777$13P8LC core-prim . fxdiv0-and-mod0)
        (g$11776$13P8LC core-prim . fxdiv0)
        (g$11775$13P8LC core-prim . fxdiv-and-mod)
        (g$11774$13P8LC core-prim . fxdiv)
        (g$6813$13P8LC core-prim . fxcopy-bit-field)
        (g$6811$13P8LC core-prim . fxcopy-bit)
        (g$11773$13P8LC core-prim . fxbit-set?)
        (g$6812$13P8LC core-prim . fxbit-field)
        (g$11772$13P8LC core-prim . fxbit-count)
        (g$6815$13P8LC core-prim . fxarithmetic-shift-right)
        (g$6814$13P8LC core-prim . fxarithmetic-shift-left)
        (g$11771$13P8LC core-prim . fxarithmetic-shift)
        (g$11770$13P8LC core-prim . fxand)
        (g$11769$13P8LC core-prim . fx>?)
        (g$11768$13P8LC core-prim . fx>=?)
        (g$11767$13P8LC core-prim . fx=?)
        (g$11766$13P8LC core-prim . fx<?)
        (g$11765$13P8LC core-prim . fx<=?)
        (g$11764$13P8LC core-prim . fx-/carry)
        (g$11763$13P8LC core-prim . fx-)
        (g$11762$13P8LC core-prim . fx+/carry)
        (g$11761$13P8LC core-prim . fx+)
        (g$11760$13P8LC core-prim . fx*/carry)
        (g$11759$13P8LC core-prim . fx*)
        (g$11758$13P8LC core-prim . greatest-fixnum)
        (g$11757$13P8LC core-prim . least-fixnum)
        (g$11756$13P8LC core-prim . fixnum-width)
        (g$11755$13P8LC core-prim . fixnum?)
        (g$6768$13P8LC core-prim . bitwise-rotate-bit-field)
        (g$11754$13P8LC core-prim . bitwise-reverse-bit-field)
        (g$11753$13P8LC core-prim . bitwise-length)
        (g$6762$13P8LC core-prim . bitwise-if)
        (g$11752$13P8LC core-prim . bitwise-first-bit-set)
        (g$6765$13P8LC core-prim . bitwise-copy-bit-field)
        (g$6763$13P8LC core-prim . bitwise-copy-bit)
        (g$11751$13P8LC core-prim . bitwise-bit-set?)
        (g$11750$13P8LC core-prim . bitwise-bit-field)
        (g$11749$13P8LC core-prim . bitwise-bit-count)
        (g$11748$13P8LC core-prim . bitwise-xor)
        (g$11747$13P8LC core-prim . bitwise-ior)
        (g$11746$13P8LC core-prim . bitwise-and)
        (g$11745$13P8LC core-prim . bitwise-not)
        (g$6767$13P8LC core-prim . bitwise-arithmetic-shift-right)
        (g$6766$13P8LC core-prim . bitwise-arithmetic-shift-left)
        (g$11744$13P8LC core-prim . bitwise-arithmetic-shift)
        (g$11743$13P8LC core-prim . zero?)
        (g$11742$13P8LC core-prim . vector?)
        (g$11741$13P8LC core-prim . vector-set!)
        (g$11740$13P8LC core-prim . vector-ref)
        (g$11739$13P8LC core-prim . vector-map)
        (g$11738$13P8LC core-prim . vector-length)
        (g$11737$13P8LC core-prim . vector-for-each)
        (g$11736$13P8LC core-prim . vector-fill!)
        (g$11735$13P8LC core-prim . vector->list)
        (g$11734$13P8LC core-prim . vector)
        (g$11733$13P8LC core-prim . values)
        (g$11732$13P8LC core-prim . truncate)
        (g$11731$13P8LC core-prim . tan)
        (g$11730$13P8LC core-prim . symbol?)
        (g$11729$13P8LC core-prim . symbol=?)
        (g$11728$13P8LC core-prim . symbol->string)
        (g$11727$13P8LC core-prim . substring)
        (g$11726$13P8LC core-prim . string?)
        (g$11725$13P8LC core-prim . string>?)
        (g$11724$13P8LC core-prim . string>=?)
        (g$11723$13P8LC core-prim . string=?)
        (g$11722$13P8LC core-prim . string<?)
        (g$11721$13P8LC core-prim . string<=?)
        (g$11720$13P8LC core-prim . string-ref)
        (g$11719$13P8LC core-prim . string-length)
        (g$11718$13P8LC core-prim . string-for-each)
        (g$11717$13P8LC core-prim . string-copy)
        (g$11716$13P8LC core-prim . string-append)
        (g$11715$13P8LC core-prim . string->symbol)
        (g$11714$13P8LC core-prim . string->number)
        (g$11713$13P8LC core-prim . string->list)
        (g$11712$13P8LC core-prim . string)
        (g$11711$13P8LC core-prim . sqrt)
        (g$11710$13P8LC core-prim . sin)
        (g$11709$13P8LC core-prim . round)
        (g$11708$13P8LC core-prim . reverse)
        (g$11707$13P8LC core-prim . real?)
        (g$11706$13P8LC core-prim . real-valued?)
        (g$11705$13P8LC core-prim . real-part)
        (g$5786$13P8LC core-prim . rationalize)
        (g$11704$13P8LC core-prim . rational?)
        (g$11703$13P8LC core-prim . rational-valued?)
        (g$11702$13P8LC core-prim . procedure?)
        (g$11701$13P8LC core-prim . positive?)
        (g$11700$13P8LC core-prim . pair?)
        (g$11699$13P8LC core-prim . odd?)
        (g$11698$13P8LC core-prim . numerator)
        (g$11697$13P8LC core-prim . number?)
        (g$11696$13P8LC core-prim . number->string)
        (g$11695$13P8LC core-prim . null?)
        (g$11694$13P8LC core-prim . not)
        (g$11693$13P8LC core-prim . negative?)
        (g$11692$13P8LC core-prim . nan?)
        (g$11691$13P8LC core-prim . min)
        (g$11690$13P8LC core-prim . max)
        (g$11689$13P8LC core-prim . map)
        (g$11688$13P8LC core-prim . make-vector)
        (g$11687$13P8LC core-prim . make-string)
        (g$11686$13P8LC core-prim . make-rectangular)
        (g$11685$13P8LC core-prim . make-polar)
        (g$11684$13P8LC core-prim . magnitude)
        (g$11683$13P8LC core-prim . log)
        (g$11682$13P8LC core-prim . list?)
        (g$11681$13P8LC core-prim . list-tail)
        (g$11680$13P8LC core-prim . list-ref)
        (g$11679$13P8LC core-prim . list->vector)
        (g$11678$13P8LC core-prim . list->string)
        (g$11677$13P8LC core-prim . list)
        (g$11676$13P8LC core-prim . length)
        (g$11675$13P8LC core-prim . lcm)
        (g$11674$13P8LC core-prim . integer?)
        (g$11673$13P8LC core-prim . integer-valued?)
        (g$11672$13P8LC core-prim . integer->char)
        (g$11671$13P8LC core-prim . infinite?)
        (g$11670$13P8LC core-prim . inexact?)
        (g$11669$13P8LC core-prim . inexact)
        (g$11668$13P8LC core-prim . imag-part)
        (g$11667$13P8LC core-prim . gcd)
        (g$11666$13P8LC core-prim . for-each)
        (g$11665$13P8LC core-prim . floor)
        (g$11664$13P8LC core-prim . finite?)
        (g$11663$13P8LC core-prim . expt)
        (g$11662$13P8LC core-prim . exp)
        (g$11661$13P8LC core-prim . exact?)
        (g$11660$13P8LC core-prim . exact-integer-sqrt)
        (g$11659$13P8LC core-prim . exact)
        (g$11658$13P8LC core-prim . even?)
        (g$11657$13P8LC core-prim . error)
        (g$11656$13P8LC core-prim . eqv?)
        (g$11655$13P8LC core-prim . equal?)
        (g$11654$13P8LC core-prim . eq?)
        (g$11653$13P8LC core-prim . dynamic-wind)
        (g$11652$13P8LC core-prim . div0-and-mod0)
        (g$11651$13P8LC core-prim . mod0)
        (g$11650$13P8LC core-prim . div0)
        (g$11649$13P8LC core-prim . div-and-mod)
        (g$11648$13P8LC core-prim . mod)
        (g$11647$13P8LC core-prim . div)
        (g$11646$13P8LC core-prim . denominator)
        (g$11645$13P8LC core-prim . cos)
        (g$11644$13P8LC core-prim . cons)
        (g$11643$13P8LC core-prim . complex?)
        (g$11642$13P8LC core-prim . char?)
        (g$11641$13P8LC core-prim . char>?)
        (g$11640$13P8LC core-prim . char>=?)
        (g$11639$13P8LC core-prim . char=?)
        (g$11638$13P8LC core-prim . char<?)
        (g$11637$13P8LC core-prim . char<=?)
        (g$11636$13P8LC core-prim . char->integer)
        (g$11635$13P8LC core-prim . ceiling)
        (g$11634$13P8LC core-prim . call-with-values)
        (g$11633$13P8LC core-prim . call/cc)
        (g$11632$13P8LC core-prim . call-with-current-continuation)
        (g$5785$13P8LC core-prim . cddddr)
        (g$5784$13P8LC core-prim . cdddar)
        (g$5783$13P8LC core-prim . cddadr)
        (g$5782$13P8LC core-prim . cddaar)
        (g$5781$13P8LC core-prim . cdaddr)
        (g$5780$13P8LC core-prim . cdadar)
        (g$5779$13P8LC core-prim . cdaadr)
        (g$5778$13P8LC core-prim . cdaaar)
        (g$5777$13P8LC core-prim . cadddr)
        (g$5776$13P8LC core-prim . caddar)
        (g$5775$13P8LC core-prim . cadadr)
        (g$5774$13P8LC core-prim . cadaar)
        (g$5773$13P8LC core-prim . caaddr)
        (g$5772$13P8LC core-prim . caadar)
        (g$5771$13P8LC core-prim . caaadr)
        (g$5770$13P8LC core-prim . caaaar)
        (g$5769$13P8LC core-prim . cdddr)
        (g$5768$13P8LC core-prim . cddar)
        (g$5767$13P8LC core-prim . cdadr)
        (g$5766$13P8LC core-prim . cdaar)
        (g$5765$13P8LC core-prim . caddr)
        (g$5764$13P8LC core-prim . cadar)
        (g$5763$13P8LC core-prim . caadr)
        (g$5762$13P8LC core-prim . caaar)
        (g$5761$13P8LC core-prim . cddr)
        (g$5760$13P8LC core-prim . cdar)
        (g$5759$13P8LC core-prim . cadr)
        (g$5758$13P8LC core-prim . caar)
        (g$11631$13P8LC core-prim . cdr)
        (g$11630$13P8LC core-prim . car)
        (g$11629$13P8LC core-prim . boolean?)
        (g$11628$13P8LC core-prim . boolean=?)
        (g$11627$13P8LC core-prim . atan)
        (g$11626$13P8LC core-prim . assertion-violation)
        (g$11625$13P8LC core-prim . asin)
        (g$11624$13P8LC core-prim . apply)
        (g$11623$13P8LC core-prim . append)
        (g$11622$13P8LC core-prim . angle)
        (g$11621$13P8LC core-prim . acos)
        (g$11620$13P8LC core-prim . abs)
        (g$11619$13P8LC core-prim . /)
        (g$11618$13P8LC core-prim . *)
        (g$11617$13P8LC core-prim . -)
        (g$11616$13P8LC core-prim . +)
        (g$11615$13P8LC core-prim . >=)
        (g$11614$13P8LC core-prim . >)
        (g$11613$13P8LC core-prim . =)
        (g$11612$13P8LC core-prim . <=)
        (g$11611$13P8LC core-prim . <)
        (g$11610$13P8LC core-prim . make-record-printer)
        (g$11609$13P8LC core-prim . eqv-hash)
        (g$11608$13P8LC core-prim . eq-hash)
        (g$11607$13P8LC core-prim . reverse!)
        (g$6666$13P8LC core-prim . make-promise)
        (g$11447$13P8LC core-prim . load/args)
        (g$7198$13P8LC core-prim . printf)
        (g$7199$13P8LC core-prim . fprintf)
        (g$7200$13P8LC core-prim . format)
        (g$11606$13P8LC core-prim . get-arity)
        (g$11605$13P8LC core-prim . gc-collect)
        (g$11604$13P8LC core-prim . clr-type?)
        (g$11603$13P8LC core-prim . get-clr-type)
        (g$11602$13P8LC core-prim . get-command-line)
        (g$11601$13P8LC core-prim . vector-append)
        (g$11600$13P8LC core-prim . vector-filter)
        (g$11599$13P8LC core-prim . vector-reverse!)
        (g$11598$13P8LC core-prim . vector-contains?)
        (g$11597$13P8LC core-prim . vector-index-of)
        (g$11596$13P8LC core-prim . vector-copy)
        (g$11595$13P8LC core-prim . vector-binary-search)
        (g$11594$13P8LC core-prim . get-output-string)
        (g$11593$13P8LC core-prim . open-output-string)
        (g$11592$13P8LC core-prim . open-input-string)
        (g$11591$13P8LC core-prim . string-format)
        (g$11444$13P8LC core-prim . trace-printer)
        (g$11590$13P8LC core-prim . make-traced-procedure)
        (g$7220$13P8LC core-prim . make-traced-macro)
        (g$8507$13P8LC core-prim . assertion-error)
        (g$11589$13P8LC core-prim . pmap)
        (g$11588$13P8LC core-prim . time-it)
        (g$7225$13P8LC core-prim . make-parameter)
        (g$11587$13P8LC core-prim . library-locator)
        (g$11586$13P8LC core-prim . get-library-paths)
        (g$8488$13P8LC core-prim . environment-symbols)
        (g$8487$13P8LC core-prim . interaction-environment-symbols)
        (g$7656$13P8LC core-prim . library-path)
        (g$7657$13P8LC core-prim . library-extensions)
        (g$7677$13P8LC core-prim . installed-libraries)
        (g$8493$13P8LC core-prim . expand)
        (g$11585$13P8LC $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11584$13P8LC $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11583$13P8LC $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11582$13P8LC $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11581$13P8LC $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11580$13P8LC
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11579$13P8LC
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11578$13P8LC
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11577$13P8LC
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11576$13P8LC $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11575$13P8LC
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11574$13P8LC $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11573$13P8LC $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11572$13P8LC $core-rtd &i/o-rtd &i/o-rcd)
        (g$11571$13P8LC $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11570$13P8LC $core-rtd &undefined-rtd &undefined-rcd)
        (g$11569$13P8LC $core-rtd &syntax-rtd &syntax-rcd)
        (g$11568$13P8LC $core-rtd &lexical-rtd &lexical-rcd)
        (g$11567$13P8LC
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11566$13P8LC $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11565$13P8LC $core-rtd &who-rtd &who-rcd)
        (g$11564$13P8LC $core-rtd &irritants-rtd &irritants-rcd)
        (g$11563$13P8LC $core-rtd &assertion-rtd &assertion-rcd)
        (g$11562$13P8LC $core-rtd &violation-rtd &violation-rcd)
        (g$11561$13P8LC $core-rtd &error-rtd &error-rcd)
        (g$11560$13P8LC $core-rtd &serious-rtd &serious-rcd)
        (g$11559$13P8LC $core-rtd &warning-rtd &warning-rcd)
        (g$11558$13P8LC $core-rtd &message-rtd &message-rcd)
        (g$11557$13P8LC $core-rtd &condition-rtd &condition-rcd)
        (g$11556$13P8LC macro . define-condition-type)
        (g$11555$13P8LC macro . define-enumeration)
        (g$11554$13P8LC macro . define-record-type)
        (g$11553$13P8LC macro . parent-rtd)
        (g$11552$13P8LC macro . nongenerative)
        (g$11551$13P8LC macro . opaque)
        (g$11550$13P8LC macro . sealed)
        (g$11549$13P8LC macro . protocol)
        (g$11548$13P8LC macro . parent)
        (g$11547$13P8LC macro . immutable)
        (g$11546$13P8LC macro . mutable)
        (g$11545$13P8LC macro . fields)
        (g$11544$13P8LC macro . error-handling-mode)
        (g$11543$13P8LC macro . file-options)
        (g$11542$13P8LC macro . buffer-mode)
        (g$11541$13P8LC macro . eol-style)
        (g$11540$13P8LC macro . guard)
        (g$11539$13P8LC macro . trace-letrec-syntax)
        (g$11538$13P8LC macro . trace-let-syntax)
        (g$11537$13P8LC macro . trace-define-syntax)
        (g$11536$13P8LC macro . trace-define)
        (g$11535$13P8LC macro . trace-lambda)
        (g$11534$13P8LC macro . unsyntax-splicing)
        (g$11533$13P8LC macro . unsyntax)
        (g$11532$13P8LC macro . unquote-splicing)
        (g$11531$13P8LC macro . unquote)
        (g$11530$13P8LC macro . _)
        (g$11529$13P8LC macro . else)
        (g$11528$13P8LC macro . =>)
        (g$11527$13P8LC macro . ...)
        (g$11526$13P8LC macro . assert)
        (g$11525$13P8LC macro . endianness)
        (g$11524$13P8LC macro . delay)
        (g$11523$13P8LC macro . time)
        (g$11522$13P8LC macro . or)
        (g$11521$13P8LC macro . and)
        (g$11520$13P8LC macro . do)
        (g$11519$13P8LC macro . cond)
        (g$11518$13P8LC macro . let*)
        (g$11517$13P8LC macro . let)
        (g$11516$13P8LC macro . identifier-syntax)
        (g$11515$13P8LC macro . with-syntax)
        (g$11514$13P8LC macro . quasisyntax)
        (g$11513$13P8LC macro . quasiquote)
        (g$11512$13P8LC macro . syntax-rules)
        (g$11511$13P8LC macro . include-into)
        (g$11510$13P8LC macro . include)
        (g$11509$13P8LC macro . define-struct)
        (g$11508$13P8LC macro . let-values)
        (g$11507$13P8LC macro . let*-values)
        (g$11506$13P8LC core-macro . record-constructor-descriptor)
        (g$11505$13P8LC core-macro . record-type-descriptor)
        (g$11504$13P8LC core-macro . fluid-let-syntax)
        (g$11503$13P8LC macro . case)
        (g$11502$13P8LC macro . parameterize)
        (g$11501$13P8LC macro . unless)
        (g$11500$13P8LC macro . when)
        (g$11499$13P8LC core-macro . if)
        (g$11498$13P8LC core-macro . letrec*)
        (g$11497$13P8LC core-macro . letrec)
        (g$11496$13P8LC core-macro . type-descriptor)
        (g$11495$13P8LC core-macro . case-lambda)
        (g$11494$13P8LC core-macro . lambda)
        (g$11493$13P8LC core-macro . syntax)
        (g$11492$13P8LC core-macro . syntax-case)
        (g$11491$13P8LC core-macro . quote)
        (g$11490$13P8LC core-macro . foreign-call)
        (g$11489$13P8LC letrec-syntax)
        (g$11488$13P8LC let-syntax)
        (g$11487$13P8LC set!)
        (g$11486$13P8LC import)
        (g$11485$13P8LC library)
        (g$11484$13P8LC begin)
        (g$11483$13P8LC module)
        (g$11482$13P8LC define-syntax)
        (g$11481$13P8LC define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6891$13P8LC
      'g$12160$13P8LC
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12039$13P8LC)
        (eval-core . g$12038$13P8LC)
        (set-symbol-value! . g$12037$13P8LC)
        (symbol-value . g$12036$13P8LC)
        (gensym . g$12034$13P8LC)
        (void . g$12033$13P8LC))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$10909$13P8LC
     g$trace-printer$10949$13P8LC
     (g$make-parameter$6345$13P8LC write))
   (g$command-line$10910$13P8LC
     g$command-line$10950$13P8LC
     (g$make-parameter$6345$13P8LC (get-command-line)))
   (g$local-library-path$10911$13P8LC
     g$local-library-path$10951$13P8LC
     (case-lambda
       ((g$filename$10922$13P8LC)
        (cons
          (g$get-directory-name$5242$13P8LC g$filename$10922$13P8LC)
          (g$library-path$6875$13P8LC)))))
   (g$load/args$10912$13P8LC
     g$load/args$10952$13P8LC
     (case-lambda
       ((g$filename$10923$13P8LC . g$args$10924$13P8LC)
        (begin
          (apply
            g$load-r6rs-top-level$10919$13P8LC
            g$filename$10923$13P8LC
            'load
            g$args$10924$13P8LC)
          (void)))))
   (g$load$10913$13P8LC
     g$load$10953$13P8LC
     (case-lambda
       ((g$filename$10925$13P8LC)
        (begin
          (apply
            g$load-r6rs-top-level$10919$13P8LC
            g$filename$10925$13P8LC
            'load
            (cdr (g$command-line$10910$13P8LC)))
          (void)))))
   (g$ironscheme-build$10914$13P8LC
     g$ironscheme-build$10954$13P8LC
     (case-lambda (() (g$load$10913$13P8LC '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$10915$13P8LC
     g$eval-top-level$10955$13P8LC
     (case-lambda
       ((g$x$10926$13P8LC)
        (g$eval$10884$13P8LC
          g$x$10926$13P8LC
          (g$interaction-environment$10907$13P8LC)))))
   (g$compile-system-libraries$10916$13P8LC
     g$compile-system-libraries$10956$13P8LC
     (case-lambda
       (()
        (g$eval-top-level$10915$13P8LC
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$10917$13P8LC
     g$compile$10957$13P8LC
     (case-lambda
       ((g$filename$10927$13P8LC)
        (g$load-r6rs-top-level$10919$13P8LC g$filename$10927$13P8LC 'compile))))
   (g$compile->closure$10918$13P8LC
     g$compile->closure$10958$13P8LC
     (case-lambda
       ((g$filename$10928$13P8LC)
        (g$load-r6rs-top-level$10919$13P8LC g$filename$10928$13P8LC 'closure))))
   (g$load-r6rs-top-level$10919$13P8LC
     g$load-r6rs-top-level$10959$13P8LC
     (case-lambda
       ((g$filename$10929$13P8LC g$how$10930$13P8LC . g$args$10931$13P8LC)
        ((case-lambda
           ((g$library-path$10934$13P8LC g$library-path$10935$13P8LC)
            ((case-lambda
               ((g$swap$10936$13P8LC)
                (dynamic-wind
                  g$swap$10936$13P8LC
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$10937$13P8LC)
                         ((case-lambda
                            ((g$t$10938$13P8LC)
                             (if (memv g$t$10938$13P8LC '(closure))
                               (g$pre-compile-r6rs-top-level$10906$13P8LC
                                 g$x*$10937$13P8LC)
                               (if (memv g$t$10938$13P8LC '(load))
                                 ((case-lambda
                                    ((g$command-line$10941$13P8LC
                                       g$command-line$10942$13P8LC)
                                     ((case-lambda
                                        ((g$swap$10943$13P8LC)
                                         (dynamic-wind
                                           g$swap$10943$13P8LC
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$10905$13P8LC
                                                 g$x*$10937$13P8LC))))
                                           g$swap$10943$13P8LC)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$10944$13P8LC)
                                             (begin
                                               (g$command-line$10941$13P8LC
                                                 g$command-line$10942$13P8LC)
                                               (set! g$command-line$10942$13P8LC
                                                 g$t$10944$13P8LC))))
                                          (g$command-line$10941$13P8LC)))))))
                                  g$command-line$10910$13P8LC
                                  (cons
                                    g$filename$10929$13P8LC
                                    (map (case-lambda
                                           ((g$x$10945$13P8LC)
                                            (g$format$6260$13P8LC
                                              '"~a"
                                              g$x$10945$13P8LC)))
                                         g$args$10931$13P8LC)))
                                 (if (memv g$t$10938$13P8LC '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$10905$13P8LC
                                       g$x*$10937$13P8LC)
                                     (g$serialize-all$6879$13P8LC
                                       serialize-library
                                       g$compile-core-expr$6593$13P8LC))
                                   (if '#f '#f (void)))))))
                          g$how$10930$13P8LC)))
                      (with-input-from-file
                        g$filename$10929$13P8LC
                        (case-lambda
                          (()
                           ((letrec ((g$f$10946$13P8LC
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$10947$13P8LC)
                                              (if (eof-object? g$x$10947$13P8LC)
                                                '()
                                                (cons
                                                  g$x$10947$13P8LC
                                                  (g$f$10946$13P8LC)))))
                                           (read-annotated))))))
                              g$f$10946$13P8LC))))))))
                  g$swap$10936$13P8LC)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$10948$13P8LC)
                    (begin
                      (g$library-path$10934$13P8LC g$library-path$10935$13P8LC)
                      (set! g$library-path$10935$13P8LC g$t$10948$13P8LC))))
                 (g$library-path$10934$13P8LC)))))))
         g$library-path$6875$13P8LC
         (g$local-library-path$10911$13P8LC g$filename$10929$13P8LC)))))
   (g$fo$10920$13P8LC
     g$fo$10960$13P8LC
     (g$make-enumeration$6222$13P8LC '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$6880$13P8LC
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$10921$13P8LC)
         (if (g$serious-condition?$5625$13P8LC g$ex$10921$13P8LC)
           (raise g$ex$10921$13P8LC)
           (begin (display g$ex$10921$13P8LC) (newline))))))
    (set-symbol-value! 'load g$load$10913$13P8LC)
    (set-symbol-value! 'compile g$compile$10917$13P8LC)
    (set-symbol-value! 'compile->closure g$compile->closure$10918$13P8LC)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$10915$13P8LC)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$10877$13P8LC)
    (set-symbol-value! 'expanded2core g$expanded->core$6592$13P8LC)
    (set-symbol-value! 'trace-printer g$trace-printer$10909$13P8LC)
    (g$file-options-constructor$6346$13P8LC
      (g$enum-set-constructor$6225$13P8LC g$fo$10920$13P8LC))
    (g$library-path$6875$13P8LC (get-library-paths))))

