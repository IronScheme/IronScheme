;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$5921$xgWN3
     g$list-tail$6065$xgWN3
     (case-lambda
       ((g$lst$5949$xgWN3 g$index$5950$xgWN3)
        (if ((case-lambda
               ((g$t$5951$xgWN3)
                (if g$t$5951$xgWN3
                  g$t$5951$xgWN3
                  (begin '#f (g$negative?$6793$xgWN3 g$index$5950$xgWN3)))))
             (null? g$lst$5949$xgWN3))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$5949$xgWN3
            g$index$5950$xgWN3)
          (if (g$zero?$6794$xgWN3 g$index$5950$xgWN3)
            g$lst$5949$xgWN3
            (g$list-tail$5921$xgWN3
              (cdr g$lst$5949$xgWN3)
              (- g$index$5950$xgWN3 '1)))))))
   (g$list-ref$5922$xgWN3
     g$list-ref$6066$xgWN3
     (case-lambda
       ((g$lst$5952$xgWN3 g$index$5953$xgWN3)
        (car (g$list-tail$5921$xgWN3 g$lst$5952$xgWN3 g$index$5953$xgWN3)))))
   (g$last-pair$5923$xgWN3
     g$last-pair$6067$xgWN3
     (case-lambda
       ((g$lst$5954$xgWN3)
        (if (null? g$lst$5954$xgWN3)
          g$lst$5954$xgWN3
          (if (null? (cdr g$lst$5954$xgWN3))
            g$lst$5954$xgWN3
            (g$last-pair$5923$xgWN3 (cdr g$lst$5954$xgWN3)))))))
   (g$make-list$5924$xgWN3
     g$make-list$6068$xgWN3
     (case-lambda
       ((g$n$5955$xgWN3) (vector->list (make-vector g$n$5955$xgWN3)))
       ((g$n$5956$xgWN3 g$fill$5957$xgWN3)
        (vector->list (make-vector g$n$5956$xgWN3 g$fill$5957$xgWN3)))))
   (g$find$5925$xgWN3
     g$find$6069$xgWN3
     (case-lambda
       ((g$proc$5958$xgWN3 g$l$5959$xgWN3)
        (if (null? g$l$5959$xgWN3)
          '#f
          ((case-lambda
             ((g$e$5960$xgWN3 g$r$5961$xgWN3 g$proc$5962$xgWN3)
              (if (g$proc$5962$xgWN3 g$e$5960$xgWN3)
                g$e$5960$xgWN3
                (g$find$5925$xgWN3 g$proc$5962$xgWN3 g$r$5961$xgWN3))))
           (car g$l$5959$xgWN3)
           (cdr g$l$5959$xgWN3)
           g$proc$5958$xgWN3)))))
   (g$partition$5926$xgWN3
     g$partition$6070$xgWN3
     (case-lambda
       ((g$proc$5963$xgWN3 g$l$5964$xgWN3)
        ((letrec ((g$f$5965$xgWN3
                    (case-lambda
                      ((g$l$5966$xgWN3 g$a$5967$xgWN3 g$b$5968$xgWN3)
                       (if (null? g$l$5966$xgWN3)
                         (values
                           (reverse! g$a$5967$xgWN3)
                           (reverse! g$b$5968$xgWN3))
                         ((case-lambda
                            ((g$e$5969$xgWN3)
                             (if (g$proc$5963$xgWN3 g$e$5969$xgWN3)
                               (g$f$5965$xgWN3
                                 (cdr g$l$5966$xgWN3)
                                 (cons g$e$5969$xgWN3 g$a$5967$xgWN3)
                                 g$b$5968$xgWN3)
                               (g$f$5965$xgWN3
                                 (cdr g$l$5966$xgWN3)
                                 g$a$5967$xgWN3
                                 (cons g$e$5969$xgWN3 g$b$5968$xgWN3)))))
                          (car g$l$5966$xgWN3)))))))
           g$f$5965$xgWN3)
         g$l$5964$xgWN3
         '()
         '()))))
   (g$remp$5927$xgWN3
     g$remp$6071$xgWN3
     (case-lambda
       ((g$proc$5970$xgWN3 g$l$5971$xgWN3)
        ((letrec ((g$f$5972$xgWN3
                    (case-lambda
                      ((g$l$5973$xgWN3 g$a$5974$xgWN3)
                       (if (null? g$l$5973$xgWN3)
                         (reverse! g$a$5974$xgWN3)
                         ((case-lambda
                            ((g$e$5975$xgWN3)
                             (if (g$proc$5970$xgWN3 g$e$5975$xgWN3)
                               (g$f$5972$xgWN3
                                 (cdr g$l$5973$xgWN3)
                                 g$a$5974$xgWN3)
                               (g$f$5972$xgWN3
                                 (cdr g$l$5973$xgWN3)
                                 (cons g$e$5975$xgWN3 g$a$5974$xgWN3)))))
                          (car g$l$5973$xgWN3)))))))
           g$f$5972$xgWN3)
         g$l$5971$xgWN3
         '()))))
   (g$filter$5928$xgWN3
     g$filter$6072$xgWN3
     (case-lambda
       ((g$proc$5976$xgWN3 g$l$5977$xgWN3)
        ((letrec ((g$f$5978$xgWN3
                    (case-lambda
                      ((g$l$5979$xgWN3 g$a$5980$xgWN3)
                       (if (null? g$l$5979$xgWN3)
                         (reverse! g$a$5980$xgWN3)
                         ((case-lambda
                            ((g$e$5981$xgWN3)
                             (if (g$proc$5976$xgWN3 g$e$5981$xgWN3)
                               (g$f$5978$xgWN3
                                 (cdr g$l$5979$xgWN3)
                                 (cons g$e$5981$xgWN3 g$a$5980$xgWN3))
                               (g$f$5978$xgWN3
                                 (cdr g$l$5979$xgWN3)
                                 g$a$5980$xgWN3))))
                          (car g$l$5979$xgWN3)))))))
           g$f$5978$xgWN3)
         g$l$5977$xgWN3
         '()))))
   (g$assq$5929$xgWN3
     g$assq$6073$xgWN3
     (case-lambda
       ((g$obj$5982$xgWN3 g$lst$5983$xgWN3)
        (if (null? g$lst$5983$xgWN3)
          '#f
          ((case-lambda
             ((g$obj$5984$xgWN3 g$t$5985$xgWN3 g$r$5986$xgWN3)
              (if (eq? g$obj$5984$xgWN3 (car g$t$5985$xgWN3))
                g$t$5985$xgWN3
                (g$assq$5929$xgWN3 g$obj$5984$xgWN3 g$r$5986$xgWN3))))
           g$obj$5982$xgWN3
           (car g$lst$5983$xgWN3)
           (cdr g$lst$5983$xgWN3))))))
   (g$assv$5930$xgWN3
     g$assv$6074$xgWN3
     (case-lambda
       ((g$obj$5987$xgWN3 g$lst$5988$xgWN3)
        (if (null? g$lst$5988$xgWN3)
          '#f
          ((case-lambda
             ((g$obj$5989$xgWN3 g$t$5990$xgWN3 g$r$5991$xgWN3)
              (if (eqv? g$obj$5989$xgWN3 (car g$t$5990$xgWN3))
                g$t$5990$xgWN3
                (g$assv$5930$xgWN3 g$obj$5989$xgWN3 g$r$5991$xgWN3))))
           g$obj$5987$xgWN3
           (car g$lst$5988$xgWN3)
           (cdr g$lst$5988$xgWN3))))))
   (g$assoc$5931$xgWN3
     g$assoc$6075$xgWN3
     (case-lambda
       ((g$obj$5992$xgWN3 g$lst$5993$xgWN3)
        (if (null? g$lst$5993$xgWN3)
          '#f
          ((case-lambda
             ((g$obj$5994$xgWN3 g$t$5995$xgWN3 g$r$5996$xgWN3)
              (if (equal? g$obj$5994$xgWN3 (car g$t$5995$xgWN3))
                g$t$5995$xgWN3
                (g$assoc$5931$xgWN3 g$obj$5994$xgWN3 g$r$5996$xgWN3))))
           g$obj$5992$xgWN3
           (car g$lst$5993$xgWN3)
           (cdr g$lst$5993$xgWN3))))))
   (g$assp$5932$xgWN3
     g$assp$6076$xgWN3
     (case-lambda
       ((g$p?$5997$xgWN3 g$lst$5998$xgWN3)
        (if (null? g$lst$5998$xgWN3)
          '#f
          ((case-lambda
             ((g$p?$5999$xgWN3 g$t$6000$xgWN3 g$r$6001$xgWN3)
              (if (g$p?$5999$xgWN3 (car g$t$6000$xgWN3))
                g$t$6000$xgWN3
                (g$assp$5932$xgWN3 g$p?$5999$xgWN3 g$r$6001$xgWN3))))
           g$p?$5997$xgWN3
           (car g$lst$5998$xgWN3)
           (cdr g$lst$5998$xgWN3))))))
   (g$memq$5933$xgWN3
     g$memq$6077$xgWN3
     (case-lambda
       ((g$obj$6002$xgWN3 g$lst$6003$xgWN3)
        (if (null? g$lst$6003$xgWN3)
          '#f
          (if (eq? g$obj$6002$xgWN3 (car g$lst$6003$xgWN3))
            g$lst$6003$xgWN3
            (g$memq$5933$xgWN3 g$obj$6002$xgWN3 (cdr g$lst$6003$xgWN3)))))))
   (g$memv$5934$xgWN3
     g$memv$6078$xgWN3
     (case-lambda
       ((g$obj$6004$xgWN3 g$lst$6005$xgWN3)
        (if (null? g$lst$6005$xgWN3)
          '#f
          (if (eqv? g$obj$6004$xgWN3 (car g$lst$6005$xgWN3))
            g$lst$6005$xgWN3
            (g$memv$5934$xgWN3 g$obj$6004$xgWN3 (cdr g$lst$6005$xgWN3)))))))
   (g$member$5935$xgWN3
     g$member$6079$xgWN3
     (case-lambda
       ((g$obj$6006$xgWN3 g$lst$6007$xgWN3)
        (if (null? g$lst$6007$xgWN3)
          '#f
          (if (equal? g$obj$6006$xgWN3 (car g$lst$6007$xgWN3))
            g$lst$6007$xgWN3
            (g$member$5935$xgWN3 g$obj$6006$xgWN3 (cdr g$lst$6007$xgWN3)))))))
   (g$memp$5936$xgWN3
     g$memp$6080$xgWN3
     (case-lambda
       ((g$p?$6008$xgWN3 g$lst$6009$xgWN3)
        (if (null? g$lst$6009$xgWN3)
          '#f
          (if (g$p?$6008$xgWN3 (car g$lst$6009$xgWN3))
            g$lst$6009$xgWN3
            (g$memp$5936$xgWN3 g$p?$6008$xgWN3 (cdr g$lst$6009$xgWN3)))))))
   (g$all-empty?$5937$xgWN3
     g$all-empty?$6081$xgWN3
     (case-lambda
       ((g$ls$6010$xgWN3)
        ((case-lambda
           ((g$t$6011$xgWN3)
            (if g$t$6011$xgWN3
              g$t$6011$xgWN3
              (begin
                '#f
                (if (null? (car g$ls$6010$xgWN3))
                  (begin '#f (g$all-empty?$5937$xgWN3 (cdr g$ls$6010$xgWN3)))
                  '#f)))))
         (null? g$ls$6010$xgWN3)))))
   (g$split$5938$xgWN3
     g$split$6082$xgWN3
     (case-lambda
       ((g$ls$6012$xgWN3)
        (if (null? g$ls$6012$xgWN3)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5938$xgWN3 (cdr g$ls$6012$xgWN3))))
            (case-lambda
              ((g$cars$6013$xgWN3 g$cdrs$6014$xgWN3)
               ((case-lambda
                  ((g$a$6015$xgWN3)
                   (values
                     (cons (car g$a$6015$xgWN3) g$cars$6013$xgWN3)
                     (cons (cdr g$a$6015$xgWN3) g$cdrs$6014$xgWN3))))
                (car g$ls$6012$xgWN3)))))))))
   (g$for-all$5939$xgWN3
     g$for-all$6083$xgWN3
     (case-lambda
       ((g$f$6016$xgWN3 g$arg1$6017$xgWN3 . g$args$6018$xgWN3)
        ((case-lambda
           ((g$args$6019$xgWN3)
            (if (g$all-empty?$5937$xgWN3 g$args$6019$xgWN3)
              '#t
              (call-with-values
                (case-lambda (() (g$split$5938$xgWN3 g$args$6019$xgWN3)))
                (case-lambda
                  ((g$cars$6020$xgWN3 g$cdrs$6021$xgWN3)
                   (if (g$all-empty?$5937$xgWN3 g$cdrs$6021$xgWN3)
                     (apply g$f$6016$xgWN3 g$cars$6020$xgWN3)
                     (if (apply g$f$6016$xgWN3 g$cars$6020$xgWN3)
                       (begin
                         '#f
                         (apply
                           g$for-all$5939$xgWN3
                           g$f$6016$xgWN3
                           g$cdrs$6021$xgWN3))
                       '#f))))))))
         (cons g$arg1$6017$xgWN3 g$args$6018$xgWN3)))))
   (g$exists$5940$xgWN3
     g$exists$6084$xgWN3
     (case-lambda
       ((g$f$6022$xgWN3 g$arg1$6023$xgWN3 . g$args$6024$xgWN3)
        ((case-lambda
           ((g$args$6025$xgWN3)
            (if (g$all-empty?$5937$xgWN3 g$args$6025$xgWN3)
              '#f
              (call-with-values
                (case-lambda (() (g$split$5938$xgWN3 g$args$6025$xgWN3)))
                (case-lambda
                  ((g$cars$6026$xgWN3 g$cdrs$6027$xgWN3)
                   ((case-lambda
                      ((g$t$6028$xgWN3)
                       (if g$t$6028$xgWN3
                         g$t$6028$xgWN3
                         (begin
                           '#f
                           (apply
                             g$exists$5940$xgWN3
                             g$f$6022$xgWN3
                             g$cdrs$6027$xgWN3)))))
                    (apply g$f$6022$xgWN3 g$cars$6026$xgWN3))))))))
         (cons g$arg1$6023$xgWN3 g$args$6024$xgWN3)))))
   (g$map$5941$xgWN3
     g$map$6085$xgWN3
     (case-lambda
       ((g$proc$6029$xgWN3 g$list1$6030$xgWN3 . g$lists$6031$xgWN3)
        ((letrec ((g$f$6032$xgWN3
                    (case-lambda
                      ((g$lists$6033$xgWN3 g$a$6034$xgWN3)
                       (if (g$all-empty?$5937$xgWN3 g$lists$6033$xgWN3)
                         (reverse! g$a$6034$xgWN3)
                         (call-with-values
                           (case-lambda
                             (() (g$split$5938$xgWN3 g$lists$6033$xgWN3)))
                           (case-lambda
                             ((g$cars$6035$xgWN3 g$cdrs$6036$xgWN3)
                              (g$f$6032$xgWN3
                                g$cdrs$6036$xgWN3
                                (cons
                                  (apply g$proc$6029$xgWN3 g$cars$6035$xgWN3)
                                  g$a$6034$xgWN3))))))))))
           g$f$6032$xgWN3)
         (cons g$list1$6030$xgWN3 g$lists$6031$xgWN3)
         '()))))
   (g$for-each$5942$xgWN3
     g$for-each$6086$xgWN3
     (case-lambda
       ((g$f$6037$xgWN3 g$arg1$6038$xgWN3 . g$args$6039$xgWN3)
        ((case-lambda
           ((g$args$6040$xgWN3)
            (if (not (g$all-empty?$5937$xgWN3 g$args$6040$xgWN3))
              (call-with-values
                (case-lambda (() (g$split$5938$xgWN3 g$args$6040$xgWN3)))
                (case-lambda
                  ((g$cars$6041$xgWN3 g$cdrs$6042$xgWN3)
                   (begin
                     (apply g$f$6037$xgWN3 g$cars$6041$xgWN3)
                     (apply
                       g$for-each$5942$xgWN3
                       g$f$6037$xgWN3
                       g$cdrs$6042$xgWN3)))))
              (void))))
         (cons g$arg1$6038$xgWN3 g$args$6039$xgWN3)))))
   (g$cons*$5943$xgWN3
     g$cons*$6087$xgWN3
     (case-lambda
       ((g$a$6043$xgWN3 . g$rest$6044$xgWN3)
        ((letrec ((g$f$6045$xgWN3
                    (case-lambda
                      ((g$a$6046$xgWN3 g$rest$6047$xgWN3)
                       (if (null? g$rest$6047$xgWN3)
                         g$a$6046$xgWN3
                         (cons
                           g$a$6046$xgWN3
                           (g$f$6045$xgWN3
                             (car g$rest$6047$xgWN3)
                             (cdr g$rest$6047$xgWN3))))))))
           g$f$6045$xgWN3)
         g$a$6043$xgWN3
         g$rest$6044$xgWN3))))
   (g$fold-left$5944$xgWN3
     g$fold-left$6088$xgWN3
     (case-lambda
       ((g$combine$6048$xgWN3
          g$nil$6049$xgWN3
          g$list1$6050$xgWN3
          .
          g$lists$6051$xgWN3)
        (if (null? g$list1$6050$xgWN3)
          g$nil$6049$xgWN3
          (apply
            g$fold-left$5944$xgWN3
            (g$cons*$5943$xgWN3
              g$combine$6048$xgWN3
              (apply
                g$combine$6048$xgWN3
                (g$cons*$5943$xgWN3
                  g$nil$6049$xgWN3
                  (car g$list1$6050$xgWN3)
                  (g$map$5941$xgWN3 car g$lists$6051$xgWN3)))
              (cdr g$list1$6050$xgWN3)
              (g$map$5941$xgWN3 cdr g$lists$6051$xgWN3)))))))
   (g$fold-right$5945$xgWN3
     g$fold-right$6089$xgWN3
     (case-lambda
       ((g$combine$6052$xgWN3
          g$nil$6053$xgWN3
          g$list1$6054$xgWN3
          .
          g$lists$6055$xgWN3)
        (if (null? g$list1$6054$xgWN3)
          g$nil$6053$xgWN3
          (apply
            g$combine$6052$xgWN3
            (append
              (list (car g$list1$6054$xgWN3))
              (g$map$5941$xgWN3 car g$lists$6055$xgWN3)
              (list
                (apply
                  g$fold-right$5945$xgWN3
                  (g$cons*$5943$xgWN3
                    g$combine$6052$xgWN3
                    g$nil$6053$xgWN3
                    (cdr g$list1$6054$xgWN3)
                    (g$map$5941$xgWN3 cdr g$lists$6055$xgWN3))))))))))
   (g$remove$5946$xgWN3
     g$remove$6090$xgWN3
     (case-lambda
       ((g$obj$6056$xgWN3 g$list$6057$xgWN3)
        (g$remp$5927$xgWN3
          (case-lambda
            ((g$x$6058$xgWN3) (equal? g$obj$6056$xgWN3 g$x$6058$xgWN3)))
          g$list$6057$xgWN3))))
   (g$remv$5947$xgWN3
     g$remv$6091$xgWN3
     (case-lambda
       ((g$obj$6059$xgWN3 g$list$6060$xgWN3)
        (g$remp$5927$xgWN3
          (case-lambda
            ((g$x$6061$xgWN3) (eqv? g$obj$6059$xgWN3 g$x$6061$xgWN3)))
          g$list$6060$xgWN3))))
   (g$remq$5948$xgWN3
     g$remq$6092$xgWN3
     (case-lambda
       ((g$obj$6062$xgWN3 g$list$6063$xgWN3)
        (g$remp$5927$xgWN3
          (case-lambda ((g$x$6064$xgWN3) (eq? g$obj$6062$xgWN3 g$x$6064$xgWN3)))
          g$list$6063$xgWN3)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$div$6401$xgWN3
     g$div$6747$xgWN3
     (case-lambda
       ((g$x1$6547$xgWN3 g$x2$6548$xgWN3)
        (call-with-values
          (case-lambda (() (div-and-mod g$x1$6547$xgWN3 g$x2$6548$xgWN3)))
          (case-lambda
            ((g$n$6551$xgWN3 g$d$6552$xgWN3)
             ((case-lambda ((g$d$6553$xgWN3 g$n$6554$xgWN3) g$n$6554$xgWN3))
              g$d$6552$xgWN3
              g$n$6551$xgWN3)))))))
   (g$div0$6402$xgWN3
     g$div0$6748$xgWN3
     (case-lambda
       ((g$x1$6555$xgWN3 g$x2$6556$xgWN3)
        (call-with-values
          (case-lambda (() (div0-and-mod0 g$x1$6555$xgWN3 g$x2$6556$xgWN3)))
          (case-lambda
            ((g$n$6559$xgWN3 g$d$6560$xgWN3)
             ((case-lambda ((g$d$6561$xgWN3 g$n$6562$xgWN3) g$n$6562$xgWN3))
              g$d$6560$xgWN3
              g$n$6559$xgWN3)))))))
   (g$mod$6403$xgWN3
     g$mod$6749$xgWN3
     (case-lambda
       ((g$x1$6563$xgWN3 g$x2$6564$xgWN3)
        (call-with-values
          (case-lambda (() (div-and-mod g$x1$6563$xgWN3 g$x2$6564$xgWN3)))
          (case-lambda
            ((g$n$6567$xgWN3 g$d$6568$xgWN3)
             ((case-lambda ((g$d$6569$xgWN3 g$n$6570$xgWN3) g$d$6569$xgWN3))
              g$d$6568$xgWN3
              g$n$6567$xgWN3)))))))
   (g$mod0$6404$xgWN3
     g$mod0$6750$xgWN3
     (case-lambda
       ((g$x1$6571$xgWN3 g$x2$6572$xgWN3)
        (call-with-values
          (case-lambda (() (div0-and-mod0 g$x1$6571$xgWN3 g$x2$6572$xgWN3)))
          (case-lambda
            ((g$n$6575$xgWN3 g$d$6576$xgWN3)
             ((case-lambda ((g$d$6577$xgWN3 g$n$6578$xgWN3) g$d$6577$xgWN3))
              g$d$6576$xgWN3
              g$n$6575$xgWN3)))))))
   (g$list->vector$6405$xgWN3
     g$list->vector$6751$xgWN3
     (case-lambda ((g$lst$6579$xgWN3) (apply vector g$lst$6579$xgWN3))))
   (g$list->string$6406$xgWN3
     g$list->string$6752$xgWN3
     (case-lambda ((g$lst$6580$xgWN3) (apply string g$lst$6580$xgWN3))))
   (g$char?$6407$xgWN3
     g$char?$6753$xgWN3
     (case-lambda
       ((g$obj$6581$xgWN3) (clr-is-internal 'system.char g$obj$6581$xgWN3))))
   (g$vector?$6408$xgWN3
     g$vector?$6754$xgWN3
     (case-lambda
       ((g$obj$6582$xgWN3)
        (clr-is-internal 'system.object[] g$obj$6582$xgWN3))))
   (g$bytevector?$6409$xgWN3
     g$bytevector?$6755$xgWN3
     (case-lambda
       ((g$obj$6583$xgWN3) (clr-is-internal 'system.byte[] g$obj$6583$xgWN3))))
   (g$symbol?$6410$xgWN3
     g$symbol?$6756$xgWN3
     (case-lambda
       ((g$obj$6584$xgWN3)
        (clr-is-internal 'microsoft.scripting.symbolid g$obj$6584$xgWN3))))
   (g$boolean?$6411$xgWN3
     g$boolean?$6757$xgWN3
     (case-lambda
       ((g$obj$6585$xgWN3) (clr-is-internal 'system.boolean g$obj$6585$xgWN3))))
   (g$procedure?$6412$xgWN3
     g$procedure?$6758$xgWN3
     (case-lambda
       ((g$obj$6586$xgWN3)
        (clr-is-internal 'ironscheme.runtime.icallable g$obj$6586$xgWN3))))
   (g$fixnum?$6413$xgWN3
     g$fixnum?$6759$xgWN3
     (case-lambda
       ((g$obj$6587$xgWN3) (clr-is-internal 'system.int32 g$obj$6587$xgWN3))))
   (g$flonum?$6414$xgWN3
     g$flonum?$6760$xgWN3
     (case-lambda
       ((g$obj$6588$xgWN3) (clr-is-internal 'system.double g$obj$6588$xgWN3))))
   (g$fixnum-width$6415$xgWN3
     g$fixnum-width$6761$xgWN3
     (case-lambda (() '32)))
   (g$vector-fill!$6416$xgWN3
     g$vector-fill!$6762$xgWN3
     (case-lambda
       ((g$vec$6589$xgWN3 g$val$6590$xgWN3)
        ((case-lambda
           ((g$len$6591$xgWN3)
            (letrec ((g$loop$6592$xgWN3
                       (case-lambda
                         ((g$i$6593$xgWN3)
                          (if (fx=? g$i$6593$xgWN3 g$len$6591$xgWN3)
                            (if '#f '#f (void))
                            (begin
                              (vector-set!
                                g$vec$6589$xgWN3
                                g$i$6593$xgWN3
                                g$val$6590$xgWN3)
                              (g$loop$6592$xgWN3 (fx+ g$i$6593$xgWN3 '1))))))))
              (g$loop$6592$xgWN3 '0))))
         (vector-length g$vec$6589$xgWN3)))))
   (g$reverse$6417$xgWN3
     g$reverse$6763$xgWN3
     (case-lambda
       ((g$lst$6594$xgWN3)
        (g$fold-left$6088$xgWN3
          (case-lambda
            ((g$x$6595$xgWN3 g$y$6596$xgWN3)
             (cons g$y$6596$xgWN3 g$x$6595$xgWN3)))
          '()
          g$lst$6594$xgWN3))))
   (g$caar$6418$xgWN3
     g$caar$6764$xgWN3
     (case-lambda ((g$x$6597$xgWN3) (car (car g$x$6597$xgWN3)))))
   (g$cadr$6419$xgWN3
     g$cadr$6765$xgWN3
     (case-lambda ((g$x$6598$xgWN3) (car (cdr g$x$6598$xgWN3)))))
   (g$cdar$6420$xgWN3
     g$cdar$6766$xgWN3
     (case-lambda ((g$x$6599$xgWN3) (cdr (car g$x$6599$xgWN3)))))
   (g$cddr$6421$xgWN3
     g$cddr$6767$xgWN3
     (case-lambda ((g$x$6600$xgWN3) (cdr (cdr g$x$6600$xgWN3)))))
   (g$caaar$6422$xgWN3
     g$caaar$6768$xgWN3
     (case-lambda
       ((g$x$6601$xgWN3) (g$caar$6418$xgWN3 (car g$x$6601$xgWN3)))))
   (g$caadr$6423$xgWN3
     g$caadr$6769$xgWN3
     (case-lambda
       ((g$x$6602$xgWN3) (g$caar$6418$xgWN3 (cdr g$x$6602$xgWN3)))))
   (g$cadar$6424$xgWN3
     g$cadar$6770$xgWN3
     (case-lambda
       ((g$x$6603$xgWN3) (g$cadr$6419$xgWN3 (car g$x$6603$xgWN3)))))
   (g$caddr$6425$xgWN3
     g$caddr$6771$xgWN3
     (case-lambda
       ((g$x$6604$xgWN3) (g$cadr$6419$xgWN3 (cdr g$x$6604$xgWN3)))))
   (g$cdaar$6426$xgWN3
     g$cdaar$6772$xgWN3
     (case-lambda
       ((g$x$6605$xgWN3) (g$cdar$6420$xgWN3 (car g$x$6605$xgWN3)))))
   (g$cdadr$6427$xgWN3
     g$cdadr$6773$xgWN3
     (case-lambda
       ((g$x$6606$xgWN3) (g$cdar$6420$xgWN3 (cdr g$x$6606$xgWN3)))))
   (g$cddar$6428$xgWN3
     g$cddar$6774$xgWN3
     (case-lambda
       ((g$x$6607$xgWN3) (g$cddr$6421$xgWN3 (car g$x$6607$xgWN3)))))
   (g$cdddr$6429$xgWN3
     g$cdddr$6775$xgWN3
     (case-lambda
       ((g$x$6608$xgWN3) (g$cddr$6421$xgWN3 (cdr g$x$6608$xgWN3)))))
   (g$caaaar$6430$xgWN3
     g$caaaar$6776$xgWN3
     (case-lambda
       ((g$x$6609$xgWN3) (g$caaar$6422$xgWN3 (car g$x$6609$xgWN3)))))
   (g$caaadr$6431$xgWN3
     g$caaadr$6777$xgWN3
     (case-lambda
       ((g$x$6610$xgWN3) (g$caaar$6422$xgWN3 (cdr g$x$6610$xgWN3)))))
   (g$caadar$6432$xgWN3
     g$caadar$6778$xgWN3
     (case-lambda
       ((g$x$6611$xgWN3) (g$caadr$6423$xgWN3 (car g$x$6611$xgWN3)))))
   (g$caaddr$6433$xgWN3
     g$caaddr$6779$xgWN3
     (case-lambda
       ((g$x$6612$xgWN3) (g$caadr$6423$xgWN3 (cdr g$x$6612$xgWN3)))))
   (g$cadaar$6434$xgWN3
     g$cadaar$6780$xgWN3
     (case-lambda
       ((g$x$6613$xgWN3) (g$cadar$6424$xgWN3 (car g$x$6613$xgWN3)))))
   (g$cadadr$6435$xgWN3
     g$cadadr$6781$xgWN3
     (case-lambda
       ((g$x$6614$xgWN3) (g$cadar$6424$xgWN3 (cdr g$x$6614$xgWN3)))))
   (g$caddar$6436$xgWN3
     g$caddar$6782$xgWN3
     (case-lambda
       ((g$x$6615$xgWN3) (g$caddr$6425$xgWN3 (car g$x$6615$xgWN3)))))
   (g$cadddr$6437$xgWN3
     g$cadddr$6783$xgWN3
     (case-lambda
       ((g$x$6616$xgWN3) (g$caddr$6425$xgWN3 (cdr g$x$6616$xgWN3)))))
   (g$cdaaar$6438$xgWN3
     g$cdaaar$6784$xgWN3
     (case-lambda
       ((g$x$6617$xgWN3) (g$cdaar$6426$xgWN3 (car g$x$6617$xgWN3)))))
   (g$cdaadr$6439$xgWN3
     g$cdaadr$6785$xgWN3
     (case-lambda
       ((g$x$6618$xgWN3) (g$cdaar$6426$xgWN3 (cdr g$x$6618$xgWN3)))))
   (g$cdadar$6440$xgWN3
     g$cdadar$6786$xgWN3
     (case-lambda
       ((g$x$6619$xgWN3) (g$cdadr$6427$xgWN3 (car g$x$6619$xgWN3)))))
   (g$cdaddr$6441$xgWN3
     g$cdaddr$6787$xgWN3
     (case-lambda
       ((g$x$6620$xgWN3) (g$cdadr$6427$xgWN3 (cdr g$x$6620$xgWN3)))))
   (g$cddaar$6442$xgWN3
     g$cddaar$6788$xgWN3
     (case-lambda
       ((g$x$6621$xgWN3) (g$cddar$6428$xgWN3 (car g$x$6621$xgWN3)))))
   (g$cddadr$6443$xgWN3
     g$cddadr$6789$xgWN3
     (case-lambda
       ((g$x$6622$xgWN3) (g$cddar$6428$xgWN3 (cdr g$x$6622$xgWN3)))))
   (g$cdddar$6444$xgWN3
     g$cdddar$6790$xgWN3
     (case-lambda
       ((g$x$6623$xgWN3) (g$cdddr$6429$xgWN3 (car g$x$6623$xgWN3)))))
   (g$cddddr$6445$xgWN3
     g$cddddr$6791$xgWN3
     (case-lambda
       ((g$x$6624$xgWN3) (g$cdddr$6429$xgWN3 (cdr g$x$6624$xgWN3)))))
   (g$positive?$6446$xgWN3
     g$positive?$6792$xgWN3
     (case-lambda
       ((g$r$6625$xgWN3)
        (begin
          (if (not (real-valued? g$r$6625$xgWN3))
            (assertion-violation 'positive? '"not a real" g$r$6625$xgWN3)
            (void))
          (< '0 g$r$6625$xgWN3)))))
   (g$negative?$6447$xgWN3
     g$negative?$6793$xgWN3
     (case-lambda
       ((g$r$6626$xgWN3)
        (begin
          (if (not (real-valued? g$r$6626$xgWN3))
            (assertion-violation 'negative? '"not a real" g$r$6626$xgWN3)
            (void))
          (> '0 g$r$6626$xgWN3)))))
   (g$zero?$6448$xgWN3
     g$zero?$6794$xgWN3
     (case-lambda
       ((g$r$6627$xgWN3)
        (begin
          (if (not (real-valued? g$r$6627$xgWN3))
            (assertion-violation 'zero? '"not a real" g$r$6627$xgWN3)
            (void))
          (= '0 g$r$6627$xgWN3)))))
   (g$even?$6449$xgWN3
     g$even?$6795$xgWN3
     (case-lambda
       ((g$n$6628$xgWN3)
        (begin
          (if (not (integer-valued? g$n$6628$xgWN3))
            (assertion-violation 'even? '"not a integer" g$n$6628$xgWN3)
            (void))
          (= '0 (g$mod$6403$xgWN3 g$n$6628$xgWN3 '2))))))
   (g$odd?$6450$xgWN3
     g$odd?$6796$xgWN3
     (case-lambda
       ((g$n$6629$xgWN3)
        (begin
          (if (not (integer-valued? g$n$6629$xgWN3))
            (assertion-violation 'odd? '"not a integer" g$n$6629$xgWN3)
            (void))
          (= '1 (g$mod$6403$xgWN3 g$n$6629$xgWN3 '2))))))
   (g$max$6451$xgWN3
     g$max$6797$xgWN3
     (case-lambda
       ((g$a$6630$xgWN3 . g$rest$6631$xgWN3)
        (g$fold-left$6088$xgWN3
          (case-lambda
            ((g$a$6632$xgWN3 g$b$6633$xgWN3)
             ((case-lambda
                ((g$r$6634$xgWN3)
                 (if ((case-lambda
                        ((g$t$6635$xgWN3)
                         (if g$t$6635$xgWN3
                           g$t$6635$xgWN3
                           (begin '#f (inexact? g$b$6633$xgWN3)))))
                      (inexact? g$a$6632$xgWN3))
                   (inexact g$r$6634$xgWN3)
                   g$r$6634$xgWN3)))
              (if (< g$a$6632$xgWN3 g$b$6633$xgWN3)
                g$b$6633$xgWN3
                g$a$6632$xgWN3))))
          g$a$6630$xgWN3
          g$rest$6631$xgWN3))))
   (g$min$6452$xgWN3
     g$min$6798$xgWN3
     (case-lambda
       ((g$a$6636$xgWN3 . g$rest$6637$xgWN3)
        (g$fold-left$6088$xgWN3
          (case-lambda
            ((g$a$6638$xgWN3 g$b$6639$xgWN3)
             ((case-lambda
                ((g$r$6640$xgWN3)
                 (if ((case-lambda
                        ((g$t$6641$xgWN3)
                         (if g$t$6641$xgWN3
                           g$t$6641$xgWN3
                           (begin '#f (inexact? g$b$6639$xgWN3)))))
                      (inexact? g$a$6638$xgWN3))
                   (inexact g$r$6640$xgWN3)
                   g$r$6640$xgWN3)))
              (if (> g$a$6638$xgWN3 g$b$6639$xgWN3)
                g$b$6639$xgWN3
                g$a$6638$xgWN3))))
          g$a$6636$xgWN3
          g$rest$6637$xgWN3))))
   (g$gcd$6453$xgWN3
     g$gcd$6799$xgWN3
     (case-lambda
       (g$nums$6642$xgWN3
        ((case-lambda
           ((g$t$6643$xgWN3)
            (if (g$memv$6078$xgWN3 g$t$6643$xgWN3 '(0))
              '0
              (if (g$memv$6078$xgWN3 g$t$6643$xgWN3 '(1))
                ((case-lambda
                   ((g$n$6644$xgWN3)
                    (begin
                      (if (not (integer-valued? g$n$6644$xgWN3))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$6644$xgWN3)
                        (void))
                      (abs g$n$6644$xgWN3))))
                 (car g$nums$6642$xgWN3))
                (if (g$memv$6078$xgWN3 g$t$6643$xgWN3 '(2))
                  ((case-lambda
                     ((g$a$6645$xgWN3 g$b$6646$xgWN3)
                      (begin
                        (if (not (integer-valued? g$a$6645$xgWN3))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$6645$xgWN3)
                          (void))
                        (if (not (integer-valued? g$b$6646$xgWN3))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$6646$xgWN3)
                          (void))
                        (if (g$zero?$6448$xgWN3 g$b$6646$xgWN3)
                          (abs g$a$6645$xgWN3)
                          (abs (g$gcd$6453$xgWN3
                                 g$b$6646$xgWN3
                                 (g$mod$6403$xgWN3
                                   g$a$6645$xgWN3
                                   g$b$6646$xgWN3)))))))
                   (car g$nums$6642$xgWN3)
                   (g$cadr$6419$xgWN3 g$nums$6642$xgWN3))
                  (g$fold-left$6088$xgWN3
                    g$gcd$6453$xgWN3
                    (abs (car g$nums$6642$xgWN3))
                    (cdr g$nums$6642$xgWN3)))))))
         (length g$nums$6642$xgWN3)))))
   (g$lcm$6454$xgWN3
     g$lcm$6800$xgWN3
     (case-lambda
       (g$nums$6647$xgWN3
        ((case-lambda
           ((g$t$6648$xgWN3)
            (if (g$memv$6078$xgWN3 g$t$6648$xgWN3 '(0))
              '1
              (if (g$memv$6078$xgWN3 g$t$6648$xgWN3 '(1))
                ((case-lambda
                   ((g$n$6649$xgWN3)
                    (begin
                      (if (not (integer-valued? g$n$6649$xgWN3))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$6649$xgWN3)
                        (void))
                      (abs g$n$6649$xgWN3))))
                 (car g$nums$6647$xgWN3))
                (if (g$memv$6078$xgWN3 g$t$6648$xgWN3 '(2))
                  ((case-lambda
                     ((g$a$6650$xgWN3 g$b$6651$xgWN3)
                      (begin
                        (if (not (integer-valued? g$a$6650$xgWN3))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$6650$xgWN3)
                          (void))
                        (if (not (integer-valued? g$b$6651$xgWN3))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$6651$xgWN3)
                          (void))
                        (if ((case-lambda
                               ((g$t$6652$xgWN3)
                                (if g$t$6652$xgWN3
                                  g$t$6652$xgWN3
                                  (begin
                                    '#f
                                    (g$zero?$6448$xgWN3 g$b$6651$xgWN3)))))
                             (g$zero?$6448$xgWN3 g$a$6650$xgWN3))
                          '0
                          (abs (* (/ g$a$6650$xgWN3
                                     (g$gcd$6453$xgWN3
                                       g$a$6650$xgWN3
                                       g$b$6651$xgWN3))
                                  g$b$6651$xgWN3))))))
                   (car g$nums$6647$xgWN3)
                   (g$cadr$6419$xgWN3 g$nums$6647$xgWN3))
                  (g$fold-left$6088$xgWN3
                    g$lcm$6454$xgWN3
                    (abs (car g$nums$6647$xgWN3))
                    (cdr g$nums$6647$xgWN3)))))))
         (length g$nums$6647$xgWN3)))))
   (g$string=?$6492$xgWN3
     g$string=?$6801$xgWN3
     (case-lambda
       ((g$a$6653$xgWN3 g$b$6654$xgWN3 . g$rest$6655$xgWN3)
        (begin
          (if (not (string? g$a$6653$xgWN3))
            (assertion-violation 'string=? '"not a string" g$a$6653$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6656$xgWN3)
               (begin
                 (if (not (string? g$x$6656$xgWN3))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$6656$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$6657$xgWN3)
                     (begin
                       (set! g$a$6653$xgWN3 g$x$6656$xgWN3)
                       g$r$6657$xgWN3)))
                  (fx=? (string-compare g$a$6653$xgWN3 g$x$6656$xgWN3) '0)))))
            (cons g$b$6654$xgWN3 g$rest$6655$xgWN3))))))
   (g$string<?$6493$xgWN3
     g$string<?$6802$xgWN3
     (case-lambda
       ((g$a$6658$xgWN3 g$b$6659$xgWN3 . g$rest$6660$xgWN3)
        (begin
          (if (not (string? g$a$6658$xgWN3))
            (assertion-violation 'string<? '"not a string" g$a$6658$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6661$xgWN3)
               (begin
                 (if (not (string? g$x$6661$xgWN3))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$6661$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$6662$xgWN3)
                     (begin
                       (set! g$a$6658$xgWN3 g$x$6661$xgWN3)
                       g$r$6662$xgWN3)))
                  (fx<? (string-compare g$a$6658$xgWN3 g$x$6661$xgWN3) '0)))))
            (cons g$b$6659$xgWN3 g$rest$6660$xgWN3))))))
   (g$string>?$6494$xgWN3
     g$string>?$6803$xgWN3
     (case-lambda
       ((g$a$6663$xgWN3 g$b$6664$xgWN3 . g$rest$6665$xgWN3)
        (begin
          (if (not (string? g$a$6663$xgWN3))
            (assertion-violation 'string>? '"not a string" g$a$6663$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6666$xgWN3)
               (begin
                 (if (not (string? g$x$6666$xgWN3))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$6666$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$6667$xgWN3)
                     (begin
                       (set! g$a$6663$xgWN3 g$x$6666$xgWN3)
                       g$r$6667$xgWN3)))
                  (fx>? (string-compare g$a$6663$xgWN3 g$x$6666$xgWN3) '0)))))
            (cons g$b$6664$xgWN3 g$rest$6665$xgWN3))))))
   (g$string<=?$6495$xgWN3
     g$string<=?$6804$xgWN3
     (case-lambda
       ((g$a$6668$xgWN3 g$b$6669$xgWN3 . g$rest$6670$xgWN3)
        (begin
          (if (not (string? g$a$6668$xgWN3))
            (assertion-violation 'string<=? '"not a string" g$a$6668$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6671$xgWN3)
               (begin
                 (if (not (string? g$x$6671$xgWN3))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$6671$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$6672$xgWN3)
                     (begin
                       (set! g$a$6668$xgWN3 g$x$6671$xgWN3)
                       g$r$6672$xgWN3)))
                  (fx<=? (string-compare g$a$6668$xgWN3 g$x$6671$xgWN3) '0)))))
            (cons g$b$6669$xgWN3 g$rest$6670$xgWN3))))))
   (g$string>=?$6496$xgWN3
     g$string>=?$6805$xgWN3
     (case-lambda
       ((g$a$6673$xgWN3 g$b$6674$xgWN3 . g$rest$6675$xgWN3)
        (begin
          (if (not (string? g$a$6673$xgWN3))
            (assertion-violation 'string>=? '"not a string" g$a$6673$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6676$xgWN3)
               (begin
                 (if (not (string? g$x$6676$xgWN3))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$6676$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$6677$xgWN3)
                     (begin
                       (set! g$a$6673$xgWN3 g$x$6676$xgWN3)
                       g$r$6677$xgWN3)))
                  (fx>=? (string-compare g$a$6673$xgWN3 g$x$6676$xgWN3) '0)))))
            (cons g$b$6674$xgWN3 g$rest$6675$xgWN3))))))
   (g$symbol=?$6497$xgWN3
     g$symbol=?$6806$xgWN3
     (case-lambda
       ((g$a$6678$xgWN3 g$b$6679$xgWN3 . g$rest$6680$xgWN3)
        (begin
          (if (not (g$symbol?$6410$xgWN3 g$a$6678$xgWN3))
            (assertion-violation 'symbol=? '"not a symbol" g$a$6678$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6681$xgWN3)
               (begin
                 (if (not (g$symbol?$6410$xgWN3 g$x$6681$xgWN3))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$6681$xgWN3)
                   (void))
                 (eq? g$a$6678$xgWN3 g$x$6681$xgWN3))))
            (cons g$b$6679$xgWN3 g$rest$6680$xgWN3))))))
   (g$boolean=?$6498$xgWN3
     g$boolean=?$6807$xgWN3
     (case-lambda
       ((g$a$6682$xgWN3 g$b$6683$xgWN3 . g$rest$6684$xgWN3)
        (begin
          (if (not (g$boolean?$6411$xgWN3 g$a$6682$xgWN3))
            (assertion-violation 'boolean=? '"not a boolean" g$a$6682$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6685$xgWN3)
               (begin
                 (if (not (g$boolean?$6411$xgWN3 g$x$6685$xgWN3))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$6685$xgWN3)
                   (void))
                 (eq? g$a$6682$xgWN3 g$x$6685$xgWN3))))
            (cons g$b$6683$xgWN3 g$rest$6684$xgWN3))))))
   (g$char=?$6536$xgWN3
     g$char=?$6808$xgWN3
     (case-lambda
       ((g$a$6686$xgWN3 g$b$6687$xgWN3 . g$rest$6688$xgWN3)
        (begin
          (if (not (g$char?$6407$xgWN3 g$a$6686$xgWN3))
            (assertion-violation 'char=? '"not a char" g$a$6686$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6689$xgWN3)
               (begin
                 (if (not (g$char?$6407$xgWN3 g$x$6689$xgWN3))
                   (assertion-violation 'char=? '"not a char" g$x$6689$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$6690$xgWN3)
                     (begin
                       (set! g$a$6686$xgWN3 g$x$6689$xgWN3)
                       g$r$6690$xgWN3)))
                  (fx=?
                    (char->integer g$a$6686$xgWN3)
                    (char->integer g$x$6689$xgWN3))))))
            (cons g$b$6687$xgWN3 g$rest$6688$xgWN3))))))
   (g$char<?$6537$xgWN3
     g$char<?$6809$xgWN3
     (case-lambda
       ((g$a$6691$xgWN3 g$b$6692$xgWN3 . g$rest$6693$xgWN3)
        (begin
          (if (not (g$char?$6407$xgWN3 g$a$6691$xgWN3))
            (assertion-violation 'char<? '"not a char" g$a$6691$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6694$xgWN3)
               (begin
                 (if (not (g$char?$6407$xgWN3 g$x$6694$xgWN3))
                   (assertion-violation 'char<? '"not a char" g$x$6694$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$6695$xgWN3)
                     (begin
                       (set! g$a$6691$xgWN3 g$x$6694$xgWN3)
                       g$r$6695$xgWN3)))
                  (fx<?
                    (char->integer g$a$6691$xgWN3)
                    (char->integer g$x$6694$xgWN3))))))
            (cons g$b$6692$xgWN3 g$rest$6693$xgWN3))))))
   (g$char>?$6538$xgWN3
     g$char>?$6810$xgWN3
     (case-lambda
       ((g$a$6696$xgWN3 g$b$6697$xgWN3 . g$rest$6698$xgWN3)
        (begin
          (if (not (g$char?$6407$xgWN3 g$a$6696$xgWN3))
            (assertion-violation 'char>? '"not a char" g$a$6696$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6699$xgWN3)
               (begin
                 (if (not (g$char?$6407$xgWN3 g$x$6699$xgWN3))
                   (assertion-violation 'char>? '"not a char" g$x$6699$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$6700$xgWN3)
                     (begin
                       (set! g$a$6696$xgWN3 g$x$6699$xgWN3)
                       g$r$6700$xgWN3)))
                  (fx>?
                    (char->integer g$a$6696$xgWN3)
                    (char->integer g$x$6699$xgWN3))))))
            (cons g$b$6697$xgWN3 g$rest$6698$xgWN3))))))
   (g$char<=?$6539$xgWN3
     g$char<=?$6811$xgWN3
     (case-lambda
       ((g$a$6701$xgWN3 g$b$6702$xgWN3 . g$rest$6703$xgWN3)
        (begin
          (if (not (g$char?$6407$xgWN3 g$a$6701$xgWN3))
            (assertion-violation 'char<=? '"not a char" g$a$6701$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6704$xgWN3)
               (begin
                 (if (not (g$char?$6407$xgWN3 g$x$6704$xgWN3))
                   (assertion-violation 'char<=? '"not a char" g$x$6704$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$6705$xgWN3)
                     (begin
                       (set! g$a$6701$xgWN3 g$x$6704$xgWN3)
                       g$r$6705$xgWN3)))
                  (fx<=?
                    (char->integer g$a$6701$xgWN3)
                    (char->integer g$x$6704$xgWN3))))))
            (cons g$b$6702$xgWN3 g$rest$6703$xgWN3))))))
   (g$char>=?$6540$xgWN3
     g$char>=?$6812$xgWN3
     (case-lambda
       ((g$a$6706$xgWN3 g$b$6707$xgWN3 . g$rest$6708$xgWN3)
        (begin
          (if (not (g$char?$6407$xgWN3 g$a$6706$xgWN3))
            (assertion-violation 'char>=? '"not a char" g$a$6706$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$6709$xgWN3)
               (begin
                 (if (not (g$char?$6407$xgWN3 g$x$6709$xgWN3))
                   (assertion-violation 'char>=? '"not a char" g$x$6709$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$6710$xgWN3)
                     (begin
                       (set! g$a$6706$xgWN3 g$x$6709$xgWN3)
                       g$r$6710$xgWN3)))
                  (fx>=?
                    (char->integer g$a$6706$xgWN3)
                    (char->integer g$x$6709$xgWN3))))))
            (cons g$b$6707$xgWN3 g$rest$6708$xgWN3))))))
   (g$rationalize$6541$xgWN3
     g$rationalize$6813$xgWN3
     (case-lambda
       ((g$x$6711$xgWN3 g$e$6712$xgWN3)
        (if (if (infinite? g$x$6711$xgWN3)
              (begin '#f (infinite? g$e$6712$xgWN3))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$6713$xgWN3)
              (if (if (exact? g$x$6711$xgWN3)
                    (begin '#f (exact? g$e$6712$xgWN3))
                    '#f)
                g$r$6713$xgWN3
                (inexact g$r$6713$xgWN3))))
           (apply
             /
             (g$find-ratio$6542$xgWN3 g$x$6711$xgWN3 g$e$6712$xgWN3)))))))
   (g$find-ratio$6542$xgWN3
     g$find-ratio$6814$xgWN3
     (case-lambda
       ((g$x$6714$xgWN3 g$e$6715$xgWN3)
        (g$find-ratio-between$6543$xgWN3
          (- g$x$6714$xgWN3 g$e$6715$xgWN3)
          (+ g$x$6714$xgWN3 g$e$6715$xgWN3)))))
   (g$find-ratio-between$6543$xgWN3
     g$find-ratio-between$6815$xgWN3
     (case-lambda
       ((g$x$6716$xgWN3 g$y$6717$xgWN3)
        (letrec* ((g$sr$6718$xgWN3
                    (case-lambda
                      ((g$x$6720$xgWN3 g$y$6721$xgWN3)
                       ((case-lambda
                          ((g$fx$6722$xgWN3 g$fy$6723$xgWN3)
                           (if (>= g$fx$6722$xgWN3 g$x$6720$xgWN3)
                             (list g$fx$6722$xgWN3 '1)
                             (if (= g$fx$6722$xgWN3 g$fy$6723$xgWN3)
                               ((case-lambda
                                  ((g$rat$6724$xgWN3)
                                   (list
                                     (+ (g$cadr$6419$xgWN3 g$rat$6724$xgWN3)
                                        (* g$fx$6722$xgWN3
                                           (car g$rat$6724$xgWN3)))
                                     (car g$rat$6724$xgWN3))))
                                (g$sr$6718$xgWN3
                                  (/ (- g$y$6721$xgWN3 g$fy$6723$xgWN3))
                                  (/ (- g$x$6720$xgWN3 g$fx$6722$xgWN3))))
                               (list (+ '1 g$fx$6722$xgWN3) '1)))))
                        (exact (floor g$x$6720$xgWN3))
                        (exact (floor g$y$6721$xgWN3)))))))
          (if (< g$y$6717$xgWN3 g$x$6716$xgWN3)
            (g$find-ratio-between$6543$xgWN3 g$y$6717$xgWN3 g$x$6716$xgWN3)
            (if (>= g$x$6716$xgWN3 g$y$6717$xgWN3)
              (list g$x$6716$xgWN3 '1)
              (if (g$positive?$6446$xgWN3 g$x$6716$xgWN3)
                (g$sr$6718$xgWN3 g$x$6716$xgWN3 g$y$6717$xgWN3)
                (if (g$negative?$6447$xgWN3 g$y$6717$xgWN3)
                  ((case-lambda
                     ((g$rat$6719$xgWN3)
                      (list
                        (- (car g$rat$6719$xgWN3))
                        (g$cadr$6419$xgWN3 g$rat$6719$xgWN3))))
                   (g$sr$6718$xgWN3 (- g$y$6717$xgWN3) (- g$x$6716$xgWN3)))
                  '(0 1)))))))))
   (g$vector-map$6544$xgWN3
     g$vector-map$6816$xgWN3
     (case-lambda
       ((g$p$6725$xgWN3 g$vec1$6726$xgWN3 . g$vecs$6727$xgWN3)
        ((case-lambda
           ((g$len$6728$xgWN3)
            ((case-lambda
               ((g$res$6729$xgWN3)
                (letrec ((g$loop$6730$xgWN3
                           (case-lambda
                             ((g$i$6731$xgWN3)
                              (if (fx=? g$i$6731$xgWN3 g$len$6728$xgWN3)
                                (begin (if '#f '#f (void)) g$res$6729$xgWN3)
                                (begin
                                  (vector-set!
                                    g$res$6729$xgWN3
                                    g$i$6731$xgWN3
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (apply
                                           values
                                           (g$map$6085$xgWN3
                                             (case-lambda
                                               ((g$x$6732$xgWN3)
                                                (vector-ref
                                                  g$x$6732$xgWN3
                                                  g$i$6731$xgWN3)))
                                             (cons
                                               g$vec1$6726$xgWN3
                                               g$vecs$6727$xgWN3)))))
                                      g$p$6725$xgWN3))
                                  (g$loop$6730$xgWN3
                                    (fx+ g$i$6731$xgWN3 '1))))))))
                  (g$loop$6730$xgWN3 '0))))
             (make-vector g$len$6728$xgWN3))))
         (vector-length g$vec1$6726$xgWN3)))))
   (g$vector-for-each$6545$xgWN3
     g$vector-for-each$6817$xgWN3
     (case-lambda
       ((g$p$6733$xgWN3 g$vec1$6734$xgWN3 . g$vecs$6735$xgWN3)
        ((case-lambda
           ((g$len$6736$xgWN3)
            (letrec ((g$loop$6737$xgWN3
                       (case-lambda
                         ((g$i$6738$xgWN3)
                          (if (fx=? g$i$6738$xgWN3 g$len$6736$xgWN3)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$6085$xgWN3
                                       (case-lambda
                                         ((g$x$6739$xgWN3)
                                          (vector-ref
                                            g$x$6739$xgWN3
                                            g$i$6738$xgWN3)))
                                       (cons
                                         g$vec1$6734$xgWN3
                                         g$vecs$6735$xgWN3)))))
                                g$p$6733$xgWN3)
                              (g$loop$6737$xgWN3 (fx+ g$i$6738$xgWN3 '1))))))))
              (g$loop$6737$xgWN3 '0))))
         (vector-length g$vec1$6734$xgWN3)))))
   (g$string-for-each$6546$xgWN3
     g$string-for-each$6818$xgWN3
     (case-lambda
       ((g$p$6740$xgWN3 g$str1$6741$xgWN3 . g$strs$6742$xgWN3)
        ((case-lambda
           ((g$len$6743$xgWN3)
            (letrec ((g$loop$6744$xgWN3
                       (case-lambda
                         ((g$i$6745$xgWN3)
                          (if (fx=? g$i$6745$xgWN3 g$len$6743$xgWN3)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$6085$xgWN3
                                       (case-lambda
                                         ((g$x$6746$xgWN3)
                                          (string-ref
                                            g$x$6746$xgWN3
                                            g$i$6745$xgWN3)))
                                       (cons
                                         g$str1$6741$xgWN3
                                         g$strs$6742$xgWN3)))))
                                g$p$6740$xgWN3)
                              (g$loop$6744$xgWN3 (fx+ g$i$6745$xgWN3 '1))))))))
              (g$loop$6744$xgWN3 '0))))
         (string-length g$str1$6741$xgWN3))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$6820$xgWN3 g$using$6853$xgWN3 (clr-using-internal 'system))
   (g$using$6822$xgWN3
     g$using$6854$xgWN3
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$6823$xgWN3
     g$make-eq-hashtable$6855$xgWN3
     (case-lambda
       (() (g$make-eq-hashtable$6823$xgWN3 '32))
       ((g$k$6832$xgWN3)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$6832$xgWN3)))))
   (g$make-eqv-hashtable$6824$xgWN3
     g$make-eqv-hashtable$6856$xgWN3
     (case-lambda
       (() (g$make-eqv-hashtable$6824$xgWN3 '32))
       ((g$k$6833$xgWN3) (make-hashtable eqv-hash eqv? g$k$6833$xgWN3))))
   (g$hashtable-size$6825$xgWN3
     g$hashtable-size$6857$xgWN3
     (case-lambda
       ((g$ht$6834$xgWN3)
        (clr-call-internal 'hashtable 'get_count g$ht$6834$xgWN3))))
   (g$hashtable-ref$6826$xgWN3
     g$hashtable-ref$6858$xgWN3
     (case-lambda
       ((g$ht$6835$xgWN3 g$key$6836$xgWN3 g$default$6837$xgWN3)
        (letrec* ((g$r$6838$xgWN3
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$6835$xgWN3
                      g$key$6836$xgWN3)))
          (if (not (null? g$r$6838$xgWN3))
            g$r$6838$xgWN3
            g$default$6837$xgWN3)))))
   (g$hashtable-set!$6827$xgWN3
     g$hashtable-set!$6859$xgWN3
     (case-lambda
       ((g$ht$6839$xgWN3 g$key$6840$xgWN3 g$obj$6841$xgWN3)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$6839$xgWN3
          g$key$6840$xgWN3
          g$obj$6841$xgWN3))))
   (g$hashtable-delete!$6828$xgWN3
     g$hashtable-delete!$6860$xgWN3
     (case-lambda
       ((g$ht$6842$xgWN3 g$key$6843$xgWN3)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$6842$xgWN3
          g$key$6843$xgWN3))))
   (g$hashtable-contains?$6829$xgWN3
     g$hashtable-contains?$6861$xgWN3
     (case-lambda
       ((g$ht$6844$xgWN3 g$key$6845$xgWN3)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$6844$xgWN3
          g$key$6845$xgWN3))))
   (g$hashtable-update!$6830$xgWN3
     g$hashtable-update!$6862$xgWN3
     (case-lambda
       ((g$ht$6846$xgWN3
          g$key$6847$xgWN3
          g$proc$6848$xgWN3
          g$default$6849$xgWN3)
        (g$hashtable-set!$6827$xgWN3
          g$ht$6846$xgWN3
          g$key$6847$xgWN3
          (g$proc$6848$xgWN3
            (g$hashtable-ref$6826$xgWN3
              g$ht$6846$xgWN3
              g$key$6847$xgWN3
              g$default$6849$xgWN3))))))
   (g$hashtable-clear!$6831$xgWN3
     g$hashtable-clear!$6863$xgWN3
     (case-lambda
       ((g$ht$6850$xgWN3) (g$hashtable-clear!$6831$xgWN3 g$ht$6850$xgWN3 '32))
       ((g$ht$6851$xgWN3 g$k$6852$xgWN3)
        (clr-call-internal 'hashtable 'clear g$ht$6851$xgWN3)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$6865$xgWN3 g$using$6872$xgWN3 (clr-using-internal 'system.io))
   (g$file-exists?$6866$xgWN3
     g$file-exists?$6873$xgWN3
     (case-lambda
       ((g$fn$6869$xgWN3)
        (clr-call-internal 'file 'exists '() g$fn$6869$xgWN3))))
   (g$delete-file$6867$xgWN3
     g$delete-file$6874$xgWN3
     (case-lambda
       ((g$fn$6870$xgWN3)
        (clr-call-internal 'file 'delete '() g$fn$6870$xgWN3))))
   (g$get-directory-name$6868$xgWN3
     g$get-directory-name$6875$xgWN3
     (case-lambda
       ((g$path$6871$xgWN3)
        (clr-call-internal 'path 'getdirectoryname '() g$path$6871$xgWN3)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$6876$xgWN3
     g$native-endianness$6987$xgWN3
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$6877$xgWN3
     g$bytevector-u16-ref$6988$xgWN3
     (case-lambda
       ((g$bytevector$6905$xgWN3 g$k$6906$xgWN3 g$endianness$6907$xgWN3)
        (bytevector-uint-ref
          g$bytevector$6905$xgWN3
          g$k$6906$xgWN3
          g$endianness$6907$xgWN3
          '2))))
   (g$bytevector-s16-ref$6878$xgWN3
     g$bytevector-s16-ref$6989$xgWN3
     (case-lambda
       ((g$bytevector$6908$xgWN3 g$k$6909$xgWN3 g$endianness$6910$xgWN3)
        (bytevector-sint-ref
          g$bytevector$6908$xgWN3
          g$k$6909$xgWN3
          g$endianness$6910$xgWN3
          '2))))
   (g$bytevector-u16-native-ref$6879$xgWN3
     g$bytevector-u16-native-ref$6990$xgWN3
     (case-lambda
       ((g$bytevector$6911$xgWN3 g$k$6912$xgWN3)
        (bytevector-uint-ref
          g$bytevector$6911$xgWN3
          g$k$6912$xgWN3
          (g$native-endianness$6876$xgWN3)
          '2))))
   (g$bytevector-s16-native-ref$6880$xgWN3
     g$bytevector-s16-native-ref$6991$xgWN3
     (case-lambda
       ((g$bytevector$6913$xgWN3 g$k$6914$xgWN3)
        (bytevector-sint-ref
          g$bytevector$6913$xgWN3
          g$k$6914$xgWN3
          (g$native-endianness$6876$xgWN3)
          '2))))
   (g$bytevector-u16-set!$6881$xgWN3
     g$bytevector-u16-set!$6992$xgWN3
     (case-lambda
       ((g$bytevector$6915$xgWN3
          g$k$6916$xgWN3
          g$n$6917$xgWN3
          g$endianness$6918$xgWN3)
        (bytevector-uint-set!
          g$bytevector$6915$xgWN3
          g$k$6916$xgWN3
          g$n$6917$xgWN3
          g$endianness$6918$xgWN3
          '2))))
   (g$bytevector-s16-set!$6882$xgWN3
     g$bytevector-s16-set!$6993$xgWN3
     (case-lambda
       ((g$bytevector$6919$xgWN3
          g$k$6920$xgWN3
          g$n$6921$xgWN3
          g$endianness$6922$xgWN3)
        (bytevector-sint-set!
          g$bytevector$6919$xgWN3
          g$k$6920$xgWN3
          g$n$6921$xgWN3
          g$endianness$6922$xgWN3
          '2))))
   (g$bytevector-u16-native-set!$6883$xgWN3
     g$bytevector-u16-native-set!$6994$xgWN3
     (case-lambda
       ((g$bytevector$6923$xgWN3 g$k$6924$xgWN3 g$n$6925$xgWN3)
        (bytevector-uint-set!
          g$bytevector$6923$xgWN3
          g$k$6924$xgWN3
          g$n$6925$xgWN3
          (g$native-endianness$6876$xgWN3)
          '2))))
   (g$bytevector-s16-native-set!$6884$xgWN3
     g$bytevector-s16-native-set!$6995$xgWN3
     (case-lambda
       ((g$bytevector$6926$xgWN3 g$k$6927$xgWN3 g$n$6928$xgWN3)
        (bytevector-sint-set!
          g$bytevector$6926$xgWN3
          g$k$6927$xgWN3
          g$n$6928$xgWN3
          (g$native-endianness$6876$xgWN3)
          '2))))
   (g$bytevector-u32-ref$6885$xgWN3
     g$bytevector-u32-ref$6996$xgWN3
     (case-lambda
       ((g$bytevector$6929$xgWN3 g$k$6930$xgWN3 g$endianness$6931$xgWN3)
        (bytevector-uint-ref
          g$bytevector$6929$xgWN3
          g$k$6930$xgWN3
          g$endianness$6931$xgWN3
          '4))))
   (g$bytevector-s32-ref$6886$xgWN3
     g$bytevector-s32-ref$6997$xgWN3
     (case-lambda
       ((g$bytevector$6932$xgWN3 g$k$6933$xgWN3 g$endianness$6934$xgWN3)
        (bytevector-sint-ref
          g$bytevector$6932$xgWN3
          g$k$6933$xgWN3
          g$endianness$6934$xgWN3
          '4))))
   (g$bytevector-u32-native-ref$6887$xgWN3
     g$bytevector-u32-native-ref$6998$xgWN3
     (case-lambda
       ((g$bytevector$6935$xgWN3 g$k$6936$xgWN3)
        (bytevector-uint-ref
          g$bytevector$6935$xgWN3
          g$k$6936$xgWN3
          (g$native-endianness$6876$xgWN3)
          '4))))
   (g$bytevector-s32-native-ref$6888$xgWN3
     g$bytevector-s32-native-ref$6999$xgWN3
     (case-lambda
       ((g$bytevector$6937$xgWN3 g$k$6938$xgWN3)
        (bytevector-sint-ref
          g$bytevector$6937$xgWN3
          g$k$6938$xgWN3
          (g$native-endianness$6876$xgWN3)
          '4))))
   (g$bytevector-u32-set!$6889$xgWN3
     g$bytevector-u32-set!$7000$xgWN3
     (case-lambda
       ((g$bytevector$6939$xgWN3
          g$k$6940$xgWN3
          g$n$6941$xgWN3
          g$endianness$6942$xgWN3)
        (bytevector-uint-set!
          g$bytevector$6939$xgWN3
          g$k$6940$xgWN3
          g$n$6941$xgWN3
          g$endianness$6942$xgWN3
          '4))))
   (g$bytevector-s32-set!$6890$xgWN3
     g$bytevector-s32-set!$7001$xgWN3
     (case-lambda
       ((g$bytevector$6943$xgWN3
          g$k$6944$xgWN3
          g$n$6945$xgWN3
          g$endianness$6946$xgWN3)
        (bytevector-sint-set!
          g$bytevector$6943$xgWN3
          g$k$6944$xgWN3
          g$n$6945$xgWN3
          g$endianness$6946$xgWN3
          '4))))
   (g$bytevector-u32-native-set!$6891$xgWN3
     g$bytevector-u32-native-set!$7002$xgWN3
     (case-lambda
       ((g$bytevector$6947$xgWN3 g$k$6948$xgWN3 g$n$6949$xgWN3)
        (bytevector-uint-set!
          g$bytevector$6947$xgWN3
          g$k$6948$xgWN3
          g$n$6949$xgWN3
          (g$native-endianness$6876$xgWN3)
          '4))))
   (g$bytevector-s32-native-set!$6892$xgWN3
     g$bytevector-s32-native-set!$7003$xgWN3
     (case-lambda
       ((g$bytevector$6950$xgWN3 g$k$6951$xgWN3 g$n$6952$xgWN3)
        (bytevector-sint-set!
          g$bytevector$6950$xgWN3
          g$k$6951$xgWN3
          g$n$6952$xgWN3
          (g$native-endianness$6876$xgWN3)
          '4))))
   (g$bytevector-u64-ref$6893$xgWN3
     g$bytevector-u64-ref$7004$xgWN3
     (case-lambda
       ((g$bytevector$6953$xgWN3 g$k$6954$xgWN3 g$endianness$6955$xgWN3)
        (bytevector-uint-ref
          g$bytevector$6953$xgWN3
          g$k$6954$xgWN3
          g$endianness$6955$xgWN3
          '8))))
   (g$bytevector-s64-ref$6894$xgWN3
     g$bytevector-s64-ref$7005$xgWN3
     (case-lambda
       ((g$bytevector$6956$xgWN3 g$k$6957$xgWN3 g$endianness$6958$xgWN3)
        (bytevector-sint-ref
          g$bytevector$6956$xgWN3
          g$k$6957$xgWN3
          g$endianness$6958$xgWN3
          '8))))
   (g$bytevector-u64-native-ref$6895$xgWN3
     g$bytevector-u64-native-ref$7006$xgWN3
     (case-lambda
       ((g$bytevector$6959$xgWN3 g$k$6960$xgWN3)
        (bytevector-uint-ref
          g$bytevector$6959$xgWN3
          g$k$6960$xgWN3
          (g$native-endianness$6876$xgWN3)
          '8))))
   (g$bytevector-s64-native-ref$6896$xgWN3
     g$bytevector-s64-native-ref$7007$xgWN3
     (case-lambda
       ((g$bytevector$6961$xgWN3 g$k$6962$xgWN3)
        (bytevector-sint-ref
          g$bytevector$6961$xgWN3
          g$k$6962$xgWN3
          (g$native-endianness$6876$xgWN3)
          '8))))
   (g$bytevector-u64-set!$6897$xgWN3
     g$bytevector-u64-set!$7008$xgWN3
     (case-lambda
       ((g$bytevector$6963$xgWN3
          g$k$6964$xgWN3
          g$n$6965$xgWN3
          g$endianness$6966$xgWN3)
        (bytevector-uint-set!
          g$bytevector$6963$xgWN3
          g$k$6964$xgWN3
          g$n$6965$xgWN3
          g$endianness$6966$xgWN3
          '8))))
   (g$bytevector-s64-set!$6898$xgWN3
     g$bytevector-s64-set!$7009$xgWN3
     (case-lambda
       ((g$bytevector$6967$xgWN3
          g$k$6968$xgWN3
          g$n$6969$xgWN3
          g$endianness$6970$xgWN3)
        (bytevector-sint-set!
          g$bytevector$6967$xgWN3
          g$k$6968$xgWN3
          g$n$6969$xgWN3
          g$endianness$6970$xgWN3
          '8))))
   (g$bytevector-u64-native-set!$6899$xgWN3
     g$bytevector-u64-native-set!$7010$xgWN3
     (case-lambda
       ((g$bytevector$6971$xgWN3 g$k$6972$xgWN3 g$n$6973$xgWN3)
        (bytevector-uint-set!
          g$bytevector$6971$xgWN3
          g$k$6972$xgWN3
          g$n$6973$xgWN3
          (g$native-endianness$6876$xgWN3)
          '8))))
   (g$bytevector-s64-native-set!$6900$xgWN3
     g$bytevector-s64-native-set!$7011$xgWN3
     (case-lambda
       ((g$bytevector$6974$xgWN3 g$k$6975$xgWN3 g$n$6976$xgWN3)
        (bytevector-sint-set!
          g$bytevector$6974$xgWN3
          g$k$6975$xgWN3
          g$n$6976$xgWN3
          (g$native-endianness$6876$xgWN3)
          '8))))
   (g$bytevector-ieee-single-native-ref$6901$xgWN3
     g$bytevector-ieee-single-native-ref$7012$xgWN3
     (case-lambda
       ((g$bytevector$6977$xgWN3 g$k$6978$xgWN3)
        (if (not (g$zero?$6794$xgWN3 (g$mod$6749$xgWN3 g$k$6978$xgWN3 '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$6978$xgWN3)
          (bytevector-ieee-single-ref
            g$bytevector$6977$xgWN3
            g$k$6978$xgWN3
            (g$native-endianness$6876$xgWN3))))))
   (g$bytevector-ieee-double-native-ref$6902$xgWN3
     g$bytevector-ieee-double-native-ref$7013$xgWN3
     (case-lambda
       ((g$bytevector$6979$xgWN3 g$k$6980$xgWN3)
        (if (not (g$zero?$6794$xgWN3 (g$mod$6749$xgWN3 g$k$6980$xgWN3 '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$6980$xgWN3)
          (bytevector-ieee-double-ref
            g$bytevector$6979$xgWN3
            g$k$6980$xgWN3
            (g$native-endianness$6876$xgWN3))))))
   (g$bytevector-ieee-single-native-set!$6903$xgWN3
     g$bytevector-ieee-single-native-set!$7014$xgWN3
     (case-lambda
       ((g$bytevector$6981$xgWN3 g$k$6982$xgWN3 g$x$6983$xgWN3)
        (if (not (g$zero?$6794$xgWN3 (g$mod$6749$xgWN3 g$k$6982$xgWN3 '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$6982$xgWN3)
          (bytevector-ieee-single-set!
            g$bytevector$6981$xgWN3
            g$k$6982$xgWN3
            g$x$6983$xgWN3
            (g$native-endianness$6876$xgWN3))))))
   (g$bytevector-ieee-double-native-set!$6904$xgWN3
     g$bytevector-ieee-double-native-set!$7015$xgWN3
     (case-lambda
       ((g$bytevector$6984$xgWN3 g$k$6985$xgWN3 g$x$6986$xgWN3)
        (if (not (g$zero?$6794$xgWN3 (g$mod$6749$xgWN3 g$k$6985$xgWN3 '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$6985$xgWN3)
          (bytevector-ieee-double-set!
            g$bytevector$6984$xgWN3
            g$k$6985$xgWN3
            g$x$6986$xgWN3
            (g$native-endianness$6876$xgWN3)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$5786$7016$xgWN3
     g$5786$7394$xgWN3
     (make-record-type-descriptor
       '&condition
       '#f
       'g$5789$xgWN3
       '#f
       '#f
       '#()))
   (g$5788$7017$xgWN3 g$5788$7395$xgWN3 '#f)
   (g$5787$7018$xgWN3
     g$5787$7396$xgWN3
     (make-record-constructor-descriptor
       g$5786$7016$xgWN3
       '#f
       g$5788$7017$xgWN3))
   (g$&condition?$7021$xgWN3
     g$&condition?$7397$xgWN3
     (record-predicate g$5786$7016$xgWN3))
   (g$make-&condition$7022$xgWN3
     g$make-&condition$7398$xgWN3
     (record-constructor g$5787$7018$xgWN3))
   (g$&condition-rtd$7023$xgWN3
     g$&condition-rtd$7399$xgWN3
     g$5786$7016$xgWN3)
   (g$&condition-rcd$7024$xgWN3
     g$&condition-rcd$7400$xgWN3
     g$5787$7018$xgWN3)
   (g$5823$7098$xgWN3
     g$5823$7401$xgWN3
     (make-record-type-descriptor
       '&message
       g$5786$7016$xgWN3
       'g$5826$xgWN3
       '#f
       '#f
       '#((immutable message))))
   (g$5825$7099$xgWN3 g$5825$7402$xgWN3 '#f)
   (g$5824$7100$xgWN3
     g$5824$7403$xgWN3
     (make-record-constructor-descriptor
       g$5823$7098$xgWN3
       g$5787$7018$xgWN3
       g$5825$7099$xgWN3))
   (g$p?$7103$xgWN3 g$p?$7404$xgWN3 (record-predicate g$5823$7098$xgWN3))
   (g$make-message-condition$7104$xgWN3
     g$make-message-condition$7405$xgWN3
     (record-constructor g$5824$7100$xgWN3))
   (g$condition-message$7105$xgWN3
     g$condition-message$7406$xgWN3
     (record-accessor g$5823$7098$xgWN3 '0))
   (g$message-condition?$7106$xgWN3
     g$message-condition?$7407$xgWN3
     (condition-predicate g$5823$7098$xgWN3))
   (g$condition-message$7107$xgWN3
     g$condition-message$7408$xgWN3
     (condition-accessor g$5823$7098$xgWN3 g$condition-message$7105$xgWN3))
   (g$&message-rtd$7108$xgWN3 g$&message-rtd$7409$xgWN3 g$5823$7098$xgWN3)
   (g$&message-rcd$7109$xgWN3 g$&message-rcd$7410$xgWN3 g$5824$7100$xgWN3)
   (g$5838$7110$xgWN3
     g$5838$7411$xgWN3
     (make-record-type-descriptor
       '&warning
       g$5786$7016$xgWN3
       'g$5841$xgWN3
       '#f
       '#f
       '#()))
   (g$5840$7111$xgWN3 g$5840$7412$xgWN3 '#f)
   (g$5839$7112$xgWN3
     g$5839$7413$xgWN3
     (make-record-constructor-descriptor
       g$5838$7110$xgWN3
       g$5787$7018$xgWN3
       g$5840$7111$xgWN3))
   (g$p?$7115$xgWN3 g$p?$7414$xgWN3 (record-predicate g$5838$7110$xgWN3))
   (g$make-warning$7116$xgWN3
     g$make-warning$7415$xgWN3
     (record-constructor g$5839$7112$xgWN3))
   (g$warning?$7117$xgWN3
     g$warning?$7416$xgWN3
     (condition-predicate g$5838$7110$xgWN3))
   (g$&warning-rtd$7118$xgWN3 g$&warning-rtd$7417$xgWN3 g$5838$7110$xgWN3)
   (g$&warning-rcd$7119$xgWN3 g$&warning-rcd$7418$xgWN3 g$5839$7112$xgWN3)
   (g$5851$7120$xgWN3
     g$5851$7419$xgWN3
     (make-record-type-descriptor
       '&serious
       g$5786$7016$xgWN3
       'g$5854$xgWN3
       '#f
       '#f
       '#()))
   (g$5853$7121$xgWN3 g$5853$7420$xgWN3 '#f)
   (g$5852$7122$xgWN3
     g$5852$7421$xgWN3
     (make-record-constructor-descriptor
       g$5851$7120$xgWN3
       g$5787$7018$xgWN3
       g$5853$7121$xgWN3))
   (g$p?$7125$xgWN3 g$p?$7422$xgWN3 (record-predicate g$5851$7120$xgWN3))
   (g$make-serious-condition$7126$xgWN3
     g$make-serious-condition$7423$xgWN3
     (record-constructor g$5852$7122$xgWN3))
   (g$serious-condition?$7127$xgWN3
     g$serious-condition?$7424$xgWN3
     (condition-predicate g$5851$7120$xgWN3))
   (g$&serious-rtd$7128$xgWN3 g$&serious-rtd$7425$xgWN3 g$5851$7120$xgWN3)
   (g$&serious-rcd$7129$xgWN3 g$&serious-rcd$7426$xgWN3 g$5852$7122$xgWN3)
   (g$5864$7130$xgWN3
     g$5864$7427$xgWN3
     (make-record-type-descriptor
       '&error
       g$5851$7120$xgWN3
       'g$5867$xgWN3
       '#f
       '#f
       '#()))
   (g$5866$7131$xgWN3 g$5866$7428$xgWN3 '#f)
   (g$5865$7132$xgWN3
     g$5865$7429$xgWN3
     (make-record-constructor-descriptor
       g$5864$7130$xgWN3
       g$5852$7122$xgWN3
       g$5866$7131$xgWN3))
   (g$p?$7135$xgWN3 g$p?$7430$xgWN3 (record-predicate g$5864$7130$xgWN3))
   (g$make-error$7136$xgWN3
     g$make-error$7431$xgWN3
     (record-constructor g$5865$7132$xgWN3))
   (g$error?$7137$xgWN3
     g$error?$7432$xgWN3
     (condition-predicate g$5864$7130$xgWN3))
   (g$&error-rtd$7138$xgWN3 g$&error-rtd$7433$xgWN3 g$5864$7130$xgWN3)
   (g$&error-rcd$7139$xgWN3 g$&error-rcd$7434$xgWN3 g$5865$7132$xgWN3)
   (g$5877$7140$xgWN3
     g$5877$7435$xgWN3
     (make-record-type-descriptor
       '&violation
       g$5851$7120$xgWN3
       'g$5880$xgWN3
       '#f
       '#f
       '#()))
   (g$5879$7141$xgWN3 g$5879$7436$xgWN3 '#f)
   (g$5878$7142$xgWN3
     g$5878$7437$xgWN3
     (make-record-constructor-descriptor
       g$5877$7140$xgWN3
       g$5852$7122$xgWN3
       g$5879$7141$xgWN3))
   (g$p?$7145$xgWN3 g$p?$7438$xgWN3 (record-predicate g$5877$7140$xgWN3))
   (g$make-violation$7146$xgWN3
     g$make-violation$7439$xgWN3
     (record-constructor g$5878$7142$xgWN3))
   (g$violation?$7147$xgWN3
     g$violation?$7440$xgWN3
     (condition-predicate g$5877$7140$xgWN3))
   (g$&violation-rtd$7148$xgWN3
     g$&violation-rtd$7441$xgWN3
     g$5877$7140$xgWN3)
   (g$&violation-rcd$7149$xgWN3
     g$&violation-rcd$7442$xgWN3
     g$5878$7142$xgWN3)
   (g$5890$7150$xgWN3
     g$5890$7443$xgWN3
     (make-record-type-descriptor
       '&assertion
       g$5877$7140$xgWN3
       'g$5893$xgWN3
       '#f
       '#f
       '#()))
   (g$5892$7151$xgWN3 g$5892$7444$xgWN3 '#f)
   (g$5891$7152$xgWN3
     g$5891$7445$xgWN3
     (make-record-constructor-descriptor
       g$5890$7150$xgWN3
       g$5878$7142$xgWN3
       g$5892$7151$xgWN3))
   (g$p?$7155$xgWN3 g$p?$7446$xgWN3 (record-predicate g$5890$7150$xgWN3))
   (g$make-assertion-violation$7156$xgWN3
     g$make-assertion-violation$7447$xgWN3
     (record-constructor g$5891$7152$xgWN3))
   (g$assertion-violation?$7157$xgWN3
     g$assertion-violation?$7448$xgWN3
     (condition-predicate g$5890$7150$xgWN3))
   (g$&assertion-rtd$7158$xgWN3
     g$&assertion-rtd$7449$xgWN3
     g$5890$7150$xgWN3)
   (g$&assertion-rcd$7159$xgWN3
     g$&assertion-rcd$7450$xgWN3
     g$5891$7152$xgWN3)
   (g$5903$7161$xgWN3
     g$5903$7451$xgWN3
     (make-record-type-descriptor
       '&irritants
       g$5786$7016$xgWN3
       'g$5906$xgWN3
       '#f
       '#f
       '#((immutable irritants))))
   (g$5905$7162$xgWN3 g$5905$7452$xgWN3 '#f)
   (g$5904$7163$xgWN3
     g$5904$7453$xgWN3
     (make-record-constructor-descriptor
       g$5903$7161$xgWN3
       g$5787$7018$xgWN3
       g$5905$7162$xgWN3))
   (g$p?$7166$xgWN3 g$p?$7454$xgWN3 (record-predicate g$5903$7161$xgWN3))
   (g$make-irritants-condition$7167$xgWN3
     g$make-irritants-condition$7455$xgWN3
     (record-constructor g$5904$7163$xgWN3))
   (g$condition-irritants$7168$xgWN3
     g$condition-irritants$7456$xgWN3
     (record-accessor g$5903$7161$xgWN3 '0))
   (g$irritants-condition?$7169$xgWN3
     g$irritants-condition?$7457$xgWN3
     (condition-predicate g$5903$7161$xgWN3))
   (g$condition-irritants$7170$xgWN3
     g$condition-irritants$7458$xgWN3
     (condition-accessor g$5903$7161$xgWN3 g$condition-irritants$7168$xgWN3))
   (g$&irritants-rtd$7171$xgWN3
     g$&irritants-rtd$7459$xgWN3
     g$5903$7161$xgWN3)
   (g$&irritants-rcd$7172$xgWN3
     g$&irritants-rcd$7460$xgWN3
     g$5904$7163$xgWN3)
   (g$5918$7174$xgWN3
     g$5918$7461$xgWN3
     (make-record-type-descriptor
       '&who
       g$5786$7016$xgWN3
       'g$5921$xgWN3
       '#f
       '#f
       '#((immutable who))))
   (g$5920$7175$xgWN3 g$5920$7462$xgWN3 '#f)
   (g$5919$7176$xgWN3
     g$5919$7463$xgWN3
     (make-record-constructor-descriptor
       g$5918$7174$xgWN3
       g$5787$7018$xgWN3
       g$5920$7175$xgWN3))
   (g$p?$7179$xgWN3 g$p?$7464$xgWN3 (record-predicate g$5918$7174$xgWN3))
   (g$make-who-condition$7180$xgWN3
     g$make-who-condition$7465$xgWN3
     (record-constructor g$5919$7176$xgWN3))
   (g$condition-who$7181$xgWN3
     g$condition-who$7466$xgWN3
     (record-accessor g$5918$7174$xgWN3 '0))
   (g$who-condition?$7182$xgWN3
     g$who-condition?$7467$xgWN3
     (condition-predicate g$5918$7174$xgWN3))
   (g$condition-who$7183$xgWN3
     g$condition-who$7468$xgWN3
     (condition-accessor g$5918$7174$xgWN3 g$condition-who$7181$xgWN3))
   (g$&who-rtd$7184$xgWN3 g$&who-rtd$7469$xgWN3 g$5918$7174$xgWN3)
   (g$&who-rcd$7185$xgWN3 g$&who-rcd$7470$xgWN3 g$5919$7176$xgWN3)
   (g$5933$7186$xgWN3
     g$5933$7471$xgWN3
     (make-record-type-descriptor
       '&non-continuable
       g$5877$7140$xgWN3
       'g$5936$xgWN3
       '#f
       '#f
       '#()))
   (g$5935$7187$xgWN3 g$5935$7472$xgWN3 '#f)
   (g$5934$7188$xgWN3
     g$5934$7473$xgWN3
     (make-record-constructor-descriptor
       g$5933$7186$xgWN3
       g$5878$7142$xgWN3
       g$5935$7187$xgWN3))
   (g$p?$7191$xgWN3 g$p?$7474$xgWN3 (record-predicate g$5933$7186$xgWN3))
   (g$make-non-continuable-violation$7192$xgWN3
     g$make-non-continuable-violation$7475$xgWN3
     (record-constructor g$5934$7188$xgWN3))
   (g$non-continuable-violation?$7193$xgWN3
     g$non-continuable-violation?$7476$xgWN3
     (condition-predicate g$5933$7186$xgWN3))
   (g$&non-continuable-rtd$7194$xgWN3
     g$&non-continuable-rtd$7477$xgWN3
     g$5933$7186$xgWN3)
   (g$&non-continuable-rcd$7195$xgWN3
     g$&non-continuable-rcd$7478$xgWN3
     g$5934$7188$xgWN3)
   (g$5946$7196$xgWN3
     g$5946$7479$xgWN3
     (make-record-type-descriptor
       '&implementation-restriction
       g$5877$7140$xgWN3
       'g$5949$xgWN3
       '#f
       '#f
       '#()))
   (g$5948$7197$xgWN3 g$5948$7480$xgWN3 '#f)
   (g$5947$7198$xgWN3
     g$5947$7481$xgWN3
     (make-record-constructor-descriptor
       g$5946$7196$xgWN3
       g$5878$7142$xgWN3
       g$5948$7197$xgWN3))
   (g$p?$7201$xgWN3 g$p?$7482$xgWN3 (record-predicate g$5946$7196$xgWN3))
   (g$make-implementation-restriction-violation$7202$xgWN3
     g$make-implementation-restriction-violation$7483$xgWN3
     (record-constructor g$5947$7198$xgWN3))
   (g$implementation-restriction-violation?$7203$xgWN3
     g$implementation-restriction-violation?$7484$xgWN3
     (condition-predicate g$5946$7196$xgWN3))
   (g$&implementation-restriction-rtd$7204$xgWN3
     g$&implementation-restriction-rtd$7485$xgWN3
     g$5946$7196$xgWN3)
   (g$&implementation-restriction-rcd$7205$xgWN3
     g$&implementation-restriction-rcd$7486$xgWN3
     g$5947$7198$xgWN3)
   (g$5959$7206$xgWN3
     g$5959$7487$xgWN3
     (make-record-type-descriptor
       '&lexical
       g$5877$7140$xgWN3
       'g$5962$xgWN3
       '#f
       '#f
       '#()))
   (g$5961$7207$xgWN3 g$5961$7488$xgWN3 '#f)
   (g$5960$7208$xgWN3
     g$5960$7489$xgWN3
     (make-record-constructor-descriptor
       g$5959$7206$xgWN3
       g$5878$7142$xgWN3
       g$5961$7207$xgWN3))
   (g$p?$7211$xgWN3 g$p?$7490$xgWN3 (record-predicate g$5959$7206$xgWN3))
   (g$make-lexical-violation$7212$xgWN3
     g$make-lexical-violation$7491$xgWN3
     (record-constructor g$5960$7208$xgWN3))
   (g$lexical-violation?$7213$xgWN3
     g$lexical-violation?$7492$xgWN3
     (condition-predicate g$5959$7206$xgWN3))
   (g$&lexical-rtd$7214$xgWN3 g$&lexical-rtd$7493$xgWN3 g$5959$7206$xgWN3)
   (g$&lexical-rcd$7215$xgWN3 g$&lexical-rcd$7494$xgWN3 g$5960$7208$xgWN3)
   (g$5972$7218$xgWN3
     g$5972$7495$xgWN3
     (make-record-type-descriptor
       '&syntax
       g$5877$7140$xgWN3
       'g$5975$xgWN3
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$5974$7219$xgWN3 g$5974$7496$xgWN3 '#f)
   (g$5973$7220$xgWN3
     g$5973$7497$xgWN3
     (make-record-constructor-descriptor
       g$5972$7218$xgWN3
       g$5878$7142$xgWN3
       g$5974$7219$xgWN3))
   (g$p?$7223$xgWN3 g$p?$7498$xgWN3 (record-predicate g$5972$7218$xgWN3))
   (g$make-syntax-violation$7224$xgWN3
     g$make-syntax-violation$7499$xgWN3
     (record-constructor g$5973$7220$xgWN3))
   (g$syntax-violation-form$7225$xgWN3
     g$syntax-violation-form$7500$xgWN3
     (record-accessor g$5972$7218$xgWN3 '0))
   (g$syntax-violation-subform$7226$xgWN3
     g$syntax-violation-subform$7501$xgWN3
     (record-accessor g$5972$7218$xgWN3 '1))
   (g$syntax-violation?$7227$xgWN3
     g$syntax-violation?$7502$xgWN3
     (condition-predicate g$5972$7218$xgWN3))
   (g$syntax-violation-form$7228$xgWN3
     g$syntax-violation-form$7503$xgWN3
     (condition-accessor
       g$5972$7218$xgWN3
       g$syntax-violation-form$7225$xgWN3))
   (g$syntax-violation-subform$7229$xgWN3
     g$syntax-violation-subform$7504$xgWN3
     (condition-accessor
       g$5972$7218$xgWN3
       g$syntax-violation-subform$7226$xgWN3))
   (g$&syntax-rtd$7230$xgWN3 g$&syntax-rtd$7505$xgWN3 g$5972$7218$xgWN3)
   (g$&syntax-rcd$7231$xgWN3 g$&syntax-rcd$7506$xgWN3 g$5973$7220$xgWN3)
   (g$5989$7232$xgWN3
     g$5989$7507$xgWN3
     (make-record-type-descriptor
       '&undefined
       g$5877$7140$xgWN3
       'g$5992$xgWN3
       '#f
       '#f
       '#()))
   (g$5991$7233$xgWN3 g$5991$7508$xgWN3 '#f)
   (g$5990$7234$xgWN3
     g$5990$7509$xgWN3
     (make-record-constructor-descriptor
       g$5989$7232$xgWN3
       g$5878$7142$xgWN3
       g$5991$7233$xgWN3))
   (g$p?$7237$xgWN3 g$p?$7510$xgWN3 (record-predicate g$5989$7232$xgWN3))
   (g$make-undefined-violation$7238$xgWN3
     g$make-undefined-violation$7511$xgWN3
     (record-constructor g$5990$7234$xgWN3))
   (g$undefined-violation?$7239$xgWN3
     g$undefined-violation?$7512$xgWN3
     (condition-predicate g$5989$7232$xgWN3))
   (g$&undefined-rtd$7240$xgWN3
     g$&undefined-rtd$7513$xgWN3
     g$5989$7232$xgWN3)
   (g$&undefined-rcd$7241$xgWN3
     g$&undefined-rcd$7514$xgWN3
     g$5990$7234$xgWN3)
   (g$6002$7242$xgWN3
     g$6002$7515$xgWN3
     (make-record-type-descriptor
       '&i/o
       g$5864$7130$xgWN3
       'g$6005$xgWN3
       '#f
       '#f
       '#()))
   (g$6004$7243$xgWN3 g$6004$7516$xgWN3 '#f)
   (g$6003$7244$xgWN3
     g$6003$7517$xgWN3
     (make-record-constructor-descriptor
       g$6002$7242$xgWN3
       g$5865$7132$xgWN3
       g$6004$7243$xgWN3))
   (g$p?$7247$xgWN3 g$p?$7518$xgWN3 (record-predicate g$6002$7242$xgWN3))
   (g$make-i/o-error$7248$xgWN3
     g$make-i/o-error$7519$xgWN3
     (record-constructor g$6003$7244$xgWN3))
   (g$i/o-error?$7249$xgWN3
     g$i/o-error?$7520$xgWN3
     (condition-predicate g$6002$7242$xgWN3))
   (g$&i/o-rtd$7250$xgWN3 g$&i/o-rtd$7521$xgWN3 g$6002$7242$xgWN3)
   (g$&i/o-rcd$7251$xgWN3 g$&i/o-rcd$7522$xgWN3 g$6003$7244$xgWN3)
   (g$6015$7252$xgWN3
     g$6015$7523$xgWN3
     (make-record-type-descriptor
       '&i/o-read
       g$6002$7242$xgWN3
       'g$6018$xgWN3
       '#f
       '#f
       '#()))
   (g$6017$7253$xgWN3 g$6017$7524$xgWN3 '#f)
   (g$6016$7254$xgWN3
     g$6016$7525$xgWN3
     (make-record-constructor-descriptor
       g$6015$7252$xgWN3
       g$6003$7244$xgWN3
       g$6017$7253$xgWN3))
   (g$p?$7257$xgWN3 g$p?$7526$xgWN3 (record-predicate g$6015$7252$xgWN3))
   (g$make-i/o-read-error$7258$xgWN3
     g$make-i/o-read-error$7527$xgWN3
     (record-constructor g$6016$7254$xgWN3))
   (g$i/o-read-error?$7259$xgWN3
     g$i/o-read-error?$7528$xgWN3
     (condition-predicate g$6015$7252$xgWN3))
   (g$&i/o-read-rtd$7260$xgWN3
     g$&i/o-read-rtd$7529$xgWN3
     g$6015$7252$xgWN3)
   (g$&i/o-read-rcd$7261$xgWN3
     g$&i/o-read-rcd$7530$xgWN3
     g$6016$7254$xgWN3)
   (g$6028$7262$xgWN3
     g$6028$7531$xgWN3
     (make-record-type-descriptor
       '&i/o-write
       g$6002$7242$xgWN3
       'g$6031$xgWN3
       '#f
       '#f
       '#()))
   (g$6030$7263$xgWN3 g$6030$7532$xgWN3 '#f)
   (g$6029$7264$xgWN3
     g$6029$7533$xgWN3
     (make-record-constructor-descriptor
       g$6028$7262$xgWN3
       g$6003$7244$xgWN3
       g$6030$7263$xgWN3))
   (g$p?$7267$xgWN3 g$p?$7534$xgWN3 (record-predicate g$6028$7262$xgWN3))
   (g$make-i/o-write-error$7268$xgWN3
     g$make-i/o-write-error$7535$xgWN3
     (record-constructor g$6029$7264$xgWN3))
   (g$i/o-write-error?$7269$xgWN3
     g$i/o-write-error?$7536$xgWN3
     (condition-predicate g$6028$7262$xgWN3))
   (g$&i/o-write-rtd$7270$xgWN3
     g$&i/o-write-rtd$7537$xgWN3
     g$6028$7262$xgWN3)
   (g$&i/o-write-rcd$7271$xgWN3
     g$&i/o-write-rcd$7538$xgWN3
     g$6029$7264$xgWN3)
   (g$6041$7273$xgWN3
     g$6041$7539$xgWN3
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6002$7242$xgWN3
       'g$6044$xgWN3
       '#f
       '#f
       '#((immutable position))))
   (g$6043$7274$xgWN3 g$6043$7540$xgWN3 '#f)
   (g$6042$7275$xgWN3
     g$6042$7541$xgWN3
     (make-record-constructor-descriptor
       g$6041$7273$xgWN3
       g$6003$7244$xgWN3
       g$6043$7274$xgWN3))
   (g$p?$7278$xgWN3 g$p?$7542$xgWN3 (record-predicate g$6041$7273$xgWN3))
   (g$make-i/o-invalid-position-error$7279$xgWN3
     g$make-i/o-invalid-position-error$7543$xgWN3
     (record-constructor g$6042$7275$xgWN3))
   (g$i/o-error-position$7280$xgWN3
     g$i/o-error-position$7544$xgWN3
     (record-accessor g$6041$7273$xgWN3 '0))
   (g$i/o-invalid-position-error?$7281$xgWN3
     g$i/o-invalid-position-error?$7545$xgWN3
     (condition-predicate g$6041$7273$xgWN3))
   (g$i/o-error-position$7282$xgWN3
     g$i/o-error-position$7546$xgWN3
     (condition-accessor g$6041$7273$xgWN3 g$i/o-error-position$7280$xgWN3))
   (g$&i/o-invalid-position-rtd$7283$xgWN3
     g$&i/o-invalid-position-rtd$7547$xgWN3
     g$6041$7273$xgWN3)
   (g$&i/o-invalid-position-rcd$7284$xgWN3
     g$&i/o-invalid-position-rcd$7548$xgWN3
     g$6042$7275$xgWN3)
   (g$6056$7286$xgWN3
     g$6056$7549$xgWN3
     (make-record-type-descriptor
       '&i/o-filename
       g$6002$7242$xgWN3
       'g$6059$xgWN3
       '#f
       '#f
       '#((immutable filename))))
   (g$6058$7287$xgWN3 g$6058$7550$xgWN3 '#f)
   (g$6057$7288$xgWN3
     g$6057$7551$xgWN3
     (make-record-constructor-descriptor
       g$6056$7286$xgWN3
       g$6003$7244$xgWN3
       g$6058$7287$xgWN3))
   (g$p?$7291$xgWN3 g$p?$7552$xgWN3 (record-predicate g$6056$7286$xgWN3))
   (g$make-i/o-filename-error$7292$xgWN3
     g$make-i/o-filename-error$7553$xgWN3
     (record-constructor g$6057$7288$xgWN3))
   (g$i/o-error-filename$7293$xgWN3
     g$i/o-error-filename$7554$xgWN3
     (record-accessor g$6056$7286$xgWN3 '0))
   (g$i/o-filename-error?$7294$xgWN3
     g$i/o-filename-error?$7555$xgWN3
     (condition-predicate g$6056$7286$xgWN3))
   (g$i/o-error-filename$7295$xgWN3
     g$i/o-error-filename$7556$xgWN3
     (condition-accessor g$6056$7286$xgWN3 g$i/o-error-filename$7293$xgWN3))
   (g$&i/o-filename-rtd$7296$xgWN3
     g$&i/o-filename-rtd$7557$xgWN3
     g$6056$7286$xgWN3)
   (g$&i/o-filename-rcd$7297$xgWN3
     g$&i/o-filename-rcd$7558$xgWN3
     g$6057$7288$xgWN3)
   (g$6071$7298$xgWN3
     g$6071$7559$xgWN3
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6056$7286$xgWN3
       'g$6074$xgWN3
       '#f
       '#f
       '#()))
   (g$6073$7299$xgWN3 g$6073$7560$xgWN3 '#f)
   (g$6072$7300$xgWN3
     g$6072$7561$xgWN3
     (make-record-constructor-descriptor
       g$6071$7298$xgWN3
       g$6057$7288$xgWN3
       g$6073$7299$xgWN3))
   (g$p?$7303$xgWN3 g$p?$7562$xgWN3 (record-predicate g$6071$7298$xgWN3))
   (g$make-i/o-file-protection-error$7304$xgWN3
     g$make-i/o-file-protection-error$7563$xgWN3
     (record-constructor g$6072$7300$xgWN3))
   (g$i/o-file-protection-error?$7305$xgWN3
     g$i/o-file-protection-error?$7564$xgWN3
     (condition-predicate g$6071$7298$xgWN3))
   (g$&i/o-file-protection-rtd$7306$xgWN3
     g$&i/o-file-protection-rtd$7565$xgWN3
     g$6071$7298$xgWN3)
   (g$&i/o-file-protection-rcd$7307$xgWN3
     g$&i/o-file-protection-rcd$7566$xgWN3
     g$6072$7300$xgWN3)
   (g$6084$7308$xgWN3
     g$6084$7567$xgWN3
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6071$7298$xgWN3
       'g$6087$xgWN3
       '#f
       '#f
       '#()))
   (g$6086$7309$xgWN3 g$6086$7568$xgWN3 '#f)
   (g$6085$7310$xgWN3
     g$6085$7569$xgWN3
     (make-record-constructor-descriptor
       g$6084$7308$xgWN3
       g$6072$7300$xgWN3
       g$6086$7309$xgWN3))
   (g$p?$7313$xgWN3 g$p?$7570$xgWN3 (record-predicate g$6084$7308$xgWN3))
   (g$make-i/o-file-is-read-only-error$7314$xgWN3
     g$make-i/o-file-is-read-only-error$7571$xgWN3
     (record-constructor g$6085$7310$xgWN3))
   (g$i/o-file-is-read-only-error?$7315$xgWN3
     g$i/o-file-is-read-only-error?$7572$xgWN3
     (condition-predicate g$6084$7308$xgWN3))
   (g$&i/o-file-is-read-only-rtd$7316$xgWN3
     g$&i/o-file-is-read-only-rtd$7573$xgWN3
     g$6084$7308$xgWN3)
   (g$&i/o-file-is-read-only-rcd$7317$xgWN3
     g$&i/o-file-is-read-only-rcd$7574$xgWN3
     g$6085$7310$xgWN3)
   (g$6097$7318$xgWN3
     g$6097$7575$xgWN3
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6056$7286$xgWN3
       'g$6100$xgWN3
       '#f
       '#f
       '#()))
   (g$6099$7319$xgWN3 g$6099$7576$xgWN3 '#f)
   (g$6098$7320$xgWN3
     g$6098$7577$xgWN3
     (make-record-constructor-descriptor
       g$6097$7318$xgWN3
       g$6057$7288$xgWN3
       g$6099$7319$xgWN3))
   (g$p?$7323$xgWN3 g$p?$7578$xgWN3 (record-predicate g$6097$7318$xgWN3))
   (g$make-i/o-file-already-exists-error$7324$xgWN3
     g$make-i/o-file-already-exists-error$7579$xgWN3
     (record-constructor g$6098$7320$xgWN3))
   (g$i/o-file-already-exists-error?$7325$xgWN3
     g$i/o-file-already-exists-error?$7580$xgWN3
     (condition-predicate g$6097$7318$xgWN3))
   (g$&i/o-file-already-exists-rtd$7326$xgWN3
     g$&i/o-file-already-exists-rtd$7581$xgWN3
     g$6097$7318$xgWN3)
   (g$&i/o-file-already-exists-rcd$7327$xgWN3
     g$&i/o-file-already-exists-rcd$7582$xgWN3
     g$6098$7320$xgWN3)
   (g$6110$7328$xgWN3
     g$6110$7583$xgWN3
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6056$7286$xgWN3
       'g$6113$xgWN3
       '#f
       '#f
       '#()))
   (g$6112$7329$xgWN3 g$6112$7584$xgWN3 '#f)
   (g$6111$7330$xgWN3
     g$6111$7585$xgWN3
     (make-record-constructor-descriptor
       g$6110$7328$xgWN3
       g$6057$7288$xgWN3
       g$6112$7329$xgWN3))
   (g$p?$7333$xgWN3 g$p?$7586$xgWN3 (record-predicate g$6110$7328$xgWN3))
   (g$make-i/o-file-does-not-exist-error$7334$xgWN3
     g$make-i/o-file-does-not-exist-error$7587$xgWN3
     (record-constructor g$6111$7330$xgWN3))
   (g$i/o-file-does-not-exist-error?$7335$xgWN3
     g$i/o-file-does-not-exist-error?$7588$xgWN3
     (condition-predicate g$6110$7328$xgWN3))
   (g$&i/o-file-does-not-exist-rtd$7336$xgWN3
     g$&i/o-file-does-not-exist-rtd$7589$xgWN3
     g$6110$7328$xgWN3)
   (g$&i/o-file-does-not-exist-rcd$7337$xgWN3
     g$&i/o-file-does-not-exist-rcd$7590$xgWN3
     g$6111$7330$xgWN3)
   (g$6123$7339$xgWN3
     g$6123$7591$xgWN3
     (make-record-type-descriptor
       '&i/o-port
       g$6002$7242$xgWN3
       'g$6126$xgWN3
       '#f
       '#f
       '#((immutable port))))
   (g$6125$7340$xgWN3 g$6125$7592$xgWN3 '#f)
   (g$6124$7341$xgWN3
     g$6124$7593$xgWN3
     (make-record-constructor-descriptor
       g$6123$7339$xgWN3
       g$6003$7244$xgWN3
       g$6125$7340$xgWN3))
   (g$p?$7344$xgWN3 g$p?$7594$xgWN3 (record-predicate g$6123$7339$xgWN3))
   (g$make-i/o-port-error$7345$xgWN3
     g$make-i/o-port-error$7595$xgWN3
     (record-constructor g$6124$7341$xgWN3))
   (g$i/o-error-port$7346$xgWN3
     g$i/o-error-port$7596$xgWN3
     (record-accessor g$6123$7339$xgWN3 '0))
   (g$i/o-port-error?$7347$xgWN3
     g$i/o-port-error?$7597$xgWN3
     (condition-predicate g$6123$7339$xgWN3))
   (g$i/o-error-port$7348$xgWN3
     g$i/o-error-port$7598$xgWN3
     (condition-accessor g$6123$7339$xgWN3 g$i/o-error-port$7346$xgWN3))
   (g$&i/o-port-rtd$7349$xgWN3
     g$&i/o-port-rtd$7599$xgWN3
     g$6123$7339$xgWN3)
   (g$&i/o-port-rcd$7350$xgWN3
     g$&i/o-port-rcd$7600$xgWN3
     g$6124$7341$xgWN3)
   (g$6138$7351$xgWN3
     g$6138$7601$xgWN3
     (make-record-type-descriptor
       '&i/o-decoding
       g$6123$7339$xgWN3
       'g$6141$xgWN3
       '#f
       '#f
       '#()))
   (g$6140$7352$xgWN3 g$6140$7602$xgWN3 '#f)
   (g$6139$7353$xgWN3
     g$6139$7603$xgWN3
     (make-record-constructor-descriptor
       g$6138$7351$xgWN3
       g$6124$7341$xgWN3
       g$6140$7352$xgWN3))
   (g$p?$7356$xgWN3 g$p?$7604$xgWN3 (record-predicate g$6138$7351$xgWN3))
   (g$make-i/o-decoding-error$7357$xgWN3
     g$make-i/o-decoding-error$7605$xgWN3
     (record-constructor g$6139$7353$xgWN3))
   (g$i/o-decoding-error?$7358$xgWN3
     g$i/o-decoding-error?$7606$xgWN3
     (condition-predicate g$6138$7351$xgWN3))
   (g$&i/o-decoding-rtd$7359$xgWN3
     g$&i/o-decoding-rtd$7607$xgWN3
     g$6138$7351$xgWN3)
   (g$&i/o-decoding-rcd$7360$xgWN3
     g$&i/o-decoding-rcd$7608$xgWN3
     g$6139$7353$xgWN3)
   (g$6151$7362$xgWN3
     g$6151$7609$xgWN3
     (make-record-type-descriptor
       '&i/o-encoding
       g$6123$7339$xgWN3
       'g$6154$xgWN3
       '#f
       '#f
       '#((immutable char))))
   (g$6153$7363$xgWN3 g$6153$7610$xgWN3 '#f)
   (g$6152$7364$xgWN3
     g$6152$7611$xgWN3
     (make-record-constructor-descriptor
       g$6151$7362$xgWN3
       g$6124$7341$xgWN3
       g$6153$7363$xgWN3))
   (g$p?$7367$xgWN3 g$p?$7612$xgWN3 (record-predicate g$6151$7362$xgWN3))
   (g$make-i/o-encoding-error$7368$xgWN3
     g$make-i/o-encoding-error$7613$xgWN3
     (record-constructor g$6152$7364$xgWN3))
   (g$i/o-encoding-error-char$7369$xgWN3
     g$i/o-encoding-error-char$7614$xgWN3
     (record-accessor g$6151$7362$xgWN3 '0))
   (g$i/o-encoding-error?$7370$xgWN3
     g$i/o-encoding-error?$7615$xgWN3
     (condition-predicate g$6151$7362$xgWN3))
   (g$i/o-encoding-error-char$7371$xgWN3
     g$i/o-encoding-error-char$7616$xgWN3
     (condition-accessor
       g$6151$7362$xgWN3
       g$i/o-encoding-error-char$7369$xgWN3))
   (g$&i/o-encoding-rtd$7372$xgWN3
     g$&i/o-encoding-rtd$7617$xgWN3
     g$6151$7362$xgWN3)
   (g$&i/o-encoding-rcd$7373$xgWN3
     g$&i/o-encoding-rcd$7618$xgWN3
     g$6152$7364$xgWN3)
   (g$6166$7374$xgWN3
     g$6166$7619$xgWN3
     (make-record-type-descriptor
       '&no-infinities
       g$5946$7196$xgWN3
       'g$6169$xgWN3
       '#f
       '#f
       '#()))
   (g$6168$7375$xgWN3 g$6168$7620$xgWN3 '#f)
   (g$6167$7376$xgWN3
     g$6167$7621$xgWN3
     (make-record-constructor-descriptor
       g$6166$7374$xgWN3
       g$5947$7198$xgWN3
       g$6168$7375$xgWN3))
   (g$p?$7379$xgWN3 g$p?$7622$xgWN3 (record-predicate g$6166$7374$xgWN3))
   (g$make-no-infinities-violation$7380$xgWN3
     g$make-no-infinities-violation$7623$xgWN3
     (record-constructor g$6167$7376$xgWN3))
   (g$no-infinities-violation?$7381$xgWN3
     g$no-infinities-violation?$7624$xgWN3
     (condition-predicate g$6166$7374$xgWN3))
   (g$&no-infinities-rtd$7382$xgWN3
     g$&no-infinities-rtd$7625$xgWN3
     g$6166$7374$xgWN3)
   (g$&no-infinities-rcd$7383$xgWN3
     g$&no-infinities-rcd$7626$xgWN3
     g$6167$7376$xgWN3)
   (g$6179$7384$xgWN3
     g$6179$7627$xgWN3
     (make-record-type-descriptor
       '&no-nans
       g$5946$7196$xgWN3
       'g$6182$xgWN3
       '#f
       '#f
       '#()))
   (g$6181$7385$xgWN3 g$6181$7628$xgWN3 '#f)
   (g$6180$7386$xgWN3
     g$6180$7629$xgWN3
     (make-record-constructor-descriptor
       g$6179$7384$xgWN3
       g$5947$7198$xgWN3
       g$6181$7385$xgWN3))
   (g$p?$7389$xgWN3 g$p?$7630$xgWN3 (record-predicate g$6179$7384$xgWN3))
   (g$make-no-nans-violation$7390$xgWN3
     g$make-no-nans-violation$7631$xgWN3
     (record-constructor g$6180$7386$xgWN3))
   (g$no-nans-violation?$7391$xgWN3
     g$no-nans-violation?$7632$xgWN3
     (condition-predicate g$6179$7384$xgWN3))
   (g$&no-nans-rtd$7392$xgWN3 g$&no-nans-rtd$7633$xgWN3 g$6179$7384$xgWN3)
   (g$&no-nans-rcd$7393$xgWN3 g$&no-nans-rcd$7634$xgWN3 g$6180$7386$xgWN3))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$7635$xgWN3
     g$append!$7641$xgWN3
     (case-lambda
       ((g$a$7636$xgWN3 . g$b$7637$xgWN3)
        (if (null? g$a$7636$xgWN3)
          g$b$7637$xgWN3
          (if (null? g$b$7637$xgWN3)
            g$a$7636$xgWN3
            (begin
              ((letrec ((g$f$7638$xgWN3
                          (case-lambda
                            ((g$a$7639$xgWN3)
                             ((case-lambda
                                ((g$n$7640$xgWN3)
                                 (if (null? g$n$7640$xgWN3)
                                   (set-cdr! g$a$7639$xgWN3 g$b$7637$xgWN3)
                                   (g$f$7638$xgWN3 g$n$7640$xgWN3))))
                              (cdr g$a$7639$xgWN3))))))
                 g$f$7638$xgWN3)
               g$a$7636$xgWN3)
              g$a$7636$xgWN3)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$7642$xgWN3 g$inexact->exact$7662$xgWN3 exact)
   (g$exact->inexact$7643$xgWN3 g$exact->inexact$7663$xgWN3 inexact)
   (g$sign$7644$xgWN3
     g$sign$7664$xgWN3
     (case-lambda
       ((g$n$7650$xgWN3)
        (if (> g$n$7650$xgWN3 '0) '1 (if (< g$n$7650$xgWN3 '0) '-1 '0)))))
   (g$quotient$7645$xgWN3
     g$quotient$7665$xgWN3
     (case-lambda
       ((g$n1$7651$xgWN3 g$n2$7652$xgWN3)
        (begin
          (if (not (integer-valued? g$n1$7651$xgWN3))
            (assertion-violation 'quotient '"not an integer" g$n1$7651$xgWN3)
            (void))
          (if (not (integer-valued? g$n2$7652$xgWN3))
            (assertion-violation 'quotient '"not an integer" g$n2$7652$xgWN3)
            (void))
          (* (g$sign$7644$xgWN3 g$n1$7651$xgWN3)
             (g$sign$7644$xgWN3 g$n2$7652$xgWN3)
             (g$div$6747$xgWN3 (abs g$n1$7651$xgWN3) (abs g$n2$7652$xgWN3)))))))
   (g$remainder$7646$xgWN3
     g$remainder$7666$xgWN3
     (case-lambda
       ((g$n1$7653$xgWN3 g$n2$7654$xgWN3)
        (begin
          (if (not (integer-valued? g$n1$7653$xgWN3))
            (assertion-violation 'remainder '"not an integer" g$n1$7653$xgWN3)
            (void))
          (if (not (integer-valued? g$n2$7654$xgWN3))
            (assertion-violation 'remainder '"not an integer" g$n2$7654$xgWN3)
            (void))
          (* (g$sign$7644$xgWN3 g$n1$7653$xgWN3)
             (g$mod$6749$xgWN3 (abs g$n1$7653$xgWN3) (abs g$n2$7654$xgWN3)))))))
   (g$modulo$7647$xgWN3
     g$modulo$7667$xgWN3
     (case-lambda
       ((g$n1$7655$xgWN3 g$n2$7656$xgWN3)
        (begin
          (if (not (integer-valued? g$n1$7655$xgWN3))
            (assertion-violation 'modulo '"not an integer" g$n1$7655$xgWN3)
            (void))
          (if (not (integer-valued? g$n2$7656$xgWN3))
            (assertion-violation 'modulo '"not an integer" g$n2$7656$xgWN3)
            (void))
          (* (g$sign$7644$xgWN3 g$n2$7656$xgWN3)
             (g$mod$6749$xgWN3
               (* (g$sign$7644$xgWN3 g$n2$7656$xgWN3) g$n1$7655$xgWN3)
               (abs g$n2$7656$xgWN3)))))))
   (g$make-promise$7648$xgWN3
     g$make-promise$7668$xgWN3
     (case-lambda
       ((g$proc$7657$xgWN3)
        ((case-lambda
           ((g$result-ready?$7658$xgWN3 g$result$7659$xgWN3)
            (case-lambda
              (()
               (if g$result-ready?$7658$xgWN3
                 g$result$7659$xgWN3
                 ((case-lambda
                    ((g$x$7660$xgWN3)
                     (if g$result-ready?$7658$xgWN3
                       g$result$7659$xgWN3
                       (begin
                         (set! g$result-ready?$7658$xgWN3 '#t)
                         (set! g$result$7659$xgWN3 g$x$7660$xgWN3)
                         g$result$7659$xgWN3))))
                  (g$proc$7657$xgWN3)))))))
         '#f
         '#f))))
   (g$force$7649$xgWN3
     g$force$7669$xgWN3
     (case-lambda ((g$object$7661$xgWN3) (g$object$7661$xgWN3)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$7670$xgWN3
     g$split$7695$xgWN3
     (case-lambda
       ((g$ls$7674$xgWN3)
        ((letrec ((g$loop$7675$xgWN3
                    (case-lambda
                      ((g$rest$7676$xgWN3 g$left$7677$xgWN3 g$right$7678$xgWN3)
                       (if (null? g$rest$7676$xgWN3)
                         (cons g$left$7677$xgWN3 g$right$7678$xgWN3)
                         (if (null? (cdr g$rest$7676$xgWN3))
                           (cons
                             (cons (car g$rest$7676$xgWN3) g$left$7677$xgWN3)
                             g$right$7678$xgWN3)
                           (g$loop$7675$xgWN3
                             (g$cddr$6767$xgWN3 g$rest$7676$xgWN3)
                             (cons (car g$rest$7676$xgWN3) g$left$7677$xgWN3)
                             (cons
                               (g$cadr$6765$xgWN3 g$rest$7676$xgWN3)
                               g$right$7678$xgWN3))))))))
           g$loop$7675$xgWN3)
         g$ls$7674$xgWN3
         '()
         '()))))
   (g$reverse-it$7671$xgWN3
     g$reverse-it$7696$xgWN3
     (case-lambda
       ((g$head$7679$xgWN3 g$tail$7680$xgWN3)
        (if (null? g$head$7679$xgWN3)
          g$tail$7680$xgWN3
          (g$reverse-it$7671$xgWN3
            (cdr g$head$7679$xgWN3)
            (cons (car g$head$7679$xgWN3) g$tail$7680$xgWN3))))))
   (g$merge$7672$xgWN3
     g$merge$7697$xgWN3
     (case-lambda
       ((g$list-1$7681$xgWN3 g$list-2$7682$xgWN3 g$precedes?$7683$xgWN3)
        ((letrec ((g$loop$7684$xgWN3
                    (case-lambda
                      ((g$source-1$7685$xgWN3
                         g$source-2$7686$xgWN3
                         g$so-far$7687$xgWN3)
                       (if (null? g$source-1$7685$xgWN3)
                         (g$reverse-it$7671$xgWN3
                           g$so-far$7687$xgWN3
                           g$source-2$7686$xgWN3)
                         (if (null? g$source-2$7686$xgWN3)
                           (g$reverse-it$7671$xgWN3
                             g$so-far$7687$xgWN3
                             g$source-1$7685$xgWN3)
                           ((case-lambda
                              ((g$car-1$7688$xgWN3 g$car-2$7689$xgWN3)
                               (if (g$precedes?$7683$xgWN3
                                     g$car-2$7689$xgWN3
                                     g$car-1$7688$xgWN3)
                                 (g$loop$7684$xgWN3
                                   g$source-1$7685$xgWN3
                                   (cdr g$source-2$7686$xgWN3)
                                   (cons
                                     g$car-2$7689$xgWN3
                                     g$so-far$7687$xgWN3))
                                 (g$loop$7684$xgWN3
                                   g$source-2$7686$xgWN3
                                   (cdr g$source-1$7685$xgWN3)
                                   (cons
                                     g$car-1$7688$xgWN3
                                     g$so-far$7687$xgWN3)))))
                            (car g$source-1$7685$xgWN3)
                            (car g$source-2$7686$xgWN3))))))))
           g$loop$7684$xgWN3)
         g$list-1$7681$xgWN3
         g$list-2$7682$xgWN3
         '()))))
   (g$list-sort$7673$xgWN3
     g$list-sort$7698$xgWN3
     (case-lambda
       ((g$precedes?$7690$xgWN3 g$ls$7691$xgWN3)
        (if (null? g$ls$7691$xgWN3)
          '()
          ((letrec ((g$helper$7692$xgWN3
                      (case-lambda
                        ((g$piece$7693$xgWN3)
                         (if (null? (cdr g$piece$7693$xgWN3))
                           g$piece$7693$xgWN3
                           ((case-lambda
                              ((g$parts$7694$xgWN3)
                               (g$merge$7672$xgWN3
                                 (g$helper$7692$xgWN3 (car g$parts$7694$xgWN3))
                                 (g$helper$7692$xgWN3 (cdr g$parts$7694$xgWN3))
                                 g$precedes?$7690$xgWN3)))
                            (g$split$7670$xgWN3 g$piece$7693$xgWN3)))))))
             g$helper$7692$xgWN3)
           g$ls$7691$xgWN3))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$7734$xgWN3
     g$string-ci=?$7837$xgWN3
     (case-lambda
       ((g$a$7783$xgWN3 g$b$7784$xgWN3 . g$rest$7785$xgWN3)
        (begin
          (if (not (string? g$a$7783$xgWN3))
            (assertion-violation 'string-ci=? '"not a string" g$a$7783$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$7786$xgWN3)
               (begin
                 (if (not (string? g$x$7786$xgWN3))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$7786$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$7787$xgWN3)
                     (begin
                       (set! g$a$7783$xgWN3 g$x$7786$xgWN3)
                       g$r$7787$xgWN3)))
                  (= (string-ci-compare g$a$7783$xgWN3 g$x$7786$xgWN3) '0)))))
            (cons g$b$7784$xgWN3 g$rest$7785$xgWN3))))))
   (g$string-ci<?$7735$xgWN3
     g$string-ci<?$7838$xgWN3
     (case-lambda
       ((g$a$7788$xgWN3 g$b$7789$xgWN3 . g$rest$7790$xgWN3)
        (begin
          (if (not (string? g$a$7788$xgWN3))
            (assertion-violation 'string-ci<? '"not a string" g$a$7788$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$7791$xgWN3)
               (begin
                 (if (not (string? g$x$7791$xgWN3))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$7791$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$7792$xgWN3)
                     (begin
                       (set! g$a$7788$xgWN3 g$x$7791$xgWN3)
                       g$r$7792$xgWN3)))
                  (< (string-ci-compare g$a$7788$xgWN3 g$x$7791$xgWN3) '0)))))
            (cons g$b$7789$xgWN3 g$rest$7790$xgWN3))))))
   (g$string-ci>?$7736$xgWN3
     g$string-ci>?$7839$xgWN3
     (case-lambda
       ((g$a$7793$xgWN3 g$b$7794$xgWN3 . g$rest$7795$xgWN3)
        (begin
          (if (not (string? g$a$7793$xgWN3))
            (assertion-violation 'string-ci>? '"not a string" g$a$7793$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$7796$xgWN3)
               (begin
                 (if (not (string? g$x$7796$xgWN3))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$7796$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$7797$xgWN3)
                     (begin
                       (set! g$a$7793$xgWN3 g$x$7796$xgWN3)
                       g$r$7797$xgWN3)))
                  (> (string-ci-compare g$a$7793$xgWN3 g$x$7796$xgWN3) '0)))))
            (cons g$b$7794$xgWN3 g$rest$7795$xgWN3))))))
   (g$string-ci<=?$7737$xgWN3
     g$string-ci<=?$7840$xgWN3
     (case-lambda
       ((g$a$7798$xgWN3 g$b$7799$xgWN3 . g$rest$7800$xgWN3)
        (begin
          (if (not (string? g$a$7798$xgWN3))
            (assertion-violation 'string-ci<=? '"not a string" g$a$7798$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$7801$xgWN3)
               (begin
                 (if (not (string? g$x$7801$xgWN3))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$7801$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$7802$xgWN3)
                     (begin
                       (set! g$a$7798$xgWN3 g$x$7801$xgWN3)
                       g$r$7802$xgWN3)))
                  (<= (string-ci-compare g$a$7798$xgWN3 g$x$7801$xgWN3) '0)))))
            (cons g$b$7799$xgWN3 g$rest$7800$xgWN3))))))
   (g$string-ci>=?$7738$xgWN3
     g$string-ci>=?$7841$xgWN3
     (case-lambda
       ((g$a$7803$xgWN3 g$b$7804$xgWN3 . g$rest$7805$xgWN3)
        (begin
          (if (not (string? g$a$7803$xgWN3))
            (assertion-violation 'string-ci>=? '"not a string" g$a$7803$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$7806$xgWN3)
               (begin
                 (if (not (string? g$x$7806$xgWN3))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$7806$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$7807$xgWN3)
                     (begin
                       (set! g$a$7803$xgWN3 g$x$7806$xgWN3)
                       g$r$7807$xgWN3)))
                  (>= (string-ci-compare g$a$7803$xgWN3 g$x$7806$xgWN3) '0)))))
            (cons g$b$7804$xgWN3 g$rest$7805$xgWN3))))))
   (g$char-ci=?$7774$xgWN3
     g$char-ci=?$7842$xgWN3
     (case-lambda
       ((g$a$7808$xgWN3 g$b$7809$xgWN3 . g$rest$7810$xgWN3)
        (begin
          (if (not (g$char?$6753$xgWN3 g$a$7808$xgWN3))
            (assertion-violation 'char-ci=? '"not a char" g$a$7808$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$7811$xgWN3)
               (begin
                 (if (not (g$char?$6753$xgWN3 g$x$7811$xgWN3))
                   (assertion-violation 'char-ci=? '"not a char" g$x$7811$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$7812$xgWN3)
                     (begin
                       (set! g$a$7808$xgWN3 g$x$7811$xgWN3)
                       g$r$7812$xgWN3)))
                  (= (char->integer (char-upcase g$a$7808$xgWN3))
                     (char->integer (char-upcase g$x$7811$xgWN3)))))))
            (cons g$b$7809$xgWN3 g$rest$7810$xgWN3))))))
   (g$char-ci<?$7775$xgWN3
     g$char-ci<?$7843$xgWN3
     (case-lambda
       ((g$a$7813$xgWN3 g$b$7814$xgWN3 . g$rest$7815$xgWN3)
        (begin
          (if (not (g$char?$6753$xgWN3 g$a$7813$xgWN3))
            (assertion-violation 'char-ci<? '"not a char" g$a$7813$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$7816$xgWN3)
               (begin
                 (if (not (g$char?$6753$xgWN3 g$x$7816$xgWN3))
                   (assertion-violation 'char-ci<? '"not a char" g$x$7816$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$7817$xgWN3)
                     (begin
                       (set! g$a$7813$xgWN3 g$x$7816$xgWN3)
                       g$r$7817$xgWN3)))
                  (< (char->integer (char-upcase g$a$7813$xgWN3))
                     (char->integer (char-upcase g$x$7816$xgWN3)))))))
            (cons g$b$7814$xgWN3 g$rest$7815$xgWN3))))))
   (g$char-ci>?$7776$xgWN3
     g$char-ci>?$7844$xgWN3
     (case-lambda
       ((g$a$7818$xgWN3 g$b$7819$xgWN3 . g$rest$7820$xgWN3)
        (begin
          (if (not (g$char?$6753$xgWN3 g$a$7818$xgWN3))
            (assertion-violation 'char-ci>? '"not a char" g$a$7818$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$7821$xgWN3)
               (begin
                 (if (not (g$char?$6753$xgWN3 g$x$7821$xgWN3))
                   (assertion-violation 'char-ci>? '"not a char" g$x$7821$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$7822$xgWN3)
                     (begin
                       (set! g$a$7818$xgWN3 g$x$7821$xgWN3)
                       g$r$7822$xgWN3)))
                  (> (char->integer (char-upcase g$a$7818$xgWN3))
                     (char->integer (char-upcase g$x$7821$xgWN3)))))))
            (cons g$b$7819$xgWN3 g$rest$7820$xgWN3))))))
   (g$char-ci<=?$7777$xgWN3
     g$char-ci<=?$7845$xgWN3
     (case-lambda
       ((g$a$7823$xgWN3 g$b$7824$xgWN3 . g$rest$7825$xgWN3)
        (begin
          (if (not (g$char?$6753$xgWN3 g$a$7823$xgWN3))
            (assertion-violation 'char-ci<=? '"not a char" g$a$7823$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$7826$xgWN3)
               (begin
                 (if (not (g$char?$6753$xgWN3 g$x$7826$xgWN3))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$7826$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$7827$xgWN3)
                     (begin
                       (set! g$a$7823$xgWN3 g$x$7826$xgWN3)
                       g$r$7827$xgWN3)))
                  (<= (char->integer (char-upcase g$a$7823$xgWN3))
                      (char->integer (char-upcase g$x$7826$xgWN3)))))))
            (cons g$b$7824$xgWN3 g$rest$7825$xgWN3))))))
   (g$char-ci>=?$7778$xgWN3
     g$char-ci>=?$7846$xgWN3
     (case-lambda
       ((g$a$7828$xgWN3 g$b$7829$xgWN3 . g$rest$7830$xgWN3)
        (begin
          (if (not (g$char?$6753$xgWN3 g$a$7828$xgWN3))
            (assertion-violation 'char-ci>=? '"not a char" g$a$7828$xgWN3)
            (void))
          (g$for-all$6083$xgWN3
            (case-lambda
              ((g$x$7831$xgWN3)
               (begin
                 (if (not (g$char?$6753$xgWN3 g$x$7831$xgWN3))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$7831$xgWN3)
                   (void))
                 ((case-lambda
                    ((g$r$7832$xgWN3)
                     (begin
                       (set! g$a$7828$xgWN3 g$x$7831$xgWN3)
                       g$r$7832$xgWN3)))
                  (>= (char->integer (char-upcase g$a$7828$xgWN3))
                      (char->integer (char-upcase g$x$7831$xgWN3)))))))
            (cons g$b$7829$xgWN3 g$rest$7830$xgWN3))))))
   (g$string-normalize-nfc$7779$xgWN3
     g$string-normalize-nfc$7847$xgWN3
     (case-lambda
       ((g$s$7833$xgWN3) (string-normalize g$s$7833$xgWN3 'formc))))
   (g$string-normalize-nfd$7780$xgWN3
     g$string-normalize-nfd$7848$xgWN3
     (case-lambda
       ((g$s$7834$xgWN3) (string-normalize g$s$7834$xgWN3 'formd))))
   (g$string-normalize-nfkc$7781$xgWN3
     g$string-normalize-nfkc$7849$xgWN3
     (case-lambda
       ((g$s$7835$xgWN3) (string-normalize g$s$7835$xgWN3 'formkc))))
   (g$string-normalize-nfkd$7782$xgWN3
     g$string-normalize-nfkd$7850$xgWN3
     (case-lambda
       ((g$s$7836$xgWN3) (string-normalize g$s$7836$xgWN3 'formkd)))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$7851$xgWN3
     g$bitwise-if$7882$xgWN3
     (case-lambda
       ((g$ei1$7858$xgWN3 g$ei2$7859$xgWN3 g$ei3$7860$xgWN3)
        (bitwise-ior
          (bitwise-and g$ei1$7858$xgWN3 g$ei2$7859$xgWN3)
          (bitwise-and (bitwise-not g$ei1$7858$xgWN3) g$ei3$7860$xgWN3)))))
   (g$bitwise-copy-bit$7852$xgWN3
     g$bitwise-copy-bit$7883$xgWN3
     (case-lambda
       ((g$ei1$7861$xgWN3 g$ei2$7862$xgWN3 g$ei3$7863$xgWN3)
        (g$bitwise-if$7851$xgWN3
          (g$bitwise-arithmetic-shift-left$7855$xgWN3 '1 g$ei2$7862$xgWN3)
          (g$bitwise-arithmetic-shift-left$7855$xgWN3
            g$ei3$7863$xgWN3
            g$ei2$7862$xgWN3)
          g$ei1$7861$xgWN3))))
   (g$bitwise-bit-field$7853$xgWN3
     g$bitwise-bit-field$7884$xgWN3
     (case-lambda
       ((g$ei1$7864$xgWN3 g$ei2$7865$xgWN3 g$ei3$7866$xgWN3)
        (g$bitwise-arithmetic-shift-right$7856$xgWN3
          (bitwise-and
            g$ei1$7864$xgWN3
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$7855$xgWN3
                '-1
                g$ei3$7866$xgWN3)))
          g$ei2$7865$xgWN3))))
   (g$bitwise-copy-bit-field$7854$xgWN3
     g$bitwise-copy-bit-field$7885$xgWN3
     (case-lambda
       ((g$to$7867$xgWN3 g$start$7868$xgWN3 g$end$7869$xgWN3 g$from$7870$xgWN3)
        (g$bitwise-if$7851$xgWN3
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$7855$xgWN3 '-1 g$start$7868$xgWN3)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$7855$xgWN3
                '-1
                g$end$7869$xgWN3)))
          (g$bitwise-arithmetic-shift-left$7855$xgWN3
            g$from$7870$xgWN3
            g$start$7868$xgWN3)
          g$to$7867$xgWN3))))
   (g$bitwise-arithmetic-shift-left$7855$xgWN3
     g$bitwise-arithmetic-shift-left$7886$xgWN3
     (case-lambda
       ((g$ei1$7871$xgWN3 g$ei2$7872$xgWN3)
        (bitwise-arithmetic-shift g$ei1$7871$xgWN3 g$ei2$7872$xgWN3))))
   (g$bitwise-arithmetic-shift-right$7856$xgWN3
     g$bitwise-arithmetic-shift-right$7887$xgWN3
     (case-lambda
       ((g$ei1$7873$xgWN3 g$ei2$7874$xgWN3)
        (bitwise-arithmetic-shift g$ei1$7873$xgWN3 (- g$ei2$7874$xgWN3)))))
   (g$bitwise-rotate-bit-field$7857$xgWN3
     g$bitwise-rotate-bit-field$7888$xgWN3
     (case-lambda
       ((g$n$7875$xgWN3 g$start$7876$xgWN3 g$end$7877$xgWN3 g$count$7878$xgWN3)
        ((case-lambda
           ((g$width$7879$xgWN3)
            (if (g$positive?$6792$xgWN3 g$width$7879$xgWN3)
              ((case-lambda
                 ((g$count$7880$xgWN3 g$field$7881$xgWN3)
                  (g$bitwise-copy-bit-field$7854$xgWN3
                    g$n$7875$xgWN3
                    g$start$7876$xgWN3
                    g$end$7877$xgWN3
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$7855$xgWN3
                        g$field$7881$xgWN3
                        g$count$7880$xgWN3)
                      (g$bitwise-arithmetic-shift-right$7856$xgWN3
                        g$field$7881$xgWN3
                        (- g$width$7879$xgWN3 g$count$7880$xgWN3))))))
               (g$mod$6749$xgWN3 g$count$7878$xgWN3 g$width$7879$xgWN3)
               (g$bitwise-bit-field$7853$xgWN3
                 g$n$7875$xgWN3
                 g$start$7876$xgWN3
                 g$end$7877$xgWN3))
              g$n$7875$xgWN3)))
         (- g$end$7877$xgWN3 g$start$7876$xgWN3))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxdiv$7889$xgWN3
     g$fxdiv$7994$xgWN3
     (case-lambda
       ((g$fx1$7910$xgWN3 g$fx2$7911$xgWN3)
        (call-with-values
          (case-lambda (() (fxdiv-and-mod g$fx1$7910$xgWN3 g$fx2$7911$xgWN3)))
          (case-lambda
            ((g$n$7914$xgWN3 g$d$7915$xgWN3)
             ((case-lambda ((g$d$7916$xgWN3 g$n$7917$xgWN3) g$n$7917$xgWN3))
              g$d$7915$xgWN3
              g$n$7914$xgWN3)))))))
   (g$fxdiv0$7890$xgWN3
     g$fxdiv0$7995$xgWN3
     (case-lambda
       ((g$fx1$7918$xgWN3 g$fx2$7919$xgWN3)
        (call-with-values
          (case-lambda (() (fxdiv0-and-mod0 g$fx1$7918$xgWN3 g$fx2$7919$xgWN3)))
          (case-lambda
            ((g$n$7922$xgWN3 g$d$7923$xgWN3)
             ((case-lambda ((g$d$7924$xgWN3 g$n$7925$xgWN3) g$n$7925$xgWN3))
              g$d$7923$xgWN3
              g$n$7922$xgWN3)))))))
   (g$fxmod$7891$xgWN3
     g$fxmod$7996$xgWN3
     (case-lambda
       ((g$fx1$7926$xgWN3 g$fx2$7927$xgWN3)
        (call-with-values
          (case-lambda (() (fxdiv-and-mod g$fx1$7926$xgWN3 g$fx2$7927$xgWN3)))
          (case-lambda
            ((g$n$7930$xgWN3 g$d$7931$xgWN3)
             ((case-lambda ((g$d$7932$xgWN3 g$n$7933$xgWN3) g$d$7932$xgWN3))
              g$d$7931$xgWN3
              g$n$7930$xgWN3)))))))
   (g$fxmod0$7892$xgWN3
     g$fxmod0$7997$xgWN3
     (case-lambda
       ((g$fx1$7934$xgWN3 g$fx2$7935$xgWN3)
        (call-with-values
          (case-lambda (() (fxdiv0-and-mod0 g$fx1$7934$xgWN3 g$fx2$7935$xgWN3)))
          (case-lambda
            ((g$n$7938$xgWN3 g$d$7939$xgWN3)
             ((case-lambda ((g$d$7940$xgWN3 g$n$7941$xgWN3) g$d$7940$xgWN3))
              g$d$7939$xgWN3
              g$n$7938$xgWN3)))))))
   (g$fxpositive?$7893$xgWN3
     g$fxpositive?$7998$xgWN3
     (case-lambda
       ((g$r$7942$xgWN3)
        (begin
          (if (not (g$fixnum?$6759$xgWN3 g$r$7942$xgWN3))
            (assertion-violation 'fxpositive? '"not a fixnum" g$r$7942$xgWN3)
            (void))
          (fx<? '0 g$r$7942$xgWN3)))))
   (g$fxnegative?$7894$xgWN3
     g$fxnegative?$7999$xgWN3
     (case-lambda
       ((g$r$7943$xgWN3)
        (begin
          (if (not (g$fixnum?$6759$xgWN3 g$r$7943$xgWN3))
            (assertion-violation 'fxnegative? '"not a fixnum" g$r$7943$xgWN3)
            (void))
          (fx>? '0 g$r$7943$xgWN3)))))
   (g$fxzero?$7895$xgWN3
     g$fxzero?$8000$xgWN3
     (case-lambda
       ((g$r$7944$xgWN3)
        (begin
          (if (not (g$fixnum?$6759$xgWN3 g$r$7944$xgWN3))
            (assertion-violation 'fxzero? '"not a fixnum" g$r$7944$xgWN3)
            (void))
          (fx=? '0 g$r$7944$xgWN3)))))
   (g$fxeven?$7896$xgWN3
     g$fxeven?$8001$xgWN3
     (case-lambda
       ((g$n$7945$xgWN3)
        (begin
          (if (not (g$fixnum?$6759$xgWN3 g$n$7945$xgWN3))
            (assertion-violation 'fxeven? '"not a fixnum" g$n$7945$xgWN3)
            (void))
          (fx=? '0 (g$fxmod$7891$xgWN3 g$n$7945$xgWN3 '2))))))
   (g$fxodd?$7897$xgWN3
     g$fxodd?$8002$xgWN3
     (case-lambda
       ((g$n$7946$xgWN3)
        (begin
          (if (not (g$fixnum?$6759$xgWN3 g$n$7946$xgWN3))
            (assertion-violation 'fxodd? '"not a fixnum" g$n$7946$xgWN3)
            (void))
          (fx=? '1 (g$fxmod$7891$xgWN3 g$n$7946$xgWN3 '2))))))
   (g$fxmax$7898$xgWN3
     g$fxmax$8003$xgWN3
     (case-lambda
       ((g$a$7947$xgWN3 . g$rest$7948$xgWN3)
        (begin
          (if (not (g$fixnum?$6759$xgWN3 g$a$7947$xgWN3))
            (assertion-violation 'fxmax '"not a fixnum" g$a$7947$xgWN3)
            (void))
          (g$fold-left$6088$xgWN3
            (case-lambda
              ((g$a$7949$xgWN3 g$b$7950$xgWN3)
               (if (fx<? g$a$7949$xgWN3 g$b$7950$xgWN3)
                 g$b$7950$xgWN3
                 g$a$7949$xgWN3)))
            g$a$7947$xgWN3
            g$rest$7948$xgWN3)))))
   (g$fxmin$7899$xgWN3
     g$fxmin$8004$xgWN3
     (case-lambda
       ((g$a$7951$xgWN3 . g$rest$7952$xgWN3)
        (begin
          (if (not (g$fixnum?$6759$xgWN3 g$a$7951$xgWN3))
            (assertion-violation 'fxmin '"not a fixnum" g$a$7951$xgWN3)
            (void))
          (g$fold-left$6088$xgWN3
            (case-lambda
              ((g$a$7953$xgWN3 g$b$7954$xgWN3)
               (if (fx>? g$a$7953$xgWN3 g$b$7954$xgWN3)
                 g$b$7954$xgWN3
                 g$a$7953$xgWN3)))
            g$a$7951$xgWN3
            g$rest$7952$xgWN3)))))
   (g$fx*/carry$7900$xgWN3
     g$fx*/carry$8005$xgWN3
     (case-lambda
       ((g$fx1$7955$xgWN3 g$fx2$7956$xgWN3 g$fx3$7957$xgWN3)
        ((case-lambda
           ((g$s$7958$xgWN3 g$e$7959$xgWN3)
            (values
              (g$mod0$6750$xgWN3 g$s$7958$xgWN3 g$e$7959$xgWN3)
              (g$div0$6748$xgWN3 g$s$7958$xgWN3 g$e$7959$xgWN3))))
         (+ (* g$fx1$7955$xgWN3 g$fx2$7956$xgWN3) g$fx3$7957$xgWN3)
         (expt '2 (g$fixnum-width$6761$xgWN3))))))
   (g$fx-/carry$7901$xgWN3
     g$fx-/carry$8006$xgWN3
     (case-lambda
       ((g$fx1$7960$xgWN3 g$fx2$7961$xgWN3 g$fx3$7962$xgWN3)
        ((case-lambda
           ((g$s$7963$xgWN3 g$e$7964$xgWN3)
            (values
              (g$mod0$6750$xgWN3 g$s$7963$xgWN3 g$e$7964$xgWN3)
              (g$div0$6748$xgWN3 g$s$7963$xgWN3 g$e$7964$xgWN3))))
         (- g$fx1$7960$xgWN3 g$fx2$7961$xgWN3 g$fx3$7962$xgWN3)
         (expt '2 (g$fixnum-width$6761$xgWN3))))))
   (g$fx+/carry$7902$xgWN3
     g$fx+/carry$8007$xgWN3
     (case-lambda
       ((g$fx1$7965$xgWN3 g$fx2$7966$xgWN3 g$fx3$7967$xgWN3)
        ((case-lambda
           ((g$s$7968$xgWN3 g$e$7969$xgWN3)
            (values
              (g$mod0$6750$xgWN3 g$s$7968$xgWN3 g$e$7969$xgWN3)
              (g$div0$6748$xgWN3 g$s$7968$xgWN3 g$e$7969$xgWN3))))
         (+ g$fx1$7965$xgWN3 g$fx2$7966$xgWN3 g$fx3$7967$xgWN3)
         (expt '2 (g$fixnum-width$6761$xgWN3))))))
   (g$fxif$7903$xgWN3
     g$fxif$8008$xgWN3
     (case-lambda
       ((g$fx1$7970$xgWN3 g$fx2$7971$xgWN3 g$fx3$7972$xgWN3)
        (fxior
          (fxand g$fx1$7970$xgWN3 g$fx2$7971$xgWN3)
          (fxand (fxnot g$fx1$7970$xgWN3) g$fx3$7972$xgWN3)))))
   (g$fxcopy-bit$7904$xgWN3
     g$fxcopy-bit$8009$xgWN3
     (case-lambda
       ((g$fx1$7973$xgWN3 g$fx2$7974$xgWN3 g$fx3$7975$xgWN3)
        (g$fxif$7903$xgWN3
          (g$fxarithmetic-shift-left$7907$xgWN3 '1 g$fx2$7974$xgWN3)
          (g$fxarithmetic-shift-left$7907$xgWN3
            g$fx3$7975$xgWN3
            g$fx2$7974$xgWN3)
          g$fx1$7973$xgWN3))))
   (g$fxbit-field$7905$xgWN3
     g$fxbit-field$8010$xgWN3
     (case-lambda
       ((g$fx1$7976$xgWN3 g$fx2$7977$xgWN3 g$fx3$7978$xgWN3)
        (g$fxarithmetic-shift-right$7908$xgWN3
          (fxand
            g$fx1$7976$xgWN3
            (fxnot (g$fxarithmetic-shift-left$7907$xgWN3 '-1 g$fx3$7978$xgWN3)))
          g$fx2$7977$xgWN3))))
   (g$fxcopy-bit-field$7906$xgWN3
     g$fxcopy-bit-field$8011$xgWN3
     (case-lambda
       ((g$to$7979$xgWN3 g$start$7980$xgWN3 g$end$7981$xgWN3 g$from$7982$xgWN3)
        (g$fxif$7903$xgWN3
          (fxand
            (g$fxarithmetic-shift-left$7907$xgWN3 '-1 g$start$7980$xgWN3)
            (fxnot (g$fxarithmetic-shift-left$7907$xgWN3 '-1 g$end$7981$xgWN3)))
          (g$fxarithmetic-shift-left$7907$xgWN3
            g$from$7982$xgWN3
            g$start$7980$xgWN3)
          g$to$7979$xgWN3))))
   (g$fxarithmetic-shift-left$7907$xgWN3
     g$fxarithmetic-shift-left$8012$xgWN3
     (case-lambda
       ((g$fx1$7983$xgWN3 g$fx2$7984$xgWN3)
        (fxarithmetic-shift g$fx1$7983$xgWN3 g$fx2$7984$xgWN3))))
   (g$fxarithmetic-shift-right$7908$xgWN3
     g$fxarithmetic-shift-right$8013$xgWN3
     (case-lambda
       ((g$fx1$7985$xgWN3 g$fx2$7986$xgWN3)
        (fxarithmetic-shift g$fx1$7985$xgWN3 (fx- g$fx2$7986$xgWN3)))))
   (g$fxrotate-bit-field$7909$xgWN3
     g$fxrotate-bit-field$8014$xgWN3
     (case-lambda
       ((g$n$7987$xgWN3 g$start$7988$xgWN3 g$end$7989$xgWN3 g$count$7990$xgWN3)
        ((case-lambda
           ((g$width$7991$xgWN3)
            (if (g$fxpositive?$7893$xgWN3 g$width$7991$xgWN3)
              ((case-lambda
                 ((g$count$7992$xgWN3 g$field$7993$xgWN3)
                  (g$fxcopy-bit-field$7906$xgWN3
                    g$n$7987$xgWN3
                    g$start$7988$xgWN3
                    g$end$7989$xgWN3
                    (fxior
                      (g$fxarithmetic-shift-left$7907$xgWN3
                        g$field$7993$xgWN3
                        g$count$7992$xgWN3)
                      (g$fxarithmetic-shift-right$7908$xgWN3
                        g$field$7993$xgWN3
                        (fx- g$width$7991$xgWN3 g$count$7992$xgWN3))))))
               (g$fxmod$7891$xgWN3 g$count$7990$xgWN3 g$width$7991$xgWN3)
               (g$fxbit-field$7905$xgWN3
                 g$n$7987$xgWN3
                 g$start$7988$xgWN3
                 g$end$7989$xgWN3))
              g$n$7987$xgWN3)))
         (fx- g$end$7989$xgWN3 g$start$7988$xgWN3))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fldiv-and-mod$8015$xgWN3
     g$fldiv-and-mod$8132$xgWN3
     (case-lambda
       ((g$fl1$8047$xgWN3 g$fl2$8048$xgWN3)
        (call-with-values
          (case-lambda (() (div-and-mod g$fl1$8047$xgWN3 g$fl2$8048$xgWN3)))
          (case-lambda
            ((g$n$8051$xgWN3 g$d$8052$xgWN3)
             ((case-lambda
                ((g$d$8053$xgWN3 g$n$8054$xgWN3)
                 (values (real->flonum g$n$8054$xgWN3) g$d$8053$xgWN3)))
              g$d$8052$xgWN3
              g$n$8051$xgWN3)))))))
   (g$fldiv0-and-mod0$8016$xgWN3
     g$fldiv0-and-mod0$8133$xgWN3
     (case-lambda
       ((g$fl1$8055$xgWN3 g$fl2$8056$xgWN3)
        (call-with-values
          (case-lambda (() (div0-and-mod0 g$fl1$8055$xgWN3 g$fl2$8056$xgWN3)))
          (case-lambda
            ((g$n$8059$xgWN3 g$d$8060$xgWN3)
             ((case-lambda
                ((g$d$8061$xgWN3 g$n$8062$xgWN3)
                 (values (real->flonum g$n$8062$xgWN3) g$d$8061$xgWN3)))
              g$d$8060$xgWN3
              g$n$8059$xgWN3)))))))
   (g$fldiv$8017$xgWN3
     g$fldiv$8134$xgWN3
     (case-lambda
       ((g$fl1$8063$xgWN3 g$fl2$8064$xgWN3)
        (call-with-values
          (case-lambda
            (() (g$fldiv-and-mod$8015$xgWN3 g$fl1$8063$xgWN3 g$fl2$8064$xgWN3)))
          (case-lambda
            ((g$n$8067$xgWN3 g$d$8068$xgWN3)
             ((case-lambda ((g$d$8069$xgWN3 g$n$8070$xgWN3) g$n$8070$xgWN3))
              g$d$8068$xgWN3
              g$n$8067$xgWN3)))))))
   (g$fldiv0$8018$xgWN3
     g$fldiv0$8135$xgWN3
     (case-lambda
       ((g$fl1$8071$xgWN3 g$fl2$8072$xgWN3)
        (call-with-values
          (case-lambda
            (()
             (g$fldiv0-and-mod0$8016$xgWN3 g$fl1$8071$xgWN3 g$fl2$8072$xgWN3)))
          (case-lambda
            ((g$n$8075$xgWN3 g$d$8076$xgWN3)
             ((case-lambda ((g$d$8077$xgWN3 g$n$8078$xgWN3) g$n$8078$xgWN3))
              g$d$8076$xgWN3
              g$n$8075$xgWN3)))))))
   (g$flmod$8019$xgWN3
     g$flmod$8136$xgWN3
     (case-lambda
       ((g$fl1$8079$xgWN3 g$fl2$8080$xgWN3)
        (call-with-values
          (case-lambda
            (() (g$fldiv-and-mod$8015$xgWN3 g$fl1$8079$xgWN3 g$fl2$8080$xgWN3)))
          (case-lambda
            ((g$n$8083$xgWN3 g$d$8084$xgWN3)
             ((case-lambda ((g$d$8085$xgWN3 g$n$8086$xgWN3) g$d$8085$xgWN3))
              g$d$8084$xgWN3
              g$n$8083$xgWN3)))))))
   (g$flmod0$8020$xgWN3
     g$flmod0$8137$xgWN3
     (case-lambda
       ((g$fl1$8087$xgWN3 g$fl2$8088$xgWN3)
        (call-with-values
          (case-lambda
            (()
             (g$fldiv0-and-mod0$8016$xgWN3 g$fl1$8087$xgWN3 g$fl2$8088$xgWN3)))
          (case-lambda
            ((g$n$8091$xgWN3 g$d$8092$xgWN3)
             ((case-lambda ((g$d$8093$xgWN3 g$n$8094$xgWN3) g$d$8093$xgWN3))
              g$d$8092$xgWN3
              g$n$8091$xgWN3)))))))
   (g$flinteger?$8021$xgWN3
     g$flinteger?$8138$xgWN3
     (case-lambda
       ((g$fl$8095$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8095$xgWN3))
            (assertion-violation 'flinteger? '"not a flonum" g$fl$8095$xgWN3)
            (void))
          (fl=? '0.0 (g$flmod$8019$xgWN3 g$fl$8095$xgWN3 '1.0))))))
   (g$flfinite?$8022$xgWN3
     g$flfinite?$8139$xgWN3
     (case-lambda
       ((g$fl$8096$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8096$xgWN3))
            (assertion-violation 'flfinite? '"not a flonum" g$fl$8096$xgWN3)
            (void))
          (not (g$flinfinite?$8023$xgWN3 g$fl$8096$xgWN3))))))
   (g$flinfinite?$8023$xgWN3
     g$flinfinite?$8140$xgWN3
     (case-lambda
       ((g$fl$8097$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8097$xgWN3))
            (assertion-violation 'flinfinite? '"not a flonum" g$fl$8097$xgWN3)
            (void))
          (clr-call-internal 'system.double 'isinfinity '() g$fl$8097$xgWN3)))))
   (g$flnan?$8024$xgWN3
     g$flnan?$8141$xgWN3
     (case-lambda
       ((g$fl$8098$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8098$xgWN3))
            (assertion-violation 'flnan? '"not a flonum" g$fl$8098$xgWN3)
            (void))
          (clr-call-internal 'system.double 'isnan '() g$fl$8098$xgWN3)))))
   (g$flsin$8025$xgWN3
     g$flsin$8142$xgWN3
     (case-lambda
       ((g$fl$8099$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8099$xgWN3))
            (assertion-violation 'flsin '"not a flonum" g$fl$8099$xgWN3)
            (void))
          (clr-call-internal 'system.math 'sin '() g$fl$8099$xgWN3)))))
   (g$flcos$8026$xgWN3
     g$flcos$8143$xgWN3
     (case-lambda
       ((g$fl$8100$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8100$xgWN3))
            (assertion-violation 'flcos '"not a flonum" g$fl$8100$xgWN3)
            (void))
          (clr-call-internal 'system.math 'cos '() g$fl$8100$xgWN3)))))
   (g$fltan$8027$xgWN3
     g$fltan$8144$xgWN3
     (case-lambda
       ((g$fl$8101$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8101$xgWN3))
            (assertion-violation 'fltan '"not a flonum" g$fl$8101$xgWN3)
            (void))
          (clr-call-internal 'system.math 'tan '() g$fl$8101$xgWN3)))))
   (g$flasin$8028$xgWN3
     g$flasin$8145$xgWN3
     (case-lambda
       ((g$fl$8102$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8102$xgWN3))
            (assertion-violation 'flasin '"not a flonum" g$fl$8102$xgWN3)
            (void))
          (clr-call-internal 'system.math 'asin '() g$fl$8102$xgWN3)))))
   (g$flacos$8029$xgWN3
     g$flacos$8146$xgWN3
     (case-lambda
       ((g$fl$8103$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8103$xgWN3))
            (assertion-violation 'flacos '"not a flonum" g$fl$8103$xgWN3)
            (void))
          (clr-call-internal 'system.math 'acos '() g$fl$8103$xgWN3)))))
   (g$flatan$8030$xgWN3
     g$flatan$8147$xgWN3
     (case-lambda
       ((g$fl$8104$xgWN3)
        (clr-call-internal 'system.math 'atan '() g$fl$8104$xgWN3))
       ((g$fl1$8105$xgWN3 g$fl2$8106$xgWN3)
        (clr-call-internal
          'system.math
          'atan2
          '()
          g$fl1$8105$xgWN3
          g$fl2$8106$xgWN3))))
   (g$fllog$8031$xgWN3
     g$fllog$8148$xgWN3
     (case-lambda
       ((g$fl$8107$xgWN3)
        (clr-call-internal 'system.math 'log '() g$fl$8107$xgWN3))
       ((g$fl1$8108$xgWN3 g$fl2$8109$xgWN3)
        (clr-call-internal
          'system.math
          'log
          '()
          g$fl1$8108$xgWN3
          g$fl2$8109$xgWN3))))
   (g$flsqrt$8032$xgWN3
     g$flsqrt$8149$xgWN3
     (case-lambda
       ((g$fl$8110$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8110$xgWN3))
            (assertion-violation 'flsqrt '"not a flonum" g$fl$8110$xgWN3)
            (void))
          (clr-call-internal 'system.math 'sqrt '() g$fl$8110$xgWN3)))))
   (g$flexp$8033$xgWN3
     g$flexp$8150$xgWN3
     (case-lambda
       ((g$fl$8111$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8111$xgWN3))
            (assertion-violation 'flexp '"not a flonum" g$fl$8111$xgWN3)
            (void))
          (clr-call-internal 'system.math 'exp '() g$fl$8111$xgWN3)))))
   (g$flexpt$8034$xgWN3
     g$flexpt$8151$xgWN3
     (case-lambda
       ((g$fl$8112$xgWN3 g$n$8113$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8112$xgWN3))
            (assertion-violation 'flexpt '"not a flonum" g$fl$8112$xgWN3)
            (void))
          (clr-call-internal
            'system.math
            'pow
            '()
            g$fl$8112$xgWN3
            g$n$8113$xgWN3)))))
   (g$flceiling$8035$xgWN3
     g$flceiling$8152$xgWN3
     (case-lambda
       ((g$fl$8114$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8114$xgWN3))
            (assertion-violation 'flceiling '"not a flonum" g$fl$8114$xgWN3)
            (void))
          (clr-call-internal
            'system.math
            '"ceiling(double)"
            '()
            g$fl$8114$xgWN3)))))
   (g$flfloor$8036$xgWN3
     g$flfloor$8153$xgWN3
     (case-lambda
       ((g$fl$8115$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8115$xgWN3))
            (assertion-violation 'flfloor '"not a flonum" g$fl$8115$xgWN3)
            (void))
          (clr-call-internal
            'system.math
            '"floor(double)"
            '()
            g$fl$8115$xgWN3)))))
   (g$fltruncate$8037$xgWN3
     g$fltruncate$8154$xgWN3
     (case-lambda
       ((g$fl$8116$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8116$xgWN3))
            (assertion-violation 'fltruncate '"not a flonum" g$fl$8116$xgWN3)
            (void))
          (clr-call-internal
            'system.math
            '"truncate(double)"
            '()
            g$fl$8116$xgWN3)))))
   (g$flround$8038$xgWN3
     g$flround$8155$xgWN3
     (case-lambda
       ((g$fl$8117$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8117$xgWN3))
            (assertion-violation 'flround '"not a flonum" g$fl$8117$xgWN3)
            (void))
          (clr-call-internal
            'system.math
            '"round(double)"
            '()
            g$fl$8117$xgWN3)))))
   (g$flabs$8039$xgWN3
     g$flabs$8156$xgWN3
     (case-lambda
       ((g$fl$8118$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$fl$8118$xgWN3))
            (assertion-violation 'flabs '"not a flonum" g$fl$8118$xgWN3)
            (void))
          (clr-call-internal
            'system.math
            '"abs(double)"
            '()
            g$fl$8118$xgWN3)))))
   (g$flpositive?$8040$xgWN3
     g$flpositive?$8157$xgWN3
     (case-lambda
       ((g$r$8119$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$r$8119$xgWN3))
            (assertion-violation 'flpositive? '"not a flonum" g$r$8119$xgWN3)
            (void))
          (fl<? '0.0 g$r$8119$xgWN3)))))
   (g$flnegative?$8041$xgWN3
     g$flnegative?$8158$xgWN3
     (case-lambda
       ((g$r$8120$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$r$8120$xgWN3))
            (assertion-violation 'flnegative? '"not a flonum" g$r$8120$xgWN3)
            (void))
          (fl>? '0.0 g$r$8120$xgWN3)))))
   (g$flzero?$8042$xgWN3
     g$flzero?$8159$xgWN3
     (case-lambda
       ((g$r$8121$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$r$8121$xgWN3))
            (assertion-violation 'flzero? '"not a flonum" g$r$8121$xgWN3)
            (void))
          (fl=? '0.0 g$r$8121$xgWN3)))))
   (g$fleven?$8043$xgWN3
     g$fleven?$8160$xgWN3
     (case-lambda
       ((g$n$8122$xgWN3)
        (begin
          (if (not (integer-valued? g$n$8122$xgWN3))
            (assertion-violation 'fleven? '"not integer valued" g$n$8122$xgWN3)
            (void))
          (fl=? '0.0 (g$flmod$8019$xgWN3 g$n$8122$xgWN3 '2.0))))))
   (g$flodd?$8044$xgWN3
     g$flodd?$8161$xgWN3
     (case-lambda
       ((g$n$8123$xgWN3)
        (begin
          (if (not (integer-valued? g$n$8123$xgWN3))
            (assertion-violation 'flodd? '"not integer valued" g$n$8123$xgWN3)
            (void))
          (fl=? '1.0 (g$flmod$8019$xgWN3 g$n$8123$xgWN3 '2.0))))))
   (g$flmax$8045$xgWN3
     g$flmax$8162$xgWN3
     (case-lambda
       ((g$a$8124$xgWN3 . g$rest$8125$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$a$8124$xgWN3))
            (assertion-violation 'flmax '"not a flonum" g$a$8124$xgWN3)
            (void))
          (g$fold-left$6088$xgWN3
            (case-lambda
              ((g$a$8126$xgWN3 g$b$8127$xgWN3)
               (if (fl<? g$a$8126$xgWN3 g$b$8127$xgWN3)
                 g$b$8127$xgWN3
                 g$a$8126$xgWN3)))
            g$a$8124$xgWN3
            g$rest$8125$xgWN3)))))
   (g$flmin$8046$xgWN3
     g$flmin$8163$xgWN3
     (case-lambda
       ((g$a$8128$xgWN3 . g$rest$8129$xgWN3)
        (begin
          (if (not (g$flonum?$6760$xgWN3 g$a$8128$xgWN3))
            (assertion-violation 'flmin '"not a flonum" g$a$8128$xgWN3)
            (void))
          (g$fold-left$6088$xgWN3
            (case-lambda
              ((g$a$8130$xgWN3 g$b$8131$xgWN3)
               (if (fl>? g$a$8130$xgWN3 g$b$8131$xgWN3)
                 g$b$8131$xgWN3
                 g$a$8130$xgWN3)))
            g$a$8128$xgWN3
            g$rest$8129$xgWN3))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$8165$xgWN3
     g$using$8185$xgWN3
     (clr-using-internal 'ironscheme.runtime))
   (g$put-datum$8166$xgWN3
     g$put-datum$8186$xgWN3
     (case-lambda
       ((g$p$8174$xgWN3 g$datum$8175$xgWN3)
        (write g$datum$8175$xgWN3 g$p$8174$xgWN3))))
   (g$get-datum$8167$xgWN3 g$get-datum$8187$xgWN3 read)
   (g$get-output-string$8168$xgWN3
     g$get-output-string$8188$xgWN3
     (case-lambda
       ((g$port$8176$xgWN3)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$8176$xgWN3))))
   (g$open-output-string$8169$xgWN3
     g$open-output-string$8189$xgWN3
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$8170$xgWN3
     g$open-string-output-port$8190$xgWN3
     (case-lambda
       (()
        ((case-lambda
           ((g$p$8177$xgWN3)
            (values
              g$p$8177$xgWN3
              (case-lambda
                (() (g$get-output-string$8168$xgWN3 g$p$8177$xgWN3))))))
         (g$open-output-string$8169$xgWN3)))))
   (g$port?$8171$xgWN3
     g$port?$8191$xgWN3
     (case-lambda
       ((g$obj$8178$xgWN3)
        ((case-lambda
           ((g$t$8179$xgWN3)
            (if g$t$8179$xgWN3
              g$t$8179$xgWN3
              (begin '#f (binary-port? g$obj$8178$xgWN3)))))
         (textual-port? g$obj$8178$xgWN3)))))
   (g$call-with-string-output-port$8172$xgWN3
     g$call-with-string-output-port$8192$xgWN3
     (case-lambda
       ((g$proc$8180$xgWN3)
        ((case-lambda
           ((g$p$8181$xgWN3)
            (begin
              (g$call-with-port$8173$xgWN3 g$p$8181$xgWN3 g$proc$8180$xgWN3)
              (g$get-output-string$8168$xgWN3 g$p$8181$xgWN3))))
         (g$open-output-string$8169$xgWN3)))))
   (g$call-with-port$8173$xgWN3
     g$call-with-port$8193$xgWN3
     (case-lambda
       ((g$port$8182$xgWN3 g$proc$8183$xgWN3)
        ((case-lambda
           ((g$r$8184$xgWN3)
            (begin (close-port g$port$8182$xgWN3) g$r$8184$xgWN3)))
         (g$proc$8183$xgWN3 g$port$8182$xgWN3))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$8194$xgWN3
     g$peek-char$8246$xgWN3
     (case-lambda
       (() (g$peek-char$8194$xgWN3 (current-input-port)))
       ((g$port$8218$xgWN3) (lookahead-char g$port$8218$xgWN3))))
   (g$read-char$8195$xgWN3
     g$read-char$8247$xgWN3
     (case-lambda
       (() (g$read-char$8195$xgWN3 (current-input-port)))
       ((g$port$8219$xgWN3) (get-char g$port$8219$xgWN3))))
   (g$write-char$8196$xgWN3
     g$write-char$8248$xgWN3
     (case-lambda
       ((g$chr$8220$xgWN3)
        (g$write-char$8196$xgWN3 g$chr$8220$xgWN3 (current-output-port)))
       ((g$chr$8221$xgWN3 g$port$8222$xgWN3)
        (put-char g$port$8222$xgWN3 g$chr$8221$xgWN3))))
   (g$with-input-from-file$8213$xgWN3
     g$with-input-from-file$8249$xgWN3
     (case-lambda
       ((g$filename$8223$xgWN3 g$thunk$8224$xgWN3)
        ((case-lambda
           ((g$current-input-port$8227$xgWN3 g$t$8228$xgWN3)
            ((case-lambda
               ((g$swap$8229$xgWN3)
                (dynamic-wind
                  g$swap$8229$xgWN3
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$8224$xgWN3)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$8229$xgWN3)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$8230$xgWN3)
                    (begin
                      (g$current-input-port$8227$xgWN3 g$t$8228$xgWN3)
                      (set! g$t$8228$xgWN3 g$t$8230$xgWN3))))
                 (g$current-input-port$8227$xgWN3)))))))
         current-input-port
         (open-input-file g$filename$8223$xgWN3)))))
   (g$with-output-to-file$8214$xgWN3
     g$with-output-to-file$8250$xgWN3
     (case-lambda
       ((g$filename$8231$xgWN3 g$thunk$8232$xgWN3)
        ((case-lambda
           ((g$current-output-port$8235$xgWN3 g$t$8236$xgWN3)
            ((case-lambda
               ((g$swap$8237$xgWN3)
                (dynamic-wind
                  g$swap$8237$xgWN3
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$8232$xgWN3)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$8237$xgWN3)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$8238$xgWN3)
                    (begin
                      (g$current-output-port$8235$xgWN3 g$t$8236$xgWN3)
                      (set! g$t$8236$xgWN3 g$t$8238$xgWN3))))
                 (g$current-output-port$8235$xgWN3)))))))
         current-output-port
         (open-output-file g$filename$8231$xgWN3)))))
   (g$call-with-input-file$8215$xgWN3
     g$call-with-input-file$8251$xgWN3
     (case-lambda
       ((g$filename$8239$xgWN3 g$proc$8240$xgWN3)
        ((case-lambda
           ((g$p$8241$xgWN3)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$8240$xgWN3 g$p$8241$xgWN3)))
              (case-lambda (() (close-input-port g$p$8241$xgWN3))))))
         (open-input-file g$filename$8239$xgWN3)))))
   (g$call-with-output-file$8216$xgWN3
     g$call-with-output-file$8252$xgWN3
     (case-lambda
       ((g$filename$8242$xgWN3 g$proc$8243$xgWN3)
        ((case-lambda
           ((g$p$8244$xgWN3)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$8243$xgWN3 g$p$8244$xgWN3)))
              (case-lambda (() (close-output-port g$p$8244$xgWN3))))))
         (open-output-file g$filename$8242$xgWN3)))))
   (g$newline$8217$xgWN3
     g$newline$8253$xgWN3
     (case-lambda
       (() (g$newline$8217$xgWN3 (current-output-port)))
       ((g$port$8245$xgWN3) (display '"
" g$port$8245$xgWN3)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$6631$8254$xgWN3
     g$6631$8367$xgWN3
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$6633$8255$xgWN3 g$6633$8368$xgWN3 '#f)
   (g$6632$8256$xgWN3
     g$6632$8369$xgWN3
     (make-record-constructor-descriptor
       g$6631$8254$xgWN3
       '#f
       g$6633$8255$xgWN3))
   (g$enum?$8259$xgWN3
     g$enum?$8370$xgWN3
     (record-predicate g$6631$8254$xgWN3))
   (g$make-enum$8260$xgWN3
     g$make-enum$8371$xgWN3
     (record-constructor g$6632$8256$xgWN3))
   (g$enum-value$8261$xgWN3
     g$enum-value$8372$xgWN3
     (record-accessor g$6631$8254$xgWN3 '0))
   (g$enum-info$8262$xgWN3
     g$enum-info$8373$xgWN3
     (record-accessor g$6631$8254$xgWN3 '1))
   (g$6642$8263$xgWN3
     g$6642$8374$xgWN3
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$6644$8264$xgWN3 g$6644$8375$xgWN3 '#f)
   (g$6643$8265$xgWN3
     g$6643$8376$xgWN3
     (make-record-constructor-descriptor
       g$6642$8263$xgWN3
       '#f
       g$6644$8264$xgWN3))
   (g$enum-universe?$8268$xgWN3
     g$enum-universe?$8377$xgWN3
     (record-predicate g$6642$8263$xgWN3))
   (g$make-enum-universe$8269$xgWN3
     g$make-enum-universe$8378$xgWN3
     (record-constructor g$6643$8265$xgWN3))
   (g$enum-universe-id$8270$xgWN3
     g$enum-universe-id$8379$xgWN3
     (record-accessor g$6642$8263$xgWN3 '0))
   (g$enum-universe-symbols$8271$xgWN3
     g$enum-universe-symbols$8380$xgWN3
     (record-accessor g$6642$8263$xgWN3 '1))
   (g$enum-universe-mapping$8272$xgWN3
     g$enum-universe-mapping$8381$xgWN3
     (record-accessor g$6642$8263$xgWN3 '2))
   (g$enum-universe-value$8273$xgWN3
     g$enum-universe-value$8382$xgWN3
     (record-accessor g$6642$8263$xgWN3 '3))
   (g$enum-type=?$8274$xgWN3
     g$enum-type=?$8383$xgWN3
     (case-lambda
       ((g$enumset1$8296$xgWN3 g$enumset2$8297$xgWN3)
        (eq? (g$enum-universe-id$8270$xgWN3
               (g$enum-info$8262$xgWN3 g$enumset1$8296$xgWN3))
             (g$enum-universe-id$8270$xgWN3
               (g$enum-info$8262$xgWN3 g$enumset2$8297$xgWN3))))))
   (g$get-symbols$8275$xgWN3
     g$get-symbols$8384$xgWN3
     (case-lambda
       ((g$enumset$8298$xgWN3)
        (g$enum-universe-symbols$8271$xgWN3
          (g$enum-info$8262$xgWN3 g$enumset$8298$xgWN3)))))
   (g$get-value$8276$xgWN3
     g$get-value$8385$xgWN3
     (case-lambda
       ((g$enumset$8299$xgWN3 g$s$8300$xgWN3)
        (g$hashtable-ref$6858$xgWN3
          (g$enum-universe-mapping$8272$xgWN3
            (g$enum-info$8262$xgWN3 g$enumset$8299$xgWN3))
          g$s$8300$xgWN3
          '#f))))
   (g$assert-enum$8277$xgWN3
     g$assert-enum$8386$xgWN3
     (case-lambda
       ((g$who$8301$xgWN3 g$enumset$8302$xgWN3)
        (if (not (g$enum?$8259$xgWN3 g$enumset$8302$xgWN3))
          (assertion-violation
            g$who$8301$xgWN3
            '"not an enumeration"
            g$enumset$8302$xgWN3)
          (void)))))
   (g$make-info$8278$xgWN3
     g$make-info$8387$xgWN3
     (case-lambda
       ((g$symbols$8303$xgWN3)
        ((case-lambda
           ((g$ht$8304$xgWN3)
            ((letrec ((g$f$8305$xgWN3
                        (case-lambda
                          ((g$s$8306$xgWN3 g$a$8307$xgWN3 g$mask$8308$xgWN3)
                           (if (null? g$s$8306$xgWN3)
                             (values
                               (reverse! g$a$8307$xgWN3)
                               g$ht$8304$xgWN3
                               (- g$mask$8308$xgWN3 '1))
                             ((case-lambda
                                ((g$n$8309$xgWN3)
                                 (if (g$symbol?$6756$xgWN3 g$n$8309$xgWN3)
                                   (if (g$hashtable-contains?$6861$xgWN3
                                         g$ht$8304$xgWN3
                                         g$n$8309$xgWN3)
                                     (g$f$8305$xgWN3
                                       (cdr g$s$8306$xgWN3)
                                       g$a$8307$xgWN3
                                       g$mask$8308$xgWN3)
                                     (begin
                                       (g$hashtable-set!$6859$xgWN3
                                         g$ht$8304$xgWN3
                                         g$n$8309$xgWN3
                                         g$mask$8308$xgWN3)
                                       (g$f$8305$xgWN3
                                         (cdr g$s$8306$xgWN3)
                                         (cons g$n$8309$xgWN3 g$a$8307$xgWN3)
                                         (g$bitwise-arithmetic-shift-left$7886$xgWN3
                                           g$mask$8308$xgWN3
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$8309$xgWN3))))
                              (car g$s$8306$xgWN3)))))))
               g$f$8305$xgWN3)
             g$symbols$8303$xgWN3
             '()
             '1)))
         (g$make-eq-hashtable$6855$xgWN3)))))
   (g$make-name$8279$xgWN3
     g$make-name$8388$xgWN3
     (case-lambda
       ((g$symbols$8310$xgWN3)
        (string->symbol (g$format$8427$xgWN3 '"~a" g$symbols$8310$xgWN3)))))
   (g$make-enumeration$8280$xgWN3
     g$make-enumeration$8389$xgWN3
     (case-lambda
       ((g$symbols$8311$xgWN3)
        (call-with-values
          (case-lambda (() (g$make-info$8278$xgWN3 g$symbols$8311$xgWN3)))
          (case-lambda
            ((g$s$8315$xgWN3 g$mapping$8316$xgWN3 g$mask$8317$xgWN3)
             ((case-lambda
                ((g$mask$8318$xgWN3 g$mapping$8319$xgWN3 g$s$8320$xgWN3)
                 (g$make-enum$8260$xgWN3
                   g$mask$8318$xgWN3
                   (g$make-enum-universe$8269$xgWN3
                     (g$make-name$8279$xgWN3 g$s$8320$xgWN3)
                     g$s$8320$xgWN3
                     g$mapping$8319$xgWN3
                     g$mask$8318$xgWN3))))
              g$mask$8317$xgWN3
              g$mapping$8316$xgWN3
              g$s$8315$xgWN3)))))))
   (g$enum-set-universe$8281$xgWN3
     g$enum-set-universe$8390$xgWN3
     (case-lambda
       ((g$enumset$8321$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3 'enum-set-universe g$enumset$8321$xgWN3)
          ((case-lambda
             ((g$ei$8322$xgWN3)
              (g$make-enum$8260$xgWN3
                (g$enum-universe-value$8273$xgWN3 g$ei$8322$xgWN3)
                g$ei$8322$xgWN3)))
           (g$enum-info$8262$xgWN3 g$enumset$8321$xgWN3))))))
   (g$enum-set-indexer$8282$xgWN3
     g$enum-set-indexer$8391$xgWN3
     (case-lambda
       ((g$enumset$8323$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3 'enum-set-indexer g$enumset$8323$xgWN3)
          (case-lambda
            ((g$symbol$8324$xgWN3)
             (begin
               (if (not (g$symbol?$6756$xgWN3 g$symbol$8324$xgWN3))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$8324$xgWN3)
                 (void))
               ((case-lambda
                  ((g$v$8325$xgWN3)
                   (if g$v$8325$xgWN3
                     (- (bitwise-length g$v$8325$xgWN3) '1)
                     '#f)))
                (g$get-value$8276$xgWN3
                  g$enumset$8323$xgWN3
                  g$symbol$8324$xgWN3)))))))))
   (g$enum-set-constructor$8283$xgWN3
     g$enum-set-constructor$8392$xgWN3
     (case-lambda
       ((g$enumset$8326$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3 'enum-set-constructor g$enumset$8326$xgWN3)
          (case-lambda
            ((g$symbols$8327$xgWN3)
             ((letrec ((g$f$8328$xgWN3
                         (case-lambda
                           ((g$v$8329$xgWN3 g$s$8330$xgWN3)
                            (if (null? g$s$8330$xgWN3)
                              (g$make-enum$8260$xgWN3
                                g$v$8329$xgWN3
                                (g$enum-info$8262$xgWN3 g$enumset$8326$xgWN3))
                              ((case-lambda
                                 ((g$n$8331$xgWN3)
                                  (if (g$symbol?$6756$xgWN3 g$n$8331$xgWN3)
                                    ((case-lambda
                                       ((g$v*$8332$xgWN3)
                                        (if g$v*$8332$xgWN3
                                          (g$f$8328$xgWN3
                                            (bitwise-ior
                                              g$v$8329$xgWN3
                                              g$v*$8332$xgWN3)
                                            (cdr g$s$8330$xgWN3))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$8331$xgWN3))))
                                     (g$get-value$8276$xgWN3
                                       g$enumset$8326$xgWN3
                                       g$n$8331$xgWN3))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$8331$xgWN3))))
                               (car g$s$8330$xgWN3)))))))
                g$f$8328$xgWN3)
              '0
              g$symbols$8327$xgWN3)))))))
   (g$enum-set->list$8284$xgWN3
     g$enum-set->list$8393$xgWN3
     (case-lambda
       ((g$enumset$8333$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3 'enum-set->list g$enumset$8333$xgWN3)
          ((case-lambda
             ((g$value$8334$xgWN3)
              ((letrec ((g$f$8335$xgWN3
                          (case-lambda
                            ((g$s$8336$xgWN3 g$l$8337$xgWN3)
                             (if (null? g$s$8336$xgWN3)
                               (reverse! g$l$8337$xgWN3)
                               (if (g$zero?$6794$xgWN3
                                     (bitwise-and
                                       (g$get-value$8276$xgWN3
                                         g$enumset$8333$xgWN3
                                         (car g$s$8336$xgWN3))
                                       g$value$8334$xgWN3))
                                 (g$f$8335$xgWN3
                                   (cdr g$s$8336$xgWN3)
                                   g$l$8337$xgWN3)
                                 (g$f$8335$xgWN3
                                   (cdr g$s$8336$xgWN3)
                                   (cons
                                     (car g$s$8336$xgWN3)
                                     g$l$8337$xgWN3))))))))
                 g$f$8335$xgWN3)
               (g$get-symbols$8275$xgWN3 g$enumset$8333$xgWN3)
               '())))
           (g$enum-value$8261$xgWN3 g$enumset$8333$xgWN3))))))
   (g$enum-set-member?$8285$xgWN3
     g$enum-set-member?$8394$xgWN3
     (case-lambda
       ((g$symbol$8338$xgWN3 g$enumset$8339$xgWN3)
        (begin
          (if (not (g$symbol?$6756$xgWN3 g$symbol$8338$xgWN3))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$8338$xgWN3)
            (void))
          (g$assert-enum$8277$xgWN3 'enum-set-member? g$enumset$8339$xgWN3)
          ((case-lambda
             ((g$v$8340$xgWN3)
              (if g$v$8340$xgWN3
                (not (g$zero?$6794$xgWN3
                       (bitwise-and
                         g$v$8340$xgWN3
                         (g$enum-value$8261$xgWN3 g$enumset$8339$xgWN3))))
                '#f)))
           (g$get-value$8276$xgWN3
             g$enumset$8339$xgWN3
             g$symbol$8338$xgWN3))))))
   (g$enum-set-subset?$8286$xgWN3
     g$enum-set-subset?$8395$xgWN3
     (case-lambda
       ((g$enumset1$8341$xgWN3 g$enumset2$8342$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3 'enum-set-subset? g$enumset1$8341$xgWN3)
          (g$assert-enum$8277$xgWN3 'enum-set-subset? g$enumset2$8342$xgWN3)
          ((case-lambda
             ((g$v1$8343$xgWN3 g$v2$8344$xgWN3)
              (if (g$enum-type=?$8274$xgWN3
                    g$enumset1$8341$xgWN3
                    g$enumset2$8342$xgWN3)
                (= (bitwise-and g$v1$8343$xgWN3 g$v2$8344$xgWN3)
                   g$v1$8343$xgWN3)
                ((letrec ((g$f$8345$xgWN3
                            (case-lambda
                              ((g$s$8346$xgWN3)
                               (if (null? g$s$8346$xgWN3)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$8347$xgWN3 g$v2*$8348$xgWN3)
                                     (if g$v2*$8348$xgWN3
                                       ((case-lambda
                                          ((g$has1$8349$xgWN3 g$has2$8350$xgWN3)
                                           (if (if g$has1$8349$xgWN3
                                                 (begin
                                                   '#f
                                                   (not g$has2$8350$xgWN3))
                                                 '#f)
                                             '#f
                                             (g$f$8345$xgWN3
                                               (cdr g$s$8346$xgWN3)))))
                                        (not (g$zero?$6794$xgWN3
                                               (bitwise-and
                                                 g$v1$8343$xgWN3
                                                 g$v1*$8347$xgWN3)))
                                        (not (g$zero?$6794$xgWN3
                                               (bitwise-and
                                                 g$v2$8344$xgWN3
                                                 g$v2*$8348$xgWN3))))
                                       '#f)))
                                  (g$get-value$8276$xgWN3
                                    g$enumset1$8341$xgWN3
                                    (car g$s$8346$xgWN3))
                                  (g$get-value$8276$xgWN3
                                    g$enumset2$8342$xgWN3
                                    (car g$s$8346$xgWN3))))))))
                   g$f$8345$xgWN3)
                 (g$get-symbols$8275$xgWN3 g$enumset1$8341$xgWN3)))))
           (g$enum-value$8261$xgWN3 g$enumset1$8341$xgWN3)
           (g$enum-value$8261$xgWN3 g$enumset2$8342$xgWN3))))))
   (g$enum-set=?$8287$xgWN3
     g$enum-set=?$8396$xgWN3
     (case-lambda
       ((g$enumset1$8351$xgWN3 g$enumset2$8352$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3 'enum-set=? g$enumset1$8351$xgWN3)
          (g$assert-enum$8277$xgWN3 'enum-set=? g$enumset2$8352$xgWN3)
          (if (g$enum-set-subset?$8286$xgWN3
                g$enumset1$8351$xgWN3
                g$enumset2$8352$xgWN3)
            (begin
              '#f
              (g$enum-set-subset?$8286$xgWN3
                g$enumset2$8352$xgWN3
                g$enumset1$8351$xgWN3))
            '#f)))))
   (g$enum-set-union$8288$xgWN3
     g$enum-set-union$8397$xgWN3
     (case-lambda
       ((g$enumset1$8353$xgWN3 g$enumset2$8354$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3 'enum-set-union g$enumset1$8353$xgWN3)
          (g$assert-enum$8277$xgWN3 'enum-set-union g$enumset2$8354$xgWN3)
          (if (g$enum-type=?$8274$xgWN3
                g$enumset1$8353$xgWN3
                g$enumset2$8354$xgWN3)
            (g$make-enum$8260$xgWN3
              (bitwise-ior
                (g$enum-value$8261$xgWN3 g$enumset1$8353$xgWN3)
                (g$enum-value$8261$xgWN3 g$enumset2$8354$xgWN3))
              (g$enum-info$8262$xgWN3 g$enumset1$8353$xgWN3))
            '#f)))))
   (g$enum-set-intersection$8289$xgWN3
     g$enum-set-intersection$8398$xgWN3
     (case-lambda
       ((g$enumset1$8355$xgWN3 g$enumset2$8356$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3
            'enum-set-intersection
            g$enumset1$8355$xgWN3)
          (g$assert-enum$8277$xgWN3
            'enum-set-intersection
            g$enumset2$8356$xgWN3)
          (if (g$enum-type=?$8274$xgWN3
                g$enumset1$8355$xgWN3
                g$enumset2$8356$xgWN3)
            (g$make-enum$8260$xgWN3
              (bitwise-and
                (g$enum-value$8261$xgWN3 g$enumset1$8355$xgWN3)
                (g$enum-value$8261$xgWN3 g$enumset2$8356$xgWN3))
              (g$enum-info$8262$xgWN3 g$enumset1$8355$xgWN3))
            '#f)))))
   (g$enum-set-difference$8290$xgWN3
     g$enum-set-difference$8399$xgWN3
     (case-lambda
       ((g$enumset1$8357$xgWN3 g$enumset2$8358$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3 'enum-set-difference g$enumset1$8357$xgWN3)
          (g$assert-enum$8277$xgWN3 'enum-set-difference g$enumset2$8358$xgWN3)
          (if (g$enum-type=?$8274$xgWN3
                g$enumset1$8357$xgWN3
                g$enumset2$8358$xgWN3)
            (g$make-enum$8260$xgWN3
              (bitwise-and
                (g$enum-value$8261$xgWN3 g$enumset1$8357$xgWN3)
                (bitwise-not (g$enum-value$8261$xgWN3 g$enumset2$8358$xgWN3)))
              (g$enum-info$8262$xgWN3 g$enumset1$8357$xgWN3))
            '#f)))))
   (g$enum-set-complement$8291$xgWN3
     g$enum-set-complement$8400$xgWN3
     (case-lambda
       ((g$enumset$8359$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3 'enum-set-complement g$enumset$8359$xgWN3)
          (g$make-enum$8260$xgWN3
            (bitwise-not (g$enum-value$8261$xgWN3 g$enumset$8359$xgWN3))
            (g$enum-info$8262$xgWN3 g$enumset$8359$xgWN3))))))
   (g$enum-set-projection$8292$xgWN3
     g$enum-set-projection$8401$xgWN3
     (case-lambda
       ((g$enumset1$8360$xgWN3 g$enumset2$8361$xgWN3)
        (begin
          (g$assert-enum$8277$xgWN3 'enum-set-projection g$enumset1$8360$xgWN3)
          (g$assert-enum$8277$xgWN3 'enum-set-projection g$enumset2$8361$xgWN3)
          ((case-lambda
             ((g$v1$8362$xgWN3)
              ((letrec ((g$f$8363$xgWN3
                          (case-lambda
                            ((g$s$8364$xgWN3 g$v$8365$xgWN3)
                             (if (null? g$s$8364$xgWN3)
                               (g$make-enum$8260$xgWN3
                                 g$v$8365$xgWN3
                                 (g$enum-info$8262$xgWN3 g$enumset2$8361$xgWN3))
                               (if (g$zero?$6794$xgWN3
                                     (bitwise-and
                                       g$v1$8362$xgWN3
                                       (g$get-value$8276$xgWN3
                                         g$enumset1$8360$xgWN3
                                         (car g$s$8364$xgWN3))))
                                 (g$f$8363$xgWN3
                                   (cdr g$s$8364$xgWN3)
                                   g$v$8365$xgWN3)
                                 ((case-lambda
                                    ((g$v2$8366$xgWN3)
                                     (if g$v2$8366$xgWN3
                                       (g$f$8363$xgWN3
                                         (cdr g$s$8364$xgWN3)
                                         (bitwise-ior
                                           g$v$8365$xgWN3
                                           g$v2$8366$xgWN3))
                                       (g$f$8363$xgWN3
                                         (cdr g$s$8364$xgWN3)
                                         g$v$8365$xgWN3))))
                                  (g$get-value$8276$xgWN3
                                    g$enumset2$8361$xgWN3
                                    (car g$s$8364$xgWN3)))))))))
                 g$f$8363$xgWN3)
               (g$get-symbols$8275$xgWN3 g$enumset1$8360$xgWN3)
               '0)))
           (g$enum-value$8261$xgWN3 g$enumset1$8360$xgWN3)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$8293$xgWN3 g$p$8294$xgWN3 g$wr$8295$xgWN3)
       (g$fprintf$8426$xgWN3
         g$p$8294$xgWN3
         '"#[enum-set ~a]"
         (g$enum-set->list$8284$xgWN3 g$x$8293$xgWN3))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$8402$xgWN3
     g$dofmt$8424$xgWN3
     (case-lambda
       ((g$p$8406$xgWN3 g$cntl$8407$xgWN3 g$args$8408$xgWN3)
        ((case-lambda
           ((g$nmax$8409$xgWN3)
            ((letrec ((g$loop$8410$xgWN3
                        (case-lambda
                          ((g$n$8411$xgWN3 g$a$8412$xgWN3)
                           (if (fx<=? g$n$8411$xgWN3 g$nmax$8409$xgWN3)
                             ((case-lambda
                                ((g$c$8413$xgWN3)
                                 (if (if (g$char=?$6808$xgWN3
                                           g$c$8413$xgWN3
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$8411$xgWN3
                                           g$nmax$8409$xgWN3))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$8414$xgWN3)
                                       (if (g$memv$6078$xgWN3
                                             g$t$8414$xgWN3
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$8412$xgWN3)
                                             g$p$8406$xgWN3)
                                           (g$loop$8410$xgWN3
                                             (fx+ g$n$8411$xgWN3 '2)
                                             (cdr g$a$8412$xgWN3)))
                                         (if (g$memv$6078$xgWN3
                                               g$t$8414$xgWN3
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$8412$xgWN3)
                                               g$p$8406$xgWN3)
                                             (g$loop$8410$xgWN3
                                               (fx+ g$n$8411$xgWN3 '2)
                                               (cdr g$a$8412$xgWN3)))
                                           (if (g$memv$6078$xgWN3
                                                 g$t$8414$xgWN3
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$8412$xgWN3)
                                                   '2)
                                                 g$p$8406$xgWN3)
                                               (g$loop$8410$xgWN3
                                                 (fx+ g$n$8411$xgWN3 '2)
                                                 (cdr g$a$8412$xgWN3)))
                                             (if (g$memv$6078$xgWN3
                                                   g$t$8414$xgWN3
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$8412$xgWN3)
                                                     '8)
                                                   g$p$8406$xgWN3)
                                                 (g$loop$8410$xgWN3
                                                   (fx+ g$n$8411$xgWN3 '2)
                                                   (cdr g$a$8412$xgWN3)))
                                               (if (g$memv$6078$xgWN3
                                                     g$t$8414$xgWN3
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$8412$xgWN3)
                                                       '16)
                                                     g$p$8406$xgWN3)
                                                   (g$loop$8410$xgWN3
                                                     (fx+ g$n$8411$xgWN3 '2)
                                                     (cdr g$a$8412$xgWN3)))
                                                 (if (g$memv$6078$xgWN3
                                                       g$t$8414$xgWN3
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$8412$xgWN3)
                                                         '10)
                                                       g$p$8406$xgWN3)
                                                     (g$loop$8410$xgWN3
                                                       (fx+ g$n$8411$xgWN3 '2)
                                                       (cdr g$a$8412$xgWN3)))
                                                   (if (g$memv$6078$xgWN3
                                                         g$t$8414$xgWN3
                                                         '(#\~))
                                                     (begin
                                                       (g$write-char$8248$xgWN3
                                                         '#\~
                                                         g$p$8406$xgWN3)
                                                       (g$loop$8410$xgWN3
                                                         (fx+ g$n$8411$xgWN3 '2)
                                                         g$a$8412$xgWN3))
                                                     (begin
                                                       (g$write-char$8248$xgWN3
                                                         g$c$8413$xgWN3
                                                         g$p$8406$xgWN3)
                                                       (g$loop$8410$xgWN3
                                                         (fx+ g$n$8411$xgWN3 '1)
                                                         g$a$8412$xgWN3)))))))))))
                                    (string-ref
                                      g$cntl$8407$xgWN3
                                      (fx+ g$n$8411$xgWN3 '1)))
                                   (begin
                                     (g$write-char$8248$xgWN3
                                       g$c$8413$xgWN3
                                       g$p$8406$xgWN3)
                                     (g$loop$8410$xgWN3
                                       (fx+ g$n$8411$xgWN3 '1)
                                       g$a$8412$xgWN3)))))
                              (string-ref g$cntl$8407$xgWN3 g$n$8411$xgWN3))
                             (void))))))
               g$loop$8410$xgWN3)
             '0
             g$args$8408$xgWN3)))
         (fx- (string-length g$cntl$8407$xgWN3) '1)))))
   (g$printf$8403$xgWN3
     g$printf$8425$xgWN3
     (case-lambda
       ((g$control$8415$xgWN3 . g$args$8416$xgWN3)
        (g$dofmt$8402$xgWN3
          (current-output-port)
          g$control$8415$xgWN3
          g$args$8416$xgWN3))))
   (g$fprintf$8404$xgWN3
     g$fprintf$8426$xgWN3
     (case-lambda
       ((g$p$8417$xgWN3 g$control$8418$xgWN3 . g$args$8419$xgWN3)
        (g$dofmt$8402$xgWN3
          g$p$8417$xgWN3
          g$control$8418$xgWN3
          g$args$8419$xgWN3))))
   (g$format$8405$xgWN3
     g$format$8427$xgWN3
     (case-lambda
       ((g$control$8420$xgWN3 . g$args$8421$xgWN3)
        (call-with-values
          g$open-string-output-port$8190$xgWN3
          (case-lambda
            ((g$p$8422$xgWN3 g$c$8423$xgWN3)
             (begin
               (g$dofmt$8402$xgWN3
                 g$p$8422$xgWN3
                 g$control$8420$xgWN3
                 g$args$8421$xgWN3)
               (g$c$8423$xgWN3)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$8428$xgWN3
     g$make-traced-macro$8431$xgWN3
     (case-lambda
       ((g$name$8429$xgWN3 g$x$8430$xgWN3)
        (if (g$procedure?$6758$xgWN3 g$x$8430$xgWN3)
          (make-traced-procedure
            g$name$8429$xgWN3
            g$x$8430$xgWN3
            g$syntax->datum$13705$xgWN3)
          (if (g$variable-transformer?$13527$xgWN3 g$x$8430$xgWN3)
            (g$make-variable-transformer$13525$xgWN3
              (make-traced-procedure
                g$name$8429$xgWN3
                (g$variable-transformer-procedure$13528$xgWN3 g$x$8430$xgWN3)
                g$syntax->datum$13705$xgWN3))
            g$x$8430$xgWN3))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$8432$xgWN3
     g$cps/generate-reference$8697$xgWN3
     (case-lambda
       ((g$variable$8485$xgWN3)
        (g$cps/generate-operand$8436$xgWN3
          (g$make-reference$8462$xgWN3 g$variable$8485$xgWN3)))))
   (g$cps/generate-literal$8433$xgWN3
     g$cps/generate-literal$8698$xgWN3
     (case-lambda
       ((g$datum$8486$xgWN3)
        (g$cps/generate-operand$8436$xgWN3
          (g$make-literal$8461$xgWN3 g$datum$8486$xgWN3)))))
   (g$cps/generate-abstraction$8434$xgWN3
     g$cps/generate-abstraction$8699$xgWN3
     (case-lambda
       ((g$bvl$8487$xgWN3 g$body-generator$8488$xgWN3)
        (g$cps/generate-operand$8436$xgWN3
          (g$make-user-abstraction$8463$xgWN3
            g$bvl$8487$xgWN3
            (case-lambda
              ((g$continuation-variable$8489$xgWN3)
               (g$body-generator$8488$xgWN3
                 (g$variable-continuator$8449$xgWN3
                   g$continuation-variable$8489$xgWN3)))))))))
   (g$cps/generate-abstractions$8435$xgWN3
     g$cps/generate-abstractions$8700$xgWN3
     (case-lambda
       ((g$bvls$8490$xgWN3 g$body-generators$8491$xgWN3)
        (g$cps/generate-operand$8436$xgWN3
          (g$make-user-abstractions$8464$xgWN3
            g$bvls$8490$xgWN3
            (g$map$6085$xgWN3
              (case-lambda
                ((g$body-generator$8492$xgWN3)
                 (case-lambda
                   ((g$continuation-variable$8493$xgWN3)
                    (g$body-generator$8492$xgWN3
                      (g$variable-continuator$8449$xgWN3
                        g$continuation-variable$8493$xgWN3))))))
              g$body-generators$8491$xgWN3))))))
   (g$cps/generate-operand$8436$xgWN3
     g$cps/generate-operand$8701$xgWN3
     (case-lambda
       ((g$operand$8494$xgWN3)
        (case-lambda
          ((g$continuator$8495$xgWN3)
           (g$continue-with-operand$8452$xgWN3
             g$continuator$8495$xgWN3
             g$operand$8494$xgWN3))))))
   (g$cps/generate-conditional$8437$xgWN3
     g$cps/generate-conditional$8702$xgWN3
     (case-lambda
       ((g$condition-generator$8496$xgWN3
          g$consequent-generator$8497$xgWN3
          g$alternative-generator$8498$xgWN3)
        (case-lambda
          ((g$continuator$8499$xgWN3)
           (letrec* ((g$if-variable$8500$xgWN3
                       (case-lambda
                         ((g$continuation-variable$8502$xgWN3)
                          ((case-lambda
                             ((g$continuator*$8503$xgWN3)
                              (g$condition-generator$8496$xgWN3
                                (g$conditional-continuator$8448$xgWN3
                                  (case-lambda
                                    ((g$condition$8504$xgWN3)
                                     (g$make-conditional$8471$xgWN3
                                       g$condition$8504$xgWN3
                                       (g$consequent-generator$8497$xgWN3
                                         g$continuator*$8503$xgWN3)
                                       (g$alternative-generator$8498$xgWN3
                                         g$continuator*$8503$xgWN3))))))))
                           (g$variable-continuator$8449$xgWN3
                             g$continuation-variable$8502$xgWN3))))))
             (g$reify-continuation*$8454$xgWN3
               g$continuator$8499$xgWN3
               g$if-variable$8500$xgWN3
               (case-lambda
                 ((g$continuation-abstraction$8501$xgWN3)
                  (g$make-conditional-join$8472$xgWN3
                    g$continuation-abstraction$8501$xgWN3
                    g$if-variable$8500$xgWN3))))))))))
   (g$cps/generate-recursive-bind$8438$xgWN3
     g$cps/generate-recursive-bind$8703$xgWN3
     (case-lambda
       ((g$variables$8505$xgWN3
          g$generators$8506$xgWN3
          g$body-generator$8507$xgWN3)
        (case-lambda
          ((g$continuator$8508$xgWN3)
           (g$make-recursive-bind$8466$xgWN3
             g$variables$8505$xgWN3
             (g$map$6085$xgWN3
               (case-lambda
                 ((g$generator$8509$xgWN3)
                  (case-lambda
                    ((g$continuation-variable$8510$xgWN3)
                     (g$generator$8509$xgWN3
                       (g$variable-continuator$8449$xgWN3
                         g$continuation-variable$8510$xgWN3))))))
               g$generators$8506$xgWN3)
             (g$body-generator$8507$xgWN3
               (g$reified-continuator$8451$xgWN3
                 g$continuator$8508$xgWN3))))))))
   (g$cps/generate-recursive*-bind$8439$xgWN3
     g$cps/generate-recursive*-bind$8704$xgWN3
     (case-lambda
       ((g$variables$8511$xgWN3
          g$generators$8512$xgWN3
          g$body-generator$8513$xgWN3)
        (case-lambda
          ((g$continuator$8514$xgWN3)
           (g$make-recursive*-bind$8467$xgWN3
             g$variables$8511$xgWN3
             (g$map$6085$xgWN3
               (case-lambda
                 ((g$generator$8515$xgWN3)
                  (case-lambda
                    ((g$continuation-variable$8516$xgWN3)
                     (g$generator$8515$xgWN3
                       (g$variable-continuator$8449$xgWN3
                         g$continuation-variable$8516$xgWN3))))))
               g$generators$8512$xgWN3)
             (g$body-generator$8513$xgWN3
               (g$reified-continuator$8451$xgWN3
                 g$continuator$8514$xgWN3))))))))
   (g$cps/generate-recursive*-library-bind$8440$xgWN3
     g$cps/generate-recursive*-library-bind$8705$xgWN3
     (case-lambda
       ((g$name$8517$xgWN3
          g$variables$8518$xgWN3
          g$variables*$8519$xgWN3
          g$generators$8520$xgWN3
          g$body-generator$8521$xgWN3)
        (case-lambda
          ((g$continuator$8522$xgWN3)
           (g$make-recursive*-library-bind$8468$xgWN3
             g$name$8517$xgWN3
             g$variables$8518$xgWN3
             g$variables*$8519$xgWN3
             (g$map$6085$xgWN3
               (case-lambda
                 ((g$generator$8523$xgWN3)
                  (case-lambda
                    ((g$continuation-variable$8524$xgWN3)
                     (g$generator$8523$xgWN3
                       (g$variable-continuator$8449$xgWN3
                         g$continuation-variable$8524$xgWN3))))))
               g$generators$8520$xgWN3)
             (g$body-generator$8521$xgWN3
               (g$reified-continuator$8451$xgWN3
                 g$continuator$8522$xgWN3))))))))
   (g$cps/generate-sequence$8441$xgWN3
     g$cps/generate-sequence$8706$xgWN3
     (case-lambda
       ((g$generators$8525$xgWN3)
        (case-lambda
          ((g$continuator$8526$xgWN3)
           ((letrec ((g$recur$8527$xgWN3
                       (case-lambda
                         ((g$generators$8528$xgWN3)
                          ((car g$generators$8528$xgWN3)
                           ((case-lambda
                              ((g$generators$8529$xgWN3)
                               (if (pair? g$generators$8529$xgWN3)
                                 (g$effect-continuator$8447$xgWN3
                                   (case-lambda
                                     (()
                                      (g$recur$8527$xgWN3
                                        g$generators$8529$xgWN3))))
                                 g$continuator$8526$xgWN3)))
                            (cdr g$generators$8528$xgWN3)))))))
              g$recur$8527$xgWN3)
            g$generators$8525$xgWN3))))))
   (g$cps/generate-assignment$8442$xgWN3
     g$cps/generate-assignment$8707$xgWN3
     (case-lambda
       ((g$location$8530$xgWN3 g$expression-generator$8531$xgWN3)
        (case-lambda
          ((g$continuator$8532$xgWN3)
           (g$expression-generator$8531$xgWN3
             (g$operand-continuator$8446$xgWN3
               (case-lambda
                 ((g$operand$8533$xgWN3)
                  (g$make-assignment$8474$xgWN3
                    g$location$8530$xgWN3
                    g$operand$8533$xgWN3
                    (g$continue-with-operand$8452$xgWN3
                      g$continuator$8532$xgWN3
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$8443$xgWN3
     g$cps/generate-declaration$8708$xgWN3
     (case-lambda
       ((g$location$8534$xgWN3 g$expression-generator$8535$xgWN3)
        (case-lambda
          ((g$continuator$8536$xgWN3)
           (g$expression-generator$8535$xgWN3
             (g$operand-continuator$8446$xgWN3
               (case-lambda
                 ((g$operand$8537$xgWN3)
                  (g$make-declaration$8475$xgWN3
                    g$location$8534$xgWN3
                    g$operand$8537$xgWN3
                    (g$continue-with-operand$8452$xgWN3
                      g$continuator$8536$xgWN3
                      '(cps-void))))))))))))
   (g$cps/generate-combination$8444$xgWN3
     g$cps/generate-combination$8709$xgWN3
     (case-lambda
       ((g$operator-generator$8538$xgWN3 g$operand-generators$8539$xgWN3)
        (g$cps/generate-subproblems$8445$xgWN3
          (g$reverse$6763$xgWN3
            (cons
              g$operator-generator$8538$xgWN3
              g$operand-generators$8539$xgWN3))
          (case-lambda
            ((g$operands$8540$xgWN3 g$continuator$8541$xgWN3)
             (g$make-combination$8469$xgWN3
               (car g$operands$8540$xgWN3)
               (g$reify-continuation$8453$xgWN3 g$continuator$8541$xgWN3)
               (cdr g$operands$8540$xgWN3))))))))
   (g$cps/generate-subproblems$8445$xgWN3
     g$cps/generate-subproblems$8710$xgWN3
     (case-lambda
       ((g$generators$8542$xgWN3 g$combiner$8543$xgWN3)
        (case-lambda
          ((g$continuator$8544$xgWN3)
           ((letrec ((g$recur$8545$xgWN3
                       (case-lambda
                         ((g$generators$8546$xgWN3 g$operands$8547$xgWN3)
                          (if (pair? g$generators$8546$xgWN3)
                            ((car g$generators$8546$xgWN3)
                             ((case-lambda
                                ((g$generators$8548$xgWN3)
                                 (g$operand-continuator$8446$xgWN3
                                   (case-lambda
                                     ((g$operand$8549$xgWN3)
                                      (g$recur$8545$xgWN3
                                        g$generators$8548$xgWN3
                                        (cons
                                          g$operand$8549$xgWN3
                                          g$operands$8547$xgWN3)))))))
                              (cdr g$generators$8546$xgWN3)))
                            (g$combiner$8543$xgWN3
                              g$operands$8547$xgWN3
                              g$continuator$8544$xgWN3))))))
              g$recur$8545$xgWN3)
            g$generators$8542$xgWN3
            '()))))))
   (g$operand-continuator$8446$xgWN3
     g$operand-continuator$8711$xgWN3
     (case-lambda
       ((g$generator$8550$xgWN3)
        (case-lambda
          ((g$if-operand$8551$xgWN3
             g$if-effect$8552$xgWN3
             g$if-conditional$8553$xgWN3
             g$if-variable$8554$xgWN3
             g$if-inline$8555$xgWN3)
           (begin
             g$if-effect$8552$xgWN3
             g$if-conditional$8553$xgWN3
             g$if-variable$8554$xgWN3
             g$if-inline$8555$xgWN3
             (g$if-operand$8551$xgWN3 g$generator$8550$xgWN3)))))))
   (g$effect-continuator$8447$xgWN3
     g$effect-continuator$8712$xgWN3
     (case-lambda
       ((g$generator$8556$xgWN3)
        (case-lambda
          ((g$if-operand$8557$xgWN3
             g$if-effect$8558$xgWN3
             g$if-conditional$8559$xgWN3
             g$if-variable$8560$xgWN3
             g$if-inline$8561$xgWN3)
           (begin
             g$if-operand$8557$xgWN3
             g$if-conditional$8559$xgWN3
             g$if-variable$8560$xgWN3
             g$if-inline$8561$xgWN3
             (g$if-effect$8558$xgWN3 g$generator$8556$xgWN3)))))))
   (g$conditional-continuator$8448$xgWN3
     g$conditional-continuator$8713$xgWN3
     (case-lambda
       ((g$generator$8562$xgWN3)
        (case-lambda
          ((g$if-operand$8563$xgWN3
             g$if-effect$8564$xgWN3
             g$if-conditional$8565$xgWN3
             g$if-variable$8566$xgWN3
             g$if-inline$8567$xgWN3)
           (begin
             g$if-operand$8563$xgWN3
             g$if-effect$8564$xgWN3
             g$if-variable$8566$xgWN3
             g$if-inline$8567$xgWN3
             (g$if-conditional$8565$xgWN3 g$generator$8562$xgWN3)))))))
   (g$variable-continuator$8449$xgWN3
     g$variable-continuator$8714$xgWN3
     (case-lambda
       ((g$variable$8568$xgWN3)
        (case-lambda
          ((g$if-operand$8569$xgWN3
             g$if-effect$8570$xgWN3
             g$if-conditional$8571$xgWN3
             g$if-variable$8572$xgWN3
             g$if-inline$8573$xgWN3)
           (begin
             g$if-operand$8569$xgWN3
             g$if-effect$8570$xgWN3
             g$if-variable$8572$xgWN3
             g$if-inline$8573$xgWN3
             (g$if-variable$8572$xgWN3 g$variable$8568$xgWN3)))))))
   (g$inline-continuator$8450$xgWN3
     g$inline-continuator$8715$xgWN3
     (case-lambda
       ((g$continuation$8574$xgWN3)
        (case-lambda
          ((g$if-operand$8575$xgWN3
             g$if-effect$8576$xgWN3
             g$if-conditional$8577$xgWN3
             g$if-variable$8578$xgWN3
             g$if-inline$8579$xgWN3)
           (begin
             g$if-operand$8575$xgWN3
             g$if-effect$8576$xgWN3
             g$if-conditional$8577$xgWN3
             g$if-variable$8578$xgWN3
             (g$if-inline$8579$xgWN3 g$continuation$8574$xgWN3)))))))
   (g$reified-continuator$8451$xgWN3
     g$reified-continuator$8716$xgWN3
     (case-lambda
       ((g$continuator$8580$xgWN3)
        (case-lambda
          ((g$if-operand$8581$xgWN3
             g$if-effect$8582$xgWN3
             g$if-conditional$8583$xgWN3
             g$if-variable$8584$xgWN3
             g$if-inline$8585$xgWN3)
           (begin
             g$if-operand$8581$xgWN3
             g$if-effect$8582$xgWN3
             g$if-conditional$8583$xgWN3
             (g$reify-continuation*$8454$xgWN3
               g$continuator$8580$xgWN3
               g$if-variable$8584$xgWN3
               g$if-inline$8585$xgWN3)))))))
   (g$continue-with-operand$8452$xgWN3
     g$continue-with-operand$8717$xgWN3
     (case-lambda
       ((g$continuator$8586$xgWN3 g$operand$8587$xgWN3)
        (g$continuator$8586$xgWN3
          (case-lambda
            ((g$generator$8588$xgWN3)
             (g$generator$8588$xgWN3 g$operand$8587$xgWN3)))
          (case-lambda ((g$generator$8589$xgWN3) (g$generator$8589$xgWN3)))
          (case-lambda
            ((g$generator$8590$xgWN3)
             (g$generator$8590$xgWN3
               (g$make-truth-test$8476$xgWN3 g$operand$8587$xgWN3))))
          (case-lambda
            ((g$continuation-variable$8591$xgWN3)
             (g$make-return$8470$xgWN3
               (g$make-reference$8462$xgWN3 g$continuation-variable$8591$xgWN3)
               (list g$operand$8587$xgWN3))))
          (case-lambda
            ((g$continuation-abstraction$8592$xgWN3)
             (g$make-return$8470$xgWN3
               g$continuation-abstraction$8592$xgWN3
               (list g$operand$8587$xgWN3))))))))
   (g$reify-continuation$8453$xgWN3
     g$reify-continuation$8718$xgWN3
     (case-lambda
       ((g$continuator$8593$xgWN3)
        (g$continuator$8593$xgWN3
          g$operand-continuation-reifier$8456$xgWN3
          g$effect-continuation-reifier$8458$xgWN3
          g$conditional-continuation-reifier$8460$xgWN3
          (case-lambda
            ((g$variable$8594$xgWN3)
             (g$make-reference$8462$xgWN3 g$variable$8594$xgWN3)))
          (case-lambda
            ((g$continuation$8595$xgWN3) g$continuation$8595$xgWN3))))))
   (g$reify-continuation*$8454$xgWN3
     g$reify-continuation*$8719$xgWN3
     (case-lambda
       ((g$continuator$8596$xgWN3
          g$if-variable$8597$xgWN3
          g$if-inline$8598$xgWN3)
        (g$continuator$8596$xgWN3
          (g$operand-continuation-reifier*$8455$xgWN3 g$if-inline$8598$xgWN3)
          (g$effect-continuation-reifier*$8457$xgWN3 g$if-inline$8598$xgWN3)
          (g$conditional-continuation-reifier*$8459$xgWN3
            g$if-inline$8598$xgWN3)
          g$if-variable$8597$xgWN3
          g$if-inline$8598$xgWN3))))
   (g$operand-continuation-reifier*$8455$xgWN3
     g$operand-continuation-reifier*$8720$xgWN3
     (case-lambda
       ((g$receiver$8599$xgWN3)
        (case-lambda
          ((g$generator$8600$xgWN3)
           (g$receiver$8599$xgWN3
             ((case-lambda
                ((g$variable$8601$xgWN3)
                 (g$make-continuation-abstraction$8465$xgWN3
                   (list g$variable$8601$xgWN3)
                   (g$generator$8600$xgWN3
                     (g$make-reference$8462$xgWN3 g$variable$8601$xgWN3)))))
              (g$generate-variable$8477$xgWN3 'V))))))))
   (g$operand-continuation-reifier$8456$xgWN3
     g$operand-continuation-reifier$8721$xgWN3
     (g$operand-continuation-reifier*$8455$xgWN3 values))
   (g$effect-continuation-reifier*$8457$xgWN3
     g$effect-continuation-reifier*$8722$xgWN3
     (case-lambda
       ((g$receiver$8602$xgWN3)
        (case-lambda
          ((g$generator$8603$xgWN3)
           (g$receiver$8602$xgWN3
             ((case-lambda
                ((g$variable$8604$xgWN3)
                 (g$make-continuation-abstraction$8465$xgWN3
                   g$variable$8604$xgWN3
                   (g$generator$8603$xgWN3))))
              (g$generate-variable$8477$xgWN3 'IGNORE))))))))
   (g$effect-continuation-reifier$8458$xgWN3
     g$effect-continuation-reifier$8723$xgWN3
     (g$effect-continuation-reifier*$8457$xgWN3 values))
   (g$conditional-continuation-reifier*$8459$xgWN3
     g$conditional-continuation-reifier*$8724$xgWN3
     (case-lambda
       ((g$receiver$8605$xgWN3)
        (case-lambda
          ((g$generator$8606$xgWN3)
           (g$receiver$8605$xgWN3
             ((case-lambda
                ((g$variable$8607$xgWN3)
                 (g$make-continuation-abstraction$8465$xgWN3
                   (list g$variable$8607$xgWN3)
                   (g$generator$8606$xgWN3
                     (g$make-truth-test$8476$xgWN3
                       (g$make-reference$8462$xgWN3 g$variable$8607$xgWN3))))))
              (g$generate-variable$8477$xgWN3 'T))))))))
   (g$conditional-continuation-reifier$8460$xgWN3
     g$conditional-continuation-reifier$8725$xgWN3
     (g$conditional-continuation-reifier*$8459$xgWN3 values))
   (g$make-literal$8461$xgWN3
     g$make-literal$8726$xgWN3
     (case-lambda ((g$datum$8608$xgWN3) (list 'quote g$datum$8608$xgWN3))))
   (g$make-reference$8462$xgWN3
     g$make-reference$8727$xgWN3
     (case-lambda ((g$variable$8609$xgWN3) g$variable$8609$xgWN3)))
   (g$make-user-abstraction$8463$xgWN3
     g$make-user-abstraction$8728$xgWN3
     (case-lambda
       ((g$bvl$8610$xgWN3 g$body-constructor$8611$xgWN3)
        ((case-lambda
           ((g$continuation$8612$xgWN3)
            (list
              'case-lambda
              (list
                (cons g$continuation$8612$xgWN3 g$bvl$8610$xgWN3)
                (g$body-constructor$8611$xgWN3 g$continuation$8612$xgWN3)))))
         (g$generate-variable$8477$xgWN3 'C)))))
   (g$make-user-abstractions$8464$xgWN3
     g$make-user-abstractions$8729$xgWN3
     (case-lambda
       ((g$bvls$8613$xgWN3 g$body-constructors$8614$xgWN3)
        ((case-lambda
           ((g$continuation$8615$xgWN3)
            (cons
              'case-lambda
              (g$map$6085$xgWN3
                (case-lambda
                  ((g$bvl$8616$xgWN3 g$body-constructor$8617$xgWN3)
                   (list
                     (cons g$continuation$8615$xgWN3 g$bvl$8616$xgWN3)
                     (g$body-constructor$8617$xgWN3
                       g$continuation$8615$xgWN3))))
                g$bvls$8613$xgWN3
                g$body-constructors$8614$xgWN3))))
         (g$generate-variable$8477$xgWN3 'C)))))
   (g$make-continuation-abstraction$8465$xgWN3
     g$make-continuation-abstraction$8730$xgWN3
     (case-lambda
       ((g$bvl$8618$xgWN3 g$body$8619$xgWN3)
        (list 'case-lambda (list g$bvl$8618$xgWN3 g$body$8619$xgWN3)))))
   (g$make-recursive-bind$8466$xgWN3
     g$make-recursive-bind$8731$xgWN3
     (case-lambda
       ((g$variables$8620$xgWN3 g$constructors$8621$xgWN3 g$body$8622$xgWN3)
        (list
          'letrec
          (g$map$6085$xgWN3
            (case-lambda
              ((g$variable$8623$xgWN3 g$constructor$8624$xgWN3)
               (list
                 g$variable$8623$xgWN3
                 (list
                   (g$make-user-abstraction$8463$xgWN3
                     '()
                     g$constructor$8624$xgWN3)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$8623$xgWN3))))))
            g$variables$8620$xgWN3
            g$constructors$8621$xgWN3)
          g$body$8622$xgWN3))))
   (g$make-recursive*-bind$8467$xgWN3
     g$make-recursive*-bind$8732$xgWN3
     (case-lambda
       ((g$variables$8625$xgWN3 g$constructors$8626$xgWN3 g$body$8627$xgWN3)
        (list
          'letrec*
          (g$map$6085$xgWN3
            (case-lambda
              ((g$variable$8628$xgWN3 g$constructor$8629$xgWN3)
               (list
                 g$variable$8628$xgWN3
                 (list
                   (g$make-user-abstraction$8463$xgWN3
                     '()
                     g$constructor$8629$xgWN3)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$8628$xgWN3))))))
            g$variables$8625$xgWN3
            g$constructors$8626$xgWN3)
          g$body$8627$xgWN3))))
   (g$make-recursive*-library-bind$8468$xgWN3
     g$make-recursive*-library-bind$8733$xgWN3
     (case-lambda
       ((g$name$8630$xgWN3
          g$variables$8631$xgWN3
          g$variables*$8632$xgWN3
          g$constructors$8633$xgWN3
          g$body$8634$xgWN3)
        (list
          'library-letrec*
          g$name$8630$xgWN3
          (g$map$6085$xgWN3
            (case-lambda
              ((g$variable$8635$xgWN3
                 g$variable*$8636$xgWN3
                 g$constructor$8637$xgWN3)
               (list
                 g$variable$8635$xgWN3
                 g$variable*$8636$xgWN3
                 (list
                   (g$make-user-abstraction$8463$xgWN3
                     '()
                     g$constructor$8637$xgWN3)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$8635$xgWN3))))))
            g$variables$8631$xgWN3
            g$variables*$8632$xgWN3
            g$constructors$8633$xgWN3)
          g$body$8634$xgWN3))))
   (g$make-combination$8469$xgWN3
     g$make-combination$8734$xgWN3
     (case-lambda
       ((g$operator$8638$xgWN3 g$continuation$8639$xgWN3 g$operands$8640$xgWN3)
        (cons
          g$operator$8638$xgWN3
          (cons g$continuation$8639$xgWN3 g$operands$8640$xgWN3)))))
   (g$make-return$8470$xgWN3
     g$make-return$8735$xgWN3
     (case-lambda
       ((g$continuation$8641$xgWN3 g$operands$8642$xgWN3)
        (cons g$continuation$8641$xgWN3 g$operands$8642$xgWN3))))
   (g$make-conditional$8471$xgWN3
     g$make-conditional$8736$xgWN3
     (case-lambda
       ((g$condition$8643$xgWN3
          g$consequent$8644$xgWN3
          g$alternative$8645$xgWN3)
        (list
          'if
          g$condition$8643$xgWN3
          g$consequent$8644$xgWN3
          g$alternative$8645$xgWN3))))
   (g$make-conditional-join$8472$xgWN3
     g$make-conditional-join$8737$xgWN3
     (case-lambda
       ((g$continuation$8646$xgWN3 g$constructor$8647$xgWN3)
        ((case-lambda
           ((g$variable$8648$xgWN3)
            (g$make-let$8473$xgWN3
              (list g$variable$8648$xgWN3)
              (list g$continuation$8646$xgWN3)
              (g$constructor$8647$xgWN3 g$variable$8648$xgWN3))))
         (g$generate-variable$8477$xgWN3 'J)))))
   (g$make-let$8473$xgWN3
     g$make-let$8738$xgWN3
     (case-lambda
       ((g$variables$8649$xgWN3 g$expressions$8650$xgWN3 g$body$8651$xgWN3)
        (cons
          (list 'case-lambda (list g$variables$8649$xgWN3 g$body$8651$xgWN3))
          g$expressions$8650$xgWN3))))
   (g$make-assignment$8474$xgWN3
     g$make-assignment$8739$xgWN3
     (case-lambda
       ((g$location$8652$xgWN3 g$operand$8653$xgWN3 g$expression$8654$xgWN3)
        (list
          'begin
          (list 'set! g$location$8652$xgWN3 g$operand$8653$xgWN3)
          g$expression$8654$xgWN3))))
   (g$make-declaration$8475$xgWN3
     g$make-declaration$8740$xgWN3
     (case-lambda
       ((g$location$8655$xgWN3 g$operand$8656$xgWN3 g$expression$8657$xgWN3)
        (list
          'begin
          (list 'define g$location$8655$xgWN3 g$operand$8656$xgWN3)
          g$expression$8657$xgWN3))))
   (g$make-truth-test$8476$xgWN3
     g$make-truth-test$8741$xgWN3
     (case-lambda ((g$operand$8658$xgWN3) g$operand$8658$xgWN3)))
   (g$generate-variable$8477$xgWN3
     g$generate-variable$8742$xgWN3
     (case-lambda ((g$name$8659$xgWN3) (gensym g$name$8659$xgWN3))))
   (g$parse$8478$xgWN3
     g$parse$8743$xgWN3
     (case-lambda
       ((g$x$8660$xgWN3)
        (if (pair? g$x$8660$xgWN3)
          ((case-lambda
             ((g$t$8661$xgWN3)
              (if (g$memv$6078$xgWN3 g$t$8661$xgWN3 '(quote))
                (g$cps/generate-literal$8433$xgWN3
                  (g$cadr$6765$xgWN3 g$x$8660$xgWN3))
                (if (g$memv$6078$xgWN3 g$t$8661$xgWN3 '(if))
                  (g$cps/generate-conditional$8437$xgWN3
                    (g$parse$8478$xgWN3 (g$cadr$6765$xgWN3 g$x$8660$xgWN3))
                    (g$parse$8478$xgWN3 (g$caddr$6771$xgWN3 g$x$8660$xgWN3))
                    (g$parse$8478$xgWN3 (g$cadddr$6783$xgWN3 g$x$8660$xgWN3)))
                  (if (g$memv$6078$xgWN3 g$t$8661$xgWN3 '(case-lambda))
                    ((case-lambda
                       ((g$d$8662$xgWN3)
                        (g$cps/generate-abstractions$8435$xgWN3
                          (g$map$6085$xgWN3 car g$d$8662$xgWN3)
                          (g$map$6085$xgWN3
                            (case-lambda
                              ((g$e$8663$xgWN3)
                               (g$cps/generate-sequence$8441$xgWN3
                                 (g$map$6085$xgWN3
                                   g$parse$8478$xgWN3
                                   (cdr g$e$8663$xgWN3)))))
                            g$d$8662$xgWN3))))
                     (cdr g$x$8660$xgWN3))
                    (if (g$memv$6078$xgWN3 g$t$8661$xgWN3 '(letrec))
                      ((case-lambda
                         ((g$bindings$8664$xgWN3 g$body*$8665$xgWN3)
                          ((case-lambda
                             ((g$lhs*$8666$xgWN3 g$rhs*$8667$xgWN3)
                              ((case-lambda
                                 ((g$t*$8668$xgWN3 g$tmps$8669$xgWN3)
                                  ((case-lambda
                                     ((g$s*$8670$xgWN3)
                                      (g$parse$8478$xgWN3
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$8666$xgWN3
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$8668$xgWN3
                                                    (append
                                                      g$s*$8670$xgWN3
                                                      g$body*$8665$xgWN3)))
                                                g$rhs*$8667$xgWN3)))
                                          g$tmps$8669$xgWN3))))
                                   (g$map$6085$xgWN3
                                     (case-lambda
                                       ((g$i$8671$xgWN3 g$t$8672$xgWN3)
                                        (list
                                          'set!
                                          g$i$8671$xgWN3
                                          g$t$8672$xgWN3)))
                                     g$lhs*$8666$xgWN3
                                     g$t*$8668$xgWN3))))
                               (g$map$6085$xgWN3 gensym g$lhs*$8666$xgWN3)
                               (g$map$6085$xgWN3
                                 (case-lambda ((g$x$8673$xgWN3) 'uninitialized))
                                 g$lhs*$8666$xgWN3))))
                           (g$map$6085$xgWN3 car g$bindings$8664$xgWN3)
                           (g$map$6085$xgWN3
                             g$cadr$6765$xgWN3
                             g$bindings$8664$xgWN3))))
                       (g$cadr$6765$xgWN3 g$x$8660$xgWN3)
                       (g$cddr$6767$xgWN3 g$x$8660$xgWN3))
                      (if (g$memv$6078$xgWN3 g$t$8661$xgWN3 '(letrec*))
                        ((case-lambda
                           ((g$bindings$8674$xgWN3 g$body*$8675$xgWN3)
                            ((case-lambda
                               ((g$lhs*$8676$xgWN3 g$rhs*$8677$xgWN3)
                                (g$cps/generate-recursive*-bind$8439$xgWN3
                                  g$lhs*$8676$xgWN3
                                  (g$map$6085$xgWN3
                                    g$parse$8478$xgWN3
                                    g$rhs*$8677$xgWN3)
                                  (g$parse$8478$xgWN3
                                    (cons 'begin g$body*$8675$xgWN3)))))
                             (g$map$6085$xgWN3 car g$bindings$8674$xgWN3)
                             (g$map$6085$xgWN3
                               g$cadr$6765$xgWN3
                               g$bindings$8674$xgWN3))))
                         (g$cadr$6765$xgWN3 g$x$8660$xgWN3)
                         (g$cddr$6767$xgWN3 g$x$8660$xgWN3))
                        (if (g$memv$6078$xgWN3
                              g$t$8661$xgWN3
                              '(library-letrec*))
                          ((case-lambda
                             ((g$name$8678$xgWN3 g$x$8679$xgWN3)
                              ((case-lambda
                                 ((g$bindings$8680$xgWN3 g$body*$8681$xgWN3)
                                  ((case-lambda
                                     ((g$lhs*$8682$xgWN3
                                        g$lhs**$8683$xgWN3
                                        g$rhs*$8684$xgWN3)
                                      (g$cps/generate-recursive*-library-bind$8440$xgWN3
                                        g$name$8678$xgWN3
                                        g$lhs*$8682$xgWN3
                                        g$lhs**$8683$xgWN3
                                        (g$map$6085$xgWN3
                                          g$parse$8478$xgWN3
                                          g$rhs*$8684$xgWN3)
                                        (g$parse$8478$xgWN3
                                          (cons 'begin g$body*$8681$xgWN3)))))
                                   (g$map$6085$xgWN3 car g$bindings$8680$xgWN3)
                                   (g$map$6085$xgWN3
                                     g$cadr$6765$xgWN3
                                     g$bindings$8680$xgWN3)
                                   (g$map$6085$xgWN3
                                     g$caddr$6771$xgWN3
                                     g$bindings$8680$xgWN3))))
                               (g$cadr$6765$xgWN3 g$x$8679$xgWN3)
                               (g$cddr$6767$xgWN3 g$x$8679$xgWN3))))
                           (g$cadr$6765$xgWN3 g$x$8660$xgWN3)
                           (cdr g$x$8660$xgWN3))
                          (if (g$memv$6078$xgWN3 g$t$8661$xgWN3 '(begin))
                            (g$cps/generate-sequence$8441$xgWN3
                              (g$map$6085$xgWN3
                                g$parse$8478$xgWN3
                                (cdr g$x$8660$xgWN3)))
                            (if (g$memv$6078$xgWN3 g$t$8661$xgWN3 '(set!))
                              (g$cps/generate-assignment$8442$xgWN3
                                (g$cadr$6765$xgWN3 g$x$8660$xgWN3)
                                (g$parse$8478$xgWN3
                                  (g$caddr$6771$xgWN3 g$x$8660$xgWN3)))
                              (if (g$memv$6078$xgWN3 g$t$8661$xgWN3 '(define))
                                (g$cps/generate-declaration$8443$xgWN3
                                  (g$cadr$6765$xgWN3 g$x$8660$xgWN3)
                                  (g$parse$8478$xgWN3
                                    (g$caddr$6771$xgWN3 g$x$8660$xgWN3)))
                                (if (list? g$x$8660$xgWN3)
                                  (g$cps/generate-combination$8444$xgWN3
                                    (g$parse$8478$xgWN3 (car g$x$8660$xgWN3))
                                    (g$map$6085$xgWN3
                                      g$parse$8478$xgWN3
                                      (cdr g$x$8660$xgWN3)))
                                  (error
                                    'rewrite
                                    '"invalid form ~s ~s"
                                    g$x$8660$xgWN3
                                    (list? g$x$8660$xgWN3))))))))))))))
           (car g$x$8660$xgWN3))
          (if (g$symbol?$6756$xgWN3 g$x$8660$xgWN3)
            (g$cps/generate-reference$8432$xgWN3 g$x$8660$xgWN3)
            (g$cps/generate-literal$8433$xgWN3 g$x$8660$xgWN3))))))
   (g$starts-with?$8479$xgWN3
     g$starts-with?$8744$xgWN3
     (case-lambda
       ((g$str$8685$xgWN3 g$sub$8686$xgWN3)
        (clr-call-internal
          'system.string
          'startswith
          g$str$8685$xgWN3
          g$sub$8686$xgWN3))))
   (g$ends-with?$8480$xgWN3
     g$ends-with?$8745$xgWN3
     (case-lambda
       ((g$str$8687$xgWN3 g$sub$8688$xgWN3)
        (clr-call-internal
          'system.string
          'endswith
          g$str$8687$xgWN3
          g$sub$8688$xgWN3))))
   (g$clr-generator?$8481$xgWN3
     g$clr-generator?$8746$xgWN3
     (case-lambda
       ((g$o$8689$xgWN3)
        (if (g$symbol?$6756$xgWN3 g$o$8689$xgWN3)
          (begin
            '#f
            ((case-lambda
               ((g$o$8690$xgWN3)
                (if (g$starts-with?$8479$xgWN3 g$o$8690$xgWN3 '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$8480$xgWN3 g$o$8690$xgWN3 '"-internal"))
                  '#f)))
             (symbol->string g$o$8689$xgWN3)))
          '#f))))
   (g$fix-primitives$8482$xgWN3
     g$fix-primitives$8747$xgWN3
     (case-lambda
       ((g$e$8691$xgWN3)
        (if (if (pair? g$e$8691$xgWN3) (begin '#f (list? g$e$8691$xgWN3)) '#f)
          ((case-lambda
             ((g$o$8692$xgWN3)
              (if (eq? g$o$8692$xgWN3 'quote)
                g$e$8691$xgWN3
                (if (begin '#f (g$clr-generator?$8481$xgWN3 g$o$8692$xgWN3))
                  (if (pair? (cdr g$e$8691$xgWN3))
                    (list
                      (g$fix-primitives$8482$xgWN3
                        (g$cadr$6765$xgWN3 g$e$8691$xgWN3))
                      (cons
                        g$o$8692$xgWN3
                        (g$map$6085$xgWN3
                          g$fix-primitives$8482$xgWN3
                          (g$cddr$6767$xgWN3 g$e$8691$xgWN3))))
                    g$e$8691$xgWN3)
                  (cons
                    (g$fix-primitives$8482$xgWN3 g$o$8692$xgWN3)
                    (g$map$6085$xgWN3
                      g$fix-primitives$8482$xgWN3
                      (cdr g$e$8691$xgWN3)))))))
           (car g$e$8691$xgWN3))
          g$e$8691$xgWN3))))
   (g$parse->cps$8483$xgWN3
     g$parse->cps$8748$xgWN3
     (case-lambda
       ((g$e$8693$xgWN3 g$var$8694$xgWN3)
        ((g$parse$8478$xgWN3 g$e$8693$xgWN3)
         (g$variable-continuator$8449$xgWN3 g$var$8694$xgWN3)))))
   (g$convert->cps$8484$xgWN3
     g$convert->cps$8749$xgWN3
     (case-lambda
       ((g$e$8695$xgWN3 g$var$8696$xgWN3)
        (g$fix-primitives$8482$xgWN3
          (g$parse->cps$8483$xgWN3 g$e$8695$xgWN3 g$var$8696$xgWN3))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$8750$xgWN3
     g$library-version-mismatch-warning$8907$xgWN3
     (case-lambda
       ((g$name$8879$xgWN3 g$depname$8880$xgWN3 g$filename$8881$xgWN3)
        (g$fprintf$8426$xgWN3
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$8879$xgWN3
          g$depname$8880$xgWN3
          g$filename$8881$xgWN3))))
   (g$file-locator-resolution-error$8751$xgWN3
     g$file-locator-resolution-error$8908$xgWN3
     (case-lambda
       ((g$libname$8882$xgWN3 g$failed-list$8883$xgWN3)
        (letrec* ((g$7086$8884$xgWN3
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$7399$xgWN3
                      'g$7089$xgWN3
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$7088$8885$xgWN3 '#f)
                  (g$7087$8886$xgWN3
                    (make-record-constructor-descriptor
                      g$7086$8884$xgWN3
                      g$&condition-rcd$7400$xgWN3
                      g$7088$8885$xgWN3))
                  (g$7085$8889$xgWN3 (record-predicate g$7086$8884$xgWN3))
                  (g$make-library-resolution-condition$8890$xgWN3
                    (record-constructor g$7087$8886$xgWN3))
                  (g$7083$8891$xgWN3 (record-accessor g$7086$8884$xgWN3 '0))
                  (g$7084$8892$xgWN3 (record-accessor g$7086$8884$xgWN3 '1))
                  (g$library-resolution-condition?$8893$xgWN3
                    (condition-predicate g$7086$8884$xgWN3))
                  (g$condition-library$8894$xgWN3
                    (condition-accessor g$7086$8884$xgWN3 g$7083$8891$xgWN3))
                  (g$condition-files$8895$xgWN3
                    (condition-accessor g$7086$8884$xgWN3 g$7084$8892$xgWN3)))
          (raise
            (condition
              (g$make-error$7431$xgWN3)
              (g$make-who-condition$7465$xgWN3 'expander)
              (g$make-message-condition$7405$xgWN3
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$8890$xgWN3
                g$libname$8882$xgWN3
                g$failed-list$8883$xgWN3)))))))
   (g$read-library-source-file$8752$xgWN3
     g$read-library-source-file$8909$xgWN3
     (case-lambda
       ((g$file-name$8896$xgWN3)
        (g$with-input-from-file$8249$xgWN3
          g$file-name$8896$xgWN3
          read-annotated))))
   (g$make-parameter$8753$xgWN3
     g$make-parameter$8910$xgWN3
     (case-lambda
       ((g$x$8897$xgWN3)
        (g$make-parameter$8753$xgWN3
          g$x$8897$xgWN3
          (case-lambda ((g$x$8898$xgWN3) g$x$8898$xgWN3))))
       ((g$x$8899$xgWN3 g$fender$8900$xgWN3)
        (begin
          (if (not (g$procedure?$6758$xgWN3 g$fender$8900$xgWN3))
            (g$assertion-error$13698$xgWN3
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$8901$xgWN3)
              (case-lambda
                (() g$x$8901$xgWN3)
                ((g$v$8902$xgWN3)
                 (set! g$x$8901$xgWN3 (g$fender$8900$xgWN3 g$v$8902$xgWN3))))))
           (g$fender$8900$xgWN3 g$x$8899$xgWN3))))))
   (g$file-options-constructor$8875$xgWN3
     g$file-options-constructor$8911$xgWN3
     (g$make-parameter$8753$xgWN3 '#f))
   (g$file-options-spec$8876$xgWN3
     g$file-options-spec$8912$xgWN3
     (case-lambda
       ((g$x$8903$xgWN3)
        ((g$file-options-constructor$8875$xgWN3) g$x$8903$xgWN3))))
   (g$set-label-binding!$8877$xgWN3
     g$set-label-binding!$8913$xgWN3
     (case-lambda
       ((g$label$8904$xgWN3 g$binding$8905$xgWN3)
        (set-symbol-value! g$label$8904$xgWN3 g$binding$8905$xgWN3))))
   (g$label-binding$8878$xgWN3
     g$label-binding$8914$xgWN3
     (case-lambda
       ((g$label$8906$xgWN3)
        (if (symbol-bound? g$label$8906$xgWN3)
          (begin '#f (symbol-value g$label$8906$xgWN3))
          '#f)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$9110$xgWN3
     g$current-primitive-locations$9155$xgWN3
     (g$make-parameter$8910$xgWN3
       (case-lambda ((g$x$9116$xgWN3) '#f))
       (case-lambda
         ((g$p$9117$xgWN3)
          (begin
            (if (not (g$procedure?$6758$xgWN3 g$p$9117$xgWN3))
              (g$assertion-error$13698$xgWN3
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$9117$xgWN3)))))
   (g$mutable?$9111$xgWN3
     g$mutable?$9156$xgWN3
     (case-lambda
       ((g$x$9118$xgWN3)
        (letrec* ((g$simple?$9119$xgWN3
                    (case-lambda
                      ((g$x$9120$xgWN3)
                       ((case-lambda
                          ((g$t$9121$xgWN3)
                           (if g$t$9121$xgWN3
                             g$t$9121$xgWN3
                             ((case-lambda
                                ((g$t$9122$xgWN3)
                                 (if g$t$9122$xgWN3
                                   g$t$9122$xgWN3
                                   ((case-lambda
                                      ((g$t$9123$xgWN3)
                                       (if g$t$9123$xgWN3
                                         g$t$9123$xgWN3
                                         ((case-lambda
                                            ((g$t$9124$xgWN3)
                                             (if g$t$9124$xgWN3
                                               g$t$9124$xgWN3
                                               ((case-lambda
                                                  ((g$t$9125$xgWN3)
                                                   (if g$t$9125$xgWN3
                                                     g$t$9125$xgWN3
                                                     ((case-lambda
                                                        ((g$t$9126$xgWN3)
                                                         (if g$t$9126$xgWN3
                                                           g$t$9126$xgWN3
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$9120$xgWN3)))))
                                                      (g$bytevector?$6755$xgWN3
                                                        g$x$9120$xgWN3)))))
                                                (string? g$x$9120$xgWN3)))))
                                          (g$boolean?$6757$xgWN3
                                            g$x$9120$xgWN3)))))
                                    (g$symbol?$6756$xgWN3 g$x$9120$xgWN3)))))
                              (g$char?$6753$xgWN3 g$x$9120$xgWN3)))))
                        (null? g$x$9120$xgWN3))))))
          (not (g$simple?$9119$xgWN3 g$x$9118$xgWN3))))))
   (g$rewriter$9112$xgWN3
     g$rewriter$9157$xgWN3
     (case-lambda
       ((g$quote-hack?$9127$xgWN3)
        (letrec* ((g$f$9128$xgWN3
                    (case-lambda
                      ((g$x$9129$xgWN3)
                       (if (pair? g$x$9129$xgWN3)
                         ((case-lambda
                            ((g$t$9130$xgWN3)
                             (if (g$memv$6078$xgWN3 g$t$9130$xgWN3 '(quote))
                               (if (if g$quote-hack?$9127$xgWN3
                                     (begin
                                       '#f
                                       (g$mutable?$9111$xgWN3
                                         (g$cadr$6765$xgWN3 g$x$9129$xgWN3)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$9131$xgWN3)
                                     (begin
                                       (set-symbol-value!
                                         g$g$9131$xgWN3
                                         (g$cadr$6765$xgWN3 g$x$9129$xgWN3))
                                       g$g$9131$xgWN3)))
                                  (gensym 'weak-temp))
                                 g$x$9129$xgWN3)
                               (if (g$memv$6078$xgWN3
                                     g$t$9130$xgWN3
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (g$map$6085$xgWN3
                                     (case-lambda
                                       ((g$x$9132$xgWN3)
                                        (cons
                                          (car g$x$9132$xgWN3)
                                          (g$map$6085$xgWN3
                                            g$f$9128$xgWN3
                                            (cdr g$x$9132$xgWN3)))))
                                     (cdr g$x$9129$xgWN3)))
                                 (if (g$memv$6078$xgWN3
                                       g$t$9130$xgWN3
                                       '(lambda))
                                   (g$cons*$6087$xgWN3
                                     'lambda
                                     (g$cadr$6765$xgWN3 g$x$9129$xgWN3)
                                     (g$map$6085$xgWN3
                                       g$f$9128$xgWN3
                                       (g$cddr$6767$xgWN3 g$x$9129$xgWN3)))
                                   (if (g$memv$6078$xgWN3
                                         g$t$9130$xgWN3
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$9133$xgWN3
                                           g$body*$9134$xgWN3)
                                         ((case-lambda
                                            ((g$lhs*$9135$xgWN3
                                               g$rhs*$9136$xgWN3)
                                             (g$cons*$6087$xgWN3
                                               'letrec
                                               (g$map$6085$xgWN3
                                                 list
                                                 g$lhs*$9135$xgWN3
                                                 (g$map$6085$xgWN3
                                                   g$f$9128$xgWN3
                                                   g$rhs*$9136$xgWN3))
                                               (g$map$6085$xgWN3
                                                 g$f$9128$xgWN3
                                                 g$body*$9134$xgWN3))))
                                          (g$map$6085$xgWN3
                                            car
                                            g$bindings$9133$xgWN3)
                                          (g$map$6085$xgWN3
                                            g$cadr$6765$xgWN3
                                            g$bindings$9133$xgWN3))))
                                      (g$cadr$6765$xgWN3 g$x$9129$xgWN3)
                                      (g$cddr$6767$xgWN3 g$x$9129$xgWN3))
                                     (if (g$memv$6078$xgWN3
                                           g$t$9130$xgWN3
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$9137$xgWN3
                                             g$body*$9138$xgWN3)
                                           ((case-lambda
                                              ((g$lhs*$9139$xgWN3
                                                 g$rhs*$9140$xgWN3)
                                               (g$cons*$6087$xgWN3
                                                 'letrec*
                                                 (g$map$6085$xgWN3
                                                   list
                                                   g$lhs*$9139$xgWN3
                                                   (g$map$6085$xgWN3
                                                     g$f$9128$xgWN3
                                                     g$rhs*$9140$xgWN3))
                                                 (g$map$6085$xgWN3
                                                   g$f$9128$xgWN3
                                                   g$body*$9138$xgWN3))))
                                            (g$map$6085$xgWN3
                                              car
                                              g$bindings$9137$xgWN3)
                                            (g$map$6085$xgWN3
                                              g$cadr$6765$xgWN3
                                              g$bindings$9137$xgWN3))))
                                        (g$cadr$6765$xgWN3 g$x$9129$xgWN3)
                                        (g$cddr$6767$xgWN3 g$x$9129$xgWN3))
                                       (if (g$memv$6078$xgWN3
                                             g$t$9130$xgWN3
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$9141$xgWN3 g$x$9142$xgWN3)
                                             ((case-lambda
                                                ((g$bindings$9143$xgWN3
                                                   g$body*$9144$xgWN3)
                                                 ((case-lambda
                                                    ((g$lhs*$9145$xgWN3
                                                       g$lhs**$9146$xgWN3
                                                       g$rhs*$9147$xgWN3)
                                                     (g$cons*$6087$xgWN3
                                                       'library-letrec*
                                                       g$name$9141$xgWN3
                                                       (g$map$6085$xgWN3
                                                         list
                                                         g$lhs*$9145$xgWN3
                                                         g$lhs**$9146$xgWN3
                                                         (g$map$6085$xgWN3
                                                           g$f$9128$xgWN3
                                                           g$rhs*$9147$xgWN3))
                                                       (g$map$6085$xgWN3
                                                         g$f$9128$xgWN3
                                                         g$body*$9144$xgWN3))))
                                                  (g$map$6085$xgWN3
                                                    car
                                                    g$bindings$9143$xgWN3)
                                                  (g$map$6085$xgWN3
                                                    g$cadr$6765$xgWN3
                                                    g$bindings$9143$xgWN3)
                                                  (g$map$6085$xgWN3
                                                    g$caddr$6771$xgWN3
                                                    g$bindings$9143$xgWN3))))
                                              (g$cadr$6765$xgWN3 g$x$9142$xgWN3)
                                              (g$cddr$6767$xgWN3
                                                g$x$9142$xgWN3))))
                                          (g$cadr$6765$xgWN3 g$x$9129$xgWN3)
                                          (cdr g$x$9129$xgWN3))
                                         (if (g$memv$6078$xgWN3
                                               g$t$9130$xgWN3
                                               '(begin))
                                           (cons
                                             'begin
                                             (g$map$6085$xgWN3
                                               g$f$9128$xgWN3
                                               (cdr g$x$9129$xgWN3)))
                                           (if (g$memv$6078$xgWN3
                                                 g$t$9130$xgWN3
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$6765$xgWN3
                                                 g$x$9129$xgWN3)
                                               (g$f$9128$xgWN3
                                                 (g$caddr$6771$xgWN3
                                                   g$x$9129$xgWN3)))
                                             (if (g$memv$6078$xgWN3
                                                   g$t$9130$xgWN3
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$9148$xgWN3)
                                                   ((case-lambda
                                                      ((g$t$9149$xgWN3)
                                                       (if g$t$9149$xgWN3
                                                         ((case-lambda
                                                            ((g$loc$9150$xgWN3)
                                                             g$loc$9150$xgWN3))
                                                          g$t$9149$xgWN3)
                                                         g$op$9148$xgWN3)))
                                                    ((g$current-primitive-locations$9110$xgWN3)
                                                     g$op$9148$xgWN3))))
                                                (g$cadr$6765$xgWN3
                                                  g$x$9129$xgWN3))
                                               (if (g$memv$6078$xgWN3
                                                     g$t$9130$xgWN3
                                                     '(define))
                                                 g$x$9129$xgWN3
                                                 (if (list? g$x$9129$xgWN3)
                                                   (g$map$6085$xgWN3
                                                     g$f$9128$xgWN3
                                                     g$x$9129$xgWN3)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$9129$xgWN3
                                                     (list?
                                                       g$x$9129$xgWN3)))))))))))))))
                          (car g$x$9129$xgWN3))
                         g$x$9129$xgWN3)))))
          g$f$9128$xgWN3))))
   (g$expanded->core$9113$xgWN3
     g$expanded->core$9158$xgWN3
     (case-lambda
       ((g$x$9151$xgWN3) ((g$rewriter$9112$xgWN3 '#t) g$x$9151$xgWN3))))
   (g$compile-core-expr$9114$xgWN3
     g$compile-core-expr$9159$xgWN3
     (case-lambda
       ((g$x$9152$xgWN3) ((g$rewriter$9112$xgWN3 '#f) g$x$9152$xgWN3))))
   (g$compile-core-expr-to-port$9115$xgWN3
     g$compile-core-expr-to-port$9160$xgWN3
     (case-lambda
       ((g$x$9153$xgWN3 g$p$9154$xgWN3)
        (g$pretty-print$9109$xgWN3
          ((g$rewriter$9112$xgWN3 '#f) g$x$9153$xgWN3)
          g$p$9154$xgWN3)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$9161$xgWN3
     g$make-collection$9369$xgWN3
     (case-lambda
       (()
        ((case-lambda
           ((g$set$9224$xgWN3)
            (letrec* ((g$set-cons$9225$xgWN3
                        (case-lambda
                          ((g$x$9229$xgWN3 g$ls$9230$xgWN3)
                           (if (g$memq$6077$xgWN3
                                 g$x$9229$xgWN3
                                 g$ls$9230$xgWN3)
                             g$ls$9230$xgWN3
                             (cons g$x$9229$xgWN3 g$ls$9230$xgWN3))))))
              (case-lambda
                (() g$set$9224$xgWN3)
                ((g$x$9226$xgWN3)
                 (set! g$set$9224$xgWN3
                   (g$set-cons$9225$xgWN3 g$x$9226$xgWN3 g$set$9224$xgWN3)))
                ((g$x$9227$xgWN3 g$del?$9228$xgWN3)
                 (if g$del?$9228$xgWN3
                   (set! g$set$9224$xgWN3
                     (g$remq$6092$xgWN3 g$x$9227$xgWN3 g$set$9224$xgWN3))
                   (set! g$set$9224$xgWN3
                     (g$set-cons$9225$xgWN3
                       g$x$9227$xgWN3
                       g$set$9224$xgWN3))))))))
         '()))))
   (g$current-library-collection$9162$xgWN3
     g$current-library-collection$9370$xgWN3
     (g$make-parameter$8910$xgWN3
       (g$make-collection$9161$xgWN3)
       (case-lambda
         ((g$x$9231$xgWN3)
          (begin
            (if (not (g$procedure?$6758$xgWN3 g$x$9231$xgWN3))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$9231$xgWN3)
              (void))
            g$x$9231$xgWN3)))))
   (g$7354$9163$xgWN3
     g$7354$9371$xgWN3
     (make-record-type-descriptor
       'library
       '#f
       'g$7357$xgWN3
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7356$9164$xgWN3 g$7356$9372$xgWN3 '#f)
   (g$7355$9165$xgWN3
     g$7355$9373$xgWN3
     (make-record-constructor-descriptor
       g$7354$9163$xgWN3
       '#f
       g$7356$9164$xgWN3))
   (g$library?$9168$xgWN3
     g$library?$9374$xgWN3
     (record-predicate g$7354$9163$xgWN3))
   (g$make-library$9169$xgWN3
     g$make-library$9375$xgWN3
     (record-constructor g$7355$9165$xgWN3))
   (g$library-id$9170$xgWN3
     g$library-id$9376$xgWN3
     (record-accessor g$7354$9163$xgWN3 '0))
   (g$library-name$9171$xgWN3
     g$library-name$9377$xgWN3
     (record-accessor g$7354$9163$xgWN3 '1))
   (g$library-version$9172$xgWN3
     g$library-version$9378$xgWN3
     (record-accessor g$7354$9163$xgWN3 '2))
   (g$library-imp*$9173$xgWN3
     g$library-imp*$9379$xgWN3
     (record-accessor g$7354$9163$xgWN3 '3))
   (g$library-vis*$9174$xgWN3
     g$library-vis*$9380$xgWN3
     (record-accessor g$7354$9163$xgWN3 '4))
   (g$library-inv*$9175$xgWN3
     g$library-inv*$9381$xgWN3
     (record-accessor g$7354$9163$xgWN3 '5))
   (g$library-subst$9176$xgWN3
     g$library-subst$9382$xgWN3
     (record-accessor g$7354$9163$xgWN3 '6))
   (g$library-env$9177$xgWN3
     g$library-env$9383$xgWN3
     (record-accessor g$7354$9163$xgWN3 '7))
   (g$library-visit-state$9178$xgWN3
     g$library-visit-state$9384$xgWN3
     (record-accessor g$7354$9163$xgWN3 '8))
   (g$library-invoke-state$9179$xgWN3
     g$library-invoke-state$9385$xgWN3
     (record-accessor g$7354$9163$xgWN3 '9))
   (g$library-visit-code$9180$xgWN3
     g$library-visit-code$9386$xgWN3
     (record-accessor g$7354$9163$xgWN3 '10))
   (g$library-invoke-code$9181$xgWN3
     g$library-invoke-code$9387$xgWN3
     (record-accessor g$7354$9163$xgWN3 '11))
   (g$library-visible?$9182$xgWN3
     g$library-visible?$9388$xgWN3
     (record-accessor g$7354$9163$xgWN3 '12))
   (g$library-source-file-name$9183$xgWN3
     g$library-source-file-name$9389$xgWN3
     (record-accessor g$7354$9163$xgWN3 '13))
   (g$set-library-id!$9184$xgWN3
     g$set-library-id!$9390$xgWN3
     (record-mutator g$7354$9163$xgWN3 '0))
   (g$set-library-name!$9185$xgWN3
     g$set-library-name!$9391$xgWN3
     (record-mutator g$7354$9163$xgWN3 '1))
   (g$set-library-version!$9186$xgWN3
     g$set-library-version!$9392$xgWN3
     (record-mutator g$7354$9163$xgWN3 '2))
   (g$set-library-imp*!$9187$xgWN3
     g$set-library-imp*!$9393$xgWN3
     (record-mutator g$7354$9163$xgWN3 '3))
   (g$set-library-vis*!$9188$xgWN3
     g$set-library-vis*!$9394$xgWN3
     (record-mutator g$7354$9163$xgWN3 '4))
   (g$set-library-inv*!$9189$xgWN3
     g$set-library-inv*!$9395$xgWN3
     (record-mutator g$7354$9163$xgWN3 '5))
   (g$set-library-subst!$9190$xgWN3
     g$set-library-subst!$9396$xgWN3
     (record-mutator g$7354$9163$xgWN3 '6))
   (g$set-library-env!$9191$xgWN3
     g$set-library-env!$9397$xgWN3
     (record-mutator g$7354$9163$xgWN3 '7))
   (g$set-library-visit-state!$9192$xgWN3
     g$set-library-visit-state!$9398$xgWN3
     (record-mutator g$7354$9163$xgWN3 '8))
   (g$set-library-invoke-state!$9193$xgWN3
     g$set-library-invoke-state!$9399$xgWN3
     (record-mutator g$7354$9163$xgWN3 '9))
   (g$set-library-visit-code!$9194$xgWN3
     g$set-library-visit-code!$9400$xgWN3
     (record-mutator g$7354$9163$xgWN3 '10))
   (g$set-library-invoke-code!$9195$xgWN3
     g$set-library-invoke-code!$9401$xgWN3
     (record-mutator g$7354$9163$xgWN3 '11))
   (g$set-library-visible?!$9196$xgWN3
     g$set-library-visible?!$9402$xgWN3
     (record-mutator g$7354$9163$xgWN3 '12))
   (g$set-library-source-file-name!$9197$xgWN3
     g$set-library-source-file-name!$9403$xgWN3
     (record-mutator g$7354$9163$xgWN3 '13))
   (g$rp$9198$xgWN3
     g$rp$9404$xgWN3
     (make-record-printer
       'library
       (case-lambda
         ((g$x$9232$xgWN3 g$p$9233$xgWN3 g$wr$9234$xgWN3)
          (begin
            (if (not (g$library?$9168$xgWN3 g$x$9232$xgWN3))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$8427$xgWN3
                '"#<library ~s>"
                (if (null? (g$library-version$9172$xgWN3 g$x$9232$xgWN3))
                  (g$library-name$9171$xgWN3 g$x$9232$xgWN3)
                  (append
                    (g$library-name$9171$xgWN3 g$x$9232$xgWN3)
                    (list (g$library-version$9172$xgWN3 g$x$9232$xgWN3)))))
              g$p$9233$xgWN3))))))
   (g$find-dependencies$9199$xgWN3
     g$find-dependencies$9405$xgWN3
     (case-lambda
       ((g$ls$9235$xgWN3)
        (if (null? g$ls$9235$xgWN3)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$9200$xgWN3
     g$find-library-by$9406$xgWN3
     (case-lambda
       ((g$pred$9236$xgWN3)
        ((letrec ((g$f$9237$xgWN3
                    (case-lambda
                      ((g$ls$9238$xgWN3)
                       (if (null? g$ls$9238$xgWN3)
                         '#f
                         (if (g$pred$9236$xgWN3 (car g$ls$9238$xgWN3))
                           (car g$ls$9238$xgWN3)
                           (g$f$9237$xgWN3 (cdr g$ls$9238$xgWN3))))))))
           g$f$9237$xgWN3)
         ((g$current-library-collection$9162$xgWN3))))))
   (g$library-path$9201$xgWN3
     g$library-path$9407$xgWN3
     (g$make-parameter$8910$xgWN3
       '(".")
       (case-lambda
         ((g$x$9239$xgWN3)
          (if (if (list? g$x$9239$xgWN3)
                (begin '#f (g$for-all$6083$xgWN3 string? g$x$9239$xgWN3))
                '#f)
            (g$map$6085$xgWN3
              (case-lambda ((g$x$9240$xgWN3) g$x$9240$xgWN3))
              g$x$9239$xgWN3)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$9239$xgWN3))))))
   (g$library-extensions$9202$xgWN3
     g$library-extensions$9408$xgWN3
     (g$make-parameter$8910$xgWN3
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$9241$xgWN3)
          (if (if (list? g$x$9241$xgWN3)
                (begin '#f (g$for-all$6083$xgWN3 string? g$x$9241$xgWN3))
                '#f)
            (g$map$6085$xgWN3
              (case-lambda ((g$x$9242$xgWN3) g$x$9242$xgWN3))
              g$x$9241$xgWN3)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$9241$xgWN3))))))
   (g$library-name->file-name$9203$xgWN3
     g$library-name->file-name$9409$xgWN3
     (case-lambda
       ((g$x$9243$xgWN3)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$8190$xgWN3)))
          (case-lambda
            ((g$p$9246$xgWN3 g$extract$9247$xgWN3)
             ((case-lambda
                ((g$extract$9248$xgWN3 g$p$9249$xgWN3)
                 (letrec* ((g$display-hex$9250$xgWN3
                             (case-lambda
                               ((g$n$9258$xgWN3)
                                (if (<= '0 g$n$9258$xgWN3 '9)
                                  (display g$n$9258$xgWN3 g$p$9249$xgWN3)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$9258$xgWN3 '10)))
                                    g$p$9249$xgWN3))))))
                   (begin
                     ((letrec ((g$f$9251$xgWN3
                                 (case-lambda
                                   ((g$ls$9252$xgWN3)
                                    (if (not (null? g$ls$9252$xgWN3))
                                      (begin
                                        (display '"/" g$p$9249$xgWN3)
                                        (g$for-each$6086$xgWN3
                                          (case-lambda
                                            ((g$c$9253$xgWN3)
                                             (if ((case-lambda
                                                    ((g$t$9254$xgWN3)
                                                     (if g$t$9254$xgWN3
                                                       g$t$9254$xgWN3
                                                       ((case-lambda
                                                          ((g$t$9255$xgWN3)
                                                           (if g$t$9255$xgWN3
                                                             g$t$9255$xgWN3
                                                             ((case-lambda
                                                                ((g$t$9256$xgWN3)
                                                                 (if g$t$9256$xgWN3
                                                                   g$t$9256$xgWN3
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$6078$xgWN3
                                                                       g$c$9253$xgWN3
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$6811$xgWN3
                                                                '#\0
                                                                g$c$9253$xgWN3
                                                                '#\9)))))
                                                        (g$char<=?$6811$xgWN3
                                                          '#\A
                                                          g$c$9253$xgWN3
                                                          '#\Z)))))
                                                  (g$char<=?$6811$xgWN3
                                                    '#\a
                                                    g$c$9253$xgWN3
                                                    '#\z))
                                               (display
                                                 g$c$9253$xgWN3
                                                 g$p$9249$xgWN3)
                                               (begin
                                                 (display '"%" g$p$9249$xgWN3)
                                                 ((case-lambda
                                                    ((g$n$9257$xgWN3)
                                                     (begin
                                                       (g$display-hex$9250$xgWN3
                                                         (g$quotient$7665$xgWN3
                                                           g$n$9257$xgWN3
                                                           '16))
                                                       (g$display-hex$9250$xgWN3
                                                         (g$remainder$7666$xgWN3
                                                           g$n$9257$xgWN3
                                                           '16)))))
                                                  (char->integer
                                                    g$c$9253$xgWN3))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$9252$xgWN3))))
                                        (g$f$9251$xgWN3 (cdr g$ls$9252$xgWN3)))
                                      (void))))))
                        g$f$9251$xgWN3)
                      g$x$9243$xgWN3)
                     (g$extract$9248$xgWN3)))))
              g$extract$9247$xgWN3
              g$p$9246$xgWN3)))))))
   (g$file-locator$9204$xgWN3
     g$file-locator$9410$xgWN3
     (g$make-parameter$8910$xgWN3
       (case-lambda
         ((g$x$9259$xgWN3)
          ((case-lambda
             ((g$str$9260$xgWN3)
              ((letrec ((g$f$9261$xgWN3
                          (case-lambda
                            ((g$ls$9262$xgWN3
                               g$exts$9263$xgWN3
                               g$failed-list$9264$xgWN3)
                             (if (null? g$ls$9262$xgWN3)
                               (g$file-locator-resolution-error$8908$xgWN3
                                 g$x$9259$xgWN3
                                 (g$reverse$6763$xgWN3
                                   g$failed-list$9264$xgWN3))
                               (if (null? g$exts$9263$xgWN3)
                                 (g$f$9261$xgWN3
                                   (cdr g$ls$9262$xgWN3)
                                   (g$library-extensions$9202$xgWN3)
                                   g$failed-list$9264$xgWN3)
                                 ((case-lambda
                                    ((g$name$9265$xgWN3)
                                     (if (g$file-exists?$6873$xgWN3
                                           g$name$9265$xgWN3)
                                       g$name$9265$xgWN3
                                       (g$f$9261$xgWN3
                                         g$ls$9262$xgWN3
                                         (cdr g$exts$9263$xgWN3)
                                         (cons
                                           g$name$9265$xgWN3
                                           g$failed-list$9264$xgWN3)))))
                                  (string-append
                                    (car g$ls$9262$xgWN3)
                                    g$str$9260$xgWN3
                                    (car g$exts$9263$xgWN3)))))))))
                 g$f$9261$xgWN3)
               (g$library-path$9201$xgWN3)
               (g$library-extensions$9202$xgWN3)
               '())))
           (g$library-name->file-name$9203$xgWN3 g$x$9259$xgWN3))))
       (case-lambda
         ((g$f$9266$xgWN3)
          (if (g$procedure?$6758$xgWN3 g$f$9266$xgWN3)
            g$f$9266$xgWN3
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$9266$xgWN3))))))
   (g$serialize-all$9205$xgWN3
     g$serialize-all$9411$xgWN3
     (case-lambda
       ((g$serialize$9267$xgWN3 g$compile$9268$xgWN3)
        (letrec* ((g$library-desc$9269$xgWN3
                    (case-lambda
                      ((g$x$9271$xgWN3)
                       (list
                         (g$library-id$9170$xgWN3 g$x$9271$xgWN3)
                         (g$library-name$9171$xgWN3 g$x$9271$xgWN3))))))
          (g$for-each$6086$xgWN3
            (case-lambda
              ((g$x$9270$xgWN3)
               (if (g$library-source-file-name$9183$xgWN3 g$x$9270$xgWN3)
                 (g$serialize$9267$xgWN3
                   (g$library-source-file-name$9183$xgWN3 g$x$9270$xgWN3)
                   (list
                     (g$library-id$9170$xgWN3 g$x$9270$xgWN3)
                     (g$library-name$9171$xgWN3 g$x$9270$xgWN3)
                     (g$library-version$9172$xgWN3 g$x$9270$xgWN3)
                     (g$map$6085$xgWN3
                       g$library-desc$9269$xgWN3
                       (g$library-imp*$9173$xgWN3 g$x$9270$xgWN3))
                     (g$map$6085$xgWN3
                       g$library-desc$9269$xgWN3
                       (g$library-vis*$9174$xgWN3 g$x$9270$xgWN3))
                     (g$map$6085$xgWN3
                       g$library-desc$9269$xgWN3
                       (g$library-inv*$9175$xgWN3 g$x$9270$xgWN3))
                     (g$library-subst$9176$xgWN3 g$x$9270$xgWN3)
                     (g$library-env$9177$xgWN3 g$x$9270$xgWN3)
                     (g$compile$9268$xgWN3
                       (g$library-visit-code$9180$xgWN3 g$x$9270$xgWN3))
                     (g$compile$9268$xgWN3
                       (g$library-invoke-code$9181$xgWN3 g$x$9270$xgWN3))
                     (g$library-visible?$9182$xgWN3 g$x$9270$xgWN3)))
                 (void))))
            ((g$current-library-collection$9162$xgWN3)))))))
   (g$current-precompiled-library-loader$9206$xgWN3
     g$current-precompiled-library-loader$9412$xgWN3
     (g$make-parameter$8910$xgWN3
       (case-lambda ((g$filename$9272$xgWN3 g$sk$9273$xgWN3) '#f))))
   (g$try-load-from-file$9207$xgWN3
     g$try-load-from-file$9413$xgWN3
     (case-lambda
       ((g$filename$9274$xgWN3)
        ((g$current-precompiled-library-loader$9206$xgWN3)
         g$filename$9274$xgWN3
         (case-lambda
           ((g$id$9275$xgWN3
              g$name$9276$xgWN3
              g$ver$9277$xgWN3
              g$imp*$9278$xgWN3
              g$vis*$9279$xgWN3
              g$inv*$9280$xgWN3
              g$exp-subst$9281$xgWN3
              g$exp-env$9282$xgWN3
              g$visit-proc$9283$xgWN3
              g$invoke-proc$9284$xgWN3
              g$visible?$9285$xgWN3)
            ((letrec ((g$f$9286$xgWN3
                        (case-lambda
                          ((g$deps$9287$xgWN3)
                           (if (null? g$deps$9287$xgWN3)
                             (begin
                               (g$install-library$9217$xgWN3
                                 g$id$9275$xgWN3
                                 g$name$9276$xgWN3
                                 g$ver$9277$xgWN3
                                 g$imp*$9278$xgWN3
                                 g$vis*$9279$xgWN3
                                 g$inv*$9280$xgWN3
                                 g$exp-subst$9281$xgWN3
                                 g$exp-env$9282$xgWN3
                                 g$visit-proc$9283$xgWN3
                                 g$invoke-proc$9284$xgWN3
                                 '#f
                                 '#f
                                 g$visible?$9285$xgWN3
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$9288$xgWN3)
                                 ((case-lambda
                                    ((g$label$9289$xgWN3 g$dname$9290$xgWN3)
                                     ((case-lambda
                                        ((g$l$9291$xgWN3)
                                         (if (if (g$library?$9168$xgWN3
                                                   g$l$9291$xgWN3)
                                               (begin
                                                 '#f
                                                 (eq? g$label$9289$xgWN3
                                                      (g$library-id$9170$xgWN3
                                                        g$l$9291$xgWN3)))
                                               '#f)
                                           (g$f$9286$xgWN3
                                             (cdr g$deps$9287$xgWN3))
                                           (begin
                                             (g$library-version-mismatch-warning$8907$xgWN3
                                               g$name$9276$xgWN3
                                               g$dname$9290$xgWN3
                                               g$filename$9274$xgWN3)
                                             '#f))))
                                      (g$find-library-by-name$9212$xgWN3
                                        g$dname$9290$xgWN3))))
                                  (car g$d$9288$xgWN3)
                                  (g$cadr$6765$xgWN3 g$d$9288$xgWN3))))
                              (car g$deps$9287$xgWN3)))))))
               g$f$9286$xgWN3)
             (append g$imp*$9278$xgWN3 g$vis*$9279$xgWN3 g$inv*$9280$xgWN3)))
           (g$others$9292$xgWN3 '#f))))))
   (g$library-loader$9208$xgWN3
     g$library-loader$9414$xgWN3
     (g$make-parameter$8910$xgWN3
       (case-lambda
         ((g$x$9293$xgWN3)
          ((case-lambda
             ((g$file-name$9294$xgWN3)
              (if (not g$file-name$9294$xgWN3)
                (assertion-violation '#f '"cannot find library" g$x$9293$xgWN3)
                ((case-lambda
                   ((g$t$9295$xgWN3)
                    (if g$t$9295$xgWN3
                      g$t$9295$xgWN3
                      (begin
                        '#f
                        ((g$current-library-expander$9209$xgWN3)
                         (g$read-library-source-file$8909$xgWN3
                           g$file-name$9294$xgWN3)
                         g$file-name$9294$xgWN3
                         (case-lambda
                           ((g$name$9296$xgWN3)
                            (if (not (equal? g$name$9296$xgWN3 g$x$9293$xgWN3))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$8190$xgWN3)))
                                  (case-lambda
                                    ((g$p$9299$xgWN3 g$e$9300$xgWN3)
                                     ((case-lambda
                                        ((g$e$9301$xgWN3 g$p$9302$xgWN3)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$9302$xgWN3)
                                           (write g$x$9293$xgWN3 g$p$9302$xgWN3)
                                           (display '" in file " g$p$9302$xgWN3)
                                           (display
                                             g$file-name$9294$xgWN3
                                             g$p$9302$xgWN3)
                                           (display '", found " g$p$9302$xgWN3)
                                           (write
                                             g$name$9296$xgWN3
                                             g$p$9302$xgWN3)
                                           (display '" instead" g$p$9302$xgWN3)
                                           (g$e$9301$xgWN3))))
                                      g$e$9300$xgWN3
                                      g$p$9299$xgWN3)))))
                              (void)))))))))
                 (g$try-load-from-file$9207$xgWN3 g$file-name$9294$xgWN3)))))
           ((g$file-locator$9204$xgWN3) g$x$9293$xgWN3))))
       (case-lambda
         ((g$f$9303$xgWN3)
          (if (g$procedure?$6758$xgWN3 g$f$9303$xgWN3)
            g$f$9303$xgWN3
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$9303$xgWN3))))))
   (g$current-library-expander$9209$xgWN3
     g$current-library-expander$9415$xgWN3
     (g$make-parameter$8910$xgWN3
       (case-lambda
         ((g$x$9304$xgWN3)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$9305$xgWN3)
          (if (g$procedure?$6758$xgWN3 g$f$9305$xgWN3)
            g$f$9305$xgWN3
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$9305$xgWN3))))))
   (g$external-pending-libraries$9210$xgWN3
     g$external-pending-libraries$9416$xgWN3
     (g$make-parameter$8910$xgWN3 '()))
   (g$find-external-library$9211$xgWN3
     g$find-external-library$9417$xgWN3
     (case-lambda
       ((g$name$9306$xgWN3)
        (begin
          (if (g$member$6079$xgWN3
                g$name$9306$xgWN3
                (g$external-pending-libraries$9210$xgWN3))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$9306$xgWN3)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$9309$xgWN3
                g$external-pending-libraries$9310$xgWN3)
              ((case-lambda
                 ((g$swap$9311$xgWN3)
                  (dynamic-wind
                    g$swap$9311$xgWN3
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$9208$xgWN3) g$name$9306$xgWN3)
                         ((case-lambda
                            ((g$t$9312$xgWN3)
                             (if g$t$9312$xgWN3
                               g$t$9312$xgWN3
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$9306$xgWN3)))))
                          (g$find-library-by$9200$xgWN3
                            (case-lambda
                              ((g$x$9313$xgWN3)
                               (equal?
                                 (g$library-name$9171$xgWN3 g$x$9313$xgWN3)
                                 g$name$9306$xgWN3))))))))
                    g$swap$9311$xgWN3)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$9314$xgWN3)
                      (begin
                        (g$external-pending-libraries$9309$xgWN3
                          g$external-pending-libraries$9310$xgWN3)
                        (set! g$external-pending-libraries$9310$xgWN3
                          g$t$9314$xgWN3))))
                   (g$external-pending-libraries$9309$xgWN3)))))))
           g$external-pending-libraries$9210$xgWN3
           (cons
             g$name$9306$xgWN3
             (g$external-pending-libraries$9210$xgWN3)))))))
   (g$find-library-by-name$9212$xgWN3
     g$find-library-by-name$9418$xgWN3
     (case-lambda
       ((g$name$9315$xgWN3)
        ((case-lambda
           ((g$t$9316$xgWN3)
            (if g$t$9316$xgWN3
              g$t$9316$xgWN3
              (begin
                '#f
                (g$find-external-library$9211$xgWN3 g$name$9315$xgWN3)))))
         (g$find-library-by$9200$xgWN3
           (case-lambda
             ((g$x$9317$xgWN3)
              (equal?
                (g$library-name$9171$xgWN3 g$x$9317$xgWN3)
                g$name$9315$xgWN3))))))))
   (g$uninstall-library$9213$xgWN3
     g$uninstall-library$9419$xgWN3
     (case-lambda
       ((g$name$9318$xgWN3 g$err?$9319$xgWN3)
        (letrec* ((g$who$9320$xgWN3 'uninstall-library))
          ((case-lambda
             ((g$lib$9321$xgWN3)
              (begin
                (if (if g$err?$9319$xgWN3
                      (begin '#f (not g$lib$9321$xgWN3))
                      '#f)
                  (assertion-violation
                    g$who$9320$xgWN3
                    '"library not installed"
                    g$name$9318$xgWN3)
                  (void))
                ((g$current-library-collection$9162$xgWN3) g$lib$9321$xgWN3 '#t)
                (g$for-each$6086$xgWN3
                  (case-lambda
                    ((g$x$9322$xgWN3)
                     ((case-lambda
                        ((g$label$9323$xgWN3 g$binding$9324$xgWN3)
                         (begin
                           (remove-location g$label$9323$xgWN3)
                           (if (g$memq$6077$xgWN3
                                 (car g$binding$9324$xgWN3)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location (cdr g$binding$9324$xgWN3))
                             (void)))))
                      (car g$x$9322$xgWN3)
                      (cdr g$x$9322$xgWN3))))
                  (g$library-env$9177$xgWN3 g$lib$9321$xgWN3)))))
           (g$find-library-by$9200$xgWN3
             (case-lambda
               ((g$x$9325$xgWN3)
                (equal?
                  (g$library-name$9171$xgWN3 g$x$9325$xgWN3)
                  g$name$9318$xgWN3)))))))
       ((g$name$9326$xgWN3)
        (g$uninstall-library$9213$xgWN3 g$name$9326$xgWN3 '#t))))
   (g$library-exists?$9214$xgWN3
     g$library-exists?$9420$xgWN3
     (case-lambda
       ((g$name$9327$xgWN3)
        (if (g$find-library-by$9200$xgWN3
              (case-lambda
                ((g$x$9328$xgWN3)
                 (equal?
                   (g$library-name$9171$xgWN3 g$x$9328$xgWN3)
                   g$name$9327$xgWN3))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$9215$xgWN3
     g$find-library-by-spec/die$9421$xgWN3
     (case-lambda
       ((g$spec$9329$xgWN3)
        ((case-lambda
           ((g$id$9330$xgWN3)
            ((case-lambda
               ((g$t$9331$xgWN3)
                (if g$t$9331$xgWN3
                  g$t$9331$xgWN3
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$9329$xgWN3)))))
             (g$find-library-by$9200$xgWN3
               (case-lambda
                 ((g$x$9332$xgWN3)
                  (eq? g$id$9330$xgWN3
                       (g$library-id$9170$xgWN3 g$x$9332$xgWN3))))))))
         (car g$spec$9329$xgWN3)))))
   (g$install-library-record$9216$xgWN3
     g$install-library-record$9422$xgWN3
     (case-lambda
       ((g$lib$9333$xgWN3)
        (begin
          ((case-lambda
             ((g$exp-env$9334$xgWN3)
              (g$for-each$6086$xgWN3
                (case-lambda
                  ((g$x$9335$xgWN3)
                   ((case-lambda
                      ((g$label$9336$xgWN3 g$binding$9337$xgWN3)
                       ((case-lambda
                          ((g$binding$9338$xgWN3)
                           (g$set-label-binding!$8913$xgWN3
                             g$label$9336$xgWN3
                             g$binding$9338$xgWN3)))
                        ((case-lambda
                           ((g$t$9339$xgWN3)
                            (if (g$memv$6078$xgWN3 g$t$9339$xgWN3 '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$9333$xgWN3
                                  (cdr g$binding$9337$xgWN3)))
                              (if (g$memv$6078$xgWN3
                                    g$t$9339$xgWN3
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$9333$xgWN3
                                    (cdr g$binding$9337$xgWN3)))
                                (if (g$memv$6078$xgWN3
                                      g$t$9339$xgWN3
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$9333$xgWN3
                                      (cdr g$binding$9337$xgWN3)))
                                  (if (g$memv$6078$xgWN3
                                        g$t$9339$xgWN3
                                        '(global-ctv))
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$9333$xgWN3
                                        (cdr g$binding$9337$xgWN3)))
                                    g$binding$9337$xgWN3))))))
                         (car g$binding$9337$xgWN3)))))
                    (car g$x$9335$xgWN3)
                    (cdr g$x$9335$xgWN3))))
                g$exp-env$9334$xgWN3)))
           (g$library-env$9177$xgWN3 g$lib$9333$xgWN3))
          ((g$current-library-collection$9162$xgWN3) g$lib$9333$xgWN3)))))
   (g$install-library$9217$xgWN3
     g$install-library$9423$xgWN3
     (case-lambda
       ((g$id$9340$xgWN3
          g$name$9341$xgWN3
          g$ver$9342$xgWN3
          g$imp*$9343$xgWN3
          g$vis*$9344$xgWN3
          g$inv*$9345$xgWN3
          g$exp-subst$9346$xgWN3
          g$exp-env$9347$xgWN3
          g$visit-proc$9348$xgWN3
          g$invoke-proc$9349$xgWN3
          g$visit-code$9350$xgWN3
          g$invoke-code$9351$xgWN3
          g$visible?$9352$xgWN3
          g$source-file-name$9353$xgWN3)
        ((case-lambda
           ((g$imp-lib*$9354$xgWN3 g$vis-lib*$9355$xgWN3 g$inv-lib*$9356$xgWN3)
            (begin
              (if (not (if (g$symbol?$6756$xgWN3 g$id$9340$xgWN3)
                         (if (list? g$name$9341$xgWN3)
                           (begin '#f (list? g$ver$9342$xgWN3))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$9340$xgWN3
                  g$name$9341$xgWN3
                  g$ver$9342$xgWN3)
                (void))
              (if (g$library-exists?$9214$xgWN3 g$name$9341$xgWN3)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$9341$xgWN3)
                (void))
              ((case-lambda
                 ((g$lib$9357$xgWN3)
                  (g$install-library-record$9216$xgWN3 g$lib$9357$xgWN3)))
               (g$make-library$9169$xgWN3
                 g$id$9340$xgWN3
                 g$name$9341$xgWN3
                 g$ver$9342$xgWN3
                 g$imp-lib*$9354$xgWN3
                 g$vis-lib*$9355$xgWN3
                 g$inv-lib*$9356$xgWN3
                 g$exp-subst$9346$xgWN3
                 g$exp-env$9347$xgWN3
                 g$visit-proc$9348$xgWN3
                 g$invoke-proc$9349$xgWN3
                 g$visit-code$9350$xgWN3
                 g$invoke-code$9351$xgWN3
                 g$visible?$9352$xgWN3
                 g$source-file-name$9353$xgWN3)))))
         (g$map$6085$xgWN3
           g$find-library-by-spec/die$9215$xgWN3
           g$imp*$9343$xgWN3)
         (g$map$6085$xgWN3
           g$find-library-by-spec/die$9215$xgWN3
           g$vis*$9344$xgWN3)
         (g$map$6085$xgWN3
           g$find-library-by-spec/die$9215$xgWN3
           g$inv*$9345$xgWN3)))))
   (g$imported-label->binding$9218$xgWN3
     g$imported-label->binding$9424$xgWN3
     (case-lambda
       ((g$lab$9358$xgWN3) (g$label-binding$8914$xgWN3 g$lab$9358$xgWN3))))
   (g$invoke-library$9219$xgWN3
     g$invoke-library$9425$xgWN3
     (case-lambda
       ((g$lib$9359$xgWN3)
        ((case-lambda
           ((g$invoke$9360$xgWN3)
            (if (g$procedure?$6758$xgWN3 g$invoke$9360$xgWN3)
              (begin
                (g$set-library-invoke-state!$9193$xgWN3
                  g$lib$9359$xgWN3
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$9359$xgWN3))))
                (g$for-each$6086$xgWN3
                  g$invoke-library$9219$xgWN3
                  (g$library-inv*$9175$xgWN3 g$lib$9359$xgWN3))
                (g$set-library-invoke-state!$9193$xgWN3
                  g$lib$9359$xgWN3
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$9359$xgWN3))))
                (g$invoke$9360$xgWN3)
                (g$set-library-invoke-state!$9193$xgWN3 g$lib$9359$xgWN3 '#t))
              (void))))
         (g$library-invoke-state$9179$xgWN3 g$lib$9359$xgWN3)))))
   (g$visit-library$9220$xgWN3
     g$visit-library$9426$xgWN3
     (case-lambda
       ((g$lib$9361$xgWN3)
        ((case-lambda
           ((g$visit$9362$xgWN3)
            (if (g$procedure?$6758$xgWN3 g$visit$9362$xgWN3)
              (begin
                (g$set-library-visit-state!$9192$xgWN3
                  g$lib$9361$xgWN3
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$9361$xgWN3))))
                (g$for-each$6086$xgWN3
                  g$invoke-library$9219$xgWN3
                  (g$library-vis*$9174$xgWN3 g$lib$9361$xgWN3))
                (g$set-library-visit-state!$9192$xgWN3
                  g$lib$9361$xgWN3
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$9361$xgWN3))))
                (g$visit$9362$xgWN3)
                (g$set-library-visit-state!$9192$xgWN3 g$lib$9361$xgWN3 '#t))
              (void))))
         (g$library-visit-state$9178$xgWN3 g$lib$9361$xgWN3)))))
   (g$invoke-library-by-spec$9221$xgWN3
     g$invoke-library-by-spec$9427$xgWN3
     (case-lambda
       ((g$spec$9363$xgWN3)
        (g$invoke-library$9219$xgWN3
          (g$find-library-by-spec/die$9215$xgWN3 g$spec$9363$xgWN3)))))
   (g$installed-libraries$9222$xgWN3
     g$installed-libraries$9428$xgWN3
     (case-lambda
       ((g$all?$9364$xgWN3)
        ((letrec ((g$f$9365$xgWN3
                    (case-lambda
                      ((g$ls$9366$xgWN3)
                       (if (null? g$ls$9366$xgWN3)
                         '()
                         (if ((case-lambda
                                ((g$t$9367$xgWN3)
                                 (if g$t$9367$xgWN3
                                   g$t$9367$xgWN3
                                   (begin
                                     '#f
                                     (g$library-visible?$9182$xgWN3
                                       (car g$ls$9366$xgWN3))))))
                              g$all?$9364$xgWN3)
                           (cons
                             (g$library-name$9171$xgWN3 (car g$ls$9366$xgWN3))
                             (g$f$9365$xgWN3 (cdr g$ls$9366$xgWN3)))
                           (g$f$9365$xgWN3 (cdr g$ls$9366$xgWN3))))))))
           g$f$9365$xgWN3)
         ((g$current-library-collection$9162$xgWN3))))
       (() (g$installed-libraries$9222$xgWN3 '#f))))
   (g$library-spec$9223$xgWN3
     g$library-spec$9429$xgWN3
     (case-lambda
       ((g$x$9368$xgWN3)
        (begin
          (if (not (g$library?$9168$xgWN3 g$x$9368$xgWN3))
            (assertion-violation 'library-spec '"not a library" g$x$9368$xgWN3)
            (void))
          (list
            (g$library-id$9170$xgWN3 g$x$9368$xgWN3)
            (g$library-name$9171$xgWN3 g$x$9368$xgWN3)
            (g$library-version$9172$xgWN3 g$x$9368$xgWN3)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$9430$xgWN3
     g$build-global-define$9607$xgWN3
     (case-lambda ((g$x$9578$xgWN3) (g$build-void$9574$xgWN3))))
   (g$build-lambda$9520$xgWN3
     g$build-lambda$9608$xgWN3
     (case-lambda
       ((g$ae$9579$xgWN3 g$vars$9580$xgWN3 g$exp$9581$xgWN3)
        (list 'case-lambda (list g$vars$9580$xgWN3 g$exp$9581$xgWN3)))))
   (g$build-case-lambda$9521$xgWN3
     g$build-case-lambda$9609$xgWN3
     (case-lambda
       ((g$ae$9582$xgWN3 g$vars*$9583$xgWN3 g$exp*$9584$xgWN3)
        (cons
          'case-lambda
          (g$map$6085$xgWN3 list g$vars*$9583$xgWN3 g$exp*$9584$xgWN3)))))
   (g$build-let$9522$xgWN3
     g$build-let$9610$xgWN3
     (case-lambda
       ((g$ae$9585$xgWN3 g$lhs*$9586$xgWN3 g$rhs*$9587$xgWN3 g$body$9588$xgWN3)
        (cons
          (g$build-lambda$9520$xgWN3
            g$ae$9585$xgWN3
            g$lhs*$9586$xgWN3
            g$body$9588$xgWN3)
          g$rhs*$9587$xgWN3))))
   (g$build-sequence$9573$xgWN3
     g$build-sequence$9611$xgWN3
     (case-lambda
       ((g$ae$9589$xgWN3 g$exps$9590$xgWN3)
        ((letrec ((g$loop$9591$xgWN3
                    (case-lambda
                      ((g$exps$9592$xgWN3)
                       (if (null? (cdr g$exps$9592$xgWN3))
                         (car g$exps$9592$xgWN3)
                         (if (equal?
                               (car g$exps$9592$xgWN3)
                               (g$build-void$9574$xgWN3))
                           (g$loop$9591$xgWN3 (cdr g$exps$9592$xgWN3))
                           (cons 'begin g$exps$9592$xgWN3)))))))
           g$loop$9591$xgWN3)
         g$exps$9590$xgWN3))))
   (g$build-void$9574$xgWN3
     g$build-void$9612$xgWN3
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$9575$xgWN3
     g$build-letrec$9613$xgWN3
     (case-lambda
       ((g$ae$9593$xgWN3
          g$vars$9594$xgWN3
          g$val-exps$9595$xgWN3
          g$body-exp$9596$xgWN3)
        (if (null? g$vars$9594$xgWN3)
          g$body-exp$9596$xgWN3
          (list
            'letrec
            (g$map$6085$xgWN3 list g$vars$9594$xgWN3 g$val-exps$9595$xgWN3)
            g$body-exp$9596$xgWN3)))))
   (g$build-letrec*$9576$xgWN3
     g$build-letrec*$9614$xgWN3
     (case-lambda
       ((g$ae$9597$xgWN3
          g$vars$9598$xgWN3
          g$val-exps$9599$xgWN3
          g$body-exp$9600$xgWN3)
        (if (null? g$vars$9598$xgWN3)
          g$body-exp$9600$xgWN3
          (list
            'letrec*
            (g$map$6085$xgWN3 list g$vars$9598$xgWN3 g$val-exps$9599$xgWN3)
            g$body-exp$9600$xgWN3)))))
   (g$build-library-letrec*$9577$xgWN3
     g$build-library-letrec*$9615$xgWN3
     (case-lambda
       ((g$ae$9601$xgWN3
          g$name$9602$xgWN3
          g$vars$9603$xgWN3
          g$locs$9604$xgWN3
          g$val-exps$9605$xgWN3
          g$body-exp$9606$xgWN3)
        (list
          'library-letrec*
          g$name$9602$xgWN3
          (g$map$6085$xgWN3
            list
            g$vars$9603$xgWN3
            g$locs$9604$xgWN3
            g$val-exps$9605$xgWN3)
          g$body-exp$9606$xgWN3)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$9616$xgWN3
     g$set-cons$13438$xgWN3
     (case-lambda
       ((g$x$10176$xgWN3 g$ls$10177$xgWN3)
        (if (g$memq$6077$xgWN3 g$x$10176$xgWN3 g$ls$10177$xgWN3)
          g$ls$10177$xgWN3
          (cons g$x$10176$xgWN3 g$ls$10177$xgWN3)))))
   (g$set-union$9617$xgWN3
     g$set-union$13439$xgWN3
     (case-lambda
       ((g$ls1$10178$xgWN3 g$ls2$10179$xgWN3)
        (if (null? g$ls1$10178$xgWN3)
          g$ls2$10179$xgWN3
          (if (g$memq$6077$xgWN3 (car g$ls1$10178$xgWN3) g$ls2$10179$xgWN3)
            (g$set-union$9617$xgWN3 (cdr g$ls1$10178$xgWN3) g$ls2$10179$xgWN3)
            (cons
              (car g$ls1$10178$xgWN3)
              (g$set-union$9617$xgWN3
                (cdr g$ls1$10178$xgWN3)
                g$ls2$10179$xgWN3)))))))
   (g$top-mark*$9619$xgWN3 g$top-mark*$13440$xgWN3 '(top))
   (g$top-marked?$9620$xgWN3
     g$top-marked?$13441$xgWN3
     (case-lambda
       ((g$m*$10180$xgWN3) (g$memq$6077$xgWN3 'top g$m*$10180$xgWN3))))
   (g$gen-lexical$9621$xgWN3
     g$gen-lexical$13442$xgWN3
     (case-lambda
       ((g$sym$10181$xgWN3)
        (if (g$symbol?$6756$xgWN3 g$sym$10181$xgWN3)
          (gensym g$sym$10181$xgWN3)
          (if (g$stx?$9658$xgWN3 g$sym$10181$xgWN3)
            (g$gen-lexical$9621$xgWN3 (g$id->sym$9687$xgWN3 g$sym$10181$xgWN3))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$10181$xgWN3))))))
   (g$gen-global$9622$xgWN3
     g$gen-global$13443$xgWN3
     (case-lambda
       ((g$x$10182$xgWN3) (g$gen-lexical$9621$xgWN3 g$x$10182$xgWN3))))
   (g$gen-label$9623$xgWN3
     g$gen-label$13444$xgWN3
     (case-lambda ((g$_$10183$xgWN3) (gensym))))
   (g$gen-top-level-label$9624$xgWN3
     g$gen-top-level-label$13445$xgWN3
     (case-lambda
       ((g$id$10184$xgWN3 g$rib$10185$xgWN3)
        (letrec* ((g$find$10186$xgWN3
                    (case-lambda
                      ((g$sym$10192$xgWN3
                         g$mark*$10193$xgWN3
                         g$sym*$10194$xgWN3
                         g$mark**$10195$xgWN3
                         g$label*$10196$xgWN3)
                       (if (pair? g$sym*$10194$xgWN3)
                         (begin
                           '#f
                           (if (if (eq? g$sym$10192$xgWN3
                                        (car g$sym*$10194$xgWN3))
                                 (begin
                                   '#f
                                   (g$same-marks?$9688$xgWN3
                                     g$mark*$10193$xgWN3
                                     (car g$mark**$10195$xgWN3)))
                                 '#f)
                             (car g$label*$10196$xgWN3)
                             (g$find$10186$xgWN3
                               g$sym$10192$xgWN3
                               g$mark*$10193$xgWN3
                               (cdr g$sym*$10194$xgWN3)
                               (cdr g$mark**$10195$xgWN3)
                               (cdr g$label*$10196$xgWN3))))
                         '#f)))))
          ((case-lambda
             ((g$sym$10187$xgWN3 g$mark*$10188$xgWN3)
              ((case-lambda
                 ((g$sym*$10189$xgWN3)
                  ((case-lambda
                     ((g$t$10190$xgWN3)
                      (if g$t$10190$xgWN3
                        ((case-lambda
                           ((g$label$10191$xgWN3)
                            (if (g$imported-label->binding$9424$xgWN3
                                  g$label$10191$xgWN3)
                              (gensym)
                              g$label$10191$xgWN3)))
                         g$t$10190$xgWN3)
                        (gensym))))
                   (if (g$memq$6077$xgWN3
                         g$sym$10187$xgWN3
                         (g$rib-sym*$9634$xgWN3 g$rib$10185$xgWN3))
                     (begin
                       '#f
                       (g$find$10186$xgWN3
                         g$sym$10187$xgWN3
                         g$mark*$10188$xgWN3
                         g$sym*$10189$xgWN3
                         (g$rib-mark**$9635$xgWN3 g$rib$10185$xgWN3)
                         (g$rib-label*$9636$xgWN3 g$rib$10185$xgWN3)))
                     '#f))))
               (g$rib-sym*$9634$xgWN3 g$rib$10185$xgWN3))))
           (g$id->sym$9687$xgWN3 g$id$10184$xgWN3)
           (g$stx-mark*$9661$xgWN3 g$id$10184$xgWN3))))))
   (g$gen-define-label+loc$9625$xgWN3
     g$gen-define-label+loc$13446$xgWN3
     (case-lambda
       ((g$id$10197$xgWN3 g$rib$10198$xgWN3 g$sd?$10199$xgWN3)
        (if g$sd?$10199$xgWN3
          (values (gensym) (g$gen-lexical$9621$xgWN3 g$id$10197$xgWN3))
          ((case-lambda
             ((g$env$10200$xgWN3)
              ((case-lambda
                 ((g$label$10201$xgWN3 g$locs$10202$xgWN3)
                  (values
                    g$label$10201$xgWN3
                    ((case-lambda
                       ((g$t$10203$xgWN3)
                        (if g$t$10203$xgWN3
                          (cdr g$t$10203$xgWN3)
                          ((case-lambda
                             ((g$loc$10204$xgWN3)
                              (begin
                                (g$set-interaction-env-locs!$10138$xgWN3
                                  g$env$10200$xgWN3
                                  (cons
                                    (cons g$label$10201$xgWN3 g$loc$10204$xgWN3)
                                    g$locs$10202$xgWN3))
                                g$loc$10204$xgWN3)))
                           (g$gen-lexical$9621$xgWN3 g$id$10197$xgWN3)))))
                     (g$assq$6073$xgWN3
                       g$label$10201$xgWN3
                       g$locs$10202$xgWN3)))))
               (g$gen-top-level-label$9624$xgWN3
                 g$id$10197$xgWN3
                 g$rib$10198$xgWN3)
               (g$interaction-env-locs$10135$xgWN3 g$env$10200$xgWN3))))
           (g$top-level-context$10175$xgWN3))))))
   (g$gen-define-label$9626$xgWN3
     g$gen-define-label$13447$xgWN3
     (case-lambda
       ((g$id$10205$xgWN3 g$rib$10206$xgWN3 g$sd?$10207$xgWN3)
        (if g$sd?$10207$xgWN3
          (gensym)
          (g$gen-top-level-label$9624$xgWN3
            g$id$10205$xgWN3
            g$rib$10206$xgWN3)))))
   (g$7680$9627$xgWN3
     g$7680$13448$xgWN3
     (make-record-type-descriptor
       'rib
       '#f
       'g$7683$xgWN3
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$7682$9628$xgWN3 g$7682$13449$xgWN3 '#f)
   (g$7681$9629$xgWN3
     g$7681$13450$xgWN3
     (make-record-constructor-descriptor
       g$7680$9627$xgWN3
       '#f
       g$7682$9628$xgWN3))
   (g$rib?$9632$xgWN3
     g$rib?$13451$xgWN3
     (record-predicate g$7680$9627$xgWN3))
   (g$make-rib$9633$xgWN3
     g$make-rib$13452$xgWN3
     (record-constructor g$7681$9629$xgWN3))
   (g$rib-sym*$9634$xgWN3
     g$rib-sym*$13453$xgWN3
     (record-accessor g$7680$9627$xgWN3 '0))
   (g$rib-mark**$9635$xgWN3
     g$rib-mark**$13454$xgWN3
     (record-accessor g$7680$9627$xgWN3 '1))
   (g$rib-label*$9636$xgWN3
     g$rib-label*$13455$xgWN3
     (record-accessor g$7680$9627$xgWN3 '2))
   (g$rib-sealed/freq$9637$xgWN3
     g$rib-sealed/freq$13456$xgWN3
     (record-accessor g$7680$9627$xgWN3 '3))
   (g$rib-cache$9638$xgWN3
     g$rib-cache$13457$xgWN3
     (record-accessor g$7680$9627$xgWN3 '4))
   (g$set-rib-sym*!$9639$xgWN3
     g$set-rib-sym*!$13458$xgWN3
     (record-mutator g$7680$9627$xgWN3 '0))
   (g$set-rib-mark**!$9640$xgWN3
     g$set-rib-mark**!$13459$xgWN3
     (record-mutator g$7680$9627$xgWN3 '1))
   (g$set-rib-label*!$9641$xgWN3
     g$set-rib-label*!$13460$xgWN3
     (record-mutator g$7680$9627$xgWN3 '2))
   (g$set-rib-sealed/freq!$9642$xgWN3
     g$set-rib-sealed/freq!$13461$xgWN3
     (record-mutator g$7680$9627$xgWN3 '3))
   (g$set-rib-cache!$9643$xgWN3
     g$set-rib-cache!$13462$xgWN3
     (record-mutator g$7680$9627$xgWN3 '4))
   (g$make-empty-rib$9644$xgWN3
     g$make-empty-rib$13463$xgWN3
     (case-lambda (() (g$make-rib$9633$xgWN3 '() '() '() '#f '#f))))
   (g$make-cache-rib$9645$xgWN3
     g$make-cache-rib$13464$xgWN3
     (case-lambda
       (()
        (g$make-rib$9633$xgWN3
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$6855$xgWN3)))))
   (g$find-label$9646$xgWN3
     g$find-label$13465$xgWN3
     (case-lambda
       ((g$rib$10208$xgWN3 g$sym$10209$xgWN3 g$mark*$10210$xgWN3)
        ((case-lambda
           ((g$ht$10211$xgWN3)
            (if g$ht$10211$xgWN3
              (begin
                '#f
                ((case-lambda
                   ((g$cv$10212$xgWN3)
                    ((case-lambda
                       ((g$t$10213$xgWN3)
                        (if g$t$10213$xgWN3 (cdr g$t$10213$xgWN3) '#f)))
                     (if g$cv$10212$xgWN3
                       (begin
                         '#f
                         (g$assp$6076$xgWN3
                           (case-lambda
                             ((g$m$10214$xgWN3)
                              (g$same-marks?$9688$xgWN3
                                g$mark*$10210$xgWN3
                                g$m$10214$xgWN3)))
                           g$cv$10212$xgWN3))
                       '#f))))
                 (g$hashtable-ref$6858$xgWN3
                   g$ht$10211$xgWN3
                   g$sym$10209$xgWN3
                   '#f)))
              '#f)))
         (g$rib-cache$9638$xgWN3 g$rib$10208$xgWN3)))))
   (g$extend-rib!$9647$xgWN3
     g$extend-rib!$13466$xgWN3
     (case-lambda
       ((g$rib$10215$xgWN3
          g$id$10216$xgWN3
          g$label$10217$xgWN3
          g$sd?$10218$xgWN3)
        (letrec* ((g$find$10219$xgWN3
                    (case-lambda
                      ((g$sym$10228$xgWN3
                         g$mark*$10229$xgWN3
                         g$sym*$10230$xgWN3
                         g$mark**$10231$xgWN3
                         g$label*$10232$xgWN3)
                       (if (pair? g$sym*$10230$xgWN3)
                         (begin
                           '#f
                           (if (if (eq? g$sym$10228$xgWN3
                                        (car g$sym*$10230$xgWN3))
                                 (begin
                                   '#f
                                   (g$same-marks?$9688$xgWN3
                                     g$mark*$10229$xgWN3
                                     (car g$mark**$10231$xgWN3)))
                                 '#f)
                             g$label*$10232$xgWN3
                             (g$find$10219$xgWN3
                               g$sym$10228$xgWN3
                               g$mark*$10229$xgWN3
                               (cdr g$sym*$10230$xgWN3)
                               (cdr g$mark**$10231$xgWN3)
                               (cdr g$label*$10232$xgWN3))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$9637$xgWN3 g$rib$10215$xgWN3)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$10215$xgWN3)
              (void))
            ((case-lambda
               ((g$sym$10220$xgWN3 g$mark*$10221$xgWN3)
                ((case-lambda
                   ((g$sym*$10222$xgWN3)
                    ((case-lambda
                       ((g$t$10223$xgWN3)
                        (if g$t$10223$xgWN3
                          ((case-lambda
                             ((g$p$10224$xgWN3)
                              (if (not (eq? g$label$10217$xgWN3
                                            g$p$10224$xgWN3))
                                (g$syntax-violation$10167$xgWN3
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$10216$xgWN3)
                                (void))))
                           g$t$10223$xgWN3)
                          ((case-lambda
                             ((g$t$10225$xgWN3)
                              (if g$t$10225$xgWN3
                                ((case-lambda
                                   ((g$p$10226$xgWN3)
                                    (if (not (eq? g$label$10217$xgWN3
                                                  (car g$p$10226$xgWN3)))
                                      (if (not g$sd?$10218$xgWN3)
                                        (set-car!
                                          g$p$10226$xgWN3
                                          g$label$10217$xgWN3)
                                        (g$syntax-violation$10167$xgWN3
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$10216$xgWN3))
                                      (void))))
                                 g$t$10225$xgWN3)
                                (begin
                                  (if (g$rib-cache$9638$xgWN3 g$rib$10215$xgWN3)
                                    (g$hashtable-update!$6862$xgWN3
                                      (g$rib-cache$9638$xgWN3 g$rib$10215$xgWN3)
                                      g$sym$10220$xgWN3
                                      (case-lambda
                                        ((g$e$10227$xgWN3)
                                         (cons
                                           (cons
                                             g$mark*$10221$xgWN3
                                             g$label$10217$xgWN3)
                                           g$e$10227$xgWN3)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$9639$xgWN3
                                    g$rib$10215$xgWN3
                                    (cons g$sym$10220$xgWN3 g$sym*$10222$xgWN3))
                                  (g$set-rib-mark**!$9640$xgWN3
                                    g$rib$10215$xgWN3
                                    (cons
                                      g$mark*$10221$xgWN3
                                      (g$rib-mark**$9635$xgWN3
                                        g$rib$10215$xgWN3)))
                                  (g$set-rib-label*!$9641$xgWN3
                                    g$rib$10215$xgWN3
                                    (cons
                                      g$label$10217$xgWN3
                                      (g$rib-label*$9636$xgWN3
                                        g$rib$10215$xgWN3)))))))
                           (if (g$memq$6077$xgWN3
                                 g$sym$10220$xgWN3
                                 (g$rib-sym*$9634$xgWN3 g$rib$10215$xgWN3))
                             (begin
                               '#f
                               (g$find$10219$xgWN3
                                 g$sym$10220$xgWN3
                                 g$mark*$10221$xgWN3
                                 g$sym*$10222$xgWN3
                                 (g$rib-mark**$9635$xgWN3 g$rib$10215$xgWN3)
                                 (g$rib-label*$9636$xgWN3 g$rib$10215$xgWN3)))
                             '#f)))))
                     (g$find-label$9646$xgWN3
                       g$rib$10215$xgWN3
                       g$sym$10220$xgWN3
                       g$mark*$10221$xgWN3))))
                 (g$rib-sym*$9634$xgWN3 g$rib$10215$xgWN3))))
             (g$id->sym$9687$xgWN3 g$id$10216$xgWN3)
             (g$stx-mark*$9661$xgWN3 g$id$10216$xgWN3)))))))
   (g$extend-rib/nc!$9648$xgWN3
     g$extend-rib/nc!$13467$xgWN3
     (case-lambda
       ((g$rib$10233$xgWN3 g$id$10234$xgWN3 g$label$10235$xgWN3)
        ((case-lambda
           ((g$sym$10236$xgWN3 g$mark*$10237$xgWN3)
            ((case-lambda
               ((g$sym*$10238$xgWN3)
                (begin
                  (if (g$rib-cache$9638$xgWN3 g$rib$10233$xgWN3)
                    (g$hashtable-update!$6862$xgWN3
                      (g$rib-cache$9638$xgWN3 g$rib$10233$xgWN3)
                      g$sym$10236$xgWN3
                      (case-lambda
                        ((g$e$10239$xgWN3)
                         (cons
                           (cons g$mark*$10237$xgWN3 g$label$10235$xgWN3)
                           g$e$10239$xgWN3)))
                      '())
                    (void))
                  (g$set-rib-sym*!$9639$xgWN3
                    g$rib$10233$xgWN3
                    (cons g$sym$10236$xgWN3 g$sym*$10238$xgWN3))
                  (g$set-rib-mark**!$9640$xgWN3
                    g$rib$10233$xgWN3
                    (cons
                      g$mark*$10237$xgWN3
                      (g$rib-mark**$9635$xgWN3 g$rib$10233$xgWN3)))
                  (g$set-rib-label*!$9641$xgWN3
                    g$rib$10233$xgWN3
                    (cons
                      g$label$10235$xgWN3
                      (g$rib-label*$9636$xgWN3 g$rib$10233$xgWN3))))))
             (g$rib-sym*$9634$xgWN3 g$rib$10233$xgWN3))))
         (g$id->sym$9687$xgWN3 g$id$10234$xgWN3)
         (g$stx-mark*$9661$xgWN3 g$id$10234$xgWN3)))))
   (g$make-rib-map$9649$xgWN3
     g$make-rib-map$13468$xgWN3
     (case-lambda
       ((g$sym*$10240$xgWN3)
        ((case-lambda
           ((g$ht$10241$xgWN3)
            ((letrec ((g$f$10242$xgWN3
                        (case-lambda
                          ((g$i$10243$xgWN3 g$sym*$10244$xgWN3)
                           (if (null? g$sym*$10244$xgWN3)
                             g$ht$10241$xgWN3
                             (begin
                               (g$hashtable-update!$6862$xgWN3
                                 g$ht$10241$xgWN3
                                 (car g$sym*$10244$xgWN3)
                                 (case-lambda
                                   ((g$x$10245$xgWN3)
                                    (cons g$i$10243$xgWN3 g$x$10245$xgWN3)))
                                 '())
                               (g$f$10242$xgWN3
                                 (+ g$i$10243$xgWN3 '1)
                                 (cdr g$sym*$10244$xgWN3))))))))
               g$f$10242$xgWN3)
             '0
             g$sym*$10240$xgWN3)))
         (g$make-eq-hashtable$6855$xgWN3)))))
   (g$seal-rib!$9650$xgWN3
     g$seal-rib!$13469$xgWN3
     (case-lambda
       ((g$rib$10246$xgWN3)
        ((case-lambda
           ((g$sym*$10247$xgWN3)
            (if (not (null? g$sym*$10247$xgWN3))
              (begin
                (g$set-rib-sym*!$9639$xgWN3
                  g$rib$10246$xgWN3
                  (g$list->vector$6751$xgWN3 g$sym*$10247$xgWN3))
                (g$set-rib-mark**!$9640$xgWN3
                  g$rib$10246$xgWN3
                  (g$list->vector$6751$xgWN3
                    (g$rib-mark**$9635$xgWN3 g$rib$10246$xgWN3)))
                (g$set-rib-label*!$9641$xgWN3
                  g$rib$10246$xgWN3
                  (g$list->vector$6751$xgWN3
                    (g$rib-label*$9636$xgWN3 g$rib$10246$xgWN3)))
                (g$set-rib-sealed/freq!$9642$xgWN3
                  g$rib$10246$xgWN3
                  (g$make-rib-map$9649$xgWN3 g$sym*$10247$xgWN3)))
              (void))))
         (g$rib-sym*$9634$xgWN3 g$rib$10246$xgWN3)))))
   (g$unseal-rib!$9651$xgWN3
     g$unseal-rib!$13470$xgWN3
     (case-lambda
       ((g$rib$10248$xgWN3)
        (if (g$rib-sealed/freq$9637$xgWN3 g$rib$10248$xgWN3)
          (begin
            (g$set-rib-sealed/freq!$9642$xgWN3 g$rib$10248$xgWN3 '#f)
            (g$set-rib-sym*!$9639$xgWN3
              g$rib$10248$xgWN3
              (vector->list (g$rib-sym*$9634$xgWN3 g$rib$10248$xgWN3)))
            (g$set-rib-mark**!$9640$xgWN3
              g$rib$10248$xgWN3
              (vector->list (g$rib-mark**$9635$xgWN3 g$rib$10248$xgWN3)))
            (g$set-rib-label*!$9641$xgWN3
              g$rib$10248$xgWN3
              (vector->list (g$rib-label*$9636$xgWN3 g$rib$10248$xgWN3))))
          (void)))))
   (g$make-full-rib$9652$xgWN3
     g$make-full-rib$13471$xgWN3
     (case-lambda
       ((g$id*$10249$xgWN3 g$label*$10250$xgWN3)
        ((case-lambda
           ((g$r$10251$xgWN3)
            (begin (g$seal-rib!$9650$xgWN3 g$r$10251$xgWN3) g$r$10251$xgWN3)))
         (g$make-rib$9633$xgWN3
           (g$map$6085$xgWN3 g$id->sym$9687$xgWN3 g$id*$10249$xgWN3)
           (g$map$6085$xgWN3 g$stx-mark*$9661$xgWN3 g$id*$10249$xgWN3)
           g$label*$10250$xgWN3
           '#f
           '#f)))))
   (g$7709$9653$xgWN3
     g$7709$13472$xgWN3
     (make-record-type-descriptor
       'stx
       '#f
       'g$7712$xgWN3
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$7711$9654$xgWN3 g$7711$13473$xgWN3 '#f)
   (g$7710$9655$xgWN3
     g$7710$13474$xgWN3
     (make-record-constructor-descriptor
       g$7709$9653$xgWN3
       '#f
       g$7711$9654$xgWN3))
   (g$stx?$9658$xgWN3
     g$stx?$13475$xgWN3
     (record-predicate g$7709$9653$xgWN3))
   (g$make-stx$9659$xgWN3
     g$make-stx$13476$xgWN3
     (record-constructor g$7710$9655$xgWN3))
   (g$stx-expr$9660$xgWN3
     g$stx-expr$13477$xgWN3
     (record-accessor g$7709$9653$xgWN3 '0))
   (g$stx-mark*$9661$xgWN3
     g$stx-mark*$13478$xgWN3
     (record-accessor g$7709$9653$xgWN3 '1))
   (g$stx-subst*$9662$xgWN3
     g$stx-subst*$13479$xgWN3
     (record-accessor g$7709$9653$xgWN3 '2))
   (g$stx-ae*$9663$xgWN3
     g$stx-ae*$13480$xgWN3
     (record-accessor g$7709$9653$xgWN3 '3))
   (g$set-stx-expr!$9664$xgWN3
     g$set-stx-expr!$13481$xgWN3
     (record-mutator g$7709$9653$xgWN3 '0))
   (g$set-stx-mark*!$9665$xgWN3
     g$set-stx-mark*!$13482$xgWN3
     (record-mutator g$7709$9653$xgWN3 '1))
   (g$set-stx-subst*!$9666$xgWN3
     g$set-stx-subst*!$13483$xgWN3
     (record-mutator g$7709$9653$xgWN3 '2))
   (g$set-stx-ae*!$9667$xgWN3
     g$set-stx-ae*!$13484$xgWN3
     (record-mutator g$7709$9653$xgWN3 '3))
   (g$rp$9668$xgWN3
     g$rp$13485$xgWN3
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$10252$xgWN3 g$p$10253$xgWN3 g$wr$10254$xgWN3)
          (begin
            (display '"#<syntax " g$p$10253$xgWN3)
            (write (g$stx->datum$9697$xgWN3 g$x$10252$xgWN3) g$p$10253$xgWN3)
            ((case-lambda
               ((g$expr$10255$xgWN3)
                (if (annotation? g$expr$10255$xgWN3)
                  ((case-lambda
                     ((g$src$10256$xgWN3)
                      (if (pair? g$src$10256$xgWN3)
                        (begin
                          (display '" (" g$p$10253$xgWN3)
                          (display (cdr g$src$10256$xgWN3) g$p$10253$xgWN3)
                          (display '" of " g$p$10253$xgWN3)
                          (display (car g$src$10256$xgWN3) g$p$10253$xgWN3)
                          (display '")" g$p$10253$xgWN3))
                        (void))))
                   (annotation-source g$expr$10255$xgWN3))
                  (void))))
             (g$stx-expr$9660$xgWN3 g$x$10252$xgWN3))
            (display '">" g$p$10253$xgWN3))))))
   (g$datum->stx$9669$xgWN3
     g$datum->stx$13486$xgWN3
     (case-lambda
       ((g$id$10257$xgWN3 g$datum$10258$xgWN3)
        (g$make-stx$9659$xgWN3
          g$datum$10258$xgWN3
          (g$stx-mark*$9661$xgWN3 g$id$10257$xgWN3)
          (g$stx-subst*$9662$xgWN3 g$id$10257$xgWN3)
          (g$stx-ae*$9663$xgWN3 g$id$10257$xgWN3)))))
   (g$gen-mark$9670$xgWN3
     g$gen-mark$13487$xgWN3
     (case-lambda (() (string '#\m))))
   (g$anti-mark$9671$xgWN3 g$anti-mark$13488$xgWN3 '#f)
   (g$anti-mark?$9672$xgWN3 g$anti-mark?$13489$xgWN3 not)
   (g$join-wraps$9673$xgWN3
     g$join-wraps$13490$xgWN3
     (case-lambda
       ((g$m1*$10259$xgWN3
          g$s1*$10260$xgWN3
          g$ae1*$10261$xgWN3
          g$e$10262$xgWN3)
        (letrec* ((g$cancel$10263$xgWN3
                    (case-lambda
                      ((g$ls1$10267$xgWN3 g$ls2$10268$xgWN3)
                       ((letrec ((g$f$10269$xgWN3
                                   (case-lambda
                                     ((g$x$10270$xgWN3 g$ls1$10271$xgWN3)
                                      (if (null? g$ls1$10271$xgWN3)
                                        (cdr g$ls2$10268$xgWN3)
                                        (cons
                                          g$x$10270$xgWN3
                                          (g$f$10269$xgWN3
                                            (car g$ls1$10271$xgWN3)
                                            (cdr g$ls1$10271$xgWN3))))))))
                          g$f$10269$xgWN3)
                        (car g$ls1$10267$xgWN3)
                        (cdr g$ls1$10267$xgWN3))))))
          ((case-lambda
             ((g$m2*$10264$xgWN3 g$s2*$10265$xgWN3 g$ae2*$10266$xgWN3)
              (if (if (not (null? g$m1*$10259$xgWN3))
                    (if (not (null? g$m2*$10264$xgWN3))
                      (begin
                        '#f
                        (g$anti-mark?$9672$xgWN3 (car g$m2*$10264$xgWN3)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$10263$xgWN3 g$m1*$10259$xgWN3 g$m2*$10264$xgWN3)
                  (g$cancel$10263$xgWN3 g$s1*$10260$xgWN3 g$s2*$10265$xgWN3)
                  (g$cancel$10263$xgWN3 g$ae1*$10261$xgWN3 g$ae2*$10266$xgWN3))
                (values
                  (append g$m1*$10259$xgWN3 g$m2*$10264$xgWN3)
                  (append g$s1*$10260$xgWN3 g$s2*$10265$xgWN3)
                  (append g$ae1*$10261$xgWN3 g$ae2*$10266$xgWN3)))))
           (g$stx-mark*$9661$xgWN3 g$e$10262$xgWN3)
           (g$stx-subst*$9662$xgWN3 g$e$10262$xgWN3)
           (g$stx-ae*$9663$xgWN3 g$e$10262$xgWN3))))))
   (g$mkstx$9674$xgWN3
     g$mkstx$13491$xgWN3
     (case-lambda
       ((g$e$10272$xgWN3 g$m*$10273$xgWN3 g$s*$10274$xgWN3 g$ae*$10275$xgWN3)
        (if (if (g$stx?$9658$xgWN3 g$e$10272$xgWN3)
              (begin '#f (not (g$top-marked?$9620$xgWN3 g$m*$10273$xgWN3)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$9673$xgWN3
                 g$m*$10273$xgWN3
                 g$s*$10274$xgWN3
                 g$ae*$10275$xgWN3
                 g$e$10272$xgWN3)))
            (case-lambda
              ((g$m*$10279$xgWN3 g$s*$10280$xgWN3 g$ae*$10281$xgWN3)
               ((case-lambda
                  ((g$ae*$10282$xgWN3 g$s*$10283$xgWN3 g$m*$10284$xgWN3)
                   (g$make-stx$9659$xgWN3
                     (g$stx-expr$9660$xgWN3 g$e$10272$xgWN3)
                     g$m*$10284$xgWN3
                     g$s*$10283$xgWN3
                     g$ae*$10282$xgWN3)))
                g$ae*$10281$xgWN3
                g$s*$10280$xgWN3
                g$m*$10279$xgWN3))))
          (g$make-stx$9659$xgWN3
            g$e$10272$xgWN3
            g$m*$10273$xgWN3
            g$s*$10274$xgWN3
            g$ae*$10275$xgWN3)))))
   (g$add-mark$9675$xgWN3
     g$add-mark$13492$xgWN3
     (case-lambda
       ((g$m$10285$xgWN3 g$e$10286$xgWN3 g$ae$10287$xgWN3)
        (g$mkstx$9674$xgWN3
          g$e$10286$xgWN3
          (list g$m$10285$xgWN3)
          '(shift)
          (list g$ae$10287$xgWN3)))))
   (g$add-subst$9676$xgWN3
     g$add-subst$13493$xgWN3
     (case-lambda
       ((g$subst$10288$xgWN3 g$e$10289$xgWN3)
        (g$mkstx$9674$xgWN3
          g$e$10289$xgWN3
          '()
          (list g$subst$10288$xgWN3)
          '()))))
   (g$syntax-kind?$9677$xgWN3
     g$syntax-kind?$13494$xgWN3
     (case-lambda
       ((g$x$10290$xgWN3 g$p?$10291$xgWN3)
        (if (g$stx?$9658$xgWN3 g$x$10290$xgWN3)
          (g$syntax-kind?$9677$xgWN3
            (g$stx-expr$9660$xgWN3 g$x$10290$xgWN3)
            g$p?$10291$xgWN3)
          (if (annotation? g$x$10290$xgWN3)
            (g$syntax-kind?$9677$xgWN3
              (annotation-expression g$x$10290$xgWN3)
              g$p?$10291$xgWN3)
            (g$p?$10291$xgWN3 g$x$10290$xgWN3))))))
   (g$syntax-vector->list$9678$xgWN3
     g$syntax-vector->list$13495$xgWN3
     (case-lambda
       ((g$x$10292$xgWN3)
        (if (g$stx?$9658$xgWN3 g$x$10292$xgWN3)
          ((case-lambda
             ((g$ls$10293$xgWN3
                g$m*$10294$xgWN3
                g$s*$10295$xgWN3
                g$ae*$10296$xgWN3)
              (g$map$6085$xgWN3
                (case-lambda
                  ((g$x$10297$xgWN3)
                   (g$mkstx$9674$xgWN3
                     g$x$10297$xgWN3
                     g$m*$10294$xgWN3
                     g$s*$10295$xgWN3
                     g$ae*$10296$xgWN3)))
                g$ls$10293$xgWN3)))
           (g$syntax-vector->list$9678$xgWN3
             (g$stx-expr$9660$xgWN3 g$x$10292$xgWN3))
           (g$stx-mark*$9661$xgWN3 g$x$10292$xgWN3)
           (g$stx-subst*$9662$xgWN3 g$x$10292$xgWN3)
           (g$stx-ae*$9663$xgWN3 g$x$10292$xgWN3))
          (if (annotation? g$x$10292$xgWN3)
            (g$syntax-vector->list$9678$xgWN3
              (annotation-expression g$x$10292$xgWN3))
            (if (g$vector?$6754$xgWN3 g$x$10292$xgWN3)
              (vector->list g$x$10292$xgWN3)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$10292$xgWN3)))))))
   (g$syntax-pair?$9679$xgWN3
     g$syntax-pair?$13496$xgWN3
     (case-lambda
       ((g$x$10298$xgWN3) (g$syntax-kind?$9677$xgWN3 g$x$10298$xgWN3 pair?))))
   (g$syntax-vector?$9680$xgWN3
     g$syntax-vector?$13497$xgWN3
     (case-lambda
       ((g$x$10299$xgWN3)
        (g$syntax-kind?$9677$xgWN3 g$x$10299$xgWN3 g$vector?$6754$xgWN3))))
   (g$syntax-null?$9681$xgWN3
     g$syntax-null?$13498$xgWN3
     (case-lambda
       ((g$x$10300$xgWN3) (g$syntax-kind?$9677$xgWN3 g$x$10300$xgWN3 null?))))
   (g$syntax-list?$9682$xgWN3
     g$syntax-list?$13499$xgWN3
     (case-lambda
       ((g$x$10301$xgWN3)
        ((case-lambda
           ((g$t$10302$xgWN3)
            (if g$t$10302$xgWN3
              g$t$10302$xgWN3
              (begin
                '#f
                (if (g$syntax-pair?$9679$xgWN3 g$x$10301$xgWN3)
                  (begin
                    '#f
                    (g$syntax-list?$9682$xgWN3
                      (g$syntax-cdr$9684$xgWN3 g$x$10301$xgWN3)))
                  '#f)))))
         (g$syntax-null?$9681$xgWN3 g$x$10301$xgWN3)))))
   (g$syntax-car$9683$xgWN3
     g$syntax-car$13500$xgWN3
     (case-lambda
       ((g$x$10303$xgWN3)
        (if (g$stx?$9658$xgWN3 g$x$10303$xgWN3)
          (g$mkstx$9674$xgWN3
            (g$syntax-car$9683$xgWN3 (g$stx-expr$9660$xgWN3 g$x$10303$xgWN3))
            (g$stx-mark*$9661$xgWN3 g$x$10303$xgWN3)
            (g$stx-subst*$9662$xgWN3 g$x$10303$xgWN3)
            (g$stx-ae*$9663$xgWN3 g$x$10303$xgWN3))
          (if (annotation? g$x$10303$xgWN3)
            (g$syntax-car$9683$xgWN3 (annotation-expression g$x$10303$xgWN3))
            (if (pair? g$x$10303$xgWN3)
              (car g$x$10303$xgWN3)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$10303$xgWN3)))))))
   (g$syntax-cdr$9684$xgWN3
     g$syntax-cdr$13501$xgWN3
     (case-lambda
       ((g$x$10304$xgWN3)
        (if (g$stx?$9658$xgWN3 g$x$10304$xgWN3)
          (g$mkstx$9674$xgWN3
            (g$syntax-cdr$9684$xgWN3 (g$stx-expr$9660$xgWN3 g$x$10304$xgWN3))
            (g$stx-mark*$9661$xgWN3 g$x$10304$xgWN3)
            (g$stx-subst*$9662$xgWN3 g$x$10304$xgWN3)
            (g$stx-ae*$9663$xgWN3 g$x$10304$xgWN3))
          (if (annotation? g$x$10304$xgWN3)
            (g$syntax-cdr$9684$xgWN3 (annotation-expression g$x$10304$xgWN3))
            (if (pair? g$x$10304$xgWN3)
              (cdr g$x$10304$xgWN3)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$10304$xgWN3)))))))
   (g$syntax->list$9685$xgWN3
     g$syntax->list$13502$xgWN3
     (case-lambda
       ((g$x$10305$xgWN3)
        (if (g$syntax-pair?$9679$xgWN3 g$x$10305$xgWN3)
          (cons
            (g$syntax-car$9683$xgWN3 g$x$10305$xgWN3)
            (g$syntax->list$9685$xgWN3
              (g$syntax-cdr$9684$xgWN3 g$x$10305$xgWN3)))
          (if (g$syntax-null?$9681$xgWN3 g$x$10305$xgWN3)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$10305$xgWN3))))))
   (g$id?$9686$xgWN3
     g$id?$13503$xgWN3
     (case-lambda
       ((g$x$10306$xgWN3)
        (if (g$stx?$9658$xgWN3 g$x$10306$xgWN3)
          (begin
            '#f
            ((case-lambda
               ((g$expr$10307$xgWN3)
                (g$symbol?$6756$xgWN3
                  (if (annotation? g$expr$10307$xgWN3)
                    (annotation-stripped g$expr$10307$xgWN3)
                    g$expr$10307$xgWN3))))
             (g$stx-expr$9660$xgWN3 g$x$10306$xgWN3)))
          '#f))))
   (g$id->sym$9687$xgWN3
     g$id->sym$13504$xgWN3
     (case-lambda
       ((g$x$10308$xgWN3)
        (begin
          (if (not (g$stx?$9658$xgWN3 g$x$10308$xgWN3))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$10308$xgWN3)
            (void))
          ((case-lambda
             ((g$expr$10309$xgWN3)
              ((case-lambda
                 ((g$sym$10310$xgWN3)
                  (if (g$symbol?$6756$xgWN3 g$sym$10310$xgWN3)
                    g$sym$10310$xgWN3
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$10308$xgWN3))))
               (if (annotation? g$expr$10309$xgWN3)
                 (annotation-stripped g$expr$10309$xgWN3)
                 g$expr$10309$xgWN3))))
           (g$stx-expr$9660$xgWN3 g$x$10308$xgWN3))))))
   (g$same-marks?$9688$xgWN3
     g$same-marks?$13505$xgWN3
     (case-lambda
       ((g$x$10311$xgWN3 g$y$10312$xgWN3)
        ((case-lambda
           ((g$t$10313$xgWN3)
            (if g$t$10313$xgWN3
              g$t$10313$xgWN3
              (begin
                '#f
                (if (pair? g$x$10311$xgWN3)
                  (if (pair? g$y$10312$xgWN3)
                    (if (eq? (car g$x$10311$xgWN3) (car g$y$10312$xgWN3))
                      (begin
                        '#f
                        (g$same-marks?$9688$xgWN3
                          (cdr g$x$10311$xgWN3)
                          (cdr g$y$10312$xgWN3)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$10311$xgWN3)
           (begin '#f (null? g$y$10312$xgWN3))
           '#f)))))
   (g$bound-id=?$9689$xgWN3
     g$bound-id=?$13506$xgWN3
     (case-lambda
       ((g$x$10314$xgWN3 g$y$10315$xgWN3)
        (if (eq? (g$id->sym$9687$xgWN3 g$x$10314$xgWN3)
                 (g$id->sym$9687$xgWN3 g$y$10315$xgWN3))
          (begin
            '#f
            (g$same-marks?$9688$xgWN3
              (g$stx-mark*$9661$xgWN3 g$x$10314$xgWN3)
              (g$stx-mark*$9661$xgWN3 g$y$10315$xgWN3)))
          '#f))))
   (g$free-id=?$9690$xgWN3
     g$free-id=?$13507$xgWN3
     (case-lambda
       ((g$i$10316$xgWN3 g$j$10317$xgWN3)
        ((case-lambda
           ((g$t0$10318$xgWN3 g$t1$10319$xgWN3)
            (if ((case-lambda
                   ((g$t$10320$xgWN3)
                    (if g$t$10320$xgWN3
                      g$t$10320$xgWN3
                      (begin '#f g$t1$10319$xgWN3))))
                 g$t0$10318$xgWN3)
              (eq? g$t0$10318$xgWN3 g$t1$10319$xgWN3)
              (eq? (g$id->sym$9687$xgWN3 g$i$10316$xgWN3)
                   (g$id->sym$9687$xgWN3 g$j$10317$xgWN3)))))
         (g$id->real-label$9700$xgWN3 g$i$10316$xgWN3)
         (g$id->real-label$9700$xgWN3 g$j$10317$xgWN3)))))
   (g$valid-bound-ids?$9691$xgWN3
     g$valid-bound-ids?$13508$xgWN3
     (case-lambda
       ((g$id*$10321$xgWN3)
        (if (g$for-all$6083$xgWN3 g$id?$9686$xgWN3 g$id*$10321$xgWN3)
          (begin '#f (g$distinct-bound-ids?$9692$xgWN3 g$id*$10321$xgWN3))
          '#f))))
   (g$distinct-bound-ids?$9692$xgWN3
     g$distinct-bound-ids?$13509$xgWN3
     (case-lambda
       ((g$id*$10322$xgWN3)
        ((case-lambda
           ((g$t$10323$xgWN3)
            (if g$t$10323$xgWN3
              g$t$10323$xgWN3
              (begin
                '#f
                (if (not (g$bound-id-member?$9693$xgWN3
                           (car g$id*$10322$xgWN3)
                           (cdr g$id*$10322$xgWN3)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$9692$xgWN3 (cdr g$id*$10322$xgWN3)))
                  '#f)))))
         (null? g$id*$10322$xgWN3)))))
   (g$bound-id-member?$9693$xgWN3
     g$bound-id-member?$13510$xgWN3
     (case-lambda
       ((g$id$10324$xgWN3 g$id*$10325$xgWN3)
        (if (pair? g$id*$10325$xgWN3)
          (begin
            '#f
            ((case-lambda
               ((g$t$10326$xgWN3)
                (if g$t$10326$xgWN3
                  g$t$10326$xgWN3
                  (begin
                    '#f
                    (g$bound-id-member?$9693$xgWN3
                      g$id$10324$xgWN3
                      (cdr g$id*$10325$xgWN3))))))
             (g$bound-id=?$9689$xgWN3
               g$id$10324$xgWN3
               (car g$id*$10325$xgWN3))))
          '#f))))
   (g$self-evaluating?$9694$xgWN3
     g$self-evaluating?$13511$xgWN3
     (case-lambda
       ((g$x$10327$xgWN3)
        ((case-lambda
           ((g$t$10328$xgWN3)
            (if g$t$10328$xgWN3
              g$t$10328$xgWN3
              ((case-lambda
                 ((g$t$10329$xgWN3)
                  (if g$t$10329$xgWN3
                    g$t$10329$xgWN3
                    ((case-lambda
                       ((g$t$10330$xgWN3)
                        (if g$t$10330$xgWN3
                          g$t$10330$xgWN3
                          ((case-lambda
                             ((g$t$10331$xgWN3)
                              (if g$t$10331$xgWN3
                                g$t$10331$xgWN3
                                (begin
                                  '#f
                                  (g$bytevector?$6755$xgWN3 g$x$10327$xgWN3)))))
                           (g$boolean?$6757$xgWN3 g$x$10327$xgWN3)))))
                     (g$char?$6753$xgWN3 g$x$10327$xgWN3)))))
               (string? g$x$10327$xgWN3)))))
         (number? g$x$10327$xgWN3)))))
   (g$strip-annotations$9695$xgWN3
     g$strip-annotations$13512$xgWN3
     (case-lambda
       ((g$x$10332$xgWN3)
        (if (pair? g$x$10332$xgWN3)
          (cons
            (g$strip-annotations$9695$xgWN3 (car g$x$10332$xgWN3))
            (g$strip-annotations$9695$xgWN3 (cdr g$x$10332$xgWN3)))
          (if (g$vector?$6754$xgWN3 g$x$10332$xgWN3)
            (g$vector-map$6816$xgWN3
              g$strip-annotations$9695$xgWN3
              g$x$10332$xgWN3)
            (if (annotation? g$x$10332$xgWN3)
              (annotation-stripped g$x$10332$xgWN3)
              g$x$10332$xgWN3))))))
   (g$strip$9696$xgWN3
     g$strip$13513$xgWN3
     (case-lambda
       ((g$x$10333$xgWN3 g$m*$10334$xgWN3)
        (if (g$top-marked?$9620$xgWN3 g$m*$10334$xgWN3)
          (if ((case-lambda
                 ((g$t$10335$xgWN3)
                  (if g$t$10335$xgWN3
                    g$t$10335$xgWN3
                    ((case-lambda
                       ((g$t$10336$xgWN3)
                        (if g$t$10336$xgWN3
                          g$t$10336$xgWN3
                          (begin
                            '#f
                            (if (g$vector?$6754$xgWN3 g$x$10333$xgWN3)
                              (if (> (vector-length g$x$10333$xgWN3) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$10333$xgWN3 '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$10333$xgWN3)
                       (begin '#f (annotation? (car g$x$10333$xgWN3)))
                       '#f)))))
               (annotation? g$x$10333$xgWN3))
            (g$strip-annotations$9695$xgWN3 g$x$10333$xgWN3)
            g$x$10333$xgWN3)
          ((letrec ((g$f$10337$xgWN3
                      (case-lambda
                        ((g$x$10338$xgWN3)
                         (if (g$stx?$9658$xgWN3 g$x$10338$xgWN3)
                           (g$strip$9696$xgWN3
                             (g$stx-expr$9660$xgWN3 g$x$10338$xgWN3)
                             (g$stx-mark*$9661$xgWN3 g$x$10338$xgWN3))
                           (if (annotation? g$x$10338$xgWN3)
                             (annotation-stripped g$x$10338$xgWN3)
                             (if (pair? g$x$10338$xgWN3)
                               ((case-lambda
                                  ((g$a$10339$xgWN3 g$d$10340$xgWN3)
                                   (if (if (eq? g$a$10339$xgWN3
                                                (car g$x$10338$xgWN3))
                                         (begin
                                           '#f
                                           (eq? g$d$10340$xgWN3
                                                (cdr g$x$10338$xgWN3)))
                                         '#f)
                                     g$x$10338$xgWN3
                                     (cons g$a$10339$xgWN3 g$d$10340$xgWN3))))
                                (g$f$10337$xgWN3 (car g$x$10338$xgWN3))
                                (g$f$10337$xgWN3 (cdr g$x$10338$xgWN3)))
                               (if (g$vector?$6754$xgWN3 g$x$10338$xgWN3)
                                 ((case-lambda
                                    ((g$old$10341$xgWN3)
                                     ((case-lambda
                                        ((g$new$10342$xgWN3)
                                         (if (g$for-all$6083$xgWN3
                                               eq?
                                               g$old$10341$xgWN3
                                               g$new$10342$xgWN3)
                                           g$x$10338$xgWN3
                                           (g$list->vector$6751$xgWN3
                                             g$new$10342$xgWN3))))
                                      (g$map$6085$xgWN3
                                        g$f$10337$xgWN3
                                        g$old$10341$xgWN3))))
                                  (vector->list g$x$10338$xgWN3))
                                 g$x$10338$xgWN3))))))))
             g$f$10337$xgWN3)
           g$x$10333$xgWN3)))))
   (g$stx->datum$9697$xgWN3
     g$stx->datum$13514$xgWN3
     (case-lambda
       ((g$x$10343$xgWN3) (g$strip$9696$xgWN3 g$x$10343$xgWN3 '()))))
   (g$same-marks*?$9698$xgWN3
     g$same-marks*?$13515$xgWN3
     (case-lambda
       ((g$mark*$10344$xgWN3 g$mark**$10345$xgWN3 g$si$10346$xgWN3)
        (if (null? g$si$10346$xgWN3)
          '#f
          (if (g$same-marks?$9688$xgWN3
                g$mark*$10344$xgWN3
                (vector-ref g$mark**$10345$xgWN3 (car g$si$10346$xgWN3)))
            (car g$si$10346$xgWN3)
            (g$same-marks*?$9698$xgWN3
              g$mark*$10344$xgWN3
              g$mark**$10345$xgWN3
              (cdr g$si$10346$xgWN3)))))))
   (g$id->label$9699$xgWN3
     g$id->label$13516$xgWN3
     (case-lambda
       ((g$id$10347$xgWN3)
        ((case-lambda
           ((g$t$10348$xgWN3)
            (if g$t$10348$xgWN3
              g$t$10348$xgWN3
              (begin
                '#f
                ((case-lambda
                   ((g$t$10349$xgWN3)
                    (if g$t$10349$xgWN3
                      ((case-lambda
                         ((g$env$10350$xgWN3)
                          ((case-lambda
                             ((g$rib$10351$xgWN3)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$9625$xgWN3
                                     g$id$10347$xgWN3
                                     g$rib$10351$xgWN3
                                     '#f)))
                                (case-lambda
                                  ((g$lab$10354$xgWN3 g$_loc$10355$xgWN3)
                                   ((case-lambda
                                      ((g$_loc$10356$xgWN3 g$lab$10357$xgWN3)
                                       (begin
                                         (g$extend-rib!$9647$xgWN3
                                           g$rib$10351$xgWN3
                                           g$id$10347$xgWN3
                                           g$lab$10357$xgWN3
                                           '#t)
                                         g$lab$10357$xgWN3)))
                                    g$_loc$10355$xgWN3
                                    g$lab$10354$xgWN3))))))
                           (g$interaction-env-rib$10133$xgWN3
                             g$env$10350$xgWN3))))
                       g$t$10349$xgWN3)
                      '#f)))
                 (g$top-level-context$10175$xgWN3))))))
         (g$id->real-label$9700$xgWN3 g$id$10347$xgWN3)))))
   (g$id->real-label$9700$xgWN3
     g$id->real-label$13517$xgWN3
     (case-lambda
       ((g$id$10358$xgWN3)
        ((case-lambda
           ((g$sym$10359$xgWN3)
            ((letrec ((g$search$10360$xgWN3
                        (case-lambda
                          ((g$subst*$10361$xgWN3 g$mark*$10362$xgWN3)
                           (if (null? g$subst*$10361$xgWN3)
                             '#f
                             (if (eq? (car g$subst*$10361$xgWN3) 'shift)
                               (g$search$10360$xgWN3
                                 (cdr g$subst*$10361$xgWN3)
                                 (cdr g$mark*$10362$xgWN3))
                               ((case-lambda
                                  ((g$rib$10363$xgWN3)
                                   ((case-lambda
                                      ((g$t$10364$xgWN3)
                                       (if g$t$10364$xgWN3
                                         ((case-lambda
                                            ((g$ht$10365$xgWN3)
                                             ((case-lambda
                                                ((g$si$10366$xgWN3)
                                                 ((case-lambda
                                                    ((g$i$10367$xgWN3)
                                                     (if g$i$10367$xgWN3
                                                       (vector-ref
                                                         (g$rib-label*$9636$xgWN3
                                                           g$rib$10363$xgWN3)
                                                         g$i$10367$xgWN3)
                                                       (g$search$10360$xgWN3
                                                         (cdr g$subst*$10361$xgWN3)
                                                         g$mark*$10362$xgWN3))))
                                                  (if g$si$10366$xgWN3
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$9698$xgWN3
                                                        g$mark*$10362$xgWN3
                                                        (g$rib-mark**$9635$xgWN3
                                                          g$rib$10363$xgWN3)
                                                        (g$reverse$6763$xgWN3
                                                          g$si$10366$xgWN3)))
                                                    '#f))))
                                              (g$hashtable-ref$6858$xgWN3
                                                g$ht$10365$xgWN3
                                                g$sym$10359$xgWN3
                                                '#f))))
                                          g$t$10364$xgWN3)
                                         ((case-lambda
                                            ((g$t$10368$xgWN3)
                                             (if g$t$10368$xgWN3
                                               g$t$10368$xgWN3
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$10369$xgWN3
                                                             (case-lambda
                                                               ((g$sym*$10370$xgWN3
                                                                  g$mark**$10371$xgWN3
                                                                  g$label*$10372$xgWN3)
                                                                (if (null?
                                                                      g$sym*$10370$xgWN3)
                                                                  (g$search$10360$xgWN3
                                                                    (cdr g$subst*$10361$xgWN3)
                                                                    g$mark*$10362$xgWN3)
                                                                  (if (if (eq? (car g$sym*$10370$xgWN3)
                                                                               g$sym$10359$xgWN3)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$9688$xgWN3
                                                                            (car g$mark**$10371$xgWN3)
                                                                            g$mark*$10362$xgWN3))
                                                                        '#f)
                                                                    (car g$label*$10372$xgWN3)
                                                                    (g$f$10369$xgWN3
                                                                      (cdr g$sym*$10370$xgWN3)
                                                                      (cdr g$mark**$10371$xgWN3)
                                                                      (cdr g$label*$10372$xgWN3))))))))
                                                    g$f$10369$xgWN3)
                                                  (g$rib-sym*$9634$xgWN3
                                                    g$rib$10363$xgWN3)
                                                  (g$rib-mark**$9635$xgWN3
                                                    g$rib$10363$xgWN3)
                                                  (g$rib-label*$9636$xgWN3
                                                    g$rib$10363$xgWN3))))))
                                          (g$find-label$9646$xgWN3
                                            g$rib$10363$xgWN3
                                            g$sym$10359$xgWN3
                                            g$mark*$10362$xgWN3)))))
                                    (g$rib-sealed/freq$9637$xgWN3
                                      g$rib$10363$xgWN3))))
                                (car g$subst*$10361$xgWN3))))))))
               g$search$10360$xgWN3)
             (g$stx-subst*$9662$xgWN3 g$id$10358$xgWN3)
             (g$stx-mark*$9661$xgWN3 g$id$10358$xgWN3))))
         (g$id->sym$9687$xgWN3 g$id$10358$xgWN3)))))
   (g$label->binding$9701$xgWN3
     g$label->binding$13518$xgWN3
     (case-lambda
       ((g$x$10373$xgWN3 g$r$10374$xgWN3)
        (if (not g$x$10373$xgWN3)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$10375$xgWN3)
              (if g$t$10375$xgWN3
                ((case-lambda
                   ((g$b$10376$xgWN3)
                    (if (if (pair? g$b$10376$xgWN3)
                          (begin '#f (eq? (car g$b$10376$xgWN3) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$6085$xgWN3
                          g$bless$10012$xgWN3
                          (cdr g$b$10376$xgWN3)))
                      (if (if (pair? g$b$10376$xgWN3)
                            (begin '#f (eq? (car g$b$10376$xgWN3) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$10377$xgWN3 g$loc$10378$xgWN3)
                            (cons '$rtd (symbol-value g$loc$10378$xgWN3))))
                         (g$cadr$6765$xgWN3 g$b$10376$xgWN3)
                         (g$cddr$6767$xgWN3 g$b$10376$xgWN3))
                        g$b$10376$xgWN3))))
                 g$t$10375$xgWN3)
                ((case-lambda
                   ((g$t$10379$xgWN3)
                    (if g$t$10379$xgWN3
                      (cdr g$t$10379$xgWN3)
                      ((case-lambda
                         ((g$t$10380$xgWN3)
                          (if g$t$10380$xgWN3
                            ((case-lambda
                               ((g$env$10381$xgWN3)
                                ((case-lambda
                                   ((g$t$10382$xgWN3)
                                    (if g$t$10382$xgWN3
                                      ((case-lambda
                                         ((g$p$10383$xgWN3)
                                          (g$cons*$6087$xgWN3
                                            'lexical
                                            (cdr g$p$10383$xgWN3)
                                            '#f)))
                                       g$t$10382$xgWN3)
                                      '(displaced-lexical . #f))))
                                 (g$assq$6073$xgWN3
                                   g$x$10373$xgWN3
                                   (g$interaction-env-locs$10135$xgWN3
                                     g$env$10381$xgWN3)))))
                             g$t$10380$xgWN3)
                            '(displaced-lexical . #f))))
                       (g$top-level-context$10175$xgWN3)))))
                 (g$assq$6073$xgWN3 g$x$10373$xgWN3 g$r$10374$xgWN3)))))
           (g$imported-label->binding$9424$xgWN3 g$x$10373$xgWN3))))))
   (g$make-binding$9702$xgWN3 g$make-binding$13519$xgWN3 cons)
   (g$binding-type$9703$xgWN3 g$binding-type$13520$xgWN3 car)
   (g$binding-value$9704$xgWN3 g$binding-value$13521$xgWN3 cdr)
   (g$raise-unbound-error$9705$xgWN3
     g$raise-unbound-error$13522$xgWN3
     (case-lambda
       ((g$id$10384$xgWN3)
        (g$syntax-violation*$10166$xgWN3
          '#f
          '"unbound identifier"
          g$id$10384$xgWN3
          (g$make-undefined-violation$7511$xgWN3)))))
   (g$syntax-type$9706$xgWN3
     g$syntax-type$13523$xgWN3
     (case-lambda
       ((g$e$10385$xgWN3 g$r$10386$xgWN3)
        (if (g$id?$9686$xgWN3 g$e$10385$xgWN3)
          ((case-lambda
             ((g$id$10387$xgWN3)
              ((case-lambda
                 ((g$label$10388$xgWN3)
                  ((case-lambda
                     ((g$b$10389$xgWN3)
                      ((case-lambda
                         ((g$type$10390$xgWN3)
                          (begin
                            (if (not g$label$10388$xgWN3)
                              (g$raise-unbound-error$9705$xgWN3
                                g$id$10387$xgWN3)
                              (void))
                            ((case-lambda
                               ((g$t$10391$xgWN3)
                                (if (g$memv$6078$xgWN3
                                      g$t$10391$xgWN3
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$10390$xgWN3
                                    (g$binding-value$9704$xgWN3 g$b$10389$xgWN3)
                                    g$id$10387$xgWN3)
                                  (values 'other '#f '#f))))
                             g$type$10390$xgWN3))))
                       (g$binding-type$9703$xgWN3 g$b$10389$xgWN3))))
                   (g$label->binding$9701$xgWN3
                     g$label$10388$xgWN3
                     g$r$10386$xgWN3))))
               (g$id->label$9699$xgWN3 g$id$10387$xgWN3))))
           g$e$10385$xgWN3)
          (if (g$syntax-pair?$9679$xgWN3 g$e$10385$xgWN3)
            ((case-lambda
               ((g$id$10392$xgWN3)
                (if (g$id?$9686$xgWN3 g$id$10392$xgWN3)
                  ((case-lambda
                     ((g$label$10393$xgWN3)
                      ((case-lambda
                         ((g$b$10394$xgWN3)
                          ((case-lambda
                             ((g$type$10395$xgWN3)
                              (begin
                                (if (not g$label$10393$xgWN3)
                                  (g$raise-unbound-error$9705$xgWN3
                                    g$id$10392$xgWN3)
                                  (void))
                                ((case-lambda
                                   ((g$t$10396$xgWN3)
                                    (if (g$memv$6078$xgWN3
                                          g$t$10396$xgWN3
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$10395$xgWN3
                                        (g$binding-value$9704$xgWN3
                                          g$b$10394$xgWN3)
                                        g$id$10392$xgWN3)
                                      (values 'call '#f '#f))))
                                 g$type$10395$xgWN3))))
                           (g$binding-type$9703$xgWN3 g$b$10394$xgWN3))))
                       (g$label->binding$9701$xgWN3
                         g$label$10393$xgWN3
                         g$r$10386$xgWN3))))
                   (g$id->label$9699$xgWN3 g$id$10392$xgWN3))
                  (values 'call '#f '#f))))
             (g$syntax-car$9683$xgWN3 g$e$10385$xgWN3))
            ((case-lambda
               ((g$d$10397$xgWN3)
                (if (g$self-evaluating?$9694$xgWN3 g$d$10397$xgWN3)
                  (values 'constant g$d$10397$xgWN3 '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$9697$xgWN3 g$e$10385$xgWN3)))))))
   (g$sanitize-binding$9723$xgWN3
     g$sanitize-binding$13524$xgWN3
     (case-lambda
       ((g$x$10398$xgWN3 g$src$10399$xgWN3)
        (if (g$procedure?$6758$xgWN3 g$x$10398$xgWN3)
          (g$cons*$6087$xgWN3 'local-macro g$x$10398$xgWN3 g$src$10399$xgWN3)
          (if (if (pair? g$x$10398$xgWN3)
                (if (eq? (car g$x$10398$xgWN3) 'macro!)
                  (begin '#f (g$procedure?$6758$xgWN3 (cdr g$x$10398$xgWN3)))
                  '#f)
                '#f)
            (g$cons*$6087$xgWN3
              'local-macro!
              (cdr g$x$10398$xgWN3)
              g$src$10399$xgWN3)
            (if (if (pair? g$x$10398$xgWN3)
                  (begin '#f (eq? (car g$x$10398$xgWN3) '$rtd))
                  '#f)
              g$x$10398$xgWN3
              (if (if (pair? g$x$10398$xgWN3)
                    (begin '#f (eq? (car g$x$10398$xgWN3) 'ctv))
                    '#f)
                (g$cons*$6087$xgWN3
                  'local-ctv
                  (cdr g$x$10398$xgWN3)
                  g$src$10399$xgWN3)
                (assertion-violation
                  'expand
                  '"invalid transformer"
                  g$x$10398$xgWN3))))))))
   (g$make-variable-transformer$9724$xgWN3
     g$make-variable-transformer$13525$xgWN3
     (case-lambda
       ((g$x$10400$xgWN3)
        (if (g$procedure?$6758$xgWN3 g$x$10400$xgWN3)
          (cons 'macro! g$x$10400$xgWN3)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$10400$xgWN3)))))
   (g$make-compile-time-value$9725$xgWN3
     g$make-compile-time-value$13526$xgWN3
     (case-lambda ((g$x$10401$xgWN3) (cons 'ctv g$x$10401$xgWN3))))
   (g$variable-transformer?$9726$xgWN3
     g$variable-transformer?$13527$xgWN3
     (case-lambda
       ((g$x$10402$xgWN3)
        (if (pair? g$x$10402$xgWN3)
          (if (eq? (car g$x$10402$xgWN3) 'macro!)
            (begin '#f (g$procedure?$6758$xgWN3 (cdr g$x$10402$xgWN3)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$9727$xgWN3
     g$variable-transformer-procedure$13528$xgWN3
     (case-lambda
       ((g$x$10403$xgWN3)
        (if (g$variable-transformer?$9726$xgWN3 g$x$10403$xgWN3)
          (cdr g$x$10403$xgWN3)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$10403$xgWN3)))))
   (g$make-eval-transformer$9728$xgWN3
     g$make-eval-transformer$13529$xgWN3
     (case-lambda
       ((g$x$10404$xgWN3)
        (g$sanitize-binding$9723$xgWN3
          (eval-core (g$expanded->core$9158$xgWN3 g$x$10404$xgWN3))
          g$x$10404$xgWN3))))
   (g$parse-define$9989$xgWN3
     g$parse-define$13530$xgWN3
     (case-lambda
       ((g$x$10405$xgWN3)
        ((case-lambda
           ((g$t$10406$xgWN3)
            ((case-lambda
               ((g$ls/false$10407$xgWN3)
                (if (if g$ls/false$10407$xgWN3
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$10408$xgWN3
                               g$fmls$10409$xgWN3
                               g$b$10410$xgWN3
                               g$b*$10411$xgWN3)
                             (g$id?$9686$xgWN3 g$id$10408$xgWN3)))
                          g$ls/false$10407$xgWN3))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$10412$xgWN3
                         g$fmls$10413$xgWN3
                         g$b$10414$xgWN3
                         g$b*$10415$xgWN3)
                       (begin
                         (g$verify-formals$10069$xgWN3
                           g$fmls$10413$xgWN3
                           g$x$10405$xgWN3)
                         (values
                           g$id$10412$xgWN3
                           (cons
                             'defun
                             (cons
                               g$fmls$10413$xgWN3
                               (cons g$b$10414$xgWN3 g$b*$10415$xgWN3)))))))
                    g$ls/false$10407$xgWN3)
                  ((case-lambda
                     ((g$t$10416$xgWN3)
                      ((case-lambda
                         ((g$ls/false$10417$xgWN3)
                          (if (if g$ls/false$10417$xgWN3
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$10418$xgWN3 g$val$10419$xgWN3)
                                       (g$id?$9686$xgWN3 g$id$10418$xgWN3)))
                                    g$ls/false$10417$xgWN3))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$10420$xgWN3 g$val$10421$xgWN3)
                                 (values
                                   g$id$10420$xgWN3
                                   (cons 'expr g$val$10421$xgWN3))))
                              g$ls/false$10417$xgWN3)
                            ((case-lambda
                               ((g$t$10422$xgWN3)
                                ((case-lambda
                                   ((g$ls/false$10423$xgWN3)
                                    (if (if g$ls/false$10423$xgWN3
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$10424$xgWN3)
                                                 (g$id?$9686$xgWN3
                                                   g$id$10424$xgWN3)))
                                              g$ls/false$10423$xgWN3))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$10425$xgWN3)
                                           (values
                                             g$id$10425$xgWN3
                                             (cons
                                               'expr
                                               (g$bless$10012$xgWN3 '(void))))))
                                        g$ls/false$10423$xgWN3)
                                      (g$syntax-violation$10167$xgWN3
                                        '#f
                                        '"invalid syntax"
                                        g$t$10422$xgWN3))))
                                 (g$syntax-dispatch$10049$xgWN3
                                   g$t$10422$xgWN3
                                   '(_ any)))))
                             g$t$10416$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$10416$xgWN3
                         '(_ any any)))))
                   g$t$10406$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10406$xgWN3
               '(_ (any . any) any . each-any)))))
         g$x$10405$xgWN3))))
   (g$parse-define-syntax$9990$xgWN3
     g$parse-define-syntax$13531$xgWN3
     (case-lambda
       ((g$x$10426$xgWN3)
        ((case-lambda
           ((g$t$10427$xgWN3)
            ((case-lambda
               ((g$ls/false$10428$xgWN3)
                (if (if g$ls/false$10428$xgWN3
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$10429$xgWN3 g$val$10430$xgWN3)
                             (g$id?$9686$xgWN3 g$id$10429$xgWN3)))
                          g$ls/false$10428$xgWN3))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$10431$xgWN3 g$val$10432$xgWN3)
                       (values g$id$10431$xgWN3 g$val$10432$xgWN3)))
                    g$ls/false$10428$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10427$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10427$xgWN3 '(_ any any)))))
         g$x$10426$xgWN3))))
   (g$scheme-stx-hashtable$9991$xgWN3
     g$scheme-stx-hashtable$13532$xgWN3
     (g$make-eq-hashtable$6855$xgWN3))
   (g$scheme-stx$9992$xgWN3
     g$scheme-stx$13533$xgWN3
     (case-lambda
       ((g$sym$10433$xgWN3)
        ((case-lambda
           ((g$t$10434$xgWN3)
            (if g$t$10434$xgWN3
              g$t$10434$xgWN3
              (begin
                '#f
                ((case-lambda
                   ((g$subst$10435$xgWN3)
                    ((case-lambda
                       ((g$stx$10436$xgWN3)
                        ((case-lambda
                           ((g$stx$10437$xgWN3)
                            (begin
                              (g$hashtable-set!$6859$xgWN3
                                g$scheme-stx-hashtable$9991$xgWN3
                                g$sym$10433$xgWN3
                                g$stx$10437$xgWN3)
                              g$stx$10437$xgWN3)))
                         ((case-lambda
                            ((g$t$10438$xgWN3)
                             (if g$t$10438$xgWN3
                               ((case-lambda
                                  ((g$x$10439$xgWN3)
                                   ((case-lambda
                                      ((g$name$10440$xgWN3 g$label$10441$xgWN3)
                                       (g$add-subst$9676$xgWN3
                                         (g$make-rib$9633$xgWN3
                                           (list g$name$10440$xgWN3)
                                           (list g$top-mark*$9619$xgWN3)
                                           (list g$label$10441$xgWN3)
                                           '#f
                                           '#f)
                                         g$stx$10436$xgWN3)))
                                    (car g$x$10439$xgWN3)
                                    (cdr g$x$10439$xgWN3))))
                                g$t$10438$xgWN3)
                               g$stx$10436$xgWN3)))
                          (g$assq$6073$xgWN3
                            g$sym$10433$xgWN3
                            g$subst$10435$xgWN3)))))
                     (g$make-stx$9659$xgWN3
                       g$sym$10433$xgWN3
                       g$top-mark*$9619$xgWN3
                       '()
                       '()))))
                 (g$library-subst$9382$xgWN3
                   (g$find-library-by-name$9418$xgWN3
                     '(psyntax system $all))))))))
         (g$hashtable-ref$6858$xgWN3
           g$scheme-stx-hashtable$9991$xgWN3
           g$sym$10433$xgWN3
           '#f)))))
   (g$lexical-var$9993$xgWN3 g$lexical-var$13534$xgWN3 car)
   (g$lexical-mutable?$9994$xgWN3 g$lexical-mutable?$13535$xgWN3 cdr)
   (g$set-lexical-mutable!$9995$xgWN3
     g$set-lexical-mutable!$13536$xgWN3
     set-cdr!)
   (g$add-lexical$9996$xgWN3
     g$add-lexical$13537$xgWN3
     (case-lambda
       ((g$lab$10442$xgWN3 g$lex$10443$xgWN3 g$r$10444$xgWN3)
        (cons
          (g$cons*$6087$xgWN3 g$lab$10442$xgWN3 'lexical g$lex$10443$xgWN3 '#f)
          g$r$10444$xgWN3))))
   (g$add-lexicals$9997$xgWN3
     g$add-lexicals$13538$xgWN3
     (case-lambda
       ((g$lab*$10445$xgWN3 g$lex*$10446$xgWN3 g$r$10447$xgWN3)
        (if (null? g$lab*$10445$xgWN3)
          g$r$10447$xgWN3
          (g$add-lexicals$9997$xgWN3
            (cdr g$lab*$10445$xgWN3)
            (cdr g$lex*$10446$xgWN3)
            (g$add-lexical$9996$xgWN3
              (car g$lab*$10445$xgWN3)
              (car g$lex*$10446$xgWN3)
              g$r$10447$xgWN3))))))
   (g$letrec-helper$9998$xgWN3
     g$letrec-helper$13539$xgWN3
     (case-lambda
       ((g$e$10448$xgWN3 g$r$10449$xgWN3 g$mr$10450$xgWN3 g$build$10451$xgWN3)
        ((case-lambda
           ((g$t$10452$xgWN3)
            ((case-lambda
               ((g$ls/false$10453$xgWN3)
                (if g$ls/false$10453$xgWN3
                  (apply
                    (case-lambda
                      ((g$lhs*$10454$xgWN3
                         g$rhs*$10455$xgWN3
                         g$b$10456$xgWN3
                         g$b*$10457$xgWN3)
                       (if (not (g$valid-bound-ids?$9691$xgWN3
                                  g$lhs*$10454$xgWN3))
                         (g$invalid-fmls-error$10014$xgWN3
                           g$e$10448$xgWN3
                           g$lhs*$10454$xgWN3)
                         ((case-lambda
                            ((g$lex*$10458$xgWN3 g$lab*$10459$xgWN3)
                             ((case-lambda
                                ((g$rib$10460$xgWN3 g$r$10461$xgWN3)
                                 ((case-lambda
                                    ((g$body$10462$xgWN3 g$rhs*$10463$xgWN3)
                                     (g$build$10451$xgWN3
                                       '#f
                                       g$lex*$10458$xgWN3
                                       g$rhs*$10463$xgWN3
                                       g$body$10462$xgWN3)))
                                  (g$chi-internal$10078$xgWN3
                                    (g$add-subst$9676$xgWN3
                                      g$rib$10460$xgWN3
                                      (cons g$b$10456$xgWN3 g$b*$10457$xgWN3))
                                    g$r$10461$xgWN3
                                    g$mr$10450$xgWN3)
                                  (g$chi-expr*$10065$xgWN3
                                    (g$map$6085$xgWN3
                                      (case-lambda
                                        ((g$x$10464$xgWN3)
                                         (g$add-subst$9676$xgWN3
                                           g$rib$10460$xgWN3
                                           g$x$10464$xgWN3)))
                                      g$rhs*$10455$xgWN3)
                                    g$r$10461$xgWN3
                                    g$mr$10450$xgWN3))))
                              (g$make-full-rib$9652$xgWN3
                                g$lhs*$10454$xgWN3
                                g$lab*$10459$xgWN3)
                              (g$add-lexicals$9997$xgWN3
                                g$lab*$10459$xgWN3
                                g$lex*$10458$xgWN3
                                g$r$10449$xgWN3))))
                          (g$map$6085$xgWN3
                            g$gen-lexical$9621$xgWN3
                            g$lhs*$10454$xgWN3)
                          (g$map$6085$xgWN3
                            g$gen-label$9623$xgWN3
                            g$lhs*$10454$xgWN3)))))
                    g$ls/false$10453$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10452$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10452$xgWN3
               '(_ #(each (any any)) any . each-any)))))
         g$e$10448$xgWN3))))
   (g$letrec-transformer$9999$xgWN3
     g$letrec-transformer$13540$xgWN3
     (case-lambda
       ((g$e$10465$xgWN3 g$r$10466$xgWN3 g$mr$10467$xgWN3)
        (g$letrec-helper$9998$xgWN3
          g$e$10465$xgWN3
          g$r$10466$xgWN3
          g$mr$10467$xgWN3
          g$build-letrec$9613$xgWN3))))
   (g$letrec*-transformer$10000$xgWN3
     g$letrec*-transformer$13541$xgWN3
     (case-lambda
       ((g$e$10468$xgWN3 g$r$10469$xgWN3 g$mr$10470$xgWN3)
        (g$letrec-helper$9998$xgWN3
          g$e$10468$xgWN3
          g$r$10469$xgWN3
          g$mr$10470$xgWN3
          g$build-letrec*$9614$xgWN3))))
   (g$fluid-let-syntax-transformer$10001$xgWN3
     g$fluid-let-syntax-transformer$13542$xgWN3
     (case-lambda
       ((g$e$10471$xgWN3 g$r$10472$xgWN3 g$mr$10473$xgWN3)
        (letrec* ((g$lookup$10474$xgWN3
                    (case-lambda
                      ((g$x$10484$xgWN3)
                       ((case-lambda
                          ((g$t$10485$xgWN3)
                           (if g$t$10485$xgWN3
                             g$t$10485$xgWN3
                             (begin
                               '#f
                               (g$syntax-violation$10167$xgWN3
                                 '#f
                                 '"unbound identifier"
                                 g$e$10471$xgWN3
                                 g$x$10484$xgWN3)))))
                        (g$id->label$9699$xgWN3 g$x$10484$xgWN3))))))
          ((case-lambda
             ((g$t$10475$xgWN3)
              ((case-lambda
                 ((g$ls/false$10476$xgWN3)
                  (if g$ls/false$10476$xgWN3
                    (apply
                      (case-lambda
                        ((g$lhs*$10477$xgWN3
                           g$rhs*$10478$xgWN3
                           g$b$10479$xgWN3
                           g$b*$10480$xgWN3)
                         (if (not (g$valid-bound-ids?$9691$xgWN3
                                    g$lhs*$10477$xgWN3))
                           (g$invalid-fmls-error$10014$xgWN3
                             g$e$10471$xgWN3
                             g$lhs*$10477$xgWN3)
                           ((case-lambda
                              ((g$lab*$10481$xgWN3 g$rhs*$10482$xgWN3)
                               (g$chi-internal$10078$xgWN3
                                 (cons g$b$10479$xgWN3 g$b*$10480$xgWN3)
                                 (append
                                   (g$map$6085$xgWN3
                                     cons
                                     g$lab*$10481$xgWN3
                                     g$rhs*$10482$xgWN3)
                                   g$r$10472$xgWN3)
                                 (append
                                   (g$map$6085$xgWN3
                                     cons
                                     g$lab*$10481$xgWN3
                                     g$rhs*$10482$xgWN3)
                                   g$mr$10473$xgWN3))))
                            (g$map$6085$xgWN3
                              g$lookup$10474$xgWN3
                              g$lhs*$10477$xgWN3)
                            (g$map$6085$xgWN3
                              (case-lambda
                                ((g$x$10483$xgWN3)
                                 (g$make-eval-transformer$9728$xgWN3
                                   (g$expand-transformer$10096$xgWN3
                                     g$x$10483$xgWN3
                                     g$mr$10473$xgWN3))))
                              g$rhs*$10478$xgWN3)))))
                      g$ls/false$10476$xgWN3)
                    (g$syntax-violation$10167$xgWN3
                      '#f
                      '"invalid syntax"
                      g$t$10475$xgWN3))))
               (g$syntax-dispatch$10049$xgWN3
                 g$t$10475$xgWN3
                 '(_ #(each (any any)) any . each-any)))))
           g$e$10471$xgWN3)))))
   (g$type-descriptor-transformer$10002$xgWN3
     g$type-descriptor-transformer$13543$xgWN3
     (case-lambda
       ((g$e$10486$xgWN3 g$r$10487$xgWN3 g$mr$10488$xgWN3)
        ((case-lambda
           ((g$t$10489$xgWN3)
            ((case-lambda
               ((g$ls/false$10490$xgWN3)
                (if (if g$ls/false$10490$xgWN3
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$10491$xgWN3)
                             (g$id?$9686$xgWN3 g$id$10491$xgWN3)))
                          g$ls/false$10490$xgWN3))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$10492$xgWN3)
                       ((case-lambda
                          ((g$lab$10493$xgWN3)
                           ((case-lambda
                              ((g$b$10494$xgWN3)
                               ((case-lambda
                                  ((g$type$10495$xgWN3)
                                   (begin
                                     (if (not g$lab$10493$xgWN3)
                                       (g$raise-unbound-error$9705$xgWN3
                                         g$id$10492$xgWN3)
                                       (void))
                                     (if (not (if (eq? g$type$10495$xgWN3 '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$9704$xgWN3
                                                           g$b$10494$xgWN3))))
                                                '#f))
                                       (g$syntax-violation$10167$xgWN3
                                         '#f
                                         '"not a record type"
                                         g$e$10486$xgWN3)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$9704$xgWN3
                                         g$b$10494$xgWN3)))))
                                (g$binding-type$9703$xgWN3 g$b$10494$xgWN3))))
                            (g$label->binding$9701$xgWN3
                              g$lab$10493$xgWN3
                              g$r$10487$xgWN3))))
                        (g$id->label$9699$xgWN3 g$id$10492$xgWN3))))
                    g$ls/false$10490$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10489$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10489$xgWN3 '(_ any)))))
         g$e$10486$xgWN3))))
   (g$record-type-descriptor-transformer$10003$xgWN3
     g$record-type-descriptor-transformer$13544$xgWN3
     (case-lambda
       ((g$e$10496$xgWN3 g$r$10497$xgWN3 g$mr$10498$xgWN3)
        ((case-lambda
           ((g$t$10499$xgWN3)
            ((case-lambda
               ((g$ls/false$10500$xgWN3)
                (if (if g$ls/false$10500$xgWN3
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$10501$xgWN3)
                             (g$id?$9686$xgWN3 g$id$10501$xgWN3)))
                          g$ls/false$10500$xgWN3))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$10502$xgWN3)
                       ((case-lambda
                          ((g$lab$10503$xgWN3)
                           ((case-lambda
                              ((g$b$10504$xgWN3)
                               ((case-lambda
                                  ((g$type$10505$xgWN3)
                                   (begin
                                     (if (not g$lab$10503$xgWN3)
                                       (g$raise-unbound-error$9705$xgWN3
                                         g$id$10502$xgWN3)
                                       (void))
                                     (if (not (if (eq? g$type$10505$xgWN3 '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$9704$xgWN3
                                                      g$b$10504$xgWN3)))
                                                '#f))
                                       (g$syntax-violation$10167$xgWN3
                                         '#f
                                         '"not a record type"
                                         g$e$10496$xgWN3)
                                       (void))
                                     (g$chi-expr$10067$xgWN3
                                       (car (g$binding-value$9704$xgWN3
                                              g$b$10504$xgWN3))
                                       g$r$10497$xgWN3
                                       g$mr$10498$xgWN3))))
                                (g$binding-type$9703$xgWN3 g$b$10504$xgWN3))))
                            (g$label->binding$9701$xgWN3
                              g$lab$10503$xgWN3
                              g$r$10497$xgWN3))))
                        (g$id->label$9699$xgWN3 g$id$10502$xgWN3))))
                    g$ls/false$10500$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10499$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10499$xgWN3 '(_ any)))))
         g$e$10496$xgWN3))))
   (g$record-constructor-descriptor-transformer$10004$xgWN3
     g$record-constructor-descriptor-transformer$13545$xgWN3
     (case-lambda
       ((g$e$10506$xgWN3 g$r$10507$xgWN3 g$mr$10508$xgWN3)
        ((case-lambda
           ((g$t$10509$xgWN3)
            ((case-lambda
               ((g$ls/false$10510$xgWN3)
                (if (if g$ls/false$10510$xgWN3
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$10511$xgWN3)
                             (g$id?$9686$xgWN3 g$id$10511$xgWN3)))
                          g$ls/false$10510$xgWN3))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$10512$xgWN3)
                       ((case-lambda
                          ((g$lab$10513$xgWN3)
                           ((case-lambda
                              ((g$b$10514$xgWN3)
                               ((case-lambda
                                  ((g$type$10515$xgWN3)
                                   (begin
                                     (if (not g$lab$10513$xgWN3)
                                       (g$raise-unbound-error$9705$xgWN3
                                         g$id$10512$xgWN3)
                                       (void))
                                     (if (not (if (eq? g$type$10515$xgWN3 '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$9704$xgWN3
                                                      g$b$10514$xgWN3)))
                                                '#f))
                                       (g$syntax-violation$10167$xgWN3
                                         '#f
                                         '"invalid type"
                                         g$e$10506$xgWN3)
                                       (void))
                                     (g$chi-expr$10067$xgWN3
                                       (g$cadr$6765$xgWN3
                                         (g$binding-value$9704$xgWN3
                                           g$b$10514$xgWN3))
                                       g$r$10507$xgWN3
                                       g$mr$10508$xgWN3))))
                                (g$binding-type$9703$xgWN3 g$b$10514$xgWN3))))
                            (g$label->binding$9701$xgWN3
                              g$lab$10513$xgWN3
                              g$r$10507$xgWN3))))
                        (g$id->label$9699$xgWN3 g$id$10512$xgWN3))))
                    g$ls/false$10510$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10509$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10509$xgWN3 '(_ any)))))
         g$e$10506$xgWN3))))
   (g$when-macro$10005$xgWN3
     g$when-macro$13546$xgWN3
     (case-lambda
       ((g$e$10516$xgWN3)
        ((case-lambda
           ((g$t$10517$xgWN3)
            ((case-lambda
               ((g$ls/false$10518$xgWN3)
                (if g$ls/false$10518$xgWN3
                  (apply
                    (case-lambda
                      ((g$test$10519$xgWN3 g$e$10520$xgWN3 g$e*$10521$xgWN3)
                       (g$bless$10012$xgWN3
                         (list
                           'if
                           g$test$10519$xgWN3
                           (cons
                             'begin
                             (cons g$e$10520$xgWN3 g$e*$10521$xgWN3))))))
                    g$ls/false$10518$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10517$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10517$xgWN3
               '(_ any any . each-any)))))
         g$e$10516$xgWN3))))
   (g$unless-macro$10006$xgWN3
     g$unless-macro$13547$xgWN3
     (case-lambda
       ((g$e$10522$xgWN3)
        ((case-lambda
           ((g$t$10523$xgWN3)
            ((case-lambda
               ((g$ls/false$10524$xgWN3)
                (if g$ls/false$10524$xgWN3
                  (apply
                    (case-lambda
                      ((g$test$10525$xgWN3 g$e$10526$xgWN3 g$e*$10527$xgWN3)
                       (g$bless$10012$xgWN3
                         (list
                           'if
                           (list 'not g$test$10525$xgWN3)
                           (cons
                             'begin
                             (cons g$e$10526$xgWN3 g$e*$10527$xgWN3))))))
                    g$ls/false$10524$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10523$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10523$xgWN3
               '(_ any any . each-any)))))
         g$e$10522$xgWN3))))
   (g$if-transformer$10007$xgWN3
     g$if-transformer$13548$xgWN3
     (case-lambda
       ((g$e$10528$xgWN3 g$r$10529$xgWN3 g$mr$10530$xgWN3)
        ((case-lambda
           ((g$t$10531$xgWN3)
            ((case-lambda
               ((g$ls/false$10532$xgWN3)
                (if g$ls/false$10532$xgWN3
                  (apply
                    (case-lambda
                      ((g$e0$10533$xgWN3 g$e1$10534$xgWN3 g$e2$10535$xgWN3)
                       (list
                         'if
                         (g$chi-expr$10067$xgWN3
                           g$e0$10533$xgWN3
                           g$r$10529$xgWN3
                           g$mr$10530$xgWN3)
                         (g$chi-expr$10067$xgWN3
                           g$e1$10534$xgWN3
                           g$r$10529$xgWN3
                           g$mr$10530$xgWN3)
                         (g$chi-expr$10067$xgWN3
                           g$e2$10535$xgWN3
                           g$r$10529$xgWN3
                           g$mr$10530$xgWN3))))
                    g$ls/false$10532$xgWN3)
                  ((case-lambda
                     ((g$t$10536$xgWN3)
                      ((case-lambda
                         ((g$ls/false$10537$xgWN3)
                          (if g$ls/false$10537$xgWN3
                            (apply
                              (case-lambda
                                ((g$e0$10538$xgWN3 g$e1$10539$xgWN3)
                                 (list
                                   'if
                                   (g$chi-expr$10067$xgWN3
                                     g$e0$10538$xgWN3
                                     g$r$10529$xgWN3
                                     g$mr$10530$xgWN3)
                                   (g$chi-expr$10067$xgWN3
                                     g$e1$10539$xgWN3
                                     g$r$10529$xgWN3
                                     g$mr$10530$xgWN3)
                                   (g$build-void$9612$xgWN3))))
                              g$ls/false$10537$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$10536$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$10536$xgWN3
                         '(_ any any)))))
                   g$t$10531$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10531$xgWN3 '(_ any any any)))))
         g$e$10528$xgWN3))))
   (g$case-macro$10008$xgWN3
     g$case-macro$13549$xgWN3
     (case-lambda
       ((g$e$10540$xgWN3)
        (letrec* ((g$build-last$10541$xgWN3
                    (case-lambda
                      ((g$cls$10561$xgWN3)
                       ((case-lambda
                          ((g$t$10562$xgWN3)
                           ((case-lambda
                              ((g$ls/false$10563$xgWN3)
                               (if g$ls/false$10563$xgWN3
                                 (apply
                                   (case-lambda
                                     ((g$e$10564$xgWN3 g$e*$10565$xgWN3)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$10564$xgWN3
                                          g$e*$10565$xgWN3))))
                                   g$ls/false$10563$xgWN3)
                                 ((case-lambda
                                    ((g$t$10566$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$10567$xgWN3)
                                         (if g$ls/false$10567$xgWN3
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$10542$xgWN3
                                                  g$cls$10561$xgWN3
                                                  '(if #f #f))))
                                             g$ls/false$10567$xgWN3)
                                           (g$syntax-violation$10167$xgWN3
                                             '#f
                                             '"invalid syntax"
                                             g$t$10566$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$10566$xgWN3
                                        '_))))
                                  g$t$10562$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$10562$xgWN3
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$10561$xgWN3))))
                  (g$build-one$10542$xgWN3
                    (case-lambda
                      ((g$cls$10554$xgWN3 g$k$10555$xgWN3)
                       ((case-lambda
                          ((g$t$10556$xgWN3)
                           ((case-lambda
                              ((g$ls/false$10557$xgWN3)
                               (if g$ls/false$10557$xgWN3
                                 (apply
                                   (case-lambda
                                     ((g$d*$10558$xgWN3
                                        g$e$10559$xgWN3
                                        g$e*$10560$xgWN3)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$10558$xgWN3))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$10559$xgWN3
                                            g$e*$10560$xgWN3))
                                        g$k$10555$xgWN3)))
                                   g$ls/false$10557$xgWN3)
                                 (g$syntax-violation$10167$xgWN3
                                   '#f
                                   '"invalid syntax"
                                   g$t$10556$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$10556$xgWN3
                              '(each-any any . each-any)))))
                        g$cls$10554$xgWN3)))))
          ((case-lambda
             ((g$t$10543$xgWN3)
              ((case-lambda
                 ((g$ls/false$10544$xgWN3)
                  (if g$ls/false$10544$xgWN3
                    (apply
                      (case-lambda
                        ((g$expr$10545$xgWN3)
                         (g$bless$10012$xgWN3
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$10545$xgWN3))
                               '((if #f #f)))))))
                      g$ls/false$10544$xgWN3)
                    ((case-lambda
                       ((g$t$10546$xgWN3)
                        ((case-lambda
                           ((g$ls/false$10547$xgWN3)
                            (if g$ls/false$10547$xgWN3
                              (apply
                                (case-lambda
                                  ((g$expr$10548$xgWN3
                                     g$cls$10549$xgWN3
                                     g$cls*$10550$xgWN3)
                                   (g$bless$10012$xgWN3
                                     (list
                                       'let
                                       (list (list 't g$expr$10548$xgWN3))
                                       ((letrec ((g$f$10551$xgWN3
                                                   (case-lambda
                                                     ((g$cls$10552$xgWN3
                                                        g$cls*$10553$xgWN3)
                                                      (if (null?
                                                            g$cls*$10553$xgWN3)
                                                        (g$build-last$10541$xgWN3
                                                          g$cls$10552$xgWN3)
                                                        (g$build-one$10542$xgWN3
                                                          g$cls$10552$xgWN3
                                                          (g$f$10551$xgWN3
                                                            (car g$cls*$10553$xgWN3)
                                                            (cdr g$cls*$10553$xgWN3))))))))
                                          g$f$10551$xgWN3)
                                        g$cls$10549$xgWN3
                                        g$cls*$10550$xgWN3)))))
                                g$ls/false$10547$xgWN3)
                              (g$syntax-violation$10167$xgWN3
                                '#f
                                '"invalid syntax"
                                g$t$10546$xgWN3))))
                         (g$syntax-dispatch$10049$xgWN3
                           g$t$10546$xgWN3
                           '(_ any any . each-any)))))
                     g$t$10543$xgWN3))))
               (g$syntax-dispatch$10049$xgWN3 g$t$10543$xgWN3 '(_ any)))))
           g$e$10540$xgWN3)))))
   (g$quote-transformer$10009$xgWN3
     g$quote-transformer$13550$xgWN3
     (case-lambda
       ((g$e$10568$xgWN3 g$r$10569$xgWN3 g$mr$10570$xgWN3)
        ((case-lambda
           ((g$t$10571$xgWN3)
            ((case-lambda
               ((g$ls/false$10572$xgWN3)
                (if g$ls/false$10572$xgWN3
                  (apply
                    (case-lambda
                      ((g$datum$10573$xgWN3)
                       (list
                         'quote
                         (g$stx->datum$9697$xgWN3 g$datum$10573$xgWN3))))
                    g$ls/false$10572$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10571$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10571$xgWN3 '(_ any)))))
         g$e$10568$xgWN3))))
   (g$case-lambda-transformer$10010$xgWN3
     g$case-lambda-transformer$13551$xgWN3
     (case-lambda
       ((g$e$10574$xgWN3 g$r$10575$xgWN3 g$mr$10576$xgWN3)
        ((case-lambda
           ((g$t$10577$xgWN3)
            ((case-lambda
               ((g$ls/false$10578$xgWN3)
                (if g$ls/false$10578$xgWN3
                  (apply
                    (case-lambda
                      ((g$fmls*$10579$xgWN3 g$b*$10580$xgWN3 g$b**$10581$xgWN3)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$10071$xgWN3
                              g$e$10574$xgWN3
                              g$fmls*$10579$xgWN3
                              (g$map$6085$xgWN3
                                cons
                                g$b*$10580$xgWN3
                                g$b**$10581$xgWN3)
                              g$r$10575$xgWN3
                              g$mr$10576$xgWN3)))
                         (case-lambda
                           ((g$fmls*$10584$xgWN3 g$body*$10585$xgWN3)
                            ((case-lambda
                               ((g$body*$10586$xgWN3 g$fmls*$10587$xgWN3)
                                (g$build-case-lambda$9609$xgWN3
                                  '#f
                                  g$fmls*$10587$xgWN3
                                  g$body*$10586$xgWN3)))
                             g$body*$10585$xgWN3
                             g$fmls*$10584$xgWN3))))))
                    g$ls/false$10578$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10577$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10577$xgWN3
               '(_ . #(each (any any . each-any)))))))
         g$e$10574$xgWN3))))
   (g$lambda-transformer$10011$xgWN3
     g$lambda-transformer$13552$xgWN3
     (case-lambda
       ((g$e$10588$xgWN3 g$r$10589$xgWN3 g$mr$10590$xgWN3)
        ((case-lambda
           ((g$t$10591$xgWN3)
            ((case-lambda
               ((g$ls/false$10592$xgWN3)
                (if g$ls/false$10592$xgWN3
                  (apply
                    (case-lambda
                      ((g$fmls$10593$xgWN3 g$b$10594$xgWN3 g$b*$10595$xgWN3)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$10070$xgWN3
                              g$e$10588$xgWN3
                              g$fmls$10593$xgWN3
                              (cons g$b$10594$xgWN3 g$b*$10595$xgWN3)
                              g$r$10589$xgWN3
                              g$mr$10590$xgWN3)))
                         (case-lambda
                           ((g$fmls$10598$xgWN3 g$body$10599$xgWN3)
                            ((case-lambda
                               ((g$body$10600$xgWN3 g$fmls$10601$xgWN3)
                                (g$build-lambda$9608$xgWN3
                                  '#f
                                  g$fmls$10601$xgWN3
                                  g$body$10600$xgWN3)))
                             g$body$10599$xgWN3
                             g$fmls$10598$xgWN3))))))
                    g$ls/false$10592$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10591$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10591$xgWN3
               '(_ any any . each-any)))))
         g$e$10588$xgWN3))))
   (g$bless$10012$xgWN3
     g$bless$13553$xgWN3
     (case-lambda
       ((g$x$10602$xgWN3)
        (g$mkstx$9674$xgWN3
          ((letrec ((g$f$10603$xgWN3
                      (case-lambda
                        ((g$x$10604$xgWN3)
                         (if (g$stx?$9658$xgWN3 g$x$10604$xgWN3)
                           g$x$10604$xgWN3
                           (if (pair? g$x$10604$xgWN3)
                             (cons
                               (g$f$10603$xgWN3 (car g$x$10604$xgWN3))
                               (g$f$10603$xgWN3 (cdr g$x$10604$xgWN3)))
                             (if (g$symbol?$6756$xgWN3 g$x$10604$xgWN3)
                               (g$scheme-stx$9992$xgWN3 g$x$10604$xgWN3)
                               (if (g$vector?$6754$xgWN3 g$x$10604$xgWN3)
                                 (g$vector-map$6816$xgWN3
                                   g$f$10603$xgWN3
                                   g$x$10604$xgWN3)
                                 g$x$10604$xgWN3))))))))
             g$f$10603$xgWN3)
           g$x$10602$xgWN3)
          '()
          '()
          '()))))
   (g$with-syntax-macro$10013$xgWN3
     g$with-syntax-macro$13554$xgWN3
     (case-lambda
       ((g$e$10605$xgWN3)
        ((case-lambda
           ((g$t$10606$xgWN3)
            ((case-lambda
               ((g$ls/false$10607$xgWN3)
                (if g$ls/false$10607$xgWN3
                  (apply
                    (case-lambda
                      ((g$pat*$10608$xgWN3
                         g$expr*$10609$xgWN3
                         g$b$10610$xgWN3
                         g$b*$10611$xgWN3)
                       ((case-lambda
                          ((g$idn*$10612$xgWN3)
                           (begin
                             (g$verify-formals$10069$xgWN3
                               (g$map$6085$xgWN3 car g$idn*$10612$xgWN3)
                               g$e$10605$xgWN3)
                             ((case-lambda
                                ((g$t*$10613$xgWN3)
                                 (g$bless$10012$xgWN3
                                   (list
                                     'let
                                     (g$map$6085$xgWN3
                                       list
                                       g$t*$10613$xgWN3
                                       g$expr*$10609$xgWN3)
                                     ((letrec ((g$f$10614$xgWN3
                                                 (case-lambda
                                                   ((g$pat*$10615$xgWN3
                                                      g$t*$10616$xgWN3)
                                                    (if (null?
                                                          g$pat*$10615$xgWN3)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$10610$xgWN3
                                                            g$b*$10611$xgWN3)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$10616$xgWN3)
                                                        '()
                                                        (list
                                                          (car g$pat*$10615$xgWN3)
                                                          (g$f$10614$xgWN3
                                                            (cdr g$pat*$10615$xgWN3)
                                                            (cdr g$t*$10616$xgWN3)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$10615$xgWN3))
                                                            (car g$t*$10616$xgWN3)))))))))
                                        g$f$10614$xgWN3)
                                      g$pat*$10608$xgWN3
                                      g$t*$10613$xgWN3)))))
                              (g$generate-temporaries$10157$xgWN3
                                g$expr*$10609$xgWN3)))))
                        ((letrec ((g$f$10617$xgWN3
                                    (case-lambda
                                      ((g$pat*$10618$xgWN3)
                                       (if (null? g$pat*$10618$xgWN3)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$10048$xgWN3
                                                (car g$pat*$10618$xgWN3)
                                                '())))
                                           (case-lambda
                                             ((g$pat$10621$xgWN3
                                                g$idn*$10622$xgWN3)
                                              ((case-lambda
                                                 ((g$idn*$10623$xgWN3
                                                    g$pat$10624$xgWN3)
                                                  (append
                                                    g$idn*$10623$xgWN3
                                                    (g$f$10617$xgWN3
                                                      (cdr g$pat*$10618$xgWN3)))))
                                               g$idn*$10622$xgWN3
                                               g$pat$10621$xgWN3)))))))))
                           g$f$10617$xgWN3)
                         g$pat*$10608$xgWN3))))
                    g$ls/false$10607$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10606$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10606$xgWN3
               '(_ #(each (any any)) any . each-any)))))
         g$e$10605$xgWN3))))
   (g$invalid-fmls-error$10014$xgWN3
     g$invalid-fmls-error$13555$xgWN3
     (case-lambda
       ((g$stx$10625$xgWN3 g$fmls$10626$xgWN3)
        ((case-lambda
           ((g$t$10627$xgWN3)
            ((case-lambda
               ((g$ls/false$10628$xgWN3)
                (if g$ls/false$10628$xgWN3
                  (apply
                    (case-lambda
                      ((g$id*$10629$xgWN3 g$last$10630$xgWN3)
                       ((letrec ((g$f$10631$xgWN3
                                   (case-lambda
                                     ((g$id*$10632$xgWN3)
                                      (if (null? g$id*$10632$xgWN3)
                                        (values)
                                        (if (not (g$id?$9686$xgWN3
                                                   (car g$id*$10632$xgWN3)))
                                          (g$syntax-violation$10167$xgWN3
                                            '#f
                                            '"not an identifier"
                                            g$stx$10625$xgWN3
                                            (car g$id*$10632$xgWN3))
                                          (begin
                                            (g$f$10631$xgWN3
                                              (cdr g$id*$10632$xgWN3))
                                            (if (g$bound-id-member?$9693$xgWN3
                                                  (car g$id*$10632$xgWN3)
                                                  (cdr g$id*$10632$xgWN3))
                                              (g$syntax-violation$10167$xgWN3
                                                '#f
                                                '"duplicate binding"
                                                g$stx$10625$xgWN3
                                                (car g$id*$10632$xgWN3))
                                              (void)))))))))
                          g$f$10631$xgWN3)
                        (if (g$id?$9686$xgWN3 g$last$10630$xgWN3)
                          (cons g$last$10630$xgWN3 g$id*$10629$xgWN3)
                          (if (g$syntax-null?$9681$xgWN3 g$last$10630$xgWN3)
                            g$id*$10629$xgWN3
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"not an identifier"
                              g$stx$10625$xgWN3
                              g$last$10630$xgWN3))))))
                    g$ls/false$10628$xgWN3)
                  ((case-lambda
                     ((g$t$10633$xgWN3)
                      ((case-lambda
                         ((g$ls/false$10634$xgWN3)
                          (if g$ls/false$10634$xgWN3
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$10167$xgWN3
                                   '#f
                                   '"malformed binding form"
                                   g$stx$10625$xgWN3
                                   g$fmls$10626$xgWN3)))
                              g$ls/false$10634$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$10633$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3 g$t$10633$xgWN3 '_))))
                   g$t$10627$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10627$xgWN3
               '#(each+ any () any)))))
         g$fmls$10626$xgWN3))))
   (g$let-macro$10015$xgWN3
     g$let-macro$13556$xgWN3
     (case-lambda
       ((g$stx$10635$xgWN3)
        ((case-lambda
           ((g$t$10636$xgWN3)
            ((case-lambda
               ((g$ls/false$10637$xgWN3)
                (if g$ls/false$10637$xgWN3
                  (apply
                    (case-lambda
                      ((g$lhs*$10638$xgWN3
                         g$rhs*$10639$xgWN3
                         g$b$10640$xgWN3
                         g$b*$10641$xgWN3)
                       (if (g$valid-bound-ids?$9691$xgWN3 g$lhs*$10638$xgWN3)
                         (g$bless$10012$xgWN3
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$10638$xgWN3
                                 (cons g$b$10640$xgWN3 g$b*$10641$xgWN3)))
                             g$rhs*$10639$xgWN3))
                         (g$invalid-fmls-error$10014$xgWN3
                           g$stx$10635$xgWN3
                           g$lhs*$10638$xgWN3))))
                    g$ls/false$10637$xgWN3)
                  ((case-lambda
                     ((g$t$10642$xgWN3)
                      ((case-lambda
                         ((g$ls/false$10643$xgWN3)
                          (if (if g$ls/false$10643$xgWN3
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$10644$xgWN3
                                         g$lhs*$10645$xgWN3
                                         g$rhs*$10646$xgWN3
                                         g$b$10647$xgWN3
                                         g$b*$10648$xgWN3)
                                       (g$id?$9686$xgWN3 g$f$10644$xgWN3)))
                                    g$ls/false$10643$xgWN3))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$10649$xgWN3
                                   g$lhs*$10650$xgWN3
                                   g$rhs*$10651$xgWN3
                                   g$b$10652$xgWN3
                                   g$b*$10653$xgWN3)
                                 (if (g$valid-bound-ids?$9691$xgWN3
                                       g$lhs*$10650$xgWN3)
                                   (g$bless$10012$xgWN3
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$10649$xgWN3
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$10650$xgWN3
                                                 (cons
                                                   g$b$10652$xgWN3
                                                   g$b*$10653$xgWN3)))))
                                         g$f$10649$xgWN3)
                                       g$rhs*$10651$xgWN3))
                                   (g$invalid-fmls-error$10014$xgWN3
                                     g$stx$10635$xgWN3
                                     g$lhs*$10650$xgWN3))))
                              g$ls/false$10643$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$10642$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$10642$xgWN3
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$10636$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10636$xgWN3
               '(_ #(each (any any)) any . each-any)))))
         g$stx$10635$xgWN3))))
   (g$let-values-macro$10016$xgWN3
     g$let-values-macro$13557$xgWN3
     (case-lambda
       ((g$stx$10654$xgWN3)
        (letrec* ((g$rename$10655$xgWN3
                    (case-lambda
                      ((g$x$10706$xgWN3 g$old*$10707$xgWN3 g$new*$10708$xgWN3)
                       (begin
                         (if (not (g$id?$9686$xgWN3 g$x$10706$xgWN3))
                           (g$syntax-violation$10167$xgWN3
                             '#f
                             '"not an indentifier"
                             g$stx$10654$xgWN3
                             g$x$10706$xgWN3)
                           (void))
                         (if (g$bound-id-member?$9693$xgWN3
                               g$x$10706$xgWN3
                               g$old*$10707$xgWN3)
                           (g$syntax-violation$10167$xgWN3
                             '#f
                             '"duplicate binding"
                             g$stx$10654$xgWN3
                             g$x$10706$xgWN3)
                           (void))
                         ((case-lambda
                            ((g$y$10709$xgWN3)
                             (values
                               g$y$10709$xgWN3
                               (cons g$x$10706$xgWN3 g$old*$10707$xgWN3)
                               (cons g$y$10709$xgWN3 g$new*$10708$xgWN3))))
                          (gensym
                            (g$syntax->datum$10170$xgWN3 g$x$10706$xgWN3)))))))
                  (g$rename*$10656$xgWN3
                    (case-lambda
                      ((g$x*$10697$xgWN3 g$old*$10698$xgWN3 g$new*$10699$xgWN3)
                       (if (null? g$x*$10697$xgWN3)
                         (values '() g$old*$10698$xgWN3 g$new*$10699$xgWN3)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$10655$xgWN3
                                (car g$x*$10697$xgWN3)
                                g$old*$10698$xgWN3
                                g$new*$10699$xgWN3)))
                           (case-lambda
                             ((g$x$10700$xgWN3
                                g$old*$10701$xgWN3
                                g$new*$10702$xgWN3)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$10656$xgWN3
                                     (cdr g$x*$10697$xgWN3)
                                     g$old*$10701$xgWN3
                                     g$new*$10702$xgWN3)))
                                (case-lambda
                                  ((g$x*$10703$xgWN3
                                     g$old*$10704$xgWN3
                                     g$new*$10705$xgWN3)
                                   (values
                                     (cons g$x$10700$xgWN3 g$x*$10703$xgWN3)
                                     g$old*$10704$xgWN3
                                     g$new*$10705$xgWN3))))))))))))
          ((case-lambda
             ((g$t$10657$xgWN3)
              ((case-lambda
                 ((g$ls/false$10658$xgWN3)
                  (if g$ls/false$10658$xgWN3
                    (apply
                      (case-lambda
                        ((g$b$10659$xgWN3 g$b*$10660$xgWN3)
                         (g$cons*$6087$xgWN3
                           (g$bless$10012$xgWN3 'let)
                           '()
                           g$b$10659$xgWN3
                           g$b*$10660$xgWN3)))
                      g$ls/false$10658$xgWN3)
                    ((case-lambda
                       ((g$t$10661$xgWN3)
                        ((case-lambda
                           ((g$ls/false$10662$xgWN3)
                            (if g$ls/false$10662$xgWN3
                              (apply
                                (case-lambda
                                  ((g$lhs*$10663$xgWN3
                                     g$rhs*$10664$xgWN3
                                     g$b$10665$xgWN3
                                     g$b*$10666$xgWN3)
                                   (g$bless$10012$xgWN3
                                     ((letrec ((g$f$10667$xgWN3
                                                 (case-lambda
                                                   ((g$lhs*$10668$xgWN3
                                                      g$rhs*$10669$xgWN3
                                                      g$old*$10670$xgWN3
                                                      g$new*$10671$xgWN3)
                                                    (if (null?
                                                          g$lhs*$10668$xgWN3)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$6085$xgWN3
                                                            list
                                                            g$old*$10670$xgWN3
                                                            g$new*$10671$xgWN3)
                                                          (cons
                                                            g$b$10665$xgWN3
                                                            g$b*$10666$xgWN3)))
                                                      ((case-lambda
                                                         ((g$t$10672$xgWN3)
                                                          ((case-lambda
                                                             ((g$ls/false$10673$xgWN3)
                                                              (if g$ls/false$10673$xgWN3
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$10674$xgWN3)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$10656$xgWN3
                                                                            g$x*$10674$xgWN3
                                                                            g$old*$10670$xgWN3
                                                                            g$new*$10671$xgWN3)))
                                                                       (case-lambda
                                                                         ((g$y*$10678$xgWN3
                                                                            g$old*$10679$xgWN3
                                                                            g$new*$10680$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$new*$10681$xgWN3
                                                                                g$old*$10682$xgWN3
                                                                                g$y*$10683$xgWN3)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$10669$xgWN3))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$10683$xgWN3
                                                                                  (g$f$10667$xgWN3
                                                                                    (cdr g$lhs*$10668$xgWN3)
                                                                                    (cdr g$rhs*$10669$xgWN3)
                                                                                    g$old*$10682$xgWN3
                                                                                    g$new*$10681$xgWN3)))))
                                                                           g$new*$10680$xgWN3
                                                                           g$old*$10679$xgWN3
                                                                           g$y*$10678$xgWN3))))))
                                                                  g$ls/false$10673$xgWN3)
                                                                ((case-lambda
                                                                   ((g$t$10684$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10685$xgWN3)
                                                                        (if g$ls/false$10685$xgWN3
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$10686$xgWN3
                                                                                 g$x$10687$xgWN3)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$10655$xgWN3
                                                                                      g$x$10687$xgWN3
                                                                                      g$old*$10670$xgWN3
                                                                                      g$new*$10671$xgWN3)))
                                                                                 (case-lambda
                                                                                   ((g$y$10688$xgWN3
                                                                                      g$old*$10689$xgWN3
                                                                                      g$new*$10690$xgWN3)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$10656$xgWN3
                                                                                           g$x*$10686$xgWN3
                                                                                           g$old*$10689$xgWN3
                                                                                           g$new*$10690$xgWN3)))
                                                                                      (case-lambda
                                                                                        ((g$y*$10691$xgWN3
                                                                                           g$old*$10692$xgWN3
                                                                                           g$new*$10693$xgWN3)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$10669$xgWN3))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$10691$xgWN3
                                                                                               g$y$10688$xgWN3)
                                                                                             (g$f$10667$xgWN3
                                                                                               (cdr g$lhs*$10668$xgWN3)
                                                                                               (cdr g$rhs*$10669$xgWN3)
                                                                                               g$old*$10692$xgWN3
                                                                                               g$new*$10693$xgWN3)))))))))))
                                                                            g$ls/false$10685$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$t$10694$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10695$xgWN3)
                                                                                  (if g$ls/false$10695$xgWN3
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$10696$xgWN3)
                                                                                         (g$syntax-violation$10167$xgWN3
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$10654$xgWN3
                                                                                           g$others$10696$xgWN3)))
                                                                                      g$ls/false$10695$xgWN3)
                                                                                    (g$syntax-violation$10167$xgWN3
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$10694$xgWN3))))
                                                                               (g$syntax-dispatch$10049$xgWN3
                                                                                 g$t$10694$xgWN3
                                                                                 'any))))
                                                                           g$t$10684$xgWN3))))
                                                                     (g$syntax-dispatch$10049$xgWN3
                                                                       g$t$10684$xgWN3
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$10672$xgWN3))))
                                                           (g$syntax-dispatch$10049$xgWN3
                                                             g$t$10672$xgWN3
                                                             'each-any))))
                                                       (car g$lhs*$10668$xgWN3)))))))
                                        g$f$10667$xgWN3)
                                      g$lhs*$10663$xgWN3
                                      g$rhs*$10664$xgWN3
                                      '()
                                      '()))))
                                g$ls/false$10662$xgWN3)
                              (g$syntax-violation$10167$xgWN3
                                '#f
                                '"invalid syntax"
                                g$t$10661$xgWN3))))
                         (g$syntax-dispatch$10049$xgWN3
                           g$t$10661$xgWN3
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$10657$xgWN3))))
               (g$syntax-dispatch$10049$xgWN3
                 g$t$10657$xgWN3
                 '(_ () any . each-any)))))
           g$stx$10654$xgWN3)))))
   (g$let*-values-macro$10017$xgWN3
     g$let*-values-macro$13558$xgWN3
     (case-lambda
       ((g$stx$10710$xgWN3)
        (letrec* ((g$check$10711$xgWN3
                    (case-lambda
                      ((g$x*$10735$xgWN3)
                       (if (not (null? g$x*$10735$xgWN3))
                         ((case-lambda
                            ((g$x$10736$xgWN3)
                             (begin
                               (if (not (g$id?$9686$xgWN3 g$x$10736$xgWN3))
                                 (g$syntax-violation$10167$xgWN3
                                   '#f
                                   '"not an identifier"
                                   g$stx$10710$xgWN3
                                   g$x$10736$xgWN3)
                                 (void))
                               (g$check$10711$xgWN3 (cdr g$x*$10735$xgWN3))
                               (if (g$bound-id-member?$9693$xgWN3
                                     g$x$10736$xgWN3
                                     (cdr g$x*$10735$xgWN3))
                                 (g$syntax-violation$10167$xgWN3
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$10710$xgWN3
                                   g$x$10736$xgWN3)
                                 (void)))))
                          (car g$x*$10735$xgWN3))
                         (void))))))
          ((case-lambda
             ((g$t$10712$xgWN3)
              ((case-lambda
                 ((g$ls/false$10713$xgWN3)
                  (if g$ls/false$10713$xgWN3
                    (apply
                      (case-lambda
                        ((g$b$10714$xgWN3 g$b*$10715$xgWN3)
                         (g$cons*$6087$xgWN3
                           (g$bless$10012$xgWN3 'let)
                           '()
                           g$b$10714$xgWN3
                           g$b*$10715$xgWN3)))
                      g$ls/false$10713$xgWN3)
                    ((case-lambda
                       ((g$t$10716$xgWN3)
                        ((case-lambda
                           ((g$ls/false$10717$xgWN3)
                            (if g$ls/false$10717$xgWN3
                              (apply
                                (case-lambda
                                  ((g$lhs*$10718$xgWN3
                                     g$rhs*$10719$xgWN3
                                     g$b$10720$xgWN3
                                     g$b*$10721$xgWN3)
                                   (g$bless$10012$xgWN3
                                     ((letrec ((g$f$10722$xgWN3
                                                 (case-lambda
                                                   ((g$lhs*$10723$xgWN3
                                                      g$rhs*$10724$xgWN3)
                                                    (if (null?
                                                          g$lhs*$10723$xgWN3)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$10720$xgWN3
                                                          g$b*$10721$xgWN3))
                                                      ((case-lambda
                                                         ((g$t$10725$xgWN3)
                                                          ((case-lambda
                                                             ((g$ls/false$10726$xgWN3)
                                                              (if g$ls/false$10726$xgWN3
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$10727$xgWN3)
                                                                     (begin
                                                                       (g$check$10711$xgWN3
                                                                         g$x*$10727$xgWN3)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$10724$xgWN3))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$10727$xgWN3
                                                                           (g$f$10722$xgWN3
                                                                             (cdr g$lhs*$10723$xgWN3)
                                                                             (cdr g$rhs*$10724$xgWN3)))))))
                                                                  g$ls/false$10726$xgWN3)
                                                                ((case-lambda
                                                                   ((g$t$10728$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10729$xgWN3)
                                                                        (if g$ls/false$10729$xgWN3
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$10730$xgWN3
                                                                                 g$x$10731$xgWN3)
                                                                               (begin
                                                                                 (g$check$10711$xgWN3
                                                                                   (cons
                                                                                     g$x$10731$xgWN3
                                                                                     g$x*$10730$xgWN3))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$10724$xgWN3))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$10730$xgWN3
                                                                                       g$x$10731$xgWN3)
                                                                                     (g$f$10722$xgWN3
                                                                                       (cdr g$lhs*$10723$xgWN3)
                                                                                       (cdr g$rhs*$10724$xgWN3)))))))
                                                                            g$ls/false$10729$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$t$10732$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10733$xgWN3)
                                                                                  (if g$ls/false$10733$xgWN3
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$10734$xgWN3)
                                                                                         (g$syntax-violation$10167$xgWN3
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$10710$xgWN3
                                                                                           g$others$10734$xgWN3)))
                                                                                      g$ls/false$10733$xgWN3)
                                                                                    (g$syntax-violation$10167$xgWN3
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$10732$xgWN3))))
                                                                               (g$syntax-dispatch$10049$xgWN3
                                                                                 g$t$10732$xgWN3
                                                                                 'any))))
                                                                           g$t$10728$xgWN3))))
                                                                     (g$syntax-dispatch$10049$xgWN3
                                                                       g$t$10728$xgWN3
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$10725$xgWN3))))
                                                           (g$syntax-dispatch$10049$xgWN3
                                                             g$t$10725$xgWN3
                                                             'each-any))))
                                                       (car g$lhs*$10723$xgWN3)))))))
                                        g$f$10722$xgWN3)
                                      g$lhs*$10718$xgWN3
                                      g$rhs*$10719$xgWN3))))
                                g$ls/false$10717$xgWN3)
                              (g$syntax-violation$10167$xgWN3
                                '#f
                                '"invalid syntax"
                                g$t$10716$xgWN3))))
                         (g$syntax-dispatch$10049$xgWN3
                           g$t$10716$xgWN3
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$10712$xgWN3))))
               (g$syntax-dispatch$10049$xgWN3
                 g$t$10712$xgWN3
                 '(_ () any . each-any)))))
           g$stx$10710$xgWN3)))))
   (g$trace-lambda-macro$10018$xgWN3
     g$trace-lambda-macro$13559$xgWN3
     (case-lambda
       ((g$stx$10737$xgWN3)
        ((case-lambda
           ((g$t$10738$xgWN3)
            ((case-lambda
               ((g$ls/false$10739$xgWN3)
                (if g$ls/false$10739$xgWN3
                  (apply
                    (case-lambda
                      ((g$who$10740$xgWN3
                         g$fmls$10741$xgWN3
                         g$b$10742$xgWN3
                         g$b*$10743$xgWN3)
                       (if (g$valid-bound-ids?$9691$xgWN3 g$fmls$10741$xgWN3)
                         (g$bless$10012$xgWN3
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$10740$xgWN3)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$10741$xgWN3
                                 (cons g$b$10742$xgWN3 g$b*$10743$xgWN3)))))
                         (g$invalid-fmls-error$10014$xgWN3
                           g$stx$10737$xgWN3
                           g$fmls$10741$xgWN3))))
                    g$ls/false$10739$xgWN3)
                  ((case-lambda
                     ((g$t$10744$xgWN3)
                      ((case-lambda
                         ((g$ls/false$10745$xgWN3)
                          (if g$ls/false$10745$xgWN3
                            (apply
                              (case-lambda
                                ((g$who$10746$xgWN3
                                   g$fmls$10747$xgWN3
                                   g$last$10748$xgWN3
                                   g$b$10749$xgWN3
                                   g$b*$10750$xgWN3)
                                 (if (g$valid-bound-ids?$9691$xgWN3
                                       (cons
                                         g$last$10748$xgWN3
                                         g$fmls$10747$xgWN3))
                                   (g$bless$10012$xgWN3
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$10746$xgWN3)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$10747$xgWN3
                                             g$last$10748$xgWN3)
                                           (cons
                                             g$b$10749$xgWN3
                                             g$b*$10750$xgWN3)))))
                                   (g$invalid-fmls-error$10014$xgWN3
                                     g$stx$10737$xgWN3
                                     (append
                                       g$fmls$10747$xgWN3
                                       g$last$10748$xgWN3)))))
                              g$ls/false$10745$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$10744$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$10744$xgWN3
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$10738$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10738$xgWN3
               '(_ any each-any any . each-any)))))
         g$stx$10737$xgWN3))))
   (g$trace-define-macro$10019$xgWN3
     g$trace-define-macro$13560$xgWN3
     (case-lambda
       ((g$stx$10751$xgWN3)
        ((case-lambda
           ((g$t$10752$xgWN3)
            ((case-lambda
               ((g$ls/false$10753$xgWN3)
                (if g$ls/false$10753$xgWN3
                  (apply
                    (case-lambda
                      ((g$who$10754$xgWN3
                         g$fmls$10755$xgWN3
                         g$b$10756$xgWN3
                         g$b*$10757$xgWN3)
                       (if (g$valid-bound-ids?$9691$xgWN3 g$fmls$10755$xgWN3)
                         (g$bless$10012$xgWN3
                           (list
                             'define
                             g$who$10754$xgWN3
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$10754$xgWN3)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$10755$xgWN3
                                   (cons g$b$10756$xgWN3 g$b*$10757$xgWN3))))))
                         (g$invalid-fmls-error$10014$xgWN3
                           g$stx$10751$xgWN3
                           g$fmls$10755$xgWN3))))
                    g$ls/false$10753$xgWN3)
                  ((case-lambda
                     ((g$t$10758$xgWN3)
                      ((case-lambda
                         ((g$ls/false$10759$xgWN3)
                          (if g$ls/false$10759$xgWN3
                            (apply
                              (case-lambda
                                ((g$who$10760$xgWN3
                                   g$fmls$10761$xgWN3
                                   g$last$10762$xgWN3
                                   g$b$10763$xgWN3
                                   g$b*$10764$xgWN3)
                                 (if (g$valid-bound-ids?$9691$xgWN3
                                       (cons
                                         g$last$10762$xgWN3
                                         g$fmls$10761$xgWN3))
                                   (g$bless$10012$xgWN3
                                     (list
                                       'define
                                       g$who$10760$xgWN3
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$10760$xgWN3)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$10761$xgWN3
                                               g$last$10762$xgWN3)
                                             (cons
                                               g$b$10763$xgWN3
                                               g$b*$10764$xgWN3))))))
                                   (g$invalid-fmls-error$10014$xgWN3
                                     g$stx$10751$xgWN3
                                     (append
                                       g$fmls$10761$xgWN3
                                       g$last$10762$xgWN3)))))
                              g$ls/false$10759$xgWN3)
                            ((case-lambda
                               ((g$t$10765$xgWN3)
                                ((case-lambda
                                   ((g$ls/false$10766$xgWN3)
                                    (if g$ls/false$10766$xgWN3
                                      (apply
                                        (case-lambda
                                          ((g$who$10767$xgWN3
                                             g$expr$10768$xgWN3)
                                           (if (g$id?$9686$xgWN3
                                                 g$who$10767$xgWN3)
                                             (g$bless$10012$xgWN3
                                               (list
                                                 'define
                                                 g$who$10767$xgWN3
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$10768$xgWN3))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$10767$xgWN3)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$10167$xgWN3
                                               '#f
                                               '"invalid name"
                                               g$stx$10751$xgWN3))))
                                        g$ls/false$10766$xgWN3)
                                      (g$syntax-violation$10167$xgWN3
                                        '#f
                                        '"invalid syntax"
                                        g$t$10765$xgWN3))))
                                 (g$syntax-dispatch$10049$xgWN3
                                   g$t$10765$xgWN3
                                   '(_ any any)))))
                             g$t$10758$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$10758$xgWN3
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$10752$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10752$xgWN3
               '(_ (any . each-any) any . each-any)))))
         g$stx$10751$xgWN3))))
   (g$trace-define-syntax-macro$10020$xgWN3
     g$trace-define-syntax-macro$13561$xgWN3
     (case-lambda
       ((g$stx$10769$xgWN3)
        ((case-lambda
           ((g$t$10770$xgWN3)
            ((case-lambda
               ((g$ls/false$10771$xgWN3)
                (if g$ls/false$10771$xgWN3
                  (apply
                    (case-lambda
                      ((g$who$10772$xgWN3 g$expr$10773$xgWN3)
                       (if (g$id?$9686$xgWN3 g$who$10772$xgWN3)
                         (g$bless$10012$xgWN3
                           (list
                             'define-syntax
                             g$who$10772$xgWN3
                             (list
                               'make-traced-macro
                               (list 'quote g$who$10772$xgWN3)
                               g$expr$10773$xgWN3)))
                         (g$syntax-violation$10167$xgWN3
                           '#f
                           '"invalid name"
                           g$stx$10769$xgWN3))))
                    g$ls/false$10771$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10770$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10770$xgWN3 '(_ any any)))))
         g$stx$10769$xgWN3))))
   (g$trace-let/rec-syntax$10021$xgWN3
     g$trace-let/rec-syntax$13562$xgWN3
     (case-lambda
       ((g$who$10774$xgWN3)
        (case-lambda
          ((g$stx$10775$xgWN3)
           ((case-lambda
              ((g$t$10776$xgWN3)
               ((case-lambda
                  ((g$ls/false$10777$xgWN3)
                   (if g$ls/false$10777$xgWN3
                     (apply
                       (case-lambda
                         ((g$lhs*$10778$xgWN3
                            g$rhs*$10779$xgWN3
                            g$b$10780$xgWN3
                            g$b*$10781$xgWN3)
                          (if (g$valid-bound-ids?$9691$xgWN3 g$lhs*$10778$xgWN3)
                            ((case-lambda
                               ((g$rhs*$10782$xgWN3)
                                (g$bless$10012$xgWN3
                                  (cons
                                    g$who$10774$xgWN3
                                    (cons
                                      (g$map$6085$xgWN3
                                        list
                                        g$lhs*$10778$xgWN3
                                        g$rhs*$10782$xgWN3)
                                      (cons
                                        g$b$10780$xgWN3
                                        g$b*$10781$xgWN3))))))
                             (g$map$6085$xgWN3
                               (case-lambda
                                 ((g$lhs$10783$xgWN3 g$rhs$10784$xgWN3)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$10783$xgWN3)
                                    g$rhs$10784$xgWN3)))
                               g$lhs*$10778$xgWN3
                               g$rhs*$10779$xgWN3))
                            (g$invalid-fmls-error$10014$xgWN3
                              g$stx$10775$xgWN3
                              g$lhs*$10778$xgWN3))))
                       g$ls/false$10777$xgWN3)
                     (g$syntax-violation$10167$xgWN3
                       '#f
                       '"invalid syntax"
                       g$t$10776$xgWN3))))
                (g$syntax-dispatch$10049$xgWN3
                  g$t$10776$xgWN3
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$10775$xgWN3))))))
   (g$trace-let-syntax-macro$10022$xgWN3
     g$trace-let-syntax-macro$13563$xgWN3
     (g$trace-let/rec-syntax$10021$xgWN3 'let-syntax))
   (g$trace-letrec-syntax-macro$10023$xgWN3
     g$trace-letrec-syntax-macro$13564$xgWN3
     (g$trace-let/rec-syntax$10021$xgWN3 'letrec-syntax))
   (g$guard-macro$10024$xgWN3
     g$guard-macro$13565$xgWN3
     (case-lambda
       ((g$x$10785$xgWN3)
        (letrec* ((g$gen-clauses$10786$xgWN3
                    (case-lambda
                      ((g$con$10798$xgWN3
                         g$outerk$10799$xgWN3
                         g$clause*$10800$xgWN3)
                       (letrec* ((g$f$10801$xgWN3
                                   (case-lambda
                                     ((g$x$10829$xgWN3 g$k$10830$xgWN3)
                                      ((case-lambda
                                         ((g$t$10831$xgWN3)
                                          ((case-lambda
                                             ((g$ls/false$10832$xgWN3)
                                              (if g$ls/false$10832$xgWN3
                                                (apply
                                                  (case-lambda
                                                    ((g$e$10833$xgWN3
                                                       g$p$10834$xgWN3)
                                                     ((case-lambda
                                                        ((g$t$10835$xgWN3)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$10835$xgWN3
                                                               g$e$10833$xgWN3))
                                                           (list
                                                             'if
                                                             g$t$10835$xgWN3
                                                             (list
                                                               g$p$10834$xgWN3
                                                               g$t$10835$xgWN3)
                                                             g$k$10830$xgWN3))))
                                                      (gensym))))
                                                  g$ls/false$10832$xgWN3)
                                                ((case-lambda
                                                   ((g$t$10836$xgWN3)
                                                    ((case-lambda
                                                       ((g$ls/false$10837$xgWN3)
                                                        (if g$ls/false$10837$xgWN3
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$10838$xgWN3)
                                                               ((case-lambda
                                                                  ((g$t$10839$xgWN3)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$10839$xgWN3
                                                                         g$e$10838$xgWN3))
                                                                     (list
                                                                       'if
                                                                       g$t$10839$xgWN3
                                                                       g$t$10839$xgWN3
                                                                       g$k$10830$xgWN3))))
                                                                (gensym))))
                                                            g$ls/false$10837$xgWN3)
                                                          ((case-lambda
                                                             ((g$t$10840$xgWN3)
                                                              ((case-lambda
                                                                 ((g$ls/false$10841$xgWN3)
                                                                  (if g$ls/false$10841$xgWN3
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$10842$xgWN3
                                                                           g$v$10843$xgWN3
                                                                           g$v*$10844$xgWN3)
                                                                         (list
                                                                           'if
                                                                           g$e$10842$xgWN3
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$10843$xgWN3
                                                                               g$v*$10844$xgWN3))
                                                                           g$k$10830$xgWN3)))
                                                                      g$ls/false$10841$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$t$10845$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10846$xgWN3)
                                                                            (if g$ls/false$10846$xgWN3
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$10167$xgWN3
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$10829$xgWN3)))
                                                                                g$ls/false$10846$xgWN3)
                                                                              (g$syntax-violation$10167$xgWN3
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$10845$xgWN3))))
                                                                         (g$syntax-dispatch$10049$xgWN3
                                                                           g$t$10845$xgWN3
                                                                           '_))))
                                                                     g$t$10840$xgWN3))))
                                                               (g$syntax-dispatch$10049$xgWN3
                                                                 g$t$10840$xgWN3
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$10836$xgWN3))))
                                                     (g$syntax-dispatch$10049$xgWN3
                                                       g$t$10836$xgWN3
                                                       '(any)))))
                                                 g$t$10831$xgWN3))))
                                           (g$syntax-dispatch$10049$xgWN3
                                             g$t$10831$xgWN3
                                             '(any #(scheme-id =>) any)))))
                                       g$x$10829$xgWN3))))
                                 (g$f*$10802$xgWN3
                                   (case-lambda
                                     ((g$x*$10809$xgWN3)
                                      ((case-lambda
                                         ((g$t$10810$xgWN3)
                                          ((case-lambda
                                             ((g$ls/false$10811$xgWN3)
                                              (if g$ls/false$10811$xgWN3
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$10798$xgWN3)
                                                       '#t)))
                                                  g$ls/false$10811$xgWN3)
                                                ((case-lambda
                                                   ((g$t$10812$xgWN3)
                                                    ((case-lambda
                                                       ((g$ls/false$10813$xgWN3)
                                                        (if g$ls/false$10813$xgWN3
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$10814$xgWN3
                                                                 g$e*$10815$xgWN3)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$10814$xgWN3
                                                                     g$e*$10815$xgWN3))
                                                                 '#f)))
                                                            g$ls/false$10813$xgWN3)
                                                          ((case-lambda
                                                             ((g$t$10816$xgWN3)
                                                              ((case-lambda
                                                                 ((g$ls/false$10817$xgWN3)
                                                                  (if g$ls/false$10817$xgWN3
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$10818$xgWN3
                                                                           g$cls*$10819$xgWN3)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$10802$xgWN3
                                                                                g$cls*$10819$xgWN3)))
                                                                           (case-lambda
                                                                             ((g$e$10822$xgWN3
                                                                                g$g$10823$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$g$10824$xgWN3
                                                                                    g$e$10825$xgWN3)
                                                                                  (values
                                                                                    (g$f$10801$xgWN3
                                                                                      g$cls$10818$xgWN3
                                                                                      g$e$10825$xgWN3)
                                                                                    g$g$10824$xgWN3)))
                                                                               g$g$10823$xgWN3
                                                                               g$e$10822$xgWN3))))))
                                                                      g$ls/false$10817$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$t$10826$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10827$xgWN3)
                                                                            (if g$ls/false$10827$xgWN3
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$10828$xgWN3)
                                                                                   (g$syntax-violation$10167$xgWN3
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$10828$xgWN3)))
                                                                                g$ls/false$10827$xgWN3)
                                                                              (g$syntax-violation$10167$xgWN3
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$10826$xgWN3))))
                                                                         (g$syntax-dispatch$10049$xgWN3
                                                                           g$t$10826$xgWN3
                                                                           'any))))
                                                                     g$t$10816$xgWN3))))
                                                               (g$syntax-dispatch$10049$xgWN3
                                                                 g$t$10816$xgWN3
                                                                 '(any .
                                                                       any)))))
                                                           g$t$10812$xgWN3))))
                                                     (g$syntax-dispatch$10049$xgWN3
                                                       g$t$10812$xgWN3
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$10810$xgWN3))))
                                           (g$syntax-dispatch$10049$xgWN3
                                             g$t$10810$xgWN3
                                             '()))))
                                       g$x*$10809$xgWN3)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$10802$xgWN3 g$clause*$10800$xgWN3)))
                           (case-lambda
                             ((g$code$10805$xgWN3 g$raisek$10806$xgWN3)
                              ((case-lambda
                                 ((g$raisek$10807$xgWN3 g$code$10808$xgWN3)
                                  (if g$raisek$10807$xgWN3
                                    (list
                                      g$outerk$10799$xgWN3
                                      g$code$10808$xgWN3)
                                    g$code$10808$xgWN3)))
                               g$raisek$10806$xgWN3
                               g$code$10805$xgWN3)))))))))
          ((case-lambda
             ((g$t$10787$xgWN3)
              ((case-lambda
                 ((g$ls/false$10788$xgWN3)
                  (if (if g$ls/false$10788$xgWN3
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$10789$xgWN3
                                 g$clause*$10790$xgWN3
                                 g$b$10791$xgWN3
                                 g$b*$10792$xgWN3)
                               (g$id?$9686$xgWN3 g$con$10789$xgWN3)))
                            g$ls/false$10788$xgWN3))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$10793$xgWN3
                           g$clause*$10794$xgWN3
                           g$b$10795$xgWN3
                           g$b*$10796$xgWN3)
                         ((case-lambda
                            ((g$outerk$10797$xgWN3)
                             (g$bless$10012$xgWN3
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$10797$xgWN3)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$10793$xgWN3)
                                           (g$gen-clauses$10786$xgWN3
                                             g$con$10793$xgWN3
                                             g$outerk$10797$xgWN3
                                             g$clause*$10794$xgWN3))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$10795$xgWN3
                                                 g$b*$10796$xgWN3))))))))))))
                          (gensym))))
                      g$ls/false$10788$xgWN3)
                    (g$syntax-violation$10167$xgWN3
                      '#f
                      '"invalid syntax"
                      g$t$10787$xgWN3))))
               (g$syntax-dispatch$10049$xgWN3
                 g$t$10787$xgWN3
                 '(_ (any . each-any) any . each-any)))))
           g$x$10785$xgWN3)))))
   (g$define-enumeration-macro$10025$xgWN3
     g$define-enumeration-macro$13566$xgWN3
     (case-lambda
       ((g$stx$10847$xgWN3)
        (letrec* ((g$set?$10848$xgWN3
                    (case-lambda
                      ((g$x$10861$xgWN3)
                       ((case-lambda
                          ((g$t$10862$xgWN3)
                           (if g$t$10862$xgWN3
                             g$t$10862$xgWN3
                             (begin
                               '#f
                               (if (not (g$memq$6077$xgWN3
                                          (car g$x$10861$xgWN3)
                                          (cdr g$x$10861$xgWN3)))
                                 (begin
                                   '#f
                                   (g$set?$10848$xgWN3 (cdr g$x$10861$xgWN3)))
                                 '#f)))))
                        (null? g$x$10861$xgWN3)))))
                  (g$remove-dups$10849$xgWN3
                    (case-lambda
                      ((g$ls$10860$xgWN3)
                       (if (null? g$ls$10860$xgWN3)
                         '()
                         (cons
                           (car g$ls$10860$xgWN3)
                           (g$remove-dups$10849$xgWN3
                             (g$remq$6092$xgWN3
                               (car g$ls$10860$xgWN3)
                               (cdr g$ls$10860$xgWN3)))))))))
          ((case-lambda
             ((g$t$10850$xgWN3)
              ((case-lambda
                 ((g$ls/false$10851$xgWN3)
                  (if (if g$ls/false$10851$xgWN3
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$10852$xgWN3
                                 g$id*$10853$xgWN3
                                 g$maker$10854$xgWN3)
                               (if (g$id?$9686$xgWN3 g$name$10852$xgWN3)
                                 (if (g$id?$9686$xgWN3 g$maker$10854$xgWN3)
                                   (begin
                                     '#f
                                     (g$for-all$6083$xgWN3
                                       g$id?$9686$xgWN3
                                       g$id*$10853$xgWN3))
                                   '#f)
                                 '#f)))
                            g$ls/false$10851$xgWN3))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$10855$xgWN3
                           g$id*$10856$xgWN3
                           g$maker$10857$xgWN3)
                         ((case-lambda
                            ((g$name*$10858$xgWN3 g$mk$10859$xgWN3)
                             (g$bless$10012$xgWN3
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$10859$xgWN3
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$10858$xgWN3))))
                                 (list
                                   'define-syntax
                                   g$name$10855$xgWN3
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$10858$xgWN3))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$10855$xgWN3)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$10857$xgWN3
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$10857$xgWN3)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$10858$xgWN3))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$10857$xgWN3)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$10859$xgWN3
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$10849$xgWN3
                            (g$syntax->datum$10170$xgWN3 g$id*$10856$xgWN3))
                          (gensym))))
                      g$ls/false$10851$xgWN3)
                    (g$syntax-violation$10167$xgWN3
                      '#f
                      '"invalid syntax"
                      g$t$10850$xgWN3))))
               (g$syntax-dispatch$10049$xgWN3
                 g$t$10850$xgWN3
                 '(_ any each-any any)))))
           g$stx$10847$xgWN3)))))
   (g$time-macro$10026$xgWN3
     g$time-macro$13567$xgWN3
     (case-lambda
       ((g$stx$10863$xgWN3)
        ((case-lambda
           ((g$t$10864$xgWN3)
            ((case-lambda
               ((g$ls/false$10865$xgWN3)
                (if g$ls/false$10865$xgWN3
                  (apply
                    (case-lambda
                      ((g$expr$10866$xgWN3)
                       ((case-lambda
                          ((g$str$10867$xgWN3)
                           (g$bless$10012$xgWN3
                             (list
                               'time-it
                               g$str$10867$xgWN3
                               (list 'lambda '() g$expr$10866$xgWN3)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$8190$xgWN3)))
                          (case-lambda
                            ((g$p$10870$xgWN3 g$e$10871$xgWN3)
                             ((case-lambda
                                ((g$e$10872$xgWN3 g$p$10873$xgWN3)
                                 (begin
                                   (write
                                     (g$syntax->datum$10170$xgWN3
                                       g$expr$10866$xgWN3)
                                     g$p$10873$xgWN3)
                                   (g$e$10872$xgWN3))))
                              g$e$10871$xgWN3
                              g$p$10870$xgWN3)))))))
                    g$ls/false$10865$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10864$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10864$xgWN3 '(_ any)))))
         g$stx$10863$xgWN3))))
   (g$delay-macro$10027$xgWN3
     g$delay-macro$13568$xgWN3
     (case-lambda
       ((g$stx$10874$xgWN3)
        ((case-lambda
           ((g$t$10875$xgWN3)
            ((case-lambda
               ((g$ls/false$10876$xgWN3)
                (if g$ls/false$10876$xgWN3
                  (apply
                    (case-lambda
                      ((g$expr$10877$xgWN3)
                       (g$bless$10012$xgWN3
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$10877$xgWN3)))))
                    g$ls/false$10876$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10875$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10875$xgWN3 '(_ any)))))
         g$stx$10874$xgWN3))))
   (g$assert-macro$10028$xgWN3
     g$assert-macro$13569$xgWN3
     (case-lambda
       ((g$stx$10878$xgWN3)
        ((case-lambda
           ((g$t$10879$xgWN3)
            ((case-lambda
               ((g$ls/false$10880$xgWN3)
                (if g$ls/false$10880$xgWN3
                  (apply
                    (case-lambda
                      ((g$expr$10881$xgWN3)
                       ((case-lambda
                          ((g$pos$10882$xgWN3)
                           (g$bless$10012$xgWN3
                             (list
                               'unless
                               g$expr$10881$xgWN3
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$10881$xgWN3)
                                 (list 'quote g$pos$10882$xgWN3))))))
                        ((case-lambda
                           ((g$t$10883$xgWN3)
                            (if g$t$10883$xgWN3
                              g$t$10883$xgWN3
                              (begin
                                '#f
                                (g$expression-position$10162$xgWN3
                                  g$expr$10881$xgWN3)))))
                         (g$expression-position$10162$xgWN3
                           g$stx$10878$xgWN3)))))
                    g$ls/false$10880$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10879$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10879$xgWN3 '(_ any)))))
         g$stx$10878$xgWN3))))
   (g$endianness-macro$10029$xgWN3
     g$endianness-macro$13570$xgWN3
     (case-lambda
       ((g$stx$10884$xgWN3)
        ((case-lambda
           ((g$t$10885$xgWN3)
            ((case-lambda
               ((g$ls/false$10886$xgWN3)
                (if g$ls/false$10886$xgWN3
                  (apply
                    (case-lambda
                      ((g$e$10887$xgWN3)
                       ((case-lambda
                          ((g$t$10888$xgWN3)
                           (if (g$memv$6078$xgWN3 g$t$10888$xgWN3 '(little))
                             (g$bless$10012$xgWN3 ''little)
                             (if (g$memv$6078$xgWN3 g$t$10888$xgWN3 '(big))
                               (g$bless$10012$xgWN3 ''big)
                               (g$syntax-violation$10167$xgWN3
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$10884$xgWN3)))))
                        (g$syntax->datum$10170$xgWN3 g$e$10887$xgWN3))))
                    g$ls/false$10886$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10885$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10885$xgWN3 '(_ any)))))
         g$stx$10884$xgWN3))))
   (g$identifier-syntax-macro$10030$xgWN3
     g$identifier-syntax-macro$13571$xgWN3
     (case-lambda
       ((g$stx$10889$xgWN3)
        ((case-lambda
           ((g$t$10890$xgWN3)
            ((case-lambda
               ((g$ls/false$10891$xgWN3)
                (if g$ls/false$10891$xgWN3
                  (apply
                    (case-lambda
                      ((g$expr$10892$xgWN3)
                       (g$bless$10012$xgWN3
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$10892$xgWN3))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$10892$xgWN3)
                                   '(#'(e* ...))))))))))
                    g$ls/false$10891$xgWN3)
                  ((case-lambda
                     ((g$t$10893$xgWN3)
                      ((case-lambda
                         ((g$ls/false$10894$xgWN3)
                          (if (if g$ls/false$10894$xgWN3
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$10895$xgWN3
                                         g$expr1$10896$xgWN3
                                         g$id2$10897$xgWN3
                                         g$expr2$10898$xgWN3
                                         g$expr3$10899$xgWN3)
                                       (if (g$id?$9686$xgWN3 g$id1$10895$xgWN3)
                                         (if (g$id?$9686$xgWN3
                                               g$id2$10897$xgWN3)
                                           (begin
                                             '#f
                                             (g$id?$9686$xgWN3
                                               g$expr2$10898$xgWN3))
                                           '#f)
                                         '#f)))
                                    g$ls/false$10894$xgWN3))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$10900$xgWN3
                                   g$expr1$10901$xgWN3
                                   g$id2$10902$xgWN3
                                   g$expr2$10903$xgWN3
                                   g$expr3$10904$xgWN3)
                                 (g$bless$10012$xgWN3
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$10901$xgWN3))
                                         (list
                                           (list 'set! 'id g$expr2$10903$xgWN3)
                                           (list 'syntax g$expr3$10904$xgWN3))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$10901$xgWN3
                                               '(e* ...))))))))))
                              g$ls/false$10894$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$10893$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$10893$xgWN3
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$10890$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10890$xgWN3 '(_ any)))))
         g$stx$10889$xgWN3))))
   (g$do-macro$10031$xgWN3
     g$do-macro$13572$xgWN3
     (case-lambda
       ((g$stx$10905$xgWN3)
        (letrec* ((g$bind$10906$xgWN3
                    (case-lambda
                      ((g$x$10918$xgWN3)
                       ((case-lambda
                          ((g$t$10919$xgWN3)
                           ((case-lambda
                              ((g$ls/false$10920$xgWN3)
                               (if g$ls/false$10920$xgWN3
                                 (apply
                                   (case-lambda
                                     ((g$x$10921$xgWN3 g$init$10922$xgWN3)
                                      (list
                                        g$x$10921$xgWN3
                                        g$init$10922$xgWN3
                                        g$x$10921$xgWN3)))
                                   g$ls/false$10920$xgWN3)
                                 ((case-lambda
                                    ((g$t$10923$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$10924$xgWN3)
                                         (if g$ls/false$10924$xgWN3
                                           (apply
                                             (case-lambda
                                               ((g$x$10925$xgWN3
                                                  g$init$10926$xgWN3
                                                  g$step$10927$xgWN3)
                                                (list
                                                  g$x$10925$xgWN3
                                                  g$init$10926$xgWN3
                                                  g$step$10927$xgWN3)))
                                             g$ls/false$10924$xgWN3)
                                           ((case-lambda
                                              ((g$t$10928$xgWN3)
                                               ((case-lambda
                                                  ((g$ls/false$10929$xgWN3)
                                                   (if g$ls/false$10929$xgWN3
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$10167$xgWN3
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$10905$xgWN3)))
                                                       g$ls/false$10929$xgWN3)
                                                     (g$syntax-violation$10167$xgWN3
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10928$xgWN3))))
                                                (g$syntax-dispatch$10049$xgWN3
                                                  g$t$10928$xgWN3
                                                  '_))))
                                            g$t$10923$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$10923$xgWN3
                                        '(any any any)))))
                                  g$t$10919$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$10919$xgWN3
                              '(any any)))))
                        g$x$10918$xgWN3)))))
          ((case-lambda
             ((g$t$10907$xgWN3)
              ((case-lambda
                 ((g$ls/false$10908$xgWN3)
                  (if g$ls/false$10908$xgWN3
                    (apply
                      (case-lambda
                        ((g$binding*$10909$xgWN3
                           g$test$10910$xgWN3
                           g$expr*$10911$xgWN3
                           g$command*$10912$xgWN3)
                         ((case-lambda
                            ((g$t$10913$xgWN3)
                             ((case-lambda
                                ((g$ls/false$10914$xgWN3)
                                 (if g$ls/false$10914$xgWN3
                                   (apply
                                     (case-lambda
                                       ((g$x*$10915$xgWN3
                                          g$init*$10916$xgWN3
                                          g$step*$10917$xgWN3)
                                        (if (g$valid-bound-ids?$9691$xgWN3
                                              g$x*$10915$xgWN3)
                                          (g$bless$10012$xgWN3
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$10915$xgWN3
                                                    (list
                                                      'if
                                                      g$test$10910$xgWN3
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$10911$xgWN3))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$10912$xgWN3
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$10917$xgWN3))))))))
                                              (cons 'loop g$init*$10916$xgWN3)))
                                          (g$syntax-violation$10167$xgWN3
                                            '#f
                                            '"invalid bindings"
                                            g$stx$10905$xgWN3))))
                                     g$ls/false$10914$xgWN3)
                                   (g$syntax-violation$10167$xgWN3
                                     '#f
                                     '"invalid syntax"
                                     g$t$10913$xgWN3))))
                              (g$syntax-dispatch$10049$xgWN3
                                g$t$10913$xgWN3
                                '#(each (any any any))))))
                          (g$map$6085$xgWN3
                            g$bind$10906$xgWN3
                            g$binding*$10909$xgWN3))))
                      g$ls/false$10908$xgWN3)
                    (g$syntax-violation$10167$xgWN3
                      '#f
                      '"invalid syntax"
                      g$t$10907$xgWN3))))
               (g$syntax-dispatch$10049$xgWN3
                 g$t$10907$xgWN3
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$10905$xgWN3)))))
   (g$let*-macro$10032$xgWN3
     g$let*-macro$13573$xgWN3
     (case-lambda
       ((g$stx$10930$xgWN3)
        ((case-lambda
           ((g$t$10931$xgWN3)
            ((case-lambda
               ((g$ls/false$10932$xgWN3)
                (if (if g$ls/false$10932$xgWN3
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$10933$xgWN3
                               g$rhs*$10934$xgWN3
                               g$b$10935$xgWN3
                               g$b*$10936$xgWN3)
                             (g$for-all$6083$xgWN3
                               g$id?$9686$xgWN3
                               g$lhs*$10933$xgWN3)))
                          g$ls/false$10932$xgWN3))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$10937$xgWN3
                         g$rhs*$10938$xgWN3
                         g$b$10939$xgWN3
                         g$b*$10940$xgWN3)
                       (g$bless$10012$xgWN3
                         ((letrec ((g$f$10941$xgWN3
                                     (case-lambda
                                       ((g$x*$10942$xgWN3)
                                        (if (null? g$x*$10942$xgWN3)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$10939$xgWN3
                                                g$b*$10940$xgWN3)))
                                          (if (null? (cdr g$x*$10942$xgWN3))
                                            (cons
                                              'let
                                              (cons
                                                (list (car g$x*$10942$xgWN3))
                                                (cons
                                                  g$b$10939$xgWN3
                                                  g$b*$10940$xgWN3)))
                                            (list
                                              'let
                                              (list (car g$x*$10942$xgWN3))
                                              (g$f$10941$xgWN3
                                                (cdr g$x*$10942$xgWN3)))))))))
                            g$f$10941$xgWN3)
                          (g$map$6085$xgWN3
                            list
                            g$lhs*$10937$xgWN3
                            g$rhs*$10938$xgWN3)))))
                    g$ls/false$10932$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10931$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10931$xgWN3
               '(_ #(each (any any)) any . each-any)))))
         g$stx$10930$xgWN3))))
   (g$or-macro$10033$xgWN3
     g$or-macro$13574$xgWN3
     (case-lambda
       ((g$stx$10943$xgWN3)
        ((case-lambda
           ((g$t$10944$xgWN3)
            ((case-lambda
               ((g$ls/false$10945$xgWN3)
                (if g$ls/false$10945$xgWN3
                  (apply (case-lambda (() '#f)) g$ls/false$10945$xgWN3)
                  ((case-lambda
                     ((g$t$10946$xgWN3)
                      ((case-lambda
                         ((g$ls/false$10947$xgWN3)
                          (if g$ls/false$10947$xgWN3
                            (apply
                              (case-lambda
                                ((g$e$10948$xgWN3 g$e*$10949$xgWN3)
                                 (g$bless$10012$xgWN3
                                   ((letrec ((g$f$10950$xgWN3
                                               (case-lambda
                                                 ((g$e$10951$xgWN3
                                                    g$e*$10952$xgWN3)
                                                  (if (null? g$e*$10952$xgWN3)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$10951$xgWN3)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$10951$xgWN3))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$10950$xgWN3
                                                          (car g$e*$10952$xgWN3)
                                                          (cdr g$e*$10952$xgWN3)))))))))
                                      g$f$10950$xgWN3)
                                    g$e$10948$xgWN3
                                    g$e*$10949$xgWN3))))
                              g$ls/false$10947$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$10946$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$10946$xgWN3
                         '(_ any . each-any)))))
                   g$t$10944$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10944$xgWN3 '(_)))))
         g$stx$10943$xgWN3))))
   (g$and-macro$10034$xgWN3
     g$and-macro$13575$xgWN3
     (case-lambda
       ((g$stx$10953$xgWN3)
        ((case-lambda
           ((g$t$10954$xgWN3)
            ((case-lambda
               ((g$ls/false$10955$xgWN3)
                (if g$ls/false$10955$xgWN3
                  (apply (case-lambda (() '#t)) g$ls/false$10955$xgWN3)
                  ((case-lambda
                     ((g$t$10956$xgWN3)
                      ((case-lambda
                         ((g$ls/false$10957$xgWN3)
                          (if g$ls/false$10957$xgWN3
                            (apply
                              (case-lambda
                                ((g$e$10958$xgWN3 g$e*$10959$xgWN3)
                                 (g$bless$10012$xgWN3
                                   ((letrec ((g$f$10960$xgWN3
                                               (case-lambda
                                                 ((g$e$10961$xgWN3
                                                    g$e*$10962$xgWN3)
                                                  (if (null? g$e*$10962$xgWN3)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$10961$xgWN3)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$10961$xgWN3
                                                        (cons
                                                          (g$f$10960$xgWN3
                                                            (car g$e*$10962$xgWN3)
                                                            (cdr g$e*$10962$xgWN3))
                                                          '(#f)))))))))
                                      g$f$10960$xgWN3)
                                    g$e$10958$xgWN3
                                    g$e*$10959$xgWN3))))
                              g$ls/false$10957$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$10956$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$10956$xgWN3
                         '(_ any . each-any)))))
                   g$t$10954$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$10954$xgWN3 '(_)))))
         g$stx$10953$xgWN3))))
   (g$cond-macro$10035$xgWN3
     g$cond-macro$13576$xgWN3
     (case-lambda
       ((g$stx$10963$xgWN3)
        ((case-lambda
           ((g$t$10964$xgWN3)
            ((case-lambda
               ((g$ls/false$10965$xgWN3)
                (if g$ls/false$10965$xgWN3
                  (apply
                    (case-lambda
                      ((g$cls$10966$xgWN3 g$cls*$10967$xgWN3)
                       (g$bless$10012$xgWN3
                         ((letrec ((g$f$10968$xgWN3
                                     (case-lambda
                                       ((g$cls$10969$xgWN3 g$cls*$10970$xgWN3)
                                        (if (null? g$cls*$10970$xgWN3)
                                          ((case-lambda
                                             ((g$t$10971$xgWN3)
                                              ((case-lambda
                                                 ((g$ls/false$10972$xgWN3)
                                                  (if g$ls/false$10972$xgWN3
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$10973$xgWN3
                                                           g$e*$10974$xgWN3)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$10973$xgWN3
                                                             g$e*$10974$xgWN3))))
                                                      g$ls/false$10972$xgWN3)
                                                    ((case-lambda
                                                       ((g$t$10975$xgWN3)
                                                        ((case-lambda
                                                           ((g$ls/false$10976$xgWN3)
                                                            (if g$ls/false$10976$xgWN3
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$10977$xgWN3
                                                                     g$p$10978$xgWN3)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$10977$xgWN3))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$10978$xgWN3
                                                                         '(t))))))
                                                                g$ls/false$10976$xgWN3)
                                                              ((case-lambda
                                                                 ((g$t$10979$xgWN3)
                                                                  ((case-lambda
                                                                     ((g$ls/false$10980$xgWN3)
                                                                      (if g$ls/false$10980$xgWN3
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$10981$xgWN3)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$10981$xgWN3
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$10980$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$t$10982$xgWN3)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10983$xgWN3)
                                                                                (if g$ls/false$10983$xgWN3
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$10984$xgWN3
                                                                                         g$e*$10985$xgWN3)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$10984$xgWN3
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$10985$xgWN3))))
                                                                                    g$ls/false$10983$xgWN3)
                                                                                  ((case-lambda
                                                                                     ((g$t$10986$xgWN3)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10987$xgWN3)
                                                                                          (if g$ls/false$10987$xgWN3
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$10167$xgWN3
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$10963$xgWN3)))
                                                                                              g$ls/false$10987$xgWN3)
                                                                                            (g$syntax-violation$10167$xgWN3
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10986$xgWN3))))
                                                                                       (g$syntax-dispatch$10049$xgWN3
                                                                                         g$t$10986$xgWN3
                                                                                         '_))))
                                                                                   g$t$10982$xgWN3))))
                                                                             (g$syntax-dispatch$10049$xgWN3
                                                                               g$t$10982$xgWN3
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$10979$xgWN3))))
                                                                   (g$syntax-dispatch$10049$xgWN3
                                                                     g$t$10979$xgWN3
                                                                     '(any)))))
                                                               g$t$10975$xgWN3))))
                                                         (g$syntax-dispatch$10049$xgWN3
                                                           g$t$10975$xgWN3
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$10971$xgWN3))))
                                               (g$syntax-dispatch$10049$xgWN3
                                                 g$t$10971$xgWN3
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$10969$xgWN3)
                                          ((case-lambda
                                             ((g$t$10988$xgWN3)
                                              ((case-lambda
                                                 ((g$ls/false$10989$xgWN3)
                                                  (if g$ls/false$10989$xgWN3
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$10990$xgWN3
                                                           g$e*$10991$xgWN3)
                                                         (g$syntax-violation$10167$xgWN3
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$10963$xgWN3)))
                                                      g$ls/false$10989$xgWN3)
                                                    ((case-lambda
                                                       ((g$t$10992$xgWN3)
                                                        ((case-lambda
                                                           ((g$ls/false$10993$xgWN3)
                                                            (if g$ls/false$10993$xgWN3
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$10994$xgWN3
                                                                     g$p$10995$xgWN3)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$10994$xgWN3))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$10995$xgWN3
                                                                         '(t))
                                                                       (g$f$10968$xgWN3
                                                                         (car g$cls*$10970$xgWN3)
                                                                         (cdr g$cls*$10970$xgWN3))))))
                                                                g$ls/false$10993$xgWN3)
                                                              ((case-lambda
                                                                 ((g$t$10996$xgWN3)
                                                                  ((case-lambda
                                                                     ((g$ls/false$10997$xgWN3)
                                                                      (if g$ls/false$10997$xgWN3
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$10998$xgWN3)
                                                                             (list
                                                                               'or
                                                                               g$e$10998$xgWN3
                                                                               (g$f$10968$xgWN3
                                                                                 (car g$cls*$10970$xgWN3)
                                                                                 (cdr g$cls*$10970$xgWN3)))))
                                                                          g$ls/false$10997$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$t$10999$xgWN3)
                                                                            ((case-lambda
                                                                               ((g$ls/false$11000$xgWN3)
                                                                                (if g$ls/false$11000$xgWN3
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$11001$xgWN3
                                                                                         g$e*$11002$xgWN3)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$11001$xgWN3
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$11002$xgWN3)
                                                                                         (g$f$10968$xgWN3
                                                                                           (car g$cls*$10970$xgWN3)
                                                                                           (cdr g$cls*$10970$xgWN3)))))
                                                                                    g$ls/false$11000$xgWN3)
                                                                                  ((case-lambda
                                                                                     ((g$t$11003$xgWN3)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$11004$xgWN3)
                                                                                          (if g$ls/false$11004$xgWN3
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$10167$xgWN3
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$10963$xgWN3)))
                                                                                              g$ls/false$11004$xgWN3)
                                                                                            (g$syntax-violation$10167$xgWN3
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$11003$xgWN3))))
                                                                                       (g$syntax-dispatch$10049$xgWN3
                                                                                         g$t$11003$xgWN3
                                                                                         '_))))
                                                                                   g$t$10999$xgWN3))))
                                                                             (g$syntax-dispatch$10049$xgWN3
                                                                               g$t$10999$xgWN3
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$10996$xgWN3))))
                                                                   (g$syntax-dispatch$10049$xgWN3
                                                                     g$t$10996$xgWN3
                                                                     '(any)))))
                                                               g$t$10992$xgWN3))))
                                                         (g$syntax-dispatch$10049$xgWN3
                                                           g$t$10992$xgWN3
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$10988$xgWN3))))
                                               (g$syntax-dispatch$10049$xgWN3
                                                 g$t$10988$xgWN3
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$10969$xgWN3))))))
                            g$f$10968$xgWN3)
                          g$cls$10966$xgWN3
                          g$cls*$10967$xgWN3))))
                    g$ls/false$10965$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$10964$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$10964$xgWN3
               '(_ any . each-any)))))
         g$stx$10963$xgWN3))))
   (g$do-include$10036$xgWN3
     g$do-include$13577$xgWN3
     (case-lambda
       ((g$stx$11005$xgWN3 g$id$11006$xgWN3 g$filename$11007$xgWN3)
        ((case-lambda
           ((g$filename$11008$xgWN3)
            (begin
              (if (not (if (string? g$filename$11008$xgWN3)
                         (begin '#f (g$id?$9686$xgWN3 g$id$11006$xgWN3))
                         '#f))
                (g$syntax-violation$10167$xgWN3
                  '#f
                  '"invalid syntax"
                  g$stx$11005$xgWN3)
                (void))
              (cons
                (g$bless$10012$xgWN3 'begin)
                (g$with-input-from-file$8249$xgWN3
                  g$filename$11008$xgWN3
                  (case-lambda
                    (()
                     ((letrec ((g$f$11009$xgWN3
                                 (case-lambda
                                   ((g$ls$11010$xgWN3)
                                    ((case-lambda
                                       ((g$x$11011$xgWN3)
                                        (if (eof-object? g$x$11011$xgWN3)
                                          (g$reverse$6763$xgWN3
                                            g$ls$11010$xgWN3)
                                          (g$f$11009$xgWN3
                                            (cons
                                              (g$datum->stx$9669$xgWN3
                                                g$id$11006$xgWN3
                                                g$x$11011$xgWN3)
                                              g$ls$11010$xgWN3)))))
                                     (read-annotated))))))
                        g$f$11009$xgWN3)
                      '()))))))))
         (g$stx->datum$9697$xgWN3 g$filename$11007$xgWN3)))))
   (g$include-macro$10037$xgWN3
     g$include-macro$13578$xgWN3
     (case-lambda
       ((g$e$11012$xgWN3)
        ((case-lambda
           ((g$t$11013$xgWN3)
            ((case-lambda
               ((g$ls/false$11014$xgWN3)
                (if g$ls/false$11014$xgWN3
                  (apply
                    (case-lambda
                      ((g$id$11015$xgWN3 g$filename$11016$xgWN3)
                       (g$do-include$10036$xgWN3
                         g$e$11012$xgWN3
                         g$id$11015$xgWN3
                         g$filename$11016$xgWN3)))
                    g$ls/false$11014$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$11013$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$11013$xgWN3 '(any any)))))
         g$e$11012$xgWN3))))
   (g$include-into-macro$10038$xgWN3
     g$include-into-macro$13579$xgWN3
     (case-lambda
       ((g$e$11017$xgWN3)
        ((case-lambda
           ((g$t$11018$xgWN3)
            ((case-lambda
               ((g$ls/false$11019$xgWN3)
                (if g$ls/false$11019$xgWN3
                  (apply
                    (case-lambda
                      ((g$id$11020$xgWN3 g$filename$11021$xgWN3)
                       (g$do-include$10036$xgWN3
                         g$e$11017$xgWN3
                         g$id$11020$xgWN3
                         g$filename$11021$xgWN3)))
                    g$ls/false$11019$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$11018$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$11018$xgWN3 '(_ any any)))))
         g$e$11017$xgWN3))))
   (g$syntax-rules-macro$10039$xgWN3
     g$syntax-rules-macro$13580$xgWN3
     (case-lambda
       ((g$e$11022$xgWN3)
        ((case-lambda
           ((g$t$11023$xgWN3)
            ((case-lambda
               ((g$ls/false$11024$xgWN3)
                (if g$ls/false$11024$xgWN3
                  (apply
                    (case-lambda
                      ((g$lits$11025$xgWN3
                         g$pat*$11026$xgWN3
                         g$tmp*$11027$xgWN3)
                       (begin
                         (g$verify-literals$10052$xgWN3
                           g$lits$11025$xgWN3
                           g$e$11022$xgWN3)
                         (g$bless$10012$xgWN3
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$11025$xgWN3
                                   (g$map$6085$xgWN3
                                     (case-lambda
                                       ((g$pat$11028$xgWN3 g$tmp$11029$xgWN3)
                                        ((case-lambda
                                           ((g$t$11030$xgWN3)
                                            ((case-lambda
                                               ((g$ls/false$11031$xgWN3)
                                                (if g$ls/false$11031$xgWN3
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$11032$xgWN3)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$11032$xgWN3)
                                                         (list
                                                           'syntax
                                                           g$tmp$11029$xgWN3))))
                                                    g$ls/false$11031$xgWN3)
                                                  ((case-lambda
                                                     ((g$t$11033$xgWN3)
                                                      ((case-lambda
                                                         ((g$ls/false$11034$xgWN3)
                                                          (if g$ls/false$11034$xgWN3
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$10167$xgWN3
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$11022$xgWN3
                                                                   g$pat$11028$xgWN3)))
                                                              g$ls/false$11034$xgWN3)
                                                            (g$syntax-violation$10167$xgWN3
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$11033$xgWN3))))
                                                       (g$syntax-dispatch$10049$xgWN3
                                                         g$t$11033$xgWN3
                                                         '_))))
                                                   g$t$11030$xgWN3))))
                                             (g$syntax-dispatch$10049$xgWN3
                                               g$t$11030$xgWN3
                                               '(_ . any)))))
                                         g$pat$11028$xgWN3)))
                                     g$pat*$11026$xgWN3
                                     g$tmp*$11027$xgWN3)))))))))
                    g$ls/false$11024$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$11023$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$11023$xgWN3
               '(_ each-any . #(each (any any)))))))
         g$e$11022$xgWN3))))
   (g$quasiquote-macro$10040$xgWN3
     g$quasiquote-macro$13581$xgWN3
     ((case-lambda
        (()
         (letrec* ((g$datum$11035$xgWN3
                     (case-lambda
                       ((g$x$11179$xgWN3)
                        (list
                          (g$scheme-stx$9992$xgWN3 'quote)
                          (g$mkstx$9674$xgWN3 g$x$11179$xgWN3 '() '() '())))))
                   (g$quasicons*$11064$xgWN3
                     (case-lambda
                       ((g$x$11175$xgWN3 g$y$11176$xgWN3)
                        ((letrec ((g$f$11177$xgWN3
                                    (case-lambda
                                      ((g$x$11178$xgWN3)
                                       (if (null? g$x$11178$xgWN3)
                                         g$y$11176$xgWN3
                                         (g$quasicons$11065$xgWN3
                                           (car g$x$11178$xgWN3)
                                           (g$f$11177$xgWN3
                                             (cdr g$x$11178$xgWN3))))))))
                           g$f$11177$xgWN3)
                         g$x$11175$xgWN3))))
                   (g$quasicons$11065$xgWN3
                     (case-lambda
                       ((g$x$11156$xgWN3 g$y$11157$xgWN3)
                        ((case-lambda
                           ((g$t$11158$xgWN3)
                            ((case-lambda
                               ((g$ls/false$11159$xgWN3)
                                (if g$ls/false$11159$xgWN3
                                  (apply
                                    (case-lambda
                                      ((g$dy$11160$xgWN3)
                                       ((case-lambda
                                          ((g$t$11161$xgWN3)
                                           ((case-lambda
                                              ((g$ls/false$11162$xgWN3)
                                               (if g$ls/false$11162$xgWN3
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$11163$xgWN3)
                                                      (list
                                                        (g$scheme-stx$9992$xgWN3
                                                          'quote)
                                                        (cons
                                                          g$dx$11163$xgWN3
                                                          g$dy$11160$xgWN3))))
                                                   g$ls/false$11162$xgWN3)
                                                 ((case-lambda
                                                    ((g$t$11164$xgWN3)
                                                     ((case-lambda
                                                        ((g$ls/false$11165$xgWN3)
                                                         (if g$ls/false$11165$xgWN3
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$11166$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$ls/false$11167$xgWN3)
                                                                        (if g$ls/false$11167$xgWN3
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$9992$xgWN3
                                                                                   'list)
                                                                                 g$x$11156$xgWN3)))
                                                                            g$ls/false$11167$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$t$11168$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$11169$xgWN3)
                                                                                  (if g$ls/false$11169$xgWN3
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$9992$xgWN3
                                                                                             'cons)
                                                                                           g$x$11156$xgWN3
                                                                                           g$y$11157$xgWN3)))
                                                                                      g$ls/false$11169$xgWN3)
                                                                                    (g$syntax-violation$10167$xgWN3
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$11168$xgWN3))))
                                                                               (g$syntax-dispatch$10049$xgWN3
                                                                                 g$t$11168$xgWN3
                                                                                 '_))))
                                                                           g$t$11166$xgWN3))))
                                                                     (g$syntax-dispatch$10049$xgWN3
                                                                       g$t$11166$xgWN3
                                                                       '()))))
                                                                 g$dy$11160$xgWN3)))
                                                             g$ls/false$11165$xgWN3)
                                                           (g$syntax-violation$10167$xgWN3
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$11164$xgWN3))))
                                                      (g$syntax-dispatch$10049$xgWN3
                                                        g$t$11164$xgWN3
                                                        '_))))
                                                  g$t$11161$xgWN3))))
                                            (g$syntax-dispatch$10049$xgWN3
                                              g$t$11161$xgWN3
                                              '(#(scheme-id quote) any)))))
                                        g$x$11156$xgWN3)))
                                    g$ls/false$11159$xgWN3)
                                  ((case-lambda
                                     ((g$t$11170$xgWN3)
                                      ((case-lambda
                                         ((g$ls/false$11171$xgWN3)
                                          (if g$ls/false$11171$xgWN3
                                            (apply
                                              (case-lambda
                                                ((g$stuff$11172$xgWN3)
                                                 (g$cons*$6087$xgWN3
                                                   (g$scheme-stx$9992$xgWN3
                                                     'list)
                                                   g$x$11156$xgWN3
                                                   g$stuff$11172$xgWN3)))
                                              g$ls/false$11171$xgWN3)
                                            ((case-lambda
                                               ((g$t$11173$xgWN3)
                                                ((case-lambda
                                                   ((g$ls/false$11174$xgWN3)
                                                    (if g$ls/false$11174$xgWN3
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$9992$xgWN3
                                                               'cons)
                                                             g$x$11156$xgWN3
                                                             g$y$11157$xgWN3)))
                                                        g$ls/false$11174$xgWN3)
                                                      (g$syntax-violation$10167$xgWN3
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$11173$xgWN3))))
                                                 (g$syntax-dispatch$10049$xgWN3
                                                   g$t$11173$xgWN3
                                                   '_))))
                                             g$t$11170$xgWN3))))
                                       (g$syntax-dispatch$10049$xgWN3
                                         g$t$11170$xgWN3
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$11158$xgWN3))))
                             (g$syntax-dispatch$10049$xgWN3
                               g$t$11158$xgWN3
                               '(#(scheme-id quote) any)))))
                         g$y$11157$xgWN3))))
                   (g$quasiappend$11066$xgWN3
                     (case-lambda
                       ((g$x$11143$xgWN3 g$y$11144$xgWN3)
                        ((case-lambda
                           ((g$ls$11145$xgWN3)
                            (if (null? g$ls$11145$xgWN3)
                              (list (g$scheme-stx$9992$xgWN3 'quote) '())
                              (if (null? (cdr g$ls$11145$xgWN3))
                                (car g$ls$11145$xgWN3)
                                (g$cons*$6087$xgWN3
                                  (g$scheme-stx$9992$xgWN3 'append)
                                  g$ls$11145$xgWN3)))))
                         ((letrec ((g$f$11146$xgWN3
                                     (case-lambda
                                       ((g$x$11147$xgWN3)
                                        (if (null? g$x$11147$xgWN3)
                                          ((case-lambda
                                             ((g$t$11148$xgWN3)
                                              ((case-lambda
                                                 ((g$ls/false$11149$xgWN3)
                                                  (if g$ls/false$11149$xgWN3
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$11149$xgWN3)
                                                    ((case-lambda
                                                       ((g$t$11150$xgWN3)
                                                        ((case-lambda
                                                           ((g$ls/false$11151$xgWN3)
                                                            (if g$ls/false$11151$xgWN3
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$11144$xgWN3)))
                                                                g$ls/false$11151$xgWN3)
                                                              (g$syntax-violation$10167$xgWN3
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$11150$xgWN3))))
                                                         (g$syntax-dispatch$10049$xgWN3
                                                           g$t$11150$xgWN3
                                                           '_))))
                                                     g$t$11148$xgWN3))))
                                               (g$syntax-dispatch$10049$xgWN3
                                                 g$t$11148$xgWN3
                                                 '(#(scheme-id quote) ())))))
                                           g$y$11144$xgWN3)
                                          ((case-lambda
                                             ((g$t$11152$xgWN3)
                                              ((case-lambda
                                                 ((g$ls/false$11153$xgWN3)
                                                  (if g$ls/false$11153$xgWN3
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$11146$xgWN3
                                                           (cdr g$x$11147$xgWN3))))
                                                      g$ls/false$11153$xgWN3)
                                                    ((case-lambda
                                                       ((g$t$11154$xgWN3)
                                                        ((case-lambda
                                                           ((g$ls/false$11155$xgWN3)
                                                            (if g$ls/false$11155$xgWN3
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$11147$xgWN3)
                                                                     (g$f$11146$xgWN3
                                                                       (cdr g$x$11147$xgWN3)))))
                                                                g$ls/false$11155$xgWN3)
                                                              (g$syntax-violation$10167$xgWN3
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$11154$xgWN3))))
                                                         (g$syntax-dispatch$10049$xgWN3
                                                           g$t$11154$xgWN3
                                                           '_))))
                                                     g$t$11152$xgWN3))))
                                               (g$syntax-dispatch$10049$xgWN3
                                                 g$t$11152$xgWN3
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$11147$xgWN3)))))))
                            g$f$11146$xgWN3)
                          g$x$11143$xgWN3)))))
                   (g$quasivector$11067$xgWN3
                     (case-lambda
                       ((g$x$11118$xgWN3)
                        ((case-lambda
                           ((g$pat-x$11119$xgWN3)
                            ((case-lambda
                               ((g$t$11120$xgWN3)
                                ((case-lambda
                                   ((g$ls/false$11121$xgWN3)
                                    (if g$ls/false$11121$xgWN3
                                      (apply
                                        (case-lambda
                                          ((g$x*$11122$xgWN3)
                                           (list
                                             (g$scheme-stx$9992$xgWN3 'quote)
                                             (g$list->vector$6751$xgWN3
                                               g$x*$11122$xgWN3))))
                                        g$ls/false$11121$xgWN3)
                                      ((case-lambda
                                         ((g$t$11123$xgWN3)
                                          ((case-lambda
                                             ((g$ls/false$11124$xgWN3)
                                              (if g$ls/false$11124$xgWN3
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$11125$xgWN3
                                                                 (case-lambda
                                                                   ((g$x$11126$xgWN3
                                                                      g$k$11127$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$t$11128$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$ls/false$11129$xgWN3)
                                                                            (if g$ls/false$11129$xgWN3
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$11130$xgWN3)
                                                                                   (g$k$11127$xgWN3
                                                                                     (g$map$6085$xgWN3
                                                                                       (case-lambda
                                                                                         ((g$x$11131$xgWN3)
                                                                                          (list
                                                                                            (g$scheme-stx$9992$xgWN3
                                                                                              'quote)
                                                                                            g$x$11131$xgWN3)))
                                                                                       g$x*$11130$xgWN3))))
                                                                                g$ls/false$11129$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$t$11132$xgWN3)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$11133$xgWN3)
                                                                                      (if g$ls/false$11133$xgWN3
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$11134$xgWN3)
                                                                                             (g$k$11127$xgWN3
                                                                                               g$x*$11134$xgWN3)))
                                                                                          g$ls/false$11133$xgWN3)
                                                                                        ((case-lambda
                                                                                           ((g$t$11135$xgWN3)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$11136$xgWN3)
                                                                                                (if g$ls/false$11136$xgWN3
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$11137$xgWN3
                                                                                                         g$y$11138$xgWN3)
                                                                                                       (g$f$11125$xgWN3
                                                                                                         g$y$11138$xgWN3
                                                                                                         (case-lambda
                                                                                                           ((g$ls$11139$xgWN3)
                                                                                                            (g$k$11127$xgWN3
                                                                                                              (cons
                                                                                                                g$x$11137$xgWN3
                                                                                                                g$ls$11139$xgWN3)))))))
                                                                                                    g$ls/false$11136$xgWN3)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$11140$xgWN3)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$11141$xgWN3)
                                                                                                          (if g$ls/false$11141$xgWN3
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$9992$xgWN3
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$11119$xgWN3)))
                                                                                                              g$ls/false$11141$xgWN3)
                                                                                                            (g$syntax-violation$10167$xgWN3
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$11140$xgWN3))))
                                                                                                       (g$syntax-dispatch$10049$xgWN3
                                                                                                         g$t$11140$xgWN3
                                                                                                         '_))))
                                                                                                   g$t$11135$xgWN3))))
                                                                                             (g$syntax-dispatch$10049$xgWN3
                                                                                               g$t$11135$xgWN3
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$11132$xgWN3))))
                                                                                   (g$syntax-dispatch$10049$xgWN3
                                                                                     g$t$11132$xgWN3
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$11128$xgWN3))))
                                                                         (g$syntax-dispatch$10049$xgWN3
                                                                           g$t$11128$xgWN3
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$11126$xgWN3)))))
                                                        g$f$11125$xgWN3)
                                                      g$x$11118$xgWN3
                                                      (case-lambda
                                                        ((g$ls$11142$xgWN3)
                                                         (g$cons*$6087$xgWN3
                                                           (g$scheme-stx$9992$xgWN3
                                                             'vector)
                                                           g$ls$11142$xgWN3))))))
                                                  g$ls/false$11124$xgWN3)
                                                (g$syntax-violation$10167$xgWN3
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$11123$xgWN3))))
                                           (g$syntax-dispatch$10049$xgWN3
                                             g$t$11123$xgWN3
                                             '_))))
                                       g$t$11120$xgWN3))))
                                 (g$syntax-dispatch$10049$xgWN3
                                   g$t$11120$xgWN3
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$11119$xgWN3)))
                         g$x$11118$xgWN3))))
                   (g$vquasi$11068$xgWN3
                     (case-lambda
                       ((g$p$11101$xgWN3 g$lev$11102$xgWN3)
                        ((case-lambda
                           ((g$t$11103$xgWN3)
                            ((case-lambda
                               ((g$ls/false$11104$xgWN3)
                                (if g$ls/false$11104$xgWN3
                                  (apply
                                    (case-lambda
                                      ((g$p$11105$xgWN3 g$q$11106$xgWN3)
                                       ((case-lambda
                                          ((g$t$11107$xgWN3)
                                           ((case-lambda
                                              ((g$ls/false$11108$xgWN3)
                                               (if g$ls/false$11108$xgWN3
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$11109$xgWN3)
                                                      (if (= g$lev$11102$xgWN3
                                                             '0)
                                                        (g$quasicons*$11064$xgWN3
                                                          g$p$11109$xgWN3
                                                          (g$vquasi$11068$xgWN3
                                                            g$q$11106$xgWN3
                                                            g$lev$11102$xgWN3))
                                                        (g$quasicons$11065$xgWN3
                                                          (g$quasicons$11065$xgWN3
                                                            (g$datum$11035$xgWN3
                                                              'unquote)
                                                            (g$quasi$11069$xgWN3
                                                              g$p$11109$xgWN3
                                                              (- g$lev$11102$xgWN3
                                                                 '1)))
                                                          (g$vquasi$11068$xgWN3
                                                            g$q$11106$xgWN3
                                                            g$lev$11102$xgWN3)))))
                                                   g$ls/false$11108$xgWN3)
                                                 ((case-lambda
                                                    ((g$t$11110$xgWN3)
                                                     ((case-lambda
                                                        ((g$ls/false$11111$xgWN3)
                                                         (if g$ls/false$11111$xgWN3
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$11112$xgWN3)
                                                                (if (= g$lev$11102$xgWN3
                                                                       '0)
                                                                  (g$quasiappend$11066$xgWN3
                                                                    g$p$11112$xgWN3
                                                                    (g$vquasi$11068$xgWN3
                                                                      g$q$11106$xgWN3
                                                                      g$lev$11102$xgWN3))
                                                                  (g$quasicons$11065$xgWN3
                                                                    (g$quasicons$11065$xgWN3
                                                                      (g$datum$11035$xgWN3
                                                                        'unquote-splicing)
                                                                      (g$quasi$11069$xgWN3
                                                                        g$p$11112$xgWN3
                                                                        (- g$lev$11102$xgWN3
                                                                           '1)))
                                                                    (g$vquasi$11068$xgWN3
                                                                      g$q$11106$xgWN3
                                                                      g$lev$11102$xgWN3)))))
                                                             g$ls/false$11111$xgWN3)
                                                           ((case-lambda
                                                              ((g$t$11113$xgWN3)
                                                               ((case-lambda
                                                                  ((g$ls/false$11114$xgWN3)
                                                                   (if g$ls/false$11114$xgWN3
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$11115$xgWN3)
                                                                          (g$quasicons$11065$xgWN3
                                                                            (g$quasi$11069$xgWN3
                                                                              g$p$11115$xgWN3
                                                                              g$lev$11102$xgWN3)
                                                                            (g$vquasi$11068$xgWN3
                                                                              g$q$11106$xgWN3
                                                                              g$lev$11102$xgWN3))))
                                                                       g$ls/false$11114$xgWN3)
                                                                     (g$syntax-violation$10167$xgWN3
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$11113$xgWN3))))
                                                                (g$syntax-dispatch$10049$xgWN3
                                                                  g$t$11113$xgWN3
                                                                  'any))))
                                                            g$t$11110$xgWN3))))
                                                      (g$syntax-dispatch$10049$xgWN3
                                                        g$t$11110$xgWN3
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$11107$xgWN3))))
                                            (g$syntax-dispatch$10049$xgWN3
                                              g$t$11107$xgWN3
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$11105$xgWN3)))
                                    g$ls/false$11104$xgWN3)
                                  ((case-lambda
                                     ((g$t$11116$xgWN3)
                                      ((case-lambda
                                         ((g$ls/false$11117$xgWN3)
                                          (if g$ls/false$11117$xgWN3
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$9992$xgWN3
                                                     'quote)
                                                   '())))
                                              g$ls/false$11117$xgWN3)
                                            (g$syntax-violation$10167$xgWN3
                                              '#f
                                              '"invalid syntax"
                                              g$t$11116$xgWN3))))
                                       (g$syntax-dispatch$10049$xgWN3
                                         g$t$11116$xgWN3
                                         '()))))
                                   g$t$11103$xgWN3))))
                             (g$syntax-dispatch$10049$xgWN3
                               g$t$11103$xgWN3
                               '(any . any)))))
                         g$p$11101$xgWN3))))
                   (g$quasi$11069$xgWN3
                     (case-lambda
                       ((g$p$11074$xgWN3 g$lev$11075$xgWN3)
                        ((case-lambda
                           ((g$t$11076$xgWN3)
                            ((case-lambda
                               ((g$ls/false$11077$xgWN3)
                                (if g$ls/false$11077$xgWN3
                                  (apply
                                    (case-lambda
                                      ((g$p$11078$xgWN3)
                                       (if (= g$lev$11075$xgWN3 '0)
                                         g$p$11078$xgWN3
                                         (g$quasicons$11065$xgWN3
                                           (g$datum$11035$xgWN3 'unquote)
                                           (g$quasi$11069$xgWN3
                                             (list g$p$11078$xgWN3)
                                             (- g$lev$11075$xgWN3 '1))))))
                                    g$ls/false$11077$xgWN3)
                                  ((case-lambda
                                     ((g$t$11079$xgWN3)
                                      ((case-lambda
                                         ((g$ls/false$11080$xgWN3)
                                          (if g$ls/false$11080$xgWN3
                                            (apply
                                              (case-lambda
                                                ((g$p$11081$xgWN3
                                                   g$q$11082$xgWN3)
                                                 (if (= g$lev$11075$xgWN3 '0)
                                                   (g$quasicons*$11064$xgWN3
                                                     g$p$11081$xgWN3
                                                     (g$quasi$11069$xgWN3
                                                       g$q$11082$xgWN3
                                                       g$lev$11075$xgWN3))
                                                   (g$quasicons$11065$xgWN3
                                                     (g$quasicons$11065$xgWN3
                                                       (g$datum$11035$xgWN3
                                                         'unquote)
                                                       (g$quasi$11069$xgWN3
                                                         g$p$11081$xgWN3
                                                         (- g$lev$11075$xgWN3
                                                            '1)))
                                                     (g$quasi$11069$xgWN3
                                                       g$q$11082$xgWN3
                                                       g$lev$11075$xgWN3)))))
                                              g$ls/false$11080$xgWN3)
                                            ((case-lambda
                                               ((g$t$11083$xgWN3)
                                                ((case-lambda
                                                   ((g$ls/false$11084$xgWN3)
                                                    (if g$ls/false$11084$xgWN3
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$11085$xgWN3
                                                             g$q$11086$xgWN3)
                                                           (if (= g$lev$11075$xgWN3
                                                                  '0)
                                                             (g$quasiappend$11066$xgWN3
                                                               g$p$11085$xgWN3
                                                               (g$quasi$11069$xgWN3
                                                                 g$q$11086$xgWN3
                                                                 g$lev$11075$xgWN3))
                                                             (g$quasicons$11065$xgWN3
                                                               (g$quasicons$11065$xgWN3
                                                                 (g$datum$11035$xgWN3
                                                                   'unquote-splicing)
                                                                 (g$quasi$11069$xgWN3
                                                                   g$p$11085$xgWN3
                                                                   (- g$lev$11075$xgWN3
                                                                      '1)))
                                                               (g$quasi$11069$xgWN3
                                                                 g$q$11086$xgWN3
                                                                 g$lev$11075$xgWN3)))))
                                                        g$ls/false$11084$xgWN3)
                                                      ((case-lambda
                                                         ((g$t$11087$xgWN3)
                                                          ((case-lambda
                                                             ((g$ls/false$11088$xgWN3)
                                                              (if g$ls/false$11088$xgWN3
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$11089$xgWN3)
                                                                     (g$quasicons$11065$xgWN3
                                                                       (g$datum$11035$xgWN3
                                                                         'quasiquote)
                                                                       (g$quasi$11069$xgWN3
                                                                         (list
                                                                           g$p$11089$xgWN3)
                                                                         (+ g$lev$11075$xgWN3
                                                                            '1)))))
                                                                  g$ls/false$11088$xgWN3)
                                                                ((case-lambda
                                                                   ((g$t$11090$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$ls/false$11091$xgWN3)
                                                                        (if g$ls/false$11091$xgWN3
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$11092$xgWN3
                                                                                 g$q$11093$xgWN3)
                                                                               (g$quasicons$11065$xgWN3
                                                                                 (g$quasi$11069$xgWN3
                                                                                   g$p$11092$xgWN3
                                                                                   g$lev$11075$xgWN3)
                                                                                 (g$quasi$11069$xgWN3
                                                                                   g$q$11093$xgWN3
                                                                                   g$lev$11075$xgWN3))))
                                                                            g$ls/false$11091$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$t$11094$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$11095$xgWN3)
                                                                                  (if (if g$ls/false$11095$xgWN3
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$11096$xgWN3)
                                                                                               (not (g$stx?$9658$xgWN3
                                                                                                      g$x$11096$xgWN3))))
                                                                                            g$ls/false$11095$xgWN3))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$11097$xgWN3)
                                                                                         (g$quasivector$11067$xgWN3
                                                                                           (g$vquasi$11068$xgWN3
                                                                                             g$x$11097$xgWN3
                                                                                             g$lev$11075$xgWN3))))
                                                                                      g$ls/false$11095$xgWN3)
                                                                                    ((case-lambda
                                                                                       ((g$t$11098$xgWN3)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$11099$xgWN3)
                                                                                            (if g$ls/false$11099$xgWN3
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$11100$xgWN3)
                                                                                                   (list
                                                                                                     (g$scheme-stx$9992$xgWN3
                                                                                                       'quote)
                                                                                                     g$p$11100$xgWN3)))
                                                                                                g$ls/false$11099$xgWN3)
                                                                                              (g$syntax-violation$10167$xgWN3
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$11098$xgWN3))))
                                                                                         (g$syntax-dispatch$10049$xgWN3
                                                                                           g$t$11098$xgWN3
                                                                                           'any))))
                                                                                     g$t$11094$xgWN3))))
                                                                               (g$syntax-dispatch$10049$xgWN3
                                                                                 g$t$11094$xgWN3
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$11090$xgWN3))))
                                                                     (g$syntax-dispatch$10049$xgWN3
                                                                       g$t$11090$xgWN3
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$11087$xgWN3))))
                                                           (g$syntax-dispatch$10049$xgWN3
                                                             g$t$11087$xgWN3
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$11083$xgWN3))))
                                                 (g$syntax-dispatch$10049$xgWN3
                                                   g$t$11083$xgWN3
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$11079$xgWN3))))
                                       (g$syntax-dispatch$10049$xgWN3
                                         g$t$11079$xgWN3
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$11076$xgWN3))))
                             (g$syntax-dispatch$10049$xgWN3
                               g$t$11076$xgWN3
                               '(#(scheme-id unquote) any)))))
                         g$p$11074$xgWN3)))))
           (case-lambda
             ((g$x$11070$xgWN3)
              ((case-lambda
                 ((g$t$11071$xgWN3)
                  ((case-lambda
                     ((g$ls/false$11072$xgWN3)
                      (if g$ls/false$11072$xgWN3
                        (apply
                          (case-lambda
                            ((g$e$11073$xgWN3)
                             (g$quasi$11069$xgWN3 g$e$11073$xgWN3 '0)))
                          g$ls/false$11072$xgWN3)
                        (g$syntax-violation$10167$xgWN3
                          '#f
                          '"invalid syntax"
                          g$t$11071$xgWN3))))
                   (g$syntax-dispatch$10049$xgWN3 g$t$11071$xgWN3 '(_ any)))))
               g$x$11070$xgWN3))))))))
   (g$quasisyntax-macro$10041$xgWN3
     g$quasisyntax-macro$13582$xgWN3
     ((case-lambda
        (()
         (letrec* ((g$quasi$11180$xgWN3
                     (case-lambda
                       ((g$p$11194$xgWN3 g$lev$11195$xgWN3)
                        ((case-lambda
                           ((g$t$11196$xgWN3)
                            ((case-lambda
                               ((g$ls/false$11197$xgWN3)
                                (if g$ls/false$11197$xgWN3
                                  (apply
                                    (case-lambda
                                      ((g$p$11198$xgWN3)
                                       (if (= g$lev$11195$xgWN3 '0)
                                         ((case-lambda
                                            ((g$g$11199$xgWN3)
                                             (values
                                               (list g$g$11199$xgWN3)
                                               (list g$p$11198$xgWN3)
                                               g$g$11199$xgWN3)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$11180$xgWN3
                                                g$p$11198$xgWN3
                                                (- g$lev$11195$xgWN3 '1))))
                                           (case-lambda
                                             ((g$lhs*$11203$xgWN3
                                                g$rhs*$11204$xgWN3
                                                g$p$11205$xgWN3)
                                              ((case-lambda
                                                 ((g$p$11206$xgWN3
                                                    g$rhs*$11207$xgWN3
                                                    g$lhs*$11208$xgWN3)
                                                  (values
                                                    g$lhs*$11208$xgWN3
                                                    g$rhs*$11207$xgWN3
                                                    (list
                                                      'unsyntax
                                                      g$p$11206$xgWN3))))
                                               g$p$11205$xgWN3
                                               g$rhs*$11204$xgWN3
                                               g$lhs*$11203$xgWN3)))))))
                                    g$ls/false$11197$xgWN3)
                                  ((case-lambda
                                     ((g$t$11209$xgWN3)
                                      ((case-lambda
                                         ((g$ls/false$11210$xgWN3)
                                          (if (if g$ls/false$11210$xgWN3
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$11195$xgWN3
                                                          '0)))
                                                    g$ls/false$11210$xgWN3))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$10167$xgWN3
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$11194$xgWN3)))
                                              g$ls/false$11210$xgWN3)
                                            ((case-lambda
                                               ((g$t$11211$xgWN3)
                                                ((case-lambda
                                                   ((g$ls/false$11212$xgWN3)
                                                    (if g$ls/false$11212$xgWN3
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$11213$xgWN3
                                                             g$q$11214$xgWN3)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$11180$xgWN3
                                                                  g$q$11214$xgWN3
                                                                  g$lev$11195$xgWN3)))
                                                             (case-lambda
                                                               ((g$lhs*$11218$xgWN3
                                                                  g$rhs*$11219$xgWN3
                                                                  g$q$11220$xgWN3)
                                                                ((case-lambda
                                                                   ((g$q$11221$xgWN3
                                                                      g$rhs*$11222$xgWN3
                                                                      g$lhs*$11223$xgWN3)
                                                                    (if (= g$lev$11195$xgWN3
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$11224$xgWN3)
                                                                          (values
                                                                            (append
                                                                              g$g*$11224$xgWN3
                                                                              g$lhs*$11223$xgWN3)
                                                                            (append
                                                                              g$p*$11213$xgWN3
                                                                              g$rhs*$11222$xgWN3)
                                                                            (append
                                                                              g$g*$11224$xgWN3
                                                                              g$q$11221$xgWN3))))
                                                                       (g$map$6085$xgWN3
                                                                         (case-lambda
                                                                           ((g$x$11225$xgWN3)
                                                                            (gensym)))
                                                                         g$p*$11213$xgWN3))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$11180$xgWN3
                                                                             g$p*$11213$xgWN3
                                                                             (- g$lev$11195$xgWN3
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$11229$xgWN3
                                                                             g$rhs2*$11230$xgWN3
                                                                             g$p*$11231$xgWN3)
                                                                           ((case-lambda
                                                                              ((g$p*$11232$xgWN3
                                                                                 g$rhs2*$11233$xgWN3
                                                                                 g$lhs2*$11234$xgWN3)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$11234$xgWN3
                                                                                   g$lhs*$11223$xgWN3)
                                                                                 (append
                                                                                   g$rhs2*$11233$xgWN3
                                                                                   g$rhs*$11222$xgWN3)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$11232$xgWN3)
                                                                                   g$q$11221$xgWN3))))
                                                                            g$p*$11231$xgWN3
                                                                            g$rhs2*$11230$xgWN3
                                                                            g$lhs2*$11229$xgWN3)))))))
                                                                 g$q$11220$xgWN3
                                                                 g$rhs*$11219$xgWN3
                                                                 g$lhs*$11218$xgWN3))))))
                                                        g$ls/false$11212$xgWN3)
                                                      ((case-lambda
                                                         ((g$t$11235$xgWN3)
                                                          ((case-lambda
                                                             ((g$ls/false$11236$xgWN3)
                                                              (if g$ls/false$11236$xgWN3
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$11237$xgWN3
                                                                       g$q$11238$xgWN3)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$11180$xgWN3
                                                                            g$q$11238$xgWN3
                                                                            g$lev$11195$xgWN3)))
                                                                       (case-lambda
                                                                         ((g$lhs*$11242$xgWN3
                                                                            g$rhs*$11243$xgWN3
                                                                            g$q$11244$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$q$11245$xgWN3
                                                                                g$rhs*$11246$xgWN3
                                                                                g$lhs*$11247$xgWN3)
                                                                              (if (= g$lev$11195$xgWN3
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$11248$xgWN3)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$6085$xgWN3
                                                                                          (case-lambda
                                                                                            ((g$g$11249$xgWN3)
                                                                                             (cons
                                                                                               g$g$11249$xgWN3
                                                                                               '(...))))
                                                                                          g$g*$11248$xgWN3)
                                                                                        g$lhs*$11247$xgWN3)
                                                                                      (append
                                                                                        g$p*$11237$xgWN3
                                                                                        g$rhs*$11246$xgWN3)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$6085$xgWN3
                                                                                            (case-lambda
                                                                                              ((g$g$11250$xgWN3)
                                                                                               (cons
                                                                                                 g$g$11250$xgWN3
                                                                                                 '(...))))
                                                                                            g$g*$11248$xgWN3))
                                                                                        g$q$11245$xgWN3))))
                                                                                 (g$map$6085$xgWN3
                                                                                   (case-lambda
                                                                                     ((g$x$11251$xgWN3)
                                                                                      (gensym)))
                                                                                   g$p*$11237$xgWN3))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$11180$xgWN3
                                                                                       g$p*$11237$xgWN3
                                                                                       (- g$lev$11195$xgWN3
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$11255$xgWN3
                                                                                       g$rhs2*$11256$xgWN3
                                                                                       g$p*$11257$xgWN3)
                                                                                     ((case-lambda
                                                                                        ((g$p*$11258$xgWN3
                                                                                           g$rhs2*$11259$xgWN3
                                                                                           g$lhs2*$11260$xgWN3)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$11260$xgWN3
                                                                                             g$lhs*$11247$xgWN3)
                                                                                           (append
                                                                                             g$rhs2*$11259$xgWN3
                                                                                             g$rhs*$11246$xgWN3)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$11258$xgWN3)
                                                                                             g$q$11245$xgWN3))))
                                                                                      g$p*$11257$xgWN3
                                                                                      g$rhs2*$11256$xgWN3
                                                                                      g$lhs2*$11255$xgWN3)))))))
                                                                           g$q$11244$xgWN3
                                                                           g$rhs*$11243$xgWN3
                                                                           g$lhs*$11242$xgWN3))))))
                                                                  g$ls/false$11236$xgWN3)
                                                                ((case-lambda
                                                                   ((g$t$11261$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$ls/false$11262$xgWN3)
                                                                        (if (if g$ls/false$11262$xgWN3
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$11195$xgWN3
                                                                                        '0)))
                                                                                  g$ls/false$11262$xgWN3))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$10167$xgWN3
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$11194$xgWN3)))
                                                                            g$ls/false$11262$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$t$11263$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$11264$xgWN3)
                                                                                  (if g$ls/false$11264$xgWN3
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$11265$xgWN3)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$11180$xgWN3
                                                                                                g$p$11265$xgWN3
                                                                                                (+ g$lev$11195$xgWN3
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$11269$xgWN3
                                                                                                g$rhs*$11270$xgWN3
                                                                                                g$p$11271$xgWN3)
                                                                                              ((case-lambda
                                                                                                 ((g$p$11272$xgWN3
                                                                                                    g$rhs*$11273$xgWN3
                                                                                                    g$lhs*$11274$xgWN3)
                                                                                                  (values
                                                                                                    g$lhs*$11274$xgWN3
                                                                                                    g$rhs*$11273$xgWN3
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$11272$xgWN3))))
                                                                                               g$p$11271$xgWN3
                                                                                               g$rhs*$11270$xgWN3
                                                                                               g$lhs*$11269$xgWN3))))))
                                                                                      g$ls/false$11264$xgWN3)
                                                                                    ((case-lambda
                                                                                       ((g$t$11275$xgWN3)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$11276$xgWN3)
                                                                                            (if g$ls/false$11276$xgWN3
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$11277$xgWN3
                                                                                                     g$q$11278$xgWN3)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$11180$xgWN3
                                                                                                          g$p$11277$xgWN3
                                                                                                          g$lev$11195$xgWN3)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$11285$xgWN3
                                                                                                          g$rhs*$11286$xgWN3
                                                                                                          g$p$11287$xgWN3)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$11180$xgWN3
                                                                                                               g$q$11278$xgWN3
                                                                                                               g$lev$11195$xgWN3)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$11288$xgWN3
                                                                                                               g$rhs2*$11289$xgWN3
                                                                                                               g$q$11290$xgWN3)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$11291$xgWN3
                                                                                                                   g$rhs2*$11292$xgWN3
                                                                                                                   g$lhs2*$11293$xgWN3
                                                                                                                   g$p$11294$xgWN3
                                                                                                                   g$rhs*$11295$xgWN3
                                                                                                                   g$lhs*$11296$xgWN3)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$11293$xgWN3
                                                                                                                     g$lhs*$11296$xgWN3)
                                                                                                                   (append
                                                                                                                     g$rhs2*$11292$xgWN3
                                                                                                                     g$rhs*$11295$xgWN3)
                                                                                                                   (cons
                                                                                                                     g$p$11294$xgWN3
                                                                                                                     g$q$11291$xgWN3))))
                                                                                                              g$q$11290$xgWN3
                                                                                                              g$rhs2*$11289$xgWN3
                                                                                                              g$lhs2*$11288$xgWN3
                                                                                                              g$p$11287$xgWN3
                                                                                                              g$rhs*$11286$xgWN3
                                                                                                              g$lhs*$11285$xgWN3)))))))))
                                                                                                g$ls/false$11276$xgWN3)
                                                                                              ((case-lambda
                                                                                                 ((g$t$11297$xgWN3)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$11298$xgWN3)
                                                                                                      (if g$ls/false$11298$xgWN3
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$11299$xgWN3)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$11180$xgWN3
                                                                                                                    g$x*$11299$xgWN3
                                                                                                                    g$lev$11195$xgWN3)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$11303$xgWN3
                                                                                                                    g$rhs*$11304$xgWN3
                                                                                                                    g$x*$11305$xgWN3)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$11306$xgWN3
                                                                                                                        g$rhs*$11307$xgWN3
                                                                                                                        g$lhs*$11308$xgWN3)
                                                                                                                      (values
                                                                                                                        g$lhs*$11308$xgWN3
                                                                                                                        g$rhs*$11307$xgWN3
                                                                                                                        (g$list->vector$6751$xgWN3
                                                                                                                          g$x*$11306$xgWN3))))
                                                                                                                   g$x*$11305$xgWN3
                                                                                                                   g$rhs*$11304$xgWN3
                                                                                                                   g$lhs*$11303$xgWN3))))))
                                                                                                          g$ls/false$11298$xgWN3)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$11309$xgWN3)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$11310$xgWN3)
                                                                                                                (if g$ls/false$11310$xgWN3
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$11194$xgWN3)))
                                                                                                                    g$ls/false$11310$xgWN3)
                                                                                                                  (g$syntax-violation$10167$xgWN3
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$11309$xgWN3))))
                                                                                                             (g$syntax-dispatch$10049$xgWN3
                                                                                                               g$t$11309$xgWN3
                                                                                                               '_))))
                                                                                                         g$t$11297$xgWN3))))
                                                                                                   (g$syntax-dispatch$10049$xgWN3
                                                                                                     g$t$11297$xgWN3
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$11275$xgWN3))))
                                                                                         (g$syntax-dispatch$10049$xgWN3
                                                                                           g$t$11275$xgWN3
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$11263$xgWN3))))
                                                                               (g$syntax-dispatch$10049$xgWN3
                                                                                 g$t$11263$xgWN3
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$11261$xgWN3))))
                                                                     (g$syntax-dispatch$10049$xgWN3
                                                                       g$t$11261$xgWN3
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$11235$xgWN3))))
                                                           (g$syntax-dispatch$10049$xgWN3
                                                             g$t$11235$xgWN3
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$11211$xgWN3))))
                                                 (g$syntax-dispatch$10049$xgWN3
                                                   g$t$11211$xgWN3
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$11209$xgWN3))))
                                       (g$syntax-dispatch$10049$xgWN3
                                         g$t$11209$xgWN3
                                         '#(scheme-id unsyntax)))))
                                   g$t$11196$xgWN3))))
                             (g$syntax-dispatch$10049$xgWN3
                               g$t$11196$xgWN3
                               '(#(scheme-id unsyntax) any)))))
                         g$p$11194$xgWN3)))))
           (case-lambda
             ((g$x$11181$xgWN3)
              ((case-lambda
                 ((g$t$11182$xgWN3)
                  ((case-lambda
                     ((g$ls/false$11183$xgWN3)
                      (if g$ls/false$11183$xgWN3
                        (apply
                          (case-lambda
                            ((g$e$11184$xgWN3)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$11180$xgWN3 g$e$11184$xgWN3 '0)))
                               (case-lambda
                                 ((g$lhs*$11188$xgWN3
                                    g$rhs*$11189$xgWN3
                                    g$v$11190$xgWN3)
                                  ((case-lambda
                                     ((g$v$11191$xgWN3
                                        g$rhs*$11192$xgWN3
                                        g$lhs*$11193$xgWN3)
                                      (g$bless$10012$xgWN3
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$11192$xgWN3)
                                          '()
                                          (list
                                            g$lhs*$11193$xgWN3
                                            (list 'syntax g$v$11191$xgWN3))))))
                                   g$v$11190$xgWN3
                                   g$rhs*$11189$xgWN3
                                   g$lhs*$11188$xgWN3))))))
                          g$ls/false$11183$xgWN3)
                        (g$syntax-violation$10167$xgWN3
                          '#f
                          '"invalid syntax"
                          g$t$11182$xgWN3))))
                   (g$syntax-dispatch$10049$xgWN3 g$t$11182$xgWN3 '(_ any)))))
               g$x$11181$xgWN3))))))))
   (g$define-struct-macro$10042$xgWN3
     g$define-struct-macro$13583$xgWN3
     (case-lambda
       ((g$stx$11311$xgWN3)
        (g$syntax-violation$10167$xgWN3
          '#f
          '"define-struct not supported"
          g$stx$11311$xgWN3))))
   (g$define-record-type-macro$10043$xgWN3
     g$define-record-type-macro$13584$xgWN3
     (case-lambda
       ((g$x$11312$xgWN3)
        (letrec* ((g$id$11313$xgWN3
                    (case-lambda
                      ((g$ctxt$11565$xgWN3 . g$str*$11566$xgWN3)
                       (g$datum->syntax$10169$xgWN3
                         g$ctxt$11565$xgWN3
                         (string->symbol
                           (apply
                             string-append
                             (g$map$6085$xgWN3
                               (case-lambda
                                 ((g$x$11567$xgWN3)
                                  (if (g$symbol?$6756$xgWN3 g$x$11567$xgWN3)
                                    (symbol->string g$x$11567$xgWN3)
                                    (if (string? g$x$11567$xgWN3)
                                      g$x$11567$xgWN3
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$11566$xgWN3)))))))
                  (g$get-record-name$11314$xgWN3
                    (case-lambda
                      ((g$spec$11556$xgWN3)
                       ((case-lambda
                          ((g$t$11557$xgWN3)
                           ((case-lambda
                              ((g$ls/false$11558$xgWN3)
                               (if g$ls/false$11558$xgWN3
                                 (apply
                                   (case-lambda
                                     ((g$foo$11559$xgWN3
                                        g$make-foo$11560$xgWN3
                                        g$foo?$11561$xgWN3)
                                      g$foo$11559$xgWN3))
                                   g$ls/false$11558$xgWN3)
                                 ((case-lambda
                                    ((g$t$11562$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$11563$xgWN3)
                                         (if g$ls/false$11563$xgWN3
                                           (apply
                                             (case-lambda
                                               ((g$foo$11564$xgWN3)
                                                g$foo$11564$xgWN3))
                                             g$ls/false$11563$xgWN3)
                                           (g$syntax-violation$10167$xgWN3
                                             '#f
                                             '"invalid syntax"
                                             g$t$11562$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$11562$xgWN3
                                        'any))))
                                  g$t$11557$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$11557$xgWN3
                              '(any any any)))))
                        g$spec$11556$xgWN3))))
                  (g$get-record-constructor-name$11315$xgWN3
                    (case-lambda
                      ((g$spec$11546$xgWN3)
                       ((case-lambda
                          ((g$t$11547$xgWN3)
                           ((case-lambda
                              ((g$ls/false$11548$xgWN3)
                               (if g$ls/false$11548$xgWN3
                                 (apply
                                   (case-lambda
                                     ((g$foo$11549$xgWN3
                                        g$make-foo$11550$xgWN3
                                        g$foo?$11551$xgWN3)
                                      g$make-foo$11550$xgWN3))
                                   g$ls/false$11548$xgWN3)
                                 ((case-lambda
                                    ((g$t$11552$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$11553$xgWN3)
                                         (if (if g$ls/false$11553$xgWN3
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$11554$xgWN3)
                                                      (g$id?$9686$xgWN3
                                                        g$foo$11554$xgWN3)))
                                                   g$ls/false$11553$xgWN3))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$11555$xgWN3)
                                                (g$id$11313$xgWN3
                                                  g$foo$11555$xgWN3
                                                  '"make-"
                                                  (g$stx->datum$9697$xgWN3
                                                    g$foo$11555$xgWN3))))
                                             g$ls/false$11553$xgWN3)
                                           (g$syntax-violation$10167$xgWN3
                                             '#f
                                             '"invalid syntax"
                                             g$t$11552$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$11552$xgWN3
                                        'any))))
                                  g$t$11547$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$11547$xgWN3
                              '(any any any)))))
                        g$spec$11546$xgWN3))))
                  (g$get-record-predicate-name$11316$xgWN3
                    (case-lambda
                      ((g$spec$11536$xgWN3)
                       ((case-lambda
                          ((g$t$11537$xgWN3)
                           ((case-lambda
                              ((g$ls/false$11538$xgWN3)
                               (if g$ls/false$11538$xgWN3
                                 (apply
                                   (case-lambda
                                     ((g$foo$11539$xgWN3
                                        g$make-foo$11540$xgWN3
                                        g$foo?$11541$xgWN3)
                                      g$foo?$11541$xgWN3))
                                   g$ls/false$11538$xgWN3)
                                 ((case-lambda
                                    ((g$t$11542$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$11543$xgWN3)
                                         (if (if g$ls/false$11543$xgWN3
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$11544$xgWN3)
                                                      (g$id?$9686$xgWN3
                                                        g$foo$11544$xgWN3)))
                                                   g$ls/false$11543$xgWN3))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$11545$xgWN3)
                                                (g$id$11313$xgWN3
                                                  g$foo$11545$xgWN3
                                                  (g$stx->datum$9697$xgWN3
                                                    g$foo$11545$xgWN3)
                                                  '"?")))
                                             g$ls/false$11543$xgWN3)
                                           (g$syntax-violation$10167$xgWN3
                                             '#f
                                             '"invalid syntax"
                                             g$t$11542$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$11542$xgWN3
                                        'any))))
                                  g$t$11537$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$11537$xgWN3
                              '(any any any)))))
                        g$spec$11536$xgWN3))))
                  (g$get-clause$11317$xgWN3
                    (case-lambda
                      ((g$id$11527$xgWN3 g$ls$11528$xgWN3)
                       ((case-lambda
                          ((g$t$11529$xgWN3)
                           ((case-lambda
                              ((g$ls/false$11530$xgWN3)
                               (if g$ls/false$11530$xgWN3
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$11530$xgWN3)
                                 ((case-lambda
                                    ((g$t$11531$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$11532$xgWN3)
                                         (if g$ls/false$11532$xgWN3
                                           (apply
                                             (case-lambda
                                               ((g$x$11533$xgWN3
                                                  g$rest$11534$xgWN3
                                                  g$ls$11535$xgWN3)
                                                (if (g$free-id=?$9690$xgWN3
                                                      (g$bless$10012$xgWN3
                                                        g$id$11527$xgWN3)
                                                      g$x$11533$xgWN3)
                                                  (cons
                                                    g$x$11533$xgWN3
                                                    g$rest$11534$xgWN3)
                                                  (g$get-clause$11317$xgWN3
                                                    g$id$11527$xgWN3
                                                    g$ls$11535$xgWN3))))
                                             g$ls/false$11532$xgWN3)
                                           (g$syntax-violation$10167$xgWN3
                                             '#f
                                             '"invalid syntax"
                                             g$t$11531$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$11531$xgWN3
                                        '((any . any) . any)))))
                                  g$t$11529$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$11529$xgWN3
                              '()))))
                        g$ls$11528$xgWN3))))
                  (g$foo-rtd-code$11318$xgWN3
                    (case-lambda
                      ((g$name$11486$xgWN3
                         g$clause*$11487$xgWN3
                         g$parent-rtd-code$11488$xgWN3)
                       (letrec* ((g$convert-field-spec*$11489$xgWN3
                                   (case-lambda
                                     ((g$ls$11514$xgWN3)
                                      (g$list->vector$6751$xgWN3
                                        (g$map$6085$xgWN3
                                          (case-lambda
                                            ((g$x$11515$xgWN3)
                                             ((case-lambda
                                                ((g$t$11516$xgWN3)
                                                 ((case-lambda
                                                    ((g$ls/false$11517$xgWN3)
                                                     (if g$ls/false$11517$xgWN3
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$11518$xgWN3
                                                              g$rest$11519$xgWN3)
                                                            (list
                                                              'mutable
                                                              g$name$11518$xgWN3)))
                                                         g$ls/false$11517$xgWN3)
                                                       ((case-lambda
                                                          ((g$t$11520$xgWN3)
                                                           ((case-lambda
                                                              ((g$ls/false$11521$xgWN3)
                                                               (if g$ls/false$11521$xgWN3
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$11522$xgWN3
                                                                        g$rest$11523$xgWN3)
                                                                      (list
                                                                        'immutable
                                                                        g$name$11522$xgWN3)))
                                                                   g$ls/false$11521$xgWN3)
                                                                 ((case-lambda
                                                                    ((g$t$11524$xgWN3)
                                                                     ((case-lambda
                                                                        ((g$ls/false$11525$xgWN3)
                                                                         (if g$ls/false$11525$xgWN3
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$11526$xgWN3)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$11526$xgWN3)))
                                                                             g$ls/false$11525$xgWN3)
                                                                           (g$syntax-violation$10167$xgWN3
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$11524$xgWN3))))
                                                                      (g$syntax-dispatch$10049$xgWN3
                                                                        g$t$11524$xgWN3
                                                                        'any))))
                                                                  g$t$11520$xgWN3))))
                                                            (g$syntax-dispatch$10049$xgWN3
                                                              g$t$11520$xgWN3
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$11516$xgWN3))))
                                                  (g$syntax-dispatch$10049$xgWN3
                                                    g$t$11516$xgWN3
                                                    '(#(scheme-id mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$11515$xgWN3)))
                                          g$ls$11514$xgWN3))))))
                         ((case-lambda
                            ((g$uid-code$11490$xgWN3
                               g$sealed?$11491$xgWN3
                               g$opaque?$11492$xgWN3
                               g$fields$11493$xgWN3)
                             (g$bless$10012$xgWN3
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$11486$xgWN3)
                                 g$parent-rtd-code$11488$xgWN3
                                 g$uid-code$11490$xgWN3
                                 g$sealed?$11491$xgWN3
                                 g$opaque?$11492$xgWN3
                                 g$fields$11493$xgWN3))))
                          ((case-lambda
                             ((g$t$11494$xgWN3)
                              ((case-lambda
                                 ((g$ls/false$11495$xgWN3)
                                  (if g$ls/false$11495$xgWN3
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$11495$xgWN3)
                                    ((case-lambda
                                       ((g$t$11496$xgWN3)
                                        ((case-lambda
                                           ((g$ls/false$11497$xgWN3)
                                            (if g$ls/false$11497$xgWN3
                                              (apply
                                                (case-lambda
                                                  ((g$uid$11498$xgWN3)
                                                   (list
                                                     'quote
                                                     g$uid$11498$xgWN3)))
                                                g$ls/false$11497$xgWN3)
                                              ((case-lambda
                                                 ((g$t$11499$xgWN3)
                                                  ((case-lambda
                                                     ((g$ls/false$11500$xgWN3)
                                                      (if g$ls/false$11500$xgWN3
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$11500$xgWN3)
                                                        (g$syntax-violation$10167$xgWN3
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$11499$xgWN3))))
                                                   (g$syntax-dispatch$10049$xgWN3
                                                     g$t$11499$xgWN3
                                                     '_))))
                                               g$t$11496$xgWN3))))
                                         (g$syntax-dispatch$10049$xgWN3
                                           g$t$11496$xgWN3
                                           '(_ any)))))
                                     g$t$11494$xgWN3))))
                               (g$syntax-dispatch$10049$xgWN3
                                 g$t$11494$xgWN3
                                 '(_)))))
                           (g$get-clause$11317$xgWN3
                             'nongenerative
                             g$clause*$11487$xgWN3))
                          ((case-lambda
                             ((g$t$11501$xgWN3)
                              ((case-lambda
                                 ((g$ls/false$11502$xgWN3)
                                  (if g$ls/false$11502$xgWN3
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$11502$xgWN3)
                                    ((case-lambda
                                       ((g$t$11503$xgWN3)
                                        ((case-lambda
                                           ((g$ls/false$11504$xgWN3)
                                            (if g$ls/false$11504$xgWN3
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$11504$xgWN3)
                                              (g$syntax-violation$10167$xgWN3
                                                '#f
                                                '"invalid syntax"
                                                g$t$11503$xgWN3))))
                                         (g$syntax-dispatch$10049$xgWN3
                                           g$t$11503$xgWN3
                                           '_))))
                                     g$t$11501$xgWN3))))
                               (g$syntax-dispatch$10049$xgWN3
                                 g$t$11501$xgWN3
                                 '(_ #(atom #t))))))
                           (g$get-clause$11317$xgWN3
                             'sealed
                             g$clause*$11487$xgWN3))
                          ((case-lambda
                             ((g$t$11505$xgWN3)
                              ((case-lambda
                                 ((g$ls/false$11506$xgWN3)
                                  (if g$ls/false$11506$xgWN3
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$11506$xgWN3)
                                    ((case-lambda
                                       ((g$t$11507$xgWN3)
                                        ((case-lambda
                                           ((g$ls/false$11508$xgWN3)
                                            (if g$ls/false$11508$xgWN3
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$11508$xgWN3)
                                              (g$syntax-violation$10167$xgWN3
                                                '#f
                                                '"invalid syntax"
                                                g$t$11507$xgWN3))))
                                         (g$syntax-dispatch$10049$xgWN3
                                           g$t$11507$xgWN3
                                           '_))))
                                     g$t$11505$xgWN3))))
                               (g$syntax-dispatch$10049$xgWN3
                                 g$t$11505$xgWN3
                                 '(_ #(atom #t))))))
                           (g$get-clause$11317$xgWN3
                             'opaque
                             g$clause*$11487$xgWN3))
                          ((case-lambda
                             ((g$t$11509$xgWN3)
                              ((case-lambda
                                 ((g$ls/false$11510$xgWN3)
                                  (if g$ls/false$11510$xgWN3
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$11511$xgWN3)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$11489$xgWN3
                                             g$field-spec*$11511$xgWN3))))
                                      g$ls/false$11510$xgWN3)
                                    ((case-lambda
                                       ((g$t$11512$xgWN3)
                                        ((case-lambda
                                           ((g$ls/false$11513$xgWN3)
                                            (if g$ls/false$11513$xgWN3
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$11513$xgWN3)
                                              (g$syntax-violation$10167$xgWN3
                                                '#f
                                                '"invalid syntax"
                                                g$t$11512$xgWN3))))
                                         (g$syntax-dispatch$10049$xgWN3
                                           g$t$11512$xgWN3
                                           '_))))
                                     g$t$11509$xgWN3))))
                               (g$syntax-dispatch$10049$xgWN3
                                 g$t$11509$xgWN3
                                 '(_ . each-any)))))
                           (g$get-clause$11317$xgWN3
                             'fields
                             g$clause*$11487$xgWN3)))))))
                  (g$parent-rtd-code$11319$xgWN3
                    (case-lambda
                      ((g$clause*$11474$xgWN3)
                       ((case-lambda
                          ((g$t$11475$xgWN3)
                           ((case-lambda
                              ((g$ls/false$11476$xgWN3)
                               (if g$ls/false$11476$xgWN3
                                 (apply
                                   (case-lambda
                                     ((g$name$11477$xgWN3)
                                      (list
                                        'record-type-descriptor
                                        g$name$11477$xgWN3)))
                                   g$ls/false$11476$xgWN3)
                                 ((case-lambda
                                    ((g$t$11478$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$11479$xgWN3)
                                         (if g$ls/false$11479$xgWN3
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$11480$xgWN3)
                                                    ((case-lambda
                                                       ((g$ls/false$11481$xgWN3)
                                                        (if g$ls/false$11481$xgWN3
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$11482$xgWN3
                                                                 g$rcd$11483$xgWN3)
                                                               g$rtd$11482$xgWN3))
                                                            g$ls/false$11481$xgWN3)
                                                          ((case-lambda
                                                             ((g$t$11484$xgWN3)
                                                              ((case-lambda
                                                                 ((g$ls/false$11485$xgWN3)
                                                                  (if g$ls/false$11485$xgWN3
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$11485$xgWN3)
                                                                    (g$syntax-violation$10167$xgWN3
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$11484$xgWN3))))
                                                               (g$syntax-dispatch$10049$xgWN3
                                                                 g$t$11484$xgWN3
                                                                 '#(atom #f)))))
                                                           g$t$11480$xgWN3))))
                                                     (g$syntax-dispatch$10049$xgWN3
                                                       g$t$11480$xgWN3
                                                       '(_ any any)))))
                                                 (g$get-clause$11317$xgWN3
                                                   'parent-rtd
                                                   g$clause*$11474$xgWN3))))
                                             g$ls/false$11479$xgWN3)
                                           (g$syntax-violation$10167$xgWN3
                                             '#f
                                             '"invalid syntax"
                                             g$t$11478$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$11478$xgWN3
                                        '#(atom #f)))))
                                  g$t$11475$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$11475$xgWN3
                              '(_ any)))))
                        (g$get-clause$11317$xgWN3
                          'parent
                          g$clause*$11474$xgWN3)))))
                  (g$parent-rcd-code$11320$xgWN3
                    (case-lambda
                      ((g$clause*$11462$xgWN3)
                       ((case-lambda
                          ((g$t$11463$xgWN3)
                           ((case-lambda
                              ((g$ls/false$11464$xgWN3)
                               (if g$ls/false$11464$xgWN3
                                 (apply
                                   (case-lambda
                                     ((g$name$11465$xgWN3)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$11465$xgWN3)))
                                   g$ls/false$11464$xgWN3)
                                 ((case-lambda
                                    ((g$t$11466$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$11467$xgWN3)
                                         (if g$ls/false$11467$xgWN3
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$11468$xgWN3)
                                                    ((case-lambda
                                                       ((g$ls/false$11469$xgWN3)
                                                        (if g$ls/false$11469$xgWN3
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$11470$xgWN3
                                                                 g$rcd$11471$xgWN3)
                                                               g$rcd$11471$xgWN3))
                                                            g$ls/false$11469$xgWN3)
                                                          ((case-lambda
                                                             ((g$t$11472$xgWN3)
                                                              ((case-lambda
                                                                 ((g$ls/false$11473$xgWN3)
                                                                  (if g$ls/false$11473$xgWN3
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$11473$xgWN3)
                                                                    (g$syntax-violation$10167$xgWN3
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$11472$xgWN3))))
                                                               (g$syntax-dispatch$10049$xgWN3
                                                                 g$t$11472$xgWN3
                                                                 '#(atom #f)))))
                                                           g$t$11468$xgWN3))))
                                                     (g$syntax-dispatch$10049$xgWN3
                                                       g$t$11468$xgWN3
                                                       '(_ any any)))))
                                                 (g$get-clause$11317$xgWN3
                                                   'parent-rtd
                                                   g$clause*$11462$xgWN3))))
                                             g$ls/false$11467$xgWN3)
                                           (g$syntax-violation$10167$xgWN3
                                             '#f
                                             '"invalid syntax"
                                             g$t$11466$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$11466$xgWN3
                                        '#(atom #f)))))
                                  g$t$11463$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$11463$xgWN3
                              '(_ any)))))
                        (g$get-clause$11317$xgWN3
                          'parent
                          g$clause*$11462$xgWN3)))))
                  (g$foo-rcd-code$11321$xgWN3
                    (case-lambda
                      ((g$clause*$11458$xgWN3
                         g$foo-rtd$11459$xgWN3
                         g$protocol$11460$xgWN3
                         g$parent-rcd-code$11461$xgWN3)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$11459$xgWN3
                         g$parent-rcd-code$11461$xgWN3
                         g$protocol$11460$xgWN3))))
                  (g$get-protocol-code$11322$xgWN3
                    (case-lambda
                      ((g$clause*$11452$xgWN3)
                       ((case-lambda
                          ((g$t$11453$xgWN3)
                           ((case-lambda
                              ((g$ls/false$11454$xgWN3)
                               (if g$ls/false$11454$xgWN3
                                 (apply
                                   (case-lambda
                                     ((g$expr$11455$xgWN3) g$expr$11455$xgWN3))
                                   g$ls/false$11454$xgWN3)
                                 ((case-lambda
                                    ((g$t$11456$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$11457$xgWN3)
                                         (if g$ls/false$11457$xgWN3
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$11457$xgWN3)
                                           (g$syntax-violation$10167$xgWN3
                                             '#f
                                             '"invalid syntax"
                                             g$t$11456$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$11456$xgWN3
                                        '_))))
                                  g$t$11453$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$11453$xgWN3
                              '(_ any)))))
                        (g$get-clause$11317$xgWN3
                          'protocol
                          g$clause*$11452$xgWN3)))))
                  (g$get-fields$11323$xgWN3
                    (case-lambda
                      ((g$clause*$11443$xgWN3)
                       ((case-lambda
                          ((g$t$11444$xgWN3)
                           ((case-lambda
                              ((g$ls/false$11445$xgWN3)
                               (if g$ls/false$11445$xgWN3
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$11445$xgWN3)
                                 ((case-lambda
                                    ((g$t$11446$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$11447$xgWN3)
                                         (if g$ls/false$11447$xgWN3
                                           (apply
                                             (case-lambda
                                               ((g$f*$11448$xgWN3)
                                                g$f*$11448$xgWN3))
                                             g$ls/false$11447$xgWN3)
                                           ((case-lambda
                                              ((g$t$11449$xgWN3)
                                               ((case-lambda
                                                  ((g$ls/false$11450$xgWN3)
                                                   (if g$ls/false$11450$xgWN3
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$11451$xgWN3)
                                                          (g$get-fields$11323$xgWN3
                                                            g$rest$11451$xgWN3)))
                                                       g$ls/false$11450$xgWN3)
                                                     (g$syntax-violation$10167$xgWN3
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$11449$xgWN3))))
                                                (g$syntax-dispatch$10049$xgWN3
                                                  g$t$11449$xgWN3
                                                  '(_ . any)))))
                                            g$t$11446$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$11446$xgWN3
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$11444$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$11444$xgWN3
                              '()))))
                        g$clause*$11443$xgWN3))))
                  (g$get-mutator-indices$11324$xgWN3
                    (case-lambda
                      ((g$fields$11431$xgWN3)
                       ((letrec ((g$f$11432$xgWN3
                                   (case-lambda
                                     ((g$fields$11433$xgWN3 g$i$11434$xgWN3)
                                      ((case-lambda
                                         ((g$t$11435$xgWN3)
                                          ((case-lambda
                                             ((g$ls/false$11436$xgWN3)
                                              (if g$ls/false$11436$xgWN3
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$11436$xgWN3)
                                                ((case-lambda
                                                   ((g$t$11437$xgWN3)
                                                    ((case-lambda
                                                       ((g$ls/false$11438$xgWN3)
                                                        (if g$ls/false$11438$xgWN3
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$11439$xgWN3)
                                                               (cons
                                                                 g$i$11434$xgWN3
                                                                 (g$f$11432$xgWN3
                                                                   g$rest$11439$xgWN3
                                                                   (+ g$i$11434$xgWN3
                                                                      '1)))))
                                                            g$ls/false$11438$xgWN3)
                                                          ((case-lambda
                                                             ((g$t$11440$xgWN3)
                                                              ((case-lambda
                                                                 ((g$ls/false$11441$xgWN3)
                                                                  (if g$ls/false$11441$xgWN3
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$11442$xgWN3)
                                                                         (g$f$11432$xgWN3
                                                                           g$rest$11442$xgWN3
                                                                           (+ g$i$11434$xgWN3
                                                                              '1))))
                                                                      g$ls/false$11441$xgWN3)
                                                                    (g$syntax-violation$10167$xgWN3
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$11440$xgWN3))))
                                                               (g$syntax-dispatch$10049$xgWN3
                                                                 g$t$11440$xgWN3
                                                                 '(_ . any)))))
                                                           g$t$11437$xgWN3))))
                                                     (g$syntax-dispatch$10049$xgWN3
                                                       g$t$11437$xgWN3
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$11435$xgWN3))))
                                           (g$syntax-dispatch$10049$xgWN3
                                             g$t$11435$xgWN3
                                             '()))))
                                       g$fields$11433$xgWN3)))))
                          g$f$11432$xgWN3)
                        g$fields$11431$xgWN3
                        '0))))
                  (g$get-mutators$11325$xgWN3
                    (case-lambda
                      ((g$foo$11410$xgWN3 g$fields$11411$xgWN3)
                       (letrec* ((g$gen-name$11412$xgWN3
                                   (case-lambda
                                     ((g$x$11430$xgWN3)
                                      (g$datum->syntax$10169$xgWN3
                                        g$foo$11410$xgWN3
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$10170$xgWN3
                                                g$foo$11410$xgWN3))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$10170$xgWN3
                                                g$x$11430$xgWN3))
                                            '"-set!")))))))
                         ((letrec ((g$f$11413$xgWN3
                                     (case-lambda
                                       ((g$fields$11414$xgWN3)
                                        ((case-lambda
                                           ((g$t$11415$xgWN3)
                                            ((case-lambda
                                               ((g$ls/false$11416$xgWN3)
                                                (if g$ls/false$11416$xgWN3
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$11416$xgWN3)
                                                  ((case-lambda
                                                     ((g$t$11417$xgWN3)
                                                      ((case-lambda
                                                         ((g$ls/false$11418$xgWN3)
                                                          (if g$ls/false$11418$xgWN3
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$11419$xgWN3
                                                                   g$accessor$11420$xgWN3
                                                                   g$mutator$11421$xgWN3
                                                                   g$rest$11422$xgWN3)
                                                                 (cons
                                                                   g$mutator$11421$xgWN3
                                                                   (g$f$11413$xgWN3
                                                                     g$rest$11422$xgWN3))))
                                                              g$ls/false$11418$xgWN3)
                                                            ((case-lambda
                                                               ((g$t$11423$xgWN3)
                                                                ((case-lambda
                                                                   ((g$ls/false$11424$xgWN3)
                                                                    (if g$ls/false$11424$xgWN3
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$11425$xgWN3
                                                                             g$rest$11426$xgWN3)
                                                                           (cons
                                                                             (g$gen-name$11412$xgWN3
                                                                               g$name$11425$xgWN3)
                                                                             (g$f$11413$xgWN3
                                                                               g$rest$11426$xgWN3))))
                                                                        g$ls/false$11424$xgWN3)
                                                                      ((case-lambda
                                                                         ((g$t$11427$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$ls/false$11428$xgWN3)
                                                                              (if g$ls/false$11428$xgWN3
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$11429$xgWN3)
                                                                                     (g$f$11413$xgWN3
                                                                                       g$rest$11429$xgWN3)))
                                                                                  g$ls/false$11428$xgWN3)
                                                                                (g$syntax-violation$10167$xgWN3
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$11427$xgWN3))))
                                                                           (g$syntax-dispatch$10049$xgWN3
                                                                             g$t$11427$xgWN3
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$11423$xgWN3))))
                                                                 (g$syntax-dispatch$10049$xgWN3
                                                                   g$t$11423$xgWN3
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$11417$xgWN3))))
                                                       (g$syntax-dispatch$10049$xgWN3
                                                         g$t$11417$xgWN3
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$11415$xgWN3))))
                                             (g$syntax-dispatch$10049$xgWN3
                                               g$t$11415$xgWN3
                                               '()))))
                                         g$fields$11414$xgWN3)))))
                            g$f$11413$xgWN3)
                          g$fields$11411$xgWN3)))))
                  (g$get-accessors$11326$xgWN3
                    (case-lambda
                      ((g$foo$11376$xgWN3 g$fields$11377$xgWN3)
                       (letrec* ((g$gen-name$11378$xgWN3
                                   (case-lambda
                                     ((g$x$11409$xgWN3)
                                      (g$datum->syntax$10169$xgWN3
                                        g$foo$11376$xgWN3
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$10170$xgWN3
                                                g$foo$11376$xgWN3))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$10170$xgWN3
                                                g$x$11409$xgWN3)))))))))
                         (g$map$6085$xgWN3
                           (case-lambda
                             ((g$field$11379$xgWN3)
                              ((case-lambda
                                 ((g$t$11380$xgWN3)
                                  ((case-lambda
                                     ((g$ls/false$11381$xgWN3)
                                      (if (if g$ls/false$11381$xgWN3
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$11382$xgWN3
                                                     g$accessor$11383$xgWN3
                                                     g$mutator$11384$xgWN3)
                                                   (g$id?$9686$xgWN3
                                                     g$accessor$11383$xgWN3)))
                                                g$ls/false$11381$xgWN3))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$11385$xgWN3
                                               g$accessor$11386$xgWN3
                                               g$mutator$11387$xgWN3)
                                             g$accessor$11386$xgWN3))
                                          g$ls/false$11381$xgWN3)
                                        ((case-lambda
                                           ((g$t$11388$xgWN3)
                                            ((case-lambda
                                               ((g$ls/false$11389$xgWN3)
                                                (if (if g$ls/false$11389$xgWN3
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$11390$xgWN3
                                                               g$accessor$11391$xgWN3)
                                                             (g$id?$9686$xgWN3
                                                               g$accessor$11391$xgWN3)))
                                                          g$ls/false$11389$xgWN3))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$11392$xgWN3
                                                         g$accessor$11393$xgWN3)
                                                       g$accessor$11393$xgWN3))
                                                    g$ls/false$11389$xgWN3)
                                                  ((case-lambda
                                                     ((g$t$11394$xgWN3)
                                                      ((case-lambda
                                                         ((g$ls/false$11395$xgWN3)
                                                          (if (if g$ls/false$11395$xgWN3
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$11396$xgWN3)
                                                                       (g$id?$9686$xgWN3
                                                                         g$name$11396$xgWN3)))
                                                                    g$ls/false$11395$xgWN3))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$11397$xgWN3)
                                                                 (g$gen-name$11378$xgWN3
                                                                   g$name$11397$xgWN3)))
                                                              g$ls/false$11395$xgWN3)
                                                            ((case-lambda
                                                               ((g$t$11398$xgWN3)
                                                                ((case-lambda
                                                                   ((g$ls/false$11399$xgWN3)
                                                                    (if (if g$ls/false$11399$xgWN3
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$11400$xgWN3)
                                                                                 (g$id?$9686$xgWN3
                                                                                   g$name$11400$xgWN3)))
                                                                              g$ls/false$11399$xgWN3))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$11401$xgWN3)
                                                                           (g$gen-name$11378$xgWN3
                                                                             g$name$11401$xgWN3)))
                                                                        g$ls/false$11399$xgWN3)
                                                                      ((case-lambda
                                                                         ((g$t$11402$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$ls/false$11403$xgWN3)
                                                                              (if (if g$ls/false$11403$xgWN3
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$11404$xgWN3)
                                                                                           (g$id?$9686$xgWN3
                                                                                             g$name$11404$xgWN3)))
                                                                                        g$ls/false$11403$xgWN3))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$11405$xgWN3)
                                                                                     (g$gen-name$11378$xgWN3
                                                                                       g$name$11405$xgWN3)))
                                                                                  g$ls/false$11403$xgWN3)
                                                                                ((case-lambda
                                                                                   ((g$t$11406$xgWN3)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$11407$xgWN3)
                                                                                        (if g$ls/false$11407$xgWN3
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$11408$xgWN3)
                                                                                               (g$syntax-violation$10167$xgWN3
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$11379$xgWN3)))
                                                                                            g$ls/false$11407$xgWN3)
                                                                                          (g$syntax-violation$10167$xgWN3
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$11406$xgWN3))))
                                                                                     (g$syntax-dispatch$10049$xgWN3
                                                                                       g$t$11406$xgWN3
                                                                                       'any))))
                                                                                 g$t$11402$xgWN3))))
                                                                           (g$syntax-dispatch$10049$xgWN3
                                                                             g$t$11402$xgWN3
                                                                             'any))))
                                                                       g$t$11398$xgWN3))))
                                                                 (g$syntax-dispatch$10049$xgWN3
                                                                   g$t$11398$xgWN3
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$11394$xgWN3))))
                                                       (g$syntax-dispatch$10049$xgWN3
                                                         g$t$11394$xgWN3
                                                         '(#(scheme-id mutable)
                                                           any)))))
                                                   g$t$11388$xgWN3))))
                                             (g$syntax-dispatch$10049$xgWN3
                                               g$t$11388$xgWN3
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$11380$xgWN3))))
                                   (g$syntax-dispatch$10049$xgWN3
                                     g$t$11380$xgWN3
                                     '(#(scheme-id mutable) any any any)))))
                               g$field$11379$xgWN3)))
                           g$fields$11377$xgWN3)))))
                  (g$enumerate$11327$xgWN3
                    (case-lambda
                      ((g$ls$11372$xgWN3)
                       ((letrec ((g$f$11373$xgWN3
                                   (case-lambda
                                     ((g$ls$11374$xgWN3 g$i$11375$xgWN3)
                                      (if (null? g$ls$11374$xgWN3)
                                        '()
                                        (cons
                                          g$i$11375$xgWN3
                                          (g$f$11373$xgWN3
                                            (cdr g$ls$11374$xgWN3)
                                            (+ g$i$11375$xgWN3 '1))))))))
                          g$f$11373$xgWN3)
                        g$ls$11372$xgWN3
                        '0))))
                  (g$do-define-record$11328$xgWN3
                    (case-lambda
                      ((g$namespec$11352$xgWN3 g$clause*$11353$xgWN3)
                       ((case-lambda
                          ((g$foo$11354$xgWN3)
                           ((case-lambda
                              ((g$foo-rtd$11355$xgWN3)
                               ((case-lambda
                                  ((g$foo-rcd$11356$xgWN3)
                                   ((case-lambda
                                      ((g$protocol$11357$xgWN3)
                                       ((case-lambda
                                          ((g$make-foo$11358$xgWN3)
                                           ((case-lambda
                                              ((g$fields$11359$xgWN3)
                                               ((case-lambda
                                                  ((g$idx*$11360$xgWN3)
                                                   ((case-lambda
                                                      ((g$foo-x*$11361$xgWN3)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$11362$xgWN3)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$11363$xgWN3)
                                                               ((case-lambda
                                                                  ((g$foo?$11364$xgWN3)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$11365$xgWN3)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$11366$xgWN3)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$11367$xgWN3)
                                                                               (g$bless$10012$xgWN3
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$11355$xgWN3
                                                                                       g$foo-rtd-code$11365$xgWN3)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$11357$xgWN3
                                                                                         g$protocol-code$11367$xgWN3)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$11356$xgWN3
                                                                                           g$foo-rcd-code$11366$xgWN3)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$11354$xgWN3
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$11355$xgWN3)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$11356$xgWN3)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$11364$xgWN3
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$11355$xgWN3))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$11358$xgWN3
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$11356$xgWN3))
                                                                                               (append
                                                                                                 (g$map$6085$xgWN3
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$11368$xgWN3
                                                                                                        g$idx$11369$xgWN3)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$11368$xgWN3
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$11355$xgWN3
                                                                                                          g$idx$11369$xgWN3))))
                                                                                                   g$foo-x*$11361$xgWN3
                                                                                                   g$idx*$11360$xgWN3)
                                                                                                 (g$map$6085$xgWN3
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$11370$xgWN3
                                                                                                        g$idx$11371$xgWN3)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$11370$xgWN3
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$11355$xgWN3
                                                                                                          g$idx$11371$xgWN3))))
                                                                                                   g$set-foo-x!*$11362$xgWN3
                                                                                                   g$set-foo-idx*$11363$xgWN3))))))))))))
                                                                            (g$get-protocol-code$11322$xgWN3
                                                                              g$clause*$11353$xgWN3))))
                                                                        (g$foo-rcd-code$11321$xgWN3
                                                                          g$clause*$11353$xgWN3
                                                                          g$foo-rtd$11355$xgWN3
                                                                          g$protocol$11357$xgWN3
                                                                          (g$parent-rcd-code$11320$xgWN3
                                                                            g$clause*$11353$xgWN3)))))
                                                                    (g$foo-rtd-code$11318$xgWN3
                                                                      g$foo$11354$xgWN3
                                                                      g$clause*$11353$xgWN3
                                                                      (g$parent-rtd-code$11319$xgWN3
                                                                        g$clause*$11353$xgWN3)))))
                                                                (g$get-record-predicate-name$11316$xgWN3
                                                                  g$namespec$11352$xgWN3))))
                                                            (g$get-mutator-indices$11324$xgWN3
                                                              g$fields$11359$xgWN3))))
                                                        (g$get-mutators$11325$xgWN3
                                                          g$foo$11354$xgWN3
                                                          g$fields$11359$xgWN3))))
                                                    (g$get-accessors$11326$xgWN3
                                                      g$foo$11354$xgWN3
                                                      g$fields$11359$xgWN3))))
                                                (g$enumerate$11327$xgWN3
                                                  g$fields$11359$xgWN3))))
                                            (g$get-fields$11323$xgWN3
                                              g$clause*$11353$xgWN3))))
                                        (g$get-record-constructor-name$11315$xgWN3
                                          g$namespec$11352$xgWN3))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$11314$xgWN3
                          g$namespec$11352$xgWN3)))))
                  (g$verify-clauses$11329$xgWN3
                    (case-lambda
                      ((g$x$11334$xgWN3 g$cls*$11335$xgWN3)
                       (letrec* ((g$valid-kwds$11336$xgWN3
                                   (g$map$6085$xgWN3
                                     g$bless$10012$xgWN3
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$11337$xgWN3
                                   (case-lambda
                                     ((g$x$11349$xgWN3 g$ls$11350$xgWN3)
                                      (if (pair? g$ls$11350$xgWN3)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$11351$xgWN3)
                                              (if g$t$11351$xgWN3
                                                g$t$11351$xgWN3
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$11337$xgWN3
                                                    g$x$11349$xgWN3
                                                    (cdr g$ls$11350$xgWN3))))))
                                           (g$free-id=?$9690$xgWN3
                                             g$x$11349$xgWN3
                                             (car g$ls$11350$xgWN3))))
                                        '#f)))))
                         ((letrec ((g$f$11338$xgWN3
                                     (case-lambda
                                       ((g$cls*$11339$xgWN3 g$seen*$11340$xgWN3)
                                        (if (not (null? g$cls*$11339$xgWN3))
                                          ((case-lambda
                                             ((g$t$11341$xgWN3)
                                              ((case-lambda
                                                 ((g$ls/false$11342$xgWN3)
                                                  (if g$ls/false$11342$xgWN3
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$11343$xgWN3
                                                           g$rest$11344$xgWN3)
                                                         (if ((case-lambda
                                                                ((g$t$11345$xgWN3)
                                                                 (if g$t$11345$xgWN3
                                                                   g$t$11345$xgWN3
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$11337$xgWN3
                                                                            g$kwd$11343$xgWN3
                                                                            g$valid-kwds$11336$xgWN3))))))
                                                              (not (g$id?$9686$xgWN3
                                                                     g$kwd$11343$xgWN3)))
                                                           (g$syntax-violation$10167$xgWN3
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$11343$xgWN3)
                                                           (if (g$bound-id-member?$9693$xgWN3
                                                                 g$kwd$11343$xgWN3
                                                                 g$seen*$11340$xgWN3)
                                                             (g$syntax-violation$10167$xgWN3
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$11334$xgWN3
                                                               g$kwd$11343$xgWN3)
                                                             (g$f$11338$xgWN3
                                                               (cdr g$cls*$11339$xgWN3)
                                                               (cons
                                                                 g$kwd$11343$xgWN3
                                                                 g$seen*$11340$xgWN3))))))
                                                      g$ls/false$11342$xgWN3)
                                                    ((case-lambda
                                                       ((g$t$11346$xgWN3)
                                                        ((case-lambda
                                                           ((g$ls/false$11347$xgWN3)
                                                            (if g$ls/false$11347$xgWN3
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$11348$xgWN3)
                                                                   (g$syntax-violation$10167$xgWN3
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$11348$xgWN3)))
                                                                g$ls/false$11347$xgWN3)
                                                              (g$syntax-violation$10167$xgWN3
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$11346$xgWN3))))
                                                         (g$syntax-dispatch$10049$xgWN3
                                                           g$t$11346$xgWN3
                                                           'any))))
                                                     g$t$11341$xgWN3))))
                                               (g$syntax-dispatch$10049$xgWN3
                                                 g$t$11341$xgWN3
                                                 '(any . any)))))
                                           (car g$cls*$11339$xgWN3))
                                          (void))))))
                            g$f$11338$xgWN3)
                          g$cls*$11335$xgWN3
                          '()))))))
          ((case-lambda
             ((g$t$11330$xgWN3)
              ((case-lambda
                 ((g$ls/false$11331$xgWN3)
                  (if g$ls/false$11331$xgWN3
                    (apply
                      (case-lambda
                        ((g$namespec$11332$xgWN3 g$clause*$11333$xgWN3)
                         (begin
                           (g$verify-clauses$11329$xgWN3
                             g$x$11312$xgWN3
                             g$clause*$11333$xgWN3)
                           (g$do-define-record$11328$xgWN3
                             g$namespec$11332$xgWN3
                             g$clause*$11333$xgWN3))))
                      g$ls/false$11331$xgWN3)
                    (g$syntax-violation$10167$xgWN3
                      '#f
                      '"invalid syntax"
                      g$t$11330$xgWN3))))
               (g$syntax-dispatch$10049$xgWN3
                 g$t$11330$xgWN3
                 '(_ any . each-any)))))
           g$x$11312$xgWN3)))))
   (g$define-condition-type-macro$10044$xgWN3
     g$define-condition-type-macro$13585$xgWN3
     (case-lambda
       ((g$x$11568$xgWN3)
        (letrec* ((g$mkname$11569$xgWN3
                    (case-lambda
                      ((g$name$11592$xgWN3 g$suffix$11593$xgWN3)
                       (g$datum->syntax$10169$xgWN3
                         g$name$11592$xgWN3
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$10170$xgWN3 g$name$11592$xgWN3))
                             g$suffix$11593$xgWN3)))))))
          ((case-lambda
             ((g$t$11570$xgWN3)
              ((case-lambda
                 ((g$ls/false$11571$xgWN3)
                  (if (if g$ls/false$11571$xgWN3
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$11572$xgWN3
                                 g$name$11573$xgWN3
                                 g$super$11574$xgWN3
                                 g$constructor$11575$xgWN3
                                 g$predicate$11576$xgWN3
                                 g$field*$11577$xgWN3
                                 g$accessor*$11578$xgWN3)
                               (if (g$id?$9686$xgWN3 g$name$11573$xgWN3)
                                 (if (g$id?$9686$xgWN3 g$super$11574$xgWN3)
                                   (if (g$id?$9686$xgWN3
                                         g$constructor$11575$xgWN3)
                                     (if (g$id?$9686$xgWN3
                                           g$predicate$11576$xgWN3)
                                       (if (g$for-all$6083$xgWN3
                                             g$id?$9686$xgWN3
                                             g$field*$11577$xgWN3)
                                         (begin
                                           '#f
                                           (g$for-all$6083$xgWN3
                                             g$id?$9686$xgWN3
                                             g$accessor*$11578$xgWN3))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$11571$xgWN3))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$11579$xgWN3
                           g$name$11580$xgWN3
                           g$super$11581$xgWN3
                           g$constructor$11582$xgWN3
                           g$predicate$11583$xgWN3
                           g$field*$11584$xgWN3
                           g$accessor*$11585$xgWN3)
                         ((case-lambda
                            ((g$aux-accessor*$11586$xgWN3)
                             (g$bless$10012$xgWN3
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$11580$xgWN3
                                         g$constructor$11582$xgWN3
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$11581$xgWN3)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$6085$xgWN3
                                               (case-lambda
                                                 ((g$field$11587$xgWN3
                                                    g$aux$11588$xgWN3)
                                                  (list
                                                    'immutable
                                                    g$field$11587$xgWN3
                                                    g$aux$11588$xgWN3)))
                                               g$field*$11584$xgWN3
                                               g$aux-accessor*$11586$xgWN3))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$11583$xgWN3
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$11580$xgWN3)))
                                     (g$map$6085$xgWN3
                                       (case-lambda
                                         ((g$accessor$11589$xgWN3
                                            g$aux$11590$xgWN3)
                                          (list
                                            'define
                                            g$accessor$11589$xgWN3
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$11580$xgWN3)
                                              g$aux$11590$xgWN3))))
                                       g$accessor*$11585$xgWN3
                                       g$aux-accessor*$11586$xgWN3)))))))
                          (g$map$6085$xgWN3
                            (case-lambda ((g$x$11591$xgWN3) (gensym)))
                            g$accessor*$11585$xgWN3))))
                      g$ls/false$11571$xgWN3)
                    (g$syntax-violation$10167$xgWN3
                      '#f
                      '"invalid syntax"
                      g$t$11570$xgWN3))))
               (g$syntax-dispatch$10049$xgWN3
                 g$t$11570$xgWN3
                 '(any any any any any . #(each (any any)))))))
           g$x$11568$xgWN3)))))
   (g$incorrect-usage-macro$10045$xgWN3
     g$incorrect-usage-macro$13586$xgWN3
     (case-lambda
       ((g$e$11594$xgWN3)
        (g$syntax-violation$10167$xgWN3
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$11594$xgWN3))))
   (g$parameterize-macro$10046$xgWN3
     g$parameterize-macro$13587$xgWN3
     (case-lambda
       ((g$e$11595$xgWN3)
        ((case-lambda
           ((g$t$11596$xgWN3)
            ((case-lambda
               ((g$ls/false$11597$xgWN3)
                (if g$ls/false$11597$xgWN3
                  (apply
                    (case-lambda
                      ((g$b$11598$xgWN3 g$b*$11599$xgWN3)
                       (g$bless$10012$xgWN3
                         (cons
                           'let
                           (cons
                             '()
                             (cons g$b$11598$xgWN3 g$b*$11599$xgWN3))))))
                    g$ls/false$11597$xgWN3)
                  ((case-lambda
                     ((g$t$11600$xgWN3)
                      ((case-lambda
                         ((g$ls/false$11601$xgWN3)
                          (if g$ls/false$11601$xgWN3
                            (apply
                              (case-lambda
                                ((g$olhs*$11602$xgWN3
                                   g$orhs*$11603$xgWN3
                                   g$b$11604$xgWN3
                                   g$b*$11605$xgWN3)
                                 ((case-lambda
                                    ((g$lhs*$11606$xgWN3 g$rhs*$11607$xgWN3)
                                     (g$bless$10012$xgWN3
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$11606$xgWN3
                                             g$rhs*$11607$xgWN3)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$6085$xgWN3
                                                       (case-lambda
                                                         ((g$lhs$11608$xgWN3
                                                            g$rhs$11609$xgWN3)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$11608$xgWN3)))
                                                            (list
                                                              g$lhs$11608$xgWN3
                                                              g$rhs$11609$xgWN3)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$11609$xgWN3
                                                                '(t))))))
                                                       g$lhs*$11606$xgWN3
                                                       g$rhs*$11607$xgWN3)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$11604$xgWN3
                                                         g$b*$11605$xgWN3)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$11602$xgWN3
                                           g$orhs*$11603$xgWN3)))))
                                  (g$generate-temporaries$10157$xgWN3
                                    g$olhs*$11602$xgWN3)
                                  (g$generate-temporaries$10157$xgWN3
                                    g$orhs*$11603$xgWN3))))
                              g$ls/false$11601$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$11600$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$11600$xgWN3
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$11596$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$11596$xgWN3
               '(_ () any . each-any)))))
         g$e$11595$xgWN3))))
   (g$foreign-call-transformer$10047$xgWN3
     g$foreign-call-transformer$13588$xgWN3
     (case-lambda
       ((g$e$11610$xgWN3 g$r$11611$xgWN3 g$mr$11612$xgWN3)
        ((case-lambda
           ((g$t$11613$xgWN3)
            ((case-lambda
               ((g$ls/false$11614$xgWN3)
                (if g$ls/false$11614$xgWN3
                  (apply
                    (case-lambda
                      ((g$name$11615$xgWN3 g$arg*$11616$xgWN3)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$10067$xgWN3
                             g$name$11615$xgWN3
                             g$r$11611$xgWN3
                             g$mr$11612$xgWN3)
                           (g$chi-expr*$10065$xgWN3
                             g$arg*$11616$xgWN3
                             g$r$11611$xgWN3
                             g$mr$11612$xgWN3)))))
                    g$ls/false$11614$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$11613$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$11613$xgWN3
               '(_ any . each-any)))))
         g$e$11610$xgWN3))))
   (g$convert-pattern$10048$xgWN3
     g$convert-pattern$13589$xgWN3
     (case-lambda
       ((g$pattern$11617$xgWN3 g$keys$11618$xgWN3)
        (letrec* ((g$cvt*$11619$xgWN3
                    (case-lambda
                      ((g$p*$11699$xgWN3 g$n$11700$xgWN3 g$ids$11701$xgWN3)
                       (if (null? g$p*$11699$xgWN3)
                         (values '() g$ids$11701$xgWN3)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$11619$xgWN3
                                (cdr g$p*$11699$xgWN3)
                                g$n$11700$xgWN3
                                g$ids$11701$xgWN3)))
                           (case-lambda
                             ((g$y$11704$xgWN3 g$ids$11705$xgWN3)
                              ((case-lambda
                                 ((g$ids$11706$xgWN3 g$y$11707$xgWN3)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$11620$xgWN3
                                         (car g$p*$11699$xgWN3)
                                         g$n$11700$xgWN3
                                         g$ids$11706$xgWN3)))
                                    (case-lambda
                                      ((g$x$11710$xgWN3 g$ids$11711$xgWN3)
                                       ((case-lambda
                                          ((g$ids$11712$xgWN3 g$x$11713$xgWN3)
                                           (values
                                             (cons
                                               g$x$11713$xgWN3
                                               g$y$11707$xgWN3)
                                             g$ids$11712$xgWN3)))
                                        g$ids$11711$xgWN3
                                        g$x$11710$xgWN3))))))
                               g$ids$11705$xgWN3
                               g$y$11704$xgWN3))))))))
                  (g$cvt$11620$xgWN3
                    (case-lambda
                      ((g$p$11621$xgWN3 g$n$11622$xgWN3 g$ids$11623$xgWN3)
                       ((case-lambda
                          ((g$t$11624$xgWN3)
                           ((case-lambda
                              ((g$ls/false$11625$xgWN3)
                               (if (if g$ls/false$11625$xgWN3
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$11626$xgWN3)
                                            (g$id?$9686$xgWN3
                                              g$id$11626$xgWN3)))
                                         g$ls/false$11625$xgWN3))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$11627$xgWN3)
                                      (if (g$bound-id-member?$9693$xgWN3
                                            g$p$11621$xgWN3
                                            g$keys$11618$xgWN3)
                                        (values
                                          (vector 'free-id g$p$11621$xgWN3)
                                          g$ids$11623$xgWN3)
                                        (if (g$free-id=?$9690$xgWN3
                                              g$p$11621$xgWN3
                                              (g$scheme-stx$9992$xgWN3 '_))
                                          (values '_ g$ids$11623$xgWN3)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$11621$xgWN3
                                                g$n$11622$xgWN3)
                                              g$ids$11623$xgWN3))))))
                                   g$ls/false$11625$xgWN3)
                                 ((case-lambda
                                    ((g$t$11628$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$11629$xgWN3)
                                         (if (if g$ls/false$11629$xgWN3
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$11630$xgWN3
                                                        g$dots$11631$xgWN3)
                                                      (g$ellipsis?$10050$xgWN3
                                                        g$dots$11631$xgWN3)))
                                                   g$ls/false$11629$xgWN3))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$11632$xgWN3
                                                  g$dots$11633$xgWN3)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$11620$xgWN3
                                                       g$p$11632$xgWN3
                                                       (+ g$n$11622$xgWN3 '1)
                                                       g$ids$11623$xgWN3)))
                                                  (case-lambda
                                                    ((g$p$11636$xgWN3
                                                       g$ids$11637$xgWN3)
                                                     ((case-lambda
                                                        ((g$ids$11638$xgWN3
                                                           g$p$11639$xgWN3)
                                                         (values
                                                           (if (eq? g$p$11639$xgWN3
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$11639$xgWN3))
                                                           g$ids$11638$xgWN3)))
                                                      g$ids$11637$xgWN3
                                                      g$p$11636$xgWN3))))))
                                             g$ls/false$11629$xgWN3)
                                           ((case-lambda
                                              ((g$t$11640$xgWN3)
                                               ((case-lambda
                                                  ((g$ls/false$11641$xgWN3)
                                                   (if (if g$ls/false$11641$xgWN3
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$11642$xgWN3
                                                                  g$dots$11643$xgWN3
                                                                  g$ys$11644$xgWN3
                                                                  g$z$11645$xgWN3)
                                                                (g$ellipsis?$10050$xgWN3
                                                                  g$dots$11643$xgWN3)))
                                                             g$ls/false$11641$xgWN3))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$11646$xgWN3
                                                            g$dots$11647$xgWN3
                                                            g$ys$11648$xgWN3
                                                            g$z$11649$xgWN3)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$11620$xgWN3
                                                                 g$z$11649$xgWN3
                                                                 g$n$11622$xgWN3
                                                                 g$ids$11623$xgWN3)))
                                                            (case-lambda
                                                              ((g$z$11652$xgWN3
                                                                 g$ids$11653$xgWN3)
                                                               ((case-lambda
                                                                  ((g$ids$11654$xgWN3
                                                                     g$z$11655$xgWN3)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$11619$xgWN3
                                                                          g$ys$11648$xgWN3
                                                                          g$n$11622$xgWN3
                                                                          g$ids$11654$xgWN3)))
                                                                     (case-lambda
                                                                       ((g$ys$11658$xgWN3
                                                                          g$ids$11659$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$ids$11660$xgWN3
                                                                              g$ys$11661$xgWN3)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$11620$xgWN3
                                                                                   g$x$11646$xgWN3
                                                                                   (+ g$n$11622$xgWN3
                                                                                      '1)
                                                                                   g$ids$11660$xgWN3)))
                                                                              (case-lambda
                                                                                ((g$x$11664$xgWN3
                                                                                   g$ids$11665$xgWN3)
                                                                                 ((case-lambda
                                                                                    ((g$ids$11666$xgWN3
                                                                                       g$x$11667$xgWN3)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$11667$xgWN3
                                                                                         (g$reverse$6763$xgWN3
                                                                                           g$ys$11661$xgWN3)
                                                                                         g$z$11655$xgWN3)
                                                                                       g$ids$11666$xgWN3)))
                                                                                  g$ids$11665$xgWN3
                                                                                  g$x$11664$xgWN3))))))
                                                                         g$ids$11659$xgWN3
                                                                         g$ys$11658$xgWN3))))))
                                                                g$ids$11653$xgWN3
                                                                g$z$11652$xgWN3))))))
                                                       g$ls/false$11641$xgWN3)
                                                     ((case-lambda
                                                        ((g$t$11668$xgWN3)
                                                         ((case-lambda
                                                            ((g$ls/false$11669$xgWN3)
                                                             (if g$ls/false$11669$xgWN3
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$11670$xgWN3
                                                                      g$y$11671$xgWN3)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$11620$xgWN3
                                                                           g$y$11671$xgWN3
                                                                           g$n$11622$xgWN3
                                                                           g$ids$11623$xgWN3)))
                                                                      (case-lambda
                                                                        ((g$y$11674$xgWN3
                                                                           g$ids$11675$xgWN3)
                                                                         ((case-lambda
                                                                            ((g$ids$11676$xgWN3
                                                                               g$y$11677$xgWN3)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$11620$xgWN3
                                                                                    g$x$11670$xgWN3
                                                                                    g$n$11622$xgWN3
                                                                                    g$ids$11676$xgWN3)))
                                                                               (case-lambda
                                                                                 ((g$x$11680$xgWN3
                                                                                    g$ids$11681$xgWN3)
                                                                                  ((case-lambda
                                                                                     ((g$ids$11682$xgWN3
                                                                                        g$x$11683$xgWN3)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$11683$xgWN3
                                                                                          g$y$11677$xgWN3)
                                                                                        g$ids$11682$xgWN3)))
                                                                                   g$ids$11681$xgWN3
                                                                                   g$x$11680$xgWN3))))))
                                                                          g$ids$11675$xgWN3
                                                                          g$y$11674$xgWN3))))))
                                                                 g$ls/false$11669$xgWN3)
                                                               ((case-lambda
                                                                  ((g$t$11684$xgWN3)
                                                                   ((case-lambda
                                                                      ((g$ls/false$11685$xgWN3)
                                                                       (if g$ls/false$11685$xgWN3
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$11623$xgWN3)))
                                                                           g$ls/false$11685$xgWN3)
                                                                         ((case-lambda
                                                                            ((g$t$11686$xgWN3)
                                                                             ((case-lambda
                                                                                ((g$ls/false$11687$xgWN3)
                                                                                 (if (if g$ls/false$11687$xgWN3
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$11688$xgWN3)
                                                                                              (not (g$stx?$9658$xgWN3
                                                                                                     g$p$11688$xgWN3))))
                                                                                           g$ls/false$11687$xgWN3))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$11689$xgWN3)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$11620$xgWN3
                                                                                               g$p$11689$xgWN3
                                                                                               g$n$11622$xgWN3
                                                                                               g$ids$11623$xgWN3)))
                                                                                          (case-lambda
                                                                                            ((g$p$11692$xgWN3
                                                                                               g$ids$11693$xgWN3)
                                                                                             ((case-lambda
                                                                                                ((g$ids$11694$xgWN3
                                                                                                   g$p$11695$xgWN3)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$11695$xgWN3)
                                                                                                   g$ids$11694$xgWN3)))
                                                                                              g$ids$11693$xgWN3
                                                                                              g$p$11692$xgWN3))))))
                                                                                     g$ls/false$11687$xgWN3)
                                                                                   ((case-lambda
                                                                                      ((g$t$11696$xgWN3)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$11697$xgWN3)
                                                                                           (if g$ls/false$11697$xgWN3
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$11698$xgWN3)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$9697$xgWN3
                                                                                                        g$datum$11698$xgWN3))
                                                                                                    g$ids$11623$xgWN3)))
                                                                                               g$ls/false$11697$xgWN3)
                                                                                             (g$syntax-violation$10167$xgWN3
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$11696$xgWN3))))
                                                                                        (g$syntax-dispatch$10049$xgWN3
                                                                                          g$t$11696$xgWN3
                                                                                          'any))))
                                                                                    g$t$11686$xgWN3))))
                                                                              (g$syntax-dispatch$10049$xgWN3
                                                                                g$t$11686$xgWN3
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$11684$xgWN3))))
                                                                    (g$syntax-dispatch$10049$xgWN3
                                                                      g$t$11684$xgWN3
                                                                      '()))))
                                                                g$t$11668$xgWN3))))
                                                          (g$syntax-dispatch$10049$xgWN3
                                                            g$t$11668$xgWN3
                                                            '(any . any)))))
                                                      g$t$11640$xgWN3))))
                                                (g$syntax-dispatch$10049$xgWN3
                                                  g$t$11640$xgWN3
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$11628$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$11628$xgWN3
                                        '(any any)))))
                                  g$t$11624$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$11624$xgWN3
                              'any))))
                        g$p$11621$xgWN3)))))
          (g$cvt$11620$xgWN3 g$pattern$11617$xgWN3 '0 '())))))
   (g$syntax-dispatch$10049$xgWN3
     g$syntax-dispatch$13590$xgWN3
     ((case-lambda
        (()
         (letrec* ((g$stx^$11714$xgWN3
                     (case-lambda
                       ((g$e$11824$xgWN3
                          g$m*$11825$xgWN3
                          g$s*$11826$xgWN3
                          g$ae*$11827$xgWN3)
                        (if (if (null? g$m*$11825$xgWN3)
                              (if (null? g$s*$11826$xgWN3)
                                (begin '#f (null? g$ae*$11827$xgWN3))
                                '#f)
                              '#f)
                          g$e$11824$xgWN3
                          (g$mkstx$9674$xgWN3
                            g$e$11824$xgWN3
                            g$m*$11825$xgWN3
                            g$s*$11826$xgWN3
                            g$ae*$11827$xgWN3)))))
                   (g$match-each$11715$xgWN3
                     (case-lambda
                       ((g$e$11808$xgWN3
                          g$p$11809$xgWN3
                          g$m*$11810$xgWN3
                          g$s*$11811$xgWN3
                          g$ae*$11812$xgWN3)
                        (if (pair? g$e$11808$xgWN3)
                          ((case-lambda
                             ((g$first$11813$xgWN3)
                              (if g$first$11813$xgWN3
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$11814$xgWN3)
                                      (if g$rest$11814$xgWN3
                                        (begin
                                          '#f
                                          (cons
                                            g$first$11813$xgWN3
                                            g$rest$11814$xgWN3))
                                        '#f)))
                                   (g$match-each$11715$xgWN3
                                     (cdr g$e$11808$xgWN3)
                                     g$p$11809$xgWN3
                                     g$m*$11810$xgWN3
                                     g$s*$11811$xgWN3
                                     g$ae*$11812$xgWN3)))
                                '#f)))
                           (g$match$11721$xgWN3
                             (car g$e$11808$xgWN3)
                             g$p$11809$xgWN3
                             g$m*$11810$xgWN3
                             g$s*$11811$xgWN3
                             g$ae*$11812$xgWN3
                             '()))
                          (if (null? g$e$11808$xgWN3)
                            '()
                            (if (g$stx?$9658$xgWN3 g$e$11808$xgWN3)
                              (if (not (g$top-marked?$9620$xgWN3
                                         g$m*$11810$xgWN3))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$9673$xgWN3
                                         g$m*$11810$xgWN3
                                         g$s*$11811$xgWN3
                                         g$ae*$11812$xgWN3
                                         g$e$11808$xgWN3)))
                                    (case-lambda
                                      ((g$m*$11818$xgWN3
                                         g$s*$11819$xgWN3
                                         g$ae*$11820$xgWN3)
                                       ((case-lambda
                                          ((g$ae*$11821$xgWN3
                                             g$s*$11822$xgWN3
                                             g$m*$11823$xgWN3)
                                           (g$match-each$11715$xgWN3
                                             (g$stx-expr$9660$xgWN3
                                               g$e$11808$xgWN3)
                                             g$p$11809$xgWN3
                                             g$m*$11823$xgWN3
                                             g$s*$11822$xgWN3
                                             g$ae*$11821$xgWN3)))
                                        g$ae*$11820$xgWN3
                                        g$s*$11819$xgWN3
                                        g$m*$11818$xgWN3)))))
                                '#f)
                              (if (annotation? g$e$11808$xgWN3)
                                (g$match-each$11715$xgWN3
                                  (annotation-expression g$e$11808$xgWN3)
                                  g$p$11809$xgWN3
                                  g$m*$11810$xgWN3
                                  g$s*$11811$xgWN3
                                  g$ae*$11812$xgWN3)
                                '#f)))))))
                   (g$match-each+$11716$xgWN3
                     (case-lambda
                       ((g$e$11776$xgWN3
                          g$x-pat$11777$xgWN3
                          g$y-pat$11778$xgWN3
                          g$z-pat$11779$xgWN3
                          g$m*$11780$xgWN3
                          g$s*$11781$xgWN3
                          g$ae*$11782$xgWN3
                          g$r$11783$xgWN3)
                        ((letrec ((g$f$11784$xgWN3
                                    (case-lambda
                                      ((g$e$11785$xgWN3
                                         g$m*$11786$xgWN3
                                         g$s*$11787$xgWN3
                                         g$ae*$11788$xgWN3)
                                       (if (pair? g$e$11785$xgWN3)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$11784$xgWN3
                                                (cdr g$e$11785$xgWN3)
                                                g$m*$11786$xgWN3
                                                g$s*$11787$xgWN3
                                                g$ae*$11788$xgWN3)))
                                           (case-lambda
                                             ((g$xr*$11792$xgWN3
                                                g$y-pat$11793$xgWN3
                                                g$r$11794$xgWN3)
                                              ((case-lambda
                                                 ((g$r$11795$xgWN3
                                                    g$y-pat$11796$xgWN3
                                                    g$xr*$11797$xgWN3)
                                                  (if g$r$11795$xgWN3
                                                    (if (null?
                                                          g$y-pat$11796$xgWN3)
                                                      ((case-lambda
                                                         ((g$xr$11798$xgWN3)
                                                          (if g$xr$11798$xgWN3
                                                            (values
                                                              (cons
                                                                g$xr$11798$xgWN3
                                                                g$xr*$11797$xgWN3)
                                                              g$y-pat$11796$xgWN3
                                                              g$r$11795$xgWN3)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$11721$xgWN3
                                                         (car g$e$11785$xgWN3)
                                                         g$x-pat$11777$xgWN3
                                                         g$m*$11786$xgWN3
                                                         g$s*$11787$xgWN3
                                                         g$ae*$11788$xgWN3
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$11796$xgWN3)
                                                        (g$match$11721$xgWN3
                                                          (car g$e$11785$xgWN3)
                                                          (car g$y-pat$11796$xgWN3)
                                                          g$m*$11786$xgWN3
                                                          g$s*$11787$xgWN3
                                                          g$ae*$11788$xgWN3
                                                          g$r$11795$xgWN3)))
                                                    (values '#f '#f '#f))))
                                               g$r$11794$xgWN3
                                               g$y-pat$11793$xgWN3
                                               g$xr*$11792$xgWN3))))
                                         (if (g$stx?$9658$xgWN3 g$e$11785$xgWN3)
                                           (if (g$top-marked?$9620$xgWN3
                                                 g$m*$11786$xgWN3)
                                             (values
                                               '()
                                               g$y-pat$11778$xgWN3
                                               (g$match$11721$xgWN3
                                                 g$e$11785$xgWN3
                                                 g$z-pat$11779$xgWN3
                                                 g$m*$11786$xgWN3
                                                 g$s*$11787$xgWN3
                                                 g$ae*$11788$xgWN3
                                                 g$r$11783$xgWN3))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$9673$xgWN3
                                                    g$m*$11786$xgWN3
                                                    g$s*$11787$xgWN3
                                                    g$ae*$11788$xgWN3
                                                    g$e$11785$xgWN3)))
                                               (case-lambda
                                                 ((g$m*$11802$xgWN3
                                                    g$s*$11803$xgWN3
                                                    g$ae*$11804$xgWN3)
                                                  ((case-lambda
                                                     ((g$ae*$11805$xgWN3
                                                        g$s*$11806$xgWN3
                                                        g$m*$11807$xgWN3)
                                                      (g$f$11784$xgWN3
                                                        (g$stx-expr$9660$xgWN3
                                                          g$e$11785$xgWN3)
                                                        g$m*$11807$xgWN3
                                                        g$s*$11806$xgWN3
                                                        g$ae*$11805$xgWN3)))
                                                   g$ae*$11804$xgWN3
                                                   g$s*$11803$xgWN3
                                                   g$m*$11802$xgWN3)))))
                                           (if (annotation? g$e$11785$xgWN3)
                                             (g$f$11784$xgWN3
                                               (annotation-expression
                                                 g$e$11785$xgWN3)
                                               g$m*$11786$xgWN3
                                               g$s*$11787$xgWN3
                                               g$ae*$11788$xgWN3)
                                             (values
                                               '()
                                               g$y-pat$11778$xgWN3
                                               (g$match$11721$xgWN3
                                                 g$e$11785$xgWN3
                                                 g$z-pat$11779$xgWN3
                                                 g$m*$11786$xgWN3
                                                 g$s*$11787$xgWN3
                                                 g$ae*$11788$xgWN3
                                                 g$r$11783$xgWN3)))))))))
                           g$f$11784$xgWN3)
                         g$e$11776$xgWN3
                         g$m*$11780$xgWN3
                         g$s*$11781$xgWN3
                         g$ae*$11782$xgWN3))))
                   (g$match-each-any$11717$xgWN3
                     (case-lambda
                       ((g$e$11762$xgWN3
                          g$m*$11763$xgWN3
                          g$s*$11764$xgWN3
                          g$ae*$11765$xgWN3)
                        (if (pair? g$e$11762$xgWN3)
                          ((case-lambda
                             ((g$l$11766$xgWN3)
                              (if g$l$11766$xgWN3
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$11714$xgWN3
                                      (car g$e$11762$xgWN3)
                                      g$m*$11763$xgWN3
                                      g$s*$11764$xgWN3
                                      g$ae*$11765$xgWN3)
                                    g$l$11766$xgWN3))
                                '#f)))
                           (g$match-each-any$11717$xgWN3
                             (cdr g$e$11762$xgWN3)
                             g$m*$11763$xgWN3
                             g$s*$11764$xgWN3
                             g$ae*$11765$xgWN3))
                          (if (null? g$e$11762$xgWN3)
                            '()
                            (if (g$stx?$9658$xgWN3 g$e$11762$xgWN3)
                              (if (not (g$top-marked?$9620$xgWN3
                                         g$m*$11763$xgWN3))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$9673$xgWN3
                                         g$m*$11763$xgWN3
                                         g$s*$11764$xgWN3
                                         g$ae*$11765$xgWN3
                                         g$e$11762$xgWN3)))
                                    (case-lambda
                                      ((g$m*$11770$xgWN3
                                         g$s*$11771$xgWN3
                                         g$ae*$11772$xgWN3)
                                       ((case-lambda
                                          ((g$ae*$11773$xgWN3
                                             g$s*$11774$xgWN3
                                             g$m*$11775$xgWN3)
                                           (g$match-each-any$11717$xgWN3
                                             (g$stx-expr$9660$xgWN3
                                               g$e$11762$xgWN3)
                                             g$m*$11775$xgWN3
                                             g$s*$11774$xgWN3
                                             g$ae*$11773$xgWN3)))
                                        g$ae*$11772$xgWN3
                                        g$s*$11771$xgWN3
                                        g$m*$11770$xgWN3)))))
                                '#f)
                              (if (annotation? g$e$11762$xgWN3)
                                (g$match-each-any$11717$xgWN3
                                  (annotation-expression g$e$11762$xgWN3)
                                  g$m*$11763$xgWN3
                                  g$s*$11764$xgWN3
                                  g$ae*$11765$xgWN3)
                                '#f)))))))
                   (g$match-empty$11718$xgWN3
                     (case-lambda
                       ((g$p$11759$xgWN3 g$r$11760$xgWN3)
                        (if (null? g$p$11759$xgWN3)
                          g$r$11760$xgWN3
                          (if (eq? g$p$11759$xgWN3 '_)
                            g$r$11760$xgWN3
                            (if (eq? g$p$11759$xgWN3 'any)
                              (cons '() g$r$11760$xgWN3)
                              (if (pair? g$p$11759$xgWN3)
                                (g$match-empty$11718$xgWN3
                                  (car g$p$11759$xgWN3)
                                  (g$match-empty$11718$xgWN3
                                    (cdr g$p$11759$xgWN3)
                                    g$r$11760$xgWN3))
                                (if (eq? g$p$11759$xgWN3 'each-any)
                                  (cons '() g$r$11760$xgWN3)
                                  ((case-lambda
                                     ((g$t$11761$xgWN3)
                                      (if (g$memv$6078$xgWN3
                                            g$t$11761$xgWN3
                                            '(each))
                                        (g$match-empty$11718$xgWN3
                                          (vector-ref g$p$11759$xgWN3 '1)
                                          g$r$11760$xgWN3)
                                        (if (g$memv$6078$xgWN3
                                              g$t$11761$xgWN3
                                              '(each+))
                                          (g$match-empty$11718$xgWN3
                                            (vector-ref g$p$11759$xgWN3 '1)
                                            (g$match-empty$11718$xgWN3
                                              (g$reverse$6763$xgWN3
                                                (vector-ref g$p$11759$xgWN3 '2))
                                              (g$match-empty$11718$xgWN3
                                                (vector-ref g$p$11759$xgWN3 '3)
                                                g$r$11760$xgWN3)))
                                          (if (g$memv$6078$xgWN3
                                                g$t$11761$xgWN3
                                                '(free-id atom))
                                            g$r$11760$xgWN3
                                            (if (g$memv$6078$xgWN3
                                                  g$t$11761$xgWN3
                                                  '(scheme-id atom))
                                              g$r$11760$xgWN3
                                              (if (g$memv$6078$xgWN3
                                                    g$t$11761$xgWN3
                                                    '(vector))
                                                (g$match-empty$11718$xgWN3
                                                  (vector-ref
                                                    g$p$11759$xgWN3
                                                    '1)
                                                  g$r$11760$xgWN3)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$11759$xgWN3))))))))
                                   (vector-ref g$p$11759$xgWN3 '0))))))))))
                   (g$combine$11719$xgWN3
                     (case-lambda
                       ((g$r*$11757$xgWN3 g$r$11758$xgWN3)
                        (if (null? (car g$r*$11757$xgWN3))
                          g$r$11758$xgWN3
                          (cons
                            (g$map$6085$xgWN3 car g$r*$11757$xgWN3)
                            (g$combine$11719$xgWN3
                              (g$map$6085$xgWN3 cdr g$r*$11757$xgWN3)
                              g$r$11758$xgWN3))))))
                   (g$match*$11720$xgWN3
                     (case-lambda
                       ((g$e$11739$xgWN3
                          g$p$11740$xgWN3
                          g$m*$11741$xgWN3
                          g$s*$11742$xgWN3
                          g$ae*$11743$xgWN3
                          g$r$11744$xgWN3)
                        (if (null? g$p$11740$xgWN3)
                          (if (null? g$e$11739$xgWN3)
                            (begin '#f g$r$11744$xgWN3)
                            '#f)
                          (if (pair? g$p$11740$xgWN3)
                            (if (pair? g$e$11739$xgWN3)
                              (begin
                                '#f
                                (g$match$11721$xgWN3
                                  (car g$e$11739$xgWN3)
                                  (car g$p$11740$xgWN3)
                                  g$m*$11741$xgWN3
                                  g$s*$11742$xgWN3
                                  g$ae*$11743$xgWN3
                                  (g$match$11721$xgWN3
                                    (cdr g$e$11739$xgWN3)
                                    (cdr g$p$11740$xgWN3)
                                    g$m*$11741$xgWN3
                                    g$s*$11742$xgWN3
                                    g$ae*$11743$xgWN3
                                    g$r$11744$xgWN3)))
                              '#f)
                            (if (eq? g$p$11740$xgWN3 'each-any)
                              ((case-lambda
                                 ((g$l$11745$xgWN3)
                                  (if g$l$11745$xgWN3
                                    (begin
                                      '#f
                                      (cons g$l$11745$xgWN3 g$r$11744$xgWN3))
                                    '#f)))
                               (g$match-each-any$11717$xgWN3
                                 g$e$11739$xgWN3
                                 g$m*$11741$xgWN3
                                 g$s*$11742$xgWN3
                                 g$ae*$11743$xgWN3))
                              ((case-lambda
                                 ((g$t$11746$xgWN3)
                                  (if (g$memv$6078$xgWN3
                                        g$t$11746$xgWN3
                                        '(each))
                                    (if (null? g$e$11739$xgWN3)
                                      (g$match-empty$11718$xgWN3
                                        (vector-ref g$p$11740$xgWN3 '1)
                                        g$r$11744$xgWN3)
                                      ((case-lambda
                                         ((g$r*$11747$xgWN3)
                                          (if g$r*$11747$xgWN3
                                            (begin
                                              '#f
                                              (g$combine$11719$xgWN3
                                                g$r*$11747$xgWN3
                                                g$r$11744$xgWN3))
                                            '#f)))
                                       (g$match-each$11715$xgWN3
                                         g$e$11739$xgWN3
                                         (vector-ref g$p$11740$xgWN3 '1)
                                         g$m*$11741$xgWN3
                                         g$s*$11742$xgWN3
                                         g$ae*$11743$xgWN3)))
                                    (if (g$memv$6078$xgWN3
                                          g$t$11746$xgWN3
                                          '(free-id))
                                      (if (g$symbol?$6756$xgWN3 g$e$11739$xgWN3)
                                        (if (g$top-marked?$9620$xgWN3
                                              g$m*$11741$xgWN3)
                                          (if (g$free-id=?$9690$xgWN3
                                                (g$stx^$11714$xgWN3
                                                  g$e$11739$xgWN3
                                                  g$m*$11741$xgWN3
                                                  g$s*$11742$xgWN3
                                                  g$ae*$11743$xgWN3)
                                                (vector-ref g$p$11740$xgWN3 '1))
                                            (begin '#f g$r$11744$xgWN3)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (g$memv$6078$xgWN3
                                            g$t$11746$xgWN3
                                            '(scheme-id))
                                        (if (g$symbol?$6756$xgWN3
                                              g$e$11739$xgWN3)
                                          (if (g$top-marked?$9620$xgWN3
                                                g$m*$11741$xgWN3)
                                            (if (g$free-id=?$9690$xgWN3
                                                  (g$stx^$11714$xgWN3
                                                    g$e$11739$xgWN3
                                                    g$m*$11741$xgWN3
                                                    g$s*$11742$xgWN3
                                                    g$ae*$11743$xgWN3)
                                                  (g$scheme-stx$9992$xgWN3
                                                    (vector-ref
                                                      g$p$11740$xgWN3
                                                      '1)))
                                              (begin '#f g$r$11744$xgWN3)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (g$memv$6078$xgWN3
                                              g$t$11746$xgWN3
                                              '(each+))
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$11716$xgWN3
                                                 g$e$11739$xgWN3
                                                 (vector-ref g$p$11740$xgWN3 '1)
                                                 (vector-ref g$p$11740$xgWN3 '2)
                                                 (vector-ref g$p$11740$xgWN3 '3)
                                                 g$m*$11741$xgWN3
                                                 g$s*$11742$xgWN3
                                                 g$ae*$11743$xgWN3
                                                 g$r$11744$xgWN3)))
                                            (case-lambda
                                              ((g$xr*$11751$xgWN3
                                                 g$y-pat$11752$xgWN3
                                                 g$r$11753$xgWN3)
                                               ((case-lambda
                                                  ((g$r$11754$xgWN3
                                                     g$y-pat$11755$xgWN3
                                                     g$xr*$11756$xgWN3)
                                                   (if g$r$11754$xgWN3
                                                     (if (null?
                                                           g$y-pat$11755$xgWN3)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$11756$xgWN3)
                                                           (g$match-empty$11718$xgWN3
                                                             (vector-ref
                                                               g$p$11740$xgWN3
                                                               '1)
                                                             g$r$11754$xgWN3)
                                                           (g$combine$11719$xgWN3
                                                             g$xr*$11756$xgWN3
                                                             g$r$11754$xgWN3)))
                                                       '#f)
                                                     '#f)))
                                                g$r$11753$xgWN3
                                                g$y-pat$11752$xgWN3
                                                g$xr*$11751$xgWN3))))
                                          (if (g$memv$6078$xgWN3
                                                g$t$11746$xgWN3
                                                '(atom))
                                            (if (equal?
                                                  (vector-ref
                                                    g$p$11740$xgWN3
                                                    '1)
                                                  (g$strip$9696$xgWN3
                                                    g$e$11739$xgWN3
                                                    g$m*$11741$xgWN3))
                                              (begin '#f g$r$11744$xgWN3)
                                              '#f)
                                            (if (g$memv$6078$xgWN3
                                                  g$t$11746$xgWN3
                                                  '(vector))
                                              (if (g$vector?$6754$xgWN3
                                                    g$e$11739$xgWN3)
                                                (begin
                                                  '#f
                                                  (g$match$11721$xgWN3
                                                    (vector->list
                                                      g$e$11739$xgWN3)
                                                    (vector-ref
                                                      g$p$11740$xgWN3
                                                      '1)
                                                    g$m*$11741$xgWN3
                                                    g$s*$11742$xgWN3
                                                    g$ae*$11743$xgWN3
                                                    g$r$11744$xgWN3))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$11740$xgWN3)))))))))
                               (vector-ref g$p$11740$xgWN3 '0))))))))
                   (g$match$11721$xgWN3
                     (case-lambda
                       ((g$e$11724$xgWN3
                          g$p$11725$xgWN3
                          g$m*$11726$xgWN3
                          g$s*$11727$xgWN3
                          g$ae*$11728$xgWN3
                          g$r$11729$xgWN3)
                        (if (not g$r$11729$xgWN3)
                          '#f
                          (if (eq? g$p$11725$xgWN3 '_)
                            g$r$11729$xgWN3
                            (if (eq? g$p$11725$xgWN3 'any)
                              (cons
                                (g$stx^$11714$xgWN3
                                  g$e$11724$xgWN3
                                  g$m*$11726$xgWN3
                                  g$s*$11727$xgWN3
                                  g$ae*$11728$xgWN3)
                                g$r$11729$xgWN3)
                              (if (g$stx?$9658$xgWN3 g$e$11724$xgWN3)
                                (if (not (g$top-marked?$9620$xgWN3
                                           g$m*$11726$xgWN3))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$9673$xgWN3
                                           g$m*$11726$xgWN3
                                           g$s*$11727$xgWN3
                                           g$ae*$11728$xgWN3
                                           g$e$11724$xgWN3)))
                                      (case-lambda
                                        ((g$m*$11733$xgWN3
                                           g$s*$11734$xgWN3
                                           g$ae*$11735$xgWN3)
                                         ((case-lambda
                                            ((g$ae*$11736$xgWN3
                                               g$s*$11737$xgWN3
                                               g$m*$11738$xgWN3)
                                             (g$match$11721$xgWN3
                                               (g$stx-expr$9660$xgWN3
                                                 g$e$11724$xgWN3)
                                               g$p$11725$xgWN3
                                               g$m*$11738$xgWN3
                                               g$s*$11737$xgWN3
                                               g$ae*$11736$xgWN3
                                               g$r$11729$xgWN3)))
                                          g$ae*$11735$xgWN3
                                          g$s*$11734$xgWN3
                                          g$m*$11733$xgWN3)))))
                                  '#f)
                                (if (annotation? g$e$11724$xgWN3)
                                  (g$match$11721$xgWN3
                                    (annotation-expression g$e$11724$xgWN3)
                                    g$p$11725$xgWN3
                                    g$m*$11726$xgWN3
                                    g$s*$11727$xgWN3
                                    g$ae*$11728$xgWN3
                                    g$r$11729$xgWN3)
                                  (g$match*$11720$xgWN3
                                    g$e$11724$xgWN3
                                    g$p$11725$xgWN3
                                    g$m*$11726$xgWN3
                                    g$s*$11727$xgWN3
                                    g$ae*$11728$xgWN3
                                    g$r$11729$xgWN3))))))))))
           (case-lambda
             ((g$e$11722$xgWN3 g$p$11723$xgWN3)
              (g$match$11721$xgWN3
                g$e$11722$xgWN3
                g$p$11723$xgWN3
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$10050$xgWN3
     g$ellipsis?$13591$xgWN3
     (case-lambda
       ((g$x$11828$xgWN3)
        (if (g$id?$9686$xgWN3 g$x$11828$xgWN3)
          (begin
            '#f
            (g$free-id=?$9690$xgWN3
              g$x$11828$xgWN3
              (g$scheme-stx$9992$xgWN3 '...)))
          '#f))))
   (g$underscore?$10051$xgWN3
     g$underscore?$13592$xgWN3
     (case-lambda
       ((g$x$11829$xgWN3)
        (if (g$id?$9686$xgWN3 g$x$11829$xgWN3)
          (begin
            '#f
            (g$free-id=?$9690$xgWN3
              g$x$11829$xgWN3
              (g$scheme-stx$9992$xgWN3 '_)))
          '#f))))
   (g$verify-literals$10052$xgWN3
     g$verify-literals$13593$xgWN3
     (case-lambda
       ((g$lits$11830$xgWN3 g$expr$11831$xgWN3)
        (g$for-each$6086$xgWN3
          (case-lambda
            ((g$x$11832$xgWN3)
             (if ((case-lambda
                    ((g$t$11833$xgWN3)
                     (if g$t$11833$xgWN3
                       g$t$11833$xgWN3
                       ((case-lambda
                          ((g$t$11834$xgWN3)
                           (if g$t$11834$xgWN3
                             g$t$11834$xgWN3
                             (begin
                               '#f
                               (g$underscore?$10051$xgWN3 g$x$11832$xgWN3)))))
                        (g$ellipsis?$10050$xgWN3 g$x$11832$xgWN3)))))
                  (not (g$id?$9686$xgWN3 g$x$11832$xgWN3)))
               (g$syntax-violation$10167$xgWN3
                 '#f
                 '"invalid literal"
                 g$expr$11831$xgWN3
                 g$x$11832$xgWN3)
               (void))))
          g$lits$11830$xgWN3))))
   (g$syntax-case-transformer$10053$xgWN3
     g$syntax-case-transformer$13594$xgWN3
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$11835$xgWN3
                     (case-lambda
                       ((g$pvars$11892$xgWN3
                          g$expr$11893$xgWN3
                          g$y$11894$xgWN3
                          g$r$11895$xgWN3
                          g$mr$11896$xgWN3)
                        ((case-lambda
                           ((g$ids$11897$xgWN3 g$levels$11898$xgWN3)
                            ((case-lambda
                               ((g$labels$11899$xgWN3 g$new-vars$11900$xgWN3)
                                ((case-lambda
                                   ((g$body$11901$xgWN3)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$9608$xgWN3
                                        '#f
                                        g$new-vars$11900$xgWN3
                                        g$body$11901$xgWN3)
                                      g$y$11894$xgWN3)))
                                 (g$chi-expr$10067$xgWN3
                                   (g$add-subst$9676$xgWN3
                                     (g$make-full-rib$9652$xgWN3
                                       g$ids$11897$xgWN3
                                       g$labels$11899$xgWN3)
                                     g$expr$11893$xgWN3)
                                   (append
                                     (g$map$6085$xgWN3
                                       (case-lambda
                                         ((g$label$11902$xgWN3
                                            g$var$11903$xgWN3
                                            g$level$11904$xgWN3)
                                          (cons
                                            g$label$11902$xgWN3
                                            (g$make-binding$9702$xgWN3
                                              'syntax
                                              (cons
                                                g$var$11903$xgWN3
                                                g$level$11904$xgWN3)))))
                                       g$labels$11899$xgWN3
                                       g$new-vars$11900$xgWN3
                                       (g$map$6085$xgWN3
                                         cdr
                                         g$pvars$11892$xgWN3))
                                     g$r$11895$xgWN3)
                                   g$mr$11896$xgWN3))))
                             (g$map$6085$xgWN3
                               g$gen-label$9623$xgWN3
                               g$ids$11897$xgWN3)
                             (g$map$6085$xgWN3
                               g$gen-lexical$9621$xgWN3
                               g$ids$11897$xgWN3))))
                         (g$map$6085$xgWN3 car g$pvars$11892$xgWN3)
                         (g$map$6085$xgWN3 cdr g$pvars$11892$xgWN3)))))
                   (g$invalid-ids-error$11836$xgWN3
                     (case-lambda
                       ((g$id*$11886$xgWN3 g$e$11887$xgWN3 g$class$11888$xgWN3)
                        ((letrec ((g$find$11889$xgWN3
                                    (case-lambda
                                      ((g$id*$11890$xgWN3 g$ok*$11891$xgWN3)
                                       (if (null? g$id*$11890$xgWN3)
                                         (g$syntax-violation$10167$xgWN3
                                           '#f
                                           '"invalid syntax"
                                           g$e$11887$xgWN3)
                                         (if (g$id?$9686$xgWN3
                                               (car g$id*$11890$xgWN3))
                                           (if (g$bound-id-member?$9693$xgWN3
                                                 (car g$id*$11890$xgWN3)
                                                 g$ok*$11891$xgWN3)
                                             (g$syntax-error$10164$xgWN3
                                               (car g$id*$11890$xgWN3)
                                               '"duplicate "
                                               g$class$11888$xgWN3)
                                             (g$find$11889$xgWN3
                                               (cdr g$id*$11890$xgWN3)
                                               (cons
                                                 (car g$id*$11890$xgWN3)
                                                 g$ok*$11891$xgWN3)))
                                           (g$syntax-error$10164$xgWN3
                                             (car g$id*$11890$xgWN3)
                                             '"invalid "
                                             g$class$11888$xgWN3)))))))
                           g$find$11889$xgWN3)
                         g$id*$11886$xgWN3
                         '()))))
                   (g$gen-clause$11837$xgWN3
                     (case-lambda
                       ((g$x$11866$xgWN3
                          g$keys$11867$xgWN3
                          g$clauses$11868$xgWN3
                          g$r$11869$xgWN3
                          g$mr$11870$xgWN3
                          g$pat$11871$xgWN3
                          g$fender$11872$xgWN3
                          g$expr$11873$xgWN3)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$10048$xgWN3
                               g$pat$11871$xgWN3
                               g$keys$11867$xgWN3)))
                          (case-lambda
                            ((g$p$11876$xgWN3 g$pvars$11877$xgWN3)
                             ((case-lambda
                                ((g$pvars$11878$xgWN3 g$p$11879$xgWN3)
                                 (if (not (g$distinct-bound-ids?$9692$xgWN3
                                            (g$map$6085$xgWN3
                                              car
                                              g$pvars$11878$xgWN3)))
                                   (g$invalid-ids-error$11836$xgWN3
                                     (g$map$6085$xgWN3 car g$pvars$11878$xgWN3)
                                     g$pat$11871$xgWN3
                                     '"pattern variable")
                                   (if (not (g$for-all$6083$xgWN3
                                              (case-lambda
                                                ((g$x$11880$xgWN3)
                                                 (not (g$ellipsis?$10050$xgWN3
                                                        (car g$x$11880$xgWN3)))))
                                              g$pvars$11878$xgWN3))
                                     (g$syntax-violation$10167$xgWN3
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$11871$xgWN3)
                                     ((case-lambda
                                        ((g$y$11881$xgWN3)
                                         ((case-lambda
                                            ((g$test$11882$xgWN3)
                                             ((case-lambda
                                                ((g$conseq$11883$xgWN3)
                                                 ((case-lambda
                                                    ((g$altern$11884$xgWN3)
                                                     (list
                                                       (g$build-lambda$9608$xgWN3
                                                         '#f
                                                         (list g$y$11881$xgWN3)
                                                         (list
                                                           'if
                                                           g$test$11882$xgWN3
                                                           g$conseq$11883$xgWN3
                                                           g$altern$11884$xgWN3))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$11866$xgWN3
                                                         (list
                                                           'quote
                                                           g$p$11879$xgWN3)))))
                                                  (g$gen-syntax-case$11838$xgWN3
                                                    g$x$11866$xgWN3
                                                    g$keys$11867$xgWN3
                                                    g$clauses$11868$xgWN3
                                                    g$r$11869$xgWN3
                                                    g$mr$11870$xgWN3))))
                                              (g$build-dispatch-call$11835$xgWN3
                                                g$pvars$11878$xgWN3
                                                g$expr$11873$xgWN3
                                                g$y$11881$xgWN3
                                                g$r$11869$xgWN3
                                                g$mr$11870$xgWN3))))
                                          (if (eq? g$fender$11872$xgWN3 '#t)
                                            g$y$11881$xgWN3
                                            ((case-lambda
                                               ((g$call$11885$xgWN3)
                                                (list
                                                  'if
                                                  g$y$11881$xgWN3
                                                  g$call$11885$xgWN3
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$11835$xgWN3
                                               g$pvars$11878$xgWN3
                                               g$fender$11872$xgWN3
                                               g$y$11881$xgWN3
                                               g$r$11869$xgWN3
                                               g$mr$11870$xgWN3))))))
                                      (g$gen-lexical$9621$xgWN3 'tmp))))))
                              g$pvars$11877$xgWN3
                              g$p$11876$xgWN3)))))))
                   (g$gen-syntax-case$11838$xgWN3
                     (case-lambda
                       ((g$x$11849$xgWN3
                          g$keys$11850$xgWN3
                          g$clauses$11851$xgWN3
                          g$r$11852$xgWN3
                          g$mr$11853$xgWN3)
                        (if (null? g$clauses$11851$xgWN3)
                          (list '(primitive syntax-error) g$x$11849$xgWN3)
                          ((case-lambda
                             ((g$t$11854$xgWN3)
                              ((case-lambda
                                 ((g$ls/false$11855$xgWN3)
                                  (if g$ls/false$11855$xgWN3
                                    (apply
                                      (case-lambda
                                        ((g$pat$11856$xgWN3 g$expr$11857$xgWN3)
                                         (if (if (g$id?$9686$xgWN3
                                                   g$pat$11856$xgWN3)
                                               (if (not (g$bound-id-member?$9693$xgWN3
                                                          g$pat$11856$xgWN3
                                                          g$keys$11850$xgWN3))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$10050$xgWN3
                                                          g$pat$11856$xgWN3)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$9690$xgWN3
                                                 g$pat$11856$xgWN3
                                                 (g$scheme-stx$9992$xgWN3 '_))
                                             (g$chi-expr$10067$xgWN3
                                               g$expr$11857$xgWN3
                                               g$r$11852$xgWN3
                                               g$mr$11853$xgWN3)
                                             ((case-lambda
                                                ((g$lab$11858$xgWN3
                                                   g$lex$11859$xgWN3)
                                                 ((case-lambda
                                                    ((g$body$11860$xgWN3)
                                                     (list
                                                       (g$build-lambda$9608$xgWN3
                                                         '#f
                                                         (list
                                                           g$lex$11859$xgWN3)
                                                         g$body$11860$xgWN3)
                                                       g$x$11849$xgWN3)))
                                                  (g$chi-expr$10067$xgWN3
                                                    (g$add-subst$9676$xgWN3
                                                      (g$make-full-rib$9652$xgWN3
                                                        (list g$pat$11856$xgWN3)
                                                        (list
                                                          g$lab$11858$xgWN3))
                                                      g$expr$11857$xgWN3)
                                                    (cons
                                                      (cons
                                                        g$lab$11858$xgWN3
                                                        (g$make-binding$9702$xgWN3
                                                          'syntax
                                                          (cons
                                                            g$lex$11859$xgWN3
                                                            '0)))
                                                      g$r$11852$xgWN3)
                                                    g$mr$11853$xgWN3))))
                                              (g$gen-label$9623$xgWN3
                                                g$pat$11856$xgWN3)
                                              (g$gen-lexical$9621$xgWN3
                                                g$pat$11856$xgWN3)))
                                           (g$gen-clause$11837$xgWN3
                                             g$x$11849$xgWN3
                                             g$keys$11850$xgWN3
                                             (cdr g$clauses$11851$xgWN3)
                                             g$r$11852$xgWN3
                                             g$mr$11853$xgWN3
                                             g$pat$11856$xgWN3
                                             '#t
                                             g$expr$11857$xgWN3))))
                                      g$ls/false$11855$xgWN3)
                                    ((case-lambda
                                       ((g$t$11861$xgWN3)
                                        ((case-lambda
                                           ((g$ls/false$11862$xgWN3)
                                            (if g$ls/false$11862$xgWN3
                                              (apply
                                                (case-lambda
                                                  ((g$pat$11863$xgWN3
                                                     g$fender$11864$xgWN3
                                                     g$expr$11865$xgWN3)
                                                   (g$gen-clause$11837$xgWN3
                                                     g$x$11849$xgWN3
                                                     g$keys$11850$xgWN3
                                                     (cdr g$clauses$11851$xgWN3)
                                                     g$r$11852$xgWN3
                                                     g$mr$11853$xgWN3
                                                     g$pat$11863$xgWN3
                                                     g$fender$11864$xgWN3
                                                     g$expr$11865$xgWN3)))
                                                g$ls/false$11862$xgWN3)
                                              (g$syntax-violation$10167$xgWN3
                                                '#f
                                                '"invalid syntax"
                                                g$t$11861$xgWN3))))
                                         (g$syntax-dispatch$10049$xgWN3
                                           g$t$11861$xgWN3
                                           '(any any any)))))
                                     g$t$11854$xgWN3))))
                               (g$syntax-dispatch$10049$xgWN3
                                 g$t$11854$xgWN3
                                 '(any any)))))
                           (car g$clauses$11851$xgWN3)))))))
           (case-lambda
             ((g$e$11839$xgWN3 g$r$11840$xgWN3 g$mr$11841$xgWN3)
              ((case-lambda
                 ((g$t$11842$xgWN3)
                  ((case-lambda
                     ((g$ls/false$11843$xgWN3)
                      (if g$ls/false$11843$xgWN3
                        (apply
                          (case-lambda
                            ((g$expr$11844$xgWN3
                               g$keys$11845$xgWN3
                               g$clauses$11846$xgWN3)
                             (begin
                               (g$verify-literals$10052$xgWN3
                                 g$keys$11845$xgWN3
                                 g$e$11839$xgWN3)
                               ((case-lambda
                                  ((g$x$11847$xgWN3)
                                   ((case-lambda
                                      ((g$body$11848$xgWN3)
                                       (list
                                         (g$build-lambda$9608$xgWN3
                                           '#f
                                           (list g$x$11847$xgWN3)
                                           g$body$11848$xgWN3)
                                         (g$chi-expr$10067$xgWN3
                                           g$expr$11844$xgWN3
                                           g$r$11840$xgWN3
                                           g$mr$11841$xgWN3))))
                                    (g$gen-syntax-case$11838$xgWN3
                                      g$x$11847$xgWN3
                                      g$keys$11845$xgWN3
                                      g$clauses$11846$xgWN3
                                      g$r$11840$xgWN3
                                      g$mr$11841$xgWN3))))
                                (g$gen-lexical$9621$xgWN3 'tmp)))))
                          g$ls/false$11843$xgWN3)
                        (g$syntax-violation$10167$xgWN3
                          '#f
                          '"invalid syntax"
                          g$t$11842$xgWN3))))
                   (g$syntax-dispatch$10049$xgWN3
                     g$t$11842$xgWN3
                     '(_ any each-any . each-any)))))
               g$e$11839$xgWN3))))))))
   (g$ellipsis-map$10054$xgWN3
     g$ellipsis-map$13595$xgWN3
     (case-lambda
       ((g$proc$11905$xgWN3 g$ls$11906$xgWN3 . g$ls*$11907$xgWN3)
        (letrec* ((g$who$11908$xgWN3 '...))
          (begin
            (if (not (list? g$ls$11906$xgWN3))
              (assertion-violation
                g$who$11908$xgWN3
                '"not a list"
                g$ls$11906$xgWN3)
              (void))
            (if (not (null? g$ls*$11907$xgWN3))
              ((case-lambda
                 ((g$n$11909$xgWN3)
                  (g$for-each$6086$xgWN3
                    (case-lambda
                      ((g$x$11910$xgWN3)
                       (begin
                         (if (not (list? g$x$11910$xgWN3))
                           (assertion-violation
                             g$who$11908$xgWN3
                             '"not a list"
                             g$x$11910$xgWN3)
                           (void))
                         (if (not (= (length g$x$11910$xgWN3) g$n$11909$xgWN3))
                           (assertion-violation
                             g$who$11908$xgWN3
                             '"length mismatch"
                             g$ls$11906$xgWN3
                             g$x$11910$xgWN3)
                           (void)))))
                    g$ls*$11907$xgWN3)))
               (length g$ls$11906$xgWN3))
              (void))
            (apply
              g$map$6085$xgWN3
              g$proc$11905$xgWN3
              g$ls$11906$xgWN3
              g$ls*$11907$xgWN3))))))
   (g$syntax-transformer$10055$xgWN3
     g$syntax-transformer$13596$xgWN3
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$11911$xgWN3
                     (case-lambda
                       ((g$src$11971$xgWN3
                          g$e$11972$xgWN3
                          g$r$11973$xgWN3
                          g$maps$11974$xgWN3
                          g$ellipsis?$11975$xgWN3
                          g$vec?$11976$xgWN3)
                        ((case-lambda
                           ((g$t$11977$xgWN3)
                            ((case-lambda
                               ((g$ls/false$11978$xgWN3)
                                (if (if g$ls/false$11978$xgWN3
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$11979$xgWN3)
                                             (g$ellipsis?$11975$xgWN3
                                               g$dots$11979$xgWN3)))
                                          g$ls/false$11978$xgWN3))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$11980$xgWN3)
                                       (g$syntax-violation$10167$xgWN3
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$11971$xgWN3)))
                                    g$ls/false$11978$xgWN3)
                                  ((case-lambda
                                     ((g$t$11981$xgWN3)
                                      ((case-lambda
                                         ((g$ls/false$11982$xgWN3)
                                          (if (if g$ls/false$11982$xgWN3
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$11983$xgWN3)
                                                       (g$id?$9686$xgWN3
                                                         g$id$11983$xgWN3)))
                                                    g$ls/false$11982$xgWN3))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$11984$xgWN3)
                                                 ((case-lambda
                                                    ((g$label$11985$xgWN3)
                                                     ((case-lambda
                                                        ((g$b$11986$xgWN3)
                                                         (if (eq? (g$binding-type$9703$xgWN3
                                                                    g$b$11986$xgWN3)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$11989$xgWN3)
                                                                    (g$gen-ref$11912$xgWN3
                                                                      g$src$11971$xgWN3
                                                                      (car g$var.lev$11989$xgWN3)
                                                                      (cdr g$var.lev$11989$xgWN3)
                                                                      g$maps$11974$xgWN3)))
                                                                 (g$binding-value$9704$xgWN3
                                                                   g$b$11986$xgWN3))))
                                                             (case-lambda
                                                               ((g$var$11990$xgWN3
                                                                  g$maps$11991$xgWN3)
                                                                ((case-lambda
                                                                   ((g$maps$11992$xgWN3
                                                                      g$var$11993$xgWN3)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$11993$xgWN3)
                                                                      g$maps$11992$xgWN3)))
                                                                 g$maps$11991$xgWN3
                                                                 g$var$11990$xgWN3))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$11972$xgWN3)
                                                             g$maps$11974$xgWN3))))
                                                      (g$label->binding$9701$xgWN3
                                                        g$label$11985$xgWN3
                                                        g$r$11973$xgWN3))))
                                                  (g$id->label$9699$xgWN3
                                                    g$e$11972$xgWN3))))
                                              g$ls/false$11982$xgWN3)
                                            ((case-lambda
                                               ((g$t$11994$xgWN3)
                                                ((case-lambda
                                                   ((g$ls/false$11995$xgWN3)
                                                    (if (if g$ls/false$11995$xgWN3
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$11996$xgWN3
                                                                   g$e$11997$xgWN3)
                                                                 (g$ellipsis?$11975$xgWN3
                                                                   g$dots$11996$xgWN3)))
                                                              g$ls/false$11995$xgWN3))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$11998$xgWN3
                                                             g$e$11999$xgWN3)
                                                           (if g$vec?$11976$xgWN3
                                                             (g$syntax-violation$10167$xgWN3
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$11971$xgWN3)
                                                             (g$gen-syntax$11911$xgWN3
                                                               g$src$11971$xgWN3
                                                               g$e$11999$xgWN3
                                                               g$r$11973$xgWN3
                                                               g$maps$11974$xgWN3
                                                               (case-lambda
                                                                 ((g$x$12000$xgWN3)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$11995$xgWN3)
                                                      ((case-lambda
                                                         ((g$t$12001$xgWN3)
                                                          ((case-lambda
                                                             ((g$ls/false$12002$xgWN3)
                                                              (if (if g$ls/false$12002$xgWN3
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$12003$xgWN3
                                                                             g$dots$12004$xgWN3
                                                                             g$y$12005$xgWN3)
                                                                           (g$ellipsis?$11975$xgWN3
                                                                             g$dots$12004$xgWN3)))
                                                                        g$ls/false$12002$xgWN3))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$12006$xgWN3
                                                                       g$dots$12007$xgWN3
                                                                       g$y$12008$xgWN3)
                                                                     ((letrec ((g$f$12009$xgWN3
                                                                                 (case-lambda
                                                                                   ((g$y$12010$xgWN3
                                                                                      g$k$12011$xgWN3)
                                                                                    ((case-lambda
                                                                                       ((g$t$12012$xgWN3)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$12013$xgWN3)
                                                                                            (if g$ls/false$12013$xgWN3
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$12011$xgWN3
                                                                                                     g$maps$11974$xgWN3)))
                                                                                                g$ls/false$12013$xgWN3)
                                                                                              ((case-lambda
                                                                                                 ((g$t$12014$xgWN3)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$12015$xgWN3)
                                                                                                      (if (if g$ls/false$12015$xgWN3
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$12016$xgWN3
                                                                                                                     g$y$12017$xgWN3)
                                                                                                                   (g$ellipsis?$11975$xgWN3
                                                                                                                     g$dots$12016$xgWN3)))
                                                                                                                g$ls/false$12015$xgWN3))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$12018$xgWN3
                                                                                                               g$y$12019$xgWN3)
                                                                                                             (g$f$12009$xgWN3
                                                                                                               g$y$12019$xgWN3
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$12020$xgWN3)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$12011$xgWN3
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$12020$xgWN3))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$12023$xgWN3
                                                                                                                         g$maps$12024$xgWN3)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$12025$xgWN3
                                                                                                                             g$x$12026$xgWN3)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$12025$xgWN3))
                                                                                                                             (g$syntax-violation$10167$xgWN3
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$11971$xgWN3)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$11914$xgWN3
                                                                                                                                 g$x$12026$xgWN3
                                                                                                                                 (car g$maps$12025$xgWN3))
                                                                                                                               (cdr g$maps$12025$xgWN3)))))
                                                                                                                        g$maps$12024$xgWN3
                                                                                                                        g$x$12023$xgWN3)))))))))
                                                                                                          g$ls/false$12015$xgWN3)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$12027$xgWN3)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$12028$xgWN3)
                                                                                                                (if g$ls/false$12028$xgWN3
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$11911$xgWN3
                                                                                                                              g$src$11971$xgWN3
                                                                                                                              g$y$12010$xgWN3
                                                                                                                              g$r$11973$xgWN3
                                                                                                                              g$maps$11974$xgWN3
                                                                                                                              g$ellipsis?$11975$xgWN3
                                                                                                                              g$vec?$11976$xgWN3)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$12031$xgWN3
                                                                                                                              g$maps$12032$xgWN3)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$12033$xgWN3
                                                                                                                                  g$y$12034$xgWN3)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$12011$xgWN3
                                                                                                                                       g$maps$12033$xgWN3)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$12037$xgWN3
                                                                                                                                       g$maps$12038$xgWN3)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$12039$xgWN3
                                                                                                                                           g$x$12040$xgWN3)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$11913$xgWN3
                                                                                                                                             g$x$12040$xgWN3
                                                                                                                                             g$y$12034$xgWN3)
                                                                                                                                           g$maps$12039$xgWN3)))
                                                                                                                                      g$maps$12038$xgWN3
                                                                                                                                      g$x$12037$xgWN3))))))
                                                                                                                             g$maps$12032$xgWN3
                                                                                                                             g$y$12031$xgWN3))))))
                                                                                                                    g$ls/false$12028$xgWN3)
                                                                                                                  (g$syntax-violation$10167$xgWN3
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$12027$xgWN3))))
                                                                                                             (g$syntax-dispatch$10049$xgWN3
                                                                                                               g$t$12027$xgWN3
                                                                                                               '_))))
                                                                                                         g$t$12014$xgWN3))))
                                                                                                   (g$syntax-dispatch$10049$xgWN3
                                                                                                     g$t$12014$xgWN3
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$12012$xgWN3))))
                                                                                         (g$syntax-dispatch$10049$xgWN3
                                                                                           g$t$12012$xgWN3
                                                                                           '()))))
                                                                                     g$y$12010$xgWN3)))))
                                                                        g$f$12009$xgWN3)
                                                                      g$y$12008$xgWN3
                                                                      (case-lambda
                                                                        ((g$maps$12041$xgWN3)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$11911$xgWN3
                                                                                g$src$11971$xgWN3
                                                                                g$x$12006$xgWN3
                                                                                g$r$11973$xgWN3
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$12041$xgWN3)
                                                                                g$ellipsis?$11975$xgWN3
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$12044$xgWN3
                                                                                g$maps$12045$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$maps$12046$xgWN3
                                                                                    g$x$12047$xgWN3)
                                                                                  (if (null?
                                                                                        (car g$maps$12046$xgWN3))
                                                                                    (g$syntax-violation$10167$xgWN3
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$11971$xgWN3)
                                                                                    (values
                                                                                      (g$gen-map$11915$xgWN3
                                                                                        g$x$12047$xgWN3
                                                                                        (car g$maps$12046$xgWN3))
                                                                                      (cdr g$maps$12046$xgWN3)))))
                                                                               g$maps$12045$xgWN3
                                                                               g$x$12044$xgWN3)))))))))
                                                                  g$ls/false$12002$xgWN3)
                                                                ((case-lambda
                                                                   ((g$t$12048$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$ls/false$12049$xgWN3)
                                                                        (if g$ls/false$12049$xgWN3
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$12050$xgWN3
                                                                                 g$y$12051$xgWN3)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$11911$xgWN3
                                                                                      g$src$11971$xgWN3
                                                                                      g$x$12050$xgWN3
                                                                                      g$r$11973$xgWN3
                                                                                      g$maps$11974$xgWN3
                                                                                      g$ellipsis?$11975$xgWN3
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$12054$xgWN3
                                                                                      g$maps$12055$xgWN3)
                                                                                    ((case-lambda
                                                                                       ((g$maps$12056$xgWN3
                                                                                          g$xnew$12057$xgWN3)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$11911$xgWN3
                                                                                               g$src$11971$xgWN3
                                                                                               g$y$12051$xgWN3
                                                                                               g$r$11973$xgWN3
                                                                                               g$maps$12056$xgWN3
                                                                                               g$ellipsis?$11975$xgWN3
                                                                                               g$vec?$11976$xgWN3)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$12060$xgWN3
                                                                                               g$maps$12061$xgWN3)
                                                                                             ((case-lambda
                                                                                                ((g$maps$12062$xgWN3
                                                                                                   g$ynew$12063$xgWN3)
                                                                                                 (values
                                                                                                   (g$gen-cons$11916$xgWN3
                                                                                                     g$e$11972$xgWN3
                                                                                                     g$x$12050$xgWN3
                                                                                                     g$y$12051$xgWN3
                                                                                                     g$xnew$12057$xgWN3
                                                                                                     g$ynew$12063$xgWN3)
                                                                                                   g$maps$12062$xgWN3)))
                                                                                              g$maps$12061$xgWN3
                                                                                              g$ynew$12060$xgWN3))))))
                                                                                     g$maps$12055$xgWN3
                                                                                     g$xnew$12054$xgWN3))))))
                                                                            g$ls/false$12049$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$t$12064$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$12065$xgWN3)
                                                                                  (if g$ls/false$12065$xgWN3
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$12066$xgWN3)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$11911$xgWN3
                                                                                                g$src$11971$xgWN3
                                                                                                g$ls$12066$xgWN3
                                                                                                g$r$11973$xgWN3
                                                                                                g$maps$11974$xgWN3
                                                                                                g$ellipsis?$11975$xgWN3
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$12069$xgWN3
                                                                                                g$maps$12070$xgWN3)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$12071$xgWN3
                                                                                                    g$lsnew$12072$xgWN3)
                                                                                                  (values
                                                                                                    (g$gen-vector$11917$xgWN3
                                                                                                      g$e$11972$xgWN3
                                                                                                      g$ls$12066$xgWN3
                                                                                                      g$lsnew$12072$xgWN3)
                                                                                                    g$maps$12071$xgWN3)))
                                                                                               g$maps$12070$xgWN3
                                                                                               g$lsnew$12069$xgWN3))))))
                                                                                      g$ls/false$12065$xgWN3)
                                                                                    ((case-lambda
                                                                                       ((g$t$12073$xgWN3)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$12074$xgWN3)
                                                                                            (if g$ls/false$12074$xgWN3
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$11972$xgWN3)
                                                                                                     g$maps$11974$xgWN3)))
                                                                                                g$ls/false$12074$xgWN3)
                                                                                              (g$syntax-violation$10167$xgWN3
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$12073$xgWN3))))
                                                                                         (g$syntax-dispatch$10049$xgWN3
                                                                                           g$t$12073$xgWN3
                                                                                           '_))))
                                                                                     g$t$12064$xgWN3))))
                                                                               (g$syntax-dispatch$10049$xgWN3
                                                                                 g$t$12064$xgWN3
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$12048$xgWN3))))
                                                                     (g$syntax-dispatch$10049$xgWN3
                                                                       g$t$12048$xgWN3
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$12001$xgWN3))))
                                                           (g$syntax-dispatch$10049$xgWN3
                                                             g$t$12001$xgWN3
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$11994$xgWN3))))
                                                 (g$syntax-dispatch$10049$xgWN3
                                                   g$t$11994$xgWN3
                                                   '(any any)))))
                                             g$t$11981$xgWN3))))
                                       (g$syntax-dispatch$10049$xgWN3
                                         g$t$11981$xgWN3
                                         'any))))
                                   g$t$11977$xgWN3))))
                             (g$syntax-dispatch$10049$xgWN3
                               g$t$11977$xgWN3
                               'any))))
                         g$e$11972$xgWN3))))
                   (g$gen-ref$11912$xgWN3
                     (case-lambda
                       ((g$src$11958$xgWN3
                          g$var$11959$xgWN3
                          g$level$11960$xgWN3
                          g$maps$11961$xgWN3)
                        (if (= g$level$11960$xgWN3 '0)
                          (values g$var$11959$xgWN3 g$maps$11961$xgWN3)
                          (if (null? g$maps$11961$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$11958$xgWN3)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$11912$xgWN3
                                   g$src$11958$xgWN3
                                   g$var$11959$xgWN3
                                   (- g$level$11960$xgWN3 '1)
                                   (cdr g$maps$11961$xgWN3))))
                              (case-lambda
                                ((g$outer-var$11964$xgWN3
                                   g$outer-maps$11965$xgWN3)
                                 ((case-lambda
                                    ((g$outer-maps$11966$xgWN3
                                       g$outer-var$11967$xgWN3)
                                     ((case-lambda
                                        ((g$t$11968$xgWN3)
                                         (if g$t$11968$xgWN3
                                           ((case-lambda
                                              ((g$b$11969$xgWN3)
                                               (values
                                                 (cdr g$b$11969$xgWN3)
                                                 g$maps$11961$xgWN3)))
                                            g$t$11968$xgWN3)
                                           ((case-lambda
                                              ((g$inner-var$11970$xgWN3)
                                               (values
                                                 g$inner-var$11970$xgWN3
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$11967$xgWN3
                                                       g$inner-var$11970$xgWN3)
                                                     (car g$maps$11961$xgWN3))
                                                   g$outer-maps$11966$xgWN3))))
                                            (g$gen-lexical$9621$xgWN3 'tmp)))))
                                      (g$assq$6073$xgWN3
                                        g$outer-var$11967$xgWN3
                                        (car g$maps$11961$xgWN3)))))
                                  g$outer-maps$11965$xgWN3
                                  g$outer-var$11964$xgWN3)))))))))
                   (g$gen-append$11913$xgWN3
                     (case-lambda
                       ((g$x$11956$xgWN3 g$y$11957$xgWN3)
                        (if (equal? g$y$11957$xgWN3 ''())
                          g$x$11956$xgWN3
                          (list 'append g$x$11956$xgWN3 g$y$11957$xgWN3)))))
                   (g$gen-mappend$11914$xgWN3
                     (case-lambda
                       ((g$e$11954$xgWN3 g$map-env$11955$xgWN3)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$11915$xgWN3
                            g$e$11954$xgWN3
                            g$map-env$11955$xgWN3)))))
                   (g$gen-map$11915$xgWN3
                     (case-lambda
                       ((g$e$11945$xgWN3 g$map-env$11946$xgWN3)
                        ((case-lambda
                           ((g$formals$11947$xgWN3 g$actuals$11948$xgWN3)
                            (if (eq? (car g$e$11945$xgWN3) 'ref)
                              (car g$actuals$11948$xgWN3)
                              (if (g$for-all$6083$xgWN3
                                    (case-lambda
                                      ((g$x$11949$xgWN3)
                                       (if (eq? (car g$x$11949$xgWN3) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$6077$xgWN3
                                             (g$cadr$6765$xgWN3 g$x$11949$xgWN3)
                                             g$formals$11947$xgWN3))
                                         '#f)))
                                    (cdr g$e$11945$xgWN3))
                                ((case-lambda
                                   ((g$args$11950$xgWN3)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$11945$xgWN3))
                                        g$args$11950$xgWN3))))
                                 (g$map$6085$xgWN3
                                   ((case-lambda
                                      ((g$r$11951$xgWN3)
                                       (case-lambda
                                         ((g$x$11952$xgWN3)
                                          (cdr (g$assq$6073$xgWN3
                                                 (g$cadr$6765$xgWN3
                                                   g$x$11952$xgWN3)
                                                 g$r$11951$xgWN3))))))
                                    (g$map$6085$xgWN3
                                      cons
                                      g$formals$11947$xgWN3
                                      g$actuals$11948$xgWN3))
                                   (cdr g$e$11945$xgWN3)))
                                (g$cons*$6087$xgWN3
                                  'map
                                  (list
                                    'lambda
                                    g$formals$11947$xgWN3
                                    g$e$11945$xgWN3)
                                  g$actuals$11948$xgWN3)))))
                         (g$map$6085$xgWN3 cdr g$map-env$11946$xgWN3)
                         (g$map$6085$xgWN3
                           (case-lambda
                             ((g$x$11953$xgWN3)
                              (list 'ref (car g$x$11953$xgWN3))))
                           g$map-env$11946$xgWN3)))))
                   (g$gen-cons$11916$xgWN3
                     (case-lambda
                       ((g$e$11937$xgWN3
                          g$x$11938$xgWN3
                          g$y$11939$xgWN3
                          g$xnew$11940$xgWN3
                          g$ynew$11941$xgWN3)
                        ((case-lambda
                           ((g$t$11942$xgWN3)
                            (if (g$memv$6078$xgWN3 g$t$11942$xgWN3 '(quote))
                              (if (eq? (car g$xnew$11940$xgWN3) 'quote)
                                ((case-lambda
                                   ((g$xnew$11943$xgWN3 g$ynew$11944$xgWN3)
                                    (if (if (eq? g$xnew$11943$xgWN3
                                                 g$x$11938$xgWN3)
                                          (begin
                                            '#f
                                            (eq? g$ynew$11944$xgWN3
                                                 g$y$11939$xgWN3))
                                          '#f)
                                      (list 'quote g$e$11937$xgWN3)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$11943$xgWN3
                                          g$ynew$11944$xgWN3)))))
                                 (g$cadr$6765$xgWN3 g$xnew$11940$xgWN3)
                                 (g$cadr$6765$xgWN3 g$ynew$11941$xgWN3))
                                (if (null?
                                      (g$cadr$6765$xgWN3 g$ynew$11941$xgWN3))
                                  (list 'list g$xnew$11940$xgWN3)
                                  (list
                                    'cons
                                    g$xnew$11940$xgWN3
                                    g$ynew$11941$xgWN3)))
                              (if (g$memv$6078$xgWN3 g$t$11942$xgWN3 '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$11940$xgWN3
                                    (cdr g$ynew$11941$xgWN3)))
                                (list
                                  'cons
                                  g$xnew$11940$xgWN3
                                  g$ynew$11941$xgWN3)))))
                         (car g$ynew$11941$xgWN3)))))
                   (g$gen-vector$11917$xgWN3
                     (case-lambda
                       ((g$e$11934$xgWN3 g$ls$11935$xgWN3 g$lsnew$11936$xgWN3)
                        (if (eq? (car g$lsnew$11936$xgWN3) 'quote)
                          (if (eq? (g$cadr$6765$xgWN3 g$lsnew$11936$xgWN3)
                                   g$ls$11935$xgWN3)
                            (list 'quote g$e$11934$xgWN3)
                            (list
                              'quote
                              (g$list->vector$6751$xgWN3
                                (g$cadr$6765$xgWN3 g$lsnew$11936$xgWN3))))
                          (if (eq? (car g$lsnew$11936$xgWN3) 'list)
                            (cons 'vector (cdr g$lsnew$11936$xgWN3))
                            (list 'list->vector g$lsnew$11936$xgWN3))))))
                   (g$regen$11918$xgWN3
                     (case-lambda
                       ((g$x$11931$xgWN3)
                        ((case-lambda
                           ((g$t$11932$xgWN3)
                            (if (g$memv$6078$xgWN3 g$t$11932$xgWN3 '(ref))
                              (g$cadr$6765$xgWN3 g$x$11931$xgWN3)
                              (if (g$memv$6078$xgWN3
                                    g$t$11932$xgWN3
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$6765$xgWN3 g$x$11931$xgWN3))
                                (if (g$memv$6078$xgWN3 g$t$11932$xgWN3 '(quote))
                                  (list
                                    'quote
                                    (g$cadr$6765$xgWN3 g$x$11931$xgWN3))
                                  (if (g$memv$6078$xgWN3
                                        g$t$11932$xgWN3
                                        '(lambda))
                                    (g$build-lambda$9608$xgWN3
                                      '#f
                                      (g$cadr$6765$xgWN3 g$x$11931$xgWN3)
                                      (g$regen$11918$xgWN3
                                        (g$caddr$6771$xgWN3 g$x$11931$xgWN3)))
                                    (if (g$memv$6078$xgWN3
                                          g$t$11932$xgWN3
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$11933$xgWN3)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$11933$xgWN3)))
                                       (g$map$6085$xgWN3
                                         g$regen$11918$xgWN3
                                         (cdr g$x$11931$xgWN3)))
                                      (cons
                                        (list 'primitive (car g$x$11931$xgWN3))
                                        (g$map$6085$xgWN3
                                          g$regen$11918$xgWN3
                                          (cdr g$x$11931$xgWN3))))))))))
                         (car g$x$11931$xgWN3))))))
           (case-lambda
             ((g$e$11919$xgWN3 g$r$11920$xgWN3 g$mr$11921$xgWN3)
              ((case-lambda
                 ((g$t$11922$xgWN3)
                  ((case-lambda
                     ((g$ls/false$11923$xgWN3)
                      (if g$ls/false$11923$xgWN3
                        (apply
                          (case-lambda
                            ((g$x$11924$xgWN3)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$11911$xgWN3
                                    g$e$11919$xgWN3
                                    g$x$11924$xgWN3
                                    g$r$11920$xgWN3
                                    '()
                                    g$ellipsis?$10050$xgWN3
                                    '#f)))
                               (case-lambda
                                 ((g$e$11927$xgWN3 g$maps$11928$xgWN3)
                                  ((case-lambda
                                     ((g$maps$11929$xgWN3 g$e$11930$xgWN3)
                                      (g$regen$11918$xgWN3 g$e$11930$xgWN3)))
                                   g$maps$11928$xgWN3
                                   g$e$11927$xgWN3))))))
                          g$ls/false$11923$xgWN3)
                        (g$syntax-violation$10167$xgWN3
                          '#f
                          '"invalid syntax"
                          g$t$11922$xgWN3))))
                   (g$syntax-dispatch$10049$xgWN3 g$t$11922$xgWN3 '(_ any)))))
               g$e$11919$xgWN3))))))))
   (g$core-macro-transformer$10056$xgWN3
     g$core-macro-transformer$13597$xgWN3
     (case-lambda
       ((g$name$12075$xgWN3)
        ((case-lambda
           ((g$t$12076$xgWN3)
            (if (g$memv$6078$xgWN3 g$t$12076$xgWN3 '(quote))
              g$quote-transformer$10009$xgWN3
              (if (g$memv$6078$xgWN3 g$t$12076$xgWN3 '(lambda))
                g$lambda-transformer$10011$xgWN3
                (if (g$memv$6078$xgWN3 g$t$12076$xgWN3 '(case-lambda))
                  g$case-lambda-transformer$10010$xgWN3
                  (if (g$memv$6078$xgWN3 g$t$12076$xgWN3 '(letrec))
                    g$letrec-transformer$9999$xgWN3
                    (if (g$memv$6078$xgWN3 g$t$12076$xgWN3 '(letrec*))
                      g$letrec*-transformer$10000$xgWN3
                      (if (g$memv$6078$xgWN3 g$t$12076$xgWN3 '(if))
                        g$if-transformer$10007$xgWN3
                        (if (g$memv$6078$xgWN3 g$t$12076$xgWN3 '(foreign-call))
                          g$foreign-call-transformer$10047$xgWN3
                          (if (g$memv$6078$xgWN3 g$t$12076$xgWN3 '(syntax-case))
                            g$syntax-case-transformer$10053$xgWN3
                            (if (g$memv$6078$xgWN3 g$t$12076$xgWN3 '(syntax))
                              g$syntax-transformer$10055$xgWN3
                              (if (g$memv$6078$xgWN3
                                    g$t$12076$xgWN3
                                    '(type-descriptor))
                                g$type-descriptor-transformer$10002$xgWN3
                                (if (g$memv$6078$xgWN3
                                      g$t$12076$xgWN3
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$10003$xgWN3
                                  (if (g$memv$6078$xgWN3
                                        g$t$12076$xgWN3
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$10004$xgWN3
                                    (if (g$memv$6078$xgWN3
                                          g$t$12076$xgWN3
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$10001$xgWN3
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$12075$xgWN3))))))))))))))))
         g$name$12075$xgWN3))))
   (g$file-options-macro$10057$xgWN3
     g$file-options-macro$13598$xgWN3
     (case-lambda
       ((g$x$12077$xgWN3)
        (letrec* ((g$valid-option?$12078$xgWN3
                    (case-lambda
                      ((g$x$12083$xgWN3)
                       (if (g$id?$9686$xgWN3 g$x$12083$xgWN3)
                         (begin
                           '#f
                           (g$memq$6077$xgWN3
                             (g$id->sym$9687$xgWN3 g$x$12083$xgWN3)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$12079$xgWN3)
              ((case-lambda
                 ((g$ls/false$12080$xgWN3)
                  (if (if g$ls/false$12080$xgWN3
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$12081$xgWN3)
                               (if (g$for-all$6083$xgWN3
                                     g$valid-option?$12078$xgWN3
                                     g$opt*$12081$xgWN3)
                                 (begin
                                   '#f
                                   (g$file-options-spec$8912$xgWN3
                                     (g$map$6085$xgWN3
                                       g$id->sym$9687$xgWN3
                                       g$opt*$12081$xgWN3)))
                                 '#f)))
                            g$ls/false$12080$xgWN3))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$12082$xgWN3)
                         (g$bless$10012$xgWN3
                           (list
                             'quote
                             (g$file-options-spec$8912$xgWN3
                               (g$map$6085$xgWN3
                                 g$id->sym$9687$xgWN3
                                 g$opt*$12082$xgWN3))))))
                      g$ls/false$12080$xgWN3)
                    (g$syntax-violation$10167$xgWN3
                      '#f
                      '"invalid syntax"
                      g$t$12079$xgWN3))))
               (g$syntax-dispatch$10049$xgWN3
                 g$t$12079$xgWN3
                 '(_ . each-any)))))
           g$x$12077$xgWN3)))))
   (g$symbol-macro$10058$xgWN3
     g$symbol-macro$13599$xgWN3
     (case-lambda
       ((g$x$12084$xgWN3 g$set$12085$xgWN3)
        ((case-lambda
           ((g$t$12086$xgWN3)
            ((case-lambda
               ((g$ls/false$12087$xgWN3)
                (if (if g$ls/false$12087$xgWN3
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$12088$xgWN3)
                             (if (g$id?$9686$xgWN3 g$name$12088$xgWN3)
                               (begin
                                 '#f
                                 (g$memq$6077$xgWN3
                                   (g$id->sym$9687$xgWN3 g$name$12088$xgWN3)
                                   g$set$12085$xgWN3))
                               '#f)))
                          g$ls/false$12087$xgWN3))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$12089$xgWN3)
                       (g$bless$10012$xgWN3 (list 'quote g$name$12089$xgWN3))))
                    g$ls/false$12087$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$12086$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$12086$xgWN3 '(_ any)))))
         g$x$12084$xgWN3))))
   (g$macro-transformer$10059$xgWN3
     g$macro-transformer$13600$xgWN3
     (case-lambda
       ((g$x$12090$xgWN3)
        (if (g$procedure?$6758$xgWN3 g$x$12090$xgWN3)
          g$x$12090$xgWN3
          (if (g$symbol?$6756$xgWN3 g$x$12090$xgWN3)
            ((case-lambda
               ((g$t$12091$xgWN3)
                (if (g$memv$6078$xgWN3 g$t$12091$xgWN3 '(define-record-type))
                  g$define-record-type-macro$10043$xgWN3
                  (if (g$memv$6078$xgWN3 g$t$12091$xgWN3 '(define-struct))
                    g$define-struct-macro$10042$xgWN3
                    (if (g$memv$6078$xgWN3 g$t$12091$xgWN3 '(include))
                      g$include-macro$10037$xgWN3
                      (if (g$memv$6078$xgWN3 g$t$12091$xgWN3 '(cond))
                        g$cond-macro$10035$xgWN3
                        (if (g$memv$6078$xgWN3 g$t$12091$xgWN3 '(let))
                          g$let-macro$10015$xgWN3
                          (if (g$memv$6078$xgWN3 g$t$12091$xgWN3 '(do))
                            g$do-macro$10031$xgWN3
                            (if (g$memv$6078$xgWN3 g$t$12091$xgWN3 '(or))
                              g$or-macro$10033$xgWN3
                              (if (g$memv$6078$xgWN3 g$t$12091$xgWN3 '(and))
                                g$and-macro$10034$xgWN3
                                (if (g$memv$6078$xgWN3 g$t$12091$xgWN3 '(let*))
                                  g$let*-macro$10032$xgWN3
                                  (if (g$memv$6078$xgWN3
                                        g$t$12091$xgWN3
                                        '(let-values))
                                    g$let-values-macro$10016$xgWN3
                                    (if (g$memv$6078$xgWN3
                                          g$t$12091$xgWN3
                                          '(let*-values))
                                      g$let*-values-macro$10017$xgWN3
                                      (if (g$memv$6078$xgWN3
                                            g$t$12091$xgWN3
                                            '(syntax-rules))
                                        g$syntax-rules-macro$10039$xgWN3
                                        (if (g$memv$6078$xgWN3
                                              g$t$12091$xgWN3
                                              '(quasiquote))
                                          g$quasiquote-macro$10040$xgWN3
                                          (if (g$memv$6078$xgWN3
                                                g$t$12091$xgWN3
                                                '(quasisyntax))
                                            g$quasisyntax-macro$10041$xgWN3
                                            (if (g$memv$6078$xgWN3
                                                  g$t$12091$xgWN3
                                                  '(with-syntax))
                                              g$with-syntax-macro$10013$xgWN3
                                              (if (g$memv$6078$xgWN3
                                                    g$t$12091$xgWN3
                                                    '(when))
                                                g$when-macro$10005$xgWN3
                                                (if (g$memv$6078$xgWN3
                                                      g$t$12091$xgWN3
                                                      '(unless))
                                                  g$unless-macro$10006$xgWN3
                                                  (if (g$memv$6078$xgWN3
                                                        g$t$12091$xgWN3
                                                        '(case))
                                                    g$case-macro$10008$xgWN3
                                                    (if (g$memv$6078$xgWN3
                                                          g$t$12091$xgWN3
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$10030$xgWN3
                                                      (if (g$memv$6078$xgWN3
                                                            g$t$12091$xgWN3
                                                            '(time))
                                                        g$time-macro$10026$xgWN3
                                                        (if (g$memv$6078$xgWN3
                                                              g$t$12091$xgWN3
                                                              '(delay))
                                                          g$delay-macro$10027$xgWN3
                                                          (if (g$memv$6078$xgWN3
                                                                g$t$12091$xgWN3
                                                                '(assert))
                                                            g$assert-macro$10028$xgWN3
                                                            (if (g$memv$6078$xgWN3
                                                                  g$t$12091$xgWN3
                                                                  '(endianness))
                                                              g$endianness-macro$10029$xgWN3
                                                              (if (g$memv$6078$xgWN3
                                                                    g$t$12091$xgWN3
                                                                    '(guard))
                                                                g$guard-macro$10024$xgWN3
                                                                (if (g$memv$6078$xgWN3
                                                                      g$t$12091$xgWN3
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$10025$xgWN3
                                                                  (if (g$memv$6078$xgWN3
                                                                        g$t$12091$xgWN3
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$10018$xgWN3
                                                                    (if (g$memv$6078$xgWN3
                                                                          g$t$12091$xgWN3
                                                                          '(trace-define))
                                                                      g$trace-define-macro$10019$xgWN3
                                                                      (if (g$memv$6078$xgWN3
                                                                            g$t$12091$xgWN3
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$10020$xgWN3
                                                                        (if (g$memv$6078$xgWN3
                                                                              g$t$12091$xgWN3
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$10022$xgWN3
                                                                          (if (g$memv$6078$xgWN3
                                                                                g$t$12091$xgWN3
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$10023$xgWN3
                                                                            (if (g$memv$6078$xgWN3
                                                                                  g$t$12091$xgWN3
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$10044$xgWN3
                                                                              (if (g$memv$6078$xgWN3
                                                                                    g$t$12091$xgWN3
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$10046$xgWN3
                                                                                (if (g$memv$6078$xgWN3
                                                                                      g$t$12091$xgWN3
                                                                                      '(include-into))
                                                                                  g$include-into-macro$10038$xgWN3
                                                                                  (if (g$memv$6078$xgWN3
                                                                                        g$t$12091$xgWN3
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$12092$xgWN3)
                                                                                       (g$symbol-macro$10058$xgWN3
                                                                                         g$x$12092$xgWN3
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$6078$xgWN3
                                                                                          g$t$12091$xgWN3
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$12093$xgWN3)
                                                                                         (g$symbol-macro$10058$xgWN3
                                                                                           g$x$12093$xgWN3
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$6078$xgWN3
                                                                                            g$t$12091$xgWN3
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$12094$xgWN3)
                                                                                           (g$symbol-macro$10058$xgWN3
                                                                                             g$x$12094$xgWN3
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$6078$xgWN3
                                                                                              g$t$12091$xgWN3
                                                                                              '(file-options))
                                                                                          g$file-options-macro$10057$xgWN3
                                                                                          (if (g$memv$6078$xgWN3
                                                                                                g$t$12091$xgWN3
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$10045$xgWN3
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$12090$xgWN3)))))))))))))))))))))))))))))))))))))))))
             g$x$12090$xgWN3)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$12090$xgWN3))))))
   (g$local-macro-transformer$10060$xgWN3
     g$local-macro-transformer$13601$xgWN3
     (case-lambda ((g$x$12095$xgWN3) (car g$x$12095$xgWN3))))
   (g$do-macro-call$10061$xgWN3
     g$do-macro-call$13602$xgWN3
     (case-lambda
       ((g$transformer$12096$xgWN3 g$expr$12097$xgWN3 g$r$12098$xgWN3)
        (letrec* ((g$return$12099$xgWN3
                    (case-lambda
                      ((g$x$12107$xgWN3)
                       (begin
                         ((letrec ((g$f$12108$xgWN3
                                     (case-lambda
                                       ((g$x$12109$xgWN3)
                                        (if (not (g$stx?$9658$xgWN3
                                                   g$x$12109$xgWN3))
                                          (if (pair? g$x$12109$xgWN3)
                                            (begin
                                              (g$f$12108$xgWN3
                                                (car g$x$12109$xgWN3))
                                              (g$f$12108$xgWN3
                                                (cdr g$x$12109$xgWN3)))
                                            (if (g$vector?$6754$xgWN3
                                                  g$x$12109$xgWN3)
                                              (g$vector-for-each$6817$xgWN3
                                                g$f$12108$xgWN3
                                                g$x$12109$xgWN3)
                                              (if (g$symbol?$6756$xgWN3
                                                    g$x$12109$xgWN3)
                                                (g$syntax-violation$10167$xgWN3
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$12097$xgWN3
                                                  g$x$12109$xgWN3)
                                                (void))))
                                          (void))))))
                            g$f$12108$xgWN3)
                          g$x$12107$xgWN3)
                         (g$add-mark$9675$xgWN3
                           (g$gen-mark$9670$xgWN3)
                           g$x$12107$xgWN3
                           g$expr$12097$xgWN3))))))
          ((case-lambda
             ((g$x$12100$xgWN3)
              (if (g$procedure?$6758$xgWN3 g$x$12100$xgWN3)
                (g$return$12099$xgWN3
                  (g$x$12100$xgWN3
                    (case-lambda
                      ((g$id$12101$xgWN3)
                       (begin
                         (if (not (g$id?$9686$xgWN3 g$id$12101$xgWN3))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$12101$xgWN3)
                           (void))
                         ((case-lambda
                            ((g$label$12102$xgWN3)
                             ((case-lambda
                                ((g$binding$12103$xgWN3)
                                 ((case-lambda
                                    ((g$t$12104$xgWN3)
                                     (if (g$memv$6078$xgWN3
                                           g$t$12104$xgWN3
                                           '(local-ctv))
                                       (g$cadr$6765$xgWN3 g$binding$12103$xgWN3)
                                       (if (g$memv$6078$xgWN3
                                             g$t$12104$xgWN3
                                             '(global-ctv))
                                         ((case-lambda
                                            ((g$lib$12105$xgWN3
                                               g$loc$12106$xgWN3)
                                             (begin
                                               (g$visit-library$9426$xgWN3
                                                 g$lib$12105$xgWN3)
                                               (symbol-value
                                                 g$loc$12106$xgWN3))))
                                          (g$cadr$6765$xgWN3
                                            g$binding$12103$xgWN3)
                                          (g$cddr$6767$xgWN3
                                            g$binding$12103$xgWN3))
                                         '#f))))
                                  (car g$binding$12103$xgWN3))))
                              (g$label->binding$9701$xgWN3
                                g$label$12102$xgWN3
                                g$r$12098$xgWN3))))
                          (g$id->label$9699$xgWN3 g$id$12101$xgWN3)))))))
                (g$return$12099$xgWN3 g$x$12100$xgWN3))))
           (g$transformer$12096$xgWN3
             (g$add-mark$9675$xgWN3
               g$anti-mark$9671$xgWN3
               g$expr$12097$xgWN3
               '#f)))))))
   (g$chi-macro$10062$xgWN3
     g$chi-macro$13603$xgWN3
     (case-lambda
       ((g$p$12110$xgWN3 g$e$12111$xgWN3 g$r$12112$xgWN3)
        (g$do-macro-call$10061$xgWN3
          (g$macro-transformer$10059$xgWN3 g$p$12110$xgWN3)
          g$e$12111$xgWN3
          g$r$12112$xgWN3))))
   (g$chi-local-macro$10063$xgWN3
     g$chi-local-macro$13604$xgWN3
     (case-lambda
       ((g$p$12113$xgWN3 g$e$12114$xgWN3 g$r$12115$xgWN3)
        (g$do-macro-call$10061$xgWN3
          (g$local-macro-transformer$10060$xgWN3 g$p$12113$xgWN3)
          g$e$12114$xgWN3
          g$r$12115$xgWN3))))
   (g$chi-global-macro$10064$xgWN3
     g$chi-global-macro$13605$xgWN3
     (case-lambda
       ((g$p$12116$xgWN3 g$e$12117$xgWN3 g$r$12118$xgWN3)
        ((case-lambda
           ((g$lib$12119$xgWN3 g$loc$12120$xgWN3)
            (begin
              (g$visit-library$9426$xgWN3 g$lib$12119$xgWN3)
              ((case-lambda
                 ((g$x$12121$xgWN3)
                  ((case-lambda
                     ((g$transformer$12122$xgWN3)
                      (g$do-macro-call$10061$xgWN3
                        g$transformer$12122$xgWN3
                        g$e$12117$xgWN3
                        g$r$12118$xgWN3)))
                   (if (g$procedure?$6758$xgWN3 g$x$12121$xgWN3)
                     g$x$12121$xgWN3
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$12121$xgWN3)))))
               (symbol-value g$loc$12120$xgWN3)))))
         (car g$p$12116$xgWN3)
         (cdr g$p$12116$xgWN3)))))
   (g$chi-expr*$10065$xgWN3
     g$chi-expr*$13606$xgWN3
     (case-lambda
       ((g$e*$12123$xgWN3 g$r$12124$xgWN3 g$mr$12125$xgWN3)
        (if (null? g$e*$12123$xgWN3)
          '()
          ((case-lambda
             ((g$e$12126$xgWN3)
              (cons
                g$e$12126$xgWN3
                (g$chi-expr*$10065$xgWN3
                  (cdr g$e*$12123$xgWN3)
                  g$r$12124$xgWN3
                  g$mr$12125$xgWN3))))
           (g$chi-expr$10067$xgWN3
             (car g$e*$12123$xgWN3)
             g$r$12124$xgWN3
             g$mr$12125$xgWN3))))))
   (g$chi-application$10066$xgWN3
     g$chi-application$13607$xgWN3
     (case-lambda
       ((g$e$12127$xgWN3 g$r$12128$xgWN3 g$mr$12129$xgWN3)
        ((case-lambda
           ((g$t$12130$xgWN3)
            ((case-lambda
               ((g$ls/false$12131$xgWN3)
                (if g$ls/false$12131$xgWN3
                  (apply
                    (case-lambda
                      ((g$rator$12132$xgWN3 g$rands$12133$xgWN3)
                       ((case-lambda
                          ((g$rator$12134$xgWN3)
                           (cons
                             g$rator$12134$xgWN3
                             (g$chi-expr*$10065$xgWN3
                               g$rands$12133$xgWN3
                               g$r$12128$xgWN3
                               g$mr$12129$xgWN3))))
                        (g$chi-expr$10067$xgWN3
                          g$rator$12132$xgWN3
                          g$r$12128$xgWN3
                          g$mr$12129$xgWN3))))
                    g$ls/false$12131$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$12130$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$12130$xgWN3
               '(any . each-any)))))
         g$e$12127$xgWN3))))
   (g$chi-expr$10067$xgWN3
     g$chi-expr$13608$xgWN3
     (case-lambda
       ((g$e$12135$xgWN3 g$r$12136$xgWN3 g$mr$12137$xgWN3)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$9706$xgWN3 g$e$12135$xgWN3 g$r$12136$xgWN3)))
          (case-lambda
            ((g$type$12141$xgWN3 g$value$12142$xgWN3 g$kwd$12143$xgWN3)
             ((case-lambda
                ((g$kwd$12144$xgWN3 g$value$12145$xgWN3 g$type$12146$xgWN3)
                 ((case-lambda
                    ((g$t$12147$xgWN3)
                     (if (g$memv$6078$xgWN3 g$t$12147$xgWN3 '(core-macro))
                       ((case-lambda
                          ((g$transformer$12148$xgWN3)
                           (g$transformer$12148$xgWN3
                             g$e$12135$xgWN3
                             g$r$12136$xgWN3
                             g$mr$12137$xgWN3)))
                        (g$core-macro-transformer$10056$xgWN3
                          g$value$12145$xgWN3))
                       (if (g$memv$6078$xgWN3 g$t$12147$xgWN3 '(global))
                         ((case-lambda
                            ((g$lib$12149$xgWN3)
                             ((case-lambda
                                ((g$loc$12150$xgWN3)
                                 (begin
                                   ((g$inv-collector$10103$xgWN3)
                                    g$lib$12149$xgWN3)
                                   g$loc$12150$xgWN3)))
                              (cdr g$value$12145$xgWN3))))
                          (car g$value$12145$xgWN3))
                         (if (g$memv$6078$xgWN3 g$t$12147$xgWN3 '(core-prim))
                           ((case-lambda
                              ((g$name$12151$xgWN3)
                               (list 'primitive g$name$12151$xgWN3)))
                            g$value$12145$xgWN3)
                           (if (g$memv$6078$xgWN3 g$t$12147$xgWN3 '(call))
                             (g$chi-application$10066$xgWN3
                               g$e$12135$xgWN3
                               g$r$12136$xgWN3
                               g$mr$12137$xgWN3)
                             (if (g$memv$6078$xgWN3 g$t$12147$xgWN3 '(lexical))
                               ((case-lambda
                                  ((g$lex$12152$xgWN3) g$lex$12152$xgWN3))
                                (g$lexical-var$9993$xgWN3 g$value$12145$xgWN3))
                               (if (g$memv$6078$xgWN3
                                     g$t$12147$xgWN3
                                     '(global-macro global-macro!))
                                 (g$chi-expr$10067$xgWN3
                                   (g$chi-global-macro$10064$xgWN3
                                     g$value$12145$xgWN3
                                     g$e$12135$xgWN3
                                     g$r$12136$xgWN3)
                                   g$r$12136$xgWN3
                                   g$mr$12137$xgWN3)
                                 (if (g$memv$6078$xgWN3
                                       g$t$12147$xgWN3
                                       '(local-macro local-macro!))
                                   (g$chi-expr$10067$xgWN3
                                     (g$chi-local-macro$10063$xgWN3
                                       g$value$12145$xgWN3
                                       g$e$12135$xgWN3
                                       g$r$12136$xgWN3)
                                     g$r$12136$xgWN3
                                     g$mr$12137$xgWN3)
                                   (if (g$memv$6078$xgWN3
                                         g$t$12147$xgWN3
                                         '(macro macro!))
                                     (g$chi-expr$10067$xgWN3
                                       (g$chi-macro$10062$xgWN3
                                         g$value$12145$xgWN3
                                         g$e$12135$xgWN3
                                         g$r$12136$xgWN3)
                                       g$r$12136$xgWN3
                                       g$mr$12137$xgWN3)
                                     (if (g$memv$6078$xgWN3
                                           g$t$12147$xgWN3
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$12153$xgWN3)
                                           (list 'quote g$datum$12153$xgWN3)))
                                        g$value$12145$xgWN3)
                                       (if (g$memv$6078$xgWN3
                                             g$t$12147$xgWN3
                                             '(set!))
                                         (g$chi-set!$10068$xgWN3
                                           g$e$12135$xgWN3
                                           g$r$12136$xgWN3
                                           g$mr$12137$xgWN3)
                                         (if (g$memv$6078$xgWN3
                                               g$t$12147$xgWN3
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$12154$xgWN3)
                                               ((case-lambda
                                                  ((g$ls/false$12155$xgWN3)
                                                   (if g$ls/false$12155$xgWN3
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$12156$xgWN3
                                                            g$x*$12157$xgWN3)
                                                          (g$build-sequence$9611$xgWN3
                                                            '#f
                                                            (g$chi-expr*$10065$xgWN3
                                                              (cons
                                                                g$x$12156$xgWN3
                                                                g$x*$12157$xgWN3)
                                                              g$r$12136$xgWN3
                                                              g$mr$12137$xgWN3))))
                                                       g$ls/false$12155$xgWN3)
                                                     (g$syntax-violation$10167$xgWN3
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$12154$xgWN3))))
                                                (g$syntax-dispatch$10049$xgWN3
                                                  g$t$12154$xgWN3
                                                  '(_ any . each-any)))))
                                            g$e$12135$xgWN3)
                                           (if (g$memv$6078$xgWN3
                                                 g$t$12147$xgWN3
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$12158$xgWN3)
                                                 ((case-lambda
                                                    ((g$ls/false$12159$xgWN3)
                                                     (if (if g$ls/false$12159$xgWN3
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$12160$xgWN3
                                                                    g$xrhs*$12161$xgWN3
                                                                    g$xbody$12162$xgWN3
                                                                    g$xbody*$12163$xgWN3)
                                                                  (if (not (g$valid-bound-ids?$9691$xgWN3
                                                                             g$xlhs*$12160$xgWN3))
                                                                    (g$syntax-violation$10167$xgWN3
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$12135$xgWN3)
                                                                    (void))))
                                                               g$ls/false$12159$xgWN3))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$12164$xgWN3
                                                              g$xrhs*$12165$xgWN3
                                                              g$xbody$12166$xgWN3
                                                              g$xbody*$12167$xgWN3)
                                                            ((case-lambda
                                                               ((g$xlab*$12168$xgWN3)
                                                                ((case-lambda
                                                                   ((g$xrib$12169$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$xb*$12170$xgWN3)
                                                                        (g$build-sequence$9611$xgWN3
                                                                          '#f
                                                                          (g$chi-expr*$10065$xgWN3
                                                                            (g$map$6085$xgWN3
                                                                              (case-lambda
                                                                                ((g$x$12171$xgWN3)
                                                                                 (g$add-subst$9676$xgWN3
                                                                                   g$xrib$12169$xgWN3
                                                                                   g$x$12171$xgWN3)))
                                                                              (cons
                                                                                g$xbody$12166$xgWN3
                                                                                g$xbody*$12167$xgWN3))
                                                                            (append
                                                                              (g$map$6085$xgWN3
                                                                                cons
                                                                                g$xlab*$12168$xgWN3
                                                                                g$xb*$12170$xgWN3)
                                                                              g$r$12136$xgWN3)
                                                                            (append
                                                                              (g$map$6085$xgWN3
                                                                                cons
                                                                                g$xlab*$12168$xgWN3
                                                                                g$xb*$12170$xgWN3)
                                                                              g$mr$12137$xgWN3)))))
                                                                     (g$map$6085$xgWN3
                                                                       (case-lambda
                                                                         ((g$x$12172$xgWN3)
                                                                          (g$make-eval-transformer$9728$xgWN3
                                                                            (g$expand-transformer$10096$xgWN3
                                                                              (if (eq? g$type$12146$xgWN3
                                                                                       'let-syntax)
                                                                                g$x$12172$xgWN3
                                                                                (g$add-subst$9676$xgWN3
                                                                                  g$xrib$12169$xgWN3
                                                                                  g$x$12172$xgWN3))
                                                                              g$mr$12137$xgWN3))))
                                                                       g$xrhs*$12165$xgWN3))))
                                                                 (g$make-full-rib$9652$xgWN3
                                                                   g$xlhs*$12164$xgWN3
                                                                   g$xlab*$12168$xgWN3))))
                                                             (g$map$6085$xgWN3
                                                               g$gen-label$9623$xgWN3
                                                               g$xlhs*$12164$xgWN3))))
                                                         g$ls/false$12159$xgWN3)
                                                       (g$syntax-violation$10167$xgWN3
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$12158$xgWN3))))
                                                  (g$syntax-dispatch$10049$xgWN3
                                                    g$t$12158$xgWN3
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$12135$xgWN3)
                                             (if (g$memv$6078$xgWN3
                                                   g$t$12147$xgWN3
                                                   '(displaced-lexical))
                                               (g$syntax-violation$10167$xgWN3
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$12135$xgWN3)
                                               (if (g$memv$6078$xgWN3
                                                     g$t$12147$xgWN3
                                                     '(syntax))
                                                 (g$syntax-violation$10167$xgWN3
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$12135$xgWN3)
                                                 (if (g$memv$6078$xgWN3
                                                       g$t$12147$xgWN3
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$10167$xgWN3
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$12173$xgWN3)
                                                           (if (g$memv$6078$xgWN3
                                                                 g$t$12173$xgWN3
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$6078$xgWN3
                                                                   g$t$12173$xgWN3
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$6078$xgWN3
                                                                     g$t$12173$xgWN3
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$6078$xgWN3
                                                                       g$t$12173$xgWN3
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$6078$xgWN3
                                                                         g$t$12173$xgWN3
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$6078$xgWN3
                                                                           g$t$12173$xgWN3
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$12146$xgWN3)
                                                       '" was found where an expression was expected")
                                                     g$e$12135$xgWN3)
                                                   (if (g$memv$6078$xgWN3
                                                         g$t$12147$xgWN3
                                                         '(mutable))
                                                     (g$syntax-violation$10167$xgWN3
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$12135$xgWN3)
                                                     (g$syntax-violation$10167$xgWN3
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$12135$xgWN3)))))))))))))))))))
                  g$type$12146$xgWN3)))
              g$kwd$12143$xgWN3
              g$value$12142$xgWN3
              g$type$12141$xgWN3)))))))
   (g$chi-set!$10068$xgWN3
     g$chi-set!$13609$xgWN3
     (case-lambda
       ((g$e$12174$xgWN3 g$r$12175$xgWN3 g$mr$12176$xgWN3)
        ((case-lambda
           ((g$t$12177$xgWN3)
            ((case-lambda
               ((g$ls/false$12178$xgWN3)
                (if (if g$ls/false$12178$xgWN3
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$12179$xgWN3 g$v$12180$xgWN3)
                             (g$id?$9686$xgWN3 g$x$12179$xgWN3)))
                          g$ls/false$12178$xgWN3))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$12181$xgWN3 g$v$12182$xgWN3)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$9706$xgWN3
                              g$x$12181$xgWN3
                              g$r$12175$xgWN3)))
                         (case-lambda
                           ((g$type$12186$xgWN3
                              g$value$12187$xgWN3
                              g$kwd$12188$xgWN3)
                            ((case-lambda
                               ((g$kwd$12189$xgWN3
                                  g$value$12190$xgWN3
                                  g$type$12191$xgWN3)
                                ((case-lambda
                                   ((g$t$12192$xgWN3)
                                    (if (g$memv$6078$xgWN3
                                          g$t$12192$xgWN3
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$9995$xgWN3
                                          g$value$12190$xgWN3
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$9993$xgWN3
                                            g$value$12190$xgWN3)
                                          (g$chi-expr$10067$xgWN3
                                            g$v$12182$xgWN3
                                            g$r$12175$xgWN3
                                            g$mr$12176$xgWN3)))
                                      (if (g$memv$6078$xgWN3
                                            g$t$12192$xgWN3
                                            '(core-prim))
                                        (g$syntax-violation$10167$xgWN3
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$12174$xgWN3)
                                        (if (g$memv$6078$xgWN3
                                              g$t$12192$xgWN3
                                              '(global))
                                          (g$syntax-violation$10167$xgWN3
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$12174$xgWN3)
                                          (if (g$memv$6078$xgWN3
                                                g$t$12192$xgWN3
                                                '(global-macro!))
                                            (g$chi-expr$10067$xgWN3
                                              (g$chi-global-macro$10064$xgWN3
                                                g$value$12190$xgWN3
                                                g$e$12174$xgWN3
                                                g$r$12175$xgWN3)
                                              g$r$12175$xgWN3
                                              g$mr$12176$xgWN3)
                                            (if (g$memv$6078$xgWN3
                                                  g$t$12192$xgWN3
                                                  '(local-macro!))
                                              (g$chi-expr$10067$xgWN3
                                                (g$chi-local-macro$10063$xgWN3
                                                  g$value$12190$xgWN3
                                                  g$e$12174$xgWN3
                                                  g$r$12175$xgWN3)
                                                g$r$12175$xgWN3
                                                g$mr$12176$xgWN3)
                                              (if (g$memv$6078$xgWN3
                                                    g$t$12192$xgWN3
                                                    '(mutable))
                                                (g$syntax-violation$10167$xgWN3
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$12174$xgWN3)
                                                (g$syntax-violation$10167$xgWN3
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$12174$xgWN3)))))))))
                                 g$type$12191$xgWN3)))
                             g$kwd$12188$xgWN3
                             g$value$12187$xgWN3
                             g$type$12186$xgWN3))))))
                    g$ls/false$12178$xgWN3)
                  (g$syntax-violation$10167$xgWN3
                    '#f
                    '"invalid syntax"
                    g$t$12177$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$12177$xgWN3 '(_ any any)))))
         g$e$12174$xgWN3))))
   (g$verify-formals$10069$xgWN3
     g$verify-formals$13610$xgWN3
     (case-lambda
       ((g$fmls$12193$xgWN3 g$stx$12194$xgWN3)
        ((case-lambda
           ((g$t$12195$xgWN3)
            ((case-lambda
               ((g$ls/false$12196$xgWN3)
                (if g$ls/false$12196$xgWN3
                  (apply
                    (case-lambda
                      ((g$x*$12197$xgWN3)
                       (if (not (g$valid-bound-ids?$9691$xgWN3
                                  g$x*$12197$xgWN3))
                         (g$invalid-fmls-error$10014$xgWN3
                           g$stx$12194$xgWN3
                           g$fmls$12193$xgWN3)
                         (void))))
                    g$ls/false$12196$xgWN3)
                  ((case-lambda
                     ((g$t$12198$xgWN3)
                      ((case-lambda
                         ((g$ls/false$12199$xgWN3)
                          (if g$ls/false$12199$xgWN3
                            (apply
                              (case-lambda
                                ((g$x*$12200$xgWN3 g$x$12201$xgWN3)
                                 (if (not (g$valid-bound-ids?$9691$xgWN3
                                            (cons
                                              g$x$12201$xgWN3
                                              g$x*$12200$xgWN3)))
                                   (g$invalid-fmls-error$10014$xgWN3
                                     g$stx$12194$xgWN3
                                     g$fmls$12193$xgWN3)
                                   (void))))
                              g$ls/false$12199$xgWN3)
                            ((case-lambda
                               ((g$t$12202$xgWN3)
                                ((case-lambda
                                   ((g$ls/false$12203$xgWN3)
                                    (if g$ls/false$12203$xgWN3
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$10167$xgWN3
                                             '#f
                                             '"invalid syntax"
                                             g$stx$12194$xgWN3)))
                                        g$ls/false$12203$xgWN3)
                                      (g$syntax-violation$10167$xgWN3
                                        '#f
                                        '"invalid syntax"
                                        g$t$12202$xgWN3))))
                                 (g$syntax-dispatch$10049$xgWN3
                                   g$t$12202$xgWN3
                                   '_))))
                             g$t$12198$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$12198$xgWN3
                         '#(each+ any () any)))))
                   g$t$12195$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$12195$xgWN3 'each-any))))
         g$fmls$12193$xgWN3))))
   (g$chi-lambda-clause$10070$xgWN3
     g$chi-lambda-clause$13611$xgWN3
     (case-lambda
       ((g$stx$12204$xgWN3
          g$fmls$12205$xgWN3
          g$body*$12206$xgWN3
          g$r$12207$xgWN3
          g$mr$12208$xgWN3)
        ((case-lambda
           ((g$t$12209$xgWN3)
            ((case-lambda
               ((g$ls/false$12210$xgWN3)
                (if g$ls/false$12210$xgWN3
                  (apply
                    (case-lambda
                      ((g$x*$12211$xgWN3)
                       (begin
                         (g$verify-formals$10069$xgWN3
                           g$fmls$12205$xgWN3
                           g$stx$12204$xgWN3)
                         ((case-lambda
                            ((g$lex*$12212$xgWN3 g$lab*$12213$xgWN3)
                             (values
                               g$lex*$12212$xgWN3
                               (g$chi-internal$10078$xgWN3
                                 (g$add-subst$9676$xgWN3
                                   (g$make-full-rib$9652$xgWN3
                                     g$x*$12211$xgWN3
                                     g$lab*$12213$xgWN3)
                                   g$body*$12206$xgWN3)
                                 (g$add-lexicals$9997$xgWN3
                                   g$lab*$12213$xgWN3
                                   g$lex*$12212$xgWN3
                                   g$r$12207$xgWN3)
                                 g$mr$12208$xgWN3))))
                          (g$map$6085$xgWN3
                            g$gen-lexical$9621$xgWN3
                            g$x*$12211$xgWN3)
                          (g$map$6085$xgWN3
                            g$gen-label$9623$xgWN3
                            g$x*$12211$xgWN3)))))
                    g$ls/false$12210$xgWN3)
                  ((case-lambda
                     ((g$t$12214$xgWN3)
                      ((case-lambda
                         ((g$ls/false$12215$xgWN3)
                          (if g$ls/false$12215$xgWN3
                            (apply
                              (case-lambda
                                ((g$x*$12216$xgWN3 g$x$12217$xgWN3)
                                 (begin
                                   (g$verify-formals$10069$xgWN3
                                     g$fmls$12205$xgWN3
                                     g$stx$12204$xgWN3)
                                   ((case-lambda
                                      ((g$lex*$12218$xgWN3
                                         g$lab*$12219$xgWN3
                                         g$lex$12220$xgWN3
                                         g$lab$12221$xgWN3)
                                       (values
                                         (append
                                           g$lex*$12218$xgWN3
                                           g$lex$12220$xgWN3)
                                         (g$chi-internal$10078$xgWN3
                                           (g$add-subst$9676$xgWN3
                                             (g$make-full-rib$9652$xgWN3
                                               (cons
                                                 g$x$12217$xgWN3
                                                 g$x*$12216$xgWN3)
                                               (cons
                                                 g$lab$12221$xgWN3
                                                 g$lab*$12219$xgWN3))
                                             g$body*$12206$xgWN3)
                                           (g$add-lexicals$9997$xgWN3
                                             (cons
                                               g$lab$12221$xgWN3
                                               g$lab*$12219$xgWN3)
                                             (cons
                                               g$lex$12220$xgWN3
                                               g$lex*$12218$xgWN3)
                                             g$r$12207$xgWN3)
                                           g$mr$12208$xgWN3))))
                                    (g$map$6085$xgWN3
                                      g$gen-lexical$9621$xgWN3
                                      g$x*$12216$xgWN3)
                                    (g$map$6085$xgWN3
                                      g$gen-label$9623$xgWN3
                                      g$x*$12216$xgWN3)
                                    (g$gen-lexical$9621$xgWN3 g$x$12217$xgWN3)
                                    (g$gen-label$9623$xgWN3 g$x$12217$xgWN3)))))
                              g$ls/false$12215$xgWN3)
                            ((case-lambda
                               ((g$t$12222$xgWN3)
                                ((case-lambda
                                   ((g$ls/false$12223$xgWN3)
                                    (if g$ls/false$12223$xgWN3
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$10167$xgWN3
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$12205$xgWN3)))
                                        g$ls/false$12223$xgWN3)
                                      (g$syntax-violation$10167$xgWN3
                                        '#f
                                        '"invalid syntax"
                                        g$t$12222$xgWN3))))
                                 (g$syntax-dispatch$10049$xgWN3
                                   g$t$12222$xgWN3
                                   '_))))
                             g$t$12214$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$12214$xgWN3
                         '#(each+ any () any)))))
                   g$t$12209$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$12209$xgWN3 'each-any))))
         g$fmls$12205$xgWN3))))
   (g$chi-lambda-clause*$10071$xgWN3
     g$chi-lambda-clause*$13612$xgWN3
     (case-lambda
       ((g$stx$12224$xgWN3
          g$fmls*$12225$xgWN3
          g$body**$12226$xgWN3
          g$r$12227$xgWN3
          g$mr$12228$xgWN3)
        (if (null? g$fmls*$12225$xgWN3)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$10070$xgWN3
                 g$stx$12224$xgWN3
                 (car g$fmls*$12225$xgWN3)
                 (car g$body**$12226$xgWN3)
                 g$r$12227$xgWN3
                 g$mr$12228$xgWN3)))
            (case-lambda
              ((g$a$12231$xgWN3 g$b$12232$xgWN3)
               ((case-lambda
                  ((g$b$12233$xgWN3 g$a$12234$xgWN3)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$10071$xgWN3
                          g$stx$12224$xgWN3
                          (cdr g$fmls*$12225$xgWN3)
                          (cdr g$body**$12226$xgWN3)
                          g$r$12227$xgWN3
                          g$mr$12228$xgWN3)))
                     (case-lambda
                       ((g$a*$12237$xgWN3 g$b*$12238$xgWN3)
                        ((case-lambda
                           ((g$b*$12239$xgWN3 g$a*$12240$xgWN3)
                            (values
                              (cons g$a$12234$xgWN3 g$a*$12240$xgWN3)
                              (cons g$b$12233$xgWN3 g$b*$12239$xgWN3))))
                         g$b*$12238$xgWN3
                         g$a*$12237$xgWN3))))))
                g$b$12232$xgWN3
                g$a$12231$xgWN3))))))))
   (g$chi-defun$10072$xgWN3
     g$chi-defun$13613$xgWN3
     (case-lambda
       ((g$x$12241$xgWN3 g$r$12242$xgWN3 g$mr$12243$xgWN3)
        ((case-lambda
           ((g$fmls$12244$xgWN3 g$body*$12245$xgWN3)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$10070$xgWN3
                   g$fmls$12244$xgWN3
                   g$fmls$12244$xgWN3
                   g$body*$12245$xgWN3
                   g$r$12242$xgWN3
                   g$mr$12243$xgWN3)))
              (case-lambda
                ((g$fmls$12248$xgWN3 g$body$12249$xgWN3)
                 ((case-lambda
                    ((g$body$12250$xgWN3 g$fmls$12251$xgWN3)
                     (g$build-lambda$9608$xgWN3
                       '#f
                       g$fmls$12251$xgWN3
                       g$body$12250$xgWN3)))
                  g$body$12249$xgWN3
                  g$fmls$12248$xgWN3))))))
         (car g$x$12241$xgWN3)
         (cdr g$x$12241$xgWN3)))))
   (g$chi-rhs$10073$xgWN3
     g$chi-rhs$13614$xgWN3
     (case-lambda
       ((g$rhs$12252$xgWN3 g$r$12253$xgWN3 g$mr$12254$xgWN3)
        ((case-lambda
           ((g$t$12255$xgWN3)
            (if (g$memv$6078$xgWN3 g$t$12255$xgWN3 '(defun))
              (g$chi-defun$10072$xgWN3
                (cdr g$rhs$12252$xgWN3)
                g$r$12253$xgWN3
                g$mr$12254$xgWN3)
              (if (g$memv$6078$xgWN3 g$t$12255$xgWN3 '(expr))
                ((case-lambda
                   ((g$expr$12256$xgWN3)
                    (g$chi-expr$10067$xgWN3
                      g$expr$12256$xgWN3
                      g$r$12253$xgWN3
                      g$mr$12254$xgWN3)))
                 (cdr g$rhs$12252$xgWN3))
                (if (g$memv$6078$xgWN3 g$t$12255$xgWN3 '(top-expr))
                  ((case-lambda
                     ((g$expr$12257$xgWN3)
                      (g$build-sequence$9611$xgWN3
                        '#f
                        (list
                          (g$chi-expr$10067$xgWN3
                            g$expr$12257$xgWN3
                            g$r$12253$xgWN3
                            g$mr$12254$xgWN3)
                          (g$build-void$9612$xgWN3)))))
                   (cdr g$rhs$12252$xgWN3))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$12252$xgWN3))))))
         (car g$rhs$12252$xgWN3)))))
   (g$expand-interaction-rhs*/init*$10074$xgWN3
     g$expand-interaction-rhs*/init*$13615$xgWN3
     (case-lambda
       ((g$lhs*$12258$xgWN3
          g$rhs*$12259$xgWN3
          g$init*$12260$xgWN3
          g$r$12261$xgWN3
          g$mr$12262$xgWN3)
        ((letrec ((g$f$12263$xgWN3
                    (case-lambda
                      ((g$lhs*$12264$xgWN3 g$rhs*$12265$xgWN3)
                       (if (null? g$lhs*$12264$xgWN3)
                         (g$map$6085$xgWN3
                           (case-lambda
                             ((g$x$12266$xgWN3)
                              (g$chi-expr$10067$xgWN3
                                g$x$12266$xgWN3
                                g$r$12261$xgWN3
                                g$mr$12262$xgWN3)))
                           g$init*$12260$xgWN3)
                         ((case-lambda
                            ((g$lhs$12267$xgWN3 g$rhs$12268$xgWN3)
                             ((case-lambda
                                ((g$t$12269$xgWN3)
                                 (if (g$memv$6078$xgWN3
                                       g$t$12269$xgWN3
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$12270$xgWN3)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$12267$xgWN3
                                           g$rhs$12270$xgWN3)
                                         (g$f$12263$xgWN3
                                           (cdr g$lhs*$12264$xgWN3)
                                           (cdr g$rhs*$12265$xgWN3)))))
                                    (g$chi-defun$10072$xgWN3
                                      (cdr g$rhs$12268$xgWN3)
                                      g$r$12261$xgWN3
                                      g$mr$12262$xgWN3))
                                   (if (g$memv$6078$xgWN3
                                         g$t$12269$xgWN3
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$12271$xgWN3)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$12267$xgWN3
                                             g$rhs$12271$xgWN3)
                                           (g$f$12263$xgWN3
                                             (cdr g$lhs*$12264$xgWN3)
                                             (cdr g$rhs*$12265$xgWN3)))))
                                      (g$chi-expr$10067$xgWN3
                                        (cdr g$rhs$12268$xgWN3)
                                        g$r$12261$xgWN3
                                        g$mr$12262$xgWN3))
                                     (if (g$memv$6078$xgWN3
                                           g$t$12269$xgWN3
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$12272$xgWN3)
                                           (cons
                                             g$e$12272$xgWN3
                                             (g$f$12263$xgWN3
                                               (cdr g$lhs*$12264$xgWN3)
                                               (cdr g$rhs*$12265$xgWN3)))))
                                        (g$chi-expr$10067$xgWN3
                                          (cdr g$rhs$12268$xgWN3)
                                          g$r$12261$xgWN3
                                          g$mr$12262$xgWN3))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$12268$xgWN3))))))
                              (car g$rhs$12268$xgWN3))))
                          (car g$lhs*$12264$xgWN3)
                          (car g$rhs*$12265$xgWN3)))))))
           g$f$12263$xgWN3)
         g$lhs*$12258$xgWN3
         g$rhs*$12259$xgWN3))))
   (g$chi-rhs*$10075$xgWN3
     g$chi-rhs*$13616$xgWN3
     (case-lambda
       ((g$rhs*$12273$xgWN3 g$r$12274$xgWN3 g$mr$12275$xgWN3)
        ((letrec ((g$f$12276$xgWN3
                    (case-lambda
                      ((g$ls$12277$xgWN3)
                       (if (null? g$ls$12277$xgWN3)
                         '()
                         ((case-lambda
                            ((g$a$12278$xgWN3)
                             (cons
                               g$a$12278$xgWN3
                               (g$f$12276$xgWN3 (cdr g$ls$12277$xgWN3)))))
                          (g$chi-rhs$10073$xgWN3
                            (car g$ls$12277$xgWN3)
                            g$r$12274$xgWN3
                            g$mr$12275$xgWN3)))))))
           g$f$12276$xgWN3)
         g$rhs*$12273$xgWN3))))
   (g$find-bound=?$10076$xgWN3
     g$find-bound=?$13617$xgWN3
     (case-lambda
       ((g$x$12279$xgWN3 g$lhs*$12280$xgWN3 g$rhs*$12281$xgWN3)
        (if (null? g$lhs*$12280$xgWN3)
          '#f
          (if (g$bound-id=?$9689$xgWN3 g$x$12279$xgWN3 (car g$lhs*$12280$xgWN3))
            (car g$rhs*$12281$xgWN3)
            (g$find-bound=?$10076$xgWN3
              g$x$12279$xgWN3
              (cdr g$lhs*$12280$xgWN3)
              (cdr g$rhs*$12281$xgWN3)))))))
   (g$find-dups$10077$xgWN3
     g$find-dups$13618$xgWN3
     (case-lambda
       ((g$ls$12282$xgWN3)
        ((letrec ((g$f$12283$xgWN3
                    (case-lambda
                      ((g$ls$12284$xgWN3 g$dups$12285$xgWN3)
                       (if (null? g$ls$12284$xgWN3)
                         g$dups$12285$xgWN3
                         ((case-lambda
                            ((g$t$12286$xgWN3)
                             (if g$t$12286$xgWN3
                               ((case-lambda
                                  ((g$x$12287$xgWN3)
                                   (g$f$12283$xgWN3
                                     (cdr g$ls$12284$xgWN3)
                                     (cons
                                       (list
                                         (car g$ls$12284$xgWN3)
                                         g$x$12287$xgWN3)
                                       g$dups$12285$xgWN3))))
                                g$t$12286$xgWN3)
                               (g$f$12283$xgWN3
                                 (cdr g$ls$12284$xgWN3)
                                 g$dups$12285$xgWN3))))
                          (g$find-bound=?$10076$xgWN3
                            (car g$ls$12284$xgWN3)
                            (cdr g$ls$12284$xgWN3)
                            (cdr g$ls$12284$xgWN3))))))))
           g$f$12283$xgWN3)
         g$ls$12282$xgWN3
         '()))))
   (g$chi-internal$10078$xgWN3
     g$chi-internal$13619$xgWN3
     (case-lambda
       ((g$e*$12288$xgWN3 g$r$12289$xgWN3 g$mr$12290$xgWN3)
        ((case-lambda
           ((g$rib$12291$xgWN3)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$10095$xgWN3
                   (g$map$6085$xgWN3
                     (case-lambda
                       ((g$x$12300$xgWN3)
                        (g$add-subst$9676$xgWN3
                          g$rib$12291$xgWN3
                          g$x$12300$xgWN3)))
                     (g$syntax->list$9685$xgWN3 g$e*$12288$xgWN3))
                   g$r$12289$xgWN3
                   g$mr$12290$xgWN3
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$12291$xgWN3
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$12301$xgWN3
                   g$r$12302$xgWN3
                   g$mr$12303$xgWN3
                   g$lex*$12304$xgWN3
                   g$rhs*$12305$xgWN3
                   g$mod**$12306$xgWN3
                   g$kwd*$12307$xgWN3
                   g$_exp*$12308$xgWN3)
                 ((case-lambda
                    ((g$_exp*$12309$xgWN3
                       g$kwd*$12310$xgWN3
                       g$mod**$12311$xgWN3
                       g$rhs*$12312$xgWN3
                       g$lex*$12313$xgWN3
                       g$mr$12314$xgWN3
                       g$r$12315$xgWN3
                       g$e*$12316$xgWN3)
                     (begin
                       (if (null? g$e*$12316$xgWN3)
                         (g$syntax-violation$10167$xgWN3
                           '#f
                           '"no expression in body"
                           g$e*$12316$xgWN3)
                         (void))
                       ((case-lambda
                          ((g$init*$12317$xgWN3)
                           ((case-lambda
                              ((g$rhs*$12318$xgWN3)
                               (g$build-letrec*$9614$xgWN3
                                 '#f
                                 (g$reverse$6763$xgWN3 g$lex*$12313$xgWN3)
                                 (g$reverse$6763$xgWN3 g$rhs*$12318$xgWN3)
                                 (g$build-sequence$9611$xgWN3
                                   '#f
                                   g$init*$12317$xgWN3))))
                            (g$chi-rhs*$10075$xgWN3
                              g$rhs*$12312$xgWN3
                              g$r$12315$xgWN3
                              g$mr$12314$xgWN3))))
                        (g$chi-expr*$10065$xgWN3
                          (append
                            (apply
                              append
                              (g$reverse$6763$xgWN3 g$mod**$12311$xgWN3))
                            g$e*$12316$xgWN3)
                          g$r$12315$xgWN3
                          g$mr$12314$xgWN3)))))
                  g$_exp*$12308$xgWN3
                  g$kwd*$12307$xgWN3
                  g$mod**$12306$xgWN3
                  g$rhs*$12305$xgWN3
                  g$lex*$12304$xgWN3
                  g$mr$12303$xgWN3
                  g$r$12302$xgWN3
                  g$e*$12301$xgWN3))))))
         (g$make-empty-rib$9644$xgWN3)))))
   (g$parse-module$10079$xgWN3
     g$parse-module$13620$xgWN3
     (case-lambda
       ((g$e$12319$xgWN3)
        ((case-lambda
           ((g$t$12320$xgWN3)
            ((case-lambda
               ((g$ls/false$12321$xgWN3)
                (if g$ls/false$12321$xgWN3
                  (apply
                    (case-lambda
                      ((g$export*$12322$xgWN3 g$b*$12323$xgWN3)
                       (begin
                         (if (not (g$for-all$6083$xgWN3
                                    g$id?$9686$xgWN3
                                    g$export*$12322$xgWN3))
                           (g$syntax-violation$10167$xgWN3
                             '#f
                             '"module exports must be identifiers"
                             g$e$12319$xgWN3)
                           (void))
                         (values
                           '#f
                           (g$list->vector$6751$xgWN3 g$export*$12322$xgWN3)
                           g$b*$12323$xgWN3))))
                    g$ls/false$12321$xgWN3)
                  ((case-lambda
                     ((g$t$12324$xgWN3)
                      ((case-lambda
                         ((g$ls/false$12325$xgWN3)
                          (if g$ls/false$12325$xgWN3
                            (apply
                              (case-lambda
                                ((g$name$12326$xgWN3
                                   g$export*$12327$xgWN3
                                   g$b*$12328$xgWN3)
                                 (begin
                                   (if (not (g$id?$9686$xgWN3
                                              g$name$12326$xgWN3))
                                     (g$syntax-violation$10167$xgWN3
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$12319$xgWN3)
                                     (void))
                                   (if (not (g$for-all$6083$xgWN3
                                              g$id?$9686$xgWN3
                                              g$export*$12327$xgWN3))
                                     (g$syntax-violation$10167$xgWN3
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$12319$xgWN3)
                                     (void))
                                   (values
                                     g$name$12326$xgWN3
                                     (g$list->vector$6751$xgWN3
                                       g$export*$12327$xgWN3)
                                     g$b*$12328$xgWN3))))
                              g$ls/false$12325$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$12324$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$12324$xgWN3
                         '(_ any each-any . each-any)))))
                   g$t$12320$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$12320$xgWN3
               '(_ each-any . each-any)))))
         g$e$12319$xgWN3))))
   (g$7994$10080$xgWN3
     g$7994$13621$xgWN3
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$7997$xgWN3
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$7996$10081$xgWN3 g$7996$13622$xgWN3 '#f)
   (g$7995$10082$xgWN3
     g$7995$13623$xgWN3
     (make-record-constructor-descriptor
       g$7994$10080$xgWN3
       '#f
       g$7996$10081$xgWN3))
   (g$module-interface?$10085$xgWN3
     g$module-interface?$13624$xgWN3
     (record-predicate g$7994$10080$xgWN3))
   (g$make-module-interface$10086$xgWN3
     g$make-module-interface$13625$xgWN3
     (record-constructor g$7995$10082$xgWN3))
   (g$module-interface-first-mark$10087$xgWN3
     g$module-interface-first-mark$13626$xgWN3
     (record-accessor g$7994$10080$xgWN3 '0))
   (g$module-interface-exp-id-vec$10088$xgWN3
     g$module-interface-exp-id-vec$13627$xgWN3
     (record-accessor g$7994$10080$xgWN3 '1))
   (g$module-interface-exp-lab-vec$10089$xgWN3
     g$module-interface-exp-lab-vec$13628$xgWN3
     (record-accessor g$7994$10080$xgWN3 '2))
   (g$set-module-interface-first-mark!$10090$xgWN3
     g$set-module-interface-first-mark!$13629$xgWN3
     (record-mutator g$7994$10080$xgWN3 '0))
   (g$set-module-interface-exp-id-vec!$10091$xgWN3
     g$set-module-interface-exp-id-vec!$13630$xgWN3
     (record-mutator g$7994$10080$xgWN3 '1))
   (g$set-module-interface-exp-lab-vec!$10092$xgWN3
     g$set-module-interface-exp-lab-vec!$13631$xgWN3
     (record-mutator g$7994$10080$xgWN3 '2))
   (g$module-interface-exp-id*$10093$xgWN3
     g$module-interface-exp-id*$13632$xgWN3
     (case-lambda
       ((g$iface$12329$xgWN3 g$id$12330$xgWN3)
        (letrec* ((g$diff-marks$12331$xgWN3
                    (case-lambda
                      ((g$ls$12335$xgWN3 g$x$12336$xgWN3)
                       (begin
                         (if (null? g$ls$12335$xgWN3)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$12337$xgWN3)
                             (if (eq? g$a$12337$xgWN3 g$x$12336$xgWN3)
                               '()
                               (cons
                                 g$a$12337$xgWN3
                                 (g$diff-marks$12331$xgWN3
                                   (cdr g$ls$12335$xgWN3)
                                   g$x$12336$xgWN3)))))
                          (car g$ls$12335$xgWN3)))))))
          ((case-lambda
             ((g$diff$12332$xgWN3 g$id-vec$12333$xgWN3)
              (if (null? g$diff$12332$xgWN3)
                g$id-vec$12333$xgWN3
                (g$vector-map$6816$xgWN3
                  (case-lambda
                    ((g$x$12334$xgWN3)
                     (g$make-stx$9659$xgWN3
                       (g$stx-expr$9660$xgWN3 g$x$12334$xgWN3)
                       (append
                         g$diff$12332$xgWN3
                         (g$stx-mark*$9661$xgWN3 g$x$12334$xgWN3))
                       '()
                       '())))
                  g$id-vec$12333$xgWN3))))
           (g$diff-marks$12331$xgWN3
             (g$stx-mark*$9661$xgWN3 g$id$12330$xgWN3)
             (g$module-interface-first-mark$10087$xgWN3 g$iface$12329$xgWN3))
           (g$module-interface-exp-id-vec$10088$xgWN3 g$iface$12329$xgWN3))))))
   (g$chi-internal-module$10094$xgWN3
     g$chi-internal-module$13633$xgWN3
     (case-lambda
       ((g$e$12338$xgWN3
          g$r$12339$xgWN3
          g$mr$12340$xgWN3
          g$lex*$12341$xgWN3
          g$rhs*$12342$xgWN3
          g$mod**$12343$xgWN3
          g$kwd*$12344$xgWN3)
        (call-with-values
          (case-lambda (() (g$parse-module$10079$xgWN3 g$e$12338$xgWN3)))
          (case-lambda
            ((g$name$12348$xgWN3 g$exp-id*$12349$xgWN3 g$e*$12350$xgWN3)
             ((case-lambda
                ((g$e*$12351$xgWN3 g$exp-id*$12352$xgWN3 g$name$12353$xgWN3)
                 ((case-lambda
                    ((g$rib$12354$xgWN3)
                     ((case-lambda
                        ((g$e*$12355$xgWN3)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$10095$xgWN3
                                g$e*$12355$xgWN3
                                g$r$12339$xgWN3
                                g$mr$12340$xgWN3
                                g$lex*$12341$xgWN3
                                g$rhs*$12342$xgWN3
                                g$mod**$12343$xgWN3
                                g$kwd*$12344$xgWN3
                                '()
                                g$rib$12354$xgWN3
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$12364$xgWN3
                                g$r$12365$xgWN3
                                g$mr$12366$xgWN3
                                g$lex*$12367$xgWN3
                                g$rhs*$12368$xgWN3
                                g$mod**$12369$xgWN3
                                g$kwd*$12370$xgWN3
                                g$_exp*$12371$xgWN3)
                              ((case-lambda
                                 ((g$_exp*$12372$xgWN3
                                    g$kwd*$12373$xgWN3
                                    g$mod**$12374$xgWN3
                                    g$rhs*$12375$xgWN3
                                    g$lex*$12376$xgWN3
                                    g$mr$12377$xgWN3
                                    g$r$12378$xgWN3
                                    g$e*$12379$xgWN3)
                                  ((case-lambda
                                     ((g$exp-lab*$12380$xgWN3
                                        g$mod**$12381$xgWN3)
                                      (if (not g$name$12353$xgWN3)
                                        (values
                                          g$lex*$12376$xgWN3
                                          g$rhs*$12375$xgWN3
                                          g$exp-id*$12352$xgWN3
                                          g$exp-lab*$12380$xgWN3
                                          g$r$12378$xgWN3
                                          g$mr$12377$xgWN3
                                          g$mod**$12381$xgWN3
                                          g$kwd*$12373$xgWN3)
                                        ((case-lambda
                                           ((g$lab$12382$xgWN3
                                              g$iface$12383$xgWN3)
                                            (values
                                              g$lex*$12376$xgWN3
                                              g$rhs*$12375$xgWN3
                                              (vector g$name$12353$xgWN3)
                                              (vector g$lab$12382$xgWN3)
                                              (cons
                                                (cons
                                                  g$lab$12382$xgWN3
                                                  (cons
                                                    '$module
                                                    g$iface$12383$xgWN3))
                                                g$r$12378$xgWN3)
                                              (cons
                                                (cons
                                                  g$lab$12382$xgWN3
                                                  (cons
                                                    '$module
                                                    g$iface$12383$xgWN3))
                                                g$mr$12377$xgWN3)
                                              g$mod**$12381$xgWN3
                                              g$kwd*$12373$xgWN3)))
                                         (g$gen-label$9623$xgWN3 'module)
                                         (g$make-module-interface$10086$xgWN3
                                           (car (g$stx-mark*$9661$xgWN3
                                                  g$name$12353$xgWN3))
                                           (g$vector-map$6816$xgWN3
                                             (case-lambda
                                               ((g$x$12384$xgWN3)
                                                (g$make-stx$9659$xgWN3
                                                  (g$stx-expr$9660$xgWN3
                                                    g$x$12384$xgWN3)
                                                  (g$stx-mark*$9661$xgWN3
                                                    g$x$12384$xgWN3)
                                                  '()
                                                  '())))
                                             g$exp-id*$12352$xgWN3)
                                           g$exp-lab*$12380$xgWN3)))))
                                   (g$vector-map$6816$xgWN3
                                     (case-lambda
                                       ((g$x$12385$xgWN3)
                                        ((case-lambda
                                           ((g$t$12386$xgWN3)
                                            (if g$t$12386$xgWN3
                                              g$t$12386$xgWN3
                                              (begin
                                                '#f
                                                (g$syntax-violation$10167$xgWN3
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$12385$xgWN3)))))
                                         (g$id->label$9699$xgWN3
                                           (g$make-stx$9659$xgWN3
                                             (g$id->sym$9687$xgWN3
                                               g$x$12385$xgWN3)
                                             (g$stx-mark*$9661$xgWN3
                                               g$x$12385$xgWN3)
                                             (list g$rib$12354$xgWN3)
                                             '())))))
                                     g$exp-id*$12352$xgWN3)
                                   (cons
                                     g$e*$12379$xgWN3
                                     g$mod**$12374$xgWN3))))
                               g$_exp*$12371$xgWN3
                               g$kwd*$12370$xgWN3
                               g$mod**$12369$xgWN3
                               g$rhs*$12368$xgWN3
                               g$lex*$12367$xgWN3
                               g$mr$12366$xgWN3
                               g$r$12365$xgWN3
                               g$e*$12364$xgWN3))))))
                      (g$map$6085$xgWN3
                        (case-lambda
                          ((g$x$12387$xgWN3)
                           (g$add-subst$9676$xgWN3
                             g$rib$12354$xgWN3
                             g$x$12387$xgWN3)))
                        (g$syntax->list$9685$xgWN3 g$e*$12351$xgWN3)))))
                  (g$make-empty-rib$9644$xgWN3))))
              g$e*$12350$xgWN3
              g$exp-id*$12349$xgWN3
              g$name$12348$xgWN3)))))))
   (g$chi-body*$10095$xgWN3
     g$chi-body*$13634$xgWN3
     (case-lambda
       ((g$e*$12388$xgWN3
          g$r$12389$xgWN3
          g$mr$12390$xgWN3
          g$lex*$12391$xgWN3
          g$rhs*$12392$xgWN3
          g$mod**$12393$xgWN3
          g$kwd*$12394$xgWN3
          g$exp*$12395$xgWN3
          g$rib$12396$xgWN3
          g$mix?$12397$xgWN3
          g$sd?$12398$xgWN3)
        (if (null? g$e*$12388$xgWN3)
          (values
            g$e*$12388$xgWN3
            g$r$12389$xgWN3
            g$mr$12390$xgWN3
            g$lex*$12391$xgWN3
            g$rhs*$12392$xgWN3
            g$mod**$12393$xgWN3
            g$kwd*$12394$xgWN3
            g$exp*$12395$xgWN3)
          ((case-lambda
             ((g$e$12399$xgWN3)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$9706$xgWN3 g$e$12399$xgWN3 g$r$12389$xgWN3)))
                (case-lambda
                  ((g$type$12403$xgWN3 g$value$12404$xgWN3 g$kwd$12405$xgWN3)
                   ((case-lambda
                      ((g$kwd$12406$xgWN3
                         g$value$12407$xgWN3
                         g$type$12408$xgWN3)
                       ((case-lambda
                          ((g$kwd*$12409$xgWN3)
                           ((case-lambda
                              ((g$t$12410$xgWN3)
                               (if (g$memv$6078$xgWN3 g$t$12410$xgWN3 '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$9989$xgWN3
                                        g$e$12399$xgWN3)))
                                   (case-lambda
                                     ((g$id$12413$xgWN3 g$rhs$12414$xgWN3)
                                      ((case-lambda
                                         ((g$rhs$12415$xgWN3 g$id$12416$xgWN3)
                                          (begin
                                            (if (g$bound-id-member?$9693$xgWN3
                                                  g$id$12416$xgWN3
                                                  g$kwd*$12409$xgWN3)
                                              (g$syntax-violation$10167$xgWN3
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$12399$xgWN3)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$9625$xgWN3
                                                   g$id$12416$xgWN3
                                                   g$rib$12396$xgWN3
                                                   g$sd?$12398$xgWN3)))
                                              (case-lambda
                                                ((g$lab$12419$xgWN3
                                                   g$lex$12420$xgWN3)
                                                 ((case-lambda
                                                    ((g$lex$12421$xgWN3
                                                       g$lab$12422$xgWN3)
                                                     (begin
                                                       (g$extend-rib!$9647$xgWN3
                                                         g$rib$12396$xgWN3
                                                         g$id$12416$xgWN3
                                                         g$lab$12422$xgWN3
                                                         g$sd?$12398$xgWN3)
                                                       (g$chi-body*$10095$xgWN3
                                                         (cdr g$e*$12388$xgWN3)
                                                         (g$add-lexical$9996$xgWN3
                                                           g$lab$12422$xgWN3
                                                           g$lex$12421$xgWN3
                                                           g$r$12389$xgWN3)
                                                         g$mr$12390$xgWN3
                                                         (cons
                                                           g$lex$12421$xgWN3
                                                           g$lex*$12391$xgWN3)
                                                         (cons
                                                           g$rhs$12415$xgWN3
                                                           g$rhs*$12392$xgWN3)
                                                         g$mod**$12393$xgWN3
                                                         g$kwd*$12409$xgWN3
                                                         g$exp*$12395$xgWN3
                                                         g$rib$12396$xgWN3
                                                         g$mix?$12397$xgWN3
                                                         g$sd?$12398$xgWN3))))
                                                  g$lex$12420$xgWN3
                                                  g$lab$12419$xgWN3)))))))
                                       g$rhs$12414$xgWN3
                                       g$id$12413$xgWN3))))
                                 (if (g$memv$6078$xgWN3
                                       g$t$12410$xgWN3
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$9990$xgWN3
                                          g$e$12399$xgWN3)))
                                     (case-lambda
                                       ((g$id$12425$xgWN3 g$rhs$12426$xgWN3)
                                        ((case-lambda
                                           ((g$rhs$12427$xgWN3 g$id$12428$xgWN3)
                                            (begin
                                              (if (g$bound-id-member?$9693$xgWN3
                                                    g$id$12428$xgWN3
                                                    g$kwd*$12409$xgWN3)
                                                (g$syntax-violation$10167$xgWN3
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$12399$xgWN3)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$12429$xgWN3)
                                                  ((case-lambda
                                                     ((g$expanded-rhs$12430$xgWN3)
                                                      (begin
                                                        (g$extend-rib!$9647$xgWN3
                                                          g$rib$12396$xgWN3
                                                          g$id$12428$xgWN3
                                                          g$lab$12429$xgWN3
                                                          g$sd?$12398$xgWN3)
                                                        ((case-lambda
                                                           ((g$b$12431$xgWN3)
                                                            (g$chi-body*$10095$xgWN3
                                                              (cdr g$e*$12388$xgWN3)
                                                              (cons
                                                                (cons
                                                                  g$lab$12429$xgWN3
                                                                  g$b$12431$xgWN3)
                                                                g$r$12389$xgWN3)
                                                              (cons
                                                                (cons
                                                                  g$lab$12429$xgWN3
                                                                  g$b$12431$xgWN3)
                                                                g$mr$12390$xgWN3)
                                                              g$lex*$12391$xgWN3
                                                              g$rhs*$12392$xgWN3
                                                              g$mod**$12393$xgWN3
                                                              g$kwd*$12409$xgWN3
                                                              g$exp*$12395$xgWN3
                                                              g$rib$12396$xgWN3
                                                              g$mix?$12397$xgWN3
                                                              g$sd?$12398$xgWN3)))
                                                         (g$make-eval-transformer$9728$xgWN3
                                                           g$expanded-rhs$12430$xgWN3)))))
                                                   (g$expand-transformer$10096$xgWN3
                                                     g$rhs$12427$xgWN3
                                                     g$mr$12390$xgWN3))))
                                               (g$gen-define-label$9626$xgWN3
                                                 g$id$12428$xgWN3
                                                 g$rib$12396$xgWN3
                                                 g$sd?$12398$xgWN3)))))
                                         g$rhs$12426$xgWN3
                                         g$id$12425$xgWN3))))
                                   (if (g$memv$6078$xgWN3
                                         g$t$12410$xgWN3
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$12432$xgWN3)
                                         ((case-lambda
                                            ((g$ls/false$12433$xgWN3)
                                             (if (if g$ls/false$12433$xgWN3
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$12434$xgWN3
                                                            g$xrhs*$12435$xgWN3
                                                            g$xbody*$12436$xgWN3)
                                                          (if (not (g$valid-bound-ids?$9691$xgWN3
                                                                     g$xlhs*$12434$xgWN3))
                                                            (g$syntax-violation$10167$xgWN3
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$12399$xgWN3)
                                                            (void))))
                                                       g$ls/false$12433$xgWN3))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$12437$xgWN3
                                                      g$xrhs*$12438$xgWN3
                                                      g$xbody*$12439$xgWN3)
                                                    ((case-lambda
                                                       ((g$xlab*$12440$xgWN3)
                                                        ((case-lambda
                                                           ((g$xrib$12441$xgWN3)
                                                            ((case-lambda
                                                               ((g$xb*$12442$xgWN3)
                                                                (g$chi-body*$10095$xgWN3
                                                                  (append
                                                                    (g$map$6085$xgWN3
                                                                      (case-lambda
                                                                        ((g$x$12443$xgWN3)
                                                                         (g$add-subst$9676$xgWN3
                                                                           g$xrib$12441$xgWN3
                                                                           g$x$12443$xgWN3)))
                                                                      g$xbody*$12439$xgWN3)
                                                                    (cdr g$e*$12388$xgWN3))
                                                                  (append
                                                                    (g$map$6085$xgWN3
                                                                      cons
                                                                      g$xlab*$12440$xgWN3
                                                                      g$xb*$12442$xgWN3)
                                                                    g$r$12389$xgWN3)
                                                                  (append
                                                                    (g$map$6085$xgWN3
                                                                      cons
                                                                      g$xlab*$12440$xgWN3
                                                                      g$xb*$12442$xgWN3)
                                                                    g$mr$12390$xgWN3)
                                                                  g$lex*$12391$xgWN3
                                                                  g$rhs*$12392$xgWN3
                                                                  g$mod**$12393$xgWN3
                                                                  g$kwd*$12409$xgWN3
                                                                  g$exp*$12395$xgWN3
                                                                  g$rib$12396$xgWN3
                                                                  g$mix?$12397$xgWN3
                                                                  g$sd?$12398$xgWN3)))
                                                             (g$map$6085$xgWN3
                                                               (case-lambda
                                                                 ((g$x$12444$xgWN3)
                                                                  (g$make-eval-transformer$9728$xgWN3
                                                                    (g$expand-transformer$10096$xgWN3
                                                                      (if (eq? g$type$12408$xgWN3
                                                                               'let-syntax)
                                                                        g$x$12444$xgWN3
                                                                        (g$add-subst$9676$xgWN3
                                                                          g$xrib$12441$xgWN3
                                                                          g$x$12444$xgWN3))
                                                                      g$mr$12390$xgWN3))))
                                                               g$xrhs*$12438$xgWN3))))
                                                         (g$make-full-rib$9652$xgWN3
                                                           g$xlhs*$12437$xgWN3
                                                           g$xlab*$12440$xgWN3))))
                                                     (g$map$6085$xgWN3
                                                       g$gen-label$9623$xgWN3
                                                       g$xlhs*$12437$xgWN3))))
                                                 g$ls/false$12433$xgWN3)
                                               (g$syntax-violation$10167$xgWN3
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$12432$xgWN3))))
                                          (g$syntax-dispatch$10049$xgWN3
                                            g$t$12432$xgWN3
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$12399$xgWN3)
                                     (if (g$memv$6078$xgWN3
                                           g$t$12410$xgWN3
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$12445$xgWN3)
                                           ((case-lambda
                                              ((g$ls/false$12446$xgWN3)
                                               (if g$ls/false$12446$xgWN3
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$12447$xgWN3)
                                                      (g$chi-body*$10095$xgWN3
                                                        (append
                                                          g$x*$12447$xgWN3
                                                          (cdr g$e*$12388$xgWN3))
                                                        g$r$12389$xgWN3
                                                        g$mr$12390$xgWN3
                                                        g$lex*$12391$xgWN3
                                                        g$rhs*$12392$xgWN3
                                                        g$mod**$12393$xgWN3
                                                        g$kwd*$12409$xgWN3
                                                        g$exp*$12395$xgWN3
                                                        g$rib$12396$xgWN3
                                                        g$mix?$12397$xgWN3
                                                        g$sd?$12398$xgWN3)))
                                                   g$ls/false$12446$xgWN3)
                                                 (g$syntax-violation$10167$xgWN3
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$12445$xgWN3))))
                                            (g$syntax-dispatch$10049$xgWN3
                                              g$t$12445$xgWN3
                                              '(_ . each-any)))))
                                        g$e$12399$xgWN3)
                                       (if (g$memv$6078$xgWN3
                                             g$t$12410$xgWN3
                                             '(global-macro global-macro!))
                                         (g$chi-body*$10095$xgWN3
                                           (cons
                                             (g$add-subst$9676$xgWN3
                                               g$rib$12396$xgWN3
                                               (g$chi-global-macro$10064$xgWN3
                                                 g$value$12407$xgWN3
                                                 g$e$12399$xgWN3
                                                 g$r$12389$xgWN3))
                                             (cdr g$e*$12388$xgWN3))
                                           g$r$12389$xgWN3
                                           g$mr$12390$xgWN3
                                           g$lex*$12391$xgWN3
                                           g$rhs*$12392$xgWN3
                                           g$mod**$12393$xgWN3
                                           g$kwd*$12409$xgWN3
                                           g$exp*$12395$xgWN3
                                           g$rib$12396$xgWN3
                                           g$mix?$12397$xgWN3
                                           g$sd?$12398$xgWN3)
                                         (if (g$memv$6078$xgWN3
                                               g$t$12410$xgWN3
                                               '(local-macro local-macro!))
                                           (g$chi-body*$10095$xgWN3
                                             (cons
                                               (g$add-subst$9676$xgWN3
                                                 g$rib$12396$xgWN3
                                                 (g$chi-local-macro$10063$xgWN3
                                                   g$value$12407$xgWN3
                                                   g$e$12399$xgWN3
                                                   g$r$12389$xgWN3))
                                               (cdr g$e*$12388$xgWN3))
                                             g$r$12389$xgWN3
                                             g$mr$12390$xgWN3
                                             g$lex*$12391$xgWN3
                                             g$rhs*$12392$xgWN3
                                             g$mod**$12393$xgWN3
                                             g$kwd*$12409$xgWN3
                                             g$exp*$12395$xgWN3
                                             g$rib$12396$xgWN3
                                             g$mix?$12397$xgWN3
                                             g$sd?$12398$xgWN3)
                                           (if (g$memv$6078$xgWN3
                                                 g$t$12410$xgWN3
                                                 '(macro macro!))
                                             (g$chi-body*$10095$xgWN3
                                               (cons
                                                 (g$add-subst$9676$xgWN3
                                                   g$rib$12396$xgWN3
                                                   (g$chi-macro$10062$xgWN3
                                                     g$value$12407$xgWN3
                                                     g$e$12399$xgWN3
                                                     g$r$12389$xgWN3))
                                                 (cdr g$e*$12388$xgWN3))
                                               g$r$12389$xgWN3
                                               g$mr$12390$xgWN3
                                               g$lex*$12391$xgWN3
                                               g$rhs*$12392$xgWN3
                                               g$mod**$12393$xgWN3
                                               g$kwd*$12409$xgWN3
                                               g$exp*$12395$xgWN3
                                               g$rib$12396$xgWN3
                                               g$mix?$12397$xgWN3
                                               g$sd?$12398$xgWN3)
                                             (if (g$memv$6078$xgWN3
                                                   g$t$12410$xgWN3
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$10094$xgWN3
                                                      g$e$12399$xgWN3
                                                      g$r$12389$xgWN3
                                                      g$mr$12390$xgWN3
                                                      g$lex*$12391$xgWN3
                                                      g$rhs*$12392$xgWN3
                                                      g$mod**$12393$xgWN3
                                                      g$kwd*$12409$xgWN3)))
                                                 (case-lambda
                                                   ((g$lex*$12456$xgWN3
                                                      g$rhs*$12457$xgWN3
                                                      g$m-exp-id*$12458$xgWN3
                                                      g$m-exp-lab*$12459$xgWN3
                                                      g$r$12460$xgWN3
                                                      g$mr$12461$xgWN3
                                                      g$mod**$12462$xgWN3
                                                      g$kwd*$12463$xgWN3)
                                                    ((case-lambda
                                                       ((g$kwd*$12464$xgWN3
                                                          g$mod**$12465$xgWN3
                                                          g$mr$12466$xgWN3
                                                          g$r$12467$xgWN3
                                                          g$m-exp-lab*$12468$xgWN3
                                                          g$m-exp-id*$12469$xgWN3
                                                          g$rhs*$12470$xgWN3
                                                          g$lex*$12471$xgWN3)
                                                        (begin
                                                          (g$vector-for-each$6817$xgWN3
                                                            (case-lambda
                                                              ((g$id$12472$xgWN3
                                                                 g$lab$12473$xgWN3)
                                                               (g$extend-rib!$9647$xgWN3
                                                                 g$rib$12396$xgWN3
                                                                 g$id$12472$xgWN3
                                                                 g$lab$12473$xgWN3
                                                                 g$sd?$12398$xgWN3)))
                                                            g$m-exp-id*$12469$xgWN3
                                                            g$m-exp-lab*$12468$xgWN3)
                                                          (g$chi-body*$10095$xgWN3
                                                            (cdr g$e*$12388$xgWN3)
                                                            g$r$12467$xgWN3
                                                            g$mr$12466$xgWN3
                                                            g$lex*$12471$xgWN3
                                                            g$rhs*$12470$xgWN3
                                                            g$mod**$12465$xgWN3
                                                            g$kwd*$12464$xgWN3
                                                            g$exp*$12395$xgWN3
                                                            g$rib$12396$xgWN3
                                                            g$mix?$12397$xgWN3
                                                            g$sd?$12398$xgWN3))))
                                                     g$kwd*$12463$xgWN3
                                                     g$mod**$12462$xgWN3
                                                     g$mr$12461$xgWN3
                                                     g$r$12460$xgWN3
                                                     g$m-exp-lab*$12459$xgWN3
                                                     g$m-exp-id*$12458$xgWN3
                                                     g$rhs*$12457$xgWN3
                                                     g$lex*$12456$xgWN3))))
                                               (if (g$memv$6078$xgWN3
                                                     g$t$12410$xgWN3
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$10151$xgWN3
                                                     (g$stx->datum$9697$xgWN3
                                                       g$e$12399$xgWN3))
                                                   (g$chi-body*$10095$xgWN3
                                                     (cdr g$e*$12388$xgWN3)
                                                     g$r$12389$xgWN3
                                                     g$mr$12390$xgWN3
                                                     g$lex*$12391$xgWN3
                                                     g$rhs*$12392$xgWN3
                                                     g$mod**$12393$xgWN3
                                                     g$kwd*$12409$xgWN3
                                                     g$exp*$12395$xgWN3
                                                     g$rib$12396$xgWN3
                                                     g$mix?$12397$xgWN3
                                                     g$sd?$12398$xgWN3))
                                                 (if (g$memv$6078$xgWN3
                                                       g$t$12410$xgWN3
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$12474$xgWN3)
                                                       ((case-lambda
                                                          ((g$ls/false$12475$xgWN3)
                                                           (if g$ls/false$12475$xgWN3
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$12476$xgWN3)
                                                                  (g$chi-body*$10095$xgWN3
                                                                    (cdr g$e*$12388$xgWN3)
                                                                    g$r$12389$xgWN3
                                                                    g$mr$12390$xgWN3
                                                                    g$lex*$12391$xgWN3
                                                                    g$rhs*$12392$xgWN3
                                                                    g$mod**$12393$xgWN3
                                                                    g$kwd*$12409$xgWN3
                                                                    (append
                                                                      g$exp-decl*$12476$xgWN3
                                                                      g$exp*$12395$xgWN3)
                                                                    g$rib$12396$xgWN3
                                                                    g$mix?$12397$xgWN3
                                                                    g$sd?$12398$xgWN3)))
                                                               g$ls/false$12475$xgWN3)
                                                             (g$syntax-violation$10167$xgWN3
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$12474$xgWN3))))
                                                        (g$syntax-dispatch$10049$xgWN3
                                                          g$t$12474$xgWN3
                                                          '(_ . each-any)))))
                                                    g$e$12399$xgWN3)
                                                   (if (g$memv$6078$xgWN3
                                                         g$t$12410$xgWN3
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$12477$xgWN3
                                                                     (case-lambda
                                                                       ((g$e$12519$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$t$12520$xgWN3)
                                                                            ((case-lambda
                                                                               ((g$ls/false$12521$xgWN3)
                                                                                (if (if g$ls/false$12521$xgWN3
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$12522$xgWN3)
                                                                                             (g$id?$9686$xgWN3
                                                                                               g$id$12522$xgWN3)))
                                                                                          g$ls/false$12521$xgWN3))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$12523$xgWN3)
                                                                                       '#t))
                                                                                    g$ls/false$12521$xgWN3)
                                                                                  ((case-lambda
                                                                                     ((g$t$12524$xgWN3)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$12525$xgWN3)
                                                                                          (if g$ls/false$12525$xgWN3
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$12526$xgWN3)
                                                                                                 '#f))
                                                                                              g$ls/false$12525$xgWN3)
                                                                                            ((case-lambda
                                                                                               ((g$t$12527$xgWN3)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$12528$xgWN3)
                                                                                                    (if g$ls/false$12528$xgWN3
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$10167$xgWN3
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$12519$xgWN3)))
                                                                                                        g$ls/false$12528$xgWN3)
                                                                                                      (g$syntax-violation$10167$xgWN3
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$12527$xgWN3))))
                                                                                                 (g$syntax-dispatch$10049$xgWN3
                                                                                                   g$t$12527$xgWN3
                                                                                                   '_))))
                                                                                             g$t$12524$xgWN3))))
                                                                                       (g$syntax-dispatch$10049$xgWN3
                                                                                         g$t$12524$xgWN3
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$12520$xgWN3))))
                                                                             (g$syntax-dispatch$10049$xgWN3
                                                                               g$t$12520$xgWN3
                                                                               '(_ any)))))
                                                                         g$e$12519$xgWN3))))
                                                                   (g$module-import$12478$xgWN3
                                                                     (case-lambda
                                                                       ((g$e$12502$xgWN3
                                                                          g$r$12503$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$t$12504$xgWN3)
                                                                            ((case-lambda
                                                                               ((g$ls/false$12505$xgWN3)
                                                                                (if (if g$ls/false$12505$xgWN3
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$12506$xgWN3)
                                                                                             (g$id?$9686$xgWN3
                                                                                               g$id$12506$xgWN3)))
                                                                                          g$ls/false$12505$xgWN3))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$12507$xgWN3)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$9706$xgWN3
                                                                                              g$id$12507$xgWN3
                                                                                              g$r$12503$xgWN3)))
                                                                                         (case-lambda
                                                                                           ((g$type$12511$xgWN3
                                                                                              g$value$12512$xgWN3
                                                                                              g$kwd$12513$xgWN3)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$12514$xgWN3
                                                                                                  g$value$12515$xgWN3
                                                                                                  g$type$12516$xgWN3)
                                                                                                ((case-lambda
                                                                                                   ((g$t$12517$xgWN3)
                                                                                                    (if (g$memv$6078$xgWN3
                                                                                                          g$t$12517$xgWN3
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$12518$xgWN3)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$10093$xgWN3
                                                                                                              g$iface$12518$xgWN3
                                                                                                              g$id$12507$xgWN3)
                                                                                                            (g$module-interface-exp-lab-vec$10089$xgWN3
                                                                                                              g$iface$12518$xgWN3))))
                                                                                                       g$value$12515$xgWN3)
                                                                                                      (g$syntax-violation$10167$xgWN3
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$12502$xgWN3))))
                                                                                                 g$type$12516$xgWN3)))
                                                                                             g$kwd$12513$xgWN3
                                                                                             g$value$12512$xgWN3
                                                                                             g$type$12511$xgWN3))))))
                                                                                    g$ls/false$12505$xgWN3)
                                                                                  (g$syntax-violation$10167$xgWN3
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$12504$xgWN3))))
                                                                             (g$syntax-dispatch$10049$xgWN3
                                                                               g$t$12504$xgWN3
                                                                               '(_ any)))))
                                                                         g$e$12502$xgWN3))))
                                                                   (g$library-import$12479$xgWN3
                                                                     (case-lambda
                                                                       ((g$e$12488$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$t$12489$xgWN3)
                                                                            ((case-lambda
                                                                               ((g$ls/false$12490$xgWN3)
                                                                                (if g$ls/false$12490$xgWN3
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$12491$xgWN3
                                                                                         g$imp*$12492$xgWN3)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$10100$xgWN3
                                                                                              (g$syntax->datum$10170$xgWN3
                                                                                                g$imp*$12492$xgWN3))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$12495$xgWN3
                                                                                              g$subst-labels$12496$xgWN3)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$12497$xgWN3
                                                                                                  g$subst-names$12498$xgWN3)
                                                                                                (values
                                                                                                  (g$vector-map$6816$xgWN3
                                                                                                    (case-lambda
                                                                                                      ((g$name$12499$xgWN3)
                                                                                                       (g$datum->stx$9669$xgWN3
                                                                                                         g$ctxt$12491$xgWN3
                                                                                                         g$name$12499$xgWN3)))
                                                                                                    g$subst-names$12498$xgWN3)
                                                                                                  g$subst-labels$12497$xgWN3)))
                                                                                             g$subst-labels$12496$xgWN3
                                                                                             g$subst-names$12495$xgWN3))))))
                                                                                    g$ls/false$12490$xgWN3)
                                                                                  ((case-lambda
                                                                                     ((g$t$12500$xgWN3)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$12501$xgWN3)
                                                                                          (if g$ls/false$12501$xgWN3
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$10167$xgWN3
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$12488$xgWN3)))
                                                                                              g$ls/false$12501$xgWN3)
                                                                                            (g$syntax-violation$10167$xgWN3
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$12500$xgWN3))))
                                                                                       (g$syntax-dispatch$10049$xgWN3
                                                                                         g$t$12500$xgWN3
                                                                                         '_))))
                                                                                   g$t$12489$xgWN3))))
                                                                             (g$syntax-dispatch$10049$xgWN3
                                                                               g$t$12489$xgWN3
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$12488$xgWN3)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$12477$xgWN3
                                                                        g$e$12399$xgWN3)
                                                                    (g$module-import$12478$xgWN3
                                                                      g$e$12399$xgWN3
                                                                      g$r$12389$xgWN3)
                                                                    (g$library-import$12479$xgWN3
                                                                      g$e$12399$xgWN3))))
                                                               (case-lambda
                                                                 ((g$id*$12482$xgWN3
                                                                    g$lab*$12483$xgWN3)
                                                                  ((case-lambda
                                                                     ((g$lab*$12484$xgWN3
                                                                        g$id*$12485$xgWN3)
                                                                      (g$vector-for-each$6817$xgWN3
                                                                        (case-lambda
                                                                          ((g$id$12486$xgWN3
                                                                             g$lab$12487$xgWN3)
                                                                           (g$extend-rib!$9647$xgWN3
                                                                             g$rib$12396$xgWN3
                                                                             g$id$12486$xgWN3
                                                                             g$lab$12487$xgWN3
                                                                             g$sd?$12398$xgWN3)))
                                                                        g$id*$12485$xgWN3
                                                                        g$lab*$12484$xgWN3)))
                                                                   g$lab*$12483$xgWN3
                                                                   g$id*$12482$xgWN3))))
                                                             (g$chi-body*$10095$xgWN3
                                                               (cdr g$e*$12388$xgWN3)
                                                               g$r$12389$xgWN3
                                                               g$mr$12390$xgWN3
                                                               g$lex*$12391$xgWN3
                                                               g$rhs*$12392$xgWN3
                                                               g$mod**$12393$xgWN3
                                                               g$kwd*$12409$xgWN3
                                                               g$exp*$12395$xgWN3
                                                               g$rib$12396$xgWN3
                                                               g$mix?$12397$xgWN3
                                                               g$sd?$12398$xgWN3))))))
                                                     (if g$mix?$12397$xgWN3
                                                       (g$chi-body*$10095$xgWN3
                                                         (cdr g$e*$12388$xgWN3)
                                                         g$r$12389$xgWN3
                                                         g$mr$12390$xgWN3
                                                         (cons
                                                           (g$gen-lexical$9621$xgWN3
                                                             'dummy)
                                                           g$lex*$12391$xgWN3)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$12399$xgWN3)
                                                           g$rhs*$12392$xgWN3)
                                                         g$mod**$12393$xgWN3
                                                         g$kwd*$12409$xgWN3
                                                         g$exp*$12395$xgWN3
                                                         g$rib$12396$xgWN3
                                                         '#t
                                                         g$sd?$12398$xgWN3)
                                                       (values
                                                         g$e*$12388$xgWN3
                                                         g$r$12389$xgWN3
                                                         g$mr$12390$xgWN3
                                                         g$lex*$12391$xgWN3
                                                         g$rhs*$12392$xgWN3
                                                         g$mod**$12393$xgWN3
                                                         g$kwd*$12409$xgWN3
                                                         g$exp*$12395$xgWN3)))))))))))))))
                            g$type$12408$xgWN3)))
                        (if (g$id?$9686$xgWN3 g$kwd$12406$xgWN3)
                          (cons g$kwd$12406$xgWN3 g$kwd*$12394$xgWN3)
                          g$kwd*$12394$xgWN3))))
                    g$kwd$12405$xgWN3
                    g$value$12404$xgWN3
                    g$type$12403$xgWN3))))))
           (car g$e*$12388$xgWN3))))))
   (g$expand-transformer$10096$xgWN3
     g$expand-transformer$13635$xgWN3
     (case-lambda
       ((g$expr$12529$xgWN3 g$r$12530$xgWN3)
        ((case-lambda
           ((g$rtc$12531$xgWN3)
            ((case-lambda
               ((g$expanded-rhs$12532$xgWN3)
                (begin
                  (g$for-each$6086$xgWN3
                    ((case-lambda
                       ((g$mark-visit$12533$xgWN3)
                        (case-lambda
                          ((g$x$12534$xgWN3)
                           (begin
                             (g$invoke-library$9425$xgWN3 g$x$12534$xgWN3)
                             (g$mark-visit$12533$xgWN3 g$x$12534$xgWN3))))))
                     (g$vis-collector$10104$xgWN3))
                    (g$rtc$12531$xgWN3))
                  g$expanded-rhs$12532$xgWN3)))
             ((case-lambda
                ((g$inv-collector$12539$xgWN3
                   g$vis-collector$12540$xgWN3
                   g$inv-collector$12541$xgWN3
                   g$vis-collector$12542$xgWN3)
                 ((case-lambda
                    ((g$swap$12543$xgWN3)
                     (dynamic-wind
                       g$swap$12543$xgWN3
                       (case-lambda
                         (()
                          (g$chi-expr$10067$xgWN3
                            g$expr$12529$xgWN3
                            g$r$12530$xgWN3
                            g$r$12530$xgWN3)))
                       g$swap$12543$xgWN3)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$12544$xgWN3)
                           (begin
                             (g$inv-collector$12539$xgWN3
                               g$inv-collector$12541$xgWN3)
                             (set! g$inv-collector$12541$xgWN3
                               g$t$12544$xgWN3))))
                        (g$inv-collector$12539$xgWN3))
                       ((case-lambda
                          ((g$t$12545$xgWN3)
                           (begin
                             (g$vis-collector$12540$xgWN3
                               g$vis-collector$12542$xgWN3)
                             (set! g$vis-collector$12542$xgWN3
                               g$t$12545$xgWN3))))
                        (g$vis-collector$12540$xgWN3))))))))
              g$inv-collector$10103$xgWN3
              g$vis-collector$10104$xgWN3
              g$rtc$12531$xgWN3
              (case-lambda ((g$x$12546$xgWN3) (values)))))))
         (g$make-collector$10102$xgWN3)))))
   (g$parse-exports$10097$xgWN3
     g$parse-exports$13636$xgWN3
     (case-lambda
       ((g$exp*$12547$xgWN3)
        ((letrec ((g$f$12548$xgWN3
                    (case-lambda
                      ((g$exp*$12549$xgWN3
                         g$int*$12550$xgWN3
                         g$ext*$12551$xgWN3)
                       (if (null? g$exp*$12549$xgWN3)
                         (begin
                           (if (not (g$valid-bound-ids?$9691$xgWN3
                                      g$ext*$12551$xgWN3))
                             (g$syntax-violation$10167$xgWN3
                               'export
                               '"invalid exports"
                               (g$find-dups$10077$xgWN3 g$ext*$12551$xgWN3))
                             (void))
                           (values
                             (g$map$6085$xgWN3
                               g$syntax->datum$10170$xgWN3
                               g$ext*$12551$xgWN3)
                             g$int*$12550$xgWN3))
                         ((case-lambda
                            ((g$t$12552$xgWN3)
                             ((case-lambda
                                ((g$ls/false$12553$xgWN3)
                                 (if g$ls/false$12553$xgWN3
                                   (apply
                                     (case-lambda
                                       ((g$rename$12554$xgWN3
                                          g$i*$12555$xgWN3
                                          g$e*$12556$xgWN3)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$10170$xgWN3
                                                              g$rename$12554$xgWN3)
                                                            'rename)
                                                     (if (g$for-all$6083$xgWN3
                                                           g$id?$9686$xgWN3
                                                           g$i*$12555$xgWN3)
                                                       (begin
                                                         '#f
                                                         (g$for-all$6083$xgWN3
                                                           g$id?$9686$xgWN3
                                                           g$e*$12556$xgWN3))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$10167$xgWN3
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$12549$xgWN3))
                                            (void))
                                          (g$f$12548$xgWN3
                                            (cdr g$exp*$12549$xgWN3)
                                            (append
                                              g$i*$12555$xgWN3
                                              g$int*$12550$xgWN3)
                                            (append
                                              g$e*$12556$xgWN3
                                              g$ext*$12551$xgWN3)))))
                                     g$ls/false$12553$xgWN3)
                                   ((case-lambda
                                      ((g$t$12557$xgWN3)
                                       ((case-lambda
                                          ((g$ls/false$12558$xgWN3)
                                           (if g$ls/false$12558$xgWN3
                                             (apply
                                               (case-lambda
                                                 ((g$ie$12559$xgWN3)
                                                  (begin
                                                    (if (not (g$id?$9686$xgWN3
                                                               g$ie$12559$xgWN3))
                                                      (g$syntax-violation$10167$xgWN3
                                                        'export
                                                        '"invalid export"
                                                        g$ie$12559$xgWN3)
                                                      (void))
                                                    (g$f$12548$xgWN3
                                                      (cdr g$exp*$12549$xgWN3)
                                                      (cons
                                                        g$ie$12559$xgWN3
                                                        g$int*$12550$xgWN3)
                                                      (cons
                                                        g$ie$12559$xgWN3
                                                        g$ext*$12551$xgWN3)))))
                                               g$ls/false$12558$xgWN3)
                                             (g$syntax-violation$10167$xgWN3
                                               '#f
                                               '"invalid syntax"
                                               g$t$12557$xgWN3))))
                                        (g$syntax-dispatch$10049$xgWN3
                                          g$t$12557$xgWN3
                                          'any))))
                                    g$t$12552$xgWN3))))
                              (g$syntax-dispatch$10049$xgWN3
                                g$t$12552$xgWN3
                                '(any . #(each (any any)))))))
                          (car g$exp*$12549$xgWN3)))))))
           g$f$12548$xgWN3)
         g$exp*$12547$xgWN3
         '()
         '()))))
   (g$parse-library-name$10098$xgWN3
     g$parse-library-name$13637$xgWN3
     (case-lambda
       ((g$spec$12560$xgWN3)
        (letrec* ((g$parse$12561$xgWN3
                    (case-lambda
                      ((g$x$12568$xgWN3)
                       ((case-lambda
                          ((g$t$12569$xgWN3)
                           ((case-lambda
                              ((g$ls/false$12570$xgWN3)
                               (if (if g$ls/false$12570$xgWN3
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$12571$xgWN3)
                                            (g$for-all$6083$xgWN3
                                              (case-lambda
                                                ((g$x$12572$xgWN3)
                                                 ((case-lambda
                                                    ((g$x$12573$xgWN3)
                                                     (if (integer?
                                                           g$x$12573$xgWN3)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$12573$xgWN3))
                                                       '#f)))
                                                  (g$syntax->datum$10170$xgWN3
                                                    g$x$12572$xgWN3))))
                                              g$v*$12571$xgWN3)))
                                         g$ls/false$12570$xgWN3))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$12574$xgWN3)
                                      (values
                                        '()
                                        (g$map$6085$xgWN3
                                          g$syntax->datum$10170$xgWN3
                                          g$v*$12574$xgWN3))))
                                   g$ls/false$12570$xgWN3)
                                 ((case-lambda
                                    ((g$t$12575$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$12576$xgWN3)
                                         (if (if g$ls/false$12576$xgWN3
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$12577$xgWN3
                                                        g$rest$12578$xgWN3)
                                                      (g$symbol?$6756$xgWN3
                                                        (g$syntax->datum$10170$xgWN3
                                                          g$x$12577$xgWN3))))
                                                   g$ls/false$12576$xgWN3))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$12579$xgWN3
                                                  g$rest$12580$xgWN3)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$12561$xgWN3
                                                       g$rest$12580$xgWN3)))
                                                  (case-lambda
                                                    ((g$x*$12583$xgWN3
                                                       g$v*$12584$xgWN3)
                                                     ((case-lambda
                                                        ((g$v*$12585$xgWN3
                                                           g$x*$12586$xgWN3)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$10170$xgWN3
                                                               g$x$12579$xgWN3)
                                                             g$x*$12586$xgWN3)
                                                           g$v*$12585$xgWN3)))
                                                      g$v*$12584$xgWN3
                                                      g$x*$12583$xgWN3))))))
                                             g$ls/false$12576$xgWN3)
                                           ((case-lambda
                                              ((g$t$12587$xgWN3)
                                               ((case-lambda
                                                  ((g$ls/false$12588$xgWN3)
                                                   (if g$ls/false$12588$xgWN3
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$12588$xgWN3)
                                                     ((case-lambda
                                                        ((g$t$12589$xgWN3)
                                                         ((case-lambda
                                                            ((g$ls/false$12590$xgWN3)
                                                             (if g$ls/false$12590$xgWN3
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$10167$xgWN3
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$12560$xgWN3)))
                                                                 g$ls/false$12590$xgWN3)
                                                               (g$syntax-violation$10167$xgWN3
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$12589$xgWN3))))
                                                          (g$syntax-dispatch$10049$xgWN3
                                                            g$t$12589$xgWN3
                                                            '_))))
                                                      g$t$12587$xgWN3))))
                                                (g$syntax-dispatch$10049$xgWN3
                                                  g$t$12587$xgWN3
                                                  '()))))
                                            g$t$12575$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$12575$xgWN3
                                        '(any . any)))))
                                  g$t$12569$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$12569$xgWN3
                              '(each-any)))))
                        g$x$12568$xgWN3)))))
          (call-with-values
            (case-lambda (() (g$parse$12561$xgWN3 g$spec$12560$xgWN3)))
            (case-lambda
              ((g$name*$12564$xgWN3 g$ver*$12565$xgWN3)
               ((case-lambda
                  ((g$ver*$12566$xgWN3 g$name*$12567$xgWN3)
                   (begin
                     (if (null? g$name*$12567$xgWN3)
                       (g$syntax-violation$10167$xgWN3
                         '#f
                         '"empty library name"
                         g$spec$12560$xgWN3)
                       (void))
                     (values g$name*$12567$xgWN3 g$ver*$12566$xgWN3))))
                g$ver*$12565$xgWN3
                g$name*$12564$xgWN3))))))))
   (g$parse-library$10099$xgWN3
     g$parse-library$13638$xgWN3
     (case-lambda
       ((g$e$12591$xgWN3)
        ((case-lambda
           ((g$t$12592$xgWN3)
            ((case-lambda
               ((g$ls/false$12593$xgWN3)
                (if (if g$ls/false$12593$xgWN3
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$12594$xgWN3
                               g$name*$12595$xgWN3
                               g$export$12596$xgWN3
                               g$exp*$12597$xgWN3
                               g$import$12598$xgWN3
                               g$imp*$12599$xgWN3
                               g$b*$12600$xgWN3)
                             (if (eq? (g$syntax->datum$10170$xgWN3
                                        g$export$12596$xgWN3)
                                      'export)
                               (if (eq? (g$syntax->datum$10170$xgWN3
                                          g$import$12598$xgWN3)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$10170$xgWN3
                                          g$library$12594$xgWN3)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$12593$xgWN3))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$12601$xgWN3
                         g$name*$12602$xgWN3
                         g$export$12603$xgWN3
                         g$exp*$12604$xgWN3
                         g$import$12605$xgWN3
                         g$imp*$12606$xgWN3
                         g$b*$12607$xgWN3)
                       (values
                         g$name*$12602$xgWN3
                         g$exp*$12604$xgWN3
                         g$imp*$12606$xgWN3
                         g$b*$12607$xgWN3)))
                    g$ls/false$12593$xgWN3)
                  ((case-lambda
                     ((g$t$12608$xgWN3)
                      ((case-lambda
                         ((g$ls/false$12609$xgWN3)
                          (if g$ls/false$12609$xgWN3
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$10167$xgWN3
                                   '#f
                                   '"malformed library"
                                   g$e$12591$xgWN3)))
                              g$ls/false$12609$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$12608$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3 g$t$12608$xgWN3 '_))))
                   g$t$12592$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$12592$xgWN3
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$12591$xgWN3))))
   (g$parse-import-spec*$10100$xgWN3
     g$parse-import-spec*$13639$xgWN3
     (case-lambda
       ((g$imp*$12610$xgWN3)
        (letrec* ((g$idsyn?$12611$xgWN3
                    (case-lambda
                      ((g$x$12871$xgWN3)
                       (g$symbol?$6756$xgWN3
                         (g$syntax->datum$10170$xgWN3 g$x$12871$xgWN3)))))
                  (g$dup-error$12612$xgWN3
                    (case-lambda
                      ((g$name$12870$xgWN3)
                       (g$syntax-violation$10167$xgWN3
                         'import
                         '"two imports with different bindings"
                         g$name$12870$xgWN3))))
                  (g$merge-substs$12613$xgWN3
                    (case-lambda
                      ((g$s$12861$xgWN3 g$subst$12862$xgWN3)
                       (letrec* ((g$insert-to-subst$12863$xgWN3
                                   (case-lambda
                                     ((g$a$12864$xgWN3 g$subst$12865$xgWN3)
                                      ((case-lambda
                                         ((g$name$12866$xgWN3
                                            g$label$12867$xgWN3)
                                          ((case-lambda
                                             ((g$t$12868$xgWN3)
                                              (if g$t$12868$xgWN3
                                                ((case-lambda
                                                   ((g$x$12869$xgWN3)
                                                    (if (eq? (cdr g$x$12869$xgWN3)
                                                             g$label$12867$xgWN3)
                                                      g$subst$12865$xgWN3
                                                      (g$dup-error$12612$xgWN3
                                                        g$name$12866$xgWN3))))
                                                 g$t$12868$xgWN3)
                                                (cons
                                                  g$a$12864$xgWN3
                                                  g$subst$12865$xgWN3))))
                                           (g$assq$6073$xgWN3
                                             g$name$12866$xgWN3
                                             g$subst$12865$xgWN3))))
                                       (car g$a$12864$xgWN3)
                                       (cdr g$a$12864$xgWN3))))))
                         (if (null? g$s$12861$xgWN3)
                           g$subst$12862$xgWN3
                           (g$insert-to-subst$12863$xgWN3
                             (car g$s$12861$xgWN3)
                             (g$merge-substs$12613$xgWN3
                               (cdr g$s$12861$xgWN3)
                               g$subst$12862$xgWN3)))))))
                  (g$exclude*$12614$xgWN3
                    (case-lambda
                      ((g$sym*$12837$xgWN3 g$subst$12838$xgWN3)
                       (letrec* ((g$exclude$12839$xgWN3
                                   (case-lambda
                                     ((g$sym$12852$xgWN3 g$subst$12853$xgWN3)
                                      (if (null? g$subst$12853$xgWN3)
                                        (g$syntax-violation$10167$xgWN3
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$12852$xgWN3)
                                        (if (eq? g$sym$12852$xgWN3
                                                 (g$caar$6764$xgWN3
                                                   g$subst$12853$xgWN3))
                                          (values
                                            (g$cdar$6766$xgWN3
                                              g$subst$12853$xgWN3)
                                            (cdr g$subst$12853$xgWN3))
                                          ((case-lambda
                                             ((g$a$12854$xgWN3)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$12839$xgWN3
                                                     g$sym$12852$xgWN3
                                                     (cdr g$subst$12853$xgWN3))))
                                                (case-lambda
                                                  ((g$old$12857$xgWN3
                                                     g$subst$12858$xgWN3)
                                                   ((case-lambda
                                                      ((g$subst$12859$xgWN3
                                                         g$old$12860$xgWN3)
                                                       (values
                                                         g$old$12860$xgWN3
                                                         (cons
                                                           g$a$12854$xgWN3
                                                           g$subst$12859$xgWN3))))
                                                    g$subst$12858$xgWN3
                                                    g$old$12857$xgWN3))))))
                                           (car g$subst$12853$xgWN3))))))))
                         (if (null? g$sym*$12837$xgWN3)
                           (values '() g$subst$12838$xgWN3)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$12839$xgWN3
                                  (car g$sym*$12837$xgWN3)
                                  g$subst$12838$xgWN3)))
                             (case-lambda
                               ((g$old$12842$xgWN3 g$subst$12843$xgWN3)
                                ((case-lambda
                                   ((g$subst$12844$xgWN3 g$old$12845$xgWN3)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$12614$xgWN3
                                           (cdr g$sym*$12837$xgWN3)
                                           g$subst$12844$xgWN3)))
                                      (case-lambda
                                        ((g$old*$12848$xgWN3
                                           g$subst$12849$xgWN3)
                                         ((case-lambda
                                            ((g$subst$12850$xgWN3
                                               g$old*$12851$xgWN3)
                                             (values
                                               (cons
                                                 g$old$12845$xgWN3
                                                 g$old*$12851$xgWN3)
                                               g$subst$12850$xgWN3)))
                                          g$subst$12849$xgWN3
                                          g$old*$12848$xgWN3))))))
                                 g$subst$12843$xgWN3
                                 g$old$12842$xgWN3)))))))))
                  (g$find*$12615$xgWN3
                    (case-lambda
                      ((g$sym*$12833$xgWN3 g$subst$12834$xgWN3)
                       (g$map$6085$xgWN3
                         (case-lambda
                           ((g$x$12835$xgWN3)
                            ((case-lambda
                               ((g$t$12836$xgWN3)
                                (if g$t$12836$xgWN3
                                  (cdr g$t$12836$xgWN3)
                                  (g$syntax-violation$10167$xgWN3
                                    'import
                                    '"cannot find identifier"
                                    g$x$12835$xgWN3))))
                             (g$assq$6073$xgWN3
                               g$x$12835$xgWN3
                               g$subst$12834$xgWN3))))
                         g$sym*$12833$xgWN3))))
                  (g$rem*$12616$xgWN3
                    (case-lambda
                      ((g$sym*$12829$xgWN3 g$subst$12830$xgWN3)
                       ((letrec ((g$f$12831$xgWN3
                                   (case-lambda
                                     ((g$subst$12832$xgWN3)
                                      (if (null? g$subst$12832$xgWN3)
                                        '()
                                        (if (g$memq$6077$xgWN3
                                              (g$caar$6764$xgWN3
                                                g$subst$12832$xgWN3)
                                              g$sym*$12829$xgWN3)
                                          (g$f$12831$xgWN3
                                            (cdr g$subst$12832$xgWN3))
                                          (cons
                                            (car g$subst$12832$xgWN3)
                                            (g$f$12831$xgWN3
                                              (cdr g$subst$12832$xgWN3)))))))))
                          g$f$12831$xgWN3)
                        g$subst$12830$xgWN3))))
                  (g$remove-dups$12617$xgWN3
                    (case-lambda
                      ((g$ls$12828$xgWN3)
                       (if (null? g$ls$12828$xgWN3)
                         '()
                         (if (g$memq$6077$xgWN3
                               (car g$ls$12828$xgWN3)
                               (cdr g$ls$12828$xgWN3))
                           (g$remove-dups$12617$xgWN3 (cdr g$ls$12828$xgWN3))
                           (cons
                             (car g$ls$12828$xgWN3)
                             (g$remove-dups$12617$xgWN3
                               (cdr g$ls$12828$xgWN3))))))))
                  (g$parse-library-name$12618$xgWN3
                    (case-lambda
                      ((g$spec$12712$xgWN3)
                       (letrec* ((g$subversion?$12713$xgWN3
                                   (case-lambda
                                     ((g$x$12826$xgWN3)
                                      ((case-lambda
                                         ((g$x$12827$xgWN3)
                                          (if (integer? g$x$12827$xgWN3)
                                            (if (exact? g$x$12827$xgWN3)
                                              (begin
                                                '#f
                                                (>= g$x$12827$xgWN3 '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$10170$xgWN3
                                         g$x$12826$xgWN3)))))
                                 (g$subversion-pred$12714$xgWN3
                                   (case-lambda
                                     ((g$x*$12778$xgWN3)
                                      ((case-lambda
                                         ((g$t$12779$xgWN3)
                                          ((case-lambda
                                             ((g$ls/false$12780$xgWN3)
                                              (if (if g$ls/false$12780$xgWN3
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$12781$xgWN3)
                                                           (g$subversion?$12713$xgWN3
                                                             g$n$12781$xgWN3)))
                                                        g$ls/false$12780$xgWN3))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$12782$xgWN3)
                                                     (case-lambda
                                                       ((g$x$12783$xgWN3)
                                                        (= g$x$12783$xgWN3
                                                           (g$syntax->datum$10170$xgWN3
                                                             g$n$12782$xgWN3))))))
                                                  g$ls/false$12780$xgWN3)
                                                ((case-lambda
                                                   ((g$t$12784$xgWN3)
                                                    ((case-lambda
                                                       ((g$ls/false$12785$xgWN3)
                                                        (if (if g$ls/false$12785$xgWN3
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$12786$xgWN3
                                                                       g$sub*$12787$xgWN3)
                                                                     (eq? (g$syntax->datum$10170$xgWN3
                                                                            g$p?$12786$xgWN3)
                                                                          'and)))
                                                                  g$ls/false$12785$xgWN3))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$12788$xgWN3
                                                                 g$sub*$12789$xgWN3)
                                                               ((case-lambda
                                                                  ((g$p*$12790$xgWN3)
                                                                   (case-lambda
                                                                     ((g$x$12791$xgWN3)
                                                                      (g$for-all$6083$xgWN3
                                                                        (case-lambda
                                                                          ((g$p$12792$xgWN3)
                                                                           (g$p$12792$xgWN3
                                                                             g$x$12791$xgWN3)))
                                                                        g$p*$12790$xgWN3)))))
                                                                (g$map$6085$xgWN3
                                                                  g$subversion-pred$12714$xgWN3
                                                                  g$sub*$12789$xgWN3))))
                                                            g$ls/false$12785$xgWN3)
                                                          ((case-lambda
                                                             ((g$t$12793$xgWN3)
                                                              ((case-lambda
                                                                 ((g$ls/false$12794$xgWN3)
                                                                  (if (if g$ls/false$12794$xgWN3
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$12795$xgWN3
                                                                                 g$sub*$12796$xgWN3)
                                                                               (eq? (g$syntax->datum$10170$xgWN3
                                                                                      g$p?$12795$xgWN3)
                                                                                    'or)))
                                                                            g$ls/false$12794$xgWN3))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$12797$xgWN3
                                                                           g$sub*$12798$xgWN3)
                                                                         ((case-lambda
                                                                            ((g$p*$12799$xgWN3)
                                                                             (case-lambda
                                                                               ((g$x$12800$xgWN3)
                                                                                (g$exists$6084$xgWN3
                                                                                  (case-lambda
                                                                                    ((g$p$12801$xgWN3)
                                                                                     (g$p$12801$xgWN3
                                                                                       g$x$12800$xgWN3)))
                                                                                  g$p*$12799$xgWN3)))))
                                                                          (g$map$6085$xgWN3
                                                                            g$subversion-pred$12714$xgWN3
                                                                            g$sub*$12798$xgWN3))))
                                                                      g$ls/false$12794$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$t$12802$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$ls/false$12803$xgWN3)
                                                                            (if (if g$ls/false$12803$xgWN3
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$12804$xgWN3
                                                                                           g$sub$12805$xgWN3)
                                                                                         (eq? (g$syntax->datum$10170$xgWN3
                                                                                                g$p?$12804$xgWN3)
                                                                                              'not)))
                                                                                      g$ls/false$12803$xgWN3))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$12806$xgWN3
                                                                                     g$sub$12807$xgWN3)
                                                                                   ((case-lambda
                                                                                      ((g$p$12808$xgWN3)
                                                                                       (case-lambda
                                                                                         ((g$x$12809$xgWN3)
                                                                                          (not (g$p$12808$xgWN3
                                                                                                 g$x$12809$xgWN3))))))
                                                                                    (g$subversion-pred$12714$xgWN3
                                                                                      g$sub$12807$xgWN3))))
                                                                                g$ls/false$12803$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$t$12810$xgWN3)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$12811$xgWN3)
                                                                                      (if (if g$ls/false$12811$xgWN3
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$12812$xgWN3
                                                                                                     g$n$12813$xgWN3)
                                                                                                   (if (eq? (g$syntax->datum$10170$xgWN3
                                                                                                              g$p?$12812$xgWN3)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$12713$xgWN3
                                                                                                         g$n$12813$xgWN3))
                                                                                                     '#f)))
                                                                                                g$ls/false$12811$xgWN3))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$12814$xgWN3
                                                                                               g$n$12815$xgWN3)
                                                                                             (case-lambda
                                                                                               ((g$x$12816$xgWN3)
                                                                                                (<= g$x$12816$xgWN3
                                                                                                    (g$syntax->datum$10170$xgWN3
                                                                                                      g$n$12815$xgWN3))))))
                                                                                          g$ls/false$12811$xgWN3)
                                                                                        ((case-lambda
                                                                                           ((g$t$12817$xgWN3)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$12818$xgWN3)
                                                                                                (if (if g$ls/false$12818$xgWN3
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$12819$xgWN3
                                                                                                               g$n$12820$xgWN3)
                                                                                                             (if (eq? (g$syntax->datum$10170$xgWN3
                                                                                                                        g$p?$12819$xgWN3)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$12713$xgWN3
                                                                                                                   g$n$12820$xgWN3))
                                                                                                               '#f)))
                                                                                                          g$ls/false$12818$xgWN3))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$12821$xgWN3
                                                                                                         g$n$12822$xgWN3)
                                                                                                       (case-lambda
                                                                                                         ((g$x$12823$xgWN3)
                                                                                                          (>= g$x$12823$xgWN3
                                                                                                              (g$syntax->datum$10170$xgWN3
                                                                                                                g$n$12822$xgWN3))))))
                                                                                                    g$ls/false$12818$xgWN3)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$12824$xgWN3)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$12825$xgWN3)
                                                                                                          (if g$ls/false$12825$xgWN3
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$10167$xgWN3
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$12712$xgWN3
                                                                                                                   g$x*$12778$xgWN3)))
                                                                                                              g$ls/false$12825$xgWN3)
                                                                                                            (g$syntax-violation$10167$xgWN3
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$12824$xgWN3))))
                                                                                                       (g$syntax-dispatch$10049$xgWN3
                                                                                                         g$t$12824$xgWN3
                                                                                                         '_))))
                                                                                                   g$t$12817$xgWN3))))
                                                                                             (g$syntax-dispatch$10049$xgWN3
                                                                                               g$t$12817$xgWN3
                                                                                               '(any any)))))
                                                                                         g$t$12810$xgWN3))))
                                                                                   (g$syntax-dispatch$10049$xgWN3
                                                                                     g$t$12810$xgWN3
                                                                                     '(any any)))))
                                                                               g$t$12802$xgWN3))))
                                                                         (g$syntax-dispatch$10049$xgWN3
                                                                           g$t$12802$xgWN3
                                                                           '(any any)))))
                                                                     g$t$12793$xgWN3))))
                                                               (g$syntax-dispatch$10049$xgWN3
                                                                 g$t$12793$xgWN3
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$12784$xgWN3))))
                                                     (g$syntax-dispatch$10049$xgWN3
                                                       g$t$12784$xgWN3
                                                       '(any . each-any)))))
                                                 g$t$12779$xgWN3))))
                                           (g$syntax-dispatch$10049$xgWN3
                                             g$t$12779$xgWN3
                                             'any))))
                                       g$x*$12778$xgWN3))))
                                 (g$version-pred$12715$xgWN3
                                   (case-lambda
                                     ((g$x*$12738$xgWN3)
                                      ((case-lambda
                                         ((g$t$12739$xgWN3)
                                          ((case-lambda
                                             ((g$ls/false$12740$xgWN3)
                                              (if g$ls/false$12740$xgWN3
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$12741$xgWN3)
                                                        '#t))))
                                                  g$ls/false$12740$xgWN3)
                                                ((case-lambda
                                                   ((g$t$12742$xgWN3)
                                                    ((case-lambda
                                                       ((g$ls/false$12743$xgWN3)
                                                        (if (if g$ls/false$12743$xgWN3
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$12744$xgWN3
                                                                       g$ver*$12745$xgWN3)
                                                                     (eq? (g$syntax->datum$10170$xgWN3
                                                                            g$c$12744$xgWN3)
                                                                          'and)))
                                                                  g$ls/false$12743$xgWN3))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$12746$xgWN3
                                                                 g$ver*$12747$xgWN3)
                                                               ((case-lambda
                                                                  ((g$p*$12748$xgWN3)
                                                                   (case-lambda
                                                                     ((g$x$12749$xgWN3)
                                                                      (g$for-all$6083$xgWN3
                                                                        (case-lambda
                                                                          ((g$p$12750$xgWN3)
                                                                           (g$p$12750$xgWN3
                                                                             g$x$12749$xgWN3)))
                                                                        g$p*$12748$xgWN3)))))
                                                                (g$map$6085$xgWN3
                                                                  g$version-pred$12715$xgWN3
                                                                  g$ver*$12747$xgWN3))))
                                                            g$ls/false$12743$xgWN3)
                                                          ((case-lambda
                                                             ((g$t$12751$xgWN3)
                                                              ((case-lambda
                                                                 ((g$ls/false$12752$xgWN3)
                                                                  (if (if g$ls/false$12752$xgWN3
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$12753$xgWN3
                                                                                 g$ver*$12754$xgWN3)
                                                                               (eq? (g$syntax->datum$10170$xgWN3
                                                                                      g$c$12753$xgWN3)
                                                                                    'or)))
                                                                            g$ls/false$12752$xgWN3))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$12755$xgWN3
                                                                           g$ver*$12756$xgWN3)
                                                                         ((case-lambda
                                                                            ((g$p*$12757$xgWN3)
                                                                             (case-lambda
                                                                               ((g$x$12758$xgWN3)
                                                                                (g$exists$6084$xgWN3
                                                                                  (case-lambda
                                                                                    ((g$p$12759$xgWN3)
                                                                                     (g$p$12759$xgWN3
                                                                                       g$x$12758$xgWN3)))
                                                                                  g$p*$12757$xgWN3)))))
                                                                          (g$map$6085$xgWN3
                                                                            g$version-pred$12715$xgWN3
                                                                            g$ver*$12756$xgWN3))))
                                                                      g$ls/false$12752$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$t$12760$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$ls/false$12761$xgWN3)
                                                                            (if (if g$ls/false$12761$xgWN3
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$12762$xgWN3
                                                                                           g$ver$12763$xgWN3)
                                                                                         (eq? (g$syntax->datum$10170$xgWN3
                                                                                                g$c$12762$xgWN3)
                                                                                              'not)))
                                                                                      g$ls/false$12761$xgWN3))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$12764$xgWN3
                                                                                     g$ver$12765$xgWN3)
                                                                                   ((case-lambda
                                                                                      ((g$p$12766$xgWN3)
                                                                                       (case-lambda
                                                                                         ((g$x$12767$xgWN3)
                                                                                          (not (g$p$12766$xgWN3
                                                                                                 g$x$12767$xgWN3))))))
                                                                                    (g$version-pred$12715$xgWN3
                                                                                      g$ver$12765$xgWN3))))
                                                                                g$ls/false$12761$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$t$12768$xgWN3)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$12769$xgWN3)
                                                                                      (if g$ls/false$12769$xgWN3
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$12770$xgWN3)
                                                                                             ((case-lambda
                                                                                                ((g$p*$12771$xgWN3)
                                                                                                 (case-lambda
                                                                                                   ((g$x$12772$xgWN3)
                                                                                                    ((letrec ((g$f$12773$xgWN3
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$12774$xgWN3
                                                                                                                     g$x$12775$xgWN3)
                                                                                                                   (if (null?
                                                                                                                         g$p*$12774$xgWN3)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$12775$xgWN3)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$12774$xgWN3)
                                                                                                                            (car g$x$12775$xgWN3))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$12773$xgWN3
                                                                                                                             (cdr g$p*$12774$xgWN3)
                                                                                                                             (cdr g$x$12775$xgWN3)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$12773$xgWN3)
                                                                                                     g$p*$12771$xgWN3
                                                                                                     g$x$12772$xgWN3)))))
                                                                                              (g$map$6085$xgWN3
                                                                                                g$subversion-pred$12714$xgWN3
                                                                                                g$sub*$12770$xgWN3))))
                                                                                          g$ls/false$12769$xgWN3)
                                                                                        ((case-lambda
                                                                                           ((g$t$12776$xgWN3)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$12777$xgWN3)
                                                                                                (if g$ls/false$12777$xgWN3
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$10167$xgWN3
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$12712$xgWN3
                                                                                                         g$x*$12738$xgWN3)))
                                                                                                    g$ls/false$12777$xgWN3)
                                                                                                  (g$syntax-violation$10167$xgWN3
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$12776$xgWN3))))
                                                                                             (g$syntax-dispatch$10049$xgWN3
                                                                                               g$t$12776$xgWN3
                                                                                               '_))))
                                                                                         g$t$12768$xgWN3))))
                                                                                   (g$syntax-dispatch$10049$xgWN3
                                                                                     g$t$12768$xgWN3
                                                                                     'each-any))))
                                                                               g$t$12760$xgWN3))))
                                                                         (g$syntax-dispatch$10049$xgWN3
                                                                           g$t$12760$xgWN3
                                                                           '(any any)))))
                                                                     g$t$12751$xgWN3))))
                                                               (g$syntax-dispatch$10049$xgWN3
                                                                 g$t$12751$xgWN3
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$12742$xgWN3))))
                                                     (g$syntax-dispatch$10049$xgWN3
                                                       g$t$12742$xgWN3
                                                       '(any . each-any)))))
                                                 g$t$12739$xgWN3))))
                                           (g$syntax-dispatch$10049$xgWN3
                                             g$t$12739$xgWN3
                                             '()))))
                                       g$x*$12738$xgWN3)))))
                         ((letrec ((g$f$12716$xgWN3
                                     (case-lambda
                                       ((g$x$12717$xgWN3)
                                        ((case-lambda
                                           ((g$t$12718$xgWN3)
                                            ((case-lambda
                                               ((g$ls/false$12719$xgWN3)
                                                (if g$ls/false$12719$xgWN3
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$12720$xgWN3)
                                                       (values
                                                         '()
                                                         (g$version-pred$12715$xgWN3
                                                           g$version-spec*$12720$xgWN3))))
                                                    g$ls/false$12719$xgWN3)
                                                  ((case-lambda
                                                     ((g$t$12721$xgWN3)
                                                      ((case-lambda
                                                         ((g$ls/false$12722$xgWN3)
                                                          (if (if g$ls/false$12722$xgWN3
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$12723$xgWN3
                                                                         g$x*$12724$xgWN3)
                                                                       (g$idsyn?$12611$xgWN3
                                                                         g$x$12723$xgWN3)))
                                                                    g$ls/false$12722$xgWN3))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$12725$xgWN3
                                                                   g$x*$12726$xgWN3)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$12716$xgWN3
                                                                        g$x*$12726$xgWN3)))
                                                                   (case-lambda
                                                                     ((g$name$12729$xgWN3
                                                                        g$pred$12730$xgWN3)
                                                                      ((case-lambda
                                                                         ((g$pred$12731$xgWN3
                                                                            g$name$12732$xgWN3)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$10170$xgWN3
                                                                                g$x$12725$xgWN3)
                                                                              g$name$12732$xgWN3)
                                                                            g$pred$12731$xgWN3)))
                                                                       g$pred$12730$xgWN3
                                                                       g$name$12729$xgWN3))))))
                                                              g$ls/false$12722$xgWN3)
                                                            ((case-lambda
                                                               ((g$t$12733$xgWN3)
                                                                ((case-lambda
                                                                   ((g$ls/false$12734$xgWN3)
                                                                    (if g$ls/false$12734$xgWN3
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$12735$xgWN3)
                                                                                '#t)))))
                                                                        g$ls/false$12734$xgWN3)
                                                                      ((case-lambda
                                                                         ((g$t$12736$xgWN3)
                                                                          ((case-lambda
                                                                             ((g$ls/false$12737$xgWN3)
                                                                              (if g$ls/false$12737$xgWN3
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$10167$xgWN3
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$12712$xgWN3)))
                                                                                  g$ls/false$12737$xgWN3)
                                                                                (g$syntax-violation$10167$xgWN3
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$12736$xgWN3))))
                                                                           (g$syntax-dispatch$10049$xgWN3
                                                                             g$t$12736$xgWN3
                                                                             '_))))
                                                                       g$t$12733$xgWN3))))
                                                                 (g$syntax-dispatch$10049$xgWN3
                                                                   g$t$12733$xgWN3
                                                                   '()))))
                                                             g$t$12721$xgWN3))))
                                                       (g$syntax-dispatch$10049$xgWN3
                                                         g$t$12721$xgWN3
                                                         '(any . any)))))
                                                   g$t$12718$xgWN3))))
                                             (g$syntax-dispatch$10049$xgWN3
                                               g$t$12718$xgWN3
                                               '(each-any)))))
                                         g$x$12717$xgWN3)))))
                            g$f$12716$xgWN3)
                          g$spec$12712$xgWN3)))))
                  (g$import-library$12619$xgWN3
                    (case-lambda
                      ((g$spec*$12704$xgWN3)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$12618$xgWN3
                              g$spec*$12704$xgWN3)))
                         (case-lambda
                           ((g$name$12707$xgWN3 g$pred$12708$xgWN3)
                            ((case-lambda
                               ((g$pred$12709$xgWN3 g$name$12710$xgWN3)
                                (begin
                                  (if (null? g$name$12710$xgWN3)
                                    (g$syntax-violation$10167$xgWN3
                                      'import
                                      '"empty library name"
                                      g$spec*$12704$xgWN3)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$12711$xgWN3)
                                      (begin
                                        (if (not g$lib$12711$xgWN3)
                                          (g$syntax-violation$10167$xgWN3
                                            'import
                                            '"cannot find library with required name"
                                            g$name$12710$xgWN3)
                                          (void))
                                        (if (not (g$pred$12709$xgWN3
                                                   (g$library-version$9378$xgWN3
                                                     g$lib$12711$xgWN3)))
                                          (g$syntax-violation$10167$xgWN3
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$12704$xgWN3
                                            g$lib$12711$xgWN3)
                                          (void))
                                        ((g$imp-collector$10105$xgWN3)
                                         g$lib$12711$xgWN3)
                                        (g$library-subst$9382$xgWN3
                                          g$lib$12711$xgWN3))))
                                   (g$find-library-by-name$9418$xgWN3
                                     g$name$12710$xgWN3)))))
                             g$pred$12708$xgWN3
                             g$name$12707$xgWN3)))))))
                  (g$get-import$12620$xgWN3
                    (case-lambda
                      ((g$spec$12633$xgWN3)
                       ((case-lambda
                          ((g$t$12634$xgWN3)
                           ((case-lambda
                              ((g$ls/false$12635$xgWN3)
                               (if (if g$ls/false$12635$xgWN3
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$12636$xgWN3 g$x*$12637$xgWN3)
                                            (not (g$memq$6077$xgWN3
                                                   (g$syntax->datum$10170$xgWN3
                                                     g$x$12636$xgWN3)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$12635$xgWN3))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$12638$xgWN3 g$x*$12639$xgWN3)
                                      (g$import-library$12619$xgWN3
                                        (cons
                                          g$x$12638$xgWN3
                                          g$x*$12639$xgWN3))))
                                   g$ls/false$12635$xgWN3)
                                 ((case-lambda
                                    ((g$t$12640$xgWN3)
                                     ((case-lambda
                                        ((g$ls/false$12641$xgWN3)
                                         (if (if g$ls/false$12641$xgWN3
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$12642$xgWN3
                                                        g$isp$12643$xgWN3
                                                        g$old*$12644$xgWN3
                                                        g$new*$12645$xgWN3)
                                                      (if (eq? (g$syntax->datum$10170$xgWN3
                                                                 g$rename$12642$xgWN3)
                                                               'rename)
                                                        (if (g$for-all$6083$xgWN3
                                                              g$idsyn?$12611$xgWN3
                                                              g$old*$12644$xgWN3)
                                                          (begin
                                                            '#f
                                                            (g$for-all$6083$xgWN3
                                                              g$idsyn?$12611$xgWN3
                                                              g$new*$12645$xgWN3))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$12641$xgWN3))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$12646$xgWN3
                                                  g$isp$12647$xgWN3
                                                  g$old*$12648$xgWN3
                                                  g$new*$12649$xgWN3)
                                                ((case-lambda
                                                   ((g$subst$12650$xgWN3
                                                      g$old*$12651$xgWN3
                                                      g$new*$12652$xgWN3)
                                                    ((case-lambda
                                                       ((g$old-label*$12653$xgWN3)
                                                        ((case-lambda
                                                           ((g$subst$12654$xgWN3)
                                                            (g$merge-substs$12613$xgWN3
                                                              (g$map$6085$xgWN3
                                                                cons
                                                                g$new*$12652$xgWN3
                                                                g$old-label*$12653$xgWN3)
                                                              g$subst$12654$xgWN3)))
                                                         (g$rem*$12616$xgWN3
                                                           g$old*$12651$xgWN3
                                                           g$subst$12650$xgWN3))))
                                                     (g$find*$12615$xgWN3
                                                       g$old*$12651$xgWN3
                                                       g$subst$12650$xgWN3))))
                                                 (g$get-import$12620$xgWN3
                                                   g$isp$12647$xgWN3)
                                                 (g$map$6085$xgWN3
                                                   g$syntax->datum$10170$xgWN3
                                                   g$old*$12648$xgWN3)
                                                 (g$map$6085$xgWN3
                                                   g$syntax->datum$10170$xgWN3
                                                   g$new*$12649$xgWN3))))
                                             g$ls/false$12641$xgWN3)
                                           ((case-lambda
                                              ((g$t$12655$xgWN3)
                                               ((case-lambda
                                                  ((g$ls/false$12656$xgWN3)
                                                   (if (if g$ls/false$12656$xgWN3
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$12657$xgWN3
                                                                  g$isp$12658$xgWN3
                                                                  g$sym*$12659$xgWN3)
                                                                (if (eq? (g$syntax->datum$10170$xgWN3
                                                                           g$except$12657$xgWN3)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$6083$xgWN3
                                                                      g$idsyn?$12611$xgWN3
                                                                      g$sym*$12659$xgWN3))
                                                                  '#f)))
                                                             g$ls/false$12656$xgWN3))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$12660$xgWN3
                                                            g$isp$12661$xgWN3
                                                            g$sym*$12662$xgWN3)
                                                          ((case-lambda
                                                             ((g$subst$12663$xgWN3)
                                                              (g$rem*$12616$xgWN3
                                                                (g$map$6085$xgWN3
                                                                  g$syntax->datum$10170$xgWN3
                                                                  g$sym*$12662$xgWN3)
                                                                g$subst$12663$xgWN3)))
                                                           (g$get-import$12620$xgWN3
                                                             g$isp$12661$xgWN3))))
                                                       g$ls/false$12656$xgWN3)
                                                     ((case-lambda
                                                        ((g$t$12664$xgWN3)
                                                         ((case-lambda
                                                            ((g$ls/false$12665$xgWN3)
                                                             (if (if g$ls/false$12665$xgWN3
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$12666$xgWN3
                                                                            g$isp$12667$xgWN3
                                                                            g$sym*$12668$xgWN3)
                                                                          (if (eq? (g$syntax->datum$10170$xgWN3
                                                                                     g$only$12666$xgWN3)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$6083$xgWN3
                                                                                g$idsyn?$12611$xgWN3
                                                                                g$sym*$12668$xgWN3))
                                                                            '#f)))
                                                                       g$ls/false$12665$xgWN3))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$12669$xgWN3
                                                                      g$isp$12670$xgWN3
                                                                      g$sym*$12671$xgWN3)
                                                                    ((case-lambda
                                                                       ((g$subst$12672$xgWN3
                                                                          g$sym*$12673$xgWN3)
                                                                        ((case-lambda
                                                                           ((g$sym*$12674$xgWN3)
                                                                            ((case-lambda
                                                                               ((g$lab*$12675$xgWN3)
                                                                                (g$map$6085$xgWN3
                                                                                  cons
                                                                                  g$sym*$12674$xgWN3
                                                                                  g$lab*$12675$xgWN3)))
                                                                             (g$find*$12615$xgWN3
                                                                               g$sym*$12674$xgWN3
                                                                               g$subst$12672$xgWN3))))
                                                                         (g$remove-dups$12617$xgWN3
                                                                           g$sym*$12673$xgWN3))))
                                                                     (g$get-import$12620$xgWN3
                                                                       g$isp$12670$xgWN3)
                                                                     (g$map$6085$xgWN3
                                                                       g$syntax->datum$10170$xgWN3
                                                                       g$sym*$12671$xgWN3))))
                                                                 g$ls/false$12665$xgWN3)
                                                               ((case-lambda
                                                                  ((g$t$12676$xgWN3)
                                                                   ((case-lambda
                                                                      ((g$ls/false$12677$xgWN3)
                                                                       (if (if g$ls/false$12677$xgWN3
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$12678$xgWN3
                                                                                      g$isp$12679$xgWN3
                                                                                      g$p$12680$xgWN3)
                                                                                    (if (eq? (g$syntax->datum$10170$xgWN3
                                                                                               g$prefix$12678$xgWN3)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$12611$xgWN3
                                                                                          g$p$12680$xgWN3))
                                                                                      '#f)))
                                                                                 g$ls/false$12677$xgWN3))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$12681$xgWN3
                                                                                g$isp$12682$xgWN3
                                                                                g$p$12683$xgWN3)
                                                                              ((case-lambda
                                                                                 ((g$subst$12684$xgWN3
                                                                                    g$prefix$12685$xgWN3)
                                                                                  (g$map$6085$xgWN3
                                                                                    (case-lambda
                                                                                      ((g$x$12686$xgWN3)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$12685$xgWN3
                                                                                             (symbol->string
                                                                                               (car g$x$12686$xgWN3))))
                                                                                         (cdr g$x$12686$xgWN3))))
                                                                                    g$subst$12684$xgWN3)))
                                                                               (g$get-import$12620$xgWN3
                                                                                 g$isp$12682$xgWN3)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$10170$xgWN3
                                                                                   g$p$12683$xgWN3)))))
                                                                           g$ls/false$12677$xgWN3)
                                                                         ((case-lambda
                                                                            ((g$t$12687$xgWN3)
                                                                             ((case-lambda
                                                                                ((g$ls/false$12688$xgWN3)
                                                                                 (if (if g$ls/false$12688$xgWN3
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$12689$xgWN3
                                                                                                g$spec*$12690$xgWN3)
                                                                                              (eq? (g$syntax->datum$10170$xgWN3
                                                                                                     g$library$12689$xgWN3)
                                                                                                   'library)))
                                                                                           g$ls/false$12688$xgWN3))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$12691$xgWN3
                                                                                          g$spec*$12692$xgWN3)
                                                                                        (g$import-library$12619$xgWN3
                                                                                          g$spec*$12692$xgWN3)))
                                                                                     g$ls/false$12688$xgWN3)
                                                                                   ((case-lambda
                                                                                      ((g$t$12693$xgWN3)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$12694$xgWN3)
                                                                                           (if (if g$ls/false$12694$xgWN3
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$12695$xgWN3
                                                                                                          g$isp$12696$xgWN3
                                                                                                          g$rest$12697$xgWN3)
                                                                                                        (eq? (g$syntax->datum$10170$xgWN3
                                                                                                               g$for$12695$xgWN3)
                                                                                                             'for)))
                                                                                                     g$ls/false$12694$xgWN3))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$12698$xgWN3
                                                                                                    g$isp$12699$xgWN3
                                                                                                    g$rest$12700$xgWN3)
                                                                                                  (g$get-import$12620$xgWN3
                                                                                                    g$isp$12699$xgWN3)))
                                                                                               g$ls/false$12694$xgWN3)
                                                                                             ((case-lambda
                                                                                                ((g$t$12701$xgWN3)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$12702$xgWN3)
                                                                                                     (if g$ls/false$12702$xgWN3
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$12703$xgWN3)
                                                                                                            (g$syntax-violation$10167$xgWN3
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$12703$xgWN3)))
                                                                                                         g$ls/false$12702$xgWN3)
                                                                                                       (g$syntax-violation$10167$xgWN3
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$12701$xgWN3))))
                                                                                                  (g$syntax-dispatch$10049$xgWN3
                                                                                                    g$t$12701$xgWN3
                                                                                                    'any))))
                                                                                              g$t$12693$xgWN3))))
                                                                                        (g$syntax-dispatch$10049$xgWN3
                                                                                          g$t$12693$xgWN3
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$12687$xgWN3))))
                                                                              (g$syntax-dispatch$10049$xgWN3
                                                                                g$t$12687$xgWN3
                                                                                '(any each-any)))))
                                                                          g$t$12676$xgWN3))))
                                                                    (g$syntax-dispatch$10049$xgWN3
                                                                      g$t$12676$xgWN3
                                                                      '(any any
                                                                            any)))))
                                                                g$t$12664$xgWN3))))
                                                          (g$syntax-dispatch$10049$xgWN3
                                                            g$t$12664$xgWN3
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$12655$xgWN3))))
                                                (g$syntax-dispatch$10049$xgWN3
                                                  g$t$12655$xgWN3
                                                  '(any any . each-any)))))
                                            g$t$12640$xgWN3))))
                                      (g$syntax-dispatch$10049$xgWN3
                                        g$t$12640$xgWN3
                                        '(any any . #(each (any any)))))))
                                  g$t$12634$xgWN3))))
                            (g$syntax-dispatch$10049$xgWN3
                              g$t$12634$xgWN3
                              '(any . each-any)))))
                        g$spec$12633$xgWN3))))
                  (g$add-imports!$12621$xgWN3
                    (case-lambda
                      ((g$imp$12625$xgWN3 g$h$12626$xgWN3)
                       ((case-lambda
                          ((g$subst$12627$xgWN3)
                           (g$for-each$6086$xgWN3
                             (case-lambda
                               ((g$x$12628$xgWN3)
                                ((case-lambda
                                   ((g$name$12629$xgWN3 g$label$12630$xgWN3)
                                    ((case-lambda
                                       ((g$t$12631$xgWN3)
                                        (if g$t$12631$xgWN3
                                          ((case-lambda
                                             ((g$l$12632$xgWN3)
                                              (if (not (eq? g$l$12632$xgWN3
                                                            g$label$12630$xgWN3))
                                                (g$dup-error$12612$xgWN3
                                                  g$name$12629$xgWN3)
                                                (void))))
                                           g$t$12631$xgWN3)
                                          (g$hashtable-set!$6859$xgWN3
                                            g$h$12626$xgWN3
                                            g$name$12629$xgWN3
                                            g$label$12630$xgWN3))))
                                     (g$hashtable-ref$6858$xgWN3
                                       g$h$12626$xgWN3
                                       g$name$12629$xgWN3
                                       '#f))))
                                 (car g$x$12628$xgWN3)
                                 (cdr g$x$12628$xgWN3))))
                             g$subst$12627$xgWN3)))
                        (g$get-import$12620$xgWN3 g$imp$12625$xgWN3))))))
          ((letrec ((g$f$12622$xgWN3
                      (case-lambda
                        ((g$imp*$12623$xgWN3 g$h$12624$xgWN3)
                         (if (null? g$imp*$12623$xgWN3)
                           (hashtable-entries g$h$12624$xgWN3)
                           (begin
                             (g$add-imports!$12621$xgWN3
                               (car g$imp*$12623$xgWN3)
                               g$h$12624$xgWN3)
                             (g$f$12622$xgWN3
                               (cdr g$imp*$12623$xgWN3)
                               g$h$12624$xgWN3)))))))
             g$f$12622$xgWN3)
           g$imp*$12610$xgWN3
           (g$make-eq-hashtable$6855$xgWN3))))))
   (g$make-top-rib$10101$xgWN3
     g$make-top-rib$13640$xgWN3
     (case-lambda
       ((g$names$12872$xgWN3 g$labels$12873$xgWN3)
        ((case-lambda
           ((g$rib$12874$xgWN3)
            (begin
              (g$vector-for-each$6817$xgWN3
                (case-lambda
                  ((g$name$12875$xgWN3 g$label$12876$xgWN3)
                   (begin
                     (if (not (g$symbol?$6756$xgWN3 g$name$12875$xgWN3))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$12875$xgWN3)
                       (void))
                     (g$extend-rib/nc!$9648$xgWN3
                       g$rib$12874$xgWN3
                       (g$make-stx$9659$xgWN3
                         g$name$12875$xgWN3
                         g$top-mark*$9619$xgWN3
                         '()
                         '())
                       g$label$12876$xgWN3))))
                g$names$12872$xgWN3
                g$labels$12873$xgWN3)
              g$rib$12874$xgWN3)))
         (g$make-cache-rib$9645$xgWN3)))))
   (g$make-collector$10102$xgWN3
     g$make-collector$13641$xgWN3
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$12877$xgWN3)
            (case-lambda
              (() g$ls$12877$xgWN3)
              ((g$x$12878$xgWN3)
               (set! g$ls$12877$xgWN3
                 (g$set-cons$9616$xgWN3 g$x$12878$xgWN3 g$ls$12877$xgWN3))))))
         '()))))
   (g$inv-collector$10103$xgWN3
     g$inv-collector$13642$xgWN3
     (g$make-parameter$8910$xgWN3
       (case-lambda
         (g$args$12879$xgWN3
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$12880$xgWN3)
          (begin
            (if (not (g$procedure?$6758$xgWN3 g$x$12880$xgWN3))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$12880$xgWN3)
              (void))
            g$x$12880$xgWN3)))))
   (g$vis-collector$10104$xgWN3
     g$vis-collector$13643$xgWN3
     (g$make-parameter$8910$xgWN3
       (case-lambda
         (g$args$12881$xgWN3
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$12882$xgWN3)
          (begin
            (if (not (g$procedure?$6758$xgWN3 g$x$12882$xgWN3))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$12882$xgWN3)
              (void))
            g$x$12882$xgWN3)))))
   (g$imp-collector$10105$xgWN3
     g$imp-collector$13644$xgWN3
     (g$make-parameter$8910$xgWN3
       (case-lambda
         (g$args$12883$xgWN3
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$12884$xgWN3)
          (begin
            (if (not (g$procedure?$6758$xgWN3 g$x$12884$xgWN3))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$12884$xgWN3)
              (void))
            g$x$12884$xgWN3)))))
   (g$chi-library-internal$10106$xgWN3
     g$chi-library-internal$13645$xgWN3
     (case-lambda
       ((g$e*$12885$xgWN3 g$rib$12886$xgWN3 g$mix?$12887$xgWN3)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$10095$xgWN3
               g$e*$12885$xgWN3
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$12886$xgWN3
               g$mix?$12887$xgWN3
               '#t)))
          (case-lambda
            ((g$e*$12896$xgWN3
               g$r$12897$xgWN3
               g$mr$12898$xgWN3
               g$lex*$12899$xgWN3
               g$rhs*$12900$xgWN3
               g$mod**$12901$xgWN3
               g$_kwd*$12902$xgWN3
               g$exp*$12903$xgWN3)
             ((case-lambda
                ((g$exp*$12904$xgWN3
                   g$_kwd*$12905$xgWN3
                   g$mod**$12906$xgWN3
                   g$rhs*$12907$xgWN3
                   g$lex*$12908$xgWN3
                   g$mr$12909$xgWN3
                   g$r$12910$xgWN3
                   g$e*$12911$xgWN3)
                 (values
                   (append
                     (apply append (g$reverse$6763$xgWN3 g$mod**$12906$xgWN3))
                     g$e*$12911$xgWN3)
                   g$r$12910$xgWN3
                   g$mr$12909$xgWN3
                   (g$reverse$6763$xgWN3 g$lex*$12908$xgWN3)
                   (g$reverse$6763$xgWN3 g$rhs*$12907$xgWN3)
                   g$exp*$12904$xgWN3)))
              g$exp*$12903$xgWN3
              g$_kwd*$12902$xgWN3
              g$mod**$12901$xgWN3
              g$rhs*$12900$xgWN3
              g$lex*$12899$xgWN3
              g$mr$12898$xgWN3
              g$r$12897$xgWN3
              g$e*$12896$xgWN3)))))))
   (g$chi-interaction-expr$10107$xgWN3
     g$chi-interaction-expr$13646$xgWN3
     (case-lambda
       ((g$e$12912$xgWN3 g$rib$12913$xgWN3 g$r$12914$xgWN3)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$10095$xgWN3
               (list g$e$12912$xgWN3)
               g$r$12914$xgWN3
               g$r$12914$xgWN3
               '()
               '()
               '()
               '()
               '()
               g$rib$12913$xgWN3
               '#t
               '#f)))
          (case-lambda
            ((g$e*$12923$xgWN3
               g$r$12924$xgWN3
               g$mr$12925$xgWN3
               g$lex*$12926$xgWN3
               g$rhs*$12927$xgWN3
               g$mod**$12928$xgWN3
               g$_kwd*$12929$xgWN3
               g$_exp*$12930$xgWN3)
             ((case-lambda
                ((g$_exp*$12931$xgWN3
                   g$_kwd*$12932$xgWN3
                   g$mod**$12933$xgWN3
                   g$rhs*$12934$xgWN3
                   g$lex*$12935$xgWN3
                   g$mr$12936$xgWN3
                   g$r$12937$xgWN3
                   g$e*$12938$xgWN3)
                 ((case-lambda
                    ((g$e*$12939$xgWN3)
                     ((case-lambda
                        ((g$e$12940$xgWN3)
                         (values g$e$12940$xgWN3 g$r$12937$xgWN3)))
                      (if (null? g$e*$12939$xgWN3)
                        (g$build-void$9612$xgWN3)
                        (if (null? (cdr g$e*$12939$xgWN3))
                          (car g$e*$12939$xgWN3)
                          (g$build-sequence$9611$xgWN3
                            '#f
                            g$e*$12939$xgWN3))))))
                  (g$expand-interaction-rhs*/init*$10074$xgWN3
                    (g$reverse$6763$xgWN3 g$lex*$12935$xgWN3)
                    (g$reverse$6763$xgWN3 g$rhs*$12934$xgWN3)
                    (append
                      (apply append (g$reverse$6763$xgWN3 g$mod**$12933$xgWN3))
                      g$e*$12938$xgWN3)
                    g$r$12937$xgWN3
                    g$mr$12936$xgWN3))))
              g$_exp*$12930$xgWN3
              g$_kwd*$12929$xgWN3
              g$mod**$12928$xgWN3
              g$rhs*$12927$xgWN3
              g$lex*$12926$xgWN3
              g$mr$12925$xgWN3
              g$r$12924$xgWN3
              g$e*$12923$xgWN3)))))))
   (g$library-body-expander$10108$xgWN3
     g$library-body-expander$13647$xgWN3
     (case-lambda
       ((g$name$12941$xgWN3
          g$main-exp*$12942$xgWN3
          g$imp*$12943$xgWN3
          g$b*$12944$xgWN3
          g$mix?$12945$xgWN3)
        (letrec* ((g$itc$12946$xgWN3 (g$make-collector$10102$xgWN3)))
          ((case-lambda
             ((g$imp-collector$12951$xgWN3
                g$top-level-context$12952$xgWN3
                g$imp-collector$12953$xgWN3
                g$top-level-context$12954$xgWN3)
              ((case-lambda
                 ((g$swap$12955$xgWN3)
                  (dynamic-wind
                    g$swap$12955$xgWN3
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$10100$xgWN3
                              g$imp*$12943$xgWN3)))
                         (case-lambda
                           ((g$subst-names$12958$xgWN3
                              g$subst-labels$12959$xgWN3)
                            ((case-lambda
                               ((g$subst-labels$12960$xgWN3
                                  g$subst-names$12961$xgWN3)
                                ((case-lambda
                                   ((g$rib$12962$xgWN3)
                                    (letrec* ((g$wrap$12963$xgWN3
                                                (case-lambda
                                                  ((g$x$13025$xgWN3)
                                                   (g$make-stx$9659$xgWN3
                                                     g$x$13025$xgWN3
                                                     g$top-mark*$9619$xgWN3
                                                     (list g$rib$12962$xgWN3)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$12964$xgWN3
                                            g$main-exp*$12965$xgWN3
                                            g$rtc$12966$xgWN3
                                            g$vtc$12967$xgWN3)
                                          ((case-lambda
                                             ((g$inv-collector$12972$xgWN3
                                                g$vis-collector$12973$xgWN3
                                                g$inv-collector$12974$xgWN3
                                                g$vis-collector$12975$xgWN3)
                                              ((case-lambda
                                                 ((g$swap$12976$xgWN3)
                                                  (dynamic-wind
                                                    g$swap$12976$xgWN3
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$10106$xgWN3
                                                              g$b*$12964$xgWN3
                                                              g$rib$12962$xgWN3
                                                              g$mix?$12945$xgWN3)))
                                                         (case-lambda
                                                           ((g$init*$12983$xgWN3
                                                              g$r$12984$xgWN3
                                                              g$mr$12985$xgWN3
                                                              g$lex*$12986$xgWN3
                                                              g$rhs*$12987$xgWN3
                                                              g$internal-exp*$12988$xgWN3)
                                                            ((case-lambda
                                                               ((g$internal-exp*$12989$xgWN3
                                                                  g$rhs*$12990$xgWN3
                                                                  g$lex*$12991$xgWN3
                                                                  g$mr$12992$xgWN3
                                                                  g$r$12993$xgWN3
                                                                  g$init*$12994$xgWN3)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$10097$xgWN3
                                                                       (append
                                                                         g$main-exp*$12965$xgWN3
                                                                         g$internal-exp*$12989$xgWN3))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$12997$xgWN3
                                                                       g$exp-id*$12998$xgWN3)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$12999$xgWN3
                                                                           g$exp-name*$13000$xgWN3)
                                                                         (begin
                                                                           (g$seal-rib!$9650$xgWN3
                                                                             g$rib$12962$xgWN3)
                                                                           ((case-lambda
                                                                              ((g$init*$13001$xgWN3)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$13002$xgWN3)
                                                                                   (begin
                                                                                     (g$unseal-rib!$9651$xgWN3
                                                                                       g$rib$12962$xgWN3)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$13003$xgWN3
                                                                                           g$export-subst$13004$xgWN3)
                                                                                         (letrec* ((g$errstr$13005$xgWN3
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$10156$xgWN3
                                                                                                  g$lex*$12991$xgWN3
                                                                                                  g$loc*$13003$xgWN3
                                                                                                  g$r$12993$xgWN3)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$13009$xgWN3
                                                                                                  g$global*$13010$xgWN3
                                                                                                  g$macro*$13011$xgWN3)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$13012$xgWN3
                                                                                                      g$global*$13013$xgWN3
                                                                                                      g$export-env$13014$xgWN3)
                                                                                                    (begin
                                                                                                      (g$for-each$6086$xgWN3
                                                                                                        (case-lambda
                                                                                                          ((g$s$13015$xgWN3)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$13016$xgWN3
                                                                                                                 g$label$13017$xgWN3)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$13018$xgWN3)
                                                                                                                   (if g$p$13018$xgWN3
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$13019$xgWN3)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$13020$xgWN3)
                                                                                                                             (if (eq? g$type$13020$xgWN3
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$10167$xgWN3
                                                                                                                                 'export
                                                                                                                                 g$errstr$13005$xgWN3
                                                                                                                                 g$name$13016$xgWN3)
                                                                                                                               (void))))
                                                                                                                          (car g$b$13019$xgWN3))))
                                                                                                                      (cdr g$p$13018$xgWN3))
                                                                                                                     (void))))
                                                                                                                (g$assq$6073$xgWN3
                                                                                                                  g$label$13017$xgWN3
                                                                                                                  g$export-env$13014$xgWN3))))
                                                                                                            (car g$s$13015$xgWN3)
                                                                                                            (cdr g$s$13015$xgWN3))))
                                                                                                        g$export-subst$13004$xgWN3)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$13021$xgWN3
                                                                                                            g$invoke-definitions$13022$xgWN3)
                                                                                                          (values
                                                                                                            (g$itc$12946$xgWN3)
                                                                                                            (g$rtc$12966$xgWN3)
                                                                                                            (g$vtc$12967$xgWN3)
                                                                                                            (g$build-sequence$9611$xgWN3
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$13022$xgWN3
                                                                                                                (list
                                                                                                                  g$invoke-body$13021$xgWN3)))
                                                                                                            g$macro*$13012$xgWN3
                                                                                                            g$export-subst$13004$xgWN3
                                                                                                            g$export-env$13014$xgWN3)))
                                                                                                       (g$build-library-letrec*$9615$xgWN3
                                                                                                         '#f
                                                                                                         g$name$12941$xgWN3
                                                                                                         g$lex*$12991$xgWN3
                                                                                                         g$loc*$13003$xgWN3
                                                                                                         g$rhs*$13002$xgWN3
                                                                                                         (if (null?
                                                                                                               g$init*$13001$xgWN3)
                                                                                                           (g$build-void$9612$xgWN3)
                                                                                                           (g$build-sequence$9611$xgWN3
                                                                                                             '#f
                                                                                                             g$init*$13001$xgWN3)))
                                                                                                       (g$map$6085$xgWN3
                                                                                                         g$build-global-define$9607$xgWN3
                                                                                                         (g$map$6085$xgWN3
                                                                                                           cdr
                                                                                                           g$global*$13013$xgWN3))))))
                                                                                                 g$macro*$13011$xgWN3
                                                                                                 g$global*$13010$xgWN3
                                                                                                 g$export-env$13009$xgWN3)))))))
                                                                                      (g$map$6085$xgWN3
                                                                                        g$gen-global$9622$xgWN3
                                                                                        g$lex*$12991$xgWN3)
                                                                                      (g$make-export-subst$10155$xgWN3
                                                                                        g$exp-name*$13000$xgWN3
                                                                                        g$exp-id*$12999$xgWN3)))))
                                                                                (g$chi-rhs*$10075$xgWN3
                                                                                  g$rhs*$12990$xgWN3
                                                                                  g$r$12993$xgWN3
                                                                                  g$mr$12992$xgWN3))))
                                                                            (g$chi-expr*$10065$xgWN3
                                                                              g$init*$12994$xgWN3
                                                                              g$r$12993$xgWN3
                                                                              g$mr$12992$xgWN3)))))
                                                                      g$exp-id*$12998$xgWN3
                                                                      g$exp-name*$12997$xgWN3))))))
                                                             g$internal-exp*$12988$xgWN3
                                                             g$rhs*$12987$xgWN3
                                                             g$lex*$12986$xgWN3
                                                             g$mr$12985$xgWN3
                                                             g$r$12984$xgWN3
                                                             g$init*$12983$xgWN3))))))
                                                    g$swap$12976$xgWN3)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$13023$xgWN3)
                                                        (begin
                                                          (g$inv-collector$12972$xgWN3
                                                            g$inv-collector$12974$xgWN3)
                                                          (set! g$inv-collector$12974$xgWN3
                                                            g$t$13023$xgWN3))))
                                                     (g$inv-collector$12972$xgWN3))
                                                    ((case-lambda
                                                       ((g$t$13024$xgWN3)
                                                        (begin
                                                          (g$vis-collector$12973$xgWN3
                                                            g$vis-collector$12975$xgWN3)
                                                          (set! g$vis-collector$12975$xgWN3
                                                            g$t$13024$xgWN3))))
                                                     (g$vis-collector$12973$xgWN3))))))))
                                           g$inv-collector$10103$xgWN3
                                           g$vis-collector$10104$xgWN3
                                           g$rtc$12966$xgWN3
                                           g$vtc$12967$xgWN3)))
                                       (g$map$6085$xgWN3
                                         g$wrap$12963$xgWN3
                                         g$b*$12944$xgWN3)
                                       (g$map$6085$xgWN3
                                         g$wrap$12963$xgWN3
                                         g$main-exp*$12942$xgWN3)
                                       (g$make-collector$10102$xgWN3)
                                       (g$make-collector$10102$xgWN3)))))
                                 (g$make-top-rib$10101$xgWN3
                                   g$subst-names$12961$xgWN3
                                   g$subst-labels$12960$xgWN3))))
                             g$subst-labels$12959$xgWN3
                             g$subst-names$12958$xgWN3))))))
                    g$swap$12955$xgWN3)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$13026$xgWN3)
                        (begin
                          (g$imp-collector$12951$xgWN3
                            g$imp-collector$12953$xgWN3)
                          (set! g$imp-collector$12953$xgWN3 g$t$13026$xgWN3))))
                     (g$imp-collector$12951$xgWN3))
                    ((case-lambda
                       ((g$t$13027$xgWN3)
                        (begin
                          (g$top-level-context$12952$xgWN3
                            g$top-level-context$12954$xgWN3)
                          (set! g$top-level-context$12954$xgWN3
                            g$t$13027$xgWN3))))
                     (g$top-level-context$12952$xgWN3))))))))
           g$imp-collector$10105$xgWN3
           g$top-level-context$10175$xgWN3
           g$itc$12946$xgWN3
           '#f)))))
   (g$core-library-expander$10109$xgWN3
     g$core-library-expander$13648$xgWN3
     (case-lambda
       ((g$e$13028$xgWN3 g$verify-name$13029$xgWN3)
        (call-with-values
          (case-lambda (() (g$parse-library$10099$xgWN3 g$e$13028$xgWN3)))
          (case-lambda
            ((g$name*$13034$xgWN3
               g$exp*$13035$xgWN3
               g$imp*$13036$xgWN3
               g$b*$13037$xgWN3)
             ((case-lambda
                ((g$b*$13038$xgWN3
                   g$imp*$13039$xgWN3
                   g$exp*$13040$xgWN3
                   g$name*$13041$xgWN3)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$10098$xgWN3 g$name*$13041$xgWN3)))
                   (case-lambda
                     ((g$name$13044$xgWN3 g$ver$13045$xgWN3)
                      ((case-lambda
                         ((g$ver$13046$xgWN3 g$name$13047$xgWN3)
                          (begin
                            (g$verify-name$13029$xgWN3 g$name$13047$xgWN3)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$10108$xgWN3
                                   g$name$13047$xgWN3
                                   g$exp*$13040$xgWN3
                                   g$imp*$13039$xgWN3
                                   g$b*$13038$xgWN3
                                   '#f)))
                              (case-lambda
                                ((g$imp*$13055$xgWN3
                                   g$invoke-req*$13056$xgWN3
                                   g$visit-req*$13057$xgWN3
                                   g$invoke-code$13058$xgWN3
                                   g$visit-code$13059$xgWN3
                                   g$export-subst$13060$xgWN3
                                   g$export-env$13061$xgWN3)
                                 ((case-lambda
                                    ((g$export-env$13062$xgWN3
                                       g$export-subst$13063$xgWN3
                                       g$visit-code$13064$xgWN3
                                       g$invoke-code$13065$xgWN3
                                       g$visit-req*$13066$xgWN3
                                       g$invoke-req*$13067$xgWN3
                                       g$imp*$13068$xgWN3)
                                     (values
                                       g$name$13047$xgWN3
                                       g$ver$13046$xgWN3
                                       g$imp*$13068$xgWN3
                                       g$invoke-req*$13067$xgWN3
                                       g$visit-req*$13066$xgWN3
                                       g$invoke-code$13065$xgWN3
                                       g$visit-code$13064$xgWN3
                                       g$export-subst$13063$xgWN3
                                       g$export-env$13062$xgWN3)))
                                  g$export-env$13061$xgWN3
                                  g$export-subst$13060$xgWN3
                                  g$visit-code$13059$xgWN3
                                  g$invoke-code$13058$xgWN3
                                  g$visit-req*$13057$xgWN3
                                  g$invoke-req*$13056$xgWN3
                                  g$imp*$13055$xgWN3)))))))
                       g$ver$13045$xgWN3
                       g$name$13044$xgWN3))))))
              g$b*$13037$xgWN3
              g$imp*$13036$xgWN3
              g$exp*$13035$xgWN3
              g$name*$13034$xgWN3)))))))
   (g$parse-top-level-program$10110$xgWN3
     g$parse-top-level-program$13649$xgWN3
     (case-lambda
       ((g$e*$13069$xgWN3)
        ((case-lambda
           ((g$t$13070$xgWN3)
            ((case-lambda
               ((g$ls/false$13071$xgWN3)
                (if (if g$ls/false$13071$xgWN3
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$13072$xgWN3
                               g$imp*$13073$xgWN3
                               g$b*$13074$xgWN3)
                             (eq? (g$syntax->datum$10170$xgWN3
                                    g$import$13072$xgWN3)
                                  'import)))
                          g$ls/false$13071$xgWN3))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$13075$xgWN3
                         g$imp*$13076$xgWN3
                         g$b*$13077$xgWN3)
                       (values g$imp*$13076$xgWN3 g$b*$13077$xgWN3)))
                    g$ls/false$13071$xgWN3)
                  ((case-lambda
                     ((g$t$13078$xgWN3)
                      ((case-lambda
                         ((g$ls/false$13079$xgWN3)
                          (if (if g$ls/false$13079$xgWN3
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$13080$xgWN3
                                         g$x$13081$xgWN3
                                         g$y$13082$xgWN3)
                                       (eq? (g$syntax->datum$10170$xgWN3
                                              g$import$13080$xgWN3)
                                            'import)))
                                    g$ls/false$13079$xgWN3))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$13083$xgWN3
                                   g$x$13084$xgWN3
                                   g$y$13085$xgWN3)
                                 (g$syntax-violation$10167$xgWN3
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$9683$xgWN3 g$e*$13069$xgWN3))))
                              g$ls/false$13079$xgWN3)
                            ((case-lambda
                               ((g$t$13086$xgWN3)
                                ((case-lambda
                                   ((g$ls/false$13087$xgWN3)
                                    (if g$ls/false$13087$xgWN3
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$13087$xgWN3)
                                      (g$syntax-violation$10167$xgWN3
                                        '#f
                                        '"invalid syntax"
                                        g$t$13086$xgWN3))))
                                 (g$syntax-dispatch$10049$xgWN3
                                   g$t$13086$xgWN3
                                   '_))))
                             g$t$13078$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3
                         g$t$13078$xgWN3
                         '((any . any) . any)))))
                   g$t$13070$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3
               g$t$13070$xgWN3
               '((any . each-any) . each-any)))))
         g$e*$13069$xgWN3))))
   (g$top-level-expander$10111$xgWN3
     g$top-level-expander$13650$xgWN3
     (case-lambda
       ((g$e*$13088$xgWN3)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$10110$xgWN3 g$e*$13088$xgWN3)))
          (case-lambda
            ((g$imp*$13091$xgWN3 g$b*$13092$xgWN3)
             ((case-lambda
                ((g$b*$13093$xgWN3 g$imp*$13094$xgWN3)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$10108$xgWN3
                        '()
                        '()
                        g$imp*$13094$xgWN3
                        g$b*$13093$xgWN3
                        '#t)))
                   (case-lambda
                     ((g$imp*$13102$xgWN3
                        g$invoke-req*$13103$xgWN3
                        g$visit-req*$13104$xgWN3
                        g$invoke-code$13105$xgWN3
                        g$visit-code$13106$xgWN3
                        g$export-subst$13107$xgWN3
                        g$export-env$13108$xgWN3)
                      ((case-lambda
                         ((g$export-env$13109$xgWN3
                            g$export-subst$13110$xgWN3
                            g$visit-code$13111$xgWN3
                            g$invoke-code$13112$xgWN3
                            g$visit-req*$13113$xgWN3
                            g$invoke-req*$13114$xgWN3
                            g$imp*$13115$xgWN3)
                          (values
                            g$invoke-req*$13114$xgWN3
                            g$invoke-code$13112$xgWN3)))
                       g$export-env$13108$xgWN3
                       g$export-subst$13107$xgWN3
                       g$visit-code$13106$xgWN3
                       g$invoke-code$13105$xgWN3
                       g$visit-req*$13104$xgWN3
                       g$invoke-req*$13103$xgWN3
                       g$imp*$13102$xgWN3))))))
              g$b*$13092$xgWN3
              g$imp*$13091$xgWN3)))))))
   (g$8029$10112$xgWN3
     g$8029$13651$xgWN3
     (make-record-type-descriptor
       'env
       '#f
       'g$8032$xgWN3
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8031$10113$xgWN3 g$8031$13652$xgWN3 '#f)
   (g$8030$10114$xgWN3
     g$8030$13653$xgWN3
     (make-record-constructor-descriptor
       g$8029$10112$xgWN3
       '#f
       g$8031$10113$xgWN3))
   (g$env?$10117$xgWN3
     g$env?$13654$xgWN3
     (record-predicate g$8029$10112$xgWN3))
   (g$make-env$10118$xgWN3
     g$make-env$13655$xgWN3
     (record-constructor g$8030$10114$xgWN3))
   (g$env-names$10119$xgWN3
     g$env-names$13656$xgWN3
     (record-accessor g$8029$10112$xgWN3 '0))
   (g$env-labels$10120$xgWN3
     g$env-labels$13657$xgWN3
     (record-accessor g$8029$10112$xgWN3 '1))
   (g$env-itc$10121$xgWN3
     g$env-itc$13658$xgWN3
     (record-accessor g$8029$10112$xgWN3 '2))
   (g$set-env-names!$10122$xgWN3
     g$set-env-names!$13659$xgWN3
     (record-mutator g$8029$10112$xgWN3 '0))
   (g$set-env-labels!$10123$xgWN3
     g$set-env-labels!$13660$xgWN3
     (record-mutator g$8029$10112$xgWN3 '1))
   (g$set-env-itc!$10124$xgWN3
     g$set-env-itc!$13661$xgWN3
     (record-mutator g$8029$10112$xgWN3 '2))
   (g$rp$10125$xgWN3
     g$rp$13662$xgWN3
     (make-record-printer
       'env
       (case-lambda
         ((g$x$13116$xgWN3 g$p$13117$xgWN3 g$wr$13118$xgWN3)
          (display '"#<environment>" g$p$13117$xgWN3)))))
   (g$8046$10126$xgWN3
     g$8046$13663$xgWN3
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8049$xgWN3
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8048$10127$xgWN3 g$8048$13664$xgWN3 '#f)
   (g$8047$10128$xgWN3
     g$8047$13665$xgWN3
     (make-record-constructor-descriptor
       g$8046$10126$xgWN3
       '#f
       g$8048$10127$xgWN3))
   (g$interaction-env?$10131$xgWN3
     g$interaction-env?$13666$xgWN3
     (record-predicate g$8046$10126$xgWN3))
   (g$make-interaction-env$10132$xgWN3
     g$make-interaction-env$13667$xgWN3
     (record-constructor g$8047$10128$xgWN3))
   (g$interaction-env-rib$10133$xgWN3
     g$interaction-env-rib$13668$xgWN3
     (record-accessor g$8046$10126$xgWN3 '0))
   (g$interaction-env-r$10134$xgWN3
     g$interaction-env-r$13669$xgWN3
     (record-accessor g$8046$10126$xgWN3 '1))
   (g$interaction-env-locs$10135$xgWN3
     g$interaction-env-locs$13670$xgWN3
     (record-accessor g$8046$10126$xgWN3 '2))
   (g$set-interaction-env-rib!$10136$xgWN3
     g$set-interaction-env-rib!$13671$xgWN3
     (record-mutator g$8046$10126$xgWN3 '0))
   (g$set-interaction-env-r!$10137$xgWN3
     g$set-interaction-env-r!$13672$xgWN3
     (record-mutator g$8046$10126$xgWN3 '1))
   (g$set-interaction-env-locs!$10138$xgWN3
     g$set-interaction-env-locs!$13673$xgWN3
     (record-mutator g$8046$10126$xgWN3 '2))
   (g$rp$10139$xgWN3
     g$rp$13674$xgWN3
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$13119$xgWN3 g$p$13120$xgWN3 g$wr$13121$xgWN3)
          (display '"#<environment>" g$p$13120$xgWN3)))))
   (g$interaction-environment-symbols$10140$xgWN3
     g$interaction-environment-symbols$13675$xgWN3
     (case-lambda
       (()
        (g$environment-symbols$10144$xgWN3
          (g$interaction-environment$10174$xgWN3)))))
   (g$environment-bindings$10141$xgWN3
     g$environment-bindings$13676$xgWN3
     (case-lambda
       ((g$e$13122$xgWN3)
        (vector->list
          (g$vector-map$6816$xgWN3
            (case-lambda
              ((g$name$13123$xgWN3 g$label$13124$xgWN3)
               (g$parse-binding$10142$xgWN3
                 (cons
                   g$name$13123$xgWN3
                   (g$imported-label->binding$9424$xgWN3
                     g$label$13124$xgWN3)))))
            (g$env-names$10119$xgWN3 g$e$13122$xgWN3)
            (g$env-labels$10120$xgWN3 g$e$13122$xgWN3))))))
   (g$parse-binding$10142$xgWN3
     g$parse-binding$13677$xgWN3
     (case-lambda
       ((g$b$13125$xgWN3)
        (cons
          (car g$b$13125$xgWN3)
          ((case-lambda
             ((g$t$13126$xgWN3)
              (if (g$memv$6078$xgWN3 g$t$13126$xgWN3 '(core-prim global))
                'procedure
                (if (g$memv$6078$xgWN3
                      g$t$13126$xgWN3
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$6078$xgWN3 g$t$13126$xgWN3 '($core-rtd))
                    'record
                    (if (eq? (car g$b$13125$xgWN3)
                             (g$cadr$6765$xgWN3 g$b$13125$xgWN3))
                      'syntax
                      'unknown))))))
           (g$cadr$6765$xgWN3 g$b$13125$xgWN3))))))
   (g$environment?$10143$xgWN3
     g$environment?$13678$xgWN3
     (case-lambda
       ((g$x$13127$xgWN3)
        ((case-lambda
           ((g$t$13128$xgWN3)
            (if g$t$13128$xgWN3
              g$t$13128$xgWN3
              (begin '#f (g$interaction-env?$10131$xgWN3 g$x$13127$xgWN3)))))
         (g$env?$10117$xgWN3 g$x$13127$xgWN3)))))
   (g$environment-symbols$10144$xgWN3
     g$environment-symbols$13679$xgWN3
     (case-lambda
       ((g$x$13129$xgWN3)
        (if (g$env?$10117$xgWN3 g$x$13129$xgWN3)
          (vector->list (g$env-names$10119$xgWN3 g$x$13129$xgWN3))
          (if (g$interaction-env?$10131$xgWN3 g$x$13129$xgWN3)
            (g$map$6085$xgWN3
              values
              (g$rib-sym*$9634$xgWN3
                (g$interaction-env-rib$10133$xgWN3 g$x$13129$xgWN3)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$13129$xgWN3))))))
   (g$environment$10145$xgWN3
     g$environment$13680$xgWN3
     (case-lambda
       (g$imp*$13130$xgWN3
        ((case-lambda
           ((g$itc$13131$xgWN3)
            ((case-lambda
               ((g$imp-collector$13134$xgWN3 g$imp-collector$13135$xgWN3)
                ((case-lambda
                   ((g$swap$13136$xgWN3)
                    (dynamic-wind
                      g$swap$13136$xgWN3
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$10100$xgWN3
                                g$imp*$13130$xgWN3)))
                           (case-lambda
                             ((g$subst-names$13139$xgWN3
                                g$subst-labels$13140$xgWN3)
                              ((case-lambda
                                 ((g$subst-labels$13141$xgWN3
                                    g$subst-names$13142$xgWN3)
                                  (g$make-env$10118$xgWN3
                                    g$subst-names$13142$xgWN3
                                    g$subst-labels$13141$xgWN3
                                    g$itc$13131$xgWN3)))
                               g$subst-labels$13140$xgWN3
                               g$subst-names$13139$xgWN3))))))
                      g$swap$13136$xgWN3)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$13143$xgWN3)
                        (begin
                          (g$imp-collector$13134$xgWN3
                            g$imp-collector$13135$xgWN3)
                          (set! g$imp-collector$13135$xgWN3 g$t$13143$xgWN3))))
                     (g$imp-collector$13134$xgWN3)))))))
             g$imp-collector$10105$xgWN3
             g$itc$13131$xgWN3)))
         (g$make-collector$10102$xgWN3)))))
   (g$null-environment$10146$xgWN3
     g$null-environment$13681$xgWN3
     (case-lambda
       ((g$n$13144$xgWN3)
        (begin
          (if (not (eqv? g$n$13144$xgWN3 '5))
            (assertion-violation 'null-environment '"not 5" g$n$13144$xgWN3)
            (void))
          (g$environment$10145$xgWN3 '(psyntax null-environment-5))))))
   (g$scheme-report-environment$10147$xgWN3
     g$scheme-report-environment$13682$xgWN3
     (case-lambda
       ((g$n$13145$xgWN3)
        (begin
          (if (not (eqv? g$n$13145$xgWN3 '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$13145$xgWN3)
            (void))
          (g$environment$10145$xgWN3 '(psyntax scheme-report-environment-5))))))
   (g$expand$10148$xgWN3
     g$expand$13683$xgWN3
     (case-lambda
       ((g$x$13146$xgWN3 g$env$13147$xgWN3)
        (if (g$env?$10117$xgWN3 g$env$13147$xgWN3)
          ((case-lambda
             ((g$rib$13148$xgWN3)
              ((case-lambda
                 ((g$x$13149$xgWN3
                    g$itc$13150$xgWN3
                    g$rtc$13151$xgWN3
                    g$vtc$13152$xgWN3)
                  ((case-lambda
                     ((g$x$13153$xgWN3)
                      (begin
                        (g$seal-rib!$9650$xgWN3 g$rib$13148$xgWN3)
                        (values g$x$13153$xgWN3 (g$rtc$13151$xgWN3)))))
                   ((case-lambda
                      ((g$top-level-context$13162$xgWN3
                         g$inv-collector$13163$xgWN3
                         g$vis-collector$13164$xgWN3
                         g$imp-collector$13165$xgWN3
                         g$top-level-context$13166$xgWN3
                         g$inv-collector$13167$xgWN3
                         g$vis-collector$13168$xgWN3
                         g$imp-collector$13169$xgWN3)
                       ((case-lambda
                          ((g$swap$13170$xgWN3)
                           (dynamic-wind
                             g$swap$13170$xgWN3
                             (case-lambda
                               (()
                                (g$chi-expr$10067$xgWN3
                                  g$x$13149$xgWN3
                                  '()
                                  '())))
                             g$swap$13170$xgWN3)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$13171$xgWN3)
                                 (begin
                                   (g$top-level-context$13162$xgWN3
                                     g$top-level-context$13166$xgWN3)
                                   (set! g$top-level-context$13166$xgWN3
                                     g$t$13171$xgWN3))))
                              (g$top-level-context$13162$xgWN3))
                             ((case-lambda
                                ((g$t$13172$xgWN3)
                                 (begin
                                   (g$inv-collector$13163$xgWN3
                                     g$inv-collector$13167$xgWN3)
                                   (set! g$inv-collector$13167$xgWN3
                                     g$t$13172$xgWN3))))
                              (g$inv-collector$13163$xgWN3))
                             ((case-lambda
                                ((g$t$13173$xgWN3)
                                 (begin
                                   (g$vis-collector$13164$xgWN3
                                     g$vis-collector$13168$xgWN3)
                                   (set! g$vis-collector$13168$xgWN3
                                     g$t$13173$xgWN3))))
                              (g$vis-collector$13164$xgWN3))
                             ((case-lambda
                                ((g$t$13174$xgWN3)
                                 (begin
                                   (g$imp-collector$13165$xgWN3
                                     g$imp-collector$13169$xgWN3)
                                   (set! g$imp-collector$13169$xgWN3
                                     g$t$13174$xgWN3))))
                              (g$imp-collector$13165$xgWN3))))))))
                    g$top-level-context$10175$xgWN3
                    g$inv-collector$10103$xgWN3
                    g$vis-collector$10104$xgWN3
                    g$imp-collector$10105$xgWN3
                    '#f
                    g$rtc$13151$xgWN3
                    g$vtc$13152$xgWN3
                    g$itc$13150$xgWN3))))
               (g$make-stx$9659$xgWN3
                 g$x$13146$xgWN3
                 g$top-mark*$9619$xgWN3
                 (list g$rib$13148$xgWN3)
                 '())
               (g$env-itc$10121$xgWN3 g$env$13147$xgWN3)
               (g$make-collector$10102$xgWN3)
               (g$make-collector$10102$xgWN3))))
           (g$make-top-rib$10101$xgWN3
             (g$env-names$10119$xgWN3 g$env$13147$xgWN3)
             (g$env-labels$10120$xgWN3 g$env$13147$xgWN3)))
          (if (g$interaction-env?$10131$xgWN3 g$env$13147$xgWN3)
            ((case-lambda
               ((g$rib$13175$xgWN3 g$r$13176$xgWN3 g$rtc$13177$xgWN3)
                ((case-lambda
                   ((g$x$13178$xgWN3)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$13189$xgWN3
                               g$inv-collector$13190$xgWN3
                               g$vis-collector$13191$xgWN3
                               g$imp-collector$13192$xgWN3
                               g$top-level-context$13193$xgWN3
                               g$inv-collector$13194$xgWN3
                               g$vis-collector$13195$xgWN3
                               g$imp-collector$13196$xgWN3)
                             ((case-lambda
                                ((g$swap$13197$xgWN3)
                                 (dynamic-wind
                                   g$swap$13197$xgWN3
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$10107$xgWN3
                                        g$x$13178$xgWN3
                                        g$rib$13175$xgWN3
                                        g$r$13176$xgWN3)))
                                   g$swap$13197$xgWN3)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$13198$xgWN3)
                                       (begin
                                         (g$top-level-context$13189$xgWN3
                                           g$top-level-context$13193$xgWN3)
                                         (set! g$top-level-context$13193$xgWN3
                                           g$t$13198$xgWN3))))
                                    (g$top-level-context$13189$xgWN3))
                                   ((case-lambda
                                      ((g$t$13199$xgWN3)
                                       (begin
                                         (g$inv-collector$13190$xgWN3
                                           g$inv-collector$13194$xgWN3)
                                         (set! g$inv-collector$13194$xgWN3
                                           g$t$13199$xgWN3))))
                                    (g$inv-collector$13190$xgWN3))
                                   ((case-lambda
                                      ((g$t$13200$xgWN3)
                                       (begin
                                         (g$vis-collector$13191$xgWN3
                                           g$vis-collector$13195$xgWN3)
                                         (set! g$vis-collector$13195$xgWN3
                                           g$t$13200$xgWN3))))
                                    (g$vis-collector$13191$xgWN3))
                                   ((case-lambda
                                      ((g$t$13201$xgWN3)
                                       (begin
                                         (g$imp-collector$13192$xgWN3
                                           g$imp-collector$13196$xgWN3)
                                         (set! g$imp-collector$13196$xgWN3
                                           g$t$13201$xgWN3))))
                                    (g$imp-collector$13192$xgWN3))))))))
                          g$top-level-context$10175$xgWN3
                          g$inv-collector$10103$xgWN3
                          g$vis-collector$10104$xgWN3
                          g$imp-collector$10105$xgWN3
                          g$env$13147$xgWN3
                          g$rtc$13177$xgWN3
                          (g$make-collector$10102$xgWN3)
                          (g$make-collector$10102$xgWN3))))
                      (case-lambda
                        ((g$e$13202$xgWN3 g$r^$13203$xgWN3)
                         ((case-lambda
                            ((g$r^$13204$xgWN3 g$e$13205$xgWN3)
                             (begin
                               (g$set-interaction-env-r!$10137$xgWN3
                                 g$env$13147$xgWN3
                                 g$r^$13204$xgWN3)
                               (values g$e$13205$xgWN3 (g$rtc$13177$xgWN3)))))
                          g$r^$13203$xgWN3
                          g$e$13202$xgWN3))))))
                 (g$make-stx$9659$xgWN3
                   g$x$13146$xgWN3
                   g$top-mark*$9619$xgWN3
                   (list g$rib$13175$xgWN3)
                   '()))))
             (g$interaction-env-rib$10133$xgWN3 g$env$13147$xgWN3)
             (g$interaction-env-r$10134$xgWN3 g$env$13147$xgWN3)
             (g$make-collector$10102$xgWN3))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$13147$xgWN3))))))
   (g$eval$10149$xgWN3
     g$eval$13684$xgWN3
     (case-lambda
       ((g$x$13206$xgWN3 g$env$13207$xgWN3)
        (begin
          (if (not (g$environment?$10143$xgWN3 g$env$13207$xgWN3))
            (error 'eval '"not an environment" g$env$13207$xgWN3)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$10148$xgWN3 g$x$13206$xgWN3 g$env$13207$xgWN3)))
            (case-lambda
              ((g$x$13210$xgWN3 g$invoke-req*$13211$xgWN3)
               ((case-lambda
                  ((g$invoke-req*$13212$xgWN3 g$x$13213$xgWN3)
                   (begin
                     (g$for-each$6086$xgWN3
                       g$invoke-library$9425$xgWN3
                       g$invoke-req*$13212$xgWN3)
                     (eval-core
                       (g$expanded->core$9158$xgWN3 g$x$13213$xgWN3)))))
                g$invoke-req*$13211$xgWN3
                g$x$13210$xgWN3))))))))
   (g$expand->core$10150$xgWN3
     g$expand->core$13685$xgWN3
     (case-lambda
       ((g$x$13214$xgWN3 g$env$13215$xgWN3)
        (begin
          (if (not (g$environment?$10143$xgWN3 g$env$13215$xgWN3))
            (error 'eval '"not an environment" g$env$13215$xgWN3)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$10148$xgWN3 g$x$13214$xgWN3 g$env$13215$xgWN3)))
            (case-lambda
              ((g$x$13218$xgWN3 g$invoke-req*$13219$xgWN3)
               ((case-lambda
                  ((g$invoke-req*$13220$xgWN3 g$x$13221$xgWN3)
                   (begin
                     (g$for-each$6086$xgWN3
                       g$invoke-library$9425$xgWN3
                       g$invoke-req*$13220$xgWN3)
                     (g$expanded->core$9158$xgWN3 g$x$13221$xgWN3))))
                g$invoke-req*$13219$xgWN3
                g$x$13218$xgWN3))))))))
   (g$library-expander$10151$xgWN3
     g$library-expander$13686$xgWN3
     (case-lambda
       ((g$x$13222$xgWN3 g$filename$13223$xgWN3 g$verify-name$13224$xgWN3)
        (letrec* ((g$build-visit-code$13225$xgWN3
                    (case-lambda
                      ((g$macro*$13268$xgWN3)
                       (if (null? g$macro*$13268$xgWN3)
                         (g$build-void$9612$xgWN3)
                         (g$build-sequence$9611$xgWN3
                           '#f
                           (g$map$6085$xgWN3
                             (case-lambda
                               ((g$x$13269$xgWN3)
                                ((case-lambda
                                   ((g$loc$13270$xgWN3 g$src$13271$xgWN3)
                                    (list
                                      'set!
                                      g$loc$13270$xgWN3
                                      g$src$13271$xgWN3)))
                                 (car g$x$13269$xgWN3)
                                 (g$cddr$6767$xgWN3 g$x$13269$xgWN3))))
                             g$macro*$13268$xgWN3))))))
                  (g$visit!$13226$xgWN3
                    (case-lambda
                      ((g$macro*$13264$xgWN3)
                       (g$for-each$6086$xgWN3
                         (case-lambda
                           ((g$x$13265$xgWN3)
                            ((case-lambda
                               ((g$loc$13266$xgWN3 g$proc$13267$xgWN3)
                                (set-symbol-value!
                                  g$loc$13266$xgWN3
                                  g$proc$13267$xgWN3)))
                             (car g$x$13265$xgWN3)
                             (g$cadr$6765$xgWN3 g$x$13265$xgWN3))))
                         g$macro*$13264$xgWN3)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$10109$xgWN3
                 g$x$13222$xgWN3
                 g$verify-name$13224$xgWN3)))
            (case-lambda
              ((g$name$13236$xgWN3
                 g$ver$13237$xgWN3
                 g$imp*$13238$xgWN3
                 g$inv*$13239$xgWN3
                 g$vis*$13240$xgWN3
                 g$invoke-code$13241$xgWN3
                 g$macro*$13242$xgWN3
                 g$export-subst$13243$xgWN3
                 g$export-env$13244$xgWN3)
               ((case-lambda
                  ((g$export-env$13245$xgWN3
                     g$export-subst$13246$xgWN3
                     g$macro*$13247$xgWN3
                     g$invoke-code$13248$xgWN3
                     g$vis*$13249$xgWN3
                     g$inv*$13250$xgWN3
                     g$imp*$13251$xgWN3
                     g$ver$13252$xgWN3
                     g$name$13253$xgWN3)
                   ((case-lambda
                      ((g$id$13254$xgWN3
                         g$name$13255$xgWN3
                         g$ver$13256$xgWN3
                         g$imp*$13257$xgWN3
                         g$vis*$13258$xgWN3
                         g$inv*$13259$xgWN3
                         g$visit-proc$13260$xgWN3
                         g$invoke-proc$13261$xgWN3
                         g$visit-code$13262$xgWN3
                         g$invoke-code$13263$xgWN3)
                       (begin
                         (g$install-library$9423$xgWN3
                           g$id$13254$xgWN3
                           g$name$13255$xgWN3
                           g$ver$13256$xgWN3
                           g$imp*$13257$xgWN3
                           g$vis*$13258$xgWN3
                           g$inv*$13259$xgWN3
                           g$export-subst$13246$xgWN3
                           g$export-env$13245$xgWN3
                           g$visit-proc$13260$xgWN3
                           g$invoke-proc$13261$xgWN3
                           g$visit-code$13262$xgWN3
                           g$invoke-code$13263$xgWN3
                           '#t
                           g$filename$13223$xgWN3)
                         (values
                           g$id$13254$xgWN3
                           g$name$13255$xgWN3
                           g$ver$13256$xgWN3
                           g$imp*$13257$xgWN3
                           g$vis*$13258$xgWN3
                           g$inv*$13259$xgWN3
                           g$invoke-code$13263$xgWN3
                           g$visit-code$13262$xgWN3
                           g$export-subst$13246$xgWN3
                           g$export-env$13245$xgWN3))))
                    (gensym)
                    g$name$13253$xgWN3
                    g$ver$13252$xgWN3
                    (g$map$6085$xgWN3
                      g$library-spec$9429$xgWN3
                      g$imp*$13251$xgWN3)
                    (g$map$6085$xgWN3
                      g$library-spec$9429$xgWN3
                      g$vis*$13249$xgWN3)
                    (g$map$6085$xgWN3
                      g$library-spec$9429$xgWN3
                      g$inv*$13250$xgWN3)
                    (case-lambda
                      (() (g$visit!$13226$xgWN3 g$macro*$13247$xgWN3)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$9158$xgWN3
                           g$invoke-code$13248$xgWN3))))
                    (g$build-visit-code$13225$xgWN3 g$macro*$13247$xgWN3)
                    g$invoke-code$13248$xgWN3)))
                g$export-env$13244$xgWN3
                g$export-subst$13243$xgWN3
                g$macro*$13242$xgWN3
                g$invoke-code$13241$xgWN3
                g$vis*$13240$xgWN3
                g$inv*$13239$xgWN3
                g$imp*$13238$xgWN3
                g$ver$13237$xgWN3
                g$name$13236$xgWN3))))))
       ((g$x$13272$xgWN3 g$filename$13273$xgWN3)
        (g$library-expander$10151$xgWN3
          g$x$13272$xgWN3
          g$filename$13273$xgWN3
          (case-lambda ((g$x$13274$xgWN3) (values)))))
       ((g$x$13275$xgWN3)
        (g$library-expander$10151$xgWN3
          g$x$13275$xgWN3
          '#f
          (case-lambda ((g$x$13276$xgWN3) (values)))))))
   (g$boot-library-expand$10152$xgWN3
     g$boot-library-expand$13687$xgWN3
     (case-lambda
       ((g$x$13277$xgWN3)
        (call-with-values
          (case-lambda (() (g$library-expander$10151$xgWN3 g$x$13277$xgWN3)))
          (case-lambda
            ((g$id$13288$xgWN3
               g$name$13289$xgWN3
               g$ver$13290$xgWN3
               g$imp*$13291$xgWN3
               g$vis*$13292$xgWN3
               g$inv*$13293$xgWN3
               g$invoke-code$13294$xgWN3
               g$visit-code$13295$xgWN3
               g$export-subst$13296$xgWN3
               g$export-env$13297$xgWN3)
             ((case-lambda
                ((g$export-env$13298$xgWN3
                   g$export-subst$13299$xgWN3
                   g$visit-code$13300$xgWN3
                   g$invoke-code$13301$xgWN3
                   g$inv*$13302$xgWN3
                   g$vis*$13303$xgWN3
                   g$imp*$13304$xgWN3
                   g$ver$13305$xgWN3
                   g$name$13306$xgWN3
                   g$id$13307$xgWN3)
                 (values
                   g$name$13306$xgWN3
                   g$invoke-code$13301$xgWN3
                   g$export-subst$13299$xgWN3
                   g$export-env$13298$xgWN3)))
              g$export-env$13297$xgWN3
              g$export-subst$13296$xgWN3
              g$visit-code$13295$xgWN3
              g$invoke-code$13294$xgWN3
              g$inv*$13293$xgWN3
              g$vis*$13292$xgWN3
              g$imp*$13291$xgWN3
              g$ver$13290$xgWN3
              g$name$13289$xgWN3
              g$id$13288$xgWN3)))))))
   (g$rev-map-append$10153$xgWN3
     g$rev-map-append$13688$xgWN3
     (case-lambda
       ((g$f$13308$xgWN3 g$ls$13309$xgWN3 g$ac$13310$xgWN3)
        (if (null? g$ls$13309$xgWN3)
          g$ac$13310$xgWN3
          (g$rev-map-append$10153$xgWN3
            g$f$13308$xgWN3
            (cdr g$ls$13309$xgWN3)
            (cons
              (g$f$13308$xgWN3 (car g$ls$13309$xgWN3))
              g$ac$13310$xgWN3))))))
   (g$build-exports$10154$xgWN3
     g$build-exports$13689$xgWN3
     (case-lambda
       ((g$lex*+loc*$13311$xgWN3 g$init*$13312$xgWN3)
        (g$build-sequence$9611$xgWN3
          '#f
          (cons
            (g$build-void$9612$xgWN3)
            (g$rev-map-append$10153$xgWN3
              (case-lambda
                ((g$x$13313$xgWN3)
                 (list 'set! (cdr g$x$13313$xgWN3) (car g$x$13313$xgWN3))))
              g$lex*+loc*$13311$xgWN3
              g$init*$13312$xgWN3))))))
   (g$make-export-subst$10155$xgWN3
     g$make-export-subst$13690$xgWN3
     (case-lambda
       ((g$name*$13314$xgWN3 g$id*$13315$xgWN3)
        (g$map$6085$xgWN3
          (case-lambda
            ((g$name$13316$xgWN3 g$id$13317$xgWN3)
             ((case-lambda
                ((g$label$13318$xgWN3)
                 (begin
                   (if (not g$label$13318$xgWN3)
                     (g$syntax-violation$10167$xgWN3
                       '#f
                       '"cannot export unbound identifier"
                       g$id$13317$xgWN3)
                     (void))
                   (cons g$name$13316$xgWN3 g$label$13318$xgWN3))))
              (g$id->label$9699$xgWN3 g$id$13317$xgWN3))))
          g$name*$13314$xgWN3
          g$id*$13315$xgWN3))))
   (g$make-export-env/macros$10156$xgWN3
     g$make-export-env/macros$13691$xgWN3
     (case-lambda
       ((g$lex*$13319$xgWN3 g$loc*$13320$xgWN3 g$r$13321$xgWN3)
        (letrec* ((g$lookup$13322$xgWN3
                    (case-lambda
                      ((g$x$13338$xgWN3)
                       ((letrec ((g$f$13339$xgWN3
                                   (case-lambda
                                     ((g$x$13340$xgWN3
                                        g$lex*$13341$xgWN3
                                        g$loc*$13342$xgWN3)
                                      (if (pair? g$lex*$13341$xgWN3)
                                        (if (eq? g$x$13340$xgWN3
                                                 (car g$lex*$13341$xgWN3))
                                          (car g$loc*$13342$xgWN3)
                                          (g$f$13339$xgWN3
                                            g$x$13340$xgWN3
                                            (cdr g$lex*$13341$xgWN3)
                                            (cdr g$loc*$13342$xgWN3)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$13339$xgWN3)
                        g$x$13338$xgWN3
                        g$lex*$13319$xgWN3
                        g$loc*$13320$xgWN3)))))
          ((letrec ((g$f$13323$xgWN3
                      (case-lambda
                        ((g$r$13324$xgWN3
                           g$env$13325$xgWN3
                           g$global*$13326$xgWN3
                           g$macro*$13327$xgWN3)
                         (if (null? g$r$13324$xgWN3)
                           (values
                             g$env$13325$xgWN3
                             g$global*$13326$xgWN3
                             g$macro*$13327$xgWN3)
                           ((case-lambda
                              ((g$x$13328$xgWN3)
                               ((case-lambda
                                  ((g$label$13329$xgWN3 g$b$13330$xgWN3)
                                   ((case-lambda
                                      ((g$t$13331$xgWN3)
                                       (if (g$memv$6078$xgWN3
                                             g$t$13331$xgWN3
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$13332$xgWN3)
                                             ((case-lambda
                                                ((g$loc$13333$xgWN3
                                                   g$type$13334$xgWN3)
                                                 (g$f$13323$xgWN3
                                                   (cdr g$r$13324$xgWN3)
                                                   (cons
                                                     (g$cons*$6087$xgWN3
                                                       g$label$13329$xgWN3
                                                       g$type$13334$xgWN3
                                                       g$loc$13333$xgWN3)
                                                     g$env$13325$xgWN3)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$9993$xgWN3
                                                         g$v$13332$xgWN3)
                                                       g$loc$13333$xgWN3)
                                                     g$global*$13326$xgWN3)
                                                   g$macro*$13327$xgWN3)))
                                              (g$lookup$13322$xgWN3
                                                (g$lexical-var$9993$xgWN3
                                                  g$v$13332$xgWN3))
                                              (if (g$lexical-mutable?$9994$xgWN3
                                                    g$v$13332$xgWN3)
                                                'mutable
                                                'global))))
                                          (g$binding-value$9704$xgWN3
                                            g$b$13330$xgWN3))
                                         (if (g$memv$6078$xgWN3
                                               g$t$13331$xgWN3
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$13335$xgWN3)
                                               (g$f$13323$xgWN3
                                                 (cdr g$r$13324$xgWN3)
                                                 (cons
                                                   (g$cons*$6087$xgWN3
                                                     g$label$13329$xgWN3
                                                     'global-macro
                                                     g$loc$13335$xgWN3)
                                                   g$env$13325$xgWN3)
                                                 g$global*$13326$xgWN3
                                                 (cons
                                                   (cons
                                                     g$loc$13335$xgWN3
                                                     (g$binding-value$9704$xgWN3
                                                       g$b$13330$xgWN3))
                                                   g$macro*$13327$xgWN3))))
                                            (gensym))
                                           (if (g$memv$6078$xgWN3
                                                 g$t$13331$xgWN3
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$13336$xgWN3)
                                                 (g$f$13323$xgWN3
                                                   (cdr g$r$13324$xgWN3)
                                                   (cons
                                                     (g$cons*$6087$xgWN3
                                                       g$label$13329$xgWN3
                                                       'global-macro!
                                                       g$loc$13336$xgWN3)
                                                     g$env$13325$xgWN3)
                                                   g$global*$13326$xgWN3
                                                   (cons
                                                     (cons
                                                       g$loc$13336$xgWN3
                                                       (g$binding-value$9704$xgWN3
                                                         g$b$13330$xgWN3))
                                                     g$macro*$13327$xgWN3))))
                                              (gensym))
                                             (if (g$memv$6078$xgWN3
                                                   g$t$13331$xgWN3
                                                   '(local-ctv))
                                               ((case-lambda
                                                  ((g$loc$13337$xgWN3)
                                                   (g$f$13323$xgWN3
                                                     (cdr g$r$13324$xgWN3)
                                                     (cons
                                                       (g$cons*$6087$xgWN3
                                                         g$label$13329$xgWN3
                                                         'global-ctv
                                                         g$loc$13337$xgWN3)
                                                       g$env$13325$xgWN3)
                                                     g$global*$13326$xgWN3
                                                     (cons
                                                       (cons
                                                         g$loc$13337$xgWN3
                                                         (g$binding-value$9704$xgWN3
                                                           g$b$13330$xgWN3))
                                                       g$macro*$13327$xgWN3))))
                                                (gensym))
                                               (if (g$memv$6078$xgWN3
                                                     g$t$13331$xgWN3
                                                     '($rtd $module))
                                                 (g$f$13323$xgWN3
                                                   (cdr g$r$13324$xgWN3)
                                                   (cons
                                                     g$x$13328$xgWN3
                                                     g$env$13325$xgWN3)
                                                   g$global*$13326$xgWN3
                                                   g$macro*$13327$xgWN3)
                                                 (assertion-violation
                                                   'expander
                                                   '"BUG: do not know how to export"
                                                   (g$binding-type$9703$xgWN3
                                                     g$b$13330$xgWN3)
                                                   (g$binding-value$9704$xgWN3
                                                     g$b$13330$xgWN3)))))))))
                                    (g$binding-type$9703$xgWN3
                                      g$b$13330$xgWN3))))
                                (car g$x$13328$xgWN3)
                                (cdr g$x$13328$xgWN3))))
                            (car g$r$13324$xgWN3)))))))
             g$f$13323$xgWN3)
           g$r$13321$xgWN3
           '()
           '()
           '())))))
   (g$generate-temporaries$10157$xgWN3
     g$generate-temporaries$13692$xgWN3
     (case-lambda
       ((g$ls$13343$xgWN3)
        ((case-lambda
           ((g$t$13344$xgWN3)
            ((case-lambda
               ((g$ls/false$13345$xgWN3)
                (if g$ls/false$13345$xgWN3
                  (apply
                    (case-lambda
                      ((g$ls$13346$xgWN3)
                       (g$map$6085$xgWN3
                         (case-lambda
                           ((g$x$13347$xgWN3)
                            (g$make-stx$9659$xgWN3
                              ((case-lambda
                                 ((g$x$13348$xgWN3)
                                  (if ((case-lambda
                                         ((g$t$13349$xgWN3)
                                          (if g$t$13349$xgWN3
                                            g$t$13349$xgWN3
                                            (begin
                                              '#f
                                              (string? g$x$13348$xgWN3)))))
                                       (g$symbol?$6756$xgWN3 g$x$13348$xgWN3))
                                    (gensym g$x$13348$xgWN3)
                                    (gensym 't))))
                               (g$syntax->datum$10170$xgWN3 g$x$13347$xgWN3))
                              g$top-mark*$9619$xgWN3
                              '()
                              '())))
                         g$ls$13346$xgWN3)))
                    g$ls/false$13345$xgWN3)
                  ((case-lambda
                     ((g$t$13350$xgWN3)
                      ((case-lambda
                         ((g$ls/false$13351$xgWN3)
                          (if g$ls/false$13351$xgWN3
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$13351$xgWN3)
                            (g$syntax-violation$10167$xgWN3
                              '#f
                              '"invalid syntax"
                              g$t$13350$xgWN3))))
                       (g$syntax-dispatch$10049$xgWN3 g$t$13350$xgWN3 '_))))
                   g$t$13344$xgWN3))))
             (g$syntax-dispatch$10049$xgWN3 g$t$13344$xgWN3 'each-any))))
         g$ls$13343$xgWN3))))
   (g$free-identifier=?$10158$xgWN3
     g$free-identifier=?$13693$xgWN3
     (case-lambda
       ((g$x$13352$xgWN3 g$y$13353$xgWN3)
        (if (g$id?$9686$xgWN3 g$x$13352$xgWN3)
          (if (g$id?$9686$xgWN3 g$y$13353$xgWN3)
            (g$free-id=?$9690$xgWN3 g$x$13352$xgWN3 g$y$13353$xgWN3)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$13353$xgWN3))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$13352$xgWN3)))))
   (g$bound-identifier=?$10159$xgWN3
     g$bound-identifier=?$13694$xgWN3
     (case-lambda
       ((g$x$13354$xgWN3 g$y$13355$xgWN3)
        (if (g$id?$9686$xgWN3 g$x$13354$xgWN3)
          (if (g$id?$9686$xgWN3 g$y$13355$xgWN3)
            (g$bound-id=?$9689$xgWN3 g$x$13354$xgWN3 g$y$13355$xgWN3)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$13355$xgWN3))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$13354$xgWN3)))))
   (g$make-source-condition$10160$xgWN3
     g$make-source-condition$13695$xgWN3
     (case-lambda
       ((g$x$13356$xgWN3)
        (letrec* ((g$10981$13357$xgWN3
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$7399$xgWN3
                      'g$10984$xgWN3
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$10983$13358$xgWN3 '#f)
                  (g$10982$13359$xgWN3
                    (make-record-constructor-descriptor
                      g$10981$13357$xgWN3
                      g$&condition-rcd$7400$xgWN3
                      g$10983$13358$xgWN3))
                  (g$10980$13362$xgWN3 (record-predicate g$10981$13357$xgWN3))
                  (g$make-source-condition$13363$xgWN3
                    (record-constructor g$10982$13359$xgWN3))
                  (g$10978$13364$xgWN3 (record-accessor g$10981$13357$xgWN3 '0))
                  (g$10979$13365$xgWN3 (record-accessor g$10981$13357$xgWN3 '1))
                  (g$source-condition?$13366$xgWN3
                    (condition-predicate g$10981$13357$xgWN3))
                  (g$source-filename$13367$xgWN3
                    (condition-accessor
                      g$10981$13357$xgWN3
                      g$10978$13364$xgWN3))
                  (g$source-character$13368$xgWN3
                    (condition-accessor
                      g$10981$13357$xgWN3
                      g$10979$13365$xgWN3)))
          (if (pair? g$x$13356$xgWN3)
            (g$make-source-condition$13363$xgWN3
              (car g$x$13356$xgWN3)
              (cdr g$x$13356$xgWN3))
            (condition))))))
   (g$extract-position-condition$10161$xgWN3
     g$extract-position-condition$13696$xgWN3
     (case-lambda
       ((g$x$13369$xgWN3)
        (g$make-source-condition$10160$xgWN3
          (g$expression-position$10162$xgWN3 g$x$13369$xgWN3)))))
   (g$expression-position$10162$xgWN3
     g$expression-position$13697$xgWN3
     (case-lambda
       ((g$x$13370$xgWN3)
        (if (g$stx?$9658$xgWN3 g$x$13370$xgWN3)
          (begin
            '#f
            ((case-lambda
               ((g$x$13371$xgWN3)
                (if (annotation? g$x$13371$xgWN3)
                  (begin '#f (annotation-source g$x$13371$xgWN3))
                  '#f)))
             (g$stx-expr$9660$xgWN3 g$x$13370$xgWN3)))
          '#f))))
   (g$assertion-error$10163$xgWN3
     g$assertion-error$13698$xgWN3
     (case-lambda
       ((g$expr$13372$xgWN3 g$pos$13373$xgWN3)
        (raise
          (condition
            (g$make-assertion-violation$7447$xgWN3)
            (g$make-who-condition$7465$xgWN3 'assert)
            (g$make-message-condition$7405$xgWN3 '"assertion failed")
            (g$make-irritants-condition$7455$xgWN3 (list g$expr$13372$xgWN3))
            (g$make-source-condition$10160$xgWN3 g$pos$13373$xgWN3))))))
   (g$syntax-error$10164$xgWN3
     g$syntax-error$13699$xgWN3
     (case-lambda
       ((g$x$13374$xgWN3 . g$args$13375$xgWN3)
        (begin
          (if (not (g$for-all$6083$xgWN3 string? g$args$13375$xgWN3))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$13375$xgWN3)
            (void))
          (raise
            (condition
              (g$make-message-condition$7405$xgWN3
                (if (null? g$args$13375$xgWN3)
                  '"invalid syntax"
                  (apply string-append g$args$13375$xgWN3)))
              (g$make-syntax-violation$7499$xgWN3
                (g$syntax->datum$10170$xgWN3 g$x$13374$xgWN3)
                '#f)
              (g$extract-position-condition$10161$xgWN3 g$x$13374$xgWN3)
              (g$extract-trace$10165$xgWN3 g$x$13374$xgWN3)))))))
   (g$extract-trace$10165$xgWN3
     g$extract-trace$13700$xgWN3
     (case-lambda
       ((g$x$13376$xgWN3)
        (letrec* ((g$11006$13377$xgWN3
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$7399$xgWN3
                      'g$11009$xgWN3
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11008$13378$xgWN3 '#f)
                  (g$11007$13379$xgWN3
                    (make-record-constructor-descriptor
                      g$11006$13377$xgWN3
                      g$&condition-rcd$7400$xgWN3
                      g$11008$13378$xgWN3))
                  (g$11005$13382$xgWN3 (record-predicate g$11006$13377$xgWN3))
                  (g$make-trace$13383$xgWN3
                    (record-constructor g$11007$13379$xgWN3))
                  (g$11004$13384$xgWN3 (record-accessor g$11006$13377$xgWN3 '0))
                  (g$trace?$13385$xgWN3
                    (condition-predicate g$11006$13377$xgWN3))
                  (g$trace-form$13386$xgWN3
                    (condition-accessor
                      g$11006$13377$xgWN3
                      g$11004$13384$xgWN3)))
          ((letrec ((g$f$13387$xgWN3
                      (case-lambda
                        ((g$x$13388$xgWN3)
                         (if (g$stx?$9658$xgWN3 g$x$13388$xgWN3)
                           (apply
                             condition
                             (g$make-trace$13383$xgWN3 g$x$13388$xgWN3)
                             (g$map$6085$xgWN3
                               g$f$13387$xgWN3
                               (g$stx-ae*$9663$xgWN3 g$x$13388$xgWN3)))
                           (if (annotation? g$x$13388$xgWN3)
                             (g$make-trace$13383$xgWN3
                               (g$make-stx$9659$xgWN3
                                 g$x$13388$xgWN3
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$13387$xgWN3)
           g$x$13376$xgWN3)))))
   (g$syntax-violation*$10166$xgWN3
     g$syntax-violation*$13701$xgWN3
     (case-lambda
       ((g$who$13389$xgWN3
          g$msg$13390$xgWN3
          g$form$13391$xgWN3
          g$condition-object$13392$xgWN3)
        (begin
          (if (not (string? g$msg$13390$xgWN3))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$13390$xgWN3)
            (void))
          ((case-lambda
             ((g$who$13393$xgWN3)
              (raise
                (condition
                  (if g$who$13393$xgWN3
                    (g$make-who-condition$7465$xgWN3 g$who$13393$xgWN3)
                    (condition))
                  (g$make-message-condition$7405$xgWN3 g$msg$13390$xgWN3)
                  g$condition-object$13392$xgWN3
                  (g$extract-position-condition$10161$xgWN3 g$form$13391$xgWN3)
                  (g$extract-trace$10165$xgWN3 g$form$13391$xgWN3)))))
           (if ((case-lambda
                  ((g$t$13394$xgWN3)
                   (if g$t$13394$xgWN3
                     g$t$13394$xgWN3
                     (begin '#f (g$symbol?$6756$xgWN3 g$who$13389$xgWN3)))))
                (string? g$who$13389$xgWN3))
             g$who$13389$xgWN3
             (if (not g$who$13389$xgWN3)
               ((case-lambda
                  ((g$t$13395$xgWN3)
                   ((case-lambda
                      ((g$ls/false$13396$xgWN3)
                       (if (if g$ls/false$13396$xgWN3
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$13397$xgWN3)
                                    (g$id?$9686$xgWN3 g$id$13397$xgWN3)))
                                 g$ls/false$13396$xgWN3))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$13398$xgWN3)
                              (g$syntax->datum$10170$xgWN3 g$id$13398$xgWN3)))
                           g$ls/false$13396$xgWN3)
                         ((case-lambda
                            ((g$t$13399$xgWN3)
                             ((case-lambda
                                ((g$ls/false$13400$xgWN3)
                                 (if (if g$ls/false$13400$xgWN3
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$13401$xgWN3
                                                g$rest$13402$xgWN3)
                                              (g$id?$9686$xgWN3
                                                g$id$13401$xgWN3)))
                                           g$ls/false$13400$xgWN3))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$13403$xgWN3 g$rest$13404$xgWN3)
                                        (g$syntax->datum$10170$xgWN3
                                          g$id$13403$xgWN3)))
                                     g$ls/false$13400$xgWN3)
                                   ((case-lambda
                                      ((g$t$13405$xgWN3)
                                       ((case-lambda
                                          ((g$ls/false$13406$xgWN3)
                                           (if g$ls/false$13406$xgWN3
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$13406$xgWN3)
                                             (g$syntax-violation$10167$xgWN3
                                               '#f
                                               '"invalid syntax"
                                               g$t$13405$xgWN3))))
                                        (g$syntax-dispatch$10049$xgWN3
                                          g$t$13405$xgWN3
                                          '_))))
                                    g$t$13399$xgWN3))))
                              (g$syntax-dispatch$10049$xgWN3
                                g$t$13399$xgWN3
                                '(any . any)))))
                          g$t$13395$xgWN3))))
                    (g$syntax-dispatch$10049$xgWN3 g$t$13395$xgWN3 'any))))
                g$form$13391$xgWN3)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$13389$xgWN3))))))))
   (g$syntax-violation$10167$xgWN3
     g$syntax-violation$13702$xgWN3
     (case-lambda
       ((g$who$13407$xgWN3 g$msg$13408$xgWN3 g$form$13409$xgWN3)
        (g$syntax-violation$10167$xgWN3
          g$who$13407$xgWN3
          g$msg$13408$xgWN3
          g$form$13409$xgWN3
          '#f))
       ((g$who$13410$xgWN3
          g$msg$13411$xgWN3
          g$form$13412$xgWN3
          g$subform$13413$xgWN3)
        (g$syntax-violation*$10166$xgWN3
          g$who$13410$xgWN3
          g$msg$13411$xgWN3
          g$form$13412$xgWN3
          (g$make-syntax-violation$7499$xgWN3
            (g$syntax->datum$10170$xgWN3 g$form$13412$xgWN3)
            (g$syntax->datum$10170$xgWN3 g$subform$13413$xgWN3))))))
   (g$identifier?$10168$xgWN3
     g$identifier?$13703$xgWN3
     (case-lambda ((g$x$13414$xgWN3) (g$id?$9686$xgWN3 g$x$13414$xgWN3))))
   (g$datum->syntax$10169$xgWN3
     g$datum->syntax$13704$xgWN3
     (case-lambda
       ((g$id$13415$xgWN3 g$datum$13416$xgWN3)
        (if (g$id?$9686$xgWN3 g$id$13415$xgWN3)
          (g$datum->stx$9669$xgWN3 g$id$13415$xgWN3 g$datum$13416$xgWN3)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$13415$xgWN3)))))
   (g$syntax->datum$10170$xgWN3
     g$syntax->datum$13705$xgWN3
     (case-lambda
       ((g$x$13417$xgWN3) (g$stx->datum$9697$xgWN3 g$x$13417$xgWN3))))
   (g$compile-r6rs-top-level$10171$xgWN3
     g$compile-r6rs-top-level$13706$xgWN3
     (case-lambda
       ((g$x*$13418$xgWN3)
        (call-with-values
          (case-lambda (() (g$top-level-expander$10111$xgWN3 g$x*$13418$xgWN3)))
          (case-lambda
            ((g$lib*$13421$xgWN3 g$invoke-code$13422$xgWN3)
             ((case-lambda
                ((g$invoke-code$13423$xgWN3 g$lib*$13424$xgWN3)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$6086$xgWN3
                        g$invoke-library$9425$xgWN3
                        g$lib*$13424$xgWN3)
                      (eval-core
                        (g$expanded->core$9158$xgWN3
                          g$invoke-code$13423$xgWN3)))))))
              g$invoke-code$13422$xgWN3
              g$lib*$13421$xgWN3)))))))
   (g$pre-compile-r6rs-top-level$10172$xgWN3
     g$pre-compile-r6rs-top-level$13707$xgWN3
     (case-lambda
       ((g$x*$13425$xgWN3)
        (call-with-values
          (case-lambda (() (g$top-level-expander$10111$xgWN3 g$x*$13425$xgWN3)))
          (case-lambda
            ((g$lib*$13428$xgWN3 g$invoke-code$13429$xgWN3)
             ((case-lambda
                ((g$invoke-code$13430$xgWN3 g$lib*$13431$xgWN3)
                 (begin
                   (g$for-each$6086$xgWN3
                     g$invoke-library$9425$xgWN3
                     g$lib*$13431$xgWN3)
                   (compile-core
                     (g$expanded->core$9158$xgWN3 g$invoke-code$13430$xgWN3)))))
              g$invoke-code$13429$xgWN3
              g$lib*$13428$xgWN3)))))))
   (g$new-interaction-environment$10173$xgWN3
     g$new-interaction-environment$13708$xgWN3
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$13432$xgWN3 g$rib$13433$xgWN3)
            (begin
              ((case-lambda
                 ((g$subst$13434$xgWN3)
                  (begin
                    (g$set-rib-sym*!$9639$xgWN3
                      g$rib$13433$xgWN3
                      (g$map$6085$xgWN3 car g$subst$13434$xgWN3))
                    (g$set-rib-mark**!$9640$xgWN3
                      g$rib$13433$xgWN3
                      (g$map$6085$xgWN3
                        (case-lambda ((g$x$13435$xgWN3) g$top-mark*$9619$xgWN3))
                        g$subst$13434$xgWN3))
                    (g$set-rib-label*!$9641$xgWN3
                      g$rib$13433$xgWN3
                      (g$map$6085$xgWN3 cdr g$subst$13434$xgWN3)))))
               (g$library-subst$9382$xgWN3 g$lib$13432$xgWN3))
              (g$make-interaction-env$10132$xgWN3 g$rib$13433$xgWN3 '() '()))))
         (g$find-library-by-name$9418$xgWN3 '(ironscheme))
         (g$make-empty-rib$9644$xgWN3)))))
   (g$interaction-environment$10174$xgWN3
     g$interaction-environment$13709$xgWN3
     ((case-lambda
        ((g$e$13436$xgWN3)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$13437$xgWN3)
                (if g$t$13437$xgWN3
                  g$t$13437$xgWN3
                  (begin
                    '#f
                    (begin
                      (set! g$e$13436$xgWN3
                        (g$new-interaction-environment$10173$xgWN3))
                      g$e$13436$xgWN3)))))
             g$e$13436$xgWN3)))))
      '#f))
   (g$top-level-context$10175$xgWN3
     g$top-level-context$13710$xgWN3
     (g$make-parameter$8910$xgWN3 '#f)))
  (g$current-library-expander$9415$xgWN3 g$library-expander$10151$xgWN3))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$9155$xgWN3
      (case-lambda
        ((g$x$13786$xgWN3)
         ((case-lambda
            ((g$t$13787$xgWN3) (if g$t$13787$xgWN3 (cdr g$t$13787$xgWN3) '#f)))
          (g$assq$6073$xgWN3
            g$x$13786$xgWN3
            '((ellipsis-map . g$ellipsis-map$13595$xgWN3)
              (&no-nans-rcd . g$&no-nans-rcd$7634$xgWN3)
              (&no-nans-rtd . g$&no-nans-rtd$7633$xgWN3)
              (&no-infinities-rcd . g$&no-infinities-rcd$7626$xgWN3)
              (&no-infinities-rtd . g$&no-infinities-rtd$7625$xgWN3)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$7618$xgWN3)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$7617$xgWN3)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$7608$xgWN3)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$7607$xgWN3)
              (&i/o-port-rcd . g$&i/o-port-rcd$7600$xgWN3)
              (&i/o-port-rtd . g$&i/o-port-rtd$7599$xgWN3)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$7590$xgWN3)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$7589$xgWN3)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$7582$xgWN3)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$7581$xgWN3)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$7574$xgWN3)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$7573$xgWN3)
              (&i/o-file-protection-rcd . g$&i/o-file-protection-rcd$7566$xgWN3)
              (&i/o-file-protection-rtd . g$&i/o-file-protection-rtd$7565$xgWN3)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$7558$xgWN3)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$7557$xgWN3)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$7548$xgWN3)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$7547$xgWN3)
              (&i/o-write-rcd . g$&i/o-write-rcd$7538$xgWN3)
              (&i/o-write-rtd . g$&i/o-write-rtd$7537$xgWN3)
              (&i/o-read-rcd . g$&i/o-read-rcd$7530$xgWN3)
              (&i/o-read-rtd . g$&i/o-read-rtd$7529$xgWN3)
              (&i/o-rcd . g$&i/o-rcd$7522$xgWN3)
              (&i/o-rtd . g$&i/o-rtd$7521$xgWN3)
              (&undefined-rcd . g$&undefined-rcd$7514$xgWN3)
              (&undefined-rtd . g$&undefined-rtd$7513$xgWN3)
              (&syntax-rcd . g$&syntax-rcd$7506$xgWN3)
              (&syntax-rtd . g$&syntax-rtd$7505$xgWN3)
              (&lexical-rcd . g$&lexical-rcd$7494$xgWN3)
              (&lexical-rtd . g$&lexical-rtd$7493$xgWN3)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$7486$xgWN3)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$7485$xgWN3)
              (&non-continuable-rcd . g$&non-continuable-rcd$7478$xgWN3)
              (&non-continuable-rtd . g$&non-continuable-rtd$7477$xgWN3)
              (&who-rcd . g$&who-rcd$7470$xgWN3)
              (&who-rtd . g$&who-rtd$7469$xgWN3)
              (&irritants-rcd . g$&irritants-rcd$7460$xgWN3)
              (&irritants-rtd . g$&irritants-rtd$7459$xgWN3)
              (&assertion-rcd . g$&assertion-rcd$7450$xgWN3)
              (&assertion-rtd . g$&assertion-rtd$7449$xgWN3)
              (&violation-rcd . g$&violation-rcd$7442$xgWN3)
              (&violation-rtd . g$&violation-rtd$7441$xgWN3)
              (&error-rcd . g$&error-rcd$7434$xgWN3)
              (&error-rtd . g$&error-rtd$7433$xgWN3)
              (&serious-rcd . g$&serious-rcd$7426$xgWN3)
              (&serious-rtd . g$&serious-rtd$7425$xgWN3)
              (&warning-rcd . g$&warning-rcd$7418$xgWN3)
              (&warning-rtd . g$&warning-rtd$7417$xgWN3)
              (&message-rcd . g$&message-rcd$7410$xgWN3)
              (&message-rtd . g$&message-rtd$7409$xgWN3)
              (&condition-rcd . g$&condition-rcd$7400$xgWN3)
              (&condition-rtd . g$&condition-rtd$7399$xgWN3)
              (make-list . g$make-list$6068$xgWN3)
              (last-pair . g$last-pair$6067$xgWN3)
              (ironscheme-build . g$ironscheme-build$13778$xgWN3)
              (syntax-error . g$syntax-error$13699$xgWN3)
              (syntax-dispatch . g$syntax-dispatch$13590$xgWN3)
              (compile-system-libraries
                .
                g$compile-system-libraries$13781$xgWN3)
              (compile->closure . g$compile->closure$13783$xgWN3)
              (compile . g$compile$13782$xgWN3)
              (load . g$load$13777$xgWN3)
              (interaction-environment . g$interaction-environment$13709$xgWN3)
              (string-normalize-nfkd . g$string-normalize-nfkd$7850$xgWN3)
              (string-normalize-nfkc . g$string-normalize-nfkc$7849$xgWN3)
              (string-normalize-nfd . g$string-normalize-nfd$7848$xgWN3)
              (string-normalize-nfc . g$string-normalize-nfc$7847$xgWN3)
              (string-ci>? . g$string-ci>?$7839$xgWN3)
              (string-ci>=? . g$string-ci>=?$7841$xgWN3)
              (string-ci=? . g$string-ci=?$7837$xgWN3)
              (string-ci<? . g$string-ci<?$7838$xgWN3)
              (string-ci<=? . g$string-ci<=?$7840$xgWN3)
              (char-ci>? . g$char-ci>?$7844$xgWN3)
              (char-ci>=? . g$char-ci>=?$7846$xgWN3)
              (char-ci=? . g$char-ci=?$7842$xgWN3)
              (char-ci<? . g$char-ci<?$7843$xgWN3)
              (char-ci<=? . g$char-ci<=?$7845$xgWN3)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$13528$xgWN3)
              (variable-transformer? . g$variable-transformer?$13527$xgWN3)
              (make-variable-transformer
                .
                g$make-variable-transformer$13525$xgWN3)
              (identifier? . g$identifier?$13703$xgWN3)
              (generate-temporaries . g$generate-temporaries$13692$xgWN3)
              (free-identifier=? . g$free-identifier=?$13693$xgWN3)
              (syntax->datum . g$syntax->datum$13705$xgWN3)
              (datum->syntax . g$datum->syntax$13704$xgWN3)
              (bound-identifier=? . g$bound-identifier=?$13694$xgWN3)
              (delete-file . g$delete-file$6874$xgWN3)
              (file-exists? . g$file-exists?$6873$xgWN3)
              (list-sort . g$list-sort$7698$xgWN3)
              (make-eqv-hashtable . g$make-eqv-hashtable$6856$xgWN3)
              (make-eq-hashtable . g$make-eq-hashtable$6855$xgWN3)
              (hashtable-update! . g$hashtable-update!$6862$xgWN3)
              (hashtable-size . g$hashtable-size$6857$xgWN3)
              (hashtable-set! . g$hashtable-set!$6859$xgWN3)
              (hashtable-ref . g$hashtable-ref$6858$xgWN3)
              (hashtable-delete! . g$hashtable-delete!$6860$xgWN3)
              (hashtable-contains? . g$hashtable-contains?$6861$xgWN3)
              (hashtable-clear! . g$hashtable-clear!$6863$xgWN3)
              (call-with-output-file . g$call-with-output-file$8252$xgWN3)
              (call-with-input-file . g$call-with-input-file$8251$xgWN3)
              (write-char . g$write-char$8248$xgWN3)
              (with-output-to-file . g$with-output-to-file$8250$xgWN3)
              (with-input-from-file . g$with-input-from-file$8249$xgWN3)
              (read-char . g$read-char$8247$xgWN3)
              (peek-char . g$peek-char$8246$xgWN3)
              (newline . g$newline$8253$xgWN3)
              (put-datum . g$put-datum$8186$xgWN3)
              (port? . g$port?$8191$xgWN3)
              (open-string-output-port . g$open-string-output-port$8190$xgWN3)
              (make-i/o-write-error . g$make-i/o-write-error$7535$xgWN3)
              (make-i/o-read-error . g$make-i/o-read-error$7527$xgWN3)
              (make-i/o-port-error . g$make-i/o-port-error$7595$xgWN3)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$7543$xgWN3)
              (make-i/o-filename-error . g$make-i/o-filename-error$7553$xgWN3)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$7563$xgWN3)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$7571$xgWN3)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$7587$xgWN3)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$7579$xgWN3)
              (make-i/o-error . g$make-i/o-error$7519$xgWN3)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$7613$xgWN3)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$7605$xgWN3)
              (i/o-write-error? . g$i/o-write-error?$7536$xgWN3)
              (i/o-read-error? . g$i/o-read-error?$7528$xgWN3)
              (i/o-port-error? . g$i/o-port-error?$7597$xgWN3)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$7545$xgWN3)
              (i/o-error-position . g$i/o-error-position$7546$xgWN3)
              (i/o-filename-error? . g$i/o-filename-error?$7555$xgWN3)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$7564$xgWN3)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$7572$xgWN3)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$7588$xgWN3)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$7580$xgWN3)
              (i/o-error? . g$i/o-error?$7520$xgWN3)
              (i/o-error-port . g$i/o-error-port$7598$xgWN3)
              (i/o-error-filename . g$i/o-error-filename$7556$xgWN3)
              (i/o-encoding-error? . g$i/o-encoding-error?$7615$xgWN3)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$7616$xgWN3)
              (i/o-decoding-error? . g$i/o-decoding-error?$7606$xgWN3)
              (get-datum . g$get-datum$8187$xgWN3)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$8192$xgWN3)
              (call-with-port . g$call-with-port$8193$xgWN3)
              (scheme-report-environment
                .
                g$scheme-report-environment$13682$xgWN3)
              (quotient . g$quotient$7665$xgWN3)
              (null-environment . g$null-environment$13681$xgWN3)
              (remainder . g$remainder$7666$xgWN3)
              (modulo . g$modulo$7667$xgWN3)
              (inexact->exact . g$inexact->exact$7662$xgWN3)
              (force . g$force$7669$xgWN3)
              (exact->inexact . g$exact->inexact$7663$xgWN3)
              (command-line . g$command-line$13773$xgWN3)
              (remove . g$remove$6090$xgWN3)
              (remv . g$remv$6091$xgWN3)
              (remp . g$remp$6071$xgWN3)
              (remq . g$remq$6092$xgWN3)
              (partition . g$partition$6070$xgWN3)
              (memv . g$memv$6078$xgWN3)
              (memq . g$memq$6077$xgWN3)
              (memp . g$memp$6080$xgWN3)
              (member . g$member$6079$xgWN3)
              (exists . g$exists$6084$xgWN3)
              (for-all . g$for-all$6083$xgWN3)
              (fold-right . g$fold-right$6089$xgWN3)
              (fold-left . g$fold-left$6088$xgWN3)
              (find . g$find$6069$xgWN3)
              (filter . g$filter$6072$xgWN3)
              (cons* . g$cons*$6087$xgWN3)
              (assv . g$assv$6074$xgWN3)
              (assq . g$assq$6073$xgWN3)
              (assp . g$assp$6076$xgWN3)
              (assoc . g$assoc$6075$xgWN3)
              (eval . g$eval$13684$xgWN3)
              (environment . g$environment$13680$xgWN3)
              (make-enumeration . g$make-enumeration$8389$xgWN3)
              (enum-set=? . g$enum-set=?$8396$xgWN3)
              (enum-set-universe . g$enum-set-universe$8390$xgWN3)
              (enum-set-union . g$enum-set-union$8397$xgWN3)
              (enum-set-subset? . g$enum-set-subset?$8395$xgWN3)
              (enum-set-projection . g$enum-set-projection$8401$xgWN3)
              (enum-set-member? . g$enum-set-member?$8394$xgWN3)
              (enum-set-intersection . g$enum-set-intersection$8398$xgWN3)
              (enum-set-indexer . g$enum-set-indexer$8391$xgWN3)
              (enum-set-difference . g$enum-set-difference$8399$xgWN3)
              (enum-set-constructor . g$enum-set-constructor$8392$xgWN3)
              (enum-set-complement . g$enum-set-complement$8400$xgWN3)
              (enum-set->list . g$enum-set->list$8393$xgWN3)
              (who-condition? . g$who-condition?$7467$xgWN3)
              (warning? . g$warning?$7416$xgWN3)
              (violation? . g$violation?$7440$xgWN3)
              (undefined-violation? . g$undefined-violation?$7512$xgWN3)
              (syntax-violation? . g$syntax-violation?$7502$xgWN3)
              (syntax-violation-subform . g$syntax-violation-subform$7504$xgWN3)
              (syntax-violation-form . g$syntax-violation-form$7503$xgWN3)
              (syntax-violation . g$syntax-violation$13702$xgWN3)
              (serious-condition? . g$serious-condition?$7424$xgWN3)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$7476$xgWN3)
              (message-condition? . g$message-condition?$7407$xgWN3)
              (make-who-condition . g$make-who-condition$7465$xgWN3)
              (make-warning . g$make-warning$7415$xgWN3)
              (make-violation . g$make-violation$7439$xgWN3)
              (make-undefined-violation . g$make-undefined-violation$7511$xgWN3)
              (make-syntax-violation . g$make-syntax-violation$7499$xgWN3)
              (make-serious-condition . g$make-serious-condition$7423$xgWN3)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$7475$xgWN3)
              (make-message-condition . g$make-message-condition$7405$xgWN3)
              (make-lexical-violation . g$make-lexical-violation$7491$xgWN3)
              (make-irritants-condition . g$make-irritants-condition$7455$xgWN3)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$7483$xgWN3)
              (make-error . g$make-error$7431$xgWN3)
              (make-assertion-violation . g$make-assertion-violation$7447$xgWN3)
              (lexical-violation? . g$lexical-violation?$7492$xgWN3)
              (irritants-condition? . g$irritants-condition?$7457$xgWN3)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$7484$xgWN3)
              (error? . g$error?$7432$xgWN3)
              (condition-who . g$condition-who$7468$xgWN3)
              (condition-message . g$condition-message$7408$xgWN3)
              (condition-irritants . g$condition-irritants$7458$xgWN3)
              (assertion-violation? . g$assertion-violation?$7448$xgWN3)
              (native-endianness . g$native-endianness$6987$xgWN3)
              (bytevector? . g$bytevector?$6755$xgWN3)
              (bytevector-u64-set! . g$bytevector-u64-set!$7008$xgWN3)
              (bytevector-u64-ref . g$bytevector-u64-ref$7004$xgWN3)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$7010$xgWN3)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$7006$xgWN3)
              (bytevector-u32-set! . g$bytevector-u32-set!$7000$xgWN3)
              (bytevector-u32-ref . g$bytevector-u32-ref$6996$xgWN3)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$7002$xgWN3)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$6998$xgWN3)
              (bytevector-u16-set! . g$bytevector-u16-set!$6992$xgWN3)
              (bytevector-u16-ref . g$bytevector-u16-ref$6988$xgWN3)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$6994$xgWN3)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$6990$xgWN3)
              (bytevector-s64-set! . g$bytevector-s64-set!$7009$xgWN3)
              (bytevector-s64-ref . g$bytevector-s64-ref$7005$xgWN3)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$7011$xgWN3)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$7007$xgWN3)
              (bytevector-s32-set! . g$bytevector-s32-set!$7001$xgWN3)
              (bytevector-s32-ref . g$bytevector-s32-ref$6997$xgWN3)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$7003$xgWN3)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$6999$xgWN3)
              (bytevector-s16-set! . g$bytevector-s16-set!$6993$xgWN3)
              (bytevector-s16-ref . g$bytevector-s16-ref$6989$xgWN3)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$6995$xgWN3)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$6991$xgWN3)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$7014$xgWN3)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$7012$xgWN3)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$7015$xgWN3)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$7013$xgWN3)
              (no-nans-violation? . g$no-nans-violation?$7632$xgWN3)
              (no-infinities-violation? . g$no-infinities-violation?$7624$xgWN3)
              (make-no-nans-violation . g$make-no-nans-violation$7631$xgWN3)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$7623$xgWN3)
              (flzero? . g$flzero?$8159$xgWN3)
              (fltruncate . g$fltruncate$8154$xgWN3)
              (fltan . g$fltan$8144$xgWN3)
              (flsqrt . g$flsqrt$8149$xgWN3)
              (flsin . g$flsin$8142$xgWN3)
              (flround . g$flround$8155$xgWN3)
              (flpositive? . g$flpositive?$8157$xgWN3)
              (flonum? . g$flonum?$6760$xgWN3)
              (flodd? . g$flodd?$8161$xgWN3)
              (flnegative? . g$flnegative?$8158$xgWN3)
              (flnan? . g$flnan?$8141$xgWN3)
              (flmod0 . g$flmod0$8137$xgWN3)
              (flmod . g$flmod$8136$xgWN3)
              (flmin . g$flmin$8163$xgWN3)
              (flmax . g$flmax$8162$xgWN3)
              (fllog . g$fllog$8148$xgWN3)
              (flinteger? . g$flinteger?$8138$xgWN3)
              (flinfinite? . g$flinfinite?$8140$xgWN3)
              (flfloor . g$flfloor$8153$xgWN3)
              (flfinite? . g$flfinite?$8139$xgWN3)
              (flexpt . g$flexpt$8151$xgWN3)
              (flexp . g$flexp$8150$xgWN3)
              (fleven? . g$fleven?$8160$xgWN3)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$8133$xgWN3)
              (fldiv0 . g$fldiv0$8135$xgWN3)
              (fldiv-and-mod . g$fldiv-and-mod$8132$xgWN3)
              (fldiv . g$fldiv$8134$xgWN3)
              (flcos . g$flcos$8143$xgWN3)
              (flceiling . g$flceiling$8152$xgWN3)
              (flatan . g$flatan$8147$xgWN3)
              (flasin . g$flasin$8145$xgWN3)
              (flacos . g$flacos$8146$xgWN3)
              (flabs . g$flabs$8156$xgWN3)
              (fxzero? . g$fxzero?$8000$xgWN3)
              (fxrotate-bit-field . g$fxrotate-bit-field$8014$xgWN3)
              (fxpositive? . g$fxpositive?$7998$xgWN3)
              (fxodd? . g$fxodd?$8002$xgWN3)
              (fxnegative? . g$fxnegative?$7999$xgWN3)
              (fxmod0 . g$fxmod0$7997$xgWN3)
              (fxmod . g$fxmod$7996$xgWN3)
              (fxmin . g$fxmin$8004$xgWN3)
              (fxmax . g$fxmax$8003$xgWN3)
              (fxif . g$fxif$8008$xgWN3)
              (fxeven? . g$fxeven?$8001$xgWN3)
              (fxdiv0 . g$fxdiv0$7995$xgWN3)
              (fxdiv . g$fxdiv$7994$xgWN3)
              (fxcopy-bit-field . g$fxcopy-bit-field$8011$xgWN3)
              (fxcopy-bit . g$fxcopy-bit$8009$xgWN3)
              (fxbit-field . g$fxbit-field$8010$xgWN3)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$8013$xgWN3)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$8012$xgWN3)
              (fx-/carry . g$fx-/carry$8006$xgWN3)
              (fx+/carry . g$fx+/carry$8007$xgWN3)
              (fx*/carry . g$fx*/carry$8005$xgWN3)
              (fixnum-width . g$fixnum-width$6761$xgWN3)
              (fixnum? . g$fixnum?$6759$xgWN3)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$7888$xgWN3)
              (bitwise-if . g$bitwise-if$7882$xgWN3)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$7885$xgWN3)
              (bitwise-copy-bit . g$bitwise-copy-bit$7883$xgWN3)
              (bitwise-bit-field . g$bitwise-bit-field$7884$xgWN3)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$7887$xgWN3)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$7886$xgWN3)
              (zero? . g$zero?$6794$xgWN3)
              (vector? . g$vector?$6754$xgWN3)
              (vector-map . g$vector-map$6816$xgWN3)
              (vector-for-each . g$vector-for-each$6817$xgWN3)
              (vector-fill! . g$vector-fill!$6762$xgWN3)
              (symbol? . g$symbol?$6756$xgWN3)
              (symbol=? . g$symbol=?$6806$xgWN3)
              (string>? . g$string>?$6803$xgWN3)
              (string>=? . g$string>=?$6805$xgWN3)
              (string=? . g$string=?$6801$xgWN3)
              (string<? . g$string<?$6802$xgWN3)
              (string<=? . g$string<=?$6804$xgWN3)
              (string-for-each . g$string-for-each$6818$xgWN3)
              (reverse . g$reverse$6763$xgWN3)
              (rationalize . g$rationalize$6813$xgWN3)
              (procedure? . g$procedure?$6758$xgWN3)
              (positive? . g$positive?$6792$xgWN3)
              (odd? . g$odd?$6796$xgWN3)
              (negative? . g$negative?$6793$xgWN3)
              (min . g$min$6798$xgWN3)
              (max . g$max$6797$xgWN3)
              (map . g$map$6085$xgWN3)
              (list-tail . g$list-tail$6065$xgWN3)
              (list-ref . g$list-ref$6066$xgWN3)
              (list->vector . g$list->vector$6751$xgWN3)
              (list->string . g$list->string$6752$xgWN3)
              (lcm . g$lcm$6800$xgWN3)
              (gcd . g$gcd$6799$xgWN3)
              (for-each . g$for-each$6086$xgWN3)
              (even? . g$even?$6795$xgWN3)
              (mod0 . g$mod0$6750$xgWN3)
              (div0 . g$div0$6748$xgWN3)
              (mod . g$mod$6749$xgWN3)
              (div . g$div$6747$xgWN3)
              (char? . g$char?$6753$xgWN3)
              (char>? . g$char>?$6810$xgWN3)
              (char>=? . g$char>=?$6812$xgWN3)
              (char=? . g$char=?$6808$xgWN3)
              (char<? . g$char<?$6809$xgWN3)
              (char<=? . g$char<=?$6811$xgWN3)
              (cddddr . g$cddddr$6791$xgWN3)
              (cdddar . g$cdddar$6790$xgWN3)
              (cddadr . g$cddadr$6789$xgWN3)
              (cddaar . g$cddaar$6788$xgWN3)
              (cdaddr . g$cdaddr$6787$xgWN3)
              (cdadar . g$cdadar$6786$xgWN3)
              (cdaadr . g$cdaadr$6785$xgWN3)
              (cdaaar . g$cdaaar$6784$xgWN3)
              (cadddr . g$cadddr$6783$xgWN3)
              (caddar . g$caddar$6782$xgWN3)
              (cadadr . g$cadadr$6781$xgWN3)
              (cadaar . g$cadaar$6780$xgWN3)
              (caaddr . g$caaddr$6779$xgWN3)
              (caadar . g$caadar$6778$xgWN3)
              (caaadr . g$caaadr$6777$xgWN3)
              (caaaar . g$caaaar$6776$xgWN3)
              (cdddr . g$cdddr$6775$xgWN3)
              (cddar . g$cddar$6774$xgWN3)
              (cdadr . g$cdadr$6773$xgWN3)
              (cdaar . g$cdaar$6772$xgWN3)
              (caddr . g$caddr$6771$xgWN3)
              (cadar . g$cadar$6770$xgWN3)
              (caadr . g$caadr$6769$xgWN3)
              (caaar . g$caaar$6768$xgWN3)
              (cddr . g$cddr$6767$xgWN3)
              (cdar . g$cdar$6766$xgWN3)
              (cadr . g$cadr$6765$xgWN3)
              (caar . g$caar$6764$xgWN3)
              (boolean? . g$boolean?$6757$xgWN3)
              (boolean=? . g$boolean=?$6807$xgWN3)
              (enum-set? . g$enum?$8370$xgWN3)
              (make-promise . g$make-promise$7668$xgWN3)
              (load/unload . g$load/unload$13776$xgWN3)
              (load/args . g$load/args$13775$xgWN3)
              (printf . g$printf$8425$xgWN3)
              (fprintf . g$fprintf$8426$xgWN3)
              (format . g$format$8427$xgWN3)
              (trace-printer . g$trace-printer$13772$xgWN3)
              (make-traced-macro . g$make-traced-macro$8431$xgWN3)
              (assertion-error . g$assertion-error$13698$xgWN3)
              (make-parameter . g$make-parameter$8910$xgWN3)
              (environment-bindings . g$environment-bindings$13676$xgWN3)
              (environment-symbols . g$environment-symbols$13679$xgWN3)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$13675$xgWN3)
              (library-path . g$library-path$9407$xgWN3)
              (make-compile-time-value . g$make-compile-time-value$13526$xgWN3)
              (expand->core . g$expand->core$13685$xgWN3)
              (expand . g$expand$13683$xgWN3)
              (convert->cps . g$convert->cps$8749$xgWN3)
              (installed-libraries . g$installed-libraries$9428$xgWN3)
              (uninstall-library . g$uninstall-library$9419$xgWN3)))))))
    (g$install-library$9423$xgWN3
      'g$11594$xgWN3
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$11587$xgWN3)
        (cosh . g$11586$xgWN3)
        (sinh . g$11585$xgWN3)
        (make-guid . g$11584$xgWN3)
        (unspecified? . g$11583$xgWN3)
        (make-list . g$5040$xgWN3)
        (last-pair . g$5039$xgWN3)
        (load-r5rs . g$11582$xgWN3)
        (license . g$11581$xgWN3)
        (stacktrace . g$11580$xgWN3)
        (ironscheme-build . g$11076$xgWN3)
        (remove-location . g$11567$xgWN3)
        (set-symbol-value! . g$11566$xgWN3)
        (symbol-value . g$11565$xgWN3)
        (symbol-bound? . g$11564$xgWN3)
        (ungensym . g$11563$xgWN3)
        (gensym . g$11562$xgWN3)
        (void . g$11561$xgWN3)
        (compile-system-libraries . g$11079$xgWN3)
        (compile->closure . g$11081$xgWN3)
        (compile . g$11080$xgWN3)
        (load . g$11075$xgWN3)
        (interaction-environment . g$8097$xgWN3)
        (string-upcase . g$11556$xgWN3)
        (string-titlecase . g$11555$xgWN3)
        (string-normalize-nfkd . g$6274$xgWN3)
        (string-normalize-nfkc . g$6273$xgWN3)
        (string-normalize-nfd . g$6272$xgWN3)
        (string-normalize-nfc . g$6271$xgWN3)
        (string-foldcase . g$11554$xgWN3)
        (string-downcase . g$11553$xgWN3)
        (string-ci>? . g$6258$xgWN3)
        (string-ci>=? . g$6260$xgWN3)
        (string-ci=? . g$6256$xgWN3)
        (string-ci<? . g$6257$xgWN3)
        (string-ci<=? . g$6259$xgWN3)
        (char-whitespace? . g$11552$xgWN3)
        (char-upper-case? . g$11551$xgWN3)
        (char-title-case? . g$11550$xgWN3)
        (char-numeric? . g$11549$xgWN3)
        (char-lower-case? . g$11548$xgWN3)
        (char-general-category . g$11547$xgWN3)
        (char-upcase . g$11546$xgWN3)
        (char-titlecase . g$11545$xgWN3)
        (char-foldcase . g$11544$xgWN3)
        (char-downcase . g$11543$xgWN3)
        (char-ci>? . g$6268$xgWN3)
        (char-ci>=? . g$6270$xgWN3)
        (char-ci=? . g$6266$xgWN3)
        (char-ci<? . g$6267$xgWN3)
        (char-ci<=? . g$6269$xgWN3)
        (char-alphabetic? . g$11542$xgWN3)
        (make-variable-transformer . g$7772$xgWN3)
        (identifier? . g$8091$xgWN3)
        (generate-temporaries . g$8080$xgWN3)
        (free-identifier=? . g$8081$xgWN3)
        (syntax->datum . g$8093$xgWN3)
        (datum->syntax . g$8092$xgWN3)
        (bound-identifier=? . g$8082$xgWN3)
        (record-type-descriptor? . g$11541$xgWN3)
        (record-predicate . g$11540$xgWN3)
        (record-mutator . g$11539$xgWN3)
        (record-constructor . g$11538$xgWN3)
        (record-accessor . g$11537$xgWN3)
        (make-record-type-descriptor . g$11536$xgWN3)
        (make-record-constructor-descriptor . g$11535$xgWN3)
        (record? . g$11534$xgWN3)
        (record-type-uid . g$11533$xgWN3)
        (record-type-sealed? . g$11532$xgWN3)
        (record-type-parent . g$11531$xgWN3)
        (record-type-opaque? . g$11530$xgWN3)
        (record-type-name . g$11529$xgWN3)
        (record-type-generative? . g$11528$xgWN3)
        (record-type-field-names . g$11527$xgWN3)
        (record-rtd . g$11526$xgWN3)
        (record-field-mutable? . g$11525$xgWN3)
        (delete-file . g$5665$xgWN3)
        (file-exists? . g$5664$xgWN3)
        (vector-sort! . g$11524$xgWN3)
        (vector-sort . g$11523$xgWN3)
        (list-sort . g$6227$xgWN3)
        (symbol-hash . g$11522$xgWN3)
        (string-ci-hash . g$11521$xgWN3)
        (string-hash . g$11520$xgWN3)
        (equal-hash . g$11519$xgWN3)
        (hashtable-equivalence-function . g$11518$xgWN3)
        (make-hashtable . g$11517$xgWN3)
        (hashtable-hash-function . g$11516$xgWN3)
        (make-eqv-hashtable . g$5633$xgWN3)
        (make-eq-hashtable . g$5632$xgWN3)
        (hashtable? . g$11515$xgWN3)
        (hashtable-update! . g$5639$xgWN3)
        (hashtable-size . g$5634$xgWN3)
        (hashtable-set! . g$5636$xgWN3)
        (hashtable-ref . g$5635$xgWN3)
        (hashtable-mutable? . g$11514$xgWN3)
        (hashtable-keys . g$11513$xgWN3)
        (hashtable-entries . g$11512$xgWN3)
        (hashtable-delete! . g$5637$xgWN3)
        (hashtable-copy . g$11511$xgWN3)
        (hashtable-contains? . g$5638$xgWN3)
        (hashtable-clear! . g$5640$xgWN3)
        (call-with-output-file . g$6600$xgWN3)
        (call-with-input-file . g$6599$xgWN3)
        (write-char . g$6591$xgWN3)
        (write . g$11510$xgWN3)
        (with-output-to-file . g$6598$xgWN3)
        (with-input-from-file . g$6597$xgWN3)
        (read-char . g$6590$xgWN3)
        (read . g$11509$xgWN3)
        (peek-char . g$6589$xgWN3)
        (open-output-file . g$11508$xgWN3)
        (open-input-file . g$11507$xgWN3)
        (newline . g$6601$xgWN3)
        (display . g$11506$xgWN3)
        (close-output-port . g$11505$xgWN3)
        (close-input-port . g$11504$xgWN3)
        (eof-object? . g$11503$xgWN3)
        (eof-object . g$11502$xgWN3)
        (current-error-port . g$11501$xgWN3)
        (current-output-port . g$11500$xgWN3)
        (current-input-port . g$11499$xgWN3)
        (output-port? . g$11498$xgWN3)
        (input-port? . g$11497$xgWN3)
        (utf-8-codec . g$11496$xgWN3)
        (utf-16-codec . g$11495$xgWN3)
        (transcoder-error-handling-mode . g$11494$xgWN3)
        (transcoder-eol-style . g$11493$xgWN3)
        (transcoder-codec . g$11492$xgWN3)
        (transcoded-port . g$11491$xgWN3)
        (textual-port? . g$11490$xgWN3)
        (string->bytevector . g$11489$xgWN3)
        (standard-output-port . g$11488$xgWN3)
        (standard-input-port . g$11487$xgWN3)
        (standard-error-port . g$11486$xgWN3)
        (set-port-position! . g$11485$xgWN3)
        (put-u8 . g$11484$xgWN3)
        (put-string . g$11483$xgWN3)
        (put-datum . g$6569$xgWN3)
        (put-char . g$11482$xgWN3)
        (put-bytevector . g$11481$xgWN3)
        (port? . g$6574$xgWN3)
        (port-transcoder . g$11480$xgWN3)
        (port-position . g$11479$xgWN3)
        (port-has-set-port-position!? . g$11478$xgWN3)
        (port-has-port-position? . g$11477$xgWN3)
        (port-eof? . g$11476$xgWN3)
        (output-port-buffer-mode . g$11475$xgWN3)
        (open-string-output-port . g$6573$xgWN3)
        (open-string-input-port . g$11474$xgWN3)
        (open-file-output-port . g$11473$xgWN3)
        (open-file-input/output-port . g$11472$xgWN3)
        (open-file-input-port . g$11471$xgWN3)
        (open-bytevector-output-port . g$11470$xgWN3)
        (open-bytevector-input-port . g$11469$xgWN3)
        (native-transcoder . g$11468$xgWN3)
        (native-eol-style . g$11467$xgWN3)
        (make-transcoder . g$11466$xgWN3)
        (latin-1-codec . g$11465$xgWN3)
        (make-i/o-write-error . g$6037$xgWN3)
        (make-i/o-read-error . g$6024$xgWN3)
        (make-i/o-port-error . g$6132$xgWN3)
        (make-i/o-invalid-position-error . g$6050$xgWN3)
        (make-i/o-filename-error . g$6065$xgWN3)
        (make-i/o-file-protection-error . g$6080$xgWN3)
        (make-i/o-file-is-read-only-error . g$6093$xgWN3)
        (make-i/o-file-does-not-exist-error . g$6119$xgWN3)
        (make-i/o-file-already-exists-error . g$6106$xgWN3)
        (make-i/o-error . g$6011$xgWN3)
        (make-i/o-encoding-error . g$6160$xgWN3)
        (make-i/o-decoding-error . g$6147$xgWN3)
        (make-custom-textual-output-port . g$11464$xgWN3)
        (make-custom-textual-input/output-port . g$11463$xgWN3)
        (make-custom-textual-input-port . g$11462$xgWN3)
        (make-custom-binary-output-port . g$11461$xgWN3)
        (make-custom-binary-input/output-port . g$11460$xgWN3)
        (make-custom-binary-input-port . g$11459$xgWN3)
        (make-bytevector . g$11458$xgWN3)
        (lookahead-u8 . g$11457$xgWN3)
        (lookahead-char . g$11456$xgWN3)
        (i/o-write-error? . g$6038$xgWN3)
        (i/o-read-error? . g$6025$xgWN3)
        (i/o-port-error? . g$6134$xgWN3)
        (i/o-invalid-position-error? . g$6052$xgWN3)
        (i/o-error-position . g$6053$xgWN3)
        (i/o-filename-error? . g$6067$xgWN3)
        (i/o-file-protection-error? . g$6081$xgWN3)
        (i/o-file-is-read-only-error? . g$6094$xgWN3)
        (i/o-file-does-not-exist-error? . g$6120$xgWN3)
        (i/o-file-already-exists-error? . g$6107$xgWN3)
        (i/o-error? . g$6012$xgWN3)
        (i/o-error-port . g$6135$xgWN3)
        (i/o-error-filename . g$6068$xgWN3)
        (i/o-encoding-error? . g$6162$xgWN3)
        (i/o-encoding-error-char . g$6163$xgWN3)
        (i/o-decoding-error? . g$6148$xgWN3)
        (get-u8 . g$11455$xgWN3)
        (get-string-n! . g$11454$xgWN3)
        (get-string-n . g$11453$xgWN3)
        (get-string-all . g$11452$xgWN3)
        (get-line . g$11451$xgWN3)
        (get-datum . g$6570$xgWN3)
        (get-char . g$11450$xgWN3)
        (get-bytevector-some . g$11449$xgWN3)
        (get-bytevector-n! . g$11448$xgWN3)
        (get-bytevector-n . g$11447$xgWN3)
        (get-bytevector-all . g$11446$xgWN3)
        (flush-output-port . g$11445$xgWN3)
        (close-port . g$11444$xgWN3)
        (call-with-string-output-port . g$6575$xgWN3)
        (call-with-port . g$6576$xgWN3)
        (call-with-bytevector-output-port . g$11443$xgWN3)
        (bytevector->string . g$11442$xgWN3)
        (buffer-mode? . g$11441$xgWN3)
        (binary-port? . g$11440$xgWN3)
        (scheme-report-environment . g$8070$xgWN3)
        (quotient . g$6206$xgWN3)
        (null-environment . g$8069$xgWN3)
        (remainder . g$6207$xgWN3)
        (modulo . g$6208$xgWN3)
        (inexact->exact . g$6203$xgWN3)
        (force . g$6210$xgWN3)
        (exact->inexact . g$6204$xgWN3)
        (exit . g$11439$xgWN3)
        (command-line . g$11071$xgWN3)
        (string-fill! . g$11438$xgWN3)
        (string-set! . g$11437$xgWN3)
        (set-cdr! . g$11436$xgWN3)
        (set-car! . g$11435$xgWN3)
        (remove . g$5062$xgWN3)
        (remv . g$5063$xgWN3)
        (remp . g$5043$xgWN3)
        (remq . g$5064$xgWN3)
        (partition . g$5042$xgWN3)
        (memv . g$5050$xgWN3)
        (memq . g$5049$xgWN3)
        (memp . g$5052$xgWN3)
        (member . g$5051$xgWN3)
        (exists . g$5056$xgWN3)
        (for-all . g$5055$xgWN3)
        (fold-right . g$5061$xgWN3)
        (fold-left . g$5060$xgWN3)
        (find . g$5041$xgWN3)
        (filter . g$5044$xgWN3)
        (cons* . g$5059$xgWN3)
        (assv . g$5046$xgWN3)
        (assq . g$5045$xgWN3)
        (assp . g$5048$xgWN3)
        (assoc . g$5047$xgWN3)
        (with-exception-handler . g$11434$xgWN3)
        (raise-continuable . g$11433$xgWN3)
        (raise . g$11432$xgWN3)
        (eval . g$8072$xgWN3)
        (environment . g$8068$xgWN3)
        (make-enumeration . g$6661$xgWN3)
        (enum-set=? . g$6668$xgWN3)
        (enum-set-universe . g$6662$xgWN3)
        (enum-set-union . g$6669$xgWN3)
        (enum-set-subset? . g$6667$xgWN3)
        (enum-set-projection . g$6673$xgWN3)
        (enum-set-member? . g$6666$xgWN3)
        (enum-set-intersection . g$6670$xgWN3)
        (enum-set-indexer . g$6663$xgWN3)
        (enum-set-difference . g$6671$xgWN3)
        (enum-set-constructor . g$6664$xgWN3)
        (enum-set-complement . g$6672$xgWN3)
        (enum-set->list . g$6665$xgWN3)
        (who-condition? . g$5929$xgWN3)
        (warning? . g$5848$xgWN3)
        (violation? . g$5887$xgWN3)
        (undefined-violation? . g$5999$xgWN3)
        (syntax-violation? . g$5984$xgWN3)
        (syntax-violation-subform . g$5986$xgWN3)
        (syntax-violation-form . g$5985$xgWN3)
        (syntax-violation . g$8090$xgWN3)
        (simple-conditions . g$11431$xgWN3)
        (serious-condition? . g$5861$xgWN3)
        (non-continuable-violation? . g$5943$xgWN3)
        (message-condition? . g$5834$xgWN3)
        (make-who-condition . g$5927$xgWN3)
        (make-warning . g$5847$xgWN3)
        (make-violation . g$5886$xgWN3)
        (make-undefined-violation . g$5998$xgWN3)
        (make-syntax-violation . g$5981$xgWN3)
        (make-serious-condition . g$5860$xgWN3)
        (make-non-continuable-violation . g$5942$xgWN3)
        (make-message-condition . g$5832$xgWN3)
        (make-lexical-violation . g$5968$xgWN3)
        (make-irritants-condition . g$5912$xgWN3)
        (make-implementation-restriction-violation . g$5955$xgWN3)
        (make-error . g$5873$xgWN3)
        (make-assertion-violation . g$5899$xgWN3)
        (lexical-violation? . g$5969$xgWN3)
        (irritants-condition? . g$5914$xgWN3)
        (implementation-restriction-violation? . g$5956$xgWN3)
        (error? . g$5874$xgWN3)
        (condition-who . g$5930$xgWN3)
        (condition-predicate . g$11430$xgWN3)
        (condition-message . g$5835$xgWN3)
        (condition-irritants . g$5915$xgWN3)
        (condition-accessor . g$11429$xgWN3)
        (condition . g$11428$xgWN3)
        (assertion-violation? . g$5900$xgWN3)
        (condition? . g$11427$xgWN3)
        (utf32->string . g$11426$xgWN3)
        (utf16->string . g$11425$xgWN3)
        (utf8->string . g$11424$xgWN3)
        (uint-list->bytevector . g$11423$xgWN3)
        (u8-list->bytevector . g$11422$xgWN3)
        (string->utf8 . g$11421$xgWN3)
        (string->utf32 . g$11420$xgWN3)
        (string->utf16 . g$11419$xgWN3)
        (sint-list->bytevector . g$11418$xgWN3)
        (native-endianness . g$5671$xgWN3)
        (bytevector? . g$5361$xgWN3)
        (bytevector=? . g$11417$xgWN3)
        (bytevector-uint-set! . g$11416$xgWN3)
        (bytevector-uint-ref . g$11415$xgWN3)
        (bytevector-u8-set! . g$11414$xgWN3)
        (bytevector-u8-ref . g$11413$xgWN3)
        (bytevector-u64-set! . g$5692$xgWN3)
        (bytevector-u64-ref . g$5688$xgWN3)
        (bytevector-u64-native-set! . g$5694$xgWN3)
        (bytevector-u64-native-ref . g$5690$xgWN3)
        (bytevector-u32-set! . g$5684$xgWN3)
        (bytevector-u32-ref . g$5680$xgWN3)
        (bytevector-u32-native-set! . g$5686$xgWN3)
        (bytevector-u32-native-ref . g$5682$xgWN3)
        (bytevector-u16-set! . g$5676$xgWN3)
        (bytevector-u16-ref . g$5672$xgWN3)
        (bytevector-u16-native-set! . g$5678$xgWN3)
        (bytevector-u16-native-ref . g$5674$xgWN3)
        (bytevector-sint-set! . g$11412$xgWN3)
        (bytevector-sint-ref . g$11411$xgWN3)
        (bytevector-s8-set! . g$11410$xgWN3)
        (bytevector-s8-ref . g$11409$xgWN3)
        (bytevector-s64-set! . g$5693$xgWN3)
        (bytevector-s64-ref . g$5689$xgWN3)
        (bytevector-s64-native-set! . g$5695$xgWN3)
        (bytevector-s64-native-ref . g$5691$xgWN3)
        (bytevector-s32-set! . g$5685$xgWN3)
        (bytevector-s32-ref . g$5681$xgWN3)
        (bytevector-s32-native-set! . g$5687$xgWN3)
        (bytevector-s32-native-ref . g$5683$xgWN3)
        (bytevector-s16-set! . g$5677$xgWN3)
        (bytevector-s16-ref . g$5673$xgWN3)
        (bytevector-s16-native-set! . g$5679$xgWN3)
        (bytevector-s16-native-ref . g$5675$xgWN3)
        (bytevector-length . g$11408$xgWN3)
        (bytevector-ieee-single-set! . g$11407$xgWN3)
        (bytevector-ieee-single-ref . g$11406$xgWN3)
        (bytevector-ieee-single-native-set! . g$5698$xgWN3)
        (bytevector-ieee-single-native-ref . g$5696$xgWN3)
        (bytevector-ieee-double-set! . g$11405$xgWN3)
        (bytevector-ieee-double-ref . g$11404$xgWN3)
        (bytevector-ieee-double-native-set! . g$5699$xgWN3)
        (bytevector-ieee-double-native-ref . g$5697$xgWN3)
        (bytevector-fill! . g$11403$xgWN3)
        (bytevector-copy! . g$11402$xgWN3)
        (bytevector-copy . g$11401$xgWN3)
        (bytevector->uint-list . g$11400$xgWN3)
        (bytevector->u8-list . g$11399$xgWN3)
        (bytevector->sint-list . g$11398$xgWN3)
        (no-nans-violation? . g$6189$xgWN3)
        (no-infinities-violation? . g$6176$xgWN3)
        (make-no-nans-violation . g$6188$xgWN3)
        (make-no-infinities-violation . g$6175$xgWN3)
        (real->flonum . g$11397$xgWN3)
        (flzero? . g$6489$xgWN3)
        (fltruncate . g$6484$xgWN3)
        (fltan . g$6474$xgWN3)
        (flsqrt . g$6479$xgWN3)
        (flsin . g$6472$xgWN3)
        (flround . g$6485$xgWN3)
        (flpositive? . g$6487$xgWN3)
        (flonum? . g$5366$xgWN3)
        (flodd? . g$6491$xgWN3)
        (flnumerator . g$11396$xgWN3)
        (flnegative? . g$6488$xgWN3)
        (flnan? . g$6471$xgWN3)
        (flmod0 . g$6467$xgWN3)
        (flmod . g$6466$xgWN3)
        (flmin . g$6493$xgWN3)
        (flmax . g$6492$xgWN3)
        (fllog . g$6478$xgWN3)
        (flinteger? . g$6468$xgWN3)
        (flinfinite? . g$6470$xgWN3)
        (flfloor . g$6483$xgWN3)
        (flfinite? . g$6469$xgWN3)
        (flexpt . g$6481$xgWN3)
        (flexp . g$6480$xgWN3)
        (fleven? . g$6490$xgWN3)
        (fldiv0-and-mod0 . g$6463$xgWN3)
        (fldiv0 . g$6465$xgWN3)
        (fldiv-and-mod . g$6462$xgWN3)
        (fldiv . g$6464$xgWN3)
        (fldenominator . g$11395$xgWN3)
        (flcos . g$6473$xgWN3)
        (flceiling . g$6482$xgWN3)
        (flatan . g$6477$xgWN3)
        (flasin . g$6475$xgWN3)
        (flacos . g$6476$xgWN3)
        (flabs . g$6486$xgWN3)
        (fl>? . g$11394$xgWN3)
        (fl>=? . g$11393$xgWN3)
        (fl=? . g$11392$xgWN3)
        (fl<? . g$11391$xgWN3)
        (fl<=? . g$11390$xgWN3)
        (fl/ . g$11389$xgWN3)
        (fl- . g$11388$xgWN3)
        (fl+ . g$11387$xgWN3)
        (fl* . g$11386$xgWN3)
        (fixnum->flonum . g$11385$xgWN3)
        (fxzero? . g$6370$xgWN3)
        (fxxor . g$11384$xgWN3)
        (fxrotate-bit-field . g$6384$xgWN3)
        (fxreverse-bit-field . g$11383$xgWN3)
        (fxpositive? . g$6368$xgWN3)
        (fxodd? . g$6372$xgWN3)
        (fxnot . g$11382$xgWN3)
        (fxnegative? . g$6369$xgWN3)
        (fxmod0 . g$6367$xgWN3)
        (fxmod . g$6366$xgWN3)
        (fxmin . g$6374$xgWN3)
        (fxmax . g$6373$xgWN3)
        (fxlength . g$11381$xgWN3)
        (fxior . g$11380$xgWN3)
        (fxif . g$6378$xgWN3)
        (fxfirst-bit-set . g$11379$xgWN3)
        (fxeven? . g$6371$xgWN3)
        (fxdiv0-and-mod0 . g$11378$xgWN3)
        (fxdiv0 . g$6365$xgWN3)
        (fxdiv-and-mod . g$11377$xgWN3)
        (fxdiv . g$6364$xgWN3)
        (fxcopy-bit-field . g$6381$xgWN3)
        (fxcopy-bit . g$6379$xgWN3)
        (fxbit-set? . g$11376$xgWN3)
        (fxbit-field . g$6380$xgWN3)
        (fxbit-count . g$11375$xgWN3)
        (fxarithmetic-shift-right . g$6383$xgWN3)
        (fxarithmetic-shift-left . g$6382$xgWN3)
        (fxarithmetic-shift . g$11374$xgWN3)
        (fxand . g$11373$xgWN3)
        (fx>? . g$11372$xgWN3)
        (fx>=? . g$11371$xgWN3)
        (fx=? . g$11370$xgWN3)
        (fx<? . g$11369$xgWN3)
        (fx<=? . g$11368$xgWN3)
        (fx-/carry . g$6376$xgWN3)
        (fx- . g$11367$xgWN3)
        (fx+/carry . g$6377$xgWN3)
        (fx+ . g$11366$xgWN3)
        (fx*/carry . g$6375$xgWN3)
        (fx* . g$11365$xgWN3)
        (greatest-fixnum . g$11364$xgWN3)
        (least-fixnum . g$11363$xgWN3)
        (fixnum-width . g$5367$xgWN3)
        (fixnum? . g$5365$xgWN3)
        (bitwise-rotate-bit-field . g$6338$xgWN3)
        (bitwise-reverse-bit-field . g$11362$xgWN3)
        (bitwise-length . g$11361$xgWN3)
        (bitwise-if . g$6332$xgWN3)
        (bitwise-first-bit-set . g$11360$xgWN3)
        (bitwise-copy-bit-field . g$6335$xgWN3)
        (bitwise-copy-bit . g$6333$xgWN3)
        (bitwise-bit-set? . g$11359$xgWN3)
        (bitwise-bit-field . g$6334$xgWN3)
        (bitwise-bit-count . g$11358$xgWN3)
        (bitwise-xor . g$11357$xgWN3)
        (bitwise-ior . g$11356$xgWN3)
        (bitwise-and . g$11355$xgWN3)
        (bitwise-not . g$11354$xgWN3)
        (bitwise-arithmetic-shift-right . g$6337$xgWN3)
        (bitwise-arithmetic-shift-left . g$6336$xgWN3)
        (bitwise-arithmetic-shift . g$11353$xgWN3)
        (zero? . g$5400$xgWN3)
        (vector? . g$5360$xgWN3)
        (vector-set! . g$11352$xgWN3)
        (vector-ref . g$11351$xgWN3)
        (vector-map . g$5432$xgWN3)
        (vector-length . g$11350$xgWN3)
        (vector-for-each . g$5433$xgWN3)
        (vector-fill! . g$5368$xgWN3)
        (vector->list . g$11349$xgWN3)
        (vector . g$11348$xgWN3)
        (values . g$11347$xgWN3)
        (truncate . g$11346$xgWN3)
        (tan . g$11345$xgWN3)
        (symbol? . g$5362$xgWN3)
        (symbol=? . g$5417$xgWN3)
        (symbol->string . g$11344$xgWN3)
        (substring . g$11343$xgWN3)
        (string? . g$11342$xgWN3)
        (string>? . g$5414$xgWN3)
        (string>=? . g$5416$xgWN3)
        (string=? . g$5412$xgWN3)
        (string<? . g$5413$xgWN3)
        (string<=? . g$5415$xgWN3)
        (string-ref . g$11341$xgWN3)
        (string-length . g$11340$xgWN3)
        (string-for-each . g$5434$xgWN3)
        (string-copy . g$11339$xgWN3)
        (string-append . g$11338$xgWN3)
        (string->symbol . g$11337$xgWN3)
        (string->number . g$11336$xgWN3)
        (string->list . g$11335$xgWN3)
        (string . g$11334$xgWN3)
        (sqrt . g$11333$xgWN3)
        (sin . g$11332$xgWN3)
        (round . g$11331$xgWN3)
        (reverse . g$5369$xgWN3)
        (real? . g$11330$xgWN3)
        (real-valued? . g$11329$xgWN3)
        (real-part . g$11328$xgWN3)
        (rationalize . g$5429$xgWN3)
        (rational? . g$11327$xgWN3)
        (rational-valued? . g$11326$xgWN3)
        (procedure? . g$5364$xgWN3)
        (positive? . g$5398$xgWN3)
        (pair? . g$11325$xgWN3)
        (odd? . g$5402$xgWN3)
        (numerator . g$11324$xgWN3)
        (number? . g$11323$xgWN3)
        (number->string . g$11322$xgWN3)
        (null? . g$11321$xgWN3)
        (not . g$11320$xgWN3)
        (negative? . g$5399$xgWN3)
        (nan? . g$11319$xgWN3)
        (min . g$5404$xgWN3)
        (max . g$5403$xgWN3)
        (map . g$5057$xgWN3)
        (make-vector . g$11318$xgWN3)
        (make-string . g$11317$xgWN3)
        (make-rectangular . g$11316$xgWN3)
        (make-polar . g$11315$xgWN3)
        (magnitude . g$11314$xgWN3)
        (log . g$11313$xgWN3)
        (list? . g$11312$xgWN3)
        (list-tail . g$5037$xgWN3)
        (list-ref . g$5038$xgWN3)
        (list->vector . g$5357$xgWN3)
        (list->string . g$5358$xgWN3)
        (list . g$11311$xgWN3)
        (length . g$11310$xgWN3)
        (lcm . g$5406$xgWN3)
        (integer? . g$11309$xgWN3)
        (integer-valued? . g$11308$xgWN3)
        (integer->char . g$11307$xgWN3)
        (infinite? . g$11306$xgWN3)
        (inexact? . g$11305$xgWN3)
        (inexact . g$11304$xgWN3)
        (imag-part . g$11303$xgWN3)
        (gcd . g$5405$xgWN3)
        (for-each . g$5058$xgWN3)
        (floor . g$11302$xgWN3)
        (finite? . g$11301$xgWN3)
        (expt . g$11300$xgWN3)
        (exp . g$11299$xgWN3)
        (exact? . g$11298$xgWN3)
        (exact-integer-sqrt . g$11297$xgWN3)
        (exact . g$11296$xgWN3)
        (even? . g$5401$xgWN3)
        (error . g$11295$xgWN3)
        (eqv? . g$11294$xgWN3)
        (equal? . g$11293$xgWN3)
        (eq? . g$11292$xgWN3)
        (dynamic-wind . g$11291$xgWN3)
        (div0-and-mod0 . g$11290$xgWN3)
        (mod0 . g$5356$xgWN3)
        (div0 . g$5354$xgWN3)
        (div-and-mod . g$11289$xgWN3)
        (mod . g$5355$xgWN3)
        (div . g$5353$xgWN3)
        (denominator . g$11288$xgWN3)
        (cos . g$11287$xgWN3)
        (cons . g$11286$xgWN3)
        (complex? . g$11285$xgWN3)
        (char? . g$5359$xgWN3)
        (char>? . g$5426$xgWN3)
        (char>=? . g$5428$xgWN3)
        (char=? . g$5424$xgWN3)
        (char<? . g$5425$xgWN3)
        (char<=? . g$5427$xgWN3)
        (char->integer . g$11284$xgWN3)
        (ceiling . g$11283$xgWN3)
        (call-with-values . g$11282$xgWN3)
        (call/cc . g$11281$xgWN3)
        (call-with-current-continuation . g$11280$xgWN3)
        (cddddr . g$5397$xgWN3)
        (cdddar . g$5396$xgWN3)
        (cddadr . g$5395$xgWN3)
        (cddaar . g$5394$xgWN3)
        (cdaddr . g$5393$xgWN3)
        (cdadar . g$5392$xgWN3)
        (cdaadr . g$5391$xgWN3)
        (cdaaar . g$5390$xgWN3)
        (cadddr . g$5389$xgWN3)
        (caddar . g$5388$xgWN3)
        (cadadr . g$5387$xgWN3)
        (cadaar . g$5386$xgWN3)
        (caaddr . g$5385$xgWN3)
        (caadar . g$5384$xgWN3)
        (caaadr . g$5383$xgWN3)
        (caaaar . g$5382$xgWN3)
        (cdddr . g$5381$xgWN3)
        (cddar . g$5380$xgWN3)
        (cdadr . g$5379$xgWN3)
        (cdaar . g$5378$xgWN3)
        (caddr . g$5377$xgWN3)
        (cadar . g$5376$xgWN3)
        (caadr . g$5375$xgWN3)
        (caaar . g$5374$xgWN3)
        (cddr . g$5373$xgWN3)
        (cdar . g$5372$xgWN3)
        (cadr . g$5371$xgWN3)
        (caar . g$5370$xgWN3)
        (cdr . g$11279$xgWN3)
        (car . g$11278$xgWN3)
        (boolean? . g$5363$xgWN3)
        (boolean=? . g$5418$xgWN3)
        (atan . g$11277$xgWN3)
        (assertion-violation . g$11276$xgWN3)
        (asin . g$11275$xgWN3)
        (apply . g$11274$xgWN3)
        (append . g$11273$xgWN3)
        (angle . g$11272$xgWN3)
        (acos . g$11271$xgWN3)
        (abs . g$11270$xgWN3)
        (/ . g$11269$xgWN3)
        (* . g$11268$xgWN3)
        (- . g$11267$xgWN3)
        (+ . g$11266$xgWN3)
        (>= . g$11265$xgWN3)
        (> . g$11264$xgWN3)
        (= . g$11263$xgWN3)
        (<= . g$11262$xgWN3)
        (< . g$11261$xgWN3)
        (deserialize-port . g$11257$xgWN3)
        (serialize-port . g$11256$xgWN3)
        (enum-set? . g$6638$xgWN3)
        (load/unload . g$11074$xgWN3)
        (load/args . g$11073$xgWN3)
        (printf . g$6747$xgWN3)
        (fprintf . g$6748$xgWN3)
        (format . g$6749$xgWN3)
        (procedure-form . g$11255$xgWN3)
        (procedure-environment . g$11254$xgWN3)
        (procedure-name . g$11253$xgWN3)
        (procedure-arity . g$11252$xgWN3)
        (gc-collect . g$11251$xgWN3)
        (typeof . g$11250$xgWN3)
        (clr-type? . g$11249$xgWN3)
        (get-clr-type . g$11248$xgWN3)
        (vector-append . g$11246$xgWN3)
        (vector-filter . g$11245$xgWN3)
        (vector-reverse! . g$11244$xgWN3)
        (vector-contains? . g$11243$xgWN3)
        (vector-index-of . g$11242$xgWN3)
        (vector-copy . g$11241$xgWN3)
        (vector-binary-search . g$11240$xgWN3)
        (string-ci-compare . g$11239$xgWN3)
        (string-compare . g$11238$xgWN3)
        (string-format . g$11237$xgWN3)
        (trace-printer . g$11070$xgWN3)
        (time-it . g$11235$xgWN3)
        (make-parameter . g$7042$xgWN3)
        (open-tcp-input/output-port . g$11232$xgWN3)
        (hashtable-for-each . g$11231$xgWN3)
        (hashtable-map . g$11230$xgWN3)
        (environment-bindings . g$8064$xgWN3)
        (environment-symbols . g$8067$xgWN3)
        (interaction-environment-symbols . g$8063$xgWN3)
        (optimization-level . g$11229$xgWN3)
        (library-path . g$7395$xgWN3)
        (make-compile-time-value . g$7773$xgWN3)
        (expand->core . g$8073$xgWN3)
        (expand . g$8071$xgWN3)
        (convert->cps . g$6825$xgWN3)
        (installed-libraries . g$7416$xgWN3)
        (uninstall-library . g$7407$xgWN3)
        (&no-nans . g$11228$xgWN3)
        (&no-infinities . g$11227$xgWN3)
        (&i/o-encoding . g$11226$xgWN3)
        (&i/o-decoding . g$11225$xgWN3)
        (&i/o-port . g$11224$xgWN3)
        (&i/o-file-does-not-exist . g$11223$xgWN3)
        (&i/o-file-already-exists . g$11222$xgWN3)
        (&i/o-file-is-read-only . g$11221$xgWN3)
        (&i/o-file-protection . g$11220$xgWN3)
        (&i/o-filename . g$11219$xgWN3)
        (&i/o-invalid-position . g$11218$xgWN3)
        (&i/o-write . g$11217$xgWN3)
        (&i/o-read . g$11216$xgWN3)
        (&i/o . g$11215$xgWN3)
        (&non-continuable . g$11214$xgWN3)
        (&undefined . g$11213$xgWN3)
        (&syntax . g$11212$xgWN3)
        (&lexical . g$11211$xgWN3)
        (&implementation-restriction . g$11210$xgWN3)
        (&who . g$11209$xgWN3)
        (&irritants . g$11208$xgWN3)
        (&assertion . g$11207$xgWN3)
        (&violation . g$11206$xgWN3)
        (&error . g$11205$xgWN3)
        (&serious . g$11204$xgWN3)
        (&warning . g$11203$xgWN3)
        (&message . g$11202$xgWN3)
        (&condition . g$11201$xgWN3)
        (define-condition-type . g$11200$xgWN3)
        (define-enumeration . g$11199$xgWN3)
        (define-record-type . g$11198$xgWN3)
        (parent-rtd . g$11197$xgWN3)
        (nongenerative . g$11196$xgWN3)
        (opaque . g$11195$xgWN3)
        (sealed . g$11194$xgWN3)
        (protocol . g$11193$xgWN3)
        (parent . g$11192$xgWN3)
        (immutable . g$11191$xgWN3)
        (mutable . g$11190$xgWN3)
        (fields . g$11189$xgWN3)
        (error-handling-mode . g$11188$xgWN3)
        (file-options . g$11187$xgWN3)
        (buffer-mode . g$11186$xgWN3)
        (eol-style . g$11185$xgWN3)
        (guard . g$11184$xgWN3)
        (trace-letrec-syntax . g$11183$xgWN3)
        (trace-let-syntax . g$11182$xgWN3)
        (trace-define-syntax . g$11181$xgWN3)
        (trace-define . g$11180$xgWN3)
        (trace-lambda . g$11179$xgWN3)
        (unsyntax-splicing . g$11178$xgWN3)
        (unsyntax . g$11177$xgWN3)
        (unquote-splicing . g$11176$xgWN3)
        (unquote . g$11175$xgWN3)
        (_ . g$11174$xgWN3)
        (else . g$11173$xgWN3)
        (=> . g$11172$xgWN3)
        (... . g$11171$xgWN3)
        (assert . g$11170$xgWN3)
        (endianness . g$11169$xgWN3)
        (delay . g$11168$xgWN3)
        (time . g$11167$xgWN3)
        (or . g$11166$xgWN3)
        (and . g$11165$xgWN3)
        (do . g$11164$xgWN3)
        (cond . g$11163$xgWN3)
        (let* . g$11162$xgWN3)
        (let . g$11161$xgWN3)
        (identifier-syntax . g$11160$xgWN3)
        (with-syntax . g$11159$xgWN3)
        (quasisyntax . g$11158$xgWN3)
        (quasiquote . g$11157$xgWN3)
        (syntax-rules . g$11156$xgWN3)
        (include-into . g$11155$xgWN3)
        (include . g$11154$xgWN3)
        (let-values . g$11152$xgWN3)
        (let*-values . g$11151$xgWN3)
        (record-constructor-descriptor . g$11150$xgWN3)
        (record-type-descriptor . g$11149$xgWN3)
        (fluid-let-syntax . g$11148$xgWN3)
        (case . g$11147$xgWN3)
        (parameterize . g$11146$xgWN3)
        (unless . g$11145$xgWN3)
        (when . g$11144$xgWN3)
        (if . g$11143$xgWN3)
        (letrec* . g$11142$xgWN3)
        (letrec . g$11141$xgWN3)
        (case-lambda . g$11139$xgWN3)
        (lambda . g$11138$xgWN3)
        (syntax . g$11137$xgWN3)
        (syntax-case . g$11136$xgWN3)
        (quote . g$11135$xgWN3)
        (letrec-syntax . g$11133$xgWN3)
        (let-syntax . g$11132$xgWN3)
        (set! . g$11131$xgWN3)
        (export . g$11130$xgWN3)
        (import . g$11129$xgWN3)
        (library . g$11128$xgWN3)
        (begin . g$11127$xgWN3)
        (module . g$11126$xgWN3)
        (define-syntax . g$11125$xgWN3)
        (define . g$11124$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11595$xgWN3
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11233$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9423$xgWN3
      'g$11596$xgWN3
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$11592$xgWN3)
        (annotation-source . g$11591$xgWN3)
        (annotation-expression . g$11590$xgWN3)
        (annotation? . g$11589$xgWN3)
        (read-annotated . g$11588$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9423$xgWN3
      'g$11597$xgWN3
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$11560$xgWN3)
        (serialize-library . g$11559$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9423$xgWN3
      'g$11598$xgWN3
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$11558$xgWN3)
        (variable-transformer-procedure . g$7775$xgWN3)
        (variable-transformer? . g$7774$xgWN3)
        (eqv-hash . g$11259$xgWN3)
        (reverse! . g$11258$xgWN3)
        (make-promise . g$6209$xgWN3)
        (format . g$6749$xgWN3)
        (get-command-line . g$11247$xgWN3)
        (make-traced-procedure . g$11236$xgWN3)
        (make-traced-macro . g$6769$xgWN3)
        (assertion-error . g$8086$xgWN3)
        (library-locator . g$11234$xgWN3)
        (get-library-paths . g$11233$xgWN3)
        (library-path . g$7395$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9423$xgWN3
      'g$11599$xgWN3
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11260$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11600$xgWN3
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$11579$xgWN3)
        (clr-field-set!-internal . g$11578$xgWN3)
        (clr-field-get-internal . g$11577$xgWN3)
        (clr-cast-internal . g$11576$xgWN3)
        (clr-call-internal . g$11575$xgWN3)
        (clr-new-internal . g$11574$xgWN3)
        (clr-new-array-internal . g$11573$xgWN3)
        (clr-is-internal . g$11572$xgWN3)
        (clr-reference-internal . g$11571$xgWN3)
        (clr-using-internal . g$11570$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11601$xgWN3
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11176$xgWN3)
        (unquote . g$11175$xgWN3)
        (else . g$11173$xgWN3)
        (=> . g$11172$xgWN3)
        (delay . g$11168$xgWN3)
        (or . g$11166$xgWN3)
        (and . g$11165$xgWN3)
        (do . g$11164$xgWN3)
        (cond . g$11163$xgWN3)
        (let* . g$11162$xgWN3)
        (let . g$11161$xgWN3)
        (quasiquote . g$11157$xgWN3)
        (syntax-rules . g$11156$xgWN3)
        (case . g$11147$xgWN3)
        (if . g$11143$xgWN3)
        (letrec . g$11141$xgWN3)
        (lambda . g$11138$xgWN3)
        (quote . g$11135$xgWN3)
        (letrec-syntax . g$11133$xgWN3)
        (let-syntax . g$11132$xgWN3)
        (set! . g$11131$xgWN3)
        (begin . g$11127$xgWN3)
        (define-syntax . g$11125$xgWN3)
        (define . g$11124$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9423$xgWN3
      'g$11602$xgWN3
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$11557$xgWN3)
        (string-ci>? . g$6258$xgWN3)
        (string-ci>=? . g$6260$xgWN3)
        (string-ci=? . g$6256$xgWN3)
        (string-ci<? . g$6257$xgWN3)
        (string-ci<=? . g$6259$xgWN3)
        (char-whitespace? . g$11552$xgWN3)
        (char-upper-case? . g$11551$xgWN3)
        (char-numeric? . g$11549$xgWN3)
        (char-lower-case? . g$11548$xgWN3)
        (char-upcase . g$11546$xgWN3)
        (char-downcase . g$11543$xgWN3)
        (char-ci>? . g$6268$xgWN3)
        (char-ci>=? . g$6270$xgWN3)
        (char-ci=? . g$6266$xgWN3)
        (char-ci<? . g$6267$xgWN3)
        (char-ci<=? . g$6269$xgWN3)
        (char-alphabetic? . g$11542$xgWN3)
        (call-with-output-file . g$6600$xgWN3)
        (call-with-input-file . g$6599$xgWN3)
        (write-char . g$6591$xgWN3)
        (write . g$11510$xgWN3)
        (with-output-to-file . g$6598$xgWN3)
        (with-input-from-file . g$6597$xgWN3)
        (read-char . g$6590$xgWN3)
        (read . g$11509$xgWN3)
        (peek-char . g$6589$xgWN3)
        (open-output-file . g$11508$xgWN3)
        (open-input-file . g$11507$xgWN3)
        (newline . g$6601$xgWN3)
        (display . g$11506$xgWN3)
        (close-output-port . g$11505$xgWN3)
        (close-input-port . g$11504$xgWN3)
        (eof-object? . g$11503$xgWN3)
        (current-error-port . g$11501$xgWN3)
        (current-output-port . g$11500$xgWN3)
        (current-input-port . g$11499$xgWN3)
        (output-port? . g$11498$xgWN3)
        (input-port? . g$11497$xgWN3)
        (scheme-report-environment . g$8070$xgWN3)
        (quotient . g$6206$xgWN3)
        (null-environment . g$8069$xgWN3)
        (remainder . g$6207$xgWN3)
        (modulo . g$6208$xgWN3)
        (inexact->exact . g$6203$xgWN3)
        (force . g$6210$xgWN3)
        (exact->inexact . g$6204$xgWN3)
        (string-fill! . g$11438$xgWN3)
        (string-set! . g$11437$xgWN3)
        (set-cdr! . g$11436$xgWN3)
        (set-car! . g$11435$xgWN3)
        (memv . g$5050$xgWN3)
        (memq . g$5049$xgWN3)
        (member . g$5051$xgWN3)
        (assv . g$5046$xgWN3)
        (assq . g$5045$xgWN3)
        (assoc . g$5047$xgWN3)
        (eval . g$8072$xgWN3)
        (zero? . g$5400$xgWN3)
        (vector? . g$5360$xgWN3)
        (vector-set! . g$11352$xgWN3)
        (vector-ref . g$11351$xgWN3)
        (vector-length . g$11350$xgWN3)
        (vector-fill! . g$5368$xgWN3)
        (vector->list . g$11349$xgWN3)
        (vector . g$11348$xgWN3)
        (values . g$11347$xgWN3)
        (truncate . g$11346$xgWN3)
        (tan . g$11345$xgWN3)
        (symbol? . g$5362$xgWN3)
        (symbol->string . g$11344$xgWN3)
        (substring . g$11343$xgWN3)
        (string? . g$11342$xgWN3)
        (string>? . g$5414$xgWN3)
        (string>=? . g$5416$xgWN3)
        (string=? . g$5412$xgWN3)
        (string<? . g$5413$xgWN3)
        (string<=? . g$5415$xgWN3)
        (string-ref . g$11341$xgWN3)
        (string-length . g$11340$xgWN3)
        (string-copy . g$11339$xgWN3)
        (string-append . g$11338$xgWN3)
        (string->symbol . g$11337$xgWN3)
        (string->number . g$11336$xgWN3)
        (string->list . g$11335$xgWN3)
        (string . g$11334$xgWN3)
        (sqrt . g$11333$xgWN3)
        (sin . g$11332$xgWN3)
        (round . g$11331$xgWN3)
        (reverse . g$5369$xgWN3)
        (real? . g$11330$xgWN3)
        (real-part . g$11328$xgWN3)
        (rationalize . g$5429$xgWN3)
        (rational? . g$11327$xgWN3)
        (procedure? . g$5364$xgWN3)
        (positive? . g$5398$xgWN3)
        (pair? . g$11325$xgWN3)
        (odd? . g$5402$xgWN3)
        (numerator . g$11324$xgWN3)
        (number? . g$11323$xgWN3)
        (number->string . g$11322$xgWN3)
        (null? . g$11321$xgWN3)
        (not . g$11320$xgWN3)
        (negative? . g$5399$xgWN3)
        (min . g$5404$xgWN3)
        (max . g$5403$xgWN3)
        (map . g$5057$xgWN3)
        (make-vector . g$11318$xgWN3)
        (make-string . g$11317$xgWN3)
        (make-rectangular . g$11316$xgWN3)
        (make-polar . g$11315$xgWN3)
        (magnitude . g$11314$xgWN3)
        (log . g$11313$xgWN3)
        (list? . g$11312$xgWN3)
        (list-tail . g$5037$xgWN3)
        (list-ref . g$5038$xgWN3)
        (list->vector . g$5357$xgWN3)
        (list->string . g$5358$xgWN3)
        (list . g$11311$xgWN3)
        (length . g$11310$xgWN3)
        (lcm . g$5406$xgWN3)
        (integer? . g$11309$xgWN3)
        (integer->char . g$11307$xgWN3)
        (inexact? . g$11305$xgWN3)
        (imag-part . g$11303$xgWN3)
        (gcd . g$5405$xgWN3)
        (for-each . g$5058$xgWN3)
        (floor . g$11302$xgWN3)
        (expt . g$11300$xgWN3)
        (exp . g$11299$xgWN3)
        (exact? . g$11298$xgWN3)
        (even? . g$5401$xgWN3)
        (eqv? . g$11294$xgWN3)
        (equal? . g$11293$xgWN3)
        (eq? . g$11292$xgWN3)
        (dynamic-wind . g$11291$xgWN3)
        (denominator . g$11288$xgWN3)
        (cos . g$11287$xgWN3)
        (cons . g$11286$xgWN3)
        (complex? . g$11285$xgWN3)
        (char? . g$5359$xgWN3)
        (char>? . g$5426$xgWN3)
        (char>=? . g$5428$xgWN3)
        (char=? . g$5424$xgWN3)
        (char<? . g$5425$xgWN3)
        (char<=? . g$5427$xgWN3)
        (char->integer . g$11284$xgWN3)
        (ceiling . g$11283$xgWN3)
        (call-with-values . g$11282$xgWN3)
        (call-with-current-continuation . g$11280$xgWN3)
        (cddddr . g$5397$xgWN3)
        (cdddar . g$5396$xgWN3)
        (cddadr . g$5395$xgWN3)
        (cddaar . g$5394$xgWN3)
        (cdaddr . g$5393$xgWN3)
        (cdadar . g$5392$xgWN3)
        (cdaadr . g$5391$xgWN3)
        (cdaaar . g$5390$xgWN3)
        (cadddr . g$5389$xgWN3)
        (caddar . g$5388$xgWN3)
        (cadadr . g$5387$xgWN3)
        (cadaar . g$5386$xgWN3)
        (caaddr . g$5385$xgWN3)
        (caadar . g$5384$xgWN3)
        (caaadr . g$5383$xgWN3)
        (caaaar . g$5382$xgWN3)
        (cdddr . g$5381$xgWN3)
        (cddar . g$5380$xgWN3)
        (cdadr . g$5379$xgWN3)
        (cdaar . g$5378$xgWN3)
        (caddr . g$5377$xgWN3)
        (cadar . g$5376$xgWN3)
        (caadr . g$5375$xgWN3)
        (caaar . g$5374$xgWN3)
        (cddr . g$5373$xgWN3)
        (cdar . g$5372$xgWN3)
        (cadr . g$5371$xgWN3)
        (caar . g$5370$xgWN3)
        (cdr . g$11279$xgWN3)
        (car . g$11278$xgWN3)
        (boolean? . g$5363$xgWN3)
        (atan . g$11277$xgWN3)
        (asin . g$11275$xgWN3)
        (apply . g$11274$xgWN3)
        (append . g$11273$xgWN3)
        (angle . g$11272$xgWN3)
        (acos . g$11271$xgWN3)
        (abs . g$11270$xgWN3)
        (/ . g$11269$xgWN3)
        (* . g$11268$xgWN3)
        (- . g$11267$xgWN3)
        (+ . g$11266$xgWN3)
        (>= . g$11265$xgWN3)
        (> . g$11264$xgWN3)
        (= . g$11263$xgWN3)
        (<= . g$11262$xgWN3)
        (< . g$11261$xgWN3)
        (unquote-splicing . g$11176$xgWN3)
        (unquote . g$11175$xgWN3)
        (else . g$11173$xgWN3)
        (=> . g$11172$xgWN3)
        (... . g$11171$xgWN3)
        (delay . g$11168$xgWN3)
        (or . g$11166$xgWN3)
        (and . g$11165$xgWN3)
        (do . g$11164$xgWN3)
        (cond . g$11163$xgWN3)
        (let* . g$11162$xgWN3)
        (let . g$11161$xgWN3)
        (quasiquote . g$11157$xgWN3)
        (syntax-rules . g$11156$xgWN3)
        (case . g$11147$xgWN3)
        (if . g$11143$xgWN3)
        (letrec . g$11141$xgWN3)
        (lambda . g$11138$xgWN3)
        (quote . g$11135$xgWN3)
        (letrec-syntax . g$11133$xgWN3)
        (let-syntax . g$11132$xgWN3)
        (set! . g$11131$xgWN3)
        (begin . g$11127$xgWN3)
        (define-syntax . g$11125$xgWN3)
        (define . g$11124$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9423$xgWN3
      'g$11603$xgWN3
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11556$xgWN3)
        (string-titlecase . g$11555$xgWN3)
        (string-normalize-nfkd . g$6274$xgWN3)
        (string-normalize-nfkc . g$6273$xgWN3)
        (string-normalize-nfd . g$6272$xgWN3)
        (string-normalize-nfc . g$6271$xgWN3)
        (string-foldcase . g$11554$xgWN3)
        (string-downcase . g$11553$xgWN3)
        (string-ci>? . g$6258$xgWN3)
        (string-ci>=? . g$6260$xgWN3)
        (string-ci=? . g$6256$xgWN3)
        (string-ci<? . g$6257$xgWN3)
        (string-ci<=? . g$6259$xgWN3)
        (char-whitespace? . g$11552$xgWN3)
        (char-upper-case? . g$11551$xgWN3)
        (char-title-case? . g$11550$xgWN3)
        (char-numeric? . g$11549$xgWN3)
        (char-lower-case? . g$11548$xgWN3)
        (char-general-category . g$11547$xgWN3)
        (char-upcase . g$11546$xgWN3)
        (char-titlecase . g$11545$xgWN3)
        (char-foldcase . g$11544$xgWN3)
        (char-downcase . g$11543$xgWN3)
        (char-ci>? . g$6268$xgWN3)
        (char-ci>=? . g$6270$xgWN3)
        (char-ci=? . g$6266$xgWN3)
        (char-ci<? . g$6267$xgWN3)
        (char-ci<=? . g$6269$xgWN3)
        (char-alphabetic? . g$11542$xgWN3)
        (make-variable-transformer . g$7772$xgWN3)
        (identifier? . g$8091$xgWN3)
        (generate-temporaries . g$8080$xgWN3)
        (free-identifier=? . g$8081$xgWN3)
        (syntax->datum . g$8093$xgWN3)
        (datum->syntax . g$8092$xgWN3)
        (bound-identifier=? . g$8082$xgWN3)
        (record-type-descriptor? . g$11541$xgWN3)
        (record-predicate . g$11540$xgWN3)
        (record-mutator . g$11539$xgWN3)
        (record-constructor . g$11538$xgWN3)
        (record-accessor . g$11537$xgWN3)
        (make-record-type-descriptor . g$11536$xgWN3)
        (make-record-constructor-descriptor . g$11535$xgWN3)
        (record? . g$11534$xgWN3)
        (record-type-uid . g$11533$xgWN3)
        (record-type-sealed? . g$11532$xgWN3)
        (record-type-parent . g$11531$xgWN3)
        (record-type-opaque? . g$11530$xgWN3)
        (record-type-name . g$11529$xgWN3)
        (record-type-generative? . g$11528$xgWN3)
        (record-type-field-names . g$11527$xgWN3)
        (record-rtd . g$11526$xgWN3)
        (record-field-mutable? . g$11525$xgWN3)
        (delete-file . g$5665$xgWN3)
        (file-exists? . g$5664$xgWN3)
        (vector-sort! . g$11524$xgWN3)
        (vector-sort . g$11523$xgWN3)
        (list-sort . g$6227$xgWN3)
        (symbol-hash . g$11522$xgWN3)
        (string-ci-hash . g$11521$xgWN3)
        (string-hash . g$11520$xgWN3)
        (equal-hash . g$11519$xgWN3)
        (hashtable-equivalence-function . g$11518$xgWN3)
        (make-hashtable . g$11517$xgWN3)
        (hashtable-hash-function . g$11516$xgWN3)
        (make-eqv-hashtable . g$5633$xgWN3)
        (make-eq-hashtable . g$5632$xgWN3)
        (hashtable? . g$11515$xgWN3)
        (hashtable-update! . g$5639$xgWN3)
        (hashtable-size . g$5634$xgWN3)
        (hashtable-set! . g$5636$xgWN3)
        (hashtable-ref . g$5635$xgWN3)
        (hashtable-mutable? . g$11514$xgWN3)
        (hashtable-keys . g$11513$xgWN3)
        (hashtable-entries . g$11512$xgWN3)
        (hashtable-delete! . g$5637$xgWN3)
        (hashtable-copy . g$11511$xgWN3)
        (hashtable-contains? . g$5638$xgWN3)
        (hashtable-clear! . g$5640$xgWN3)
        (call-with-output-file . g$6600$xgWN3)
        (call-with-input-file . g$6599$xgWN3)
        (write-char . g$6591$xgWN3)
        (write . g$11510$xgWN3)
        (with-output-to-file . g$6598$xgWN3)
        (with-input-from-file . g$6597$xgWN3)
        (read-char . g$6590$xgWN3)
        (read . g$11509$xgWN3)
        (peek-char . g$6589$xgWN3)
        (open-output-file . g$11508$xgWN3)
        (open-input-file . g$11507$xgWN3)
        (newline . g$6601$xgWN3)
        (display . g$11506$xgWN3)
        (close-output-port . g$11505$xgWN3)
        (close-input-port . g$11504$xgWN3)
        (eof-object? . g$11503$xgWN3)
        (eof-object . g$11502$xgWN3)
        (current-error-port . g$11501$xgWN3)
        (current-output-port . g$11500$xgWN3)
        (current-input-port . g$11499$xgWN3)
        (output-port? . g$11498$xgWN3)
        (input-port? . g$11497$xgWN3)
        (utf-8-codec . g$11496$xgWN3)
        (utf-16-codec . g$11495$xgWN3)
        (transcoder-error-handling-mode . g$11494$xgWN3)
        (transcoder-eol-style . g$11493$xgWN3)
        (transcoder-codec . g$11492$xgWN3)
        (transcoded-port . g$11491$xgWN3)
        (textual-port? . g$11490$xgWN3)
        (string->bytevector . g$11489$xgWN3)
        (standard-output-port . g$11488$xgWN3)
        (standard-input-port . g$11487$xgWN3)
        (standard-error-port . g$11486$xgWN3)
        (set-port-position! . g$11485$xgWN3)
        (put-u8 . g$11484$xgWN3)
        (put-string . g$11483$xgWN3)
        (put-datum . g$6569$xgWN3)
        (put-char . g$11482$xgWN3)
        (put-bytevector . g$11481$xgWN3)
        (port? . g$6574$xgWN3)
        (port-transcoder . g$11480$xgWN3)
        (port-position . g$11479$xgWN3)
        (port-has-set-port-position!? . g$11478$xgWN3)
        (port-has-port-position? . g$11477$xgWN3)
        (port-eof? . g$11476$xgWN3)
        (output-port-buffer-mode . g$11475$xgWN3)
        (open-string-output-port . g$6573$xgWN3)
        (open-string-input-port . g$11474$xgWN3)
        (open-file-output-port . g$11473$xgWN3)
        (open-file-input/output-port . g$11472$xgWN3)
        (open-file-input-port . g$11471$xgWN3)
        (open-bytevector-output-port . g$11470$xgWN3)
        (open-bytevector-input-port . g$11469$xgWN3)
        (native-transcoder . g$11468$xgWN3)
        (native-eol-style . g$11467$xgWN3)
        (make-transcoder . g$11466$xgWN3)
        (latin-1-codec . g$11465$xgWN3)
        (make-i/o-write-error . g$6037$xgWN3)
        (make-i/o-read-error . g$6024$xgWN3)
        (make-i/o-port-error . g$6132$xgWN3)
        (make-i/o-invalid-position-error . g$6050$xgWN3)
        (make-i/o-filename-error . g$6065$xgWN3)
        (make-i/o-file-protection-error . g$6080$xgWN3)
        (make-i/o-file-is-read-only-error . g$6093$xgWN3)
        (make-i/o-file-does-not-exist-error . g$6119$xgWN3)
        (make-i/o-file-already-exists-error . g$6106$xgWN3)
        (make-i/o-error . g$6011$xgWN3)
        (make-i/o-encoding-error . g$6160$xgWN3)
        (make-i/o-decoding-error . g$6147$xgWN3)
        (make-custom-textual-output-port . g$11464$xgWN3)
        (make-custom-textual-input/output-port . g$11463$xgWN3)
        (make-custom-textual-input-port . g$11462$xgWN3)
        (make-custom-binary-output-port . g$11461$xgWN3)
        (make-custom-binary-input/output-port . g$11460$xgWN3)
        (make-custom-binary-input-port . g$11459$xgWN3)
        (make-bytevector . g$11458$xgWN3)
        (lookahead-u8 . g$11457$xgWN3)
        (lookahead-char . g$11456$xgWN3)
        (i/o-write-error? . g$6038$xgWN3)
        (i/o-read-error? . g$6025$xgWN3)
        (i/o-port-error? . g$6134$xgWN3)
        (i/o-invalid-position-error? . g$6052$xgWN3)
        (i/o-error-position . g$6053$xgWN3)
        (i/o-filename-error? . g$6067$xgWN3)
        (i/o-file-protection-error? . g$6081$xgWN3)
        (i/o-file-is-read-only-error? . g$6094$xgWN3)
        (i/o-file-does-not-exist-error? . g$6120$xgWN3)
        (i/o-file-already-exists-error? . g$6107$xgWN3)
        (i/o-error? . g$6012$xgWN3)
        (i/o-error-port . g$6135$xgWN3)
        (i/o-error-filename . g$6068$xgWN3)
        (i/o-encoding-error? . g$6162$xgWN3)
        (i/o-encoding-error-char . g$6163$xgWN3)
        (i/o-decoding-error? . g$6148$xgWN3)
        (get-u8 . g$11455$xgWN3)
        (get-string-n! . g$11454$xgWN3)
        (get-string-n . g$11453$xgWN3)
        (get-string-all . g$11452$xgWN3)
        (get-line . g$11451$xgWN3)
        (get-datum . g$6570$xgWN3)
        (get-char . g$11450$xgWN3)
        (get-bytevector-some . g$11449$xgWN3)
        (get-bytevector-n! . g$11448$xgWN3)
        (get-bytevector-n . g$11447$xgWN3)
        (get-bytevector-all . g$11446$xgWN3)
        (flush-output-port . g$11445$xgWN3)
        (close-port . g$11444$xgWN3)
        (call-with-string-output-port . g$6575$xgWN3)
        (call-with-port . g$6576$xgWN3)
        (call-with-bytevector-output-port . g$11443$xgWN3)
        (bytevector->string . g$11442$xgWN3)
        (buffer-mode? . g$11441$xgWN3)
        (binary-port? . g$11440$xgWN3)
        (exit . g$11439$xgWN3)
        (command-line . g$11071$xgWN3)
        (remove . g$5062$xgWN3)
        (remv . g$5063$xgWN3)
        (remp . g$5043$xgWN3)
        (remq . g$5064$xgWN3)
        (partition . g$5042$xgWN3)
        (memv . g$5050$xgWN3)
        (memq . g$5049$xgWN3)
        (memp . g$5052$xgWN3)
        (member . g$5051$xgWN3)
        (exists . g$5056$xgWN3)
        (for-all . g$5055$xgWN3)
        (fold-right . g$5061$xgWN3)
        (fold-left . g$5060$xgWN3)
        (find . g$5041$xgWN3)
        (filter . g$5044$xgWN3)
        (cons* . g$5059$xgWN3)
        (assv . g$5046$xgWN3)
        (assq . g$5045$xgWN3)
        (assp . g$5048$xgWN3)
        (assoc . g$5047$xgWN3)
        (with-exception-handler . g$11434$xgWN3)
        (raise-continuable . g$11433$xgWN3)
        (raise . g$11432$xgWN3)
        (make-enumeration . g$6661$xgWN3)
        (enum-set=? . g$6668$xgWN3)
        (enum-set-universe . g$6662$xgWN3)
        (enum-set-union . g$6669$xgWN3)
        (enum-set-subset? . g$6667$xgWN3)
        (enum-set-projection . g$6673$xgWN3)
        (enum-set-member? . g$6666$xgWN3)
        (enum-set-intersection . g$6670$xgWN3)
        (enum-set-indexer . g$6663$xgWN3)
        (enum-set-difference . g$6671$xgWN3)
        (enum-set-constructor . g$6664$xgWN3)
        (enum-set-complement . g$6672$xgWN3)
        (enum-set->list . g$6665$xgWN3)
        (who-condition? . g$5929$xgWN3)
        (warning? . g$5848$xgWN3)
        (violation? . g$5887$xgWN3)
        (undefined-violation? . g$5999$xgWN3)
        (syntax-violation? . g$5984$xgWN3)
        (syntax-violation-subform . g$5986$xgWN3)
        (syntax-violation-form . g$5985$xgWN3)
        (syntax-violation . g$8090$xgWN3)
        (simple-conditions . g$11431$xgWN3)
        (serious-condition? . g$5861$xgWN3)
        (non-continuable-violation? . g$5943$xgWN3)
        (message-condition? . g$5834$xgWN3)
        (make-who-condition . g$5927$xgWN3)
        (make-warning . g$5847$xgWN3)
        (make-violation . g$5886$xgWN3)
        (make-undefined-violation . g$5998$xgWN3)
        (make-syntax-violation . g$5981$xgWN3)
        (make-serious-condition . g$5860$xgWN3)
        (make-non-continuable-violation . g$5942$xgWN3)
        (make-message-condition . g$5832$xgWN3)
        (make-lexical-violation . g$5968$xgWN3)
        (make-irritants-condition . g$5912$xgWN3)
        (make-implementation-restriction-violation . g$5955$xgWN3)
        (make-error . g$5873$xgWN3)
        (make-assertion-violation . g$5899$xgWN3)
        (lexical-violation? . g$5969$xgWN3)
        (irritants-condition? . g$5914$xgWN3)
        (implementation-restriction-violation? . g$5956$xgWN3)
        (error? . g$5874$xgWN3)
        (condition-who . g$5930$xgWN3)
        (condition-predicate . g$11430$xgWN3)
        (condition-message . g$5835$xgWN3)
        (condition-irritants . g$5915$xgWN3)
        (condition-accessor . g$11429$xgWN3)
        (condition . g$11428$xgWN3)
        (assertion-violation? . g$5900$xgWN3)
        (condition? . g$11427$xgWN3)
        (utf32->string . g$11426$xgWN3)
        (utf16->string . g$11425$xgWN3)
        (utf8->string . g$11424$xgWN3)
        (uint-list->bytevector . g$11423$xgWN3)
        (u8-list->bytevector . g$11422$xgWN3)
        (string->utf8 . g$11421$xgWN3)
        (string->utf32 . g$11420$xgWN3)
        (string->utf16 . g$11419$xgWN3)
        (sint-list->bytevector . g$11418$xgWN3)
        (native-endianness . g$5671$xgWN3)
        (bytevector? . g$5361$xgWN3)
        (bytevector=? . g$11417$xgWN3)
        (bytevector-uint-set! . g$11416$xgWN3)
        (bytevector-uint-ref . g$11415$xgWN3)
        (bytevector-u8-set! . g$11414$xgWN3)
        (bytevector-u8-ref . g$11413$xgWN3)
        (bytevector-u64-set! . g$5692$xgWN3)
        (bytevector-u64-ref . g$5688$xgWN3)
        (bytevector-u64-native-set! . g$5694$xgWN3)
        (bytevector-u64-native-ref . g$5690$xgWN3)
        (bytevector-u32-set! . g$5684$xgWN3)
        (bytevector-u32-ref . g$5680$xgWN3)
        (bytevector-u32-native-set! . g$5686$xgWN3)
        (bytevector-u32-native-ref . g$5682$xgWN3)
        (bytevector-u16-set! . g$5676$xgWN3)
        (bytevector-u16-ref . g$5672$xgWN3)
        (bytevector-u16-native-set! . g$5678$xgWN3)
        (bytevector-u16-native-ref . g$5674$xgWN3)
        (bytevector-sint-set! . g$11412$xgWN3)
        (bytevector-sint-ref . g$11411$xgWN3)
        (bytevector-s8-set! . g$11410$xgWN3)
        (bytevector-s8-ref . g$11409$xgWN3)
        (bytevector-s64-set! . g$5693$xgWN3)
        (bytevector-s64-ref . g$5689$xgWN3)
        (bytevector-s64-native-set! . g$5695$xgWN3)
        (bytevector-s64-native-ref . g$5691$xgWN3)
        (bytevector-s32-set! . g$5685$xgWN3)
        (bytevector-s32-ref . g$5681$xgWN3)
        (bytevector-s32-native-set! . g$5687$xgWN3)
        (bytevector-s32-native-ref . g$5683$xgWN3)
        (bytevector-s16-set! . g$5677$xgWN3)
        (bytevector-s16-ref . g$5673$xgWN3)
        (bytevector-s16-native-set! . g$5679$xgWN3)
        (bytevector-s16-native-ref . g$5675$xgWN3)
        (bytevector-length . g$11408$xgWN3)
        (bytevector-ieee-single-set! . g$11407$xgWN3)
        (bytevector-ieee-single-ref . g$11406$xgWN3)
        (bytevector-ieee-single-native-set! . g$5698$xgWN3)
        (bytevector-ieee-single-native-ref . g$5696$xgWN3)
        (bytevector-ieee-double-set! . g$11405$xgWN3)
        (bytevector-ieee-double-ref . g$11404$xgWN3)
        (bytevector-ieee-double-native-set! . g$5699$xgWN3)
        (bytevector-ieee-double-native-ref . g$5697$xgWN3)
        (bytevector-fill! . g$11403$xgWN3)
        (bytevector-copy! . g$11402$xgWN3)
        (bytevector-copy . g$11401$xgWN3)
        (bytevector->uint-list . g$11400$xgWN3)
        (bytevector->u8-list . g$11399$xgWN3)
        (bytevector->sint-list . g$11398$xgWN3)
        (no-nans-violation? . g$6189$xgWN3)
        (no-infinities-violation? . g$6176$xgWN3)
        (make-no-nans-violation . g$6188$xgWN3)
        (make-no-infinities-violation . g$6175$xgWN3)
        (real->flonum . g$11397$xgWN3)
        (flzero? . g$6489$xgWN3)
        (fltruncate . g$6484$xgWN3)
        (fltan . g$6474$xgWN3)
        (flsqrt . g$6479$xgWN3)
        (flsin . g$6472$xgWN3)
        (flround . g$6485$xgWN3)
        (flpositive? . g$6487$xgWN3)
        (flonum? . g$5366$xgWN3)
        (flodd? . g$6491$xgWN3)
        (flnumerator . g$11396$xgWN3)
        (flnegative? . g$6488$xgWN3)
        (flnan? . g$6471$xgWN3)
        (flmod0 . g$6467$xgWN3)
        (flmod . g$6466$xgWN3)
        (flmin . g$6493$xgWN3)
        (flmax . g$6492$xgWN3)
        (fllog . g$6478$xgWN3)
        (flinteger? . g$6468$xgWN3)
        (flinfinite? . g$6470$xgWN3)
        (flfloor . g$6483$xgWN3)
        (flfinite? . g$6469$xgWN3)
        (flexpt . g$6481$xgWN3)
        (flexp . g$6480$xgWN3)
        (fleven? . g$6490$xgWN3)
        (fldiv0-and-mod0 . g$6463$xgWN3)
        (fldiv0 . g$6465$xgWN3)
        (fldiv-and-mod . g$6462$xgWN3)
        (fldiv . g$6464$xgWN3)
        (fldenominator . g$11395$xgWN3)
        (flcos . g$6473$xgWN3)
        (flceiling . g$6482$xgWN3)
        (flatan . g$6477$xgWN3)
        (flasin . g$6475$xgWN3)
        (flacos . g$6476$xgWN3)
        (flabs . g$6486$xgWN3)
        (fl>? . g$11394$xgWN3)
        (fl>=? . g$11393$xgWN3)
        (fl=? . g$11392$xgWN3)
        (fl<? . g$11391$xgWN3)
        (fl<=? . g$11390$xgWN3)
        (fl/ . g$11389$xgWN3)
        (fl- . g$11388$xgWN3)
        (fl+ . g$11387$xgWN3)
        (fl* . g$11386$xgWN3)
        (fixnum->flonum . g$11385$xgWN3)
        (fxzero? . g$6370$xgWN3)
        (fxxor . g$11384$xgWN3)
        (fxrotate-bit-field . g$6384$xgWN3)
        (fxreverse-bit-field . g$11383$xgWN3)
        (fxpositive? . g$6368$xgWN3)
        (fxodd? . g$6372$xgWN3)
        (fxnot . g$11382$xgWN3)
        (fxnegative? . g$6369$xgWN3)
        (fxmod0 . g$6367$xgWN3)
        (fxmod . g$6366$xgWN3)
        (fxmin . g$6374$xgWN3)
        (fxmax . g$6373$xgWN3)
        (fxlength . g$11381$xgWN3)
        (fxior . g$11380$xgWN3)
        (fxif . g$6378$xgWN3)
        (fxfirst-bit-set . g$11379$xgWN3)
        (fxeven? . g$6371$xgWN3)
        (fxdiv0-and-mod0 . g$11378$xgWN3)
        (fxdiv0 . g$6365$xgWN3)
        (fxdiv-and-mod . g$11377$xgWN3)
        (fxdiv . g$6364$xgWN3)
        (fxcopy-bit-field . g$6381$xgWN3)
        (fxcopy-bit . g$6379$xgWN3)
        (fxbit-set? . g$11376$xgWN3)
        (fxbit-field . g$6380$xgWN3)
        (fxbit-count . g$11375$xgWN3)
        (fxarithmetic-shift-right . g$6383$xgWN3)
        (fxarithmetic-shift-left . g$6382$xgWN3)
        (fxarithmetic-shift . g$11374$xgWN3)
        (fxand . g$11373$xgWN3)
        (fx>? . g$11372$xgWN3)
        (fx>=? . g$11371$xgWN3)
        (fx=? . g$11370$xgWN3)
        (fx<? . g$11369$xgWN3)
        (fx<=? . g$11368$xgWN3)
        (fx-/carry . g$6376$xgWN3)
        (fx- . g$11367$xgWN3)
        (fx+/carry . g$6377$xgWN3)
        (fx+ . g$11366$xgWN3)
        (fx*/carry . g$6375$xgWN3)
        (fx* . g$11365$xgWN3)
        (greatest-fixnum . g$11364$xgWN3)
        (least-fixnum . g$11363$xgWN3)
        (fixnum-width . g$5367$xgWN3)
        (fixnum? . g$5365$xgWN3)
        (bitwise-rotate-bit-field . g$6338$xgWN3)
        (bitwise-reverse-bit-field . g$11362$xgWN3)
        (bitwise-length . g$11361$xgWN3)
        (bitwise-if . g$6332$xgWN3)
        (bitwise-first-bit-set . g$11360$xgWN3)
        (bitwise-copy-bit-field . g$6335$xgWN3)
        (bitwise-copy-bit . g$6333$xgWN3)
        (bitwise-bit-set? . g$11359$xgWN3)
        (bitwise-bit-field . g$6334$xgWN3)
        (bitwise-bit-count . g$11358$xgWN3)
        (bitwise-xor . g$11357$xgWN3)
        (bitwise-ior . g$11356$xgWN3)
        (bitwise-and . g$11355$xgWN3)
        (bitwise-not . g$11354$xgWN3)
        (bitwise-arithmetic-shift-right . g$6337$xgWN3)
        (bitwise-arithmetic-shift-left . g$6336$xgWN3)
        (bitwise-arithmetic-shift . g$11353$xgWN3)
        (zero? . g$5400$xgWN3)
        (vector? . g$5360$xgWN3)
        (vector-set! . g$11352$xgWN3)
        (vector-ref . g$11351$xgWN3)
        (vector-map . g$5432$xgWN3)
        (vector-length . g$11350$xgWN3)
        (vector-for-each . g$5433$xgWN3)
        (vector-fill! . g$5368$xgWN3)
        (vector->list . g$11349$xgWN3)
        (vector . g$11348$xgWN3)
        (values . g$11347$xgWN3)
        (truncate . g$11346$xgWN3)
        (tan . g$11345$xgWN3)
        (symbol? . g$5362$xgWN3)
        (symbol=? . g$5417$xgWN3)
        (symbol->string . g$11344$xgWN3)
        (substring . g$11343$xgWN3)
        (string? . g$11342$xgWN3)
        (string>? . g$5414$xgWN3)
        (string>=? . g$5416$xgWN3)
        (string=? . g$5412$xgWN3)
        (string<? . g$5413$xgWN3)
        (string<=? . g$5415$xgWN3)
        (string-ref . g$11341$xgWN3)
        (string-length . g$11340$xgWN3)
        (string-for-each . g$5434$xgWN3)
        (string-copy . g$11339$xgWN3)
        (string-append . g$11338$xgWN3)
        (string->symbol . g$11337$xgWN3)
        (string->number . g$11336$xgWN3)
        (string->list . g$11335$xgWN3)
        (string . g$11334$xgWN3)
        (sqrt . g$11333$xgWN3)
        (sin . g$11332$xgWN3)
        (round . g$11331$xgWN3)
        (reverse . g$5369$xgWN3)
        (real? . g$11330$xgWN3)
        (real-valued? . g$11329$xgWN3)
        (real-part . g$11328$xgWN3)
        (rationalize . g$5429$xgWN3)
        (rational? . g$11327$xgWN3)
        (rational-valued? . g$11326$xgWN3)
        (procedure? . g$5364$xgWN3)
        (positive? . g$5398$xgWN3)
        (pair? . g$11325$xgWN3)
        (odd? . g$5402$xgWN3)
        (numerator . g$11324$xgWN3)
        (number? . g$11323$xgWN3)
        (number->string . g$11322$xgWN3)
        (null? . g$11321$xgWN3)
        (not . g$11320$xgWN3)
        (negative? . g$5399$xgWN3)
        (nan? . g$11319$xgWN3)
        (min . g$5404$xgWN3)
        (max . g$5403$xgWN3)
        (map . g$5057$xgWN3)
        (make-vector . g$11318$xgWN3)
        (make-string . g$11317$xgWN3)
        (make-rectangular . g$11316$xgWN3)
        (make-polar . g$11315$xgWN3)
        (magnitude . g$11314$xgWN3)
        (log . g$11313$xgWN3)
        (list? . g$11312$xgWN3)
        (list-tail . g$5037$xgWN3)
        (list-ref . g$5038$xgWN3)
        (list->vector . g$5357$xgWN3)
        (list->string . g$5358$xgWN3)
        (list . g$11311$xgWN3)
        (length . g$11310$xgWN3)
        (lcm . g$5406$xgWN3)
        (integer? . g$11309$xgWN3)
        (integer-valued? . g$11308$xgWN3)
        (integer->char . g$11307$xgWN3)
        (infinite? . g$11306$xgWN3)
        (inexact? . g$11305$xgWN3)
        (inexact . g$11304$xgWN3)
        (imag-part . g$11303$xgWN3)
        (gcd . g$5405$xgWN3)
        (for-each . g$5058$xgWN3)
        (floor . g$11302$xgWN3)
        (finite? . g$11301$xgWN3)
        (expt . g$11300$xgWN3)
        (exp . g$11299$xgWN3)
        (exact? . g$11298$xgWN3)
        (exact-integer-sqrt . g$11297$xgWN3)
        (exact . g$11296$xgWN3)
        (even? . g$5401$xgWN3)
        (error . g$11295$xgWN3)
        (eqv? . g$11294$xgWN3)
        (equal? . g$11293$xgWN3)
        (eq? . g$11292$xgWN3)
        (dynamic-wind . g$11291$xgWN3)
        (div0-and-mod0 . g$11290$xgWN3)
        (mod0 . g$5356$xgWN3)
        (div0 . g$5354$xgWN3)
        (div-and-mod . g$11289$xgWN3)
        (mod . g$5355$xgWN3)
        (div . g$5353$xgWN3)
        (denominator . g$11288$xgWN3)
        (cos . g$11287$xgWN3)
        (cons . g$11286$xgWN3)
        (complex? . g$11285$xgWN3)
        (char? . g$5359$xgWN3)
        (char>? . g$5426$xgWN3)
        (char>=? . g$5428$xgWN3)
        (char=? . g$5424$xgWN3)
        (char<? . g$5425$xgWN3)
        (char<=? . g$5427$xgWN3)
        (char->integer . g$11284$xgWN3)
        (ceiling . g$11283$xgWN3)
        (call-with-values . g$11282$xgWN3)
        (call/cc . g$11281$xgWN3)
        (call-with-current-continuation . g$11280$xgWN3)
        (cddddr . g$5397$xgWN3)
        (cdddar . g$5396$xgWN3)
        (cddadr . g$5395$xgWN3)
        (cddaar . g$5394$xgWN3)
        (cdaddr . g$5393$xgWN3)
        (cdadar . g$5392$xgWN3)
        (cdaadr . g$5391$xgWN3)
        (cdaaar . g$5390$xgWN3)
        (cadddr . g$5389$xgWN3)
        (caddar . g$5388$xgWN3)
        (cadadr . g$5387$xgWN3)
        (cadaar . g$5386$xgWN3)
        (caaddr . g$5385$xgWN3)
        (caadar . g$5384$xgWN3)
        (caaadr . g$5383$xgWN3)
        (caaaar . g$5382$xgWN3)
        (cdddr . g$5381$xgWN3)
        (cddar . g$5380$xgWN3)
        (cdadr . g$5379$xgWN3)
        (cdaar . g$5378$xgWN3)
        (caddr . g$5377$xgWN3)
        (cadar . g$5376$xgWN3)
        (caadr . g$5375$xgWN3)
        (caaar . g$5374$xgWN3)
        (cddr . g$5373$xgWN3)
        (cdar . g$5372$xgWN3)
        (cadr . g$5371$xgWN3)
        (caar . g$5370$xgWN3)
        (cdr . g$11279$xgWN3)
        (car . g$11278$xgWN3)
        (boolean? . g$5363$xgWN3)
        (boolean=? . g$5418$xgWN3)
        (atan . g$11277$xgWN3)
        (assertion-violation . g$11276$xgWN3)
        (asin . g$11275$xgWN3)
        (apply . g$11274$xgWN3)
        (append . g$11273$xgWN3)
        (angle . g$11272$xgWN3)
        (acos . g$11271$xgWN3)
        (abs . g$11270$xgWN3)
        (/ . g$11269$xgWN3)
        (* . g$11268$xgWN3)
        (- . g$11267$xgWN3)
        (+ . g$11266$xgWN3)
        (>= . g$11265$xgWN3)
        (> . g$11264$xgWN3)
        (= . g$11263$xgWN3)
        (<= . g$11262$xgWN3)
        (< . g$11261$xgWN3)
        (&no-nans . g$11228$xgWN3)
        (&no-infinities . g$11227$xgWN3)
        (&i/o-encoding . g$11226$xgWN3)
        (&i/o-decoding . g$11225$xgWN3)
        (&i/o-port . g$11224$xgWN3)
        (&i/o-file-does-not-exist . g$11223$xgWN3)
        (&i/o-file-already-exists . g$11222$xgWN3)
        (&i/o-file-is-read-only . g$11221$xgWN3)
        (&i/o-file-protection . g$11220$xgWN3)
        (&i/o-filename . g$11219$xgWN3)
        (&i/o-invalid-position . g$11218$xgWN3)
        (&i/o-write . g$11217$xgWN3)
        (&i/o-read . g$11216$xgWN3)
        (&i/o . g$11215$xgWN3)
        (&non-continuable . g$11214$xgWN3)
        (&undefined . g$11213$xgWN3)
        (&syntax . g$11212$xgWN3)
        (&lexical . g$11211$xgWN3)
        (&implementation-restriction . g$11210$xgWN3)
        (&who . g$11209$xgWN3)
        (&irritants . g$11208$xgWN3)
        (&assertion . g$11207$xgWN3)
        (&violation . g$11206$xgWN3)
        (&error . g$11205$xgWN3)
        (&serious . g$11204$xgWN3)
        (&warning . g$11203$xgWN3)
        (&message . g$11202$xgWN3)
        (&condition . g$11201$xgWN3)
        (define-condition-type . g$11200$xgWN3)
        (define-enumeration . g$11199$xgWN3)
        (define-record-type . g$11198$xgWN3)
        (parent-rtd . g$11197$xgWN3)
        (nongenerative . g$11196$xgWN3)
        (opaque . g$11195$xgWN3)
        (sealed . g$11194$xgWN3)
        (protocol . g$11193$xgWN3)
        (parent . g$11192$xgWN3)
        (immutable . g$11191$xgWN3)
        (mutable . g$11190$xgWN3)
        (fields . g$11189$xgWN3)
        (error-handling-mode . g$11188$xgWN3)
        (file-options . g$11187$xgWN3)
        (buffer-mode . g$11186$xgWN3)
        (eol-style . g$11185$xgWN3)
        (guard . g$11184$xgWN3)
        (unsyntax-splicing . g$11178$xgWN3)
        (unsyntax . g$11177$xgWN3)
        (unquote-splicing . g$11176$xgWN3)
        (unquote . g$11175$xgWN3)
        (_ . g$11174$xgWN3)
        (else . g$11173$xgWN3)
        (=> . g$11172$xgWN3)
        (... . g$11171$xgWN3)
        (assert . g$11170$xgWN3)
        (endianness . g$11169$xgWN3)
        (or . g$11166$xgWN3)
        (and . g$11165$xgWN3)
        (do . g$11164$xgWN3)
        (cond . g$11163$xgWN3)
        (let* . g$11162$xgWN3)
        (let . g$11161$xgWN3)
        (identifier-syntax . g$11160$xgWN3)
        (with-syntax . g$11159$xgWN3)
        (quasisyntax . g$11158$xgWN3)
        (quasiquote . g$11157$xgWN3)
        (syntax-rules . g$11156$xgWN3)
        (let-values . g$11152$xgWN3)
        (let*-values . g$11151$xgWN3)
        (record-constructor-descriptor . g$11150$xgWN3)
        (record-type-descriptor . g$11149$xgWN3)
        (case . g$11147$xgWN3)
        (unless . g$11145$xgWN3)
        (when . g$11144$xgWN3)
        (if . g$11143$xgWN3)
        (letrec* . g$11142$xgWN3)
        (letrec . g$11141$xgWN3)
        (case-lambda . g$11139$xgWN3)
        (lambda . g$11138$xgWN3)
        (syntax . g$11137$xgWN3)
        (syntax-case . g$11136$xgWN3)
        (quote . g$11135$xgWN3)
        (letrec-syntax . g$11133$xgWN3)
        (let-syntax . g$11132$xgWN3)
        (set! . g$11131$xgWN3)
        (begin . g$11127$xgWN3)
        (define-syntax . g$11125$xgWN3)
        (define . g$11124$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11604$xgWN3
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$8070$xgWN3)
        (quotient . g$6206$xgWN3)
        (null-environment . g$8069$xgWN3)
        (remainder . g$6207$xgWN3)
        (modulo . g$6208$xgWN3)
        (inexact->exact . g$6203$xgWN3)
        (force . g$6210$xgWN3)
        (exact->inexact . g$6204$xgWN3)
        (delay . g$11168$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11605$xgWN3
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11164$xgWN3)
        (unless . g$11145$xgWN3)
        (when . g$11144$xgWN3)
        (case-lambda . g$11139$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11606$xgWN3
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8072$xgWN3) (environment . g$8068$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11607$xgWN3
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$11436$xgWN3) (set-car! . g$11435$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11608$xgWN3
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$11438$xgWN3) (string-set! . g$11437$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11609$xgWN3
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$11439$xgWN3) (command-line . g$11071$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11610$xgWN3
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$7772$xgWN3)
        (identifier? . g$8091$xgWN3)
        (generate-temporaries . g$8080$xgWN3)
        (free-identifier=? . g$8081$xgWN3)
        (syntax->datum . g$8093$xgWN3)
        (datum->syntax . g$8092$xgWN3)
        (bound-identifier=? . g$8082$xgWN3)
        (syntax-violation . g$8090$xgWN3)
        (unsyntax-splicing . g$11178$xgWN3)
        (unsyntax . g$11177$xgWN3)
        (_ . g$11174$xgWN3)
        (... . g$11171$xgWN3)
        (with-syntax . g$11159$xgWN3)
        (quasisyntax . g$11158$xgWN3)
        (syntax . g$11137$xgWN3)
        (syntax-case . g$11136$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11611$xgWN3
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5665$xgWN3)
        (file-exists? . g$5664$xgWN3)
        (make-i/o-write-error . g$6037$xgWN3)
        (make-i/o-read-error . g$6024$xgWN3)
        (make-i/o-port-error . g$6132$xgWN3)
        (make-i/o-invalid-position-error . g$6050$xgWN3)
        (make-i/o-filename-error . g$6065$xgWN3)
        (make-i/o-file-protection-error . g$6080$xgWN3)
        (make-i/o-file-is-read-only-error . g$6093$xgWN3)
        (make-i/o-file-does-not-exist-error . g$6119$xgWN3)
        (make-i/o-file-already-exists-error . g$6106$xgWN3)
        (make-i/o-error . g$6011$xgWN3)
        (i/o-write-error? . g$6038$xgWN3)
        (i/o-read-error? . g$6025$xgWN3)
        (i/o-port-error? . g$6134$xgWN3)
        (i/o-invalid-position-error? . g$6052$xgWN3)
        (i/o-error-position . g$6053$xgWN3)
        (i/o-filename-error? . g$6067$xgWN3)
        (i/o-file-protection-error? . g$6081$xgWN3)
        (i/o-file-is-read-only-error? . g$6094$xgWN3)
        (i/o-file-does-not-exist-error? . g$6120$xgWN3)
        (i/o-file-already-exists-error? . g$6107$xgWN3)
        (i/o-error? . g$6012$xgWN3)
        (i/o-error-port . g$6135$xgWN3)
        (i/o-error-filename . g$6068$xgWN3)
        (&i/o-port . g$11224$xgWN3)
        (&i/o-file-does-not-exist . g$11223$xgWN3)
        (&i/o-file-already-exists . g$11222$xgWN3)
        (&i/o-file-is-read-only . g$11221$xgWN3)
        (&i/o-file-protection . g$11220$xgWN3)
        (&i/o-filename . g$11219$xgWN3)
        (&i/o-invalid-position . g$11218$xgWN3)
        (&i/o-write . g$11217$xgWN3)
        (&i/o-read . g$11216$xgWN3)
        (&i/o . g$11215$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11612$xgWN3
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$11524$xgWN3)
        (vector-sort . g$11523$xgWN3)
        (list-sort . g$6227$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11613$xgWN3
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$5400$xgWN3)
        (vector? . g$5360$xgWN3)
        (vector-set! . g$11352$xgWN3)
        (vector-ref . g$11351$xgWN3)
        (vector-map . g$5432$xgWN3)
        (vector-length . g$11350$xgWN3)
        (vector-for-each . g$5433$xgWN3)
        (vector-fill! . g$5368$xgWN3)
        (vector->list . g$11349$xgWN3)
        (vector . g$11348$xgWN3)
        (values . g$11347$xgWN3)
        (truncate . g$11346$xgWN3)
        (tan . g$11345$xgWN3)
        (symbol? . g$5362$xgWN3)
        (symbol=? . g$5417$xgWN3)
        (symbol->string . g$11344$xgWN3)
        (substring . g$11343$xgWN3)
        (string? . g$11342$xgWN3)
        (string>? . g$5414$xgWN3)
        (string>=? . g$5416$xgWN3)
        (string=? . g$5412$xgWN3)
        (string<? . g$5413$xgWN3)
        (string<=? . g$5415$xgWN3)
        (string-ref . g$11341$xgWN3)
        (string-length . g$11340$xgWN3)
        (string-for-each . g$5434$xgWN3)
        (string-copy . g$11339$xgWN3)
        (string-append . g$11338$xgWN3)
        (string->symbol . g$11337$xgWN3)
        (string->number . g$11336$xgWN3)
        (string->list . g$11335$xgWN3)
        (string . g$11334$xgWN3)
        (sqrt . g$11333$xgWN3)
        (sin . g$11332$xgWN3)
        (round . g$11331$xgWN3)
        (reverse . g$5369$xgWN3)
        (real? . g$11330$xgWN3)
        (real-valued? . g$11329$xgWN3)
        (real-part . g$11328$xgWN3)
        (rationalize . g$5429$xgWN3)
        (rational? . g$11327$xgWN3)
        (rational-valued? . g$11326$xgWN3)
        (procedure? . g$5364$xgWN3)
        (positive? . g$5398$xgWN3)
        (pair? . g$11325$xgWN3)
        (odd? . g$5402$xgWN3)
        (numerator . g$11324$xgWN3)
        (number? . g$11323$xgWN3)
        (number->string . g$11322$xgWN3)
        (null? . g$11321$xgWN3)
        (not . g$11320$xgWN3)
        (negative? . g$5399$xgWN3)
        (nan? . g$11319$xgWN3)
        (min . g$5404$xgWN3)
        (max . g$5403$xgWN3)
        (map . g$5057$xgWN3)
        (make-vector . g$11318$xgWN3)
        (make-string . g$11317$xgWN3)
        (make-rectangular . g$11316$xgWN3)
        (make-polar . g$11315$xgWN3)
        (magnitude . g$11314$xgWN3)
        (log . g$11313$xgWN3)
        (list? . g$11312$xgWN3)
        (list-tail . g$5037$xgWN3)
        (list-ref . g$5038$xgWN3)
        (list->vector . g$5357$xgWN3)
        (list->string . g$5358$xgWN3)
        (list . g$11311$xgWN3)
        (length . g$11310$xgWN3)
        (lcm . g$5406$xgWN3)
        (integer? . g$11309$xgWN3)
        (integer-valued? . g$11308$xgWN3)
        (integer->char . g$11307$xgWN3)
        (infinite? . g$11306$xgWN3)
        (inexact? . g$11305$xgWN3)
        (inexact . g$11304$xgWN3)
        (imag-part . g$11303$xgWN3)
        (gcd . g$5405$xgWN3)
        (for-each . g$5058$xgWN3)
        (floor . g$11302$xgWN3)
        (finite? . g$11301$xgWN3)
        (expt . g$11300$xgWN3)
        (exp . g$11299$xgWN3)
        (exact? . g$11298$xgWN3)
        (exact-integer-sqrt . g$11297$xgWN3)
        (exact . g$11296$xgWN3)
        (even? . g$5401$xgWN3)
        (error . g$11295$xgWN3)
        (eqv? . g$11294$xgWN3)
        (equal? . g$11293$xgWN3)
        (eq? . g$11292$xgWN3)
        (dynamic-wind . g$11291$xgWN3)
        (div0-and-mod0 . g$11290$xgWN3)
        (mod0 . g$5356$xgWN3)
        (div0 . g$5354$xgWN3)
        (div-and-mod . g$11289$xgWN3)
        (mod . g$5355$xgWN3)
        (div . g$5353$xgWN3)
        (denominator . g$11288$xgWN3)
        (cos . g$11287$xgWN3)
        (cons . g$11286$xgWN3)
        (complex? . g$11285$xgWN3)
        (char? . g$5359$xgWN3)
        (char>? . g$5426$xgWN3)
        (char>=? . g$5428$xgWN3)
        (char=? . g$5424$xgWN3)
        (char<? . g$5425$xgWN3)
        (char<=? . g$5427$xgWN3)
        (char->integer . g$11284$xgWN3)
        (ceiling . g$11283$xgWN3)
        (call-with-values . g$11282$xgWN3)
        (call/cc . g$11281$xgWN3)
        (call-with-current-continuation . g$11280$xgWN3)
        (cddddr . g$5397$xgWN3)
        (cdddar . g$5396$xgWN3)
        (cddadr . g$5395$xgWN3)
        (cddaar . g$5394$xgWN3)
        (cdaddr . g$5393$xgWN3)
        (cdadar . g$5392$xgWN3)
        (cdaadr . g$5391$xgWN3)
        (cdaaar . g$5390$xgWN3)
        (cadddr . g$5389$xgWN3)
        (caddar . g$5388$xgWN3)
        (cadadr . g$5387$xgWN3)
        (cadaar . g$5386$xgWN3)
        (caaddr . g$5385$xgWN3)
        (caadar . g$5384$xgWN3)
        (caaadr . g$5383$xgWN3)
        (caaaar . g$5382$xgWN3)
        (cdddr . g$5381$xgWN3)
        (cddar . g$5380$xgWN3)
        (cdadr . g$5379$xgWN3)
        (cdaar . g$5378$xgWN3)
        (caddr . g$5377$xgWN3)
        (cadar . g$5376$xgWN3)
        (caadr . g$5375$xgWN3)
        (caaar . g$5374$xgWN3)
        (cddr . g$5373$xgWN3)
        (cdar . g$5372$xgWN3)
        (cadr . g$5371$xgWN3)
        (caar . g$5370$xgWN3)
        (cdr . g$11279$xgWN3)
        (car . g$11278$xgWN3)
        (boolean? . g$5363$xgWN3)
        (boolean=? . g$5418$xgWN3)
        (atan . g$11277$xgWN3)
        (assertion-violation . g$11276$xgWN3)
        (asin . g$11275$xgWN3)
        (apply . g$11274$xgWN3)
        (append . g$11273$xgWN3)
        (angle . g$11272$xgWN3)
        (acos . g$11271$xgWN3)
        (abs . g$11270$xgWN3)
        (/ . g$11269$xgWN3)
        (* . g$11268$xgWN3)
        (- . g$11267$xgWN3)
        (+ . g$11266$xgWN3)
        (>= . g$11265$xgWN3)
        (> . g$11264$xgWN3)
        (= . g$11263$xgWN3)
        (<= . g$11262$xgWN3)
        (< . g$11261$xgWN3)
        (unquote-splicing . g$11176$xgWN3)
        (unquote . g$11175$xgWN3)
        (_ . g$11174$xgWN3)
        (else . g$11173$xgWN3)
        (=> . g$11172$xgWN3)
        (... . g$11171$xgWN3)
        (assert . g$11170$xgWN3)
        (or . g$11166$xgWN3)
        (and . g$11165$xgWN3)
        (cond . g$11163$xgWN3)
        (let* . g$11162$xgWN3)
        (let . g$11161$xgWN3)
        (identifier-syntax . g$11160$xgWN3)
        (quasiquote . g$11157$xgWN3)
        (syntax-rules . g$11156$xgWN3)
        (let-values . g$11152$xgWN3)
        (let*-values . g$11151$xgWN3)
        (case . g$11147$xgWN3)
        (if . g$11143$xgWN3)
        (letrec* . g$11142$xgWN3)
        (letrec . g$11141$xgWN3)
        (lambda . g$11138$xgWN3)
        (quote . g$11135$xgWN3)
        (letrec-syntax . g$11133$xgWN3)
        (let-syntax . g$11132$xgWN3)
        (set! . g$11131$xgWN3)
        (begin . g$11127$xgWN3)
        (define-syntax . g$11125$xgWN3)
        (define . g$11124$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11614$xgWN3
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5062$xgWN3)
        (remv . g$5063$xgWN3)
        (remp . g$5043$xgWN3)
        (remq . g$5064$xgWN3)
        (partition . g$5042$xgWN3)
        (memv . g$5050$xgWN3)
        (memq . g$5049$xgWN3)
        (memp . g$5052$xgWN3)
        (member . g$5051$xgWN3)
        (exists . g$5056$xgWN3)
        (for-all . g$5055$xgWN3)
        (fold-right . g$5061$xgWN3)
        (fold-left . g$5060$xgWN3)
        (find . g$5041$xgWN3)
        (filter . g$5044$xgWN3)
        (cons* . g$5059$xgWN3)
        (assv . g$5046$xgWN3)
        (assq . g$5045$xgWN3)
        (assp . g$5048$xgWN3)
        (assoc . g$5047$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11615$xgWN3
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$6600$xgWN3)
        (call-with-input-file . g$6599$xgWN3)
        (write-char . g$6591$xgWN3)
        (write . g$11510$xgWN3)
        (with-output-to-file . g$6598$xgWN3)
        (with-input-from-file . g$6597$xgWN3)
        (read-char . g$6590$xgWN3)
        (read . g$11509$xgWN3)
        (peek-char . g$6589$xgWN3)
        (open-output-file . g$11508$xgWN3)
        (open-input-file . g$11507$xgWN3)
        (newline . g$6601$xgWN3)
        (display . g$11506$xgWN3)
        (close-output-port . g$11505$xgWN3)
        (close-input-port . g$11504$xgWN3)
        (eof-object? . g$11503$xgWN3)
        (eof-object . g$11502$xgWN3)
        (current-error-port . g$11501$xgWN3)
        (current-output-port . g$11500$xgWN3)
        (current-input-port . g$11499$xgWN3)
        (output-port? . g$11498$xgWN3)
        (input-port? . g$11497$xgWN3)
        (make-i/o-write-error . g$6037$xgWN3)
        (make-i/o-read-error . g$6024$xgWN3)
        (make-i/o-port-error . g$6132$xgWN3)
        (make-i/o-invalid-position-error . g$6050$xgWN3)
        (make-i/o-filename-error . g$6065$xgWN3)
        (make-i/o-file-protection-error . g$6080$xgWN3)
        (make-i/o-file-is-read-only-error . g$6093$xgWN3)
        (make-i/o-file-does-not-exist-error . g$6119$xgWN3)
        (make-i/o-file-already-exists-error . g$6106$xgWN3)
        (make-i/o-error . g$6011$xgWN3)
        (i/o-write-error? . g$6038$xgWN3)
        (i/o-read-error? . g$6025$xgWN3)
        (i/o-port-error? . g$6134$xgWN3)
        (i/o-invalid-position-error? . g$6052$xgWN3)
        (i/o-error-position . g$6053$xgWN3)
        (i/o-filename-error? . g$6067$xgWN3)
        (i/o-file-protection-error? . g$6081$xgWN3)
        (i/o-file-is-read-only-error? . g$6094$xgWN3)
        (i/o-file-does-not-exist-error? . g$6120$xgWN3)
        (i/o-file-already-exists-error? . g$6107$xgWN3)
        (i/o-error? . g$6012$xgWN3)
        (i/o-error-port . g$6135$xgWN3)
        (i/o-error-filename . g$6068$xgWN3)
        (&i/o-port . g$11224$xgWN3)
        (&i/o-file-does-not-exist . g$11223$xgWN3)
        (&i/o-file-already-exists . g$11222$xgWN3)
        (&i/o-file-is-read-only . g$11221$xgWN3)
        (&i/o-file-protection . g$11220$xgWN3)
        (&i/o-filename . g$11219$xgWN3)
        (&i/o-invalid-position . g$11218$xgWN3)
        (&i/o-write . g$11217$xgWN3)
        (&i/o-read . g$11216$xgWN3)
        (&i/o . g$11215$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11616$xgWN3
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$11458$xgWN3)
        (utf32->string . g$11426$xgWN3)
        (utf16->string . g$11425$xgWN3)
        (utf8->string . g$11424$xgWN3)
        (uint-list->bytevector . g$11423$xgWN3)
        (u8-list->bytevector . g$11422$xgWN3)
        (string->utf8 . g$11421$xgWN3)
        (string->utf32 . g$11420$xgWN3)
        (string->utf16 . g$11419$xgWN3)
        (sint-list->bytevector . g$11418$xgWN3)
        (native-endianness . g$5671$xgWN3)
        (bytevector? . g$5361$xgWN3)
        (bytevector=? . g$11417$xgWN3)
        (bytevector-uint-set! . g$11416$xgWN3)
        (bytevector-uint-ref . g$11415$xgWN3)
        (bytevector-u8-set! . g$11414$xgWN3)
        (bytevector-u8-ref . g$11413$xgWN3)
        (bytevector-u64-set! . g$5692$xgWN3)
        (bytevector-u64-ref . g$5688$xgWN3)
        (bytevector-u64-native-set! . g$5694$xgWN3)
        (bytevector-u64-native-ref . g$5690$xgWN3)
        (bytevector-u32-set! . g$5684$xgWN3)
        (bytevector-u32-ref . g$5680$xgWN3)
        (bytevector-u32-native-set! . g$5686$xgWN3)
        (bytevector-u32-native-ref . g$5682$xgWN3)
        (bytevector-u16-set! . g$5676$xgWN3)
        (bytevector-u16-ref . g$5672$xgWN3)
        (bytevector-u16-native-set! . g$5678$xgWN3)
        (bytevector-u16-native-ref . g$5674$xgWN3)
        (bytevector-sint-set! . g$11412$xgWN3)
        (bytevector-sint-ref . g$11411$xgWN3)
        (bytevector-s8-set! . g$11410$xgWN3)
        (bytevector-s8-ref . g$11409$xgWN3)
        (bytevector-s64-set! . g$5693$xgWN3)
        (bytevector-s64-ref . g$5689$xgWN3)
        (bytevector-s64-native-set! . g$5695$xgWN3)
        (bytevector-s64-native-ref . g$5691$xgWN3)
        (bytevector-s32-set! . g$5685$xgWN3)
        (bytevector-s32-ref . g$5681$xgWN3)
        (bytevector-s32-native-set! . g$5687$xgWN3)
        (bytevector-s32-native-ref . g$5683$xgWN3)
        (bytevector-s16-set! . g$5677$xgWN3)
        (bytevector-s16-ref . g$5673$xgWN3)
        (bytevector-s16-native-set! . g$5679$xgWN3)
        (bytevector-s16-native-ref . g$5675$xgWN3)
        (bytevector-length . g$11408$xgWN3)
        (bytevector-ieee-single-set! . g$11407$xgWN3)
        (bytevector-ieee-single-ref . g$11406$xgWN3)
        (bytevector-ieee-single-native-set! . g$5698$xgWN3)
        (bytevector-ieee-single-native-ref . g$5696$xgWN3)
        (bytevector-ieee-double-set! . g$11405$xgWN3)
        (bytevector-ieee-double-ref . g$11404$xgWN3)
        (bytevector-ieee-double-native-set! . g$5699$xgWN3)
        (bytevector-ieee-double-native-ref . g$5697$xgWN3)
        (bytevector-fill! . g$11403$xgWN3)
        (bytevector-copy! . g$11402$xgWN3)
        (bytevector-copy . g$11401$xgWN3)
        (bytevector->uint-list . g$11400$xgWN3)
        (bytevector->u8-list . g$11399$xgWN3)
        (bytevector->sint-list . g$11398$xgWN3)
        (endianness . g$11169$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11617$xgWN3
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$11556$xgWN3)
        (string-titlecase . g$11555$xgWN3)
        (string-normalize-nfkd . g$6274$xgWN3)
        (string-normalize-nfkc . g$6273$xgWN3)
        (string-normalize-nfd . g$6272$xgWN3)
        (string-normalize-nfc . g$6271$xgWN3)
        (string-foldcase . g$11554$xgWN3)
        (string-downcase . g$11553$xgWN3)
        (string-ci>? . g$6258$xgWN3)
        (string-ci>=? . g$6260$xgWN3)
        (string-ci=? . g$6256$xgWN3)
        (string-ci<? . g$6257$xgWN3)
        (string-ci<=? . g$6259$xgWN3)
        (char-whitespace? . g$11552$xgWN3)
        (char-upper-case? . g$11551$xgWN3)
        (char-title-case? . g$11550$xgWN3)
        (char-numeric? . g$11549$xgWN3)
        (char-lower-case? . g$11548$xgWN3)
        (char-general-category . g$11547$xgWN3)
        (char-upcase . g$11546$xgWN3)
        (char-titlecase . g$11545$xgWN3)
        (char-foldcase . g$11544$xgWN3)
        (char-downcase . g$11543$xgWN3)
        (char-ci>? . g$6268$xgWN3)
        (char-ci>=? . g$6270$xgWN3)
        (char-ci=? . g$6266$xgWN3)
        (char-ci<? . g$6267$xgWN3)
        (char-ci<=? . g$6269$xgWN3)
        (char-alphabetic? . g$11542$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11618$xgWN3
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$11434$xgWN3)
        (raise-continuable . g$11433$xgWN3)
        (raise . g$11432$xgWN3)
        (guard . g$11184$xgWN3)
        (else . g$11173$xgWN3)
        (=> . g$11172$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11619$xgWN3
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6338$xgWN3)
        (bitwise-reverse-bit-field . g$11362$xgWN3)
        (bitwise-length . g$11361$xgWN3)
        (bitwise-if . g$6332$xgWN3)
        (bitwise-first-bit-set . g$11360$xgWN3)
        (bitwise-copy-bit-field . g$6335$xgWN3)
        (bitwise-copy-bit . g$6333$xgWN3)
        (bitwise-bit-set? . g$11359$xgWN3)
        (bitwise-bit-field . g$6334$xgWN3)
        (bitwise-bit-count . g$11358$xgWN3)
        (bitwise-xor . g$11357$xgWN3)
        (bitwise-ior . g$11356$xgWN3)
        (bitwise-and . g$11355$xgWN3)
        (bitwise-not . g$11354$xgWN3)
        (bitwise-arithmetic-shift-right . g$6337$xgWN3)
        (bitwise-arithmetic-shift-left . g$6336$xgWN3)
        (bitwise-arithmetic-shift . g$11353$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11620$xgWN3
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$6370$xgWN3)
        (fxxor . g$11384$xgWN3)
        (fxrotate-bit-field . g$6384$xgWN3)
        (fxreverse-bit-field . g$11383$xgWN3)
        (fxpositive? . g$6368$xgWN3)
        (fxodd? . g$6372$xgWN3)
        (fxnot . g$11382$xgWN3)
        (fxnegative? . g$6369$xgWN3)
        (fxmod0 . g$6367$xgWN3)
        (fxmod . g$6366$xgWN3)
        (fxmin . g$6374$xgWN3)
        (fxmax . g$6373$xgWN3)
        (fxlength . g$11381$xgWN3)
        (fxior . g$11380$xgWN3)
        (fxif . g$6378$xgWN3)
        (fxfirst-bit-set . g$11379$xgWN3)
        (fxeven? . g$6371$xgWN3)
        (fxdiv0-and-mod0 . g$11378$xgWN3)
        (fxdiv0 . g$6365$xgWN3)
        (fxdiv-and-mod . g$11377$xgWN3)
        (fxdiv . g$6364$xgWN3)
        (fxcopy-bit-field . g$6381$xgWN3)
        (fxcopy-bit . g$6379$xgWN3)
        (fxbit-set? . g$11376$xgWN3)
        (fxbit-field . g$6380$xgWN3)
        (fxbit-count . g$11375$xgWN3)
        (fxarithmetic-shift-right . g$6383$xgWN3)
        (fxarithmetic-shift-left . g$6382$xgWN3)
        (fxarithmetic-shift . g$11374$xgWN3)
        (fxand . g$11373$xgWN3)
        (fx>? . g$11372$xgWN3)
        (fx>=? . g$11371$xgWN3)
        (fx=? . g$11370$xgWN3)
        (fx<? . g$11369$xgWN3)
        (fx<=? . g$11368$xgWN3)
        (fx-/carry . g$6376$xgWN3)
        (fx- . g$11367$xgWN3)
        (fx+/carry . g$6377$xgWN3)
        (fx+ . g$11366$xgWN3)
        (fx*/carry . g$6375$xgWN3)
        (fx* . g$11365$xgWN3)
        (greatest-fixnum . g$11364$xgWN3)
        (least-fixnum . g$11363$xgWN3)
        (fixnum-width . g$5367$xgWN3)
        (fixnum? . g$5365$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11621$xgWN3
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6189$xgWN3)
        (no-infinities-violation? . g$6176$xgWN3)
        (make-no-nans-violation . g$6188$xgWN3)
        (make-no-infinities-violation . g$6175$xgWN3)
        (real->flonum . g$11397$xgWN3)
        (flzero? . g$6489$xgWN3)
        (fltruncate . g$6484$xgWN3)
        (fltan . g$6474$xgWN3)
        (flsqrt . g$6479$xgWN3)
        (flsin . g$6472$xgWN3)
        (flround . g$6485$xgWN3)
        (flpositive? . g$6487$xgWN3)
        (flonum? . g$5366$xgWN3)
        (flodd? . g$6491$xgWN3)
        (flnumerator . g$11396$xgWN3)
        (flnegative? . g$6488$xgWN3)
        (flnan? . g$6471$xgWN3)
        (flmod0 . g$6467$xgWN3)
        (flmod . g$6466$xgWN3)
        (flmin . g$6493$xgWN3)
        (flmax . g$6492$xgWN3)
        (fllog . g$6478$xgWN3)
        (flinteger? . g$6468$xgWN3)
        (flinfinite? . g$6470$xgWN3)
        (flfloor . g$6483$xgWN3)
        (flfinite? . g$6469$xgWN3)
        (flexpt . g$6481$xgWN3)
        (flexp . g$6480$xgWN3)
        (fleven? . g$6490$xgWN3)
        (fldiv0-and-mod0 . g$6463$xgWN3)
        (fldiv0 . g$6465$xgWN3)
        (fldiv-and-mod . g$6462$xgWN3)
        (fldiv . g$6464$xgWN3)
        (fldenominator . g$11395$xgWN3)
        (flcos . g$6473$xgWN3)
        (flceiling . g$6482$xgWN3)
        (flatan . g$6477$xgWN3)
        (flasin . g$6475$xgWN3)
        (flacos . g$6476$xgWN3)
        (flabs . g$6486$xgWN3)
        (fl>? . g$11394$xgWN3)
        (fl>=? . g$11393$xgWN3)
        (fl=? . g$11392$xgWN3)
        (fl<? . g$11391$xgWN3)
        (fl<=? . g$11390$xgWN3)
        (fl/ . g$11389$xgWN3)
        (fl- . g$11388$xgWN3)
        (fl+ . g$11387$xgWN3)
        (fl* . g$11386$xgWN3)
        (fixnum->flonum . g$11385$xgWN3)
        (&no-nans . g$11228$xgWN3)
        (&no-infinities . g$11227$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11622$xgWN3
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$11522$xgWN3)
        (string-ci-hash . g$11521$xgWN3)
        (string-hash . g$11520$xgWN3)
        (equal-hash . g$11519$xgWN3)
        (hashtable-equivalence-function . g$11518$xgWN3)
        (make-hashtable . g$11517$xgWN3)
        (hashtable-hash-function . g$11516$xgWN3)
        (make-eqv-hashtable . g$5633$xgWN3)
        (make-eq-hashtable . g$5632$xgWN3)
        (hashtable? . g$11515$xgWN3)
        (hashtable-update! . g$5639$xgWN3)
        (hashtable-size . g$5634$xgWN3)
        (hashtable-set! . g$5636$xgWN3)
        (hashtable-ref . g$5635$xgWN3)
        (hashtable-mutable? . g$11514$xgWN3)
        (hashtable-keys . g$11513$xgWN3)
        (hashtable-entries . g$11512$xgWN3)
        (hashtable-delete! . g$5637$xgWN3)
        (hashtable-copy . g$11511$xgWN3)
        (hashtable-contains? . g$5638$xgWN3)
        (hashtable-clear! . g$5640$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11623$xgWN3
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$11503$xgWN3)
        (eof-object . g$11502$xgWN3)
        (current-error-port . g$11501$xgWN3)
        (current-output-port . g$11500$xgWN3)
        (current-input-port . g$11499$xgWN3)
        (output-port? . g$11498$xgWN3)
        (input-port? . g$11497$xgWN3)
        (utf-8-codec . g$11496$xgWN3)
        (utf-16-codec . g$11495$xgWN3)
        (transcoder-error-handling-mode . g$11494$xgWN3)
        (transcoder-eol-style . g$11493$xgWN3)
        (transcoder-codec . g$11492$xgWN3)
        (transcoded-port . g$11491$xgWN3)
        (textual-port? . g$11490$xgWN3)
        (string->bytevector . g$11489$xgWN3)
        (standard-output-port . g$11488$xgWN3)
        (standard-input-port . g$11487$xgWN3)
        (standard-error-port . g$11486$xgWN3)
        (set-port-position! . g$11485$xgWN3)
        (put-u8 . g$11484$xgWN3)
        (put-string . g$11483$xgWN3)
        (put-datum . g$6569$xgWN3)
        (put-char . g$11482$xgWN3)
        (put-bytevector . g$11481$xgWN3)
        (port? . g$6574$xgWN3)
        (port-transcoder . g$11480$xgWN3)
        (port-position . g$11479$xgWN3)
        (port-has-set-port-position!? . g$11478$xgWN3)
        (port-has-port-position? . g$11477$xgWN3)
        (port-eof? . g$11476$xgWN3)
        (output-port-buffer-mode . g$11475$xgWN3)
        (open-string-output-port . g$6573$xgWN3)
        (open-string-input-port . g$11474$xgWN3)
        (open-file-output-port . g$11473$xgWN3)
        (open-file-input/output-port . g$11472$xgWN3)
        (open-file-input-port . g$11471$xgWN3)
        (open-bytevector-output-port . g$11470$xgWN3)
        (open-bytevector-input-port . g$11469$xgWN3)
        (native-transcoder . g$11468$xgWN3)
        (native-eol-style . g$11467$xgWN3)
        (make-transcoder . g$11466$xgWN3)
        (latin-1-codec . g$11465$xgWN3)
        (make-i/o-write-error . g$6037$xgWN3)
        (make-i/o-read-error . g$6024$xgWN3)
        (make-i/o-port-error . g$6132$xgWN3)
        (make-i/o-invalid-position-error . g$6050$xgWN3)
        (make-i/o-filename-error . g$6065$xgWN3)
        (make-i/o-file-protection-error . g$6080$xgWN3)
        (make-i/o-file-is-read-only-error . g$6093$xgWN3)
        (make-i/o-file-does-not-exist-error . g$6119$xgWN3)
        (make-i/o-file-already-exists-error . g$6106$xgWN3)
        (make-i/o-error . g$6011$xgWN3)
        (make-i/o-encoding-error . g$6160$xgWN3)
        (make-i/o-decoding-error . g$6147$xgWN3)
        (make-custom-textual-output-port . g$11464$xgWN3)
        (make-custom-textual-input/output-port . g$11463$xgWN3)
        (make-custom-textual-input-port . g$11462$xgWN3)
        (make-custom-binary-output-port . g$11461$xgWN3)
        (make-custom-binary-input/output-port . g$11460$xgWN3)
        (make-custom-binary-input-port . g$11459$xgWN3)
        (lookahead-u8 . g$11457$xgWN3)
        (lookahead-char . g$11456$xgWN3)
        (i/o-write-error? . g$6038$xgWN3)
        (i/o-read-error? . g$6025$xgWN3)
        (i/o-port-error? . g$6134$xgWN3)
        (i/o-invalid-position-error? . g$6052$xgWN3)
        (i/o-error-position . g$6053$xgWN3)
        (i/o-filename-error? . g$6067$xgWN3)
        (i/o-file-protection-error? . g$6081$xgWN3)
        (i/o-file-is-read-only-error? . g$6094$xgWN3)
        (i/o-file-does-not-exist-error? . g$6120$xgWN3)
        (i/o-file-already-exists-error? . g$6107$xgWN3)
        (i/o-error? . g$6012$xgWN3)
        (i/o-error-port . g$6135$xgWN3)
        (i/o-error-filename . g$6068$xgWN3)
        (i/o-encoding-error? . g$6162$xgWN3)
        (i/o-encoding-error-char . g$6163$xgWN3)
        (i/o-decoding-error? . g$6148$xgWN3)
        (get-u8 . g$11455$xgWN3)
        (get-string-n! . g$11454$xgWN3)
        (get-string-n . g$11453$xgWN3)
        (get-string-all . g$11452$xgWN3)
        (get-line . g$11451$xgWN3)
        (get-datum . g$6570$xgWN3)
        (get-char . g$11450$xgWN3)
        (get-bytevector-some . g$11449$xgWN3)
        (get-bytevector-n! . g$11448$xgWN3)
        (get-bytevector-n . g$11447$xgWN3)
        (get-bytevector-all . g$11446$xgWN3)
        (flush-output-port . g$11445$xgWN3)
        (close-port . g$11444$xgWN3)
        (call-with-string-output-port . g$6575$xgWN3)
        (call-with-port . g$6576$xgWN3)
        (call-with-bytevector-output-port . g$11443$xgWN3)
        (bytevector->string . g$11442$xgWN3)
        (buffer-mode? . g$11441$xgWN3)
        (binary-port? . g$11440$xgWN3)
        (&i/o-encoding . g$11226$xgWN3)
        (&i/o-decoding . g$11225$xgWN3)
        (&i/o-port . g$11224$xgWN3)
        (&i/o-file-does-not-exist . g$11223$xgWN3)
        (&i/o-file-already-exists . g$11222$xgWN3)
        (&i/o-file-is-read-only . g$11221$xgWN3)
        (&i/o-file-protection . g$11220$xgWN3)
        (&i/o-filename . g$11219$xgWN3)
        (&i/o-invalid-position . g$11218$xgWN3)
        (&i/o-write . g$11217$xgWN3)
        (&i/o-read . g$11216$xgWN3)
        (&i/o . g$11215$xgWN3)
        (error-handling-mode . g$11188$xgWN3)
        (file-options . g$11187$xgWN3)
        (buffer-mode . g$11186$xgWN3)
        (eol-style . g$11185$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11624$xgWN3
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$6661$xgWN3)
        (enum-set=? . g$6668$xgWN3)
        (enum-set-universe . g$6662$xgWN3)
        (enum-set-union . g$6669$xgWN3)
        (enum-set-subset? . g$6667$xgWN3)
        (enum-set-projection . g$6673$xgWN3)
        (enum-set-member? . g$6666$xgWN3)
        (enum-set-intersection . g$6670$xgWN3)
        (enum-set-indexer . g$6663$xgWN3)
        (enum-set-difference . g$6671$xgWN3)
        (enum-set-constructor . g$6664$xgWN3)
        (enum-set-complement . g$6672$xgWN3)
        (enum-set->list . g$6665$xgWN3)
        (define-enumeration . g$11199$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11625$xgWN3
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$5929$xgWN3)
        (warning? . g$5848$xgWN3)
        (violation? . g$5887$xgWN3)
        (undefined-violation? . g$5999$xgWN3)
        (syntax-violation? . g$5984$xgWN3)
        (syntax-violation-subform . g$5986$xgWN3)
        (syntax-violation-form . g$5985$xgWN3)
        (simple-conditions . g$11431$xgWN3)
        (serious-condition? . g$5861$xgWN3)
        (non-continuable-violation? . g$5943$xgWN3)
        (message-condition? . g$5834$xgWN3)
        (make-who-condition . g$5927$xgWN3)
        (make-warning . g$5847$xgWN3)
        (make-violation . g$5886$xgWN3)
        (make-undefined-violation . g$5998$xgWN3)
        (make-syntax-violation . g$5981$xgWN3)
        (make-serious-condition . g$5860$xgWN3)
        (make-non-continuable-violation . g$5942$xgWN3)
        (make-message-condition . g$5832$xgWN3)
        (make-lexical-violation . g$5968$xgWN3)
        (make-irritants-condition . g$5912$xgWN3)
        (make-implementation-restriction-violation . g$5955$xgWN3)
        (make-error . g$5873$xgWN3)
        (make-assertion-violation . g$5899$xgWN3)
        (lexical-violation? . g$5969$xgWN3)
        (irritants-condition? . g$5914$xgWN3)
        (implementation-restriction-violation? . g$5956$xgWN3)
        (error? . g$5874$xgWN3)
        (condition-who . g$5930$xgWN3)
        (condition-predicate . g$11430$xgWN3)
        (condition-message . g$5835$xgWN3)
        (condition-irritants . g$5915$xgWN3)
        (condition-accessor . g$11429$xgWN3)
        (condition . g$11428$xgWN3)
        (assertion-violation? . g$5900$xgWN3)
        (condition? . g$11427$xgWN3)
        (&non-continuable . g$11214$xgWN3)
        (&undefined . g$11213$xgWN3)
        (&syntax . g$11212$xgWN3)
        (&lexical . g$11211$xgWN3)
        (&implementation-restriction . g$11210$xgWN3)
        (&who . g$11209$xgWN3)
        (&irritants . g$11208$xgWN3)
        (&assertion . g$11207$xgWN3)
        (&violation . g$11206$xgWN3)
        (&error . g$11205$xgWN3)
        (&serious . g$11204$xgWN3)
        (&warning . g$11203$xgWN3)
        (&message . g$11202$xgWN3)
        (&condition . g$11201$xgWN3)
        (define-condition-type . g$11200$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11626$xgWN3
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$11534$xgWN3)
        (record-type-uid . g$11533$xgWN3)
        (record-type-sealed? . g$11532$xgWN3)
        (record-type-parent . g$11531$xgWN3)
        (record-type-opaque? . g$11530$xgWN3)
        (record-type-name . g$11529$xgWN3)
        (record-type-generative? . g$11528$xgWN3)
        (record-type-field-names . g$11527$xgWN3)
        (record-rtd . g$11526$xgWN3)
        (record-field-mutable? . g$11525$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11627$xgWN3
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$11541$xgWN3)
        (record-predicate . g$11540$xgWN3)
        (record-mutator . g$11539$xgWN3)
        (record-constructor . g$11538$xgWN3)
        (record-accessor . g$11537$xgWN3)
        (make-record-type-descriptor . g$11536$xgWN3)
        (make-record-constructor-descriptor . g$11535$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11628$xgWN3
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11198$xgWN3)
        (parent-rtd . g$11197$xgWN3)
        (nongenerative . g$11196$xgWN3)
        (opaque . g$11195$xgWN3)
        (sealed . g$11194$xgWN3)
        (protocol . g$11193$xgWN3)
        (parent . g$11192$xgWN3)
        (immutable . g$11191$xgWN3)
        (mutable . g$11190$xgWN3)
        (fields . g$11189$xgWN3)
        (record-constructor-descriptor . g$11150$xgWN3)
        (record-type-descriptor . g$11149$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$9423$xgWN3
      'g$11629$xgWN3
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$7968$xgWN3)
        (&no-nans-rcd . g$6191$xgWN3)
        (&no-nans-rtd . g$6190$xgWN3)
        (&no-infinities-rcd . g$6178$xgWN3)
        (&no-infinities-rtd . g$6177$xgWN3)
        (&i/o-encoding-rcd . g$6165$xgWN3)
        (&i/o-encoding-rtd . g$6164$xgWN3)
        (&i/o-decoding-rcd . g$6150$xgWN3)
        (&i/o-decoding-rtd . g$6149$xgWN3)
        (&i/o-port-rcd . g$6137$xgWN3)
        (&i/o-port-rtd . g$6136$xgWN3)
        (&i/o-file-does-not-exist-rcd . g$6122$xgWN3)
        (&i/o-file-does-not-exist-rtd . g$6121$xgWN3)
        (&i/o-file-already-exists-rcd . g$6109$xgWN3)
        (&i/o-file-already-exists-rtd . g$6108$xgWN3)
        (&i/o-file-is-read-only-rcd . g$6096$xgWN3)
        (&i/o-file-is-read-only-rtd . g$6095$xgWN3)
        (&i/o-file-protection-rcd . g$6083$xgWN3)
        (&i/o-file-protection-rtd . g$6082$xgWN3)
        (&i/o-filename-rcd . g$6070$xgWN3)
        (&i/o-filename-rtd . g$6069$xgWN3)
        (&i/o-invalid-position-rcd . g$6055$xgWN3)
        (&i/o-invalid-position-rtd . g$6054$xgWN3)
        (&i/o-write-rcd . g$6040$xgWN3)
        (&i/o-write-rtd . g$6039$xgWN3)
        (&i/o-read-rcd . g$6027$xgWN3)
        (&i/o-read-rtd . g$6026$xgWN3)
        (&i/o-rcd . g$6014$xgWN3)
        (&i/o-rtd . g$6013$xgWN3)
        (&undefined-rcd . g$6001$xgWN3)
        (&undefined-rtd . g$6000$xgWN3)
        (&syntax-rcd . g$5988$xgWN3)
        (&syntax-rtd . g$5987$xgWN3)
        (&lexical-rcd . g$5971$xgWN3)
        (&lexical-rtd . g$5970$xgWN3)
        (&implementation-restriction-rcd . g$5958$xgWN3)
        (&implementation-restriction-rtd . g$5957$xgWN3)
        (&non-continuable-rcd . g$5945$xgWN3)
        (&non-continuable-rtd . g$5944$xgWN3)
        (&who-rcd . g$5932$xgWN3)
        (&who-rtd . g$5931$xgWN3)
        (&irritants-rcd . g$5917$xgWN3)
        (&irritants-rtd . g$5916$xgWN3)
        (&assertion-rcd . g$5902$xgWN3)
        (&assertion-rtd . g$5901$xgWN3)
        (&violation-rcd . g$5889$xgWN3)
        (&violation-rtd . g$5888$xgWN3)
        (&error-rcd . g$5876$xgWN3)
        (&error-rtd . g$5875$xgWN3)
        (&serious-rcd . g$5863$xgWN3)
        (&serious-rtd . g$5862$xgWN3)
        (&warning-rcd . g$5850$xgWN3)
        (&warning-rtd . g$5849$xgWN3)
        (&message-rcd . g$5837$xgWN3)
        (&message-rtd . g$5836$xgWN3)
        (&condition-rcd . g$5797$xgWN3)
        (&condition-rtd . g$5796$xgWN3)
        (library-letrec* . g$11593$xgWN3)
        (annotation-stripped . g$11592$xgWN3)
        (annotation-source . g$11591$xgWN3)
        (annotation-expression . g$11590$xgWN3)
        (annotation? . g$11589$xgWN3)
        (read-annotated . g$11588$xgWN3)
        (tanh . g$11587$xgWN3)
        (cosh . g$11586$xgWN3)
        (sinh . g$11585$xgWN3)
        (make-guid . g$11584$xgWN3)
        (unspecified? . g$11583$xgWN3)
        (make-list . g$5040$xgWN3)
        (last-pair . g$5039$xgWN3)
        (load-r5rs . g$11582$xgWN3)
        (license . g$11581$xgWN3)
        (stacktrace . g$11580$xgWN3)
        (ironscheme-build . g$11076$xgWN3)
        (define-clr-class-internal . g$11579$xgWN3)
        (clr-field-set!-internal . g$11578$xgWN3)
        (clr-field-get-internal . g$11577$xgWN3)
        (clr-cast-internal . g$11576$xgWN3)
        (clr-call-internal . g$11575$xgWN3)
        (clr-new-internal . g$11574$xgWN3)
        (clr-new-array-internal . g$11573$xgWN3)
        (clr-is-internal . g$11572$xgWN3)
        (clr-reference-internal . g$11571$xgWN3)
        (clr-using-internal . g$11570$xgWN3)
        (syntax-error . g$8087$xgWN3)
        (syntax-dispatch . g$7963$xgWN3)
        (compile-core . g$11569$xgWN3)
        (eval-core . g$11568$xgWN3)
        (remove-location . g$11567$xgWN3)
        (set-symbol-value! . g$11566$xgWN3)
        (symbol-value . g$11565$xgWN3)
        (symbol-bound? . g$11564$xgWN3)
        (ungensym . g$11563$xgWN3)
        (gensym . g$11562$xgWN3)
        (void . g$11561$xgWN3)
        (load-serialized-library . g$11560$xgWN3)
        (serialize-library . g$11559$xgWN3)
        (compile-system-libraries . g$11079$xgWN3)
        (compile->closure . g$11081$xgWN3)
        (compile . g$11080$xgWN3)
        (load . g$11075$xgWN3)
        (string-normalize . g$11558$xgWN3)
        (interaction-environment . g$8097$xgWN3)
        (char-ready? . g$11557$xgWN3)
        (string-upcase . g$11556$xgWN3)
        (string-titlecase . g$11555$xgWN3)
        (string-normalize-nfkd . g$6274$xgWN3)
        (string-normalize-nfkc . g$6273$xgWN3)
        (string-normalize-nfd . g$6272$xgWN3)
        (string-normalize-nfc . g$6271$xgWN3)
        (string-foldcase . g$11554$xgWN3)
        (string-downcase . g$11553$xgWN3)
        (string-ci>? . g$6258$xgWN3)
        (string-ci>=? . g$6260$xgWN3)
        (string-ci=? . g$6256$xgWN3)
        (string-ci<? . g$6257$xgWN3)
        (string-ci<=? . g$6259$xgWN3)
        (char-whitespace? . g$11552$xgWN3)
        (char-upper-case? . g$11551$xgWN3)
        (char-title-case? . g$11550$xgWN3)
        (char-numeric? . g$11549$xgWN3)
        (char-lower-case? . g$11548$xgWN3)
        (char-general-category . g$11547$xgWN3)
        (char-upcase . g$11546$xgWN3)
        (char-titlecase . g$11545$xgWN3)
        (char-foldcase . g$11544$xgWN3)
        (char-downcase . g$11543$xgWN3)
        (char-ci>? . g$6268$xgWN3)
        (char-ci>=? . g$6270$xgWN3)
        (char-ci=? . g$6266$xgWN3)
        (char-ci<? . g$6267$xgWN3)
        (char-ci<=? . g$6269$xgWN3)
        (char-alphabetic? . g$11542$xgWN3)
        (variable-transformer-procedure . g$7775$xgWN3)
        (variable-transformer? . g$7774$xgWN3)
        (make-variable-transformer . g$7772$xgWN3)
        (identifier? . g$8091$xgWN3)
        (generate-temporaries . g$8080$xgWN3)
        (free-identifier=? . g$8081$xgWN3)
        (syntax->datum . g$8093$xgWN3)
        (datum->syntax . g$8092$xgWN3)
        (bound-identifier=? . g$8082$xgWN3)
        (record-type-descriptor? . g$11541$xgWN3)
        (record-predicate . g$11540$xgWN3)
        (record-mutator . g$11539$xgWN3)
        (record-constructor . g$11538$xgWN3)
        (record-accessor . g$11537$xgWN3)
        (make-record-type-descriptor . g$11536$xgWN3)
        (make-record-constructor-descriptor . g$11535$xgWN3)
        (record? . g$11534$xgWN3)
        (record-type-uid . g$11533$xgWN3)
        (record-type-sealed? . g$11532$xgWN3)
        (record-type-parent . g$11531$xgWN3)
        (record-type-opaque? . g$11530$xgWN3)
        (record-type-name . g$11529$xgWN3)
        (record-type-generative? . g$11528$xgWN3)
        (record-type-field-names . g$11527$xgWN3)
        (record-rtd . g$11526$xgWN3)
        (record-field-mutable? . g$11525$xgWN3)
        (delete-file . g$5665$xgWN3)
        (file-exists? . g$5664$xgWN3)
        (vector-sort! . g$11524$xgWN3)
        (vector-sort . g$11523$xgWN3)
        (list-sort . g$6227$xgWN3)
        (symbol-hash . g$11522$xgWN3)
        (string-ci-hash . g$11521$xgWN3)
        (string-hash . g$11520$xgWN3)
        (equal-hash . g$11519$xgWN3)
        (hashtable-equivalence-function . g$11518$xgWN3)
        (make-hashtable . g$11517$xgWN3)
        (hashtable-hash-function . g$11516$xgWN3)
        (make-eqv-hashtable . g$5633$xgWN3)
        (make-eq-hashtable . g$5632$xgWN3)
        (hashtable? . g$11515$xgWN3)
        (hashtable-update! . g$5639$xgWN3)
        (hashtable-size . g$5634$xgWN3)
        (hashtable-set! . g$5636$xgWN3)
        (hashtable-ref . g$5635$xgWN3)
        (hashtable-mutable? . g$11514$xgWN3)
        (hashtable-keys . g$11513$xgWN3)
        (hashtable-entries . g$11512$xgWN3)
        (hashtable-delete! . g$5637$xgWN3)
        (hashtable-copy . g$11511$xgWN3)
        (hashtable-contains? . g$5638$xgWN3)
        (hashtable-clear! . g$5640$xgWN3)
        (call-with-output-file . g$6600$xgWN3)
        (call-with-input-file . g$6599$xgWN3)
        (write-char . g$6591$xgWN3)
        (write . g$11510$xgWN3)
        (with-output-to-file . g$6598$xgWN3)
        (with-input-from-file . g$6597$xgWN3)
        (read-char . g$6590$xgWN3)
        (read . g$11509$xgWN3)
        (peek-char . g$6589$xgWN3)
        (open-output-file . g$11508$xgWN3)
        (open-input-file . g$11507$xgWN3)
        (newline . g$6601$xgWN3)
        (display . g$11506$xgWN3)
        (close-output-port . g$11505$xgWN3)
        (close-input-port . g$11504$xgWN3)
        (eof-object? . g$11503$xgWN3)
        (eof-object . g$11502$xgWN3)
        (current-error-port . g$11501$xgWN3)
        (current-output-port . g$11500$xgWN3)
        (current-input-port . g$11499$xgWN3)
        (output-port? . g$11498$xgWN3)
        (input-port? . g$11497$xgWN3)
        (utf-8-codec . g$11496$xgWN3)
        (utf-16-codec . g$11495$xgWN3)
        (transcoder-error-handling-mode . g$11494$xgWN3)
        (transcoder-eol-style . g$11493$xgWN3)
        (transcoder-codec . g$11492$xgWN3)
        (transcoded-port . g$11491$xgWN3)
        (textual-port? . g$11490$xgWN3)
        (string->bytevector . g$11489$xgWN3)
        (standard-output-port . g$11488$xgWN3)
        (standard-input-port . g$11487$xgWN3)
        (standard-error-port . g$11486$xgWN3)
        (set-port-position! . g$11485$xgWN3)
        (put-u8 . g$11484$xgWN3)
        (put-string . g$11483$xgWN3)
        (put-datum . g$6569$xgWN3)
        (put-char . g$11482$xgWN3)
        (put-bytevector . g$11481$xgWN3)
        (port? . g$6574$xgWN3)
        (port-transcoder . g$11480$xgWN3)
        (port-position . g$11479$xgWN3)
        (port-has-set-port-position!? . g$11478$xgWN3)
        (port-has-port-position? . g$11477$xgWN3)
        (port-eof? . g$11476$xgWN3)
        (output-port-buffer-mode . g$11475$xgWN3)
        (open-string-output-port . g$6573$xgWN3)
        (open-string-input-port . g$11474$xgWN3)
        (open-file-output-port . g$11473$xgWN3)
        (open-file-input/output-port . g$11472$xgWN3)
        (open-file-input-port . g$11471$xgWN3)
        (open-bytevector-output-port . g$11470$xgWN3)
        (open-bytevector-input-port . g$11469$xgWN3)
        (native-transcoder . g$11468$xgWN3)
        (native-eol-style . g$11467$xgWN3)
        (make-transcoder . g$11466$xgWN3)
        (latin-1-codec . g$11465$xgWN3)
        (make-i/o-write-error . g$6037$xgWN3)
        (make-i/o-read-error . g$6024$xgWN3)
        (make-i/o-port-error . g$6132$xgWN3)
        (make-i/o-invalid-position-error . g$6050$xgWN3)
        (make-i/o-filename-error . g$6065$xgWN3)
        (make-i/o-file-protection-error . g$6080$xgWN3)
        (make-i/o-file-is-read-only-error . g$6093$xgWN3)
        (make-i/o-file-does-not-exist-error . g$6119$xgWN3)
        (make-i/o-file-already-exists-error . g$6106$xgWN3)
        (make-i/o-error . g$6011$xgWN3)
        (make-i/o-encoding-error . g$6160$xgWN3)
        (make-i/o-decoding-error . g$6147$xgWN3)
        (make-custom-textual-output-port . g$11464$xgWN3)
        (make-custom-textual-input/output-port . g$11463$xgWN3)
        (make-custom-textual-input-port . g$11462$xgWN3)
        (make-custom-binary-output-port . g$11461$xgWN3)
        (make-custom-binary-input/output-port . g$11460$xgWN3)
        (make-custom-binary-input-port . g$11459$xgWN3)
        (make-bytevector . g$11458$xgWN3)
        (lookahead-u8 . g$11457$xgWN3)
        (lookahead-char . g$11456$xgWN3)
        (i/o-write-error? . g$6038$xgWN3)
        (i/o-read-error? . g$6025$xgWN3)
        (i/o-port-error? . g$6134$xgWN3)
        (i/o-invalid-position-error? . g$6052$xgWN3)
        (i/o-error-position . g$6053$xgWN3)
        (i/o-filename-error? . g$6067$xgWN3)
        (i/o-file-protection-error? . g$6081$xgWN3)
        (i/o-file-is-read-only-error? . g$6094$xgWN3)
        (i/o-file-does-not-exist-error? . g$6120$xgWN3)
        (i/o-file-already-exists-error? . g$6107$xgWN3)
        (i/o-error? . g$6012$xgWN3)
        (i/o-error-port . g$6135$xgWN3)
        (i/o-error-filename . g$6068$xgWN3)
        (i/o-encoding-error? . g$6162$xgWN3)
        (i/o-encoding-error-char . g$6163$xgWN3)
        (i/o-decoding-error? . g$6148$xgWN3)
        (get-u8 . g$11455$xgWN3)
        (get-string-n! . g$11454$xgWN3)
        (get-string-n . g$11453$xgWN3)
        (get-string-all . g$11452$xgWN3)
        (get-line . g$11451$xgWN3)
        (get-datum . g$6570$xgWN3)
        (get-char . g$11450$xgWN3)
        (get-bytevector-some . g$11449$xgWN3)
        (get-bytevector-n! . g$11448$xgWN3)
        (get-bytevector-n . g$11447$xgWN3)
        (get-bytevector-all . g$11446$xgWN3)
        (flush-output-port . g$11445$xgWN3)
        (close-port . g$11444$xgWN3)
        (call-with-string-output-port . g$6575$xgWN3)
        (call-with-port . g$6576$xgWN3)
        (call-with-bytevector-output-port . g$11443$xgWN3)
        (bytevector->string . g$11442$xgWN3)
        (buffer-mode? . g$11441$xgWN3)
        (binary-port? . g$11440$xgWN3)
        (scheme-report-environment . g$8070$xgWN3)
        (quotient . g$6206$xgWN3)
        (null-environment . g$8069$xgWN3)
        (remainder . g$6207$xgWN3)
        (modulo . g$6208$xgWN3)
        (inexact->exact . g$6203$xgWN3)
        (force . g$6210$xgWN3)
        (exact->inexact . g$6204$xgWN3)
        (exit . g$11439$xgWN3)
        (command-line . g$11071$xgWN3)
        (string-fill! . g$11438$xgWN3)
        (string-set! . g$11437$xgWN3)
        (set-cdr! . g$11436$xgWN3)
        (set-car! . g$11435$xgWN3)
        (remove . g$5062$xgWN3)
        (remv . g$5063$xgWN3)
        (remp . g$5043$xgWN3)
        (remq . g$5064$xgWN3)
        (partition . g$5042$xgWN3)
        (memv . g$5050$xgWN3)
        (memq . g$5049$xgWN3)
        (memp . g$5052$xgWN3)
        (member . g$5051$xgWN3)
        (exists . g$5056$xgWN3)
        (for-all . g$5055$xgWN3)
        (fold-right . g$5061$xgWN3)
        (fold-left . g$5060$xgWN3)
        (find . g$5041$xgWN3)
        (filter . g$5044$xgWN3)
        (cons* . g$5059$xgWN3)
        (assv . g$5046$xgWN3)
        (assq . g$5045$xgWN3)
        (assp . g$5048$xgWN3)
        (assoc . g$5047$xgWN3)
        (with-exception-handler . g$11434$xgWN3)
        (raise-continuable . g$11433$xgWN3)
        (raise . g$11432$xgWN3)
        (eval . g$8072$xgWN3)
        (environment . g$8068$xgWN3)
        (make-enumeration . g$6661$xgWN3)
        (enum-set=? . g$6668$xgWN3)
        (enum-set-universe . g$6662$xgWN3)
        (enum-set-union . g$6669$xgWN3)
        (enum-set-subset? . g$6667$xgWN3)
        (enum-set-projection . g$6673$xgWN3)
        (enum-set-member? . g$6666$xgWN3)
        (enum-set-intersection . g$6670$xgWN3)
        (enum-set-indexer . g$6663$xgWN3)
        (enum-set-difference . g$6671$xgWN3)
        (enum-set-constructor . g$6664$xgWN3)
        (enum-set-complement . g$6672$xgWN3)
        (enum-set->list . g$6665$xgWN3)
        (who-condition? . g$5929$xgWN3)
        (warning? . g$5848$xgWN3)
        (violation? . g$5887$xgWN3)
        (undefined-violation? . g$5999$xgWN3)
        (syntax-violation? . g$5984$xgWN3)
        (syntax-violation-subform . g$5986$xgWN3)
        (syntax-violation-form . g$5985$xgWN3)
        (syntax-violation . g$8090$xgWN3)
        (simple-conditions . g$11431$xgWN3)
        (serious-condition? . g$5861$xgWN3)
        (non-continuable-violation? . g$5943$xgWN3)
        (message-condition? . g$5834$xgWN3)
        (make-who-condition . g$5927$xgWN3)
        (make-warning . g$5847$xgWN3)
        (make-violation . g$5886$xgWN3)
        (make-undefined-violation . g$5998$xgWN3)
        (make-syntax-violation . g$5981$xgWN3)
        (make-serious-condition . g$5860$xgWN3)
        (make-non-continuable-violation . g$5942$xgWN3)
        (make-message-condition . g$5832$xgWN3)
        (make-lexical-violation . g$5968$xgWN3)
        (make-irritants-condition . g$5912$xgWN3)
        (make-implementation-restriction-violation . g$5955$xgWN3)
        (make-error . g$5873$xgWN3)
        (make-assertion-violation . g$5899$xgWN3)
        (lexical-violation? . g$5969$xgWN3)
        (irritants-condition? . g$5914$xgWN3)
        (implementation-restriction-violation? . g$5956$xgWN3)
        (error? . g$5874$xgWN3)
        (condition-who . g$5930$xgWN3)
        (condition-predicate . g$11430$xgWN3)
        (condition-message . g$5835$xgWN3)
        (condition-irritants . g$5915$xgWN3)
        (condition-accessor . g$11429$xgWN3)
        (condition . g$11428$xgWN3)
        (assertion-violation? . g$5900$xgWN3)
        (condition? . g$11427$xgWN3)
        (utf32->string . g$11426$xgWN3)
        (utf16->string . g$11425$xgWN3)
        (utf8->string . g$11424$xgWN3)
        (uint-list->bytevector . g$11423$xgWN3)
        (u8-list->bytevector . g$11422$xgWN3)
        (string->utf8 . g$11421$xgWN3)
        (string->utf32 . g$11420$xgWN3)
        (string->utf16 . g$11419$xgWN3)
        (sint-list->bytevector . g$11418$xgWN3)
        (native-endianness . g$5671$xgWN3)
        (bytevector? . g$5361$xgWN3)
        (bytevector=? . g$11417$xgWN3)
        (bytevector-uint-set! . g$11416$xgWN3)
        (bytevector-uint-ref . g$11415$xgWN3)
        (bytevector-u8-set! . g$11414$xgWN3)
        (bytevector-u8-ref . g$11413$xgWN3)
        (bytevector-u64-set! . g$5692$xgWN3)
        (bytevector-u64-ref . g$5688$xgWN3)
        (bytevector-u64-native-set! . g$5694$xgWN3)
        (bytevector-u64-native-ref . g$5690$xgWN3)
        (bytevector-u32-set! . g$5684$xgWN3)
        (bytevector-u32-ref . g$5680$xgWN3)
        (bytevector-u32-native-set! . g$5686$xgWN3)
        (bytevector-u32-native-ref . g$5682$xgWN3)
        (bytevector-u16-set! . g$5676$xgWN3)
        (bytevector-u16-ref . g$5672$xgWN3)
        (bytevector-u16-native-set! . g$5678$xgWN3)
        (bytevector-u16-native-ref . g$5674$xgWN3)
        (bytevector-sint-set! . g$11412$xgWN3)
        (bytevector-sint-ref . g$11411$xgWN3)
        (bytevector-s8-set! . g$11410$xgWN3)
        (bytevector-s8-ref . g$11409$xgWN3)
        (bytevector-s64-set! . g$5693$xgWN3)
        (bytevector-s64-ref . g$5689$xgWN3)
        (bytevector-s64-native-set! . g$5695$xgWN3)
        (bytevector-s64-native-ref . g$5691$xgWN3)
        (bytevector-s32-set! . g$5685$xgWN3)
        (bytevector-s32-ref . g$5681$xgWN3)
        (bytevector-s32-native-set! . g$5687$xgWN3)
        (bytevector-s32-native-ref . g$5683$xgWN3)
        (bytevector-s16-set! . g$5677$xgWN3)
        (bytevector-s16-ref . g$5673$xgWN3)
        (bytevector-s16-native-set! . g$5679$xgWN3)
        (bytevector-s16-native-ref . g$5675$xgWN3)
        (bytevector-length . g$11408$xgWN3)
        (bytevector-ieee-single-set! . g$11407$xgWN3)
        (bytevector-ieee-single-ref . g$11406$xgWN3)
        (bytevector-ieee-single-native-set! . g$5698$xgWN3)
        (bytevector-ieee-single-native-ref . g$5696$xgWN3)
        (bytevector-ieee-double-set! . g$11405$xgWN3)
        (bytevector-ieee-double-ref . g$11404$xgWN3)
        (bytevector-ieee-double-native-set! . g$5699$xgWN3)
        (bytevector-ieee-double-native-ref . g$5697$xgWN3)
        (bytevector-fill! . g$11403$xgWN3)
        (bytevector-copy! . g$11402$xgWN3)
        (bytevector-copy . g$11401$xgWN3)
        (bytevector->uint-list . g$11400$xgWN3)
        (bytevector->u8-list . g$11399$xgWN3)
        (bytevector->sint-list . g$11398$xgWN3)
        (no-nans-violation? . g$6189$xgWN3)
        (no-infinities-violation? . g$6176$xgWN3)
        (make-no-nans-violation . g$6188$xgWN3)
        (make-no-infinities-violation . g$6175$xgWN3)
        (real->flonum . g$11397$xgWN3)
        (flzero? . g$6489$xgWN3)
        (fltruncate . g$6484$xgWN3)
        (fltan . g$6474$xgWN3)
        (flsqrt . g$6479$xgWN3)
        (flsin . g$6472$xgWN3)
        (flround . g$6485$xgWN3)
        (flpositive? . g$6487$xgWN3)
        (flonum? . g$5366$xgWN3)
        (flodd? . g$6491$xgWN3)
        (flnumerator . g$11396$xgWN3)
        (flnegative? . g$6488$xgWN3)
        (flnan? . g$6471$xgWN3)
        (flmod0 . g$6467$xgWN3)
        (flmod . g$6466$xgWN3)
        (flmin . g$6493$xgWN3)
        (flmax . g$6492$xgWN3)
        (fllog . g$6478$xgWN3)
        (flinteger? . g$6468$xgWN3)
        (flinfinite? . g$6470$xgWN3)
        (flfloor . g$6483$xgWN3)
        (flfinite? . g$6469$xgWN3)
        (flexpt . g$6481$xgWN3)
        (flexp . g$6480$xgWN3)
        (fleven? . g$6490$xgWN3)
        (fldiv0-and-mod0 . g$6463$xgWN3)
        (fldiv0 . g$6465$xgWN3)
        (fldiv-and-mod . g$6462$xgWN3)
        (fldiv . g$6464$xgWN3)
        (fldenominator . g$11395$xgWN3)
        (flcos . g$6473$xgWN3)
        (flceiling . g$6482$xgWN3)
        (flatan . g$6477$xgWN3)
        (flasin . g$6475$xgWN3)
        (flacos . g$6476$xgWN3)
        (flabs . g$6486$xgWN3)
        (fl>? . g$11394$xgWN3)
        (fl>=? . g$11393$xgWN3)
        (fl=? . g$11392$xgWN3)
        (fl<? . g$11391$xgWN3)
        (fl<=? . g$11390$xgWN3)
        (fl/ . g$11389$xgWN3)
        (fl- . g$11388$xgWN3)
        (fl+ . g$11387$xgWN3)
        (fl* . g$11386$xgWN3)
        (fixnum->flonum . g$11385$xgWN3)
        (fxzero? . g$6370$xgWN3)
        (fxxor . g$11384$xgWN3)
        (fxrotate-bit-field . g$6384$xgWN3)
        (fxreverse-bit-field . g$11383$xgWN3)
        (fxpositive? . g$6368$xgWN3)
        (fxodd? . g$6372$xgWN3)
        (fxnot . g$11382$xgWN3)
        (fxnegative? . g$6369$xgWN3)
        (fxmod0 . g$6367$xgWN3)
        (fxmod . g$6366$xgWN3)
        (fxmin . g$6374$xgWN3)
        (fxmax . g$6373$xgWN3)
        (fxlength . g$11381$xgWN3)
        (fxior . g$11380$xgWN3)
        (fxif . g$6378$xgWN3)
        (fxfirst-bit-set . g$11379$xgWN3)
        (fxeven? . g$6371$xgWN3)
        (fxdiv0-and-mod0 . g$11378$xgWN3)
        (fxdiv0 . g$6365$xgWN3)
        (fxdiv-and-mod . g$11377$xgWN3)
        (fxdiv . g$6364$xgWN3)
        (fxcopy-bit-field . g$6381$xgWN3)
        (fxcopy-bit . g$6379$xgWN3)
        (fxbit-set? . g$11376$xgWN3)
        (fxbit-field . g$6380$xgWN3)
        (fxbit-count . g$11375$xgWN3)
        (fxarithmetic-shift-right . g$6383$xgWN3)
        (fxarithmetic-shift-left . g$6382$xgWN3)
        (fxarithmetic-shift . g$11374$xgWN3)
        (fxand . g$11373$xgWN3)
        (fx>? . g$11372$xgWN3)
        (fx>=? . g$11371$xgWN3)
        (fx=? . g$11370$xgWN3)
        (fx<? . g$11369$xgWN3)
        (fx<=? . g$11368$xgWN3)
        (fx-/carry . g$6376$xgWN3)
        (fx- . g$11367$xgWN3)
        (fx+/carry . g$6377$xgWN3)
        (fx+ . g$11366$xgWN3)
        (fx*/carry . g$6375$xgWN3)
        (fx* . g$11365$xgWN3)
        (greatest-fixnum . g$11364$xgWN3)
        (least-fixnum . g$11363$xgWN3)
        (fixnum-width . g$5367$xgWN3)
        (fixnum? . g$5365$xgWN3)
        (bitwise-rotate-bit-field . g$6338$xgWN3)
        (bitwise-reverse-bit-field . g$11362$xgWN3)
        (bitwise-length . g$11361$xgWN3)
        (bitwise-if . g$6332$xgWN3)
        (bitwise-first-bit-set . g$11360$xgWN3)
        (bitwise-copy-bit-field . g$6335$xgWN3)
        (bitwise-copy-bit . g$6333$xgWN3)
        (bitwise-bit-set? . g$11359$xgWN3)
        (bitwise-bit-field . g$6334$xgWN3)
        (bitwise-bit-count . g$11358$xgWN3)
        (bitwise-xor . g$11357$xgWN3)
        (bitwise-ior . g$11356$xgWN3)
        (bitwise-and . g$11355$xgWN3)
        (bitwise-not . g$11354$xgWN3)
        (bitwise-arithmetic-shift-right . g$6337$xgWN3)
        (bitwise-arithmetic-shift-left . g$6336$xgWN3)
        (bitwise-arithmetic-shift . g$11353$xgWN3)
        (zero? . g$5400$xgWN3)
        (vector? . g$5360$xgWN3)
        (vector-set! . g$11352$xgWN3)
        (vector-ref . g$11351$xgWN3)
        (vector-map . g$5432$xgWN3)
        (vector-length . g$11350$xgWN3)
        (vector-for-each . g$5433$xgWN3)
        (vector-fill! . g$5368$xgWN3)
        (vector->list . g$11349$xgWN3)
        (vector . g$11348$xgWN3)
        (values . g$11347$xgWN3)
        (truncate . g$11346$xgWN3)
        (tan . g$11345$xgWN3)
        (symbol? . g$5362$xgWN3)
        (symbol=? . g$5417$xgWN3)
        (symbol->string . g$11344$xgWN3)
        (substring . g$11343$xgWN3)
        (string? . g$11342$xgWN3)
        (string>? . g$5414$xgWN3)
        (string>=? . g$5416$xgWN3)
        (string=? . g$5412$xgWN3)
        (string<? . g$5413$xgWN3)
        (string<=? . g$5415$xgWN3)
        (string-ref . g$11341$xgWN3)
        (string-length . g$11340$xgWN3)
        (string-for-each . g$5434$xgWN3)
        (string-copy . g$11339$xgWN3)
        (string-append . g$11338$xgWN3)
        (string->symbol . g$11337$xgWN3)
        (string->number . g$11336$xgWN3)
        (string->list . g$11335$xgWN3)
        (string . g$11334$xgWN3)
        (sqrt . g$11333$xgWN3)
        (sin . g$11332$xgWN3)
        (round . g$11331$xgWN3)
        (reverse . g$5369$xgWN3)
        (real? . g$11330$xgWN3)
        (real-valued? . g$11329$xgWN3)
        (real-part . g$11328$xgWN3)
        (rationalize . g$5429$xgWN3)
        (rational? . g$11327$xgWN3)
        (rational-valued? . g$11326$xgWN3)
        (procedure? . g$5364$xgWN3)
        (positive? . g$5398$xgWN3)
        (pair? . g$11325$xgWN3)
        (odd? . g$5402$xgWN3)
        (numerator . g$11324$xgWN3)
        (number? . g$11323$xgWN3)
        (number->string . g$11322$xgWN3)
        (null? . g$11321$xgWN3)
        (not . g$11320$xgWN3)
        (negative? . g$5399$xgWN3)
        (nan? . g$11319$xgWN3)
        (min . g$5404$xgWN3)
        (max . g$5403$xgWN3)
        (map . g$5057$xgWN3)
        (make-vector . g$11318$xgWN3)
        (make-string . g$11317$xgWN3)
        (make-rectangular . g$11316$xgWN3)
        (make-polar . g$11315$xgWN3)
        (magnitude . g$11314$xgWN3)
        (log . g$11313$xgWN3)
        (list? . g$11312$xgWN3)
        (list-tail . g$5037$xgWN3)
        (list-ref . g$5038$xgWN3)
        (list->vector . g$5357$xgWN3)
        (list->string . g$5358$xgWN3)
        (list . g$11311$xgWN3)
        (length . g$11310$xgWN3)
        (lcm . g$5406$xgWN3)
        (integer? . g$11309$xgWN3)
        (integer-valued? . g$11308$xgWN3)
        (integer->char . g$11307$xgWN3)
        (infinite? . g$11306$xgWN3)
        (inexact? . g$11305$xgWN3)
        (inexact . g$11304$xgWN3)
        (imag-part . g$11303$xgWN3)
        (gcd . g$5405$xgWN3)
        (for-each . g$5058$xgWN3)
        (floor . g$11302$xgWN3)
        (finite? . g$11301$xgWN3)
        (expt . g$11300$xgWN3)
        (exp . g$11299$xgWN3)
        (exact? . g$11298$xgWN3)
        (exact-integer-sqrt . g$11297$xgWN3)
        (exact . g$11296$xgWN3)
        (even? . g$5401$xgWN3)
        (error . g$11295$xgWN3)
        (eqv? . g$11294$xgWN3)
        (equal? . g$11293$xgWN3)
        (eq? . g$11292$xgWN3)
        (dynamic-wind . g$11291$xgWN3)
        (div0-and-mod0 . g$11290$xgWN3)
        (mod0 . g$5356$xgWN3)
        (div0 . g$5354$xgWN3)
        (div-and-mod . g$11289$xgWN3)
        (mod . g$5355$xgWN3)
        (div . g$5353$xgWN3)
        (denominator . g$11288$xgWN3)
        (cos . g$11287$xgWN3)
        (cons . g$11286$xgWN3)
        (complex? . g$11285$xgWN3)
        (char? . g$5359$xgWN3)
        (char>? . g$5426$xgWN3)
        (char>=? . g$5428$xgWN3)
        (char=? . g$5424$xgWN3)
        (char<? . g$5425$xgWN3)
        (char<=? . g$5427$xgWN3)
        (char->integer . g$11284$xgWN3)
        (ceiling . g$11283$xgWN3)
        (call-with-values . g$11282$xgWN3)
        (call/cc . g$11281$xgWN3)
        (call-with-current-continuation . g$11280$xgWN3)
        (cddddr . g$5397$xgWN3)
        (cdddar . g$5396$xgWN3)
        (cddadr . g$5395$xgWN3)
        (cddaar . g$5394$xgWN3)
        (cdaddr . g$5393$xgWN3)
        (cdadar . g$5392$xgWN3)
        (cdaadr . g$5391$xgWN3)
        (cdaaar . g$5390$xgWN3)
        (cadddr . g$5389$xgWN3)
        (caddar . g$5388$xgWN3)
        (cadadr . g$5387$xgWN3)
        (cadaar . g$5386$xgWN3)
        (caaddr . g$5385$xgWN3)
        (caadar . g$5384$xgWN3)
        (caaadr . g$5383$xgWN3)
        (caaaar . g$5382$xgWN3)
        (cdddr . g$5381$xgWN3)
        (cddar . g$5380$xgWN3)
        (cdadr . g$5379$xgWN3)
        (cdaar . g$5378$xgWN3)
        (caddr . g$5377$xgWN3)
        (cadar . g$5376$xgWN3)
        (caadr . g$5375$xgWN3)
        (caaar . g$5374$xgWN3)
        (cddr . g$5373$xgWN3)
        (cdar . g$5372$xgWN3)
        (cadr . g$5371$xgWN3)
        (caar . g$5370$xgWN3)
        (cdr . g$11279$xgWN3)
        (car . g$11278$xgWN3)
        (boolean? . g$5363$xgWN3)
        (boolean=? . g$5418$xgWN3)
        (atan . g$11277$xgWN3)
        (assertion-violation . g$11276$xgWN3)
        (asin . g$11275$xgWN3)
        (apply . g$11274$xgWN3)
        (append . g$11273$xgWN3)
        (angle . g$11272$xgWN3)
        (acos . g$11271$xgWN3)
        (abs . g$11270$xgWN3)
        (/ . g$11269$xgWN3)
        (* . g$11268$xgWN3)
        (- . g$11267$xgWN3)
        (+ . g$11266$xgWN3)
        (>= . g$11265$xgWN3)
        (> . g$11264$xgWN3)
        (= . g$11263$xgWN3)
        (<= . g$11262$xgWN3)
        (< . g$11261$xgWN3)
        (make-record-printer . g$11260$xgWN3)
        (eqv-hash . g$11259$xgWN3)
        (reverse! . g$11258$xgWN3)
        (deserialize-port . g$11257$xgWN3)
        (serialize-port . g$11256$xgWN3)
        (enum-set? . g$6638$xgWN3)
        (make-promise . g$6209$xgWN3)
        (load/unload . g$11074$xgWN3)
        (load/args . g$11073$xgWN3)
        (printf . g$6747$xgWN3)
        (fprintf . g$6748$xgWN3)
        (format . g$6749$xgWN3)
        (procedure-form . g$11255$xgWN3)
        (procedure-environment . g$11254$xgWN3)
        (procedure-name . g$11253$xgWN3)
        (procedure-arity . g$11252$xgWN3)
        (gc-collect . g$11251$xgWN3)
        (typeof . g$11250$xgWN3)
        (clr-type? . g$11249$xgWN3)
        (get-clr-type . g$11248$xgWN3)
        (get-command-line . g$11247$xgWN3)
        (vector-append . g$11246$xgWN3)
        (vector-filter . g$11245$xgWN3)
        (vector-reverse! . g$11244$xgWN3)
        (vector-contains? . g$11243$xgWN3)
        (vector-index-of . g$11242$xgWN3)
        (vector-copy . g$11241$xgWN3)
        (vector-binary-search . g$11240$xgWN3)
        (string-ci-compare . g$11239$xgWN3)
        (string-compare . g$11238$xgWN3)
        (string-format . g$11237$xgWN3)
        (trace-printer . g$11070$xgWN3)
        (make-traced-procedure . g$11236$xgWN3)
        (make-traced-macro . g$6769$xgWN3)
        (assertion-error . g$8086$xgWN3)
        (time-it . g$11235$xgWN3)
        (make-parameter . g$7042$xgWN3)
        (library-locator . g$11234$xgWN3)
        (get-library-paths . g$11233$xgWN3)
        (open-tcp-input/output-port . g$11232$xgWN3)
        (hashtable-for-each . g$11231$xgWN3)
        (hashtable-map . g$11230$xgWN3)
        (environment-bindings . g$8064$xgWN3)
        (environment-symbols . g$8067$xgWN3)
        (interaction-environment-symbols . g$8063$xgWN3)
        (optimization-level . g$11229$xgWN3)
        (library-path . g$7395$xgWN3)
        (make-compile-time-value . g$7773$xgWN3)
        (expand->core . g$8073$xgWN3)
        (expand . g$8071$xgWN3)
        (convert->cps . g$6825$xgWN3)
        (installed-libraries . g$7416$xgWN3)
        (uninstall-library . g$7407$xgWN3)
        (&no-nans . g$11228$xgWN3)
        (&no-infinities . g$11227$xgWN3)
        (&i/o-encoding . g$11226$xgWN3)
        (&i/o-decoding . g$11225$xgWN3)
        (&i/o-port . g$11224$xgWN3)
        (&i/o-file-does-not-exist . g$11223$xgWN3)
        (&i/o-file-already-exists . g$11222$xgWN3)
        (&i/o-file-is-read-only . g$11221$xgWN3)
        (&i/o-file-protection . g$11220$xgWN3)
        (&i/o-filename . g$11219$xgWN3)
        (&i/o-invalid-position . g$11218$xgWN3)
        (&i/o-write . g$11217$xgWN3)
        (&i/o-read . g$11216$xgWN3)
        (&i/o . g$11215$xgWN3)
        (&non-continuable . g$11214$xgWN3)
        (&undefined . g$11213$xgWN3)
        (&syntax . g$11212$xgWN3)
        (&lexical . g$11211$xgWN3)
        (&implementation-restriction . g$11210$xgWN3)
        (&who . g$11209$xgWN3)
        (&irritants . g$11208$xgWN3)
        (&assertion . g$11207$xgWN3)
        (&violation . g$11206$xgWN3)
        (&error . g$11205$xgWN3)
        (&serious . g$11204$xgWN3)
        (&warning . g$11203$xgWN3)
        (&message . g$11202$xgWN3)
        (&condition . g$11201$xgWN3)
        (define-condition-type . g$11200$xgWN3)
        (define-enumeration . g$11199$xgWN3)
        (define-record-type . g$11198$xgWN3)
        (parent-rtd . g$11197$xgWN3)
        (nongenerative . g$11196$xgWN3)
        (opaque . g$11195$xgWN3)
        (sealed . g$11194$xgWN3)
        (protocol . g$11193$xgWN3)
        (parent . g$11192$xgWN3)
        (immutable . g$11191$xgWN3)
        (mutable . g$11190$xgWN3)
        (fields . g$11189$xgWN3)
        (error-handling-mode . g$11188$xgWN3)
        (file-options . g$11187$xgWN3)
        (buffer-mode . g$11186$xgWN3)
        (eol-style . g$11185$xgWN3)
        (guard . g$11184$xgWN3)
        (trace-letrec-syntax . g$11183$xgWN3)
        (trace-let-syntax . g$11182$xgWN3)
        (trace-define-syntax . g$11181$xgWN3)
        (trace-define . g$11180$xgWN3)
        (trace-lambda . g$11179$xgWN3)
        (unsyntax-splicing . g$11178$xgWN3)
        (unsyntax . g$11177$xgWN3)
        (unquote-splicing . g$11176$xgWN3)
        (unquote . g$11175$xgWN3)
        (_ . g$11174$xgWN3)
        (else . g$11173$xgWN3)
        (=> . g$11172$xgWN3)
        (... . g$11171$xgWN3)
        (assert . g$11170$xgWN3)
        (endianness . g$11169$xgWN3)
        (delay . g$11168$xgWN3)
        (time . g$11167$xgWN3)
        (or . g$11166$xgWN3)
        (and . g$11165$xgWN3)
        (do . g$11164$xgWN3)
        (cond . g$11163$xgWN3)
        (let* . g$11162$xgWN3)
        (let . g$11161$xgWN3)
        (identifier-syntax . g$11160$xgWN3)
        (with-syntax . g$11159$xgWN3)
        (quasisyntax . g$11158$xgWN3)
        (quasiquote . g$11157$xgWN3)
        (syntax-rules . g$11156$xgWN3)
        (include-into . g$11155$xgWN3)
        (include . g$11154$xgWN3)
        (define-struct . g$11153$xgWN3)
        (let-values . g$11152$xgWN3)
        (let*-values . g$11151$xgWN3)
        (record-constructor-descriptor . g$11150$xgWN3)
        (record-type-descriptor . g$11149$xgWN3)
        (fluid-let-syntax . g$11148$xgWN3)
        (case . g$11147$xgWN3)
        (parameterize . g$11146$xgWN3)
        (unless . g$11145$xgWN3)
        (when . g$11144$xgWN3)
        (if . g$11143$xgWN3)
        (letrec* . g$11142$xgWN3)
        (letrec . g$11141$xgWN3)
        (type-descriptor . g$11140$xgWN3)
        (case-lambda . g$11139$xgWN3)
        (lambda . g$11138$xgWN3)
        (syntax . g$11137$xgWN3)
        (syntax-case . g$11136$xgWN3)
        (quote . g$11135$xgWN3)
        (foreign-call . g$11134$xgWN3)
        (letrec-syntax . g$11133$xgWN3)
        (let-syntax . g$11132$xgWN3)
        (set! . g$11131$xgWN3)
        (export . g$11130$xgWN3)
        (import . g$11129$xgWN3)
        (library . g$11128$xgWN3)
        (begin . g$11127$xgWN3)
        (module . g$11126$xgWN3)
        (define-syntax . g$11125$xgWN3)
        (define . g$11124$xgWN3))
      '((g$7968$xgWN3 core-prim . ellipsis-map)
        (g$6191$xgWN3 core-prim . &no-nans-rcd)
        (g$6190$xgWN3 core-prim . &no-nans-rtd)
        (g$6178$xgWN3 core-prim . &no-infinities-rcd)
        (g$6177$xgWN3 core-prim . &no-infinities-rtd)
        (g$6165$xgWN3 core-prim . &i/o-encoding-rcd)
        (g$6164$xgWN3 core-prim . &i/o-encoding-rtd)
        (g$6150$xgWN3 core-prim . &i/o-decoding-rcd)
        (g$6149$xgWN3 core-prim . &i/o-decoding-rtd)
        (g$6137$xgWN3 core-prim . &i/o-port-rcd)
        (g$6136$xgWN3 core-prim . &i/o-port-rtd)
        (g$6122$xgWN3 core-prim . &i/o-file-does-not-exist-rcd)
        (g$6121$xgWN3 core-prim . &i/o-file-does-not-exist-rtd)
        (g$6109$xgWN3 core-prim . &i/o-file-already-exists-rcd)
        (g$6108$xgWN3 core-prim . &i/o-file-already-exists-rtd)
        (g$6096$xgWN3 core-prim . &i/o-file-is-read-only-rcd)
        (g$6095$xgWN3 core-prim . &i/o-file-is-read-only-rtd)
        (g$6083$xgWN3 core-prim . &i/o-file-protection-rcd)
        (g$6082$xgWN3 core-prim . &i/o-file-protection-rtd)
        (g$6070$xgWN3 core-prim . &i/o-filename-rcd)
        (g$6069$xgWN3 core-prim . &i/o-filename-rtd)
        (g$6055$xgWN3 core-prim . &i/o-invalid-position-rcd)
        (g$6054$xgWN3 core-prim . &i/o-invalid-position-rtd)
        (g$6040$xgWN3 core-prim . &i/o-write-rcd)
        (g$6039$xgWN3 core-prim . &i/o-write-rtd)
        (g$6027$xgWN3 core-prim . &i/o-read-rcd)
        (g$6026$xgWN3 core-prim . &i/o-read-rtd)
        (g$6014$xgWN3 core-prim . &i/o-rcd)
        (g$6013$xgWN3 core-prim . &i/o-rtd)
        (g$6001$xgWN3 core-prim . &undefined-rcd)
        (g$6000$xgWN3 core-prim . &undefined-rtd)
        (g$5988$xgWN3 core-prim . &syntax-rcd)
        (g$5987$xgWN3 core-prim . &syntax-rtd)
        (g$5971$xgWN3 core-prim . &lexical-rcd)
        (g$5970$xgWN3 core-prim . &lexical-rtd)
        (g$5958$xgWN3 core-prim . &implementation-restriction-rcd)
        (g$5957$xgWN3 core-prim . &implementation-restriction-rtd)
        (g$5945$xgWN3 core-prim . &non-continuable-rcd)
        (g$5944$xgWN3 core-prim . &non-continuable-rtd)
        (g$5932$xgWN3 core-prim . &who-rcd)
        (g$5931$xgWN3 core-prim . &who-rtd)
        (g$5917$xgWN3 core-prim . &irritants-rcd)
        (g$5916$xgWN3 core-prim . &irritants-rtd)
        (g$5902$xgWN3 core-prim . &assertion-rcd)
        (g$5901$xgWN3 core-prim . &assertion-rtd)
        (g$5889$xgWN3 core-prim . &violation-rcd)
        (g$5888$xgWN3 core-prim . &violation-rtd)
        (g$5876$xgWN3 core-prim . &error-rcd)
        (g$5875$xgWN3 core-prim . &error-rtd)
        (g$5863$xgWN3 core-prim . &serious-rcd)
        (g$5862$xgWN3 core-prim . &serious-rtd)
        (g$5850$xgWN3 core-prim . &warning-rcd)
        (g$5849$xgWN3 core-prim . &warning-rtd)
        (g$5837$xgWN3 core-prim . &message-rcd)
        (g$5836$xgWN3 core-prim . &message-rtd)
        (g$5797$xgWN3 core-prim . &condition-rcd)
        (g$5796$xgWN3 core-prim . &condition-rtd)
        (g$11593$xgWN3 core-prim . library-letrec*)
        (g$11592$xgWN3 core-prim . annotation-stripped)
        (g$11591$xgWN3 core-prim . annotation-source)
        (g$11590$xgWN3 core-prim . annotation-expression)
        (g$11589$xgWN3 core-prim . annotation?)
        (g$11588$xgWN3 core-prim . read-annotated)
        (g$11587$xgWN3 core-prim . tanh)
        (g$11586$xgWN3 core-prim . cosh)
        (g$11585$xgWN3 core-prim . sinh)
        (g$11584$xgWN3 core-prim . make-guid)
        (g$11583$xgWN3 core-prim . unspecified?)
        (g$5040$xgWN3 core-prim . make-list)
        (g$5039$xgWN3 core-prim . last-pair)
        (g$11582$xgWN3 core-prim . load-r5rs)
        (g$11581$xgWN3 core-prim . license)
        (g$11580$xgWN3 core-prim . stacktrace)
        (g$11076$xgWN3 core-prim . ironscheme-build)
        (g$11579$xgWN3 core-prim . define-clr-class-internal)
        (g$11578$xgWN3 core-prim . clr-field-set!-internal)
        (g$11577$xgWN3 core-prim . clr-field-get-internal)
        (g$11576$xgWN3 core-prim . clr-cast-internal)
        (g$11575$xgWN3 core-prim . clr-call-internal)
        (g$11574$xgWN3 core-prim . clr-new-internal)
        (g$11573$xgWN3 core-prim . clr-new-array-internal)
        (g$11572$xgWN3 core-prim . clr-is-internal)
        (g$11571$xgWN3 core-prim . clr-reference-internal)
        (g$11570$xgWN3 core-prim . clr-using-internal)
        (g$8087$xgWN3 core-prim . syntax-error)
        (g$7963$xgWN3 core-prim . syntax-dispatch)
        (g$11569$xgWN3 core-prim . compile-core)
        (g$11568$xgWN3 core-prim . eval-core)
        (g$11567$xgWN3 core-prim . remove-location)
        (g$11566$xgWN3 core-prim . set-symbol-value!)
        (g$11565$xgWN3 core-prim . symbol-value)
        (g$11564$xgWN3 core-prim . symbol-bound?)
        (g$11563$xgWN3 core-prim . ungensym)
        (g$11562$xgWN3 core-prim . gensym)
        (g$11561$xgWN3 core-prim . void)
        (g$11560$xgWN3 core-prim . load-serialized-library)
        (g$11559$xgWN3 core-prim . serialize-library)
        (g$11079$xgWN3 core-prim . compile-system-libraries)
        (g$11081$xgWN3 core-prim . compile->closure)
        (g$11080$xgWN3 core-prim . compile)
        (g$11075$xgWN3 core-prim . load)
        (g$11558$xgWN3 core-prim . string-normalize)
        (g$8097$xgWN3 core-prim . interaction-environment)
        (g$11557$xgWN3 core-prim . char-ready?)
        (g$11556$xgWN3 core-prim . string-upcase)
        (g$11555$xgWN3 core-prim . string-titlecase)
        (g$6274$xgWN3 core-prim . string-normalize-nfkd)
        (g$6273$xgWN3 core-prim . string-normalize-nfkc)
        (g$6272$xgWN3 core-prim . string-normalize-nfd)
        (g$6271$xgWN3 core-prim . string-normalize-nfc)
        (g$11554$xgWN3 core-prim . string-foldcase)
        (g$11553$xgWN3 core-prim . string-downcase)
        (g$6258$xgWN3 core-prim . string-ci>?)
        (g$6260$xgWN3 core-prim . string-ci>=?)
        (g$6256$xgWN3 core-prim . string-ci=?)
        (g$6257$xgWN3 core-prim . string-ci<?)
        (g$6259$xgWN3 core-prim . string-ci<=?)
        (g$11552$xgWN3 core-prim . char-whitespace?)
        (g$11551$xgWN3 core-prim . char-upper-case?)
        (g$11550$xgWN3 core-prim . char-title-case?)
        (g$11549$xgWN3 core-prim . char-numeric?)
        (g$11548$xgWN3 core-prim . char-lower-case?)
        (g$11547$xgWN3 core-prim . char-general-category)
        (g$11546$xgWN3 core-prim . char-upcase)
        (g$11545$xgWN3 core-prim . char-titlecase)
        (g$11544$xgWN3 core-prim . char-foldcase)
        (g$11543$xgWN3 core-prim . char-downcase)
        (g$6268$xgWN3 core-prim . char-ci>?)
        (g$6270$xgWN3 core-prim . char-ci>=?)
        (g$6266$xgWN3 core-prim . char-ci=?)
        (g$6267$xgWN3 core-prim . char-ci<?)
        (g$6269$xgWN3 core-prim . char-ci<=?)
        (g$11542$xgWN3 core-prim . char-alphabetic?)
        (g$7775$xgWN3 core-prim . variable-transformer-procedure)
        (g$7774$xgWN3 core-prim . variable-transformer?)
        (g$7772$xgWN3 core-prim . make-variable-transformer)
        (g$8091$xgWN3 core-prim . identifier?)
        (g$8080$xgWN3 core-prim . generate-temporaries)
        (g$8081$xgWN3 core-prim . free-identifier=?)
        (g$8093$xgWN3 core-prim . syntax->datum)
        (g$8092$xgWN3 core-prim . datum->syntax)
        (g$8082$xgWN3 core-prim . bound-identifier=?)
        (g$11541$xgWN3 core-prim . record-type-descriptor?)
        (g$11540$xgWN3 core-prim . record-predicate)
        (g$11539$xgWN3 core-prim . record-mutator)
        (g$11538$xgWN3 core-prim . record-constructor)
        (g$11537$xgWN3 core-prim . record-accessor)
        (g$11536$xgWN3 core-prim . make-record-type-descriptor)
        (g$11535$xgWN3 core-prim . make-record-constructor-descriptor)
        (g$11534$xgWN3 core-prim . record?)
        (g$11533$xgWN3 core-prim . record-type-uid)
        (g$11532$xgWN3 core-prim . record-type-sealed?)
        (g$11531$xgWN3 core-prim . record-type-parent)
        (g$11530$xgWN3 core-prim . record-type-opaque?)
        (g$11529$xgWN3 core-prim . record-type-name)
        (g$11528$xgWN3 core-prim . record-type-generative?)
        (g$11527$xgWN3 core-prim . record-type-field-names)
        (g$11526$xgWN3 core-prim . record-rtd)
        (g$11525$xgWN3 core-prim . record-field-mutable?)
        (g$5665$xgWN3 core-prim . delete-file)
        (g$5664$xgWN3 core-prim . file-exists?)
        (g$11524$xgWN3 core-prim . vector-sort!)
        (g$11523$xgWN3 core-prim . vector-sort)
        (g$6227$xgWN3 core-prim . list-sort)
        (g$11522$xgWN3 core-prim . symbol-hash)
        (g$11521$xgWN3 core-prim . string-ci-hash)
        (g$11520$xgWN3 core-prim . string-hash)
        (g$11519$xgWN3 core-prim . equal-hash)
        (g$11518$xgWN3 core-prim . hashtable-equivalence-function)
        (g$11517$xgWN3 core-prim . make-hashtable)
        (g$11516$xgWN3 core-prim . hashtable-hash-function)
        (g$5633$xgWN3 core-prim . make-eqv-hashtable)
        (g$5632$xgWN3 core-prim . make-eq-hashtable)
        (g$11515$xgWN3 core-prim . hashtable?)
        (g$5639$xgWN3 core-prim . hashtable-update!)
        (g$5634$xgWN3 core-prim . hashtable-size)
        (g$5636$xgWN3 core-prim . hashtable-set!)
        (g$5635$xgWN3 core-prim . hashtable-ref)
        (g$11514$xgWN3 core-prim . hashtable-mutable?)
        (g$11513$xgWN3 core-prim . hashtable-keys)
        (g$11512$xgWN3 core-prim . hashtable-entries)
        (g$5637$xgWN3 core-prim . hashtable-delete!)
        (g$11511$xgWN3 core-prim . hashtable-copy)
        (g$5638$xgWN3 core-prim . hashtable-contains?)
        (g$5640$xgWN3 core-prim . hashtable-clear!)
        (g$6600$xgWN3 core-prim . call-with-output-file)
        (g$6599$xgWN3 core-prim . call-with-input-file)
        (g$6591$xgWN3 core-prim . write-char)
        (g$11510$xgWN3 core-prim . write)
        (g$6598$xgWN3 core-prim . with-output-to-file)
        (g$6597$xgWN3 core-prim . with-input-from-file)
        (g$6590$xgWN3 core-prim . read-char)
        (g$11509$xgWN3 core-prim . read)
        (g$6589$xgWN3 core-prim . peek-char)
        (g$11508$xgWN3 core-prim . open-output-file)
        (g$11507$xgWN3 core-prim . open-input-file)
        (g$6601$xgWN3 core-prim . newline)
        (g$11506$xgWN3 core-prim . display)
        (g$11505$xgWN3 core-prim . close-output-port)
        (g$11504$xgWN3 core-prim . close-input-port)
        (g$11503$xgWN3 core-prim . eof-object?)
        (g$11502$xgWN3 core-prim . eof-object)
        (g$11501$xgWN3 core-prim . current-error-port)
        (g$11500$xgWN3 core-prim . current-output-port)
        (g$11499$xgWN3 core-prim . current-input-port)
        (g$11498$xgWN3 core-prim . output-port?)
        (g$11497$xgWN3 core-prim . input-port?)
        (g$11496$xgWN3 core-prim . utf-8-codec)
        (g$11495$xgWN3 core-prim . utf-16-codec)
        (g$11494$xgWN3 core-prim . transcoder-error-handling-mode)
        (g$11493$xgWN3 core-prim . transcoder-eol-style)
        (g$11492$xgWN3 core-prim . transcoder-codec)
        (g$11491$xgWN3 core-prim . transcoded-port)
        (g$11490$xgWN3 core-prim . textual-port?)
        (g$11489$xgWN3 core-prim . string->bytevector)
        (g$11488$xgWN3 core-prim . standard-output-port)
        (g$11487$xgWN3 core-prim . standard-input-port)
        (g$11486$xgWN3 core-prim . standard-error-port)
        (g$11485$xgWN3 core-prim . set-port-position!)
        (g$11484$xgWN3 core-prim . put-u8)
        (g$11483$xgWN3 core-prim . put-string)
        (g$6569$xgWN3 core-prim . put-datum)
        (g$11482$xgWN3 core-prim . put-char)
        (g$11481$xgWN3 core-prim . put-bytevector)
        (g$6574$xgWN3 core-prim . port?)
        (g$11480$xgWN3 core-prim . port-transcoder)
        (g$11479$xgWN3 core-prim . port-position)
        (g$11478$xgWN3 core-prim . port-has-set-port-position!?)
        (g$11477$xgWN3 core-prim . port-has-port-position?)
        (g$11476$xgWN3 core-prim . port-eof?)
        (g$11475$xgWN3 core-prim . output-port-buffer-mode)
        (g$6573$xgWN3 core-prim . open-string-output-port)
        (g$11474$xgWN3 core-prim . open-string-input-port)
        (g$11473$xgWN3 core-prim . open-file-output-port)
        (g$11472$xgWN3 core-prim . open-file-input/output-port)
        (g$11471$xgWN3 core-prim . open-file-input-port)
        (g$11470$xgWN3 core-prim . open-bytevector-output-port)
        (g$11469$xgWN3 core-prim . open-bytevector-input-port)
        (g$11468$xgWN3 core-prim . native-transcoder)
        (g$11467$xgWN3 core-prim . native-eol-style)
        (g$11466$xgWN3 core-prim . make-transcoder)
        (g$11465$xgWN3 core-prim . latin-1-codec)
        (g$6037$xgWN3 core-prim . make-i/o-write-error)
        (g$6024$xgWN3 core-prim . make-i/o-read-error)
        (g$6132$xgWN3 core-prim . make-i/o-port-error)
        (g$6050$xgWN3 core-prim . make-i/o-invalid-position-error)
        (g$6065$xgWN3 core-prim . make-i/o-filename-error)
        (g$6080$xgWN3 core-prim . make-i/o-file-protection-error)
        (g$6093$xgWN3 core-prim . make-i/o-file-is-read-only-error)
        (g$6119$xgWN3 core-prim . make-i/o-file-does-not-exist-error)
        (g$6106$xgWN3 core-prim . make-i/o-file-already-exists-error)
        (g$6011$xgWN3 core-prim . make-i/o-error)
        (g$6160$xgWN3 core-prim . make-i/o-encoding-error)
        (g$6147$xgWN3 core-prim . make-i/o-decoding-error)
        (g$11464$xgWN3 core-prim . make-custom-textual-output-port)
        (g$11463$xgWN3 core-prim . make-custom-textual-input/output-port)
        (g$11462$xgWN3 core-prim . make-custom-textual-input-port)
        (g$11461$xgWN3 core-prim . make-custom-binary-output-port)
        (g$11460$xgWN3 core-prim . make-custom-binary-input/output-port)
        (g$11459$xgWN3 core-prim . make-custom-binary-input-port)
        (g$11458$xgWN3 core-prim . make-bytevector)
        (g$11457$xgWN3 core-prim . lookahead-u8)
        (g$11456$xgWN3 core-prim . lookahead-char)
        (g$6038$xgWN3 core-prim . i/o-write-error?)
        (g$6025$xgWN3 core-prim . i/o-read-error?)
        (g$6134$xgWN3 core-prim . i/o-port-error?)
        (g$6052$xgWN3 core-prim . i/o-invalid-position-error?)
        (g$6053$xgWN3 core-prim . i/o-error-position)
        (g$6067$xgWN3 core-prim . i/o-filename-error?)
        (g$6081$xgWN3 core-prim . i/o-file-protection-error?)
        (g$6094$xgWN3 core-prim . i/o-file-is-read-only-error?)
        (g$6120$xgWN3 core-prim . i/o-file-does-not-exist-error?)
        (g$6107$xgWN3 core-prim . i/o-file-already-exists-error?)
        (g$6012$xgWN3 core-prim . i/o-error?)
        (g$6135$xgWN3 core-prim . i/o-error-port)
        (g$6068$xgWN3 core-prim . i/o-error-filename)
        (g$6162$xgWN3 core-prim . i/o-encoding-error?)
        (g$6163$xgWN3 core-prim . i/o-encoding-error-char)
        (g$6148$xgWN3 core-prim . i/o-decoding-error?)
        (g$11455$xgWN3 core-prim . get-u8)
        (g$11454$xgWN3 core-prim . get-string-n!)
        (g$11453$xgWN3 core-prim . get-string-n)
        (g$11452$xgWN3 core-prim . get-string-all)
        (g$11451$xgWN3 core-prim . get-line)
        (g$6570$xgWN3 core-prim . get-datum)
        (g$11450$xgWN3 core-prim . get-char)
        (g$11449$xgWN3 core-prim . get-bytevector-some)
        (g$11448$xgWN3 core-prim . get-bytevector-n!)
        (g$11447$xgWN3 core-prim . get-bytevector-n)
        (g$11446$xgWN3 core-prim . get-bytevector-all)
        (g$11445$xgWN3 core-prim . flush-output-port)
        (g$11444$xgWN3 core-prim . close-port)
        (g$6575$xgWN3 core-prim . call-with-string-output-port)
        (g$6576$xgWN3 core-prim . call-with-port)
        (g$11443$xgWN3 core-prim . call-with-bytevector-output-port)
        (g$11442$xgWN3 core-prim . bytevector->string)
        (g$11441$xgWN3 core-prim . buffer-mode?)
        (g$11440$xgWN3 core-prim . binary-port?)
        (g$8070$xgWN3 core-prim . scheme-report-environment)
        (g$6206$xgWN3 core-prim . quotient)
        (g$8069$xgWN3 core-prim . null-environment)
        (g$6207$xgWN3 core-prim . remainder)
        (g$6208$xgWN3 core-prim . modulo)
        (g$6203$xgWN3 core-prim . inexact->exact)
        (g$6210$xgWN3 core-prim . force)
        (g$6204$xgWN3 core-prim . exact->inexact)
        (g$11439$xgWN3 core-prim . exit)
        (g$11071$xgWN3 core-prim . command-line)
        (g$11438$xgWN3 core-prim . string-fill!)
        (g$11437$xgWN3 core-prim . string-set!)
        (g$11436$xgWN3 core-prim . set-cdr!)
        (g$11435$xgWN3 core-prim . set-car!)
        (g$5062$xgWN3 core-prim . remove)
        (g$5063$xgWN3 core-prim . remv)
        (g$5043$xgWN3 core-prim . remp)
        (g$5064$xgWN3 core-prim . remq)
        (g$5042$xgWN3 core-prim . partition)
        (g$5050$xgWN3 core-prim . memv)
        (g$5049$xgWN3 core-prim . memq)
        (g$5052$xgWN3 core-prim . memp)
        (g$5051$xgWN3 core-prim . member)
        (g$5056$xgWN3 core-prim . exists)
        (g$5055$xgWN3 core-prim . for-all)
        (g$5061$xgWN3 core-prim . fold-right)
        (g$5060$xgWN3 core-prim . fold-left)
        (g$5041$xgWN3 core-prim . find)
        (g$5044$xgWN3 core-prim . filter)
        (g$5059$xgWN3 core-prim . cons*)
        (g$5046$xgWN3 core-prim . assv)
        (g$5045$xgWN3 core-prim . assq)
        (g$5048$xgWN3 core-prim . assp)
        (g$5047$xgWN3 core-prim . assoc)
        (g$11434$xgWN3 core-prim . with-exception-handler)
        (g$11433$xgWN3 core-prim . raise-continuable)
        (g$11432$xgWN3 core-prim . raise)
        (g$8072$xgWN3 core-prim . eval)
        (g$8068$xgWN3 core-prim . environment)
        (g$6661$xgWN3 core-prim . make-enumeration)
        (g$6668$xgWN3 core-prim . enum-set=?)
        (g$6662$xgWN3 core-prim . enum-set-universe)
        (g$6669$xgWN3 core-prim . enum-set-union)
        (g$6667$xgWN3 core-prim . enum-set-subset?)
        (g$6673$xgWN3 core-prim . enum-set-projection)
        (g$6666$xgWN3 core-prim . enum-set-member?)
        (g$6670$xgWN3 core-prim . enum-set-intersection)
        (g$6663$xgWN3 core-prim . enum-set-indexer)
        (g$6671$xgWN3 core-prim . enum-set-difference)
        (g$6664$xgWN3 core-prim . enum-set-constructor)
        (g$6672$xgWN3 core-prim . enum-set-complement)
        (g$6665$xgWN3 core-prim . enum-set->list)
        (g$5929$xgWN3 core-prim . who-condition?)
        (g$5848$xgWN3 core-prim . warning?)
        (g$5887$xgWN3 core-prim . violation?)
        (g$5999$xgWN3 core-prim . undefined-violation?)
        (g$5984$xgWN3 core-prim . syntax-violation?)
        (g$5986$xgWN3 core-prim . syntax-violation-subform)
        (g$5985$xgWN3 core-prim . syntax-violation-form)
        (g$8090$xgWN3 core-prim . syntax-violation)
        (g$11431$xgWN3 core-prim . simple-conditions)
        (g$5861$xgWN3 core-prim . serious-condition?)
        (g$5943$xgWN3 core-prim . non-continuable-violation?)
        (g$5834$xgWN3 core-prim . message-condition?)
        (g$5927$xgWN3 core-prim . make-who-condition)
        (g$5847$xgWN3 core-prim . make-warning)
        (g$5886$xgWN3 core-prim . make-violation)
        (g$5998$xgWN3 core-prim . make-undefined-violation)
        (g$5981$xgWN3 core-prim . make-syntax-violation)
        (g$5860$xgWN3 core-prim . make-serious-condition)
        (g$5942$xgWN3 core-prim . make-non-continuable-violation)
        (g$5832$xgWN3 core-prim . make-message-condition)
        (g$5968$xgWN3 core-prim . make-lexical-violation)
        (g$5912$xgWN3 core-prim . make-irritants-condition)
        (g$5955$xgWN3 core-prim . make-implementation-restriction-violation)
        (g$5873$xgWN3 core-prim . make-error)
        (g$5899$xgWN3 core-prim . make-assertion-violation)
        (g$5969$xgWN3 core-prim . lexical-violation?)
        (g$5914$xgWN3 core-prim . irritants-condition?)
        (g$5956$xgWN3 core-prim . implementation-restriction-violation?)
        (g$5874$xgWN3 core-prim . error?)
        (g$5930$xgWN3 core-prim . condition-who)
        (g$11430$xgWN3 core-prim . condition-predicate)
        (g$5835$xgWN3 core-prim . condition-message)
        (g$5915$xgWN3 core-prim . condition-irritants)
        (g$11429$xgWN3 core-prim . condition-accessor)
        (g$11428$xgWN3 core-prim . condition)
        (g$5900$xgWN3 core-prim . assertion-violation?)
        (g$11427$xgWN3 core-prim . condition?)
        (g$11426$xgWN3 core-prim . utf32->string)
        (g$11425$xgWN3 core-prim . utf16->string)
        (g$11424$xgWN3 core-prim . utf8->string)
        (g$11423$xgWN3 core-prim . uint-list->bytevector)
        (g$11422$xgWN3 core-prim . u8-list->bytevector)
        (g$11421$xgWN3 core-prim . string->utf8)
        (g$11420$xgWN3 core-prim . string->utf32)
        (g$11419$xgWN3 core-prim . string->utf16)
        (g$11418$xgWN3 core-prim . sint-list->bytevector)
        (g$5671$xgWN3 core-prim . native-endianness)
        (g$5361$xgWN3 core-prim . bytevector?)
        (g$11417$xgWN3 core-prim . bytevector=?)
        (g$11416$xgWN3 core-prim . bytevector-uint-set!)
        (g$11415$xgWN3 core-prim . bytevector-uint-ref)
        (g$11414$xgWN3 core-prim . bytevector-u8-set!)
        (g$11413$xgWN3 core-prim . bytevector-u8-ref)
        (g$5692$xgWN3 core-prim . bytevector-u64-set!)
        (g$5688$xgWN3 core-prim . bytevector-u64-ref)
        (g$5694$xgWN3 core-prim . bytevector-u64-native-set!)
        (g$5690$xgWN3 core-prim . bytevector-u64-native-ref)
        (g$5684$xgWN3 core-prim . bytevector-u32-set!)
        (g$5680$xgWN3 core-prim . bytevector-u32-ref)
        (g$5686$xgWN3 core-prim . bytevector-u32-native-set!)
        (g$5682$xgWN3 core-prim . bytevector-u32-native-ref)
        (g$5676$xgWN3 core-prim . bytevector-u16-set!)
        (g$5672$xgWN3 core-prim . bytevector-u16-ref)
        (g$5678$xgWN3 core-prim . bytevector-u16-native-set!)
        (g$5674$xgWN3 core-prim . bytevector-u16-native-ref)
        (g$11412$xgWN3 core-prim . bytevector-sint-set!)
        (g$11411$xgWN3 core-prim . bytevector-sint-ref)
        (g$11410$xgWN3 core-prim . bytevector-s8-set!)
        (g$11409$xgWN3 core-prim . bytevector-s8-ref)
        (g$5693$xgWN3 core-prim . bytevector-s64-set!)
        (g$5689$xgWN3 core-prim . bytevector-s64-ref)
        (g$5695$xgWN3 core-prim . bytevector-s64-native-set!)
        (g$5691$xgWN3 core-prim . bytevector-s64-native-ref)
        (g$5685$xgWN3 core-prim . bytevector-s32-set!)
        (g$5681$xgWN3 core-prim . bytevector-s32-ref)
        (g$5687$xgWN3 core-prim . bytevector-s32-native-set!)
        (g$5683$xgWN3 core-prim . bytevector-s32-native-ref)
        (g$5677$xgWN3 core-prim . bytevector-s16-set!)
        (g$5673$xgWN3 core-prim . bytevector-s16-ref)
        (g$5679$xgWN3 core-prim . bytevector-s16-native-set!)
        (g$5675$xgWN3 core-prim . bytevector-s16-native-ref)
        (g$11408$xgWN3 core-prim . bytevector-length)
        (g$11407$xgWN3 core-prim . bytevector-ieee-single-set!)
        (g$11406$xgWN3 core-prim . bytevector-ieee-single-ref)
        (g$5698$xgWN3 core-prim . bytevector-ieee-single-native-set!)
        (g$5696$xgWN3 core-prim . bytevector-ieee-single-native-ref)
        (g$11405$xgWN3 core-prim . bytevector-ieee-double-set!)
        (g$11404$xgWN3 core-prim . bytevector-ieee-double-ref)
        (g$5699$xgWN3 core-prim . bytevector-ieee-double-native-set!)
        (g$5697$xgWN3 core-prim . bytevector-ieee-double-native-ref)
        (g$11403$xgWN3 core-prim . bytevector-fill!)
        (g$11402$xgWN3 core-prim . bytevector-copy!)
        (g$11401$xgWN3 core-prim . bytevector-copy)
        (g$11400$xgWN3 core-prim . bytevector->uint-list)
        (g$11399$xgWN3 core-prim . bytevector->u8-list)
        (g$11398$xgWN3 core-prim . bytevector->sint-list)
        (g$6189$xgWN3 core-prim . no-nans-violation?)
        (g$6176$xgWN3 core-prim . no-infinities-violation?)
        (g$6188$xgWN3 core-prim . make-no-nans-violation)
        (g$6175$xgWN3 core-prim . make-no-infinities-violation)
        (g$11397$xgWN3 core-prim . real->flonum)
        (g$6489$xgWN3 core-prim . flzero?)
        (g$6484$xgWN3 core-prim . fltruncate)
        (g$6474$xgWN3 core-prim . fltan)
        (g$6479$xgWN3 core-prim . flsqrt)
        (g$6472$xgWN3 core-prim . flsin)
        (g$6485$xgWN3 core-prim . flround)
        (g$6487$xgWN3 core-prim . flpositive?)
        (g$5366$xgWN3 core-prim . flonum?)
        (g$6491$xgWN3 core-prim . flodd?)
        (g$11396$xgWN3 core-prim . flnumerator)
        (g$6488$xgWN3 core-prim . flnegative?)
        (g$6471$xgWN3 core-prim . flnan?)
        (g$6467$xgWN3 core-prim . flmod0)
        (g$6466$xgWN3 core-prim . flmod)
        (g$6493$xgWN3 core-prim . flmin)
        (g$6492$xgWN3 core-prim . flmax)
        (g$6478$xgWN3 core-prim . fllog)
        (g$6468$xgWN3 core-prim . flinteger?)
        (g$6470$xgWN3 core-prim . flinfinite?)
        (g$6483$xgWN3 core-prim . flfloor)
        (g$6469$xgWN3 core-prim . flfinite?)
        (g$6481$xgWN3 core-prim . flexpt)
        (g$6480$xgWN3 core-prim . flexp)
        (g$6490$xgWN3 core-prim . fleven?)
        (g$6463$xgWN3 core-prim . fldiv0-and-mod0)
        (g$6465$xgWN3 core-prim . fldiv0)
        (g$6462$xgWN3 core-prim . fldiv-and-mod)
        (g$6464$xgWN3 core-prim . fldiv)
        (g$11395$xgWN3 core-prim . fldenominator)
        (g$6473$xgWN3 core-prim . flcos)
        (g$6482$xgWN3 core-prim . flceiling)
        (g$6477$xgWN3 core-prim . flatan)
        (g$6475$xgWN3 core-prim . flasin)
        (g$6476$xgWN3 core-prim . flacos)
        (g$6486$xgWN3 core-prim . flabs)
        (g$11394$xgWN3 core-prim . fl>?)
        (g$11393$xgWN3 core-prim . fl>=?)
        (g$11392$xgWN3 core-prim . fl=?)
        (g$11391$xgWN3 core-prim . fl<?)
        (g$11390$xgWN3 core-prim . fl<=?)
        (g$11389$xgWN3 core-prim . fl/)
        (g$11388$xgWN3 core-prim . fl-)
        (g$11387$xgWN3 core-prim . fl+)
        (g$11386$xgWN3 core-prim . fl*)
        (g$11385$xgWN3 core-prim . fixnum->flonum)
        (g$6370$xgWN3 core-prim . fxzero?)
        (g$11384$xgWN3 core-prim . fxxor)
        (g$6384$xgWN3 core-prim . fxrotate-bit-field)
        (g$11383$xgWN3 core-prim . fxreverse-bit-field)
        (g$6368$xgWN3 core-prim . fxpositive?)
        (g$6372$xgWN3 core-prim . fxodd?)
        (g$11382$xgWN3 core-prim . fxnot)
        (g$6369$xgWN3 core-prim . fxnegative?)
        (g$6367$xgWN3 core-prim . fxmod0)
        (g$6366$xgWN3 core-prim . fxmod)
        (g$6374$xgWN3 core-prim . fxmin)
        (g$6373$xgWN3 core-prim . fxmax)
        (g$11381$xgWN3 core-prim . fxlength)
        (g$11380$xgWN3 core-prim . fxior)
        (g$6378$xgWN3 core-prim . fxif)
        (g$11379$xgWN3 core-prim . fxfirst-bit-set)
        (g$6371$xgWN3 core-prim . fxeven?)
        (g$11378$xgWN3 core-prim . fxdiv0-and-mod0)
        (g$6365$xgWN3 core-prim . fxdiv0)
        (g$11377$xgWN3 core-prim . fxdiv-and-mod)
        (g$6364$xgWN3 core-prim . fxdiv)
        (g$6381$xgWN3 core-prim . fxcopy-bit-field)
        (g$6379$xgWN3 core-prim . fxcopy-bit)
        (g$11376$xgWN3 core-prim . fxbit-set?)
        (g$6380$xgWN3 core-prim . fxbit-field)
        (g$11375$xgWN3 core-prim . fxbit-count)
        (g$6383$xgWN3 core-prim . fxarithmetic-shift-right)
        (g$6382$xgWN3 core-prim . fxarithmetic-shift-left)
        (g$11374$xgWN3 core-prim . fxarithmetic-shift)
        (g$11373$xgWN3 core-prim . fxand)
        (g$11372$xgWN3 core-prim . fx>?)
        (g$11371$xgWN3 core-prim . fx>=?)
        (g$11370$xgWN3 core-prim . fx=?)
        (g$11369$xgWN3 core-prim . fx<?)
        (g$11368$xgWN3 core-prim . fx<=?)
        (g$6376$xgWN3 core-prim . fx-/carry)
        (g$11367$xgWN3 core-prim . fx-)
        (g$6377$xgWN3 core-prim . fx+/carry)
        (g$11366$xgWN3 core-prim . fx+)
        (g$6375$xgWN3 core-prim . fx*/carry)
        (g$11365$xgWN3 core-prim . fx*)
        (g$11364$xgWN3 core-prim . greatest-fixnum)
        (g$11363$xgWN3 core-prim . least-fixnum)
        (g$5367$xgWN3 core-prim . fixnum-width)
        (g$5365$xgWN3 core-prim . fixnum?)
        (g$6338$xgWN3 core-prim . bitwise-rotate-bit-field)
        (g$11362$xgWN3 core-prim . bitwise-reverse-bit-field)
        (g$11361$xgWN3 core-prim . bitwise-length)
        (g$6332$xgWN3 core-prim . bitwise-if)
        (g$11360$xgWN3 core-prim . bitwise-first-bit-set)
        (g$6335$xgWN3 core-prim . bitwise-copy-bit-field)
        (g$6333$xgWN3 core-prim . bitwise-copy-bit)
        (g$11359$xgWN3 core-prim . bitwise-bit-set?)
        (g$6334$xgWN3 core-prim . bitwise-bit-field)
        (g$11358$xgWN3 core-prim . bitwise-bit-count)
        (g$11357$xgWN3 core-prim . bitwise-xor)
        (g$11356$xgWN3 core-prim . bitwise-ior)
        (g$11355$xgWN3 core-prim . bitwise-and)
        (g$11354$xgWN3 core-prim . bitwise-not)
        (g$6337$xgWN3 core-prim . bitwise-arithmetic-shift-right)
        (g$6336$xgWN3 core-prim . bitwise-arithmetic-shift-left)
        (g$11353$xgWN3 core-prim . bitwise-arithmetic-shift)
        (g$5400$xgWN3 core-prim . zero?)
        (g$5360$xgWN3 core-prim . vector?)
        (g$11352$xgWN3 core-prim . vector-set!)
        (g$11351$xgWN3 core-prim . vector-ref)
        (g$5432$xgWN3 core-prim . vector-map)
        (g$11350$xgWN3 core-prim . vector-length)
        (g$5433$xgWN3 core-prim . vector-for-each)
        (g$5368$xgWN3 core-prim . vector-fill!)
        (g$11349$xgWN3 core-prim . vector->list)
        (g$11348$xgWN3 core-prim . vector)
        (g$11347$xgWN3 core-prim . values)
        (g$11346$xgWN3 core-prim . truncate)
        (g$11345$xgWN3 core-prim . tan)
        (g$5362$xgWN3 core-prim . symbol?)
        (g$5417$xgWN3 core-prim . symbol=?)
        (g$11344$xgWN3 core-prim . symbol->string)
        (g$11343$xgWN3 core-prim . substring)
        (g$11342$xgWN3 core-prim . string?)
        (g$5414$xgWN3 core-prim . string>?)
        (g$5416$xgWN3 core-prim . string>=?)
        (g$5412$xgWN3 core-prim . string=?)
        (g$5413$xgWN3 core-prim . string<?)
        (g$5415$xgWN3 core-prim . string<=?)
        (g$11341$xgWN3 core-prim . string-ref)
        (g$11340$xgWN3 core-prim . string-length)
        (g$5434$xgWN3 core-prim . string-for-each)
        (g$11339$xgWN3 core-prim . string-copy)
        (g$11338$xgWN3 core-prim . string-append)
        (g$11337$xgWN3 core-prim . string->symbol)
        (g$11336$xgWN3 core-prim . string->number)
        (g$11335$xgWN3 core-prim . string->list)
        (g$11334$xgWN3 core-prim . string)
        (g$11333$xgWN3 core-prim . sqrt)
        (g$11332$xgWN3 core-prim . sin)
        (g$11331$xgWN3 core-prim . round)
        (g$5369$xgWN3 core-prim . reverse)
        (g$11330$xgWN3 core-prim . real?)
        (g$11329$xgWN3 core-prim . real-valued?)
        (g$11328$xgWN3 core-prim . real-part)
        (g$5429$xgWN3 core-prim . rationalize)
        (g$11327$xgWN3 core-prim . rational?)
        (g$11326$xgWN3 core-prim . rational-valued?)
        (g$5364$xgWN3 core-prim . procedure?)
        (g$5398$xgWN3 core-prim . positive?)
        (g$11325$xgWN3 core-prim . pair?)
        (g$5402$xgWN3 core-prim . odd?)
        (g$11324$xgWN3 core-prim . numerator)
        (g$11323$xgWN3 core-prim . number?)
        (g$11322$xgWN3 core-prim . number->string)
        (g$11321$xgWN3 core-prim . null?)
        (g$11320$xgWN3 core-prim . not)
        (g$5399$xgWN3 core-prim . negative?)
        (g$11319$xgWN3 core-prim . nan?)
        (g$5404$xgWN3 core-prim . min)
        (g$5403$xgWN3 core-prim . max)
        (g$5057$xgWN3 core-prim . map)
        (g$11318$xgWN3 core-prim . make-vector)
        (g$11317$xgWN3 core-prim . make-string)
        (g$11316$xgWN3 core-prim . make-rectangular)
        (g$11315$xgWN3 core-prim . make-polar)
        (g$11314$xgWN3 core-prim . magnitude)
        (g$11313$xgWN3 core-prim . log)
        (g$11312$xgWN3 core-prim . list?)
        (g$5037$xgWN3 core-prim . list-tail)
        (g$5038$xgWN3 core-prim . list-ref)
        (g$5357$xgWN3 core-prim . list->vector)
        (g$5358$xgWN3 core-prim . list->string)
        (g$11311$xgWN3 core-prim . list)
        (g$11310$xgWN3 core-prim . length)
        (g$5406$xgWN3 core-prim . lcm)
        (g$11309$xgWN3 core-prim . integer?)
        (g$11308$xgWN3 core-prim . integer-valued?)
        (g$11307$xgWN3 core-prim . integer->char)
        (g$11306$xgWN3 core-prim . infinite?)
        (g$11305$xgWN3 core-prim . inexact?)
        (g$11304$xgWN3 core-prim . inexact)
        (g$11303$xgWN3 core-prim . imag-part)
        (g$5405$xgWN3 core-prim . gcd)
        (g$5058$xgWN3 core-prim . for-each)
        (g$11302$xgWN3 core-prim . floor)
        (g$11301$xgWN3 core-prim . finite?)
        (g$11300$xgWN3 core-prim . expt)
        (g$11299$xgWN3 core-prim . exp)
        (g$11298$xgWN3 core-prim . exact?)
        (g$11297$xgWN3 core-prim . exact-integer-sqrt)
        (g$11296$xgWN3 core-prim . exact)
        (g$5401$xgWN3 core-prim . even?)
        (g$11295$xgWN3 core-prim . error)
        (g$11294$xgWN3 core-prim . eqv?)
        (g$11293$xgWN3 core-prim . equal?)
        (g$11292$xgWN3 core-prim . eq?)
        (g$11291$xgWN3 core-prim . dynamic-wind)
        (g$11290$xgWN3 core-prim . div0-and-mod0)
        (g$5356$xgWN3 core-prim . mod0)
        (g$5354$xgWN3 core-prim . div0)
        (g$11289$xgWN3 core-prim . div-and-mod)
        (g$5355$xgWN3 core-prim . mod)
        (g$5353$xgWN3 core-prim . div)
        (g$11288$xgWN3 core-prim . denominator)
        (g$11287$xgWN3 core-prim . cos)
        (g$11286$xgWN3 core-prim . cons)
        (g$11285$xgWN3 core-prim . complex?)
        (g$5359$xgWN3 core-prim . char?)
        (g$5426$xgWN3 core-prim . char>?)
        (g$5428$xgWN3 core-prim . char>=?)
        (g$5424$xgWN3 core-prim . char=?)
        (g$5425$xgWN3 core-prim . char<?)
        (g$5427$xgWN3 core-prim . char<=?)
        (g$11284$xgWN3 core-prim . char->integer)
        (g$11283$xgWN3 core-prim . ceiling)
        (g$11282$xgWN3 core-prim . call-with-values)
        (g$11281$xgWN3 core-prim . call/cc)
        (g$11280$xgWN3 core-prim . call-with-current-continuation)
        (g$5397$xgWN3 core-prim . cddddr)
        (g$5396$xgWN3 core-prim . cdddar)
        (g$5395$xgWN3 core-prim . cddadr)
        (g$5394$xgWN3 core-prim . cddaar)
        (g$5393$xgWN3 core-prim . cdaddr)
        (g$5392$xgWN3 core-prim . cdadar)
        (g$5391$xgWN3 core-prim . cdaadr)
        (g$5390$xgWN3 core-prim . cdaaar)
        (g$5389$xgWN3 core-prim . cadddr)
        (g$5388$xgWN3 core-prim . caddar)
        (g$5387$xgWN3 core-prim . cadadr)
        (g$5386$xgWN3 core-prim . cadaar)
        (g$5385$xgWN3 core-prim . caaddr)
        (g$5384$xgWN3 core-prim . caadar)
        (g$5383$xgWN3 core-prim . caaadr)
        (g$5382$xgWN3 core-prim . caaaar)
        (g$5381$xgWN3 core-prim . cdddr)
        (g$5380$xgWN3 core-prim . cddar)
        (g$5379$xgWN3 core-prim . cdadr)
        (g$5378$xgWN3 core-prim . cdaar)
        (g$5377$xgWN3 core-prim . caddr)
        (g$5376$xgWN3 core-prim . cadar)
        (g$5375$xgWN3 core-prim . caadr)
        (g$5374$xgWN3 core-prim . caaar)
        (g$5373$xgWN3 core-prim . cddr)
        (g$5372$xgWN3 core-prim . cdar)
        (g$5371$xgWN3 core-prim . cadr)
        (g$5370$xgWN3 core-prim . caar)
        (g$11279$xgWN3 core-prim . cdr)
        (g$11278$xgWN3 core-prim . car)
        (g$5363$xgWN3 core-prim . boolean?)
        (g$5418$xgWN3 core-prim . boolean=?)
        (g$11277$xgWN3 core-prim . atan)
        (g$11276$xgWN3 core-prim . assertion-violation)
        (g$11275$xgWN3 core-prim . asin)
        (g$11274$xgWN3 core-prim . apply)
        (g$11273$xgWN3 core-prim . append)
        (g$11272$xgWN3 core-prim . angle)
        (g$11271$xgWN3 core-prim . acos)
        (g$11270$xgWN3 core-prim . abs)
        (g$11269$xgWN3 core-prim . /)
        (g$11268$xgWN3 core-prim . *)
        (g$11267$xgWN3 core-prim . -)
        (g$11266$xgWN3 core-prim . +)
        (g$11265$xgWN3 core-prim . >=)
        (g$11264$xgWN3 core-prim . >)
        (g$11263$xgWN3 core-prim . =)
        (g$11262$xgWN3 core-prim . <=)
        (g$11261$xgWN3 core-prim . <)
        (g$11260$xgWN3 core-prim . make-record-printer)
        (g$11259$xgWN3 core-prim . eqv-hash)
        (g$11258$xgWN3 core-prim . reverse!)
        (g$11257$xgWN3 core-prim . deserialize-port)
        (g$11256$xgWN3 core-prim . serialize-port)
        (g$6638$xgWN3 core-prim . enum-set?)
        (g$6209$xgWN3 core-prim . make-promise)
        (g$11074$xgWN3 core-prim . load/unload)
        (g$11073$xgWN3 core-prim . load/args)
        (g$6747$xgWN3 core-prim . printf)
        (g$6748$xgWN3 core-prim . fprintf)
        (g$6749$xgWN3 core-prim . format)
        (g$11255$xgWN3 core-prim . procedure-form)
        (g$11254$xgWN3 core-prim . procedure-environment)
        (g$11253$xgWN3 core-prim . procedure-name)
        (g$11252$xgWN3 core-prim . procedure-arity)
        (g$11251$xgWN3 core-prim . gc-collect)
        (g$11250$xgWN3 core-prim . typeof)
        (g$11249$xgWN3 core-prim . clr-type?)
        (g$11248$xgWN3 core-prim . get-clr-type)
        (g$11247$xgWN3 core-prim . get-command-line)
        (g$11246$xgWN3 core-prim . vector-append)
        (g$11245$xgWN3 core-prim . vector-filter)
        (g$11244$xgWN3 core-prim . vector-reverse!)
        (g$11243$xgWN3 core-prim . vector-contains?)
        (g$11242$xgWN3 core-prim . vector-index-of)
        (g$11241$xgWN3 core-prim . vector-copy)
        (g$11240$xgWN3 core-prim . vector-binary-search)
        (g$11239$xgWN3 core-prim . string-ci-compare)
        (g$11238$xgWN3 core-prim . string-compare)
        (g$11237$xgWN3 core-prim . string-format)
        (g$11070$xgWN3 core-prim . trace-printer)
        (g$11236$xgWN3 core-prim . make-traced-procedure)
        (g$6769$xgWN3 core-prim . make-traced-macro)
        (g$8086$xgWN3 core-prim . assertion-error)
        (g$11235$xgWN3 core-prim . time-it)
        (g$7042$xgWN3 core-prim . make-parameter)
        (g$11234$xgWN3 core-prim . library-locator)
        (g$11233$xgWN3 core-prim . get-library-paths)
        (g$11232$xgWN3 core-prim . open-tcp-input/output-port)
        (g$11231$xgWN3 core-prim . hashtable-for-each)
        (g$11230$xgWN3 core-prim . hashtable-map)
        (g$8064$xgWN3 core-prim . environment-bindings)
        (g$8067$xgWN3 core-prim . environment-symbols)
        (g$8063$xgWN3 core-prim . interaction-environment-symbols)
        (g$11229$xgWN3 core-prim . optimization-level)
        (g$7395$xgWN3 core-prim . library-path)
        (g$7773$xgWN3 core-prim . make-compile-time-value)
        (g$8073$xgWN3 core-prim . expand->core)
        (g$8071$xgWN3 core-prim . expand)
        (g$6825$xgWN3 core-prim . convert->cps)
        (g$7416$xgWN3 core-prim . installed-libraries)
        (g$7407$xgWN3 core-prim . uninstall-library)
        (g$11228$xgWN3 $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11227$xgWN3 $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11226$xgWN3 $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11225$xgWN3 $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11224$xgWN3 $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11223$xgWN3
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11222$xgWN3
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11221$xgWN3
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11220$xgWN3
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11219$xgWN3 $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11218$xgWN3
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11217$xgWN3 $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11216$xgWN3 $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11215$xgWN3 $core-rtd &i/o-rtd &i/o-rcd)
        (g$11214$xgWN3 $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11213$xgWN3 $core-rtd &undefined-rtd &undefined-rcd)
        (g$11212$xgWN3 $core-rtd &syntax-rtd &syntax-rcd)
        (g$11211$xgWN3 $core-rtd &lexical-rtd &lexical-rcd)
        (g$11210$xgWN3
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11209$xgWN3 $core-rtd &who-rtd &who-rcd)
        (g$11208$xgWN3 $core-rtd &irritants-rtd &irritants-rcd)
        (g$11207$xgWN3 $core-rtd &assertion-rtd &assertion-rcd)
        (g$11206$xgWN3 $core-rtd &violation-rtd &violation-rcd)
        (g$11205$xgWN3 $core-rtd &error-rtd &error-rcd)
        (g$11204$xgWN3 $core-rtd &serious-rtd &serious-rcd)
        (g$11203$xgWN3 $core-rtd &warning-rtd &warning-rcd)
        (g$11202$xgWN3 $core-rtd &message-rtd &message-rcd)
        (g$11201$xgWN3 $core-rtd &condition-rtd &condition-rcd)
        (g$11200$xgWN3 macro . define-condition-type)
        (g$11199$xgWN3 macro . define-enumeration)
        (g$11198$xgWN3 macro . define-record-type)
        (g$11197$xgWN3 macro . parent-rtd)
        (g$11196$xgWN3 macro . nongenerative)
        (g$11195$xgWN3 macro . opaque)
        (g$11194$xgWN3 macro . sealed)
        (g$11193$xgWN3 macro . protocol)
        (g$11192$xgWN3 macro . parent)
        (g$11191$xgWN3 macro . immutable)
        (g$11190$xgWN3 macro . mutable)
        (g$11189$xgWN3 macro . fields)
        (g$11188$xgWN3 macro . error-handling-mode)
        (g$11187$xgWN3 macro . file-options)
        (g$11186$xgWN3 macro . buffer-mode)
        (g$11185$xgWN3 macro . eol-style)
        (g$11184$xgWN3 macro . guard)
        (g$11183$xgWN3 macro . trace-letrec-syntax)
        (g$11182$xgWN3 macro . trace-let-syntax)
        (g$11181$xgWN3 macro . trace-define-syntax)
        (g$11180$xgWN3 macro . trace-define)
        (g$11179$xgWN3 macro . trace-lambda)
        (g$11178$xgWN3 macro . unsyntax-splicing)
        (g$11177$xgWN3 macro . unsyntax)
        (g$11176$xgWN3 macro . unquote-splicing)
        (g$11175$xgWN3 macro . unquote)
        (g$11174$xgWN3 macro . _)
        (g$11173$xgWN3 macro . else)
        (g$11172$xgWN3 macro . =>)
        (g$11171$xgWN3 macro . ...)
        (g$11170$xgWN3 macro . assert)
        (g$11169$xgWN3 macro . endianness)
        (g$11168$xgWN3 macro . delay)
        (g$11167$xgWN3 macro . time)
        (g$11166$xgWN3 macro . or)
        (g$11165$xgWN3 macro . and)
        (g$11164$xgWN3 macro . do)
        (g$11163$xgWN3 macro . cond)
        (g$11162$xgWN3 macro . let*)
        (g$11161$xgWN3 macro . let)
        (g$11160$xgWN3 macro . identifier-syntax)
        (g$11159$xgWN3 macro . with-syntax)
        (g$11158$xgWN3 macro . quasisyntax)
        (g$11157$xgWN3 macro . quasiquote)
        (g$11156$xgWN3 macro . syntax-rules)
        (g$11155$xgWN3 macro . include-into)
        (g$11154$xgWN3 macro . include)
        (g$11153$xgWN3 macro . define-struct)
        (g$11152$xgWN3 macro . let-values)
        (g$11151$xgWN3 macro . let*-values)
        (g$11150$xgWN3 core-macro . record-constructor-descriptor)
        (g$11149$xgWN3 core-macro . record-type-descriptor)
        (g$11148$xgWN3 core-macro . fluid-let-syntax)
        (g$11147$xgWN3 macro . case)
        (g$11146$xgWN3 macro . parameterize)
        (g$11145$xgWN3 macro . unless)
        (g$11144$xgWN3 macro . when)
        (g$11143$xgWN3 core-macro . if)
        (g$11142$xgWN3 core-macro . letrec*)
        (g$11141$xgWN3 core-macro . letrec)
        (g$11140$xgWN3 core-macro . type-descriptor)
        (g$11139$xgWN3 core-macro . case-lambda)
        (g$11138$xgWN3 core-macro . lambda)
        (g$11137$xgWN3 core-macro . syntax)
        (g$11136$xgWN3 core-macro . syntax-case)
        (g$11135$xgWN3 core-macro . quote)
        (g$11134$xgWN3 core-macro . foreign-call)
        (g$11133$xgWN3 letrec-syntax)
        (g$11132$xgWN3 let-syntax)
        (g$11131$xgWN3 set!)
        (g$11130$xgWN3 export)
        (g$11129$xgWN3 import)
        (g$11128$xgWN3 library)
        (g$11127$xgWN3 begin)
        (g$11126$xgWN3 module)
        (g$11125$xgWN3 define-syntax)
        (g$11124$xgWN3 define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$9423$xgWN3
      'g$11630$xgWN3
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$11569$xgWN3)
        (eval-core . g$11568$xgWN3)
        (set-symbol-value! . g$11566$xgWN3)
        (symbol-value . g$11565$xgWN3)
        (gensym . g$11562$xgWN3)
        (void . g$11561$xgWN3))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$13711$xgWN3
     g$trace-printer$13772$xgWN3
     (g$make-parameter$8910$xgWN3 write))
   (g$command-line$13712$xgWN3
     g$command-line$13773$xgWN3
     (g$make-parameter$8910$xgWN3 (get-command-line)))
   (g$local-library-path$13713$xgWN3
     g$local-library-path$13774$xgWN3
     (case-lambda
       ((g$filename$13726$xgWN3)
        (cons
          (g$get-directory-name$6875$xgWN3 g$filename$13726$xgWN3)
          (g$library-path$9407$xgWN3)))))
   (g$load/args$13714$xgWN3
     g$load/args$13775$xgWN3
     (case-lambda
       ((g$filename$13727$xgWN3 . g$args$13728$xgWN3)
        (begin
          (apply
            g$load-r6rs-top-level$13723$xgWN3
            g$filename$13727$xgWN3
            'load
            g$args$13728$xgWN3)
          (void)))))
   (g$load/unload$13715$xgWN3
     g$load/unload$13776$xgWN3
     (case-lambda
       ((g$filename$13729$xgWN3)
        ((case-lambda
           ((g$libs$13730$xgWN3)
            (begin
              (g$load$13716$xgWN3 g$filename$13729$xgWN3)
              (g$for-each$6086$xgWN3
                (case-lambda
                  ((g$lib$13731$xgWN3)
                   (if (not (g$memq$6077$xgWN3
                              g$lib$13731$xgWN3
                              g$libs$13730$xgWN3))
                     (g$uninstall-library$9419$xgWN3 g$lib$13731$xgWN3)
                     (void))))
                (g$installed-libraries$9428$xgWN3)))))
         (g$installed-libraries$9428$xgWN3)))))
   (g$load$13716$xgWN3
     g$load$13777$xgWN3
     (case-lambda
       ((g$filename$13732$xgWN3)
        (begin
          (apply
            g$load-r6rs-top-level$13723$xgWN3
            g$filename$13732$xgWN3
            'load
            (cdr (g$command-line$13712$xgWN3)))
          (void)))))
   (g$ironscheme-build$13717$xgWN3
     g$ironscheme-build$13778$xgWN3
     (case-lambda
       (() (g$ironscheme-build$13717$xgWN3 '#f))
       ((g$cps?$13733$xgWN3)
        (begin
          (g$call-with-output-file$8252$xgWN3
            '"build-options.ss"
            (case-lambda
              ((g$p$13734$xgWN3)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$13733$xgWN3)
                   g$p$13734$xgWN3)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$13733$xgWN3))
                   g$p$13734$xgWN3)
                 (g$newline$8253$xgWN3 g$p$13734$xgWN3)))))
          (g$load$13716$xgWN3 '"ironscheme-buildscript.ss")))))
   (g$foreground-color$13718$xgWN3
     g$foreground-color$13779$xgWN3
     (case-lambda
       (() (clr-call-internal 'console 'get_foregroundcolor '()))
       ((g$color$13735$xgWN3)
        (clr-call-internal
          'console
          'set_foregroundcolor
          '()
          g$color$13735$xgWN3))))
   (g$eval-top-level$13719$xgWN3
     g$eval-top-level$13780$xgWN3
     (case-lambda
       ((g$x$13736$xgWN3)
        (call/cc
          (case-lambda
            ((g$k$13737$xgWN3)
             (with-exception-handler
               (case-lambda
                 ((g$e$13738$xgWN3)
                  (begin
                    ((case-lambda
                       ((g$foreground-color$13743$xgWN3
                          g$current-output-port$13744$xgWN3
                          g$foreground-color$13745$xgWN3
                          g$current-output-port$13746$xgWN3)
                        ((case-lambda
                           ((g$swap$13747$xgWN3)
                            (dynamic-wind
                              g$swap$13747$xgWN3
                              (case-lambda
                                (()
                                 (begin
                                   (display
                                     '"Unhandled exception during evaluation:
")
                                   (display g$e$13738$xgWN3)
                                   (g$newline$8253$xgWN3))))
                              g$swap$13747$xgWN3)))
                         (case-lambda
                           (()
                            (begin
                              ((case-lambda
                                 ((g$t$13748$xgWN3)
                                  (begin
                                    (g$foreground-color$13743$xgWN3
                                      g$foreground-color$13745$xgWN3)
                                    (set! g$foreground-color$13745$xgWN3
                                      g$t$13748$xgWN3))))
                               (g$foreground-color$13743$xgWN3))
                              ((case-lambda
                                 ((g$t$13749$xgWN3)
                                  (begin
                                    (g$current-output-port$13744$xgWN3
                                      g$current-output-port$13746$xgWN3)
                                    (set! g$current-output-port$13746$xgWN3
                                      g$t$13749$xgWN3))))
                               (g$current-output-port$13744$xgWN3))))))))
                     g$foreground-color$13718$xgWN3
                     current-output-port
                     'red
                     (current-error-port))
                    (g$k$13737$xgWN3))))
               (case-lambda
                 (()
                  (g$eval$13684$xgWN3
                    g$x$13736$xgWN3
                    (g$interaction-environment$13709$xgWN3)))))))))))
   (g$compile-system-libraries$13720$xgWN3
     g$compile-system-libraries$13781$xgWN3
     (case-lambda
       (()
        (g$eval-top-level$13719$xgWN3
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$13721$xgWN3
     g$compile$13782$xgWN3
     (case-lambda
       ((g$filename$13750$xgWN3)
        (g$load-r6rs-top-level$13723$xgWN3 g$filename$13750$xgWN3 'compile))))
   (g$compile->closure$13722$xgWN3
     g$compile->closure$13783$xgWN3
     (case-lambda
       ((g$filename$13751$xgWN3)
        (g$load-r6rs-top-level$13723$xgWN3 g$filename$13751$xgWN3 'closure))))
   (g$load-r6rs-top-level$13723$xgWN3
     g$load-r6rs-top-level$13784$xgWN3
     (case-lambda
       ((g$filename$13752$xgWN3 g$how$13753$xgWN3 . g$args$13754$xgWN3)
        ((case-lambda
           ((g$library-path$13757$xgWN3 g$library-path$13758$xgWN3)
            ((case-lambda
               ((g$swap$13759$xgWN3)
                (dynamic-wind
                  g$swap$13759$xgWN3
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$13760$xgWN3)
                         ((case-lambda
                            ((g$t$13761$xgWN3)
                             (if (g$memv$6078$xgWN3 g$t$13761$xgWN3 '(closure))
                               (g$pre-compile-r6rs-top-level$13707$xgWN3
                                 g$x*$13760$xgWN3)
                               (if (g$memv$6078$xgWN3 g$t$13761$xgWN3 '(load))
                                 ((case-lambda
                                    ((g$command-line$13764$xgWN3
                                       g$command-line$13765$xgWN3)
                                     ((case-lambda
                                        ((g$swap$13766$xgWN3)
                                         (dynamic-wind
                                           g$swap$13766$xgWN3
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$13706$xgWN3
                                                 g$x*$13760$xgWN3))))
                                           g$swap$13766$xgWN3)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$13767$xgWN3)
                                             (begin
                                               (g$command-line$13764$xgWN3
                                                 g$command-line$13765$xgWN3)
                                               (set! g$command-line$13765$xgWN3
                                                 g$t$13767$xgWN3))))
                                          (g$command-line$13764$xgWN3)))))))
                                  g$command-line$13712$xgWN3
                                  (cons
                                    g$filename$13752$xgWN3
                                    (g$map$6085$xgWN3
                                      (case-lambda
                                        ((g$x$13768$xgWN3)
                                         (g$format$8427$xgWN3
                                           '"~a"
                                           g$x$13768$xgWN3)))
                                      g$args$13754$xgWN3)))
                                 (if (g$memv$6078$xgWN3
                                       g$t$13761$xgWN3
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$13706$xgWN3
                                       g$x*$13760$xgWN3)
                                     (g$serialize-all$9411$xgWN3
                                       serialize-library
                                       g$compile-core-expr$9159$xgWN3))
                                   (if '#f '#f (void)))))))
                          g$how$13753$xgWN3)))
                      (g$with-input-from-file$8249$xgWN3
                        g$filename$13752$xgWN3
                        (case-lambda
                          (()
                           ((letrec ((g$f$13769$xgWN3
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$13770$xgWN3)
                                              (if (eof-object? g$x$13770$xgWN3)
                                                '()
                                                (cons
                                                  g$x$13770$xgWN3
                                                  (g$f$13769$xgWN3)))))
                                           (read-annotated))))))
                              g$f$13769$xgWN3))))))))
                  g$swap$13759$xgWN3)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$13771$xgWN3)
                    (begin
                      (g$library-path$13757$xgWN3 g$library-path$13758$xgWN3)
                      (set! g$library-path$13758$xgWN3 g$t$13771$xgWN3))))
                 (g$library-path$13757$xgWN3)))))))
         g$library-path$9407$xgWN3
         (g$local-library-path$13713$xgWN3 g$filename$13752$xgWN3)))))
   (g$fo$13724$xgWN3
     g$fo$13785$xgWN3
     (g$make-enumeration$8389$xgWN3 '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$9412$xgWN3
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$13725$xgWN3)
         (if (g$serious-condition?$7424$xgWN3 g$ex$13725$xgWN3)
           (raise g$ex$13725$xgWN3)
           (begin (display g$ex$13725$xgWN3) (g$newline$8253$xgWN3))))))
    (set-symbol-value! 'load g$load$13716$xgWN3)
    (set-symbol-value! 'compile g$compile$13721$xgWN3)
    (set-symbol-value! 'compile->closure g$compile->closure$13722$xgWN3)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$13719$xgWN3)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$13675$xgWN3)
    (set-symbol-value! 'expanded2core g$expanded->core$9158$xgWN3)
    (set-symbol-value! 'trace-printer g$trace-printer$13711$xgWN3)
    (set-symbol-value! 'convert->cps g$convert->cps$8749$xgWN3)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (g$file-options-constructor$8911$xgWN3
      (g$enum-set-constructor$8392$xgWN3 g$fo$13724$xgWN3))
    (g$library-path$9407$xgWN3 (get-library-paths))))

