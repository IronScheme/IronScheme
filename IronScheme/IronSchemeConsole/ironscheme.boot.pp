;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4813$14xsgv
     g$caar$4886$14xsgv
     (case-lambda ((g$x$4844$14xsgv) (car (car g$x$4844$14xsgv)))))
   (g$cadr$4814$14xsgv
     g$cadr$4887$14xsgv
     (case-lambda ((g$x$4845$14xsgv) (car (cdr g$x$4845$14xsgv)))))
   (g$cdar$4815$14xsgv
     g$cdar$4888$14xsgv
     (case-lambda ((g$x$4846$14xsgv) (cdr (car g$x$4846$14xsgv)))))
   (g$cddr$4816$14xsgv
     g$cddr$4889$14xsgv
     (case-lambda ((g$x$4847$14xsgv) (cdr (cdr g$x$4847$14xsgv)))))
   (g$caaar$4817$14xsgv
     g$caaar$4890$14xsgv
     (case-lambda
       ((g$x$4848$14xsgv) (g$caar$4813$14xsgv (car g$x$4848$14xsgv)))))
   (g$caadr$4818$14xsgv
     g$caadr$4891$14xsgv
     (case-lambda
       ((g$x$4849$14xsgv) (g$caar$4813$14xsgv (cdr g$x$4849$14xsgv)))))
   (g$cadar$4819$14xsgv
     g$cadar$4892$14xsgv
     (case-lambda
       ((g$x$4850$14xsgv) (g$cadr$4814$14xsgv (car g$x$4850$14xsgv)))))
   (g$caddr$4820$14xsgv
     g$caddr$4893$14xsgv
     (case-lambda
       ((g$x$4851$14xsgv) (g$cadr$4814$14xsgv (cdr g$x$4851$14xsgv)))))
   (g$cdaar$4821$14xsgv
     g$cdaar$4894$14xsgv
     (case-lambda
       ((g$x$4852$14xsgv) (g$cdar$4815$14xsgv (car g$x$4852$14xsgv)))))
   (g$cdadr$4822$14xsgv
     g$cdadr$4895$14xsgv
     (case-lambda
       ((g$x$4853$14xsgv) (g$cdar$4815$14xsgv (cdr g$x$4853$14xsgv)))))
   (g$cddar$4823$14xsgv
     g$cddar$4896$14xsgv
     (case-lambda
       ((g$x$4854$14xsgv) (g$cddr$4816$14xsgv (car g$x$4854$14xsgv)))))
   (g$cdddr$4824$14xsgv
     g$cdddr$4897$14xsgv
     (case-lambda
       ((g$x$4855$14xsgv) (g$cddr$4816$14xsgv (cdr g$x$4855$14xsgv)))))
   (g$caaaar$4825$14xsgv
     g$caaaar$4898$14xsgv
     (case-lambda
       ((g$x$4856$14xsgv) (g$caaar$4817$14xsgv (car g$x$4856$14xsgv)))))
   (g$caaadr$4826$14xsgv
     g$caaadr$4899$14xsgv
     (case-lambda
       ((g$x$4857$14xsgv) (g$caaar$4817$14xsgv (cdr g$x$4857$14xsgv)))))
   (g$caadar$4827$14xsgv
     g$caadar$4900$14xsgv
     (case-lambda
       ((g$x$4858$14xsgv) (g$caadr$4818$14xsgv (car g$x$4858$14xsgv)))))
   (g$caaddr$4828$14xsgv
     g$caaddr$4901$14xsgv
     (case-lambda
       ((g$x$4859$14xsgv) (g$caadr$4818$14xsgv (cdr g$x$4859$14xsgv)))))
   (g$cadaar$4829$14xsgv
     g$cadaar$4902$14xsgv
     (case-lambda
       ((g$x$4860$14xsgv) (g$cadar$4819$14xsgv (car g$x$4860$14xsgv)))))
   (g$cadadr$4830$14xsgv
     g$cadadr$4903$14xsgv
     (case-lambda
       ((g$x$4861$14xsgv) (g$cadar$4819$14xsgv (cdr g$x$4861$14xsgv)))))
   (g$caddar$4831$14xsgv
     g$caddar$4904$14xsgv
     (case-lambda
       ((g$x$4862$14xsgv) (g$caddr$4820$14xsgv (car g$x$4862$14xsgv)))))
   (g$cadddr$4832$14xsgv
     g$cadddr$4905$14xsgv
     (case-lambda
       ((g$x$4863$14xsgv) (g$caddr$4820$14xsgv (cdr g$x$4863$14xsgv)))))
   (g$cdaaar$4833$14xsgv
     g$cdaaar$4906$14xsgv
     (case-lambda
       ((g$x$4864$14xsgv) (g$cdaar$4821$14xsgv (car g$x$4864$14xsgv)))))
   (g$cdaadr$4834$14xsgv
     g$cdaadr$4907$14xsgv
     (case-lambda
       ((g$x$4865$14xsgv) (g$cdaar$4821$14xsgv (cdr g$x$4865$14xsgv)))))
   (g$cdadar$4835$14xsgv
     g$cdadar$4908$14xsgv
     (case-lambda
       ((g$x$4866$14xsgv) (g$cdadr$4822$14xsgv (car g$x$4866$14xsgv)))))
   (g$cdaddr$4836$14xsgv
     g$cdaddr$4909$14xsgv
     (case-lambda
       ((g$x$4867$14xsgv) (g$cdadr$4822$14xsgv (cdr g$x$4867$14xsgv)))))
   (g$cddaar$4837$14xsgv
     g$cddaar$4910$14xsgv
     (case-lambda
       ((g$x$4868$14xsgv) (g$cddar$4823$14xsgv (car g$x$4868$14xsgv)))))
   (g$cddadr$4838$14xsgv
     g$cddadr$4911$14xsgv
     (case-lambda
       ((g$x$4869$14xsgv) (g$cddar$4823$14xsgv (cdr g$x$4869$14xsgv)))))
   (g$cdddar$4839$14xsgv
     g$cdddar$4912$14xsgv
     (case-lambda
       ((g$x$4870$14xsgv) (g$cdddr$4824$14xsgv (car g$x$4870$14xsgv)))))
   (g$cddddr$4840$14xsgv
     g$cddddr$4913$14xsgv
     (case-lambda
       ((g$x$4871$14xsgv) (g$cdddr$4824$14xsgv (cdr g$x$4871$14xsgv)))))
   (g$rationalize$4841$14xsgv
     g$rationalize$4914$14xsgv
     (case-lambda
       ((g$x$4872$14xsgv g$e$4873$14xsgv)
        (if (if (infinite? g$x$4872$14xsgv)
              (begin '#f (infinite? g$e$4873$14xsgv))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$4874$14xsgv)
              (if (if (exact? g$x$4872$14xsgv)
                    (begin '#f (exact? g$e$4873$14xsgv))
                    '#f)
                g$r$4874$14xsgv
                (inexact g$r$4874$14xsgv))))
           (apply
             /
             (g$find-ratio$4842$14xsgv g$x$4872$14xsgv g$e$4873$14xsgv)))))))
   (g$find-ratio$4842$14xsgv
     g$find-ratio$4915$14xsgv
     (case-lambda
       ((g$x$4875$14xsgv g$e$4876$14xsgv)
        (g$find-ratio-between$4843$14xsgv
          (- g$x$4875$14xsgv g$e$4876$14xsgv)
          (+ g$x$4875$14xsgv g$e$4876$14xsgv)))))
   (g$find-ratio-between$4843$14xsgv
     g$find-ratio-between$4916$14xsgv
     (case-lambda
       ((g$x$4877$14xsgv g$y$4878$14xsgv)
        (letrec* ((g$sr$4879$14xsgv
                    (case-lambda
                      ((g$x$4881$14xsgv g$y$4882$14xsgv)
                       ((case-lambda
                          ((g$fx$4883$14xsgv g$fy$4884$14xsgv)
                           (if (>= g$fx$4883$14xsgv g$x$4881$14xsgv)
                             (list g$fx$4883$14xsgv '1)
                             (if (= g$fx$4883$14xsgv g$fy$4884$14xsgv)
                               ((case-lambda
                                  ((g$rat$4885$14xsgv)
                                   (list
                                     (+ (g$cadr$4814$14xsgv g$rat$4885$14xsgv)
                                        (* g$fx$4883$14xsgv
                                           (car g$rat$4885$14xsgv)))
                                     (car g$rat$4885$14xsgv))))
                                (g$sr$4879$14xsgv
                                  (/ (- g$y$4882$14xsgv g$fy$4884$14xsgv))
                                  (/ (- g$x$4881$14xsgv g$fx$4883$14xsgv))))
                               (list (+ '1 g$fx$4883$14xsgv) '1)))))
                        (exact (floor g$x$4881$14xsgv))
                        (exact (floor g$y$4882$14xsgv)))))))
          (if (< g$y$4878$14xsgv g$x$4877$14xsgv)
            (g$find-ratio-between$4843$14xsgv g$y$4878$14xsgv g$x$4877$14xsgv)
            (if (>= g$x$4877$14xsgv g$y$4878$14xsgv)
              (list g$x$4877$14xsgv '1)
              (if (positive? g$x$4877$14xsgv)
                (g$sr$4879$14xsgv g$x$4877$14xsgv g$y$4878$14xsgv)
                (if (negative? g$y$4878$14xsgv)
                  ((case-lambda
                     ((g$rat$4880$14xsgv)
                      (list
                        (- (car g$rat$4880$14xsgv))
                        (g$cadr$4814$14xsgv g$rat$4880$14xsgv))))
                   (g$sr$4879$14xsgv (- g$y$4878$14xsgv) (- g$x$4877$14xsgv)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5112$14xsgv g$using$5147$14xsgv (clr-using-internal 'system))
   (g$using$5114$14xsgv
     g$using$5148$14xsgv
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5115$14xsgv
     g$make-eq-hashtable$5149$14xsgv
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5126$14xsgv)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5126$14xsgv)))))
   (g$make-eqv-hashtable$5116$14xsgv
     g$make-eqv-hashtable$5150$14xsgv
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5127$14xsgv) (make-hashtable eqv-hash eqv? g$k$5127$14xsgv))))
   (g$hashtable-size$5117$14xsgv
     g$hashtable-size$5151$14xsgv
     (case-lambda
       ((g$ht$5128$14xsgv)
        (clr-call-internal 'hashtable 'get_count g$ht$5128$14xsgv))))
   (g$hashtable-ref$5118$14xsgv
     g$hashtable-ref$5152$14xsgv
     (case-lambda
       ((g$ht$5129$14xsgv g$key$5130$14xsgv g$default$5131$14xsgv)
        (letrec* ((g$r$5132$14xsgv
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5129$14xsgv
                      g$key$5130$14xsgv)))
          (if (not (null? g$r$5132$14xsgv))
            g$r$5132$14xsgv
            g$default$5131$14xsgv)))))
   (g$hashtable-set!$5119$14xsgv
     g$hashtable-set!$5153$14xsgv
     (case-lambda
       ((g$ht$5133$14xsgv g$key$5134$14xsgv g$obj$5135$14xsgv)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5133$14xsgv
          g$key$5134$14xsgv
          g$obj$5135$14xsgv))))
   (g$hashtable-delete!$5120$14xsgv
     g$hashtable-delete!$5154$14xsgv
     (case-lambda
       ((g$ht$5136$14xsgv g$key$5137$14xsgv)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5136$14xsgv
          g$key$5137$14xsgv))))
   (g$hashtable-contains?$5121$14xsgv
     g$hashtable-contains?$5155$14xsgv
     (case-lambda
       ((g$ht$5138$14xsgv g$key$5139$14xsgv)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5138$14xsgv
          g$key$5139$14xsgv))))
   (g$hashtable-update!$5122$14xsgv
     g$hashtable-update!$5156$14xsgv
     (case-lambda
       ((g$ht$5140$14xsgv
          g$key$5141$14xsgv
          g$proc$5142$14xsgv
          g$default$5143$14xsgv)
        (g$hashtable-set!$5119$14xsgv
          g$ht$5140$14xsgv
          g$key$5141$14xsgv
          (g$proc$5142$14xsgv
            (g$hashtable-ref$5118$14xsgv
              g$ht$5140$14xsgv
              g$key$5141$14xsgv
              g$default$5143$14xsgv))))))
   (g$hashtable-clear!$5123$14xsgv
     g$hashtable-clear!$5157$14xsgv
     (case-lambda
       ((g$ht$5144$14xsgv)
        (clr-call-internal 'hashtable 'clear g$ht$5144$14xsgv))
       ((g$ht$5145$14xsgv g$k$5146$14xsgv)
        (clr-call-internal 'hashtable 'clear g$ht$5145$14xsgv))))
   (g$clear-usings$5125$14xsgv
     g$clear-usings$5158$14xsgv
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5160$14xsgv
     g$using$5226$14xsgv
     (clr-using-internal 'system.io))
   (g$file-exists?$5161$14xsgv
     g$file-exists?$5227$14xsgv
     (case-lambda
       ((g$fn$5189$14xsgv)
        (clr-call-internal 'file 'exists '() g$fn$5189$14xsgv))))
   (g$delete-file$5162$14xsgv
     g$delete-file$5228$14xsgv
     (case-lambda
       ((g$fn$5190$14xsgv)
        (clr-call-internal 'file 'delete '() g$fn$5190$14xsgv))))
   (g$file-copy$5163$14xsgv
     g$file-copy$5229$14xsgv
     (case-lambda
       ((g$from$5191$14xsgv g$to$5192$14xsgv)
        (g$file-copy$5163$14xsgv g$from$5191$14xsgv g$to$5192$14xsgv '#f))
       ((g$from$5193$14xsgv g$to$5194$14xsgv g$overwrite?$5195$14xsgv)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5193$14xsgv
          g$to$5194$14xsgv
          g$overwrite?$5195$14xsgv))))
   (g$file-move$5164$14xsgv
     g$file-move$5230$14xsgv
     (case-lambda
       ((g$from$5196$14xsgv g$to$5197$14xsgv)
        (clr-call-internal
          'file
          'move
          '()
          g$from$5196$14xsgv
          g$to$5197$14xsgv))))
   (g$file-create-time$5165$14xsgv
     g$file-create-time$5231$14xsgv
     (case-lambda
       ((g$fn$5198$14xsgv)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5198$14xsgv))))
   (g$file-access-time$5166$14xsgv
     g$file-access-time$5232$14xsgv
     (case-lambda
       ((g$fn$5199$14xsgv)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5199$14xsgv))))
   (g$file-modified-time$5167$14xsgv
     g$file-modified-time$5233$14xsgv
     (case-lambda
       ((g$fn$5200$14xsgv)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5200$14xsgv))))
   (g$directory-exists?$5168$14xsgv
     g$directory-exists?$5234$14xsgv
     (case-lambda
       ((g$fn$5201$14xsgv)
        (clr-call-internal 'directory 'exists '() g$fn$5201$14xsgv))))
   (g$delete-directory$5169$14xsgv
     g$delete-directory$5235$14xsgv
     (case-lambda
       ((g$dir$5202$14xsgv)
        (g$delete-directory$5169$14xsgv g$dir$5202$14xsgv '#f))
       ((g$dir$5203$14xsgv g$recursive?$5204$14xsgv)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5203$14xsgv
          g$recursive?$5204$14xsgv))))
   (g$directory-move$5170$14xsgv
     g$directory-move$5236$14xsgv
     (case-lambda
       ((g$from$5205$14xsgv g$to$5206$14xsgv)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5205$14xsgv
          g$to$5206$14xsgv))))
   (g$create-directory$5171$14xsgv
     g$create-directory$5237$14xsgv
     (case-lambda
       ((g$name$5207$14xsgv)
        (clr-call-internal
          'directory
          'createdirectory
          '()
          g$name$5207$14xsgv))))
   (g$get-files$5172$14xsgv
     g$get-files$5238$14xsgv
     (case-lambda
       ((g$dir$5208$14xsgv) (g$get-files$5172$14xsgv g$dir$5208$14xsgv '"*"))
       ((g$dir$5209$14xsgv g$pattern$5210$14xsgv)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5209$14xsgv
          g$pattern$5210$14xsgv))))
   (g$get-directories$5173$14xsgv
     g$get-directories$5239$14xsgv
     (case-lambda
       ((g$dir$5211$14xsgv)
        (g$get-directories$5173$14xsgv g$dir$5211$14xsgv '"*"))
       ((g$dir$5212$14xsgv g$pattern$5213$14xsgv)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5212$14xsgv
          g$pattern$5213$14xsgv))))
   (g$change-extension$5174$14xsgv
     g$change-extension$5240$14xsgv
     (case-lambda
       ((g$path$5214$14xsgv g$extension$5215$14xsgv)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5214$14xsgv
          g$extension$5215$14xsgv))))
   (g$path-combine$5175$14xsgv
     g$path-combine$5241$14xsgv
     (case-lambda
       ((g$path1$5216$14xsgv g$path2$5217$14xsgv)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5216$14xsgv
          g$path2$5217$14xsgv))))
   (g$get-directory-name$5176$14xsgv
     g$get-directory-name$5242$14xsgv
     (case-lambda
       ((g$path$5218$14xsgv)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5218$14xsgv))))
   (g$get-extension$5177$14xsgv
     g$get-extension$5243$14xsgv
     (case-lambda
       ((g$path$5219$14xsgv)
        (clr-call-internal 'path 'getextension '() g$path$5219$14xsgv))))
   (g$get-filename$5178$14xsgv
     g$get-filename$5244$14xsgv
     (case-lambda
       ((g$path$5220$14xsgv)
        (clr-call-internal 'path 'getfilename '() g$path$5220$14xsgv))))
   (g$get-filename-without-extension$5179$14xsgv
     g$get-filename-without-extension$5245$14xsgv
     (case-lambda
       ((g$path$5221$14xsgv)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5221$14xsgv))))
   (g$get-full-path$5180$14xsgv
     g$get-full-path$5246$14xsgv
     (case-lambda
       ((g$path$5222$14xsgv)
        (clr-call-internal 'path 'getfullpath '() g$path$5222$14xsgv))))
   (g$get-path-root$5181$14xsgv
     g$get-path-root$5247$14xsgv
     (case-lambda
       ((g$path$5223$14xsgv)
        (clr-call-internal 'path 'getpathroot '() g$path$5223$14xsgv))))
   (g$get-random-filename$5182$14xsgv
     g$get-random-filename$5248$14xsgv
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5183$14xsgv
     g$get-temp-filename$5249$14xsgv
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5184$14xsgv
     g$get-temp-path$5250$14xsgv
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5185$14xsgv
     g$path-rooted?$5251$14xsgv
     (case-lambda
       ((g$path$5224$14xsgv)
        (clr-call-internal 'path 'ispathrooted '() g$path$5224$14xsgv))))
   (g$path-has-extension?$5186$14xsgv
     g$path-has-extension?$5252$14xsgv
     (case-lambda
       ((g$path$5225$14xsgv)
        (clr-call-internal 'path 'hasextension '() g$path$5225$14xsgv))))
   (g$clear-usings$5188$14xsgv
     g$clear-usings$5253$14xsgv
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5254$14xsgv
     g$find$5345$14xsgv
     (case-lambda
       ((g$proc$5273$14xsgv g$l$5274$14xsgv)
        (if (null? g$l$5274$14xsgv)
          '#f
          ((case-lambda
             ((g$e$5275$14xsgv)
              (if (g$proc$5273$14xsgv g$e$5275$14xsgv)
                g$e$5275$14xsgv
                (g$find$5254$14xsgv g$proc$5273$14xsgv (cdr g$l$5274$14xsgv)))))
           (car g$l$5274$14xsgv))))))
   (g$partition$5255$14xsgv
     g$partition$5346$14xsgv
     (case-lambda
       ((g$proc$5276$14xsgv g$l$5277$14xsgv)
        ((letrec ((g$f$5278$14xsgv
                    (case-lambda
                      ((g$l$5279$14xsgv g$a$5280$14xsgv g$b$5281$14xsgv)
                       (if (null? g$l$5279$14xsgv)
                         (values
                           (reverse! g$a$5280$14xsgv)
                           (reverse! g$b$5281$14xsgv))
                         ((case-lambda
                            ((g$e$5282$14xsgv)
                             (if (g$proc$5276$14xsgv g$e$5282$14xsgv)
                               (g$f$5278$14xsgv
                                 (cdr g$l$5279$14xsgv)
                                 (cons g$e$5282$14xsgv g$a$5280$14xsgv)
                                 g$b$5281$14xsgv)
                               (g$f$5278$14xsgv
                                 (cdr g$l$5279$14xsgv)
                                 g$a$5280$14xsgv
                                 (cons g$e$5282$14xsgv g$b$5281$14xsgv)))))
                          (car g$l$5279$14xsgv)))))))
           g$f$5278$14xsgv)
         g$l$5277$14xsgv
         '()
         '()))))
   (g$remp$5256$14xsgv
     g$remp$5347$14xsgv
     (case-lambda
       ((g$proc$5283$14xsgv g$l$5284$14xsgv)
        ((letrec ((g$f$5285$14xsgv
                    (case-lambda
                      ((g$l$5286$14xsgv g$a$5287$14xsgv)
                       (if (null? g$l$5286$14xsgv)
                         (reverse! g$a$5287$14xsgv)
                         ((case-lambda
                            ((g$e$5288$14xsgv)
                             (if (g$proc$5283$14xsgv g$e$5288$14xsgv)
                               (g$f$5285$14xsgv
                                 (cdr g$l$5286$14xsgv)
                                 g$a$5287$14xsgv)
                               (g$f$5285$14xsgv
                                 (cdr g$l$5286$14xsgv)
                                 (cons g$e$5288$14xsgv g$a$5287$14xsgv)))))
                          (car g$l$5286$14xsgv)))))))
           g$f$5285$14xsgv)
         g$l$5284$14xsgv
         '()))))
   (g$filter$5257$14xsgv
     g$filter$5348$14xsgv
     (case-lambda
       ((g$proc$5289$14xsgv g$l$5290$14xsgv)
        ((letrec ((g$f$5291$14xsgv
                    (case-lambda
                      ((g$l$5292$14xsgv g$a$5293$14xsgv)
                       (if (null? g$l$5292$14xsgv)
                         (reverse! g$a$5293$14xsgv)
                         ((case-lambda
                            ((g$e$5294$14xsgv)
                             (if (g$proc$5289$14xsgv g$e$5294$14xsgv)
                               (g$f$5291$14xsgv
                                 (cdr g$l$5292$14xsgv)
                                 (cons g$e$5294$14xsgv g$a$5293$14xsgv))
                               (g$f$5291$14xsgv
                                 (cdr g$l$5292$14xsgv)
                                 g$a$5293$14xsgv))))
                          (car g$l$5292$14xsgv)))))))
           g$f$5291$14xsgv)
         g$l$5290$14xsgv
         '()))))
   (g$assv$5258$14xsgv
     g$assv$5349$14xsgv
     (case-lambda
       ((g$obj$5295$14xsgv g$lst$5296$14xsgv)
        (if (null? g$lst$5296$14xsgv)
          '#f
          ((case-lambda
             ((g$c$5297$14xsgv)
              (if (eqv? g$obj$5295$14xsgv (car g$c$5297$14xsgv))
                g$c$5297$14xsgv
                (g$assv$5258$14xsgv
                  g$obj$5295$14xsgv
                  (cdr g$lst$5296$14xsgv)))))
           (car g$lst$5296$14xsgv))))))
   (g$assoc$5259$14xsgv
     g$assoc$5350$14xsgv
     (case-lambda
       ((g$obj$5298$14xsgv g$lst$5299$14xsgv)
        (if (null? g$lst$5299$14xsgv)
          '#f
          ((case-lambda
             ((g$c$5300$14xsgv)
              (if (equal? g$obj$5298$14xsgv (car g$c$5300$14xsgv))
                g$c$5300$14xsgv
                (g$assoc$5259$14xsgv
                  g$obj$5298$14xsgv
                  (cdr g$lst$5299$14xsgv)))))
           (car g$lst$5299$14xsgv))))))
   (g$assp$5260$14xsgv
     g$assp$5351$14xsgv
     (case-lambda
       ((g$p?$5301$14xsgv g$lst$5302$14xsgv)
        (if (null? g$lst$5302$14xsgv)
          '#f
          ((case-lambda
             ((g$c$5303$14xsgv)
              (if (g$p?$5301$14xsgv (car g$c$5303$14xsgv))
                g$c$5303$14xsgv
                (g$assp$5260$14xsgv g$p?$5301$14xsgv (cdr g$lst$5302$14xsgv)))))
           (car g$lst$5302$14xsgv))))))
   (g$member$5261$14xsgv
     g$member$5352$14xsgv
     (case-lambda
       ((g$obj$5304$14xsgv g$lst$5305$14xsgv)
        (if (null? g$lst$5305$14xsgv)
          '#f
          (if (equal? g$obj$5304$14xsgv (car g$lst$5305$14xsgv))
            g$lst$5305$14xsgv
            (g$member$5261$14xsgv
              g$obj$5304$14xsgv
              (cdr g$lst$5305$14xsgv)))))))
   (g$memp$5262$14xsgv
     g$memp$5353$14xsgv
     (case-lambda
       ((g$p?$5306$14xsgv g$lst$5307$14xsgv)
        (if (null? g$lst$5307$14xsgv)
          '#f
          (if (g$p?$5306$14xsgv (car g$lst$5307$14xsgv))
            g$lst$5307$14xsgv
            (g$memp$5262$14xsgv g$p?$5306$14xsgv (cdr g$lst$5307$14xsgv)))))))
   (g$all-empty?$5263$14xsgv
     g$all-empty?$5354$14xsgv
     (case-lambda
       ((g$ls$5308$14xsgv)
        ((case-lambda
           ((g$t$5309$14xsgv)
            (if g$t$5309$14xsgv
              g$t$5309$14xsgv
              (begin
                '#f
                (if (null? (car g$ls$5308$14xsgv))
                  (begin '#f (g$all-empty?$5263$14xsgv (cdr g$ls$5308$14xsgv)))
                  '#f)))))
         (null? g$ls$5308$14xsgv)))))
   (g$split$5264$14xsgv
     g$split$5355$14xsgv
     (case-lambda
       ((g$ls$5310$14xsgv)
        (if (null? g$ls$5310$14xsgv)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5264$14xsgv (cdr g$ls$5310$14xsgv))))
            (case-lambda
              ((g$cars$5311$14xsgv g$cdrs$5312$14xsgv)
               ((case-lambda
                  ((g$a$5313$14xsgv)
                   (values
                     (cons (car g$a$5313$14xsgv) g$cars$5311$14xsgv)
                     (cons (cdr g$a$5313$14xsgv) g$cdrs$5312$14xsgv))))
                (car g$ls$5310$14xsgv)))))))))
   (g$for-all$5265$14xsgv
     g$for-all$5356$14xsgv
     (case-lambda
       ((g$f$5314$14xsgv . g$args$5315$14xsgv)
        (if (g$all-empty?$5263$14xsgv g$args$5315$14xsgv)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5264$14xsgv g$args$5315$14xsgv)))
            (case-lambda
              ((g$cars$5316$14xsgv g$cdrs$5317$14xsgv)
               (if (g$all-empty?$5263$14xsgv g$cdrs$5317$14xsgv)
                 (apply g$f$5314$14xsgv g$cars$5316$14xsgv)
                 (if (apply g$f$5314$14xsgv g$cars$5316$14xsgv)
                   (begin
                     '#f
                     (apply
                       g$for-all$5265$14xsgv
                       g$f$5314$14xsgv
                       g$cdrs$5317$14xsgv))
                   '#f)))))))))
   (g$exists$5266$14xsgv
     g$exists$5357$14xsgv
     (case-lambda
       ((g$f$5318$14xsgv . g$args$5319$14xsgv)
        (if (g$all-empty?$5263$14xsgv g$args$5319$14xsgv)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5264$14xsgv g$args$5319$14xsgv)))
            (case-lambda
              ((g$cars$5320$14xsgv g$cdrs$5321$14xsgv)
               ((case-lambda
                  ((g$t$5322$14xsgv)
                   (if g$t$5322$14xsgv
                     g$t$5322$14xsgv
                     (begin
                       '#f
                       (apply
                         g$exists$5266$14xsgv
                         g$f$5318$14xsgv
                         g$cdrs$5321$14xsgv)))))
                (apply g$f$5318$14xsgv g$cars$5320$14xsgv)))))))))
   (g$cons*$5267$14xsgv
     g$cons*$5358$14xsgv
     (case-lambda
       ((g$a$5323$14xsgv . g$rest$5324$14xsgv)
        ((letrec ((g$f$5325$14xsgv
                    (case-lambda
                      ((g$a$5326$14xsgv g$rest$5327$14xsgv)
                       (if (null? g$rest$5327$14xsgv)
                         g$a$5326$14xsgv
                         (cons
                           g$a$5326$14xsgv
                           (g$f$5325$14xsgv
                             (car g$rest$5327$14xsgv)
                             (cdr g$rest$5327$14xsgv))))))))
           g$f$5325$14xsgv)
         g$a$5323$14xsgv
         g$rest$5324$14xsgv))))
   (g$fold-left$5268$14xsgv
     g$fold-left$5359$14xsgv
     (case-lambda
       ((g$combine$5328$14xsgv
          g$nil$5329$14xsgv
          g$list1$5330$14xsgv
          .
          g$lists$5331$14xsgv)
        (if (null? g$list1$5330$14xsgv)
          g$nil$5329$14xsgv
          (apply
            g$fold-left$5268$14xsgv
            (g$cons*$5267$14xsgv
              g$combine$5328$14xsgv
              (apply
                g$combine$5328$14xsgv
                (g$cons*$5267$14xsgv
                  g$nil$5329$14xsgv
                  (car g$list1$5330$14xsgv)
                  (map car g$lists$5331$14xsgv)))
              (cdr g$list1$5330$14xsgv)
              (map cdr g$lists$5331$14xsgv)))))))
   (g$fold-right$5269$14xsgv
     g$fold-right$5360$14xsgv
     (case-lambda
       ((g$combine$5332$14xsgv
          g$nil$5333$14xsgv
          g$list1$5334$14xsgv
          .
          g$lists$5335$14xsgv)
        (if (null? g$list1$5334$14xsgv)
          g$nil$5333$14xsgv
          (apply
            g$combine$5332$14xsgv
            (append
              (list (car g$list1$5334$14xsgv))
              (map car g$lists$5335$14xsgv)
              (list
                (apply
                  g$fold-right$5269$14xsgv
                  (g$cons*$5267$14xsgv
                    g$combine$5332$14xsgv
                    g$nil$5333$14xsgv
                    (cdr g$list1$5334$14xsgv)
                    (map cdr g$lists$5335$14xsgv))))))))))
   (g$remove$5270$14xsgv
     g$remove$5361$14xsgv
     (case-lambda
       ((g$obj$5336$14xsgv g$list$5337$14xsgv)
        (g$remp$5256$14xsgv
          (case-lambda
            ((g$x$5338$14xsgv) (equal? g$obj$5336$14xsgv g$x$5338$14xsgv)))
          g$list$5337$14xsgv))))
   (g$remv$5271$14xsgv
     g$remv$5362$14xsgv
     (case-lambda
       ((g$obj$5339$14xsgv g$list$5340$14xsgv)
        (g$remp$5256$14xsgv
          (case-lambda
            ((g$x$5341$14xsgv) (eqv? g$obj$5339$14xsgv g$x$5341$14xsgv)))
          g$list$5340$14xsgv))))
   (g$remq$5272$14xsgv
     g$remq$5363$14xsgv
     (case-lambda
       ((g$obj$5342$14xsgv g$list$5343$14xsgv)
        (g$remp$5256$14xsgv
          (case-lambda
            ((g$x$5344$14xsgv) (eq? g$obj$5342$14xsgv g$x$5344$14xsgv)))
          g$list$5343$14xsgv)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5364$14xsgv
     g$native-endianness$5475$14xsgv
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5365$14xsgv
     g$bytevector-u16-ref$5476$14xsgv
     (case-lambda
       ((g$bytevector$5393$14xsgv g$k$5394$14xsgv g$endianness$5395$14xsgv)
        (bytevector-uint-ref
          g$bytevector$5393$14xsgv
          g$k$5394$14xsgv
          g$endianness$5395$14xsgv
          '2))))
   (g$bytevector-s16-ref$5366$14xsgv
     g$bytevector-s16-ref$5477$14xsgv
     (case-lambda
       ((g$bytevector$5396$14xsgv g$k$5397$14xsgv g$endianness$5398$14xsgv)
        (bytevector-sint-ref
          g$bytevector$5396$14xsgv
          g$k$5397$14xsgv
          g$endianness$5398$14xsgv
          '2))))
   (g$bytevector-u16-native-ref$5367$14xsgv
     g$bytevector-u16-native-ref$5478$14xsgv
     (case-lambda
       ((g$bytevector$5399$14xsgv g$k$5400$14xsgv)
        (bytevector-uint-ref
          g$bytevector$5399$14xsgv
          g$k$5400$14xsgv
          (g$native-endianness$5364$14xsgv)
          '2))))
   (g$bytevector-s16-native-ref$5368$14xsgv
     g$bytevector-s16-native-ref$5479$14xsgv
     (case-lambda
       ((g$bytevector$5401$14xsgv g$k$5402$14xsgv)
        (bytevector-sint-ref
          g$bytevector$5401$14xsgv
          g$k$5402$14xsgv
          (g$native-endianness$5364$14xsgv)
          '2))))
   (g$bytevector-u16-set!$5369$14xsgv
     g$bytevector-u16-set!$5480$14xsgv
     (case-lambda
       ((g$bytevector$5403$14xsgv
          g$k$5404$14xsgv
          g$n$5405$14xsgv
          g$endianness$5406$14xsgv)
        (bytevector-uint-set!
          g$bytevector$5403$14xsgv
          g$k$5404$14xsgv
          g$n$5405$14xsgv
          g$endianness$5406$14xsgv
          '2))))
   (g$bytevector-s16-set!$5370$14xsgv
     g$bytevector-s16-set!$5481$14xsgv
     (case-lambda
       ((g$bytevector$5407$14xsgv
          g$k$5408$14xsgv
          g$n$5409$14xsgv
          g$endianness$5410$14xsgv)
        (bytevector-sint-set!
          g$bytevector$5407$14xsgv
          g$k$5408$14xsgv
          g$n$5409$14xsgv
          g$endianness$5410$14xsgv
          '2))))
   (g$bytevector-u16-native-set!$5371$14xsgv
     g$bytevector-u16-native-set!$5482$14xsgv
     (case-lambda
       ((g$bytevector$5411$14xsgv g$k$5412$14xsgv g$n$5413$14xsgv)
        (bytevector-uint-set!
          g$bytevector$5411$14xsgv
          g$k$5412$14xsgv
          g$n$5413$14xsgv
          (g$native-endianness$5364$14xsgv)
          '2))))
   (g$bytevector-s16-native-set!$5372$14xsgv
     g$bytevector-s16-native-set!$5483$14xsgv
     (case-lambda
       ((g$bytevector$5414$14xsgv g$k$5415$14xsgv g$n$5416$14xsgv)
        (bytevector-sint-set!
          g$bytevector$5414$14xsgv
          g$k$5415$14xsgv
          g$n$5416$14xsgv
          (g$native-endianness$5364$14xsgv)
          '2))))
   (g$bytevector-u32-ref$5373$14xsgv
     g$bytevector-u32-ref$5484$14xsgv
     (case-lambda
       ((g$bytevector$5417$14xsgv g$k$5418$14xsgv g$endianness$5419$14xsgv)
        (bytevector-uint-ref
          g$bytevector$5417$14xsgv
          g$k$5418$14xsgv
          g$endianness$5419$14xsgv
          '4))))
   (g$bytevector-s32-ref$5374$14xsgv
     g$bytevector-s32-ref$5485$14xsgv
     (case-lambda
       ((g$bytevector$5420$14xsgv g$k$5421$14xsgv g$endianness$5422$14xsgv)
        (bytevector-sint-ref
          g$bytevector$5420$14xsgv
          g$k$5421$14xsgv
          g$endianness$5422$14xsgv
          '4))))
   (g$bytevector-u32-native-ref$5375$14xsgv
     g$bytevector-u32-native-ref$5486$14xsgv
     (case-lambda
       ((g$bytevector$5423$14xsgv g$k$5424$14xsgv)
        (bytevector-uint-ref
          g$bytevector$5423$14xsgv
          g$k$5424$14xsgv
          (g$native-endianness$5364$14xsgv)
          '4))))
   (g$bytevector-s32-native-ref$5376$14xsgv
     g$bytevector-s32-native-ref$5487$14xsgv
     (case-lambda
       ((g$bytevector$5425$14xsgv g$k$5426$14xsgv)
        (bytevector-sint-ref
          g$bytevector$5425$14xsgv
          g$k$5426$14xsgv
          (g$native-endianness$5364$14xsgv)
          '4))))
   (g$bytevector-u32-set!$5377$14xsgv
     g$bytevector-u32-set!$5488$14xsgv
     (case-lambda
       ((g$bytevector$5427$14xsgv
          g$k$5428$14xsgv
          g$n$5429$14xsgv
          g$endianness$5430$14xsgv)
        (bytevector-uint-set!
          g$bytevector$5427$14xsgv
          g$k$5428$14xsgv
          g$n$5429$14xsgv
          g$endianness$5430$14xsgv
          '4))))
   (g$bytevector-s32-set!$5378$14xsgv
     g$bytevector-s32-set!$5489$14xsgv
     (case-lambda
       ((g$bytevector$5431$14xsgv
          g$k$5432$14xsgv
          g$n$5433$14xsgv
          g$endianness$5434$14xsgv)
        (bytevector-sint-set!
          g$bytevector$5431$14xsgv
          g$k$5432$14xsgv
          g$n$5433$14xsgv
          g$endianness$5434$14xsgv
          '4))))
   (g$bytevector-u32-native-set!$5379$14xsgv
     g$bytevector-u32-native-set!$5490$14xsgv
     (case-lambda
       ((g$bytevector$5435$14xsgv g$k$5436$14xsgv g$n$5437$14xsgv)
        (bytevector-uint-set!
          g$bytevector$5435$14xsgv
          g$k$5436$14xsgv
          g$n$5437$14xsgv
          (g$native-endianness$5364$14xsgv)
          '4))))
   (g$bytevector-s32-native-set!$5380$14xsgv
     g$bytevector-s32-native-set!$5491$14xsgv
     (case-lambda
       ((g$bytevector$5438$14xsgv g$k$5439$14xsgv g$n$5440$14xsgv)
        (bytevector-sint-set!
          g$bytevector$5438$14xsgv
          g$k$5439$14xsgv
          g$n$5440$14xsgv
          (g$native-endianness$5364$14xsgv)
          '4))))
   (g$bytevector-u64-ref$5381$14xsgv
     g$bytevector-u64-ref$5492$14xsgv
     (case-lambda
       ((g$bytevector$5441$14xsgv g$k$5442$14xsgv g$endianness$5443$14xsgv)
        (bytevector-uint-ref
          g$bytevector$5441$14xsgv
          g$k$5442$14xsgv
          g$endianness$5443$14xsgv
          '8))))
   (g$bytevector-s64-ref$5382$14xsgv
     g$bytevector-s64-ref$5493$14xsgv
     (case-lambda
       ((g$bytevector$5444$14xsgv g$k$5445$14xsgv g$endianness$5446$14xsgv)
        (bytevector-sint-ref
          g$bytevector$5444$14xsgv
          g$k$5445$14xsgv
          g$endianness$5446$14xsgv
          '8))))
   (g$bytevector-u64-native-ref$5383$14xsgv
     g$bytevector-u64-native-ref$5494$14xsgv
     (case-lambda
       ((g$bytevector$5447$14xsgv g$k$5448$14xsgv)
        (bytevector-uint-ref
          g$bytevector$5447$14xsgv
          g$k$5448$14xsgv
          (g$native-endianness$5364$14xsgv)
          '8))))
   (g$bytevector-s64-native-ref$5384$14xsgv
     g$bytevector-s64-native-ref$5495$14xsgv
     (case-lambda
       ((g$bytevector$5449$14xsgv g$k$5450$14xsgv)
        (bytevector-sint-ref
          g$bytevector$5449$14xsgv
          g$k$5450$14xsgv
          (g$native-endianness$5364$14xsgv)
          '8))))
   (g$bytevector-u64-set!$5385$14xsgv
     g$bytevector-u64-set!$5496$14xsgv
     (case-lambda
       ((g$bytevector$5451$14xsgv
          g$k$5452$14xsgv
          g$n$5453$14xsgv
          g$endianness$5454$14xsgv)
        (bytevector-uint-set!
          g$bytevector$5451$14xsgv
          g$k$5452$14xsgv
          g$n$5453$14xsgv
          g$endianness$5454$14xsgv
          '8))))
   (g$bytevector-s64-set!$5386$14xsgv
     g$bytevector-s64-set!$5497$14xsgv
     (case-lambda
       ((g$bytevector$5455$14xsgv
          g$k$5456$14xsgv
          g$n$5457$14xsgv
          g$endianness$5458$14xsgv)
        (bytevector-sint-set!
          g$bytevector$5455$14xsgv
          g$k$5456$14xsgv
          g$n$5457$14xsgv
          g$endianness$5458$14xsgv
          '8))))
   (g$bytevector-u64-native-set!$5387$14xsgv
     g$bytevector-u64-native-set!$5498$14xsgv
     (case-lambda
       ((g$bytevector$5459$14xsgv g$k$5460$14xsgv g$n$5461$14xsgv)
        (bytevector-uint-set!
          g$bytevector$5459$14xsgv
          g$k$5460$14xsgv
          g$n$5461$14xsgv
          (g$native-endianness$5364$14xsgv)
          '8))))
   (g$bytevector-s64-native-set!$5388$14xsgv
     g$bytevector-s64-native-set!$5499$14xsgv
     (case-lambda
       ((g$bytevector$5462$14xsgv g$k$5463$14xsgv g$n$5464$14xsgv)
        (bytevector-sint-set!
          g$bytevector$5462$14xsgv
          g$k$5463$14xsgv
          g$n$5464$14xsgv
          (g$native-endianness$5364$14xsgv)
          '8))))
   (g$bytevector-ieee-single-native-ref$5389$14xsgv
     g$bytevector-ieee-single-native-ref$5500$14xsgv
     (case-lambda
       ((g$bytevector$5465$14xsgv g$k$5466$14xsgv)
        (if (not (zero? (mod g$k$5466$14xsgv '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5466$14xsgv)
          (bytevector-ieee-single-ref
            g$bytevector$5465$14xsgv
            g$k$5466$14xsgv
            (g$native-endianness$5364$14xsgv))))))
   (g$bytevector-ieee-double-native-ref$5390$14xsgv
     g$bytevector-ieee-double-native-ref$5501$14xsgv
     (case-lambda
       ((g$bytevector$5467$14xsgv g$k$5468$14xsgv)
        (if (not (zero? (mod g$k$5468$14xsgv '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5468$14xsgv)
          (bytevector-ieee-double-ref
            g$bytevector$5467$14xsgv
            g$k$5468$14xsgv
            (g$native-endianness$5364$14xsgv))))))
   (g$bytevector-ieee-single-native-set!$5391$14xsgv
     g$bytevector-ieee-single-native-set!$5502$14xsgv
     (case-lambda
       ((g$bytevector$5469$14xsgv g$k$5470$14xsgv g$x$5471$14xsgv)
        (if (not (zero? (mod g$k$5470$14xsgv '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5470$14xsgv)
          (bytevector-ieee-single-set!
            g$bytevector$5469$14xsgv
            g$k$5470$14xsgv
            g$x$5471$14xsgv
            (g$native-endianness$5364$14xsgv))))))
   (g$bytevector-ieee-double-native-set!$5392$14xsgv
     g$bytevector-ieee-double-native-set!$5503$14xsgv
     (case-lambda
       ((g$bytevector$5472$14xsgv g$k$5473$14xsgv g$x$5474$14xsgv)
        (if (not (zero? (mod g$k$5473$14xsgv '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5473$14xsgv)
          (bytevector-ieee-double-set!
            g$bytevector$5472$14xsgv
            g$k$5473$14xsgv
            g$x$5474$14xsgv
            (g$native-endianness$5364$14xsgv)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6441$5504$14xsgv
     g$6441$5599$14xsgv
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6444$14xsgv
       '#f
       '#f
       '#()))
   (g$6443$5505$14xsgv g$6443$5600$14xsgv '#f)
   (g$6442$5506$14xsgv
     g$6442$5601$14xsgv
     (make-record-constructor-descriptor
       g$6441$5504$14xsgv
       '#f
       g$6443$5505$14xsgv))
   (g$&condition?$5507$14xsgv
     g$&condition?$5602$14xsgv
     (record-predicate g$6441$5504$14xsgv))
   (g$make-&condition$5508$14xsgv
     g$make-&condition$5603$14xsgv
     (record-constructor g$6442$5506$14xsgv))
   (g$&condition-rtd$5509$14xsgv
     g$&condition-rtd$5604$14xsgv
     g$6441$5504$14xsgv)
   (g$&condition-rcd$5510$14xsgv
     g$&condition-rcd$5605$14xsgv
     g$6442$5506$14xsgv)
   (g$6457$5511$14xsgv
     g$6457$5606$14xsgv
     (make-record-type-descriptor
       '&message
       g$6441$5504$14xsgv
       'g$6460$14xsgv
       '#f
       '#f
       '#((immutable message))))
   (g$6459$5512$14xsgv g$6459$5607$14xsgv '#f)
   (g$6458$5513$14xsgv
     g$6458$5608$14xsgv
     (make-record-constructor-descriptor
       g$6457$5511$14xsgv
       g$6442$5506$14xsgv
       g$6459$5512$14xsgv))
   (g$6456$5514$14xsgv
     g$6456$5609$14xsgv
     (record-predicate g$6457$5511$14xsgv))
   (g$make-message-condition$5515$14xsgv
     g$make-message-condition$5610$14xsgv
     (record-constructor g$6458$5513$14xsgv))
   (g$6455$5516$14xsgv
     g$6455$5611$14xsgv
     (record-accessor g$6457$5511$14xsgv '0))
   (g$message-condition?$5517$14xsgv
     g$message-condition?$5612$14xsgv
     (condition-predicate g$6457$5511$14xsgv))
   (g$condition-message$5518$14xsgv
     g$condition-message$5613$14xsgv
     (condition-accessor g$6457$5511$14xsgv g$6455$5516$14xsgv))
   (g$6473$5519$14xsgv
     g$6473$5614$14xsgv
     (make-record-type-descriptor
       '&warning
       g$6441$5504$14xsgv
       'g$6476$14xsgv
       '#f
       '#f
       '#()))
   (g$6475$5520$14xsgv g$6475$5615$14xsgv '#f)
   (g$6474$5521$14xsgv
     g$6474$5616$14xsgv
     (make-record-constructor-descriptor
       g$6473$5519$14xsgv
       g$6442$5506$14xsgv
       g$6475$5520$14xsgv))
   (g$6472$5522$14xsgv
     g$6472$5617$14xsgv
     (record-predicate g$6473$5519$14xsgv))
   (g$make-warning$5523$14xsgv
     g$make-warning$5618$14xsgv
     (record-constructor g$6474$5521$14xsgv))
   (g$warning?$5524$14xsgv
     g$warning?$5619$14xsgv
     (condition-predicate g$6473$5519$14xsgv))
   (g$6487$5525$14xsgv
     g$6487$5620$14xsgv
     (make-record-type-descriptor
       '&serious
       g$6441$5504$14xsgv
       'g$6490$14xsgv
       '#f
       '#f
       '#()))
   (g$6489$5526$14xsgv g$6489$5621$14xsgv '#f)
   (g$6488$5527$14xsgv
     g$6488$5622$14xsgv
     (make-record-constructor-descriptor
       g$6487$5525$14xsgv
       g$6442$5506$14xsgv
       g$6489$5526$14xsgv))
   (g$6486$5528$14xsgv
     g$6486$5623$14xsgv
     (record-predicate g$6487$5525$14xsgv))
   (g$make-serious-condition$5529$14xsgv
     g$make-serious-condition$5624$14xsgv
     (record-constructor g$6488$5527$14xsgv))
   (g$serious-condition?$5530$14xsgv
     g$serious-condition?$5625$14xsgv
     (condition-predicate g$6487$5525$14xsgv))
   (g$6501$5531$14xsgv
     g$6501$5626$14xsgv
     (make-record-type-descriptor
       '&error
       g$6487$5525$14xsgv
       'g$6504$14xsgv
       '#f
       '#f
       '#()))
   (g$6503$5532$14xsgv g$6503$5627$14xsgv '#f)
   (g$6502$5533$14xsgv
     g$6502$5628$14xsgv
     (make-record-constructor-descriptor
       g$6501$5531$14xsgv
       g$6488$5527$14xsgv
       g$6503$5532$14xsgv))
   (g$6500$5534$14xsgv
     g$6500$5629$14xsgv
     (record-predicate g$6501$5531$14xsgv))
   (g$make-error$5535$14xsgv
     g$make-error$5630$14xsgv
     (record-constructor g$6502$5533$14xsgv))
   (g$error?$5536$14xsgv
     g$error?$5631$14xsgv
     (condition-predicate g$6501$5531$14xsgv))
   (g$6515$5537$14xsgv
     g$6515$5632$14xsgv
     (make-record-type-descriptor
       '&violation
       g$6487$5525$14xsgv
       'g$6518$14xsgv
       '#f
       '#f
       '#()))
   (g$6517$5538$14xsgv g$6517$5633$14xsgv '#f)
   (g$6516$5539$14xsgv
     g$6516$5634$14xsgv
     (make-record-constructor-descriptor
       g$6515$5537$14xsgv
       g$6488$5527$14xsgv
       g$6517$5538$14xsgv))
   (g$6514$5540$14xsgv
     g$6514$5635$14xsgv
     (record-predicate g$6515$5537$14xsgv))
   (g$make-violation$5541$14xsgv
     g$make-violation$5636$14xsgv
     (record-constructor g$6516$5539$14xsgv))
   (g$violation?$5542$14xsgv
     g$violation?$5637$14xsgv
     (condition-predicate g$6515$5537$14xsgv))
   (g$6529$5543$14xsgv
     g$6529$5638$14xsgv
     (make-record-type-descriptor
       '&assertion
       g$6515$5537$14xsgv
       'g$6532$14xsgv
       '#f
       '#f
       '#()))
   (g$6531$5544$14xsgv g$6531$5639$14xsgv '#f)
   (g$6530$5545$14xsgv
     g$6530$5640$14xsgv
     (make-record-constructor-descriptor
       g$6529$5543$14xsgv
       g$6516$5539$14xsgv
       g$6531$5544$14xsgv))
   (g$6528$5546$14xsgv
     g$6528$5641$14xsgv
     (record-predicate g$6529$5543$14xsgv))
   (g$make-assertion-violation$5547$14xsgv
     g$make-assertion-violation$5642$14xsgv
     (record-constructor g$6530$5545$14xsgv))
   (g$assertion-violation?$5548$14xsgv
     g$assertion-violation?$5643$14xsgv
     (condition-predicate g$6529$5543$14xsgv))
   (g$6544$5549$14xsgv
     g$6544$5644$14xsgv
     (make-record-type-descriptor
       '&irritants
       g$6441$5504$14xsgv
       'g$6547$14xsgv
       '#f
       '#f
       '#((immutable irritants))))
   (g$6546$5550$14xsgv g$6546$5645$14xsgv '#f)
   (g$6545$5551$14xsgv
     g$6545$5646$14xsgv
     (make-record-constructor-descriptor
       g$6544$5549$14xsgv
       g$6442$5506$14xsgv
       g$6546$5550$14xsgv))
   (g$6543$5552$14xsgv
     g$6543$5647$14xsgv
     (record-predicate g$6544$5549$14xsgv))
   (g$make-irritants-condition$5553$14xsgv
     g$make-irritants-condition$5648$14xsgv
     (record-constructor g$6545$5551$14xsgv))
   (g$6542$5554$14xsgv
     g$6542$5649$14xsgv
     (record-accessor g$6544$5549$14xsgv '0))
   (g$irritants-condition?$5555$14xsgv
     g$irritants-condition?$5650$14xsgv
     (condition-predicate g$6544$5549$14xsgv))
   (g$condition-irritants$5556$14xsgv
     g$condition-irritants$5651$14xsgv
     (condition-accessor g$6544$5549$14xsgv g$6542$5554$14xsgv))
   (g$6561$5557$14xsgv
     g$6561$5652$14xsgv
     (make-record-type-descriptor
       '&who
       g$6441$5504$14xsgv
       'g$6564$14xsgv
       '#f
       '#f
       '#((immutable who))))
   (g$6563$5558$14xsgv g$6563$5653$14xsgv '#f)
   (g$6562$5559$14xsgv
     g$6562$5654$14xsgv
     (make-record-constructor-descriptor
       g$6561$5557$14xsgv
       g$6442$5506$14xsgv
       g$6563$5558$14xsgv))
   (g$6560$5560$14xsgv
     g$6560$5655$14xsgv
     (record-predicate g$6561$5557$14xsgv))
   (g$make-who-condition$5561$14xsgv
     g$make-who-condition$5656$14xsgv
     (record-constructor g$6562$5559$14xsgv))
   (g$6559$5562$14xsgv
     g$6559$5657$14xsgv
     (record-accessor g$6561$5557$14xsgv '0))
   (g$who-condition?$5563$14xsgv
     g$who-condition?$5658$14xsgv
     (condition-predicate g$6561$5557$14xsgv))
   (g$condition-who$5564$14xsgv
     g$condition-who$5659$14xsgv
     (condition-accessor g$6561$5557$14xsgv g$6559$5562$14xsgv))
   (g$6577$5565$14xsgv
     g$6577$5660$14xsgv
     (make-record-type-descriptor
       '&non-continuable
       g$6515$5537$14xsgv
       'g$6580$14xsgv
       '#f
       '#f
       '#()))
   (g$6579$5566$14xsgv g$6579$5661$14xsgv '#f)
   (g$6578$5567$14xsgv
     g$6578$5662$14xsgv
     (make-record-constructor-descriptor
       g$6577$5565$14xsgv
       g$6516$5539$14xsgv
       g$6579$5566$14xsgv))
   (g$6576$5568$14xsgv
     g$6576$5663$14xsgv
     (record-predicate g$6577$5565$14xsgv))
   (g$make-non-continuable-violation$5569$14xsgv
     g$make-non-continuable-violation$5664$14xsgv
     (record-constructor g$6578$5567$14xsgv))
   (g$non-continuable-violation?$5570$14xsgv
     g$non-continuable-violation?$5665$14xsgv
     (condition-predicate g$6577$5565$14xsgv))
   (g$6591$5571$14xsgv
     g$6591$5666$14xsgv
     (make-record-type-descriptor
       '&implementation-restriction
       g$6515$5537$14xsgv
       'g$6594$14xsgv
       '#f
       '#f
       '#()))
   (g$6593$5572$14xsgv g$6593$5667$14xsgv '#f)
   (g$6592$5573$14xsgv
     g$6592$5668$14xsgv
     (make-record-constructor-descriptor
       g$6591$5571$14xsgv
       g$6516$5539$14xsgv
       g$6593$5572$14xsgv))
   (g$6590$5574$14xsgv
     g$6590$5669$14xsgv
     (record-predicate g$6591$5571$14xsgv))
   (g$make-implementation-restriction-violation$5575$14xsgv
     g$make-implementation-restriction-violation$5670$14xsgv
     (record-constructor g$6592$5573$14xsgv))
   (g$implementation-restriction-violation?$5576$14xsgv
     g$implementation-restriction-violation?$5671$14xsgv
     (condition-predicate g$6591$5571$14xsgv))
   (g$6605$5577$14xsgv
     g$6605$5672$14xsgv
     (make-record-type-descriptor
       '&lexical
       g$6515$5537$14xsgv
       'g$6608$14xsgv
       '#f
       '#f
       '#()))
   (g$6607$5578$14xsgv g$6607$5673$14xsgv '#f)
   (g$6606$5579$14xsgv
     g$6606$5674$14xsgv
     (make-record-constructor-descriptor
       g$6605$5577$14xsgv
       g$6516$5539$14xsgv
       g$6607$5578$14xsgv))
   (g$6604$5580$14xsgv
     g$6604$5675$14xsgv
     (record-predicate g$6605$5577$14xsgv))
   (g$make-lexical-violation$5581$14xsgv
     g$make-lexical-violation$5676$14xsgv
     (record-constructor g$6606$5579$14xsgv))
   (g$lexical-violation?$5582$14xsgv
     g$lexical-violation?$5677$14xsgv
     (condition-predicate g$6605$5577$14xsgv))
   (g$6621$5583$14xsgv
     g$6621$5678$14xsgv
     (make-record-type-descriptor
       '&syntax
       g$6515$5537$14xsgv
       'g$6624$14xsgv
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6623$5584$14xsgv g$6623$5679$14xsgv '#f)
   (g$6622$5585$14xsgv
     g$6622$5680$14xsgv
     (make-record-constructor-descriptor
       g$6621$5583$14xsgv
       g$6516$5539$14xsgv
       g$6623$5584$14xsgv))
   (g$6620$5586$14xsgv
     g$6620$5681$14xsgv
     (record-predicate g$6621$5583$14xsgv))
   (g$make-syntax-violation$5587$14xsgv
     g$make-syntax-violation$5682$14xsgv
     (record-constructor g$6622$5585$14xsgv))
   (g$6618$5588$14xsgv
     g$6618$5683$14xsgv
     (record-accessor g$6621$5583$14xsgv '0))
   (g$6619$5589$14xsgv
     g$6619$5684$14xsgv
     (record-accessor g$6621$5583$14xsgv '1))
   (g$syntax-violation?$5590$14xsgv
     g$syntax-violation?$5685$14xsgv
     (condition-predicate g$6621$5583$14xsgv))
   (g$syntax-violation-form$5591$14xsgv
     g$syntax-violation-form$5686$14xsgv
     (condition-accessor g$6621$5583$14xsgv g$6618$5588$14xsgv))
   (g$syntax-violation-subform$5592$14xsgv
     g$syntax-violation-subform$5687$14xsgv
     (condition-accessor g$6621$5583$14xsgv g$6619$5589$14xsgv))
   (g$6639$5593$14xsgv
     g$6639$5688$14xsgv
     (make-record-type-descriptor
       '&undefined
       g$6515$5537$14xsgv
       'g$6642$14xsgv
       '#f
       '#f
       '#()))
   (g$6641$5594$14xsgv g$6641$5689$14xsgv '#f)
   (g$6640$5595$14xsgv
     g$6640$5690$14xsgv
     (make-record-constructor-descriptor
       g$6639$5593$14xsgv
       g$6516$5539$14xsgv
       g$6641$5594$14xsgv))
   (g$6638$5596$14xsgv
     g$6638$5691$14xsgv
     (record-predicate g$6639$5593$14xsgv))
   (g$make-undefined-violation$5597$14xsgv
     g$make-undefined-violation$5692$14xsgv
     (record-constructor g$6640$5595$14xsgv))
   (g$undefined-violation?$5598$14xsgv
     g$undefined-violation?$5693$14xsgv
     (condition-predicate g$6639$5593$14xsgv)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5694$14xsgv
     g$append!$5700$14xsgv
     (case-lambda
       ((g$a$5695$14xsgv . g$b$5696$14xsgv)
        (if (null? g$a$5695$14xsgv)
          g$b$5696$14xsgv
          (if (null? g$b$5696$14xsgv)
            g$a$5695$14xsgv
            (begin
              ((letrec ((g$f$5697$14xsgv
                          (case-lambda
                            ((g$a$5698$14xsgv)
                             ((case-lambda
                                ((g$n$5699$14xsgv)
                                 (if (null? g$n$5699$14xsgv)
                                   (set-cdr! g$a$5698$14xsgv g$b$5696$14xsgv)
                                   (g$f$5697$14xsgv g$n$5699$14xsgv))))
                              (cdr g$a$5698$14xsgv))))))
                 g$f$5697$14xsgv)
               g$a$5695$14xsgv)
              g$a$5695$14xsgv)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5701$14xsgv
     g$sign$5719$14xsgv
     (case-lambda
       ((g$n$5707$14xsgv)
        (if (> g$n$5707$14xsgv '0) '1 (if (< g$n$5707$14xsgv '0) '-1 '0)))))
   (g$quotient$5702$14xsgv
     g$quotient$5720$14xsgv
     (case-lambda
       ((g$n1$5708$14xsgv g$n2$5709$14xsgv)
        (* (g$sign$5701$14xsgv g$n1$5708$14xsgv)
           (g$sign$5701$14xsgv g$n2$5709$14xsgv)
           (div (abs g$n1$5708$14xsgv) (abs g$n2$5709$14xsgv))))))
   (g$remainder$5703$14xsgv
     g$remainder$5721$14xsgv
     (case-lambda
       ((g$n1$5710$14xsgv g$n2$5711$14xsgv)
        (* (g$sign$5701$14xsgv g$n1$5710$14xsgv)
           (mod (abs g$n1$5710$14xsgv) (abs g$n2$5711$14xsgv))))))
   (g$modulo$5704$14xsgv
     g$modulo$5722$14xsgv
     (case-lambda
       ((g$n1$5712$14xsgv g$n2$5713$14xsgv)
        (* (g$sign$5701$14xsgv g$n2$5713$14xsgv)
           (mod (* (g$sign$5701$14xsgv g$n2$5713$14xsgv) g$n1$5712$14xsgv)
                (abs g$n2$5713$14xsgv))))))
   (g$make-promise$5705$14xsgv
     g$make-promise$5723$14xsgv
     (case-lambda
       ((g$proc$5714$14xsgv)
        ((case-lambda
           ((g$result-ready?$5715$14xsgv g$result$5716$14xsgv)
            (case-lambda
              (()
               (if g$result-ready?$5715$14xsgv
                 g$result$5716$14xsgv
                 ((case-lambda
                    ((g$x$5717$14xsgv)
                     (if g$result-ready?$5715$14xsgv
                       g$result$5716$14xsgv
                       (begin
                         (set! g$result-ready?$5715$14xsgv '#t)
                         (set! g$result$5716$14xsgv g$x$5717$14xsgv)
                         g$result$5716$14xsgv))))
                  (g$proc$5714$14xsgv)))))))
         '#f
         '#f))))
   (g$force$5706$14xsgv
     g$force$5724$14xsgv
     (case-lambda ((g$object$5718$14xsgv) (g$object$5718$14xsgv)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5725$14xsgv
     g$split$5751$14xsgv
     (case-lambda
       ((g$ls$5728$14xsgv)
        ((letrec ((g$loop$5729$14xsgv
                    (case-lambda
                      ((g$rest$5730$14xsgv
                         g$left$5731$14xsgv
                         g$right$5732$14xsgv)
                       (if (null? g$rest$5730$14xsgv)
                         (cons g$left$5731$14xsgv g$right$5732$14xsgv)
                         (if (null? (cdr g$rest$5730$14xsgv))
                           (cons
                             (cons (car g$rest$5730$14xsgv) g$left$5731$14xsgv)
                             g$right$5732$14xsgv)
                           (g$loop$5729$14xsgv
                             (g$cddr$4889$14xsgv g$rest$5730$14xsgv)
                             (cons (car g$rest$5730$14xsgv) g$left$5731$14xsgv)
                             (cons
                               (g$cadr$4887$14xsgv g$rest$5730$14xsgv)
                               g$right$5732$14xsgv))))))))
           g$loop$5729$14xsgv)
         g$ls$5728$14xsgv
         '()
         '()))))
   (g$reverse-it$5726$14xsgv
     g$reverse-it$5752$14xsgv
     (case-lambda
       ((g$head$5733$14xsgv g$tail$5734$14xsgv)
        (if (null? g$head$5733$14xsgv)
          g$tail$5734$14xsgv
          ((case-lambda
             ((g$hd$5735$14xsgv g$tl$5736$14xsgv)
              (g$reverse-it$5726$14xsgv
                g$tl$5736$14xsgv
                (cons g$hd$5735$14xsgv g$tail$5734$14xsgv))))
           (car g$head$5733$14xsgv)
           (cdr g$head$5733$14xsgv))))))
   (g$list-sort$5727$14xsgv
     g$list-sort$5753$14xsgv
     (case-lambda
       ((g$precedes?$5737$14xsgv g$ls$5738$14xsgv)
        ((case-lambda
           ((g$merge$5739$14xsgv)
            ((case-lambda
               (()
                (if (null? g$ls$5738$14xsgv)
                  '()
                  ((letrec ((g$helper$5740$14xsgv
                              (case-lambda
                                ((g$piece$5741$14xsgv)
                                 (if (null? (cdr g$piece$5741$14xsgv))
                                   g$piece$5741$14xsgv
                                   ((case-lambda
                                      ((g$parts$5742$14xsgv)
                                       (g$merge$5739$14xsgv
                                         (g$helper$5740$14xsgv
                                           (car g$parts$5742$14xsgv))
                                         (g$helper$5740$14xsgv
                                           (cdr g$parts$5742$14xsgv)))))
                                    (g$split$5725$14xsgv
                                      g$piece$5741$14xsgv)))))))
                     g$helper$5740$14xsgv)
                   g$ls$5738$14xsgv)))))))
         (case-lambda
           ((g$list-1$5743$14xsgv g$list-2$5744$14xsgv)
            ((letrec ((g$loop$5745$14xsgv
                        (case-lambda
                          ((g$source-1$5746$14xsgv
                             g$source-2$5747$14xsgv
                             g$so-far$5748$14xsgv)
                           (if (null? g$source-1$5746$14xsgv)
                             (g$reverse-it$5726$14xsgv
                               g$so-far$5748$14xsgv
                               g$source-2$5747$14xsgv)
                             (if (null? g$source-2$5747$14xsgv)
                               (g$reverse-it$5726$14xsgv
                                 g$so-far$5748$14xsgv
                                 g$source-1$5746$14xsgv)
                               ((case-lambda
                                  ((g$car-1$5749$14xsgv g$car-2$5750$14xsgv)
                                   (if (g$precedes?$5737$14xsgv
                                         g$car-2$5750$14xsgv
                                         g$car-1$5749$14xsgv)
                                     (g$loop$5745$14xsgv
                                       g$source-1$5746$14xsgv
                                       (cdr g$source-2$5747$14xsgv)
                                       (cons
                                         g$car-2$5750$14xsgv
                                         g$so-far$5748$14xsgv))
                                     (g$loop$5745$14xsgv
                                       g$source-2$5747$14xsgv
                                       (cdr g$source-1$5746$14xsgv)
                                       (cons
                                         g$car-1$5749$14xsgv
                                         g$so-far$5748$14xsgv)))))
                                (car g$source-1$5746$14xsgv)
                                (car g$source-2$5747$14xsgv))))))))
               g$loop$5745$14xsgv)
             g$list-1$5743$14xsgv
             g$list-2$5744$14xsgv
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode) () (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$5791$14xsgv
     g$bitwise-if$5838$14xsgv
     (case-lambda
       ((g$ei1$5798$14xsgv g$ei2$5799$14xsgv g$ei3$5800$14xsgv)
        (bitwise-ior
          (bitwise-and g$ei1$5798$14xsgv g$ei2$5799$14xsgv)
          (bitwise-and (bitwise-not g$ei1$5798$14xsgv) g$ei3$5800$14xsgv)))))
   (g$bitwise-copy-bit$5792$14xsgv
     g$bitwise-copy-bit$5839$14xsgv
     (case-lambda
       ((g$ei1$5801$14xsgv g$ei2$5802$14xsgv g$ei3$5803$14xsgv)
        ((case-lambda
           ((g$mask$5804$14xsgv)
            ((case-lambda
               (()
                (g$bitwise-if$5791$14xsgv
                  g$mask$5804$14xsgv
                  (g$bitwise-arithmetic-shift-left$5795$14xsgv
                    g$ei3$5803$14xsgv
                    g$ei2$5802$14xsgv)
                  g$ei1$5801$14xsgv))))))
         (g$bitwise-arithmetic-shift-left$5795$14xsgv '1 g$ei2$5802$14xsgv)))))
   (g$bitwise-bit-field$5793$14xsgv
     g$bitwise-bit-field$5840$14xsgv
     (case-lambda
       ((g$ei1$5805$14xsgv g$ei2$5806$14xsgv g$ei3$5807$14xsgv)
        ((case-lambda
           ((g$mask$5808$14xsgv)
            (g$bitwise-arithmetic-shift-right$5796$14xsgv
              (bitwise-and g$ei1$5805$14xsgv g$mask$5808$14xsgv)
              g$ei2$5806$14xsgv)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$5795$14xsgv
             '-1
             g$ei3$5807$14xsgv))))))
   (g$bitwise-copy-bit-field$5794$14xsgv
     g$bitwise-copy-bit-field$5841$14xsgv
     (case-lambda
       ((g$ei1$5809$14xsgv
          g$ei2$5810$14xsgv
          g$ei3$5811$14xsgv
          g$ei4$5812$14xsgv)
        ((case-lambda
           ((g$to$5813$14xsgv)
            ((case-lambda
               ((g$start$5814$14xsgv)
                ((case-lambda
                   ((g$end$5815$14xsgv)
                    ((case-lambda
                       ((g$from$5816$14xsgv)
                        ((case-lambda
                           ((g$mask1$5817$14xsgv)
                            ((case-lambda
                               ((g$mask2$5818$14xsgv)
                                ((case-lambda
                                   ((g$mask$5819$14xsgv)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$5791$14xsgv
                                          g$mask$5819$14xsgv
                                          (g$bitwise-arithmetic-shift-left$5795$14xsgv
                                            g$from$5816$14xsgv
                                            g$start$5814$14xsgv)
                                          g$to$5813$14xsgv))))))
                                 (bitwise-and
                                   g$mask1$5817$14xsgv
                                   g$mask2$5818$14xsgv))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$5795$14xsgv
                                 '-1
                                 g$end$5815$14xsgv)))))
                         (g$bitwise-arithmetic-shift-left$5795$14xsgv
                           '-1
                           g$start$5814$14xsgv))))
                     g$ei4$5812$14xsgv)))
                 g$ei3$5811$14xsgv)))
             g$ei2$5810$14xsgv)))
         g$ei1$5809$14xsgv))))
   (g$bitwise-arithmetic-shift-left$5795$14xsgv
     g$bitwise-arithmetic-shift-left$5842$14xsgv
     (case-lambda
       ((g$ei1$5820$14xsgv g$ei2$5821$14xsgv)
        (bitwise-arithmetic-shift g$ei1$5820$14xsgv g$ei2$5821$14xsgv))))
   (g$bitwise-arithmetic-shift-right$5796$14xsgv
     g$bitwise-arithmetic-shift-right$5843$14xsgv
     (case-lambda
       ((g$ei1$5822$14xsgv g$ei2$5823$14xsgv)
        (bitwise-arithmetic-shift g$ei1$5822$14xsgv (- g$ei2$5823$14xsgv)))))
   (g$bitwise-rotate-bit-field$5797$14xsgv
     g$bitwise-rotate-bit-field$5844$14xsgv
     (case-lambda
       ((g$ei1$5824$14xsgv
          g$ei2$5825$14xsgv
          g$ei3$5826$14xsgv
          g$ei4$5827$14xsgv)
        ((case-lambda
           ((g$n$5828$14xsgv)
            ((case-lambda
               ((g$start$5829$14xsgv)
                ((case-lambda
                   ((g$end$5830$14xsgv)
                    ((case-lambda
                       ((g$count$5831$14xsgv)
                        ((case-lambda
                           ((g$width$5832$14xsgv)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5832$14xsgv)
                                  ((case-lambda
                                     ((g$count$5833$14xsgv)
                                      ((case-lambda
                                         ((g$field0$5834$14xsgv)
                                          ((case-lambda
                                             ((g$field1$5835$14xsgv)
                                              ((case-lambda
                                                 ((g$field2$5836$14xsgv)
                                                  ((case-lambda
                                                     ((g$field$5837$14xsgv)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$5794$14xsgv
                                                            g$n$5828$14xsgv
                                                            g$start$5829$14xsgv
                                                            g$end$5830$14xsgv
                                                            g$field$5837$14xsgv))))))
                                                   (bitwise-ior
                                                     g$field1$5835$14xsgv
                                                     g$field2$5836$14xsgv))))
                                               (g$bitwise-arithmetic-shift-right$5796$14xsgv
                                                 g$field0$5834$14xsgv
                                                 (- g$width$5832$14xsgv
                                                    g$count$5833$14xsgv)))))
                                           (g$bitwise-arithmetic-shift-left$5795$14xsgv
                                             g$field0$5834$14xsgv
                                             g$count$5833$14xsgv))))
                                       (g$bitwise-bit-field$5793$14xsgv
                                         g$n$5828$14xsgv
                                         g$start$5829$14xsgv
                                         g$end$5830$14xsgv))))
                                   (mod g$count$5831$14xsgv
                                        g$width$5832$14xsgv))
                                  g$n$5828$14xsgv))))))
                         (- g$end$5830$14xsgv g$start$5829$14xsgv))))
                     g$ei4$5827$14xsgv)))
                 g$ei3$5826$14xsgv)))
             g$ei2$5825$14xsgv)))
         g$ei1$5824$14xsgv)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$5845$14xsgv
     g$fxif$5892$14xsgv
     (case-lambda
       ((g$fx1$5852$14xsgv g$fx2$5853$14xsgv g$fx3$5854$14xsgv)
        (fxior
          (fxand g$fx1$5852$14xsgv g$fx2$5853$14xsgv)
          (fxand (fxnot g$fx1$5852$14xsgv) g$fx3$5854$14xsgv)))))
   (g$fxcopy-bit$5846$14xsgv
     g$fxcopy-bit$5893$14xsgv
     (case-lambda
       ((g$fx1$5855$14xsgv g$fx2$5856$14xsgv g$fx3$5857$14xsgv)
        ((case-lambda
           ((g$mask$5858$14xsgv)
            ((case-lambda
               (()
                (g$fxif$5845$14xsgv
                  g$mask$5858$14xsgv
                  (g$fxarithmetic-shift-left$5849$14xsgv
                    g$fx3$5857$14xsgv
                    g$fx2$5856$14xsgv)
                  g$fx1$5855$14xsgv))))))
         (g$fxarithmetic-shift-left$5849$14xsgv '1 g$fx2$5856$14xsgv)))))
   (g$fxbit-field$5847$14xsgv
     g$fxbit-field$5894$14xsgv
     (case-lambda
       ((g$fx1$5859$14xsgv g$fx2$5860$14xsgv g$fx3$5861$14xsgv)
        ((case-lambda
           ((g$mask$5862$14xsgv)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$5850$14xsgv
                  (fxand g$fx1$5859$14xsgv g$mask$5862$14xsgv)
                  g$fx2$5860$14xsgv))))))
         (fxnot
           (g$fxarithmetic-shift-left$5849$14xsgv '-1 g$fx3$5861$14xsgv))))))
   (g$fxcopy-bit-field$5848$14xsgv
     g$fxcopy-bit-field$5895$14xsgv
     (case-lambda
       ((g$fx1$5863$14xsgv
          g$fx2$5864$14xsgv
          g$fx3$5865$14xsgv
          g$fx4$5866$14xsgv)
        ((case-lambda
           ((g$to$5867$14xsgv)
            ((case-lambda
               ((g$start$5868$14xsgv)
                ((case-lambda
                   ((g$end$5869$14xsgv)
                    ((case-lambda
                       ((g$from$5870$14xsgv)
                        ((case-lambda
                           ((g$mask1$5871$14xsgv)
                            ((case-lambda
                               ((g$mask2$5872$14xsgv)
                                ((case-lambda
                                   ((g$mask$5873$14xsgv)
                                    ((case-lambda
                                       (()
                                        (g$fxif$5845$14xsgv
                                          g$mask$5873$14xsgv
                                          (g$fxarithmetic-shift-left$5849$14xsgv
                                            g$from$5870$14xsgv
                                            g$start$5868$14xsgv)
                                          g$to$5867$14xsgv))))))
                                 (fxand
                                   g$mask1$5871$14xsgv
                                   g$mask2$5872$14xsgv))))
                             (fxnot
                               (g$fxarithmetic-shift-left$5849$14xsgv
                                 '-1
                                 g$end$5869$14xsgv)))))
                         (g$fxarithmetic-shift-left$5849$14xsgv
                           '-1
                           g$start$5868$14xsgv))))
                     g$fx4$5866$14xsgv)))
                 g$fx3$5865$14xsgv)))
             g$fx2$5864$14xsgv)))
         g$fx1$5863$14xsgv))))
   (g$fxarithmetic-shift-left$5849$14xsgv
     g$fxarithmetic-shift-left$5896$14xsgv
     (case-lambda
       ((g$fx1$5874$14xsgv g$fx2$5875$14xsgv)
        (fxarithmetic-shift g$fx1$5874$14xsgv g$fx2$5875$14xsgv))))
   (g$fxarithmetic-shift-right$5850$14xsgv
     g$fxarithmetic-shift-right$5897$14xsgv
     (case-lambda
       ((g$fx1$5876$14xsgv g$fx2$5877$14xsgv)
        (fxarithmetic-shift g$fx1$5876$14xsgv (- g$fx2$5877$14xsgv)))))
   (g$fxrotate-bit-field$5851$14xsgv
     g$fxrotate-bit-field$5898$14xsgv
     (case-lambda
       ((g$fx1$5878$14xsgv
          g$fx2$5879$14xsgv
          g$fx3$5880$14xsgv
          g$fx4$5881$14xsgv)
        ((case-lambda
           ((g$n$5882$14xsgv)
            ((case-lambda
               ((g$start$5883$14xsgv)
                ((case-lambda
                   ((g$end$5884$14xsgv)
                    ((case-lambda
                       ((g$count$5885$14xsgv)
                        ((case-lambda
                           ((g$width$5886$14xsgv)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5886$14xsgv)
                                  ((case-lambda
                                     ((g$count$5887$14xsgv)
                                      ((case-lambda
                                         ((g$field0$5888$14xsgv)
                                          ((case-lambda
                                             ((g$field1$5889$14xsgv)
                                              ((case-lambda
                                                 ((g$field2$5890$14xsgv)
                                                  ((case-lambda
                                                     ((g$field$5891$14xsgv)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$5848$14xsgv
                                                            g$n$5882$14xsgv
                                                            g$start$5883$14xsgv
                                                            g$end$5884$14xsgv
                                                            g$field$5891$14xsgv))))))
                                                   (fxior
                                                     g$field1$5889$14xsgv
                                                     g$field2$5890$14xsgv))))
                                               (g$fxarithmetic-shift-right$5850$14xsgv
                                                 g$field0$5888$14xsgv
                                                 (- g$width$5886$14xsgv
                                                    g$count$5887$14xsgv)))))
                                           (g$fxarithmetic-shift-left$5849$14xsgv
                                             g$field0$5888$14xsgv
                                             g$count$5887$14xsgv))))
                                       (g$fxbit-field$5847$14xsgv
                                         g$n$5882$14xsgv
                                         g$start$5883$14xsgv
                                         g$end$5884$14xsgv))))
                                   (mod g$count$5885$14xsgv
                                        g$width$5886$14xsgv))
                                  g$n$5882$14xsgv))))))
                         (- g$end$5884$14xsgv g$start$5883$14xsgv))))
                     g$fx4$5881$14xsgv)))
                 g$fx3$5880$14xsgv)))
             g$fx2$5879$14xsgv)))
         g$fx1$5878$14xsgv)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$6859$5899$14xsgv
     g$6859$5911$14xsgv
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$6862$14xsgv
       '#f
       '#f
       '#()))
   (g$6861$5900$14xsgv g$6861$5912$14xsgv '#f)
   (g$6860$5901$14xsgv
     g$6860$5913$14xsgv
     (make-record-constructor-descriptor
       g$6859$5899$14xsgv
       &implementation-restriction-rcd
       g$6861$5900$14xsgv))
   (g$6858$5902$14xsgv
     g$6858$5914$14xsgv
     (record-predicate g$6859$5899$14xsgv))
   (g$make-no-infinities-violation$5903$14xsgv
     g$make-no-infinities-violation$5915$14xsgv
     (record-constructor g$6860$5901$14xsgv))
   (g$no-infinities-violation?$5904$14xsgv
     g$no-infinities-violation?$5916$14xsgv
     (condition-predicate g$6859$5899$14xsgv))
   (g$6873$5905$14xsgv
     g$6873$5917$14xsgv
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$6876$14xsgv
       '#f
       '#f
       '#()))
   (g$6875$5906$14xsgv g$6875$5918$14xsgv '#f)
   (g$6874$5907$14xsgv
     g$6874$5919$14xsgv
     (make-record-constructor-descriptor
       g$6873$5905$14xsgv
       &implementation-restriction-rcd
       g$6875$5906$14xsgv))
   (g$6872$5908$14xsgv
     g$6872$5920$14xsgv
     (record-predicate g$6873$5905$14xsgv))
   (g$make-no-nans-violation$5909$14xsgv
     g$make-no-nans-violation$5921$14xsgv
     (record-constructor g$6874$5907$14xsgv))
   (g$no-nans-violation?$5910$14xsgv
     g$no-nans-violation?$5922$14xsgv
     (condition-predicate g$6873$5905$14xsgv)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$6888$5923$14xsgv
     g$6888$6003$14xsgv
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$6891$14xsgv
       '#f
       '#f
       '#()))
   (g$6890$5924$14xsgv g$6890$6004$14xsgv '#f)
   (g$6889$5925$14xsgv
     g$6889$6005$14xsgv
     (make-record-constructor-descriptor
       g$6888$5923$14xsgv
       &error-rcd
       g$6890$5924$14xsgv))
   (g$6887$5926$14xsgv
     g$6887$6006$14xsgv
     (record-predicate g$6888$5923$14xsgv))
   (g$make-i/o-error$5927$14xsgv
     g$make-i/o-error$6007$14xsgv
     (record-constructor g$6889$5925$14xsgv))
   (g$i/o-error?$5928$14xsgv
     g$i/o-error?$6008$14xsgv
     (condition-predicate g$6888$5923$14xsgv))
   (g$6902$5929$14xsgv
     g$6902$6009$14xsgv
     (make-record-type-descriptor
       '&i/o-read
       g$6888$5923$14xsgv
       'g$6905$14xsgv
       '#f
       '#f
       '#()))
   (g$6904$5930$14xsgv g$6904$6010$14xsgv '#f)
   (g$6903$5931$14xsgv
     g$6903$6011$14xsgv
     (make-record-constructor-descriptor
       g$6902$5929$14xsgv
       g$6889$5925$14xsgv
       g$6904$5930$14xsgv))
   (g$6901$5932$14xsgv
     g$6901$6012$14xsgv
     (record-predicate g$6902$5929$14xsgv))
   (g$make-i/o-read-error$5933$14xsgv
     g$make-i/o-read-error$6013$14xsgv
     (record-constructor g$6903$5931$14xsgv))
   (g$i/o-read-error?$5934$14xsgv
     g$i/o-read-error?$6014$14xsgv
     (condition-predicate g$6902$5929$14xsgv))
   (g$6916$5935$14xsgv
     g$6916$6015$14xsgv
     (make-record-type-descriptor
       '&i/o-write
       g$6888$5923$14xsgv
       'g$6919$14xsgv
       '#f
       '#f
       '#()))
   (g$6918$5936$14xsgv g$6918$6016$14xsgv '#f)
   (g$6917$5937$14xsgv
     g$6917$6017$14xsgv
     (make-record-constructor-descriptor
       g$6916$5935$14xsgv
       g$6889$5925$14xsgv
       g$6918$5936$14xsgv))
   (g$6915$5938$14xsgv
     g$6915$6018$14xsgv
     (record-predicate g$6916$5935$14xsgv))
   (g$make-i/o-write-error$5939$14xsgv
     g$make-i/o-write-error$6019$14xsgv
     (record-constructor g$6917$5937$14xsgv))
   (g$i/o-write-error?$5940$14xsgv
     g$i/o-write-error?$6020$14xsgv
     (condition-predicate g$6916$5935$14xsgv))
   (g$6931$5941$14xsgv
     g$6931$6021$14xsgv
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6888$5923$14xsgv
       'g$6934$14xsgv
       '#f
       '#f
       '#((immutable position))))
   (g$6933$5942$14xsgv g$6933$6022$14xsgv '#f)
   (g$6932$5943$14xsgv
     g$6932$6023$14xsgv
     (make-record-constructor-descriptor
       g$6931$5941$14xsgv
       g$6889$5925$14xsgv
       g$6933$5942$14xsgv))
   (g$6930$5944$14xsgv
     g$6930$6024$14xsgv
     (record-predicate g$6931$5941$14xsgv))
   (g$make-i/o-invalid-position-error$5945$14xsgv
     g$make-i/o-invalid-position-error$6025$14xsgv
     (record-constructor g$6932$5943$14xsgv))
   (g$6929$5946$14xsgv
     g$6929$6026$14xsgv
     (record-accessor g$6931$5941$14xsgv '0))
   (g$i/o-invalid-position-error?$5947$14xsgv
     g$i/o-invalid-position-error?$6027$14xsgv
     (condition-predicate g$6931$5941$14xsgv))
   (g$i/o-error-position$5948$14xsgv
     g$i/o-error-position$6028$14xsgv
     (condition-accessor g$6931$5941$14xsgv g$6929$5946$14xsgv))
   (g$6948$5949$14xsgv
     g$6948$6029$14xsgv
     (make-record-type-descriptor
       '&i/o-filename
       g$6888$5923$14xsgv
       'g$6951$14xsgv
       '#f
       '#f
       '#((immutable filename))))
   (g$6950$5950$14xsgv g$6950$6030$14xsgv '#f)
   (g$6949$5951$14xsgv
     g$6949$6031$14xsgv
     (make-record-constructor-descriptor
       g$6948$5949$14xsgv
       g$6889$5925$14xsgv
       g$6950$5950$14xsgv))
   (g$6947$5952$14xsgv
     g$6947$6032$14xsgv
     (record-predicate g$6948$5949$14xsgv))
   (g$make-i/o-filename-error$5953$14xsgv
     g$make-i/o-filename-error$6033$14xsgv
     (record-constructor g$6949$5951$14xsgv))
   (g$6946$5954$14xsgv
     g$6946$6034$14xsgv
     (record-accessor g$6948$5949$14xsgv '0))
   (g$i/o-filename-error?$5955$14xsgv
     g$i/o-filename-error?$6035$14xsgv
     (condition-predicate g$6948$5949$14xsgv))
   (g$i/o-error-filename$5956$14xsgv
     g$i/o-error-filename$6036$14xsgv
     (condition-accessor g$6948$5949$14xsgv g$6946$5954$14xsgv))
   (g$6964$5957$14xsgv
     g$6964$6037$14xsgv
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6948$5949$14xsgv
       'g$6967$14xsgv
       '#f
       '#f
       '#()))
   (g$6966$5958$14xsgv g$6966$6038$14xsgv '#f)
   (g$6965$5959$14xsgv
     g$6965$6039$14xsgv
     (make-record-constructor-descriptor
       g$6964$5957$14xsgv
       g$6949$5951$14xsgv
       g$6966$5958$14xsgv))
   (g$6963$5960$14xsgv
     g$6963$6040$14xsgv
     (record-predicate g$6964$5957$14xsgv))
   (g$make-i/o-file-protection-error$5961$14xsgv
     g$make-i/o-file-protection-error$6041$14xsgv
     (record-constructor g$6965$5959$14xsgv))
   (g$i/o-file-protection-error?$5962$14xsgv
     g$i/o-file-protection-error?$6042$14xsgv
     (condition-predicate g$6964$5957$14xsgv))
   (g$6978$5963$14xsgv
     g$6978$6043$14xsgv
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6964$5957$14xsgv
       'g$6981$14xsgv
       '#f
       '#f
       '#()))
   (g$6980$5964$14xsgv g$6980$6044$14xsgv '#f)
   (g$6979$5965$14xsgv
     g$6979$6045$14xsgv
     (make-record-constructor-descriptor
       g$6978$5963$14xsgv
       g$6965$5959$14xsgv
       g$6980$5964$14xsgv))
   (g$6977$5966$14xsgv
     g$6977$6046$14xsgv
     (record-predicate g$6978$5963$14xsgv))
   (g$make-i/o-file-is-read-only-error$5967$14xsgv
     g$make-i/o-file-is-read-only-error$6047$14xsgv
     (record-constructor g$6979$5965$14xsgv))
   (g$i/o-file-is-read-only-error?$5968$14xsgv
     g$i/o-file-is-read-only-error?$6048$14xsgv
     (condition-predicate g$6978$5963$14xsgv))
   (g$6992$5969$14xsgv
     g$6992$6049$14xsgv
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6948$5949$14xsgv
       'g$6995$14xsgv
       '#f
       '#f
       '#()))
   (g$6994$5970$14xsgv g$6994$6050$14xsgv '#f)
   (g$6993$5971$14xsgv
     g$6993$6051$14xsgv
     (make-record-constructor-descriptor
       g$6992$5969$14xsgv
       g$6949$5951$14xsgv
       g$6994$5970$14xsgv))
   (g$6991$5972$14xsgv
     g$6991$6052$14xsgv
     (record-predicate g$6992$5969$14xsgv))
   (g$make-i/o-file-already-exists-error$5973$14xsgv
     g$make-i/o-file-already-exists-error$6053$14xsgv
     (record-constructor g$6993$5971$14xsgv))
   (g$i/o-file-already-exists-error?$5974$14xsgv
     g$i/o-file-already-exists-error?$6054$14xsgv
     (condition-predicate g$6992$5969$14xsgv))
   (g$7006$5975$14xsgv
     g$7006$6055$14xsgv
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6948$5949$14xsgv
       'g$7009$14xsgv
       '#f
       '#f
       '#()))
   (g$7008$5976$14xsgv g$7008$6056$14xsgv '#f)
   (g$7007$5977$14xsgv
     g$7007$6057$14xsgv
     (make-record-constructor-descriptor
       g$7006$5975$14xsgv
       g$6949$5951$14xsgv
       g$7008$5976$14xsgv))
   (g$7005$5978$14xsgv
     g$7005$6058$14xsgv
     (record-predicate g$7006$5975$14xsgv))
   (g$make-i/o-file-does-not-exist-error$5979$14xsgv
     g$make-i/o-file-does-not-exist-error$6059$14xsgv
     (record-constructor g$7007$5977$14xsgv))
   (g$i/o-file-does-not-exist-error?$5980$14xsgv
     g$i/o-file-does-not-exist-error?$6060$14xsgv
     (condition-predicate g$7006$5975$14xsgv))
   (g$7021$5981$14xsgv
     g$7021$6061$14xsgv
     (make-record-type-descriptor
       '&i/o-port
       g$6888$5923$14xsgv
       'g$7024$14xsgv
       '#f
       '#f
       '#((immutable port))))
   (g$7023$5982$14xsgv g$7023$6062$14xsgv '#f)
   (g$7022$5983$14xsgv
     g$7022$6063$14xsgv
     (make-record-constructor-descriptor
       g$7021$5981$14xsgv
       g$6889$5925$14xsgv
       g$7023$5982$14xsgv))
   (g$7020$5984$14xsgv
     g$7020$6064$14xsgv
     (record-predicate g$7021$5981$14xsgv))
   (g$make-i/o-port-error$5985$14xsgv
     g$make-i/o-port-error$6065$14xsgv
     (record-constructor g$7022$5983$14xsgv))
   (g$7019$5986$14xsgv
     g$7019$6066$14xsgv
     (record-accessor g$7021$5981$14xsgv '0))
   (g$i/o-port-error?$5987$14xsgv
     g$i/o-port-error?$6067$14xsgv
     (condition-predicate g$7021$5981$14xsgv))
   (g$i/o-error-port$5988$14xsgv
     g$i/o-error-port$6068$14xsgv
     (condition-accessor g$7021$5981$14xsgv g$7019$5986$14xsgv))
   (g$7037$5989$14xsgv
     g$7037$6069$14xsgv
     (make-record-type-descriptor
       '&i/o-decoding
       g$7021$5981$14xsgv
       'g$7040$14xsgv
       '#f
       '#f
       '#()))
   (g$7039$5990$14xsgv g$7039$6070$14xsgv '#f)
   (g$7038$5991$14xsgv
     g$7038$6071$14xsgv
     (make-record-constructor-descriptor
       g$7037$5989$14xsgv
       g$7022$5983$14xsgv
       g$7039$5990$14xsgv))
   (g$7036$5992$14xsgv
     g$7036$6072$14xsgv
     (record-predicate g$7037$5989$14xsgv))
   (g$make-i/o-decoding-error$5993$14xsgv
     g$make-i/o-decoding-error$6073$14xsgv
     (record-constructor g$7038$5991$14xsgv))
   (g$i/o-decoding-error?$5994$14xsgv
     g$i/o-decoding-error?$6074$14xsgv
     (condition-predicate g$7037$5989$14xsgv))
   (g$7052$5995$14xsgv
     g$7052$6075$14xsgv
     (make-record-type-descriptor
       '&i/o-encoding
       g$7021$5981$14xsgv
       'g$7055$14xsgv
       '#f
       '#f
       '#((immutable char))))
   (g$7054$5996$14xsgv g$7054$6076$14xsgv '#f)
   (g$7053$5997$14xsgv
     g$7053$6077$14xsgv
     (make-record-constructor-descriptor
       g$7052$5995$14xsgv
       g$7022$5983$14xsgv
       g$7054$5996$14xsgv))
   (g$7051$5998$14xsgv
     g$7051$6078$14xsgv
     (record-predicate g$7052$5995$14xsgv))
   (g$make-i/o-encoding-error$5999$14xsgv
     g$make-i/o-encoding-error$6079$14xsgv
     (record-constructor g$7053$5997$14xsgv))
   (g$7050$6000$14xsgv
     g$7050$6080$14xsgv
     (record-accessor g$7052$5995$14xsgv '0))
   (g$i/o-encoding-error?$6001$14xsgv
     g$i/o-encoding-error?$6081$14xsgv
     (condition-predicate g$7052$5995$14xsgv))
   (g$i/o-encoding-error-char$6002$14xsgv
     g$i/o-encoding-error-char$6082$14xsgv
     (condition-accessor g$7052$5995$14xsgv g$7050$6000$14xsgv)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6083$14xsgv
     g$get-output-string$6091$14xsgv
     (case-lambda
       ((g$port$6087$14xsgv)
        (clr-call-internal
          'system.io.stringwriter
          'tostring
          g$port$6087$14xsgv))))
   (g$open-output-string$6084$14xsgv
     g$open-output-string$6092$14xsgv
     (case-lambda (() (clr-new-internal 'system.io.stringwriter))))
   (g$open-string-output-port$6085$14xsgv
     g$open-string-output-port$6093$14xsgv
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6088$14xsgv)
            (values
              g$p$6088$14xsgv
              (case-lambda
                (() (g$get-output-string$6083$14xsgv g$p$6088$14xsgv))))))
         (g$open-output-string$6084$14xsgv)))))
   (g$port?$6086$14xsgv
     g$port?$6094$14xsgv
     (case-lambda
       ((g$obj$6089$14xsgv)
        ((case-lambda
           ((g$t$6090$14xsgv)
            (if g$t$6090$14xsgv
              g$t$6090$14xsgv
              (begin '#f (binary-port? g$obj$6089$14xsgv)))))
         (textual-port? g$obj$6089$14xsgv))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6101$14xsgv
     g$with-input-from-file$6127$14xsgv
     (case-lambda
       ((g$filename$6105$14xsgv g$thunk$6106$14xsgv)
        ((case-lambda
           ((g$current-input-port$6109$14xsgv g$t$6110$14xsgv)
            ((case-lambda
               ((g$swap$6111$14xsgv)
                (dynamic-wind
                  g$swap$6111$14xsgv
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6106$14xsgv)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6111$14xsgv)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6112$14xsgv)
                    (begin
                      (g$current-input-port$6109$14xsgv g$t$6110$14xsgv)
                      (set! g$t$6110$14xsgv g$t$6112$14xsgv))))
                 (g$current-input-port$6109$14xsgv)))))))
         current-input-port
         (open-input-file g$filename$6105$14xsgv)))))
   (g$with-output-to-file$6102$14xsgv
     g$with-output-to-file$6128$14xsgv
     (case-lambda
       ((g$filename$6113$14xsgv g$thunk$6114$14xsgv)
        ((case-lambda
           ((g$current-output-port$6117$14xsgv g$t$6118$14xsgv)
            ((case-lambda
               ((g$swap$6119$14xsgv)
                (dynamic-wind
                  g$swap$6119$14xsgv
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6114$14xsgv)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6119$14xsgv)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6120$14xsgv)
                    (begin
                      (g$current-output-port$6117$14xsgv g$t$6118$14xsgv)
                      (set! g$t$6118$14xsgv g$t$6120$14xsgv))))
                 (g$current-output-port$6117$14xsgv)))))))
         current-output-port
         (open-output-file g$filename$6113$14xsgv)))))
   (g$call-with-input-file$6103$14xsgv
     g$call-with-input-file$6129$14xsgv
     (case-lambda
       ((g$filename$6121$14xsgv g$proc$6122$14xsgv)
        ((case-lambda
           ((g$p$6123$14xsgv)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6122$14xsgv g$p$6123$14xsgv)))
              (case-lambda (() (close-input-port g$p$6123$14xsgv))))))
         (open-input-file g$filename$6121$14xsgv)))))
   (g$call-with-output-file$6104$14xsgv
     g$call-with-output-file$6130$14xsgv
     (case-lambda
       ((g$filename$6124$14xsgv g$proc$6125$14xsgv)
        ((case-lambda
           ((g$p$6126$14xsgv)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6125$14xsgv g$p$6126$14xsgv)))
              (case-lambda (() (close-output-port g$p$6126$14xsgv))))))
         (open-output-file g$filename$6124$14xsgv))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7119$6131$14xsgv
     g$7119$6237$14xsgv
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7121$6132$14xsgv g$7121$6238$14xsgv '#f)
   (g$7120$6133$14xsgv
     g$7120$6239$14xsgv
     (make-record-constructor-descriptor
       g$7119$6131$14xsgv
       '#f
       g$7121$6132$14xsgv))
   (g$enum?$6134$14xsgv
     g$enum?$6240$14xsgv
     (record-predicate g$7119$6131$14xsgv))
   (g$make-enum$6135$14xsgv
     g$make-enum$6241$14xsgv
     (record-constructor g$7120$6133$14xsgv))
   (g$enum-value$6136$14xsgv
     g$enum-value$6242$14xsgv
     (record-accessor g$7119$6131$14xsgv '0))
   (g$enum-info$6137$14xsgv
     g$enum-info$6243$14xsgv
     (record-accessor g$7119$6131$14xsgv '1))
   (g$7132$6138$14xsgv
     g$7132$6244$14xsgv
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7134$6139$14xsgv g$7134$6245$14xsgv '#f)
   (g$7133$6140$14xsgv
     g$7133$6246$14xsgv
     (make-record-constructor-descriptor
       g$7132$6138$14xsgv
       '#f
       g$7134$6139$14xsgv))
   (g$enum-universe?$6141$14xsgv
     g$enum-universe?$6247$14xsgv
     (record-predicate g$7132$6138$14xsgv))
   (g$make-enum-universe$6142$14xsgv
     g$make-enum-universe$6248$14xsgv
     (record-constructor g$7133$6140$14xsgv))
   (g$enum-universe-id$6143$14xsgv
     g$enum-universe-id$6249$14xsgv
     (record-accessor g$7132$6138$14xsgv '0))
   (g$enum-universe-symbols$6144$14xsgv
     g$enum-universe-symbols$6250$14xsgv
     (record-accessor g$7132$6138$14xsgv '1))
   (g$enum-universe-mapping$6145$14xsgv
     g$enum-universe-mapping$6251$14xsgv
     (record-accessor g$7132$6138$14xsgv '2))
   (g$enum-universe-value$6146$14xsgv
     g$enum-universe-value$6252$14xsgv
     (record-accessor g$7132$6138$14xsgv '3))
   (g$enum-type=?$6147$14xsgv
     g$enum-type=?$6253$14xsgv
     (case-lambda
       ((g$enumset1$6167$14xsgv g$enumset2$6168$14xsgv)
        (eq? (g$enum-universe-id$6143$14xsgv
               (g$enum-info$6137$14xsgv g$enumset1$6167$14xsgv))
             (g$enum-universe-id$6143$14xsgv
               (g$enum-info$6137$14xsgv g$enumset2$6168$14xsgv))))))
   (g$get-symbols$6148$14xsgv
     g$get-symbols$6254$14xsgv
     (case-lambda
       ((g$enumset$6169$14xsgv)
        (g$enum-universe-symbols$6144$14xsgv
          (g$enum-info$6137$14xsgv g$enumset$6169$14xsgv)))))
   (g$get-value$6149$14xsgv
     g$get-value$6255$14xsgv
     (case-lambda
       ((g$enumset$6170$14xsgv g$s$6171$14xsgv)
        (g$hashtable-ref$5152$14xsgv
          (g$enum-universe-mapping$6145$14xsgv
            (g$enum-info$6137$14xsgv g$enumset$6170$14xsgv))
          g$s$6171$14xsgv
          '#f))))
   (g$assert-enum$6150$14xsgv
     g$assert-enum$6256$14xsgv
     (case-lambda
       ((g$who$6172$14xsgv g$enumset$6173$14xsgv)
        (if (not (g$enum?$6134$14xsgv g$enumset$6173$14xsgv))
          (assertion-violation
            g$who$6172$14xsgv
            '"not an enumeration"
            g$enumset$6173$14xsgv)
          (void)))))
   (g$make-info$6151$14xsgv
     g$make-info$6257$14xsgv
     (case-lambda
       ((g$symbols$6174$14xsgv)
        ((case-lambda
           ((g$ht$6175$14xsgv)
            ((letrec ((g$f$6176$14xsgv
                        (case-lambda
                          ((g$s$6177$14xsgv g$a$6178$14xsgv g$mask$6179$14xsgv)
                           (if (null? g$s$6177$14xsgv)
                             (values
                               (reverse! g$a$6178$14xsgv)
                               g$ht$6175$14xsgv
                               (- g$mask$6179$14xsgv '1))
                             ((case-lambda
                                ((g$n$6180$14xsgv)
                                 (if (symbol? g$n$6180$14xsgv)
                                   (if (g$hashtable-contains?$5155$14xsgv
                                         g$ht$6175$14xsgv
                                         g$n$6180$14xsgv)
                                     (g$f$6176$14xsgv
                                       (cdr g$s$6177$14xsgv)
                                       g$a$6178$14xsgv
                                       g$mask$6179$14xsgv)
                                     (begin
                                       (g$hashtable-set!$5153$14xsgv
                                         g$ht$6175$14xsgv
                                         g$n$6180$14xsgv
                                         g$mask$6179$14xsgv)
                                       (g$f$6176$14xsgv
                                         (cdr g$s$6177$14xsgv)
                                         (cons g$n$6180$14xsgv g$a$6178$14xsgv)
                                         (g$bitwise-arithmetic-shift-left$5842$14xsgv
                                           g$mask$6179$14xsgv
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6180$14xsgv))))
                              (car g$s$6177$14xsgv)))))))
               g$f$6176$14xsgv)
             g$symbols$6174$14xsgv
             '()
             '1)))
         (g$make-eq-hashtable$5149$14xsgv)))))
   (g$make-enumeration$6152$14xsgv
     g$make-enumeration$6258$14xsgv
     (case-lambda
       ((g$symbols$6181$14xsgv)
        (call-with-values
          (case-lambda (() (g$make-info$6151$14xsgv g$symbols$6181$14xsgv)))
          (case-lambda
            ((g$s$6185$14xsgv g$mapping$6186$14xsgv g$mask$6187$14xsgv)
             ((case-lambda
                ((g$mask$6188$14xsgv g$mapping$6189$14xsgv g$s$6190$14xsgv)
                 (g$make-enum$6135$14xsgv
                   g$mask$6188$14xsgv
                   (g$make-enum-universe$6142$14xsgv
                     (gensym)
                     g$s$6190$14xsgv
                     g$mapping$6189$14xsgv
                     g$mask$6188$14xsgv))))
              g$mask$6187$14xsgv
              g$mapping$6186$14xsgv
              g$s$6185$14xsgv)))))))
   (g$enum-set-universe$6153$14xsgv
     g$enum-set-universe$6259$14xsgv
     (case-lambda
       ((g$enumset$6191$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv 'enum-set-universe g$enumset$6191$14xsgv)
          ((case-lambda
             ((g$ei$6192$14xsgv)
              (g$make-enum$6135$14xsgv
                (g$enum-universe-value$6146$14xsgv g$ei$6192$14xsgv)
                g$ei$6192$14xsgv)))
           (g$enum-info$6137$14xsgv g$enumset$6191$14xsgv))))))
   (g$enum-set-indexer$6154$14xsgv
     g$enum-set-indexer$6260$14xsgv
     (case-lambda
       ((g$enumset$6193$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv 'enum-set-indexer g$enumset$6193$14xsgv)
          (case-lambda
            ((g$symbol$6194$14xsgv)
             (begin
               (if (not (symbol? g$symbol$6194$14xsgv))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6194$14xsgv)
                 (void))
               ((case-lambda
                  ((g$v$6195$14xsgv)
                   (if g$v$6195$14xsgv
                     (- (bitwise-length g$v$6195$14xsgv) '1)
                     '#f)))
                (g$get-value$6149$14xsgv
                  g$enumset$6193$14xsgv
                  g$symbol$6194$14xsgv)))))))))
   (g$enum-set-constructor$6155$14xsgv
     g$enum-set-constructor$6261$14xsgv
     (case-lambda
       ((g$enumset$6196$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv
            'enum-set-constructor
            g$enumset$6196$14xsgv)
          (case-lambda
            ((g$symbols$6197$14xsgv)
             ((letrec ((g$f$6198$14xsgv
                         (case-lambda
                           ((g$v$6199$14xsgv g$s$6200$14xsgv)
                            (if (null? g$s$6200$14xsgv)
                              (g$make-enum$6135$14xsgv
                                g$v$6199$14xsgv
                                (g$enum-info$6137$14xsgv g$enumset$6196$14xsgv))
                              ((case-lambda
                                 ((g$n$6201$14xsgv)
                                  (if (symbol? g$n$6201$14xsgv)
                                    ((case-lambda
                                       ((g$v*$6202$14xsgv)
                                        (if g$v*$6202$14xsgv
                                          (g$f$6198$14xsgv
                                            (bitwise-ior
                                              g$v$6199$14xsgv
                                              g$v*$6202$14xsgv)
                                            (cdr g$s$6200$14xsgv))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6201$14xsgv))))
                                     (g$get-value$6149$14xsgv
                                       g$enumset$6196$14xsgv
                                       g$n$6201$14xsgv))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6201$14xsgv))))
                               (car g$s$6200$14xsgv)))))))
                g$f$6198$14xsgv)
              '0
              g$symbols$6197$14xsgv)))))))
   (g$enum-set->list$6156$14xsgv
     g$enum-set->list$6262$14xsgv
     (case-lambda
       ((g$enumset$6203$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv 'enum-set->list g$enumset$6203$14xsgv)
          ((case-lambda
             ((g$value$6204$14xsgv)
              ((letrec ((g$f$6205$14xsgv
                          (case-lambda
                            ((g$s$6206$14xsgv g$l$6207$14xsgv)
                             (if (null? g$s$6206$14xsgv)
                               (reverse! g$l$6207$14xsgv)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6149$14xsgv
                                         g$enumset$6203$14xsgv
                                         (car g$s$6206$14xsgv))
                                       g$value$6204$14xsgv))
                                 (g$f$6205$14xsgv
                                   (cdr g$s$6206$14xsgv)
                                   g$l$6207$14xsgv)
                                 (g$f$6205$14xsgv
                                   (cdr g$s$6206$14xsgv)
                                   (cons
                                     (car g$s$6206$14xsgv)
                                     g$l$6207$14xsgv))))))))
                 g$f$6205$14xsgv)
               (g$get-symbols$6148$14xsgv g$enumset$6203$14xsgv)
               '())))
           (g$enum-value$6136$14xsgv g$enumset$6203$14xsgv))))))
   (g$enum-set-member?$6157$14xsgv
     g$enum-set-member?$6263$14xsgv
     (case-lambda
       ((g$symbol$6208$14xsgv g$enumset$6209$14xsgv)
        (begin
          (if (not (symbol? g$symbol$6208$14xsgv))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6208$14xsgv)
            (void))
          (g$assert-enum$6150$14xsgv 'enum-set-member? g$enumset$6209$14xsgv)
          ((case-lambda
             ((g$v$6210$14xsgv)
              (if g$v$6210$14xsgv
                (not (zero?
                       (bitwise-and
                         g$v$6210$14xsgv
                         (g$enum-value$6136$14xsgv g$enumset$6209$14xsgv))))
                '#f)))
           (g$get-value$6149$14xsgv
             g$enumset$6209$14xsgv
             g$symbol$6208$14xsgv))))))
   (g$enum-set-subset?$6158$14xsgv
     g$enum-set-subset?$6264$14xsgv
     (case-lambda
       ((g$enumset1$6211$14xsgv g$enumset2$6212$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv 'enum-set-subset? g$enumset1$6211$14xsgv)
          (g$assert-enum$6150$14xsgv 'enum-set-subset? g$enumset2$6212$14xsgv)
          ((case-lambda
             ((g$v1$6213$14xsgv g$v2$6214$14xsgv)
              (if (g$enum-type=?$6147$14xsgv
                    g$enumset1$6211$14xsgv
                    g$enumset2$6212$14xsgv)
                (= (bitwise-and g$v1$6213$14xsgv g$v2$6214$14xsgv)
                   g$v1$6213$14xsgv)
                ((letrec ((g$f$6215$14xsgv
                            (case-lambda
                              ((g$s$6216$14xsgv)
                               (if (null? g$s$6216$14xsgv)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6217$14xsgv g$v2*$6218$14xsgv)
                                     (if g$v2*$6218$14xsgv
                                       ((case-lambda
                                          ((g$has1$6219$14xsgv
                                             g$has2$6220$14xsgv)
                                           (if (if g$has1$6219$14xsgv
                                                 (begin
                                                   '#f
                                                   (not g$has2$6220$14xsgv))
                                                 '#f)
                                             '#f
                                             (g$f$6215$14xsgv
                                               (cdr g$s$6216$14xsgv)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6213$14xsgv
                                                 g$v1*$6217$14xsgv)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6214$14xsgv
                                                 g$v2*$6218$14xsgv))))
                                       '#f)))
                                  (g$get-value$6149$14xsgv
                                    g$enumset1$6211$14xsgv
                                    (car g$s$6216$14xsgv))
                                  (g$get-value$6149$14xsgv
                                    g$enumset2$6212$14xsgv
                                    (car g$s$6216$14xsgv))))))))
                   g$f$6215$14xsgv)
                 (g$get-symbols$6148$14xsgv g$enumset1$6211$14xsgv)))))
           (g$enum-value$6136$14xsgv g$enumset1$6211$14xsgv)
           (g$enum-value$6136$14xsgv g$enumset2$6212$14xsgv))))))
   (g$enum-set=?$6159$14xsgv
     g$enum-set=?$6265$14xsgv
     (case-lambda
       ((g$enumset1$6221$14xsgv g$enumset2$6222$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv 'enum-set=? g$enumset1$6221$14xsgv)
          (g$assert-enum$6150$14xsgv 'enum-set=? g$enumset2$6222$14xsgv)
          (if (g$enum-set-subset?$6158$14xsgv
                g$enumset1$6221$14xsgv
                g$enumset2$6222$14xsgv)
            (begin
              '#f
              (g$enum-set-subset?$6158$14xsgv
                g$enumset2$6222$14xsgv
                g$enumset1$6221$14xsgv))
            '#f)))))
   (g$enum-set-union$6160$14xsgv
     g$enum-set-union$6266$14xsgv
     (case-lambda
       ((g$enumset1$6223$14xsgv g$enumset2$6224$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv 'enum-set-union g$enumset1$6223$14xsgv)
          (g$assert-enum$6150$14xsgv 'enum-set-union g$enumset2$6224$14xsgv)
          (if (g$enum-type=?$6147$14xsgv
                g$enumset1$6223$14xsgv
                g$enumset2$6224$14xsgv)
            (g$make-enum$6135$14xsgv
              (bitwise-ior
                (g$enum-value$6136$14xsgv g$enumset1$6223$14xsgv)
                (g$enum-value$6136$14xsgv g$enumset2$6224$14xsgv))
              (g$enum-info$6137$14xsgv g$enumset1$6223$14xsgv))
            '#f)))))
   (g$enum-set-intersection$6161$14xsgv
     g$enum-set-intersection$6267$14xsgv
     (case-lambda
       ((g$enumset1$6225$14xsgv g$enumset2$6226$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv
            'enum-set-intersection
            g$enumset1$6225$14xsgv)
          (g$assert-enum$6150$14xsgv
            'enum-set-intersection
            g$enumset2$6226$14xsgv)
          (if (g$enum-type=?$6147$14xsgv
                g$enumset1$6225$14xsgv
                g$enumset2$6226$14xsgv)
            (g$make-enum$6135$14xsgv
              (bitwise-and
                (g$enum-value$6136$14xsgv g$enumset1$6225$14xsgv)
                (g$enum-value$6136$14xsgv g$enumset2$6226$14xsgv))
              (g$enum-info$6137$14xsgv g$enumset1$6225$14xsgv))
            '#f)))))
   (g$enum-set-difference$6162$14xsgv
     g$enum-set-difference$6268$14xsgv
     (case-lambda
       ((g$enumset1$6227$14xsgv g$enumset2$6228$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv
            'enum-set-difference
            g$enumset1$6227$14xsgv)
          (g$assert-enum$6150$14xsgv
            'enum-set-difference
            g$enumset2$6228$14xsgv)
          (if (g$enum-type=?$6147$14xsgv
                g$enumset1$6227$14xsgv
                g$enumset2$6228$14xsgv)
            (g$make-enum$6135$14xsgv
              (bitwise-and
                (g$enum-value$6136$14xsgv g$enumset1$6227$14xsgv)
                (bitwise-not (g$enum-value$6136$14xsgv g$enumset2$6228$14xsgv)))
              (g$enum-info$6137$14xsgv g$enumset1$6227$14xsgv))
            '#f)))))
   (g$enum-set-complement$6163$14xsgv
     g$enum-set-complement$6269$14xsgv
     (case-lambda
       ((g$enumset$6229$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv 'enum-set-complement g$enumset$6229$14xsgv)
          (g$make-enum$6135$14xsgv
            (bitwise-not (g$enum-value$6136$14xsgv g$enumset$6229$14xsgv))
            (g$enum-info$6137$14xsgv g$enumset$6229$14xsgv))))))
   (g$enum-set-projection$6164$14xsgv
     g$enum-set-projection$6270$14xsgv
     (case-lambda
       ((g$enumset1$6230$14xsgv g$enumset2$6231$14xsgv)
        (begin
          (g$assert-enum$6150$14xsgv
            'enum-set-projection
            g$enumset1$6230$14xsgv)
          (g$assert-enum$6150$14xsgv
            'enum-set-projection
            g$enumset2$6231$14xsgv)
          ((case-lambda
             ((g$v1$6232$14xsgv)
              ((letrec ((g$f$6233$14xsgv
                          (case-lambda
                            ((g$s$6234$14xsgv g$v$6235$14xsgv)
                             (if (null? g$s$6234$14xsgv)
                               (g$make-enum$6135$14xsgv
                                 g$v$6235$14xsgv
                                 (g$enum-info$6137$14xsgv
                                   g$enumset2$6231$14xsgv))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6232$14xsgv
                                       (g$get-value$6149$14xsgv
                                         g$enumset1$6230$14xsgv
                                         (car g$s$6234$14xsgv))))
                                 (g$f$6233$14xsgv
                                   (cdr g$s$6234$14xsgv)
                                   g$v$6235$14xsgv)
                                 ((case-lambda
                                    ((g$v2$6236$14xsgv)
                                     (if g$v2$6236$14xsgv
                                       (g$f$6233$14xsgv
                                         (cdr g$s$6234$14xsgv)
                                         (bitwise-ior
                                           g$v$6235$14xsgv
                                           g$v2$6236$14xsgv))
                                       (g$f$6233$14xsgv
                                         (cdr g$s$6234$14xsgv)
                                         g$v$6235$14xsgv))))
                                  (g$get-value$6149$14xsgv
                                    g$enumset2$6231$14xsgv
                                    (car g$s$6234$14xsgv)))))))))
                 g$f$6233$14xsgv)
               (g$get-symbols$6148$14xsgv g$enumset1$6230$14xsgv)
               '0)))
           (g$enum-value$6136$14xsgv g$enumset1$6230$14xsgv)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6165$14xsgv g$p$6166$14xsgv)
       (g$fprintf$6295$14xsgv
         g$p$6166$14xsgv
         '"#[enum-set ~a]"
         (g$enum-set->list$6156$14xsgv g$x$6165$14xsgv))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6271$14xsgv
     g$dofmt$6293$14xsgv
     (case-lambda
       ((g$p$6275$14xsgv g$cntl$6276$14xsgv g$args$6277$14xsgv)
        ((case-lambda
           ((g$nmax$6278$14xsgv)
            ((letrec ((g$loop$6279$14xsgv
                        (case-lambda
                          ((g$n$6280$14xsgv g$a$6281$14xsgv)
                           (if (fx<=? g$n$6280$14xsgv g$nmax$6278$14xsgv)
                             ((case-lambda
                                ((g$c$6282$14xsgv)
                                 (if (if (char=? g$c$6282$14xsgv '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6280$14xsgv
                                           g$nmax$6278$14xsgv))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6283$14xsgv)
                                       (if (memv g$t$6283$14xsgv '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6281$14xsgv)
                                             g$p$6275$14xsgv)
                                           (g$loop$6279$14xsgv
                                             (fx+ g$n$6280$14xsgv '2)
                                             (cdr g$a$6281$14xsgv)))
                                         (if (memv g$t$6283$14xsgv '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6281$14xsgv)
                                               g$p$6275$14xsgv)
                                             (g$loop$6279$14xsgv
                                               (fx+ g$n$6280$14xsgv '2)
                                               (cdr g$a$6281$14xsgv)))
                                           (if (memv g$t$6283$14xsgv '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6281$14xsgv)
                                                   '2)
                                                 g$p$6275$14xsgv)
                                               (g$loop$6279$14xsgv
                                                 (fx+ g$n$6280$14xsgv '2)
                                                 (cdr g$a$6281$14xsgv)))
                                             (if (memv g$t$6283$14xsgv '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6281$14xsgv)
                                                     '8)
                                                   g$p$6275$14xsgv)
                                                 (g$loop$6279$14xsgv
                                                   (fx+ g$n$6280$14xsgv '2)
                                                   (cdr g$a$6281$14xsgv)))
                                               (if (memv g$t$6283$14xsgv '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6281$14xsgv)
                                                       '16)
                                                     g$p$6275$14xsgv)
                                                   (g$loop$6279$14xsgv
                                                     (fx+ g$n$6280$14xsgv '2)
                                                     (cdr g$a$6281$14xsgv)))
                                                 (if (memv
                                                       g$t$6283$14xsgv
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6281$14xsgv)
                                                         '10)
                                                       g$p$6275$14xsgv)
                                                     (g$loop$6279$14xsgv
                                                       (fx+ g$n$6280$14xsgv '2)
                                                       (cdr g$a$6281$14xsgv)))
                                                   (if (memv
                                                         g$t$6283$14xsgv
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6275$14xsgv)
                                                       (g$loop$6279$14xsgv
                                                         (fx+ g$n$6280$14xsgv
                                                              '2)
                                                         g$a$6281$14xsgv))
                                                     (begin
                                                       (write-char
                                                         g$c$6282$14xsgv
                                                         g$p$6275$14xsgv)
                                                       (g$loop$6279$14xsgv
                                                         (fx+ g$n$6280$14xsgv
                                                              '1)
                                                         g$a$6281$14xsgv)))))))))))
                                    (string-ref
                                      g$cntl$6276$14xsgv
                                      (fx+ g$n$6280$14xsgv '1)))
                                   (begin
                                     (write-char
                                       g$c$6282$14xsgv
                                       g$p$6275$14xsgv)
                                     (g$loop$6279$14xsgv
                                       (fx+ g$n$6280$14xsgv '1)
                                       g$a$6281$14xsgv)))))
                              (string-ref g$cntl$6276$14xsgv g$n$6280$14xsgv))
                             (void))))))
               g$loop$6279$14xsgv)
             '0
             g$args$6277$14xsgv)))
         (fx- (string-length g$cntl$6276$14xsgv) '1)))))
   (g$printf$6272$14xsgv
     g$printf$6294$14xsgv
     (case-lambda
       ((g$control$6284$14xsgv . g$args$6285$14xsgv)
        (g$dofmt$6271$14xsgv
          (current-output-port)
          g$control$6284$14xsgv
          g$args$6285$14xsgv))))
   (g$fprintf$6273$14xsgv
     g$fprintf$6295$14xsgv
     (case-lambda
       ((g$p$6286$14xsgv g$control$6287$14xsgv . g$args$6288$14xsgv)
        (g$dofmt$6271$14xsgv
          g$p$6286$14xsgv
          g$control$6287$14xsgv
          g$args$6288$14xsgv))))
   (g$format$6274$14xsgv
     g$format$6296$14xsgv
     (case-lambda
       ((g$control$6289$14xsgv . g$args$6290$14xsgv)
        (call-with-values
          g$open-string-output-port$6093$14xsgv
          (case-lambda
            ((g$p$6291$14xsgv g$c$6292$14xsgv)
             (begin
               (g$dofmt$6271$14xsgv
                 g$p$6291$14xsgv
                 g$control$6289$14xsgv
                 g$args$6290$14xsgv)
               (g$c$6292$14xsgv)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6297$14xsgv
     g$make-traced-macro$6300$14xsgv
     (case-lambda
       ((g$name$6298$14xsgv g$x$6299$14xsgv)
        (if (procedure? g$x$6299$14xsgv)
          (make-traced-procedure
            g$name$6298$14xsgv
            g$x$6299$14xsgv
            g$syntax->datum$10940$14xsgv)
          (if (g$variable-transformer?$10765$14xsgv g$x$6299$14xsgv)
            (g$make-variable-transformer$10764$14xsgv
              (make-traced-procedure
                g$name$6298$14xsgv
                (g$variable-transformer-procedure$10766$14xsgv g$x$6299$14xsgv)
                g$syntax->datum$10940$14xsgv))
            g$x$6299$14xsgv))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6301$14xsgv
     g$read-library-source-file$6380$14xsgv
     (case-lambda
       ((g$file-name$6372$14xsgv)
        (g$with-input-from-file$6127$14xsgv
          g$file-name$6372$14xsgv
          read-annotated))))
   (g$make-parameter$6302$14xsgv
     g$make-parameter$6381$14xsgv
     (case-lambda
       ((g$x$6373$14xsgv)
        (g$make-parameter$6302$14xsgv
          g$x$6373$14xsgv
          (case-lambda ((g$x$6374$14xsgv) g$x$6374$14xsgv))))
       ((g$x$6375$14xsgv g$fender$6376$14xsgv)
        (begin
          (if (not (procedure? g$fender$6376$14xsgv))
            (g$assertion-error$10933$14xsgv
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6377$14xsgv)
              (case-lambda
                (() g$x$6377$14xsgv)
                ((g$v$6378$14xsgv)
                 (set! g$x$6377$14xsgv
                   (g$fender$6376$14xsgv g$v$6378$14xsgv))))))
           (g$fender$6376$14xsgv g$x$6375$14xsgv))))))
   (g$file-options-constructor$6370$14xsgv
     g$file-options-constructor$6382$14xsgv
     (g$make-parameter$6302$14xsgv '#f))
   (g$file-options-spec$6371$14xsgv
     g$file-options-spec$6383$14xsgv
     (case-lambda
       ((g$x$6379$14xsgv)
        ((g$file-options-constructor$6370$14xsgv) g$x$6379$14xsgv)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6580$14xsgv
     g$current-primitive-locations$6625$14xsgv
     (g$make-parameter$6381$14xsgv
       (case-lambda ((g$x$6586$14xsgv) '#f))
       (case-lambda
         ((g$p$6587$14xsgv)
          (begin
            (if (not (procedure? g$p$6587$14xsgv))
              (g$assertion-error$10933$14xsgv
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6587$14xsgv)))))
   (g$mutable?$6581$14xsgv
     g$mutable?$6626$14xsgv
     (case-lambda
       ((g$x$6588$14xsgv)
        (letrec* ((g$simple?$6589$14xsgv
                    (case-lambda
                      ((g$x$6590$14xsgv)
                       ((case-lambda
                          ((g$t$6591$14xsgv)
                           (if g$t$6591$14xsgv
                             g$t$6591$14xsgv
                             ((case-lambda
                                ((g$t$6592$14xsgv)
                                 (if g$t$6592$14xsgv
                                   g$t$6592$14xsgv
                                   ((case-lambda
                                      ((g$t$6593$14xsgv)
                                       (if g$t$6593$14xsgv
                                         g$t$6593$14xsgv
                                         ((case-lambda
                                            ((g$t$6594$14xsgv)
                                             (if g$t$6594$14xsgv
                                               g$t$6594$14xsgv
                                               ((case-lambda
                                                  ((g$t$6595$14xsgv)
                                                   (if g$t$6595$14xsgv
                                                     g$t$6595$14xsgv
                                                     ((case-lambda
                                                        ((g$t$6596$14xsgv)
                                                         (if g$t$6596$14xsgv
                                                           g$t$6596$14xsgv
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6590$14xsgv)))))
                                                      (bytevector?
                                                        g$x$6590$14xsgv)))))
                                                (string? g$x$6590$14xsgv)))))
                                          (boolean? g$x$6590$14xsgv)))))
                                    (symbol? g$x$6590$14xsgv)))))
                              (char? g$x$6590$14xsgv)))))
                        (null? g$x$6590$14xsgv))))))
          (not (g$simple?$6589$14xsgv g$x$6588$14xsgv))))))
   (g$rewriter$6582$14xsgv
     g$rewriter$6627$14xsgv
     (case-lambda
       ((g$quote-hack?$6597$14xsgv)
        (letrec* ((g$f$6598$14xsgv
                    (case-lambda
                      ((g$x$6599$14xsgv)
                       (if (pair? g$x$6599$14xsgv)
                         ((case-lambda
                            ((g$t$6600$14xsgv)
                             (if (memv g$t$6600$14xsgv '(quote))
                               (if (if g$quote-hack?$6597$14xsgv
                                     (begin
                                       '#f
                                       (g$mutable?$6581$14xsgv
                                         (g$cadr$4887$14xsgv g$x$6599$14xsgv)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6601$14xsgv)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6601$14xsgv
                                         (g$cadr$4887$14xsgv g$x$6599$14xsgv))
                                       g$g$6601$14xsgv)))
                                  (gensym))
                                 g$x$6599$14xsgv)
                               (if (memv g$t$6600$14xsgv '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6602$14xsgv)
                                           (cons
                                             (car g$x$6602$14xsgv)
                                             (map g$f$6598$14xsgv
                                                  (cdr g$x$6602$14xsgv)))))
                                        (cdr g$x$6599$14xsgv)))
                                 (if (memv g$t$6600$14xsgv '(lambda))
                                   (g$cons*$5358$14xsgv
                                     'lambda
                                     (g$cadr$4887$14xsgv g$x$6599$14xsgv)
                                     (map g$f$6598$14xsgv
                                          (g$cddr$4889$14xsgv g$x$6599$14xsgv)))
                                   (if (memv g$t$6600$14xsgv '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6603$14xsgv
                                           g$body*$6604$14xsgv)
                                         ((case-lambda
                                            ((g$lhs*$6605$14xsgv
                                               g$rhs*$6606$14xsgv)
                                             (g$cons*$5358$14xsgv
                                               'letrec
                                               (map list
                                                    g$lhs*$6605$14xsgv
                                                    (map g$f$6598$14xsgv
                                                         g$rhs*$6606$14xsgv))
                                               (map g$f$6598$14xsgv
                                                    g$body*$6604$14xsgv))))
                                          (map car g$bindings$6603$14xsgv)
                                          (map g$cadr$4887$14xsgv
                                               g$bindings$6603$14xsgv))))
                                      (g$cadr$4887$14xsgv g$x$6599$14xsgv)
                                      (g$cddr$4889$14xsgv g$x$6599$14xsgv))
                                     (if (memv g$t$6600$14xsgv '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6607$14xsgv
                                             g$body*$6608$14xsgv)
                                           ((case-lambda
                                              ((g$lhs*$6609$14xsgv
                                                 g$rhs*$6610$14xsgv)
                                               (g$cons*$5358$14xsgv
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6609$14xsgv
                                                      (map g$f$6598$14xsgv
                                                           g$rhs*$6610$14xsgv))
                                                 (map g$f$6598$14xsgv
                                                      g$body*$6608$14xsgv))))
                                            (map car g$bindings$6607$14xsgv)
                                            (map g$cadr$4887$14xsgv
                                                 g$bindings$6607$14xsgv))))
                                        (g$cadr$4887$14xsgv g$x$6599$14xsgv)
                                        (g$cddr$4889$14xsgv g$x$6599$14xsgv))
                                       (if (memv
                                             g$t$6600$14xsgv
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6611$14xsgv
                                               g$x$6612$14xsgv)
                                             ((case-lambda
                                                ((g$bindings$6613$14xsgv
                                                   g$body*$6614$14xsgv)
                                                 ((case-lambda
                                                    ((g$lhs*$6615$14xsgv
                                                       g$lhs**$6616$14xsgv
                                                       g$rhs*$6617$14xsgv)
                                                     (g$cons*$5358$14xsgv
                                                       'library-letrec*
                                                       g$name$6611$14xsgv
                                                       (map list
                                                            g$lhs*$6615$14xsgv
                                                            g$lhs**$6616$14xsgv
                                                            (map g$f$6598$14xsgv
                                                                 g$rhs*$6617$14xsgv))
                                                       (map g$f$6598$14xsgv
                                                            g$body*$6614$14xsgv))))
                                                  (map car
                                                       g$bindings$6613$14xsgv)
                                                  (map g$cadr$4887$14xsgv
                                                       g$bindings$6613$14xsgv)
                                                  (map g$caddr$4893$14xsgv
                                                       g$bindings$6613$14xsgv))))
                                              (g$cadr$4887$14xsgv
                                                g$x$6612$14xsgv)
                                              (g$cddr$4889$14xsgv
                                                g$x$6612$14xsgv))))
                                          (g$cadr$4887$14xsgv g$x$6599$14xsgv)
                                          (cdr g$x$6599$14xsgv))
                                         (if (memv g$t$6600$14xsgv '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6598$14xsgv
                                                  (cdr g$x$6599$14xsgv)))
                                           (if (memv g$t$6600$14xsgv '(set!))
                                             (list
                                               'set!
                                               (g$cadr$4887$14xsgv
                                                 g$x$6599$14xsgv)
                                               (g$f$6598$14xsgv
                                                 (g$caddr$4893$14xsgv
                                                   g$x$6599$14xsgv)))
                                             (if (memv
                                                   g$t$6600$14xsgv
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6618$14xsgv)
                                                   ((case-lambda
                                                      ((g$t$6619$14xsgv)
                                                       (if g$t$6619$14xsgv
                                                         ((case-lambda
                                                            ((g$loc$6620$14xsgv)
                                                             g$loc$6620$14xsgv))
                                                          g$t$6619$14xsgv)
                                                         g$op$6618$14xsgv)))
                                                    ((g$current-primitive-locations$6580$14xsgv)
                                                     g$op$6618$14xsgv))))
                                                (g$cadr$4887$14xsgv
                                                  g$x$6599$14xsgv))
                                               (if (memv
                                                     g$t$6600$14xsgv
                                                     '(define))
                                                 g$x$6599$14xsgv
                                                 (if (list? g$x$6599$14xsgv)
                                                   (map g$f$6598$14xsgv
                                                        g$x$6599$14xsgv)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6599$14xsgv
                                                     (list?
                                                       g$x$6599$14xsgv)))))))))))))))
                          (car g$x$6599$14xsgv))
                         g$x$6599$14xsgv)))))
          g$f$6598$14xsgv))))
   (g$expanded->core$6583$14xsgv
     g$expanded->core$6628$14xsgv
     (case-lambda
       ((g$x$6621$14xsgv) ((g$rewriter$6582$14xsgv '#t) g$x$6621$14xsgv))))
   (g$compile-core-expr$6584$14xsgv
     g$compile-core-expr$6629$14xsgv
     (case-lambda
       ((g$x$6622$14xsgv) ((g$rewriter$6582$14xsgv '#f) g$x$6622$14xsgv))))
   (g$compile-core-expr-to-port$6585$14xsgv
     g$compile-core-expr-to-port$6630$14xsgv
     (case-lambda
       ((g$x$6623$14xsgv g$p$6624$14xsgv)
        (g$pretty-print$6579$14xsgv
          ((g$rewriter$6582$14xsgv '#f) g$x$6623$14xsgv)
          g$p$6624$14xsgv)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6669$14xsgv
     g$make-collection$6873$14xsgv
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6730$14xsgv)
            (letrec* ((g$set-cons$6731$14xsgv
                        (case-lambda
                          ((g$x$6733$14xsgv g$ls$6734$14xsgv)
                           (if (memq g$x$6733$14xsgv g$ls$6734$14xsgv)
                             g$ls$6734$14xsgv
                             (cons g$x$6733$14xsgv g$ls$6734$14xsgv))))))
              (case-lambda
                (() g$set$6730$14xsgv)
                ((g$x$6732$14xsgv)
                 (set! g$set$6730$14xsgv
                   (g$set-cons$6731$14xsgv
                     g$x$6732$14xsgv
                     g$set$6730$14xsgv)))))))
         '()))))
   (g$current-library-collection$6670$14xsgv
     g$current-library-collection$6874$14xsgv
     (g$make-parameter$6381$14xsgv
       (g$make-collection$6669$14xsgv)
       (case-lambda
         ((g$x$6735$14xsgv)
          (begin
            (if (not (procedure? g$x$6735$14xsgv))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6735$14xsgv)
              (void))
            g$x$6735$14xsgv)))))
   (g$7651$6671$14xsgv
     g$7651$6875$14xsgv
     (make-record-type-descriptor
       'library
       '#f
       'g$7654$14xsgv
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7653$6672$14xsgv g$7653$6876$14xsgv '#f)
   (g$7652$6673$14xsgv
     g$7652$6877$14xsgv
     (make-record-constructor-descriptor
       g$7651$6671$14xsgv
       '#f
       g$7653$6672$14xsgv))
   (g$library?$6674$14xsgv
     g$library?$6878$14xsgv
     (record-predicate g$7651$6671$14xsgv))
   (g$make-library$6675$14xsgv
     g$make-library$6879$14xsgv
     (record-constructor g$7652$6673$14xsgv))
   (g$library-id$6676$14xsgv
     g$library-id$6880$14xsgv
     (record-accessor g$7651$6671$14xsgv '0))
   (g$library-name$6677$14xsgv
     g$library-name$6881$14xsgv
     (record-accessor g$7651$6671$14xsgv '1))
   (g$library-version$6678$14xsgv
     g$library-version$6882$14xsgv
     (record-accessor g$7651$6671$14xsgv '2))
   (g$library-imp*$6679$14xsgv
     g$library-imp*$6883$14xsgv
     (record-accessor g$7651$6671$14xsgv '3))
   (g$library-vis*$6680$14xsgv
     g$library-vis*$6884$14xsgv
     (record-accessor g$7651$6671$14xsgv '4))
   (g$library-inv*$6681$14xsgv
     g$library-inv*$6885$14xsgv
     (record-accessor g$7651$6671$14xsgv '5))
   (g$library-subst$6682$14xsgv
     g$library-subst$6886$14xsgv
     (record-accessor g$7651$6671$14xsgv '6))
   (g$library-env$6683$14xsgv
     g$library-env$6887$14xsgv
     (record-accessor g$7651$6671$14xsgv '7))
   (g$library-visit-state$6684$14xsgv
     g$library-visit-state$6888$14xsgv
     (record-accessor g$7651$6671$14xsgv '8))
   (g$library-invoke-state$6685$14xsgv
     g$library-invoke-state$6889$14xsgv
     (record-accessor g$7651$6671$14xsgv '9))
   (g$library-visit-code$6686$14xsgv
     g$library-visit-code$6890$14xsgv
     (record-accessor g$7651$6671$14xsgv '10))
   (g$library-invoke-code$6687$14xsgv
     g$library-invoke-code$6891$14xsgv
     (record-accessor g$7651$6671$14xsgv '11))
   (g$library-visible?$6688$14xsgv
     g$library-visible?$6892$14xsgv
     (record-accessor g$7651$6671$14xsgv '12))
   (g$library-source-file-name$6689$14xsgv
     g$library-source-file-name$6893$14xsgv
     (record-accessor g$7651$6671$14xsgv '13))
   (g$set-library-id!$6690$14xsgv
     g$set-library-id!$6894$14xsgv
     (record-mutator g$7651$6671$14xsgv '0))
   (g$set-library-name!$6691$14xsgv
     g$set-library-name!$6895$14xsgv
     (record-mutator g$7651$6671$14xsgv '1))
   (g$set-library-version!$6692$14xsgv
     g$set-library-version!$6896$14xsgv
     (record-mutator g$7651$6671$14xsgv '2))
   (g$set-library-imp*!$6693$14xsgv
     g$set-library-imp*!$6897$14xsgv
     (record-mutator g$7651$6671$14xsgv '3))
   (g$set-library-vis*!$6694$14xsgv
     g$set-library-vis*!$6898$14xsgv
     (record-mutator g$7651$6671$14xsgv '4))
   (g$set-library-inv*!$6695$14xsgv
     g$set-library-inv*!$6899$14xsgv
     (record-mutator g$7651$6671$14xsgv '5))
   (g$set-library-subst!$6696$14xsgv
     g$set-library-subst!$6900$14xsgv
     (record-mutator g$7651$6671$14xsgv '6))
   (g$set-library-env!$6697$14xsgv
     g$set-library-env!$6901$14xsgv
     (record-mutator g$7651$6671$14xsgv '7))
   (g$set-library-visit-state!$6698$14xsgv
     g$set-library-visit-state!$6902$14xsgv
     (record-mutator g$7651$6671$14xsgv '8))
   (g$set-library-invoke-state!$6699$14xsgv
     g$set-library-invoke-state!$6903$14xsgv
     (record-mutator g$7651$6671$14xsgv '9))
   (g$set-library-visit-code!$6700$14xsgv
     g$set-library-visit-code!$6904$14xsgv
     (record-mutator g$7651$6671$14xsgv '10))
   (g$set-library-invoke-code!$6701$14xsgv
     g$set-library-invoke-code!$6905$14xsgv
     (record-mutator g$7651$6671$14xsgv '11))
   (g$set-library-visible?!$6702$14xsgv
     g$set-library-visible?!$6906$14xsgv
     (record-mutator g$7651$6671$14xsgv '12))
   (g$set-library-source-file-name!$6703$14xsgv
     g$set-library-source-file-name!$6907$14xsgv
     (record-mutator g$7651$6671$14xsgv '13))
   (g$rp$6704$14xsgv
     g$rp$6908$14xsgv
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6736$14xsgv g$p$6737$14xsgv)
          (begin
            (if (not (g$library?$6674$14xsgv g$x$6736$14xsgv))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6296$14xsgv
                '"#<library ~s>"
                (if (null? (g$library-version$6678$14xsgv g$x$6736$14xsgv))
                  (g$library-name$6677$14xsgv g$x$6736$14xsgv)
                  (append
                    (g$library-name$6677$14xsgv g$x$6736$14xsgv)
                    (list (g$library-version$6678$14xsgv g$x$6736$14xsgv)))))
              g$p$6737$14xsgv))))))
   (g$find-dependencies$6705$14xsgv
     g$find-dependencies$6909$14xsgv
     (case-lambda
       ((g$ls$6738$14xsgv)
        (if (null? g$ls$6738$14xsgv)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6706$14xsgv
     g$find-library-by$6910$14xsgv
     (case-lambda
       ((g$pred$6739$14xsgv)
        ((letrec ((g$f$6740$14xsgv
                    (case-lambda
                      ((g$ls$6741$14xsgv)
                       (if (null? g$ls$6741$14xsgv)
                         '#f
                         (if (g$pred$6739$14xsgv (car g$ls$6741$14xsgv))
                           (car g$ls$6741$14xsgv)
                           (g$f$6740$14xsgv (cdr g$ls$6741$14xsgv))))))))
           g$f$6740$14xsgv)
         ((g$current-library-collection$6670$14xsgv))))))
   (g$library-path$6707$14xsgv
     g$library-path$6911$14xsgv
     (g$make-parameter$6381$14xsgv
       '(".")
       (case-lambda
         ((g$x$6742$14xsgv)
          (if (if (list? g$x$6742$14xsgv)
                (begin '#f (g$for-all$5356$14xsgv string? g$x$6742$14xsgv))
                '#f)
            (map (case-lambda ((g$x$6743$14xsgv) g$x$6743$14xsgv))
                 g$x$6742$14xsgv)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6742$14xsgv))))))
   (g$library-extensions$6708$14xsgv
     g$library-extensions$6912$14xsgv
     (g$make-parameter$6381$14xsgv
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6744$14xsgv)
          (if (if (list? g$x$6744$14xsgv)
                (begin '#f (g$for-all$5356$14xsgv string? g$x$6744$14xsgv))
                '#f)
            (map (case-lambda ((g$x$6745$14xsgv) g$x$6745$14xsgv))
                 g$x$6744$14xsgv)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6744$14xsgv))))))
   (g$library-name->file-name$6709$14xsgv
     g$library-name->file-name$6913$14xsgv
     (case-lambda
       ((g$x$6746$14xsgv)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6093$14xsgv)))
          (case-lambda
            ((g$p$6749$14xsgv g$extract$6750$14xsgv)
             ((case-lambda
                ((g$extract$6751$14xsgv g$p$6752$14xsgv)
                 (letrec* ((g$display-hex$6753$14xsgv
                             (case-lambda
                               ((g$n$6761$14xsgv)
                                (if (<= '0 g$n$6761$14xsgv '9)
                                  (display g$n$6761$14xsgv g$p$6752$14xsgv)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6761$14xsgv '10)))
                                    g$p$6752$14xsgv))))))
                   (begin
                     ((letrec ((g$f$6754$14xsgv
                                 (case-lambda
                                   ((g$ls$6755$14xsgv)
                                    (if (not (null? g$ls$6755$14xsgv))
                                      (begin
                                        (display '"/" g$p$6752$14xsgv)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6756$14xsgv)
                                             (if ((case-lambda
                                                    ((g$t$6757$14xsgv)
                                                     (if g$t$6757$14xsgv
                                                       g$t$6757$14xsgv
                                                       ((case-lambda
                                                          ((g$t$6758$14xsgv)
                                                           (if g$t$6758$14xsgv
                                                             g$t$6758$14xsgv
                                                             ((case-lambda
                                                                ((g$t$6759$14xsgv)
                                                                 (if g$t$6759$14xsgv
                                                                   g$t$6759$14xsgv
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$6756$14xsgv
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (char<=?
                                                                '#\0
                                                                g$c$6756$14xsgv
                                                                '#\9)))))
                                                        (char<=?
                                                          '#\A
                                                          g$c$6756$14xsgv
                                                          '#\Z)))))
                                                  (char<=?
                                                    '#\a
                                                    g$c$6756$14xsgv
                                                    '#\z))
                                               (display
                                                 g$c$6756$14xsgv
                                                 g$p$6752$14xsgv)
                                               (begin
                                                 (display '"%" g$p$6752$14xsgv)
                                                 ((case-lambda
                                                    ((g$n$6760$14xsgv)
                                                     (begin
                                                       (g$display-hex$6753$14xsgv
                                                         (g$quotient$5720$14xsgv
                                                           g$n$6760$14xsgv
                                                           '16))
                                                       (g$display-hex$6753$14xsgv
                                                         (g$remainder$5721$14xsgv
                                                           g$n$6760$14xsgv
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6756$14xsgv))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6755$14xsgv))))
                                        (g$f$6754$14xsgv
                                          (cdr g$ls$6755$14xsgv)))
                                      (void))))))
                        g$f$6754$14xsgv)
                      g$x$6746$14xsgv)
                     (g$extract$6751$14xsgv)))))
              g$extract$6750$14xsgv
              g$p$6749$14xsgv)))))))
   (g$file-locator$6710$14xsgv
     g$file-locator$6914$14xsgv
     (g$make-parameter$6381$14xsgv
       (case-lambda
         ((g$x$6762$14xsgv)
          ((case-lambda
             ((g$str$6763$14xsgv)
              ((letrec ((g$f$6764$14xsgv
                          (case-lambda
                            ((g$ls$6765$14xsgv
                               g$exts$6766$14xsgv
                               g$failed-list$6767$14xsgv)
                             (if (null? g$ls$6765$14xsgv)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$7756$6768$14xsgv
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$7759$14xsgv
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$7758$6769$14xsgv '#f)
                                             (g$7757$6770$14xsgv
                                               (make-record-constructor-descriptor
                                                 g$7756$6768$14xsgv
                                                 &condition-rcd
                                                 g$7758$6769$14xsgv))
                                             (g$7755$6771$14xsgv
                                               (record-predicate
                                                 g$7756$6768$14xsgv))
                                             (g$make-library-resolution-condition$6772$14xsgv
                                               (record-constructor
                                                 g$7757$6770$14xsgv))
                                             (g$7753$6773$14xsgv
                                               (record-accessor
                                                 g$7756$6768$14xsgv
                                                 '0))
                                             (g$7754$6774$14xsgv
                                               (record-accessor
                                                 g$7756$6768$14xsgv
                                                 '1))
                                             (g$library-resolution-condition?$6775$14xsgv
                                               (condition-predicate
                                                 g$7756$6768$14xsgv))
                                             (g$condition-library$6776$14xsgv
                                               (condition-accessor
                                                 g$7756$6768$14xsgv
                                                 g$7753$6773$14xsgv))
                                             (g$condition-files$6777$14xsgv
                                               (condition-accessor
                                                 g$7756$6768$14xsgv
                                                 g$7754$6774$14xsgv)))
                                     (raise
                                       (condition
                                         (g$make-error$5630$14xsgv)
                                         (g$make-who-condition$5656$14xsgv
                                           'expander)
                                         (g$make-message-condition$5610$14xsgv
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6772$14xsgv
                                           g$x$6762$14xsgv
                                           (reverse
                                             g$failed-list$6767$14xsgv))))))))
                               (if (null? g$exts$6766$14xsgv)
                                 (g$f$6764$14xsgv
                                   (cdr g$ls$6765$14xsgv)
                                   (g$library-extensions$6708$14xsgv)
                                   g$failed-list$6767$14xsgv)
                                 ((case-lambda
                                    ((g$name$6778$14xsgv)
                                     (if (g$file-exists?$5227$14xsgv
                                           g$name$6778$14xsgv)
                                       g$name$6778$14xsgv
                                       (g$f$6764$14xsgv
                                         g$ls$6765$14xsgv
                                         (cdr g$exts$6766$14xsgv)
                                         (cons
                                           g$name$6778$14xsgv
                                           g$failed-list$6767$14xsgv)))))
                                  (string-append
                                    (car g$ls$6765$14xsgv)
                                    g$str$6763$14xsgv
                                    (car g$exts$6766$14xsgv)))))))))
                 g$f$6764$14xsgv)
               (g$library-path$6707$14xsgv)
               (g$library-extensions$6708$14xsgv)
               '())))
           (g$library-name->file-name$6709$14xsgv g$x$6762$14xsgv))))
       (case-lambda
         ((g$f$6779$14xsgv)
          (if (procedure? g$f$6779$14xsgv)
            g$f$6779$14xsgv
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6779$14xsgv))))))
   (g$serialize-all$6711$14xsgv
     g$serialize-all$6915$14xsgv
     (case-lambda
       ((g$serialize$6780$14xsgv g$compile$6781$14xsgv)
        (letrec* ((g$library-desc$6782$14xsgv
                    (case-lambda
                      ((g$x$6784$14xsgv)
                       (list
                         (g$library-id$6676$14xsgv g$x$6784$14xsgv)
                         (g$library-name$6677$14xsgv g$x$6784$14xsgv))))))
          (for-each
            (case-lambda
              ((g$x$6783$14xsgv)
               (if (g$library-source-file-name$6689$14xsgv g$x$6783$14xsgv)
                 (g$serialize$6780$14xsgv
                   (g$library-source-file-name$6689$14xsgv g$x$6783$14xsgv)
                   (list
                     (g$library-id$6676$14xsgv g$x$6783$14xsgv)
                     (g$library-name$6677$14xsgv g$x$6783$14xsgv)
                     (g$library-version$6678$14xsgv g$x$6783$14xsgv)
                     (map g$library-desc$6782$14xsgv
                          (g$library-imp*$6679$14xsgv g$x$6783$14xsgv))
                     (map g$library-desc$6782$14xsgv
                          (g$library-vis*$6680$14xsgv g$x$6783$14xsgv))
                     (map g$library-desc$6782$14xsgv
                          (g$library-inv*$6681$14xsgv g$x$6783$14xsgv))
                     (g$library-subst$6682$14xsgv g$x$6783$14xsgv)
                     (g$library-env$6683$14xsgv g$x$6783$14xsgv)
                     (g$compile$6781$14xsgv
                       (g$library-visit-code$6686$14xsgv g$x$6783$14xsgv))
                     (g$compile$6781$14xsgv
                       (g$library-invoke-code$6687$14xsgv g$x$6783$14xsgv))
                     (g$library-visible?$6688$14xsgv g$x$6783$14xsgv)))
                 (void))))
            ((g$current-library-collection$6670$14xsgv)))))))
   (g$current-precompiled-library-loader$6712$14xsgv
     g$current-precompiled-library-loader$6916$14xsgv
     (g$make-parameter$6381$14xsgv
       (case-lambda ((g$filename$6785$14xsgv g$sk$6786$14xsgv) '#f))))
   (g$try-load-from-file$6713$14xsgv
     g$try-load-from-file$6917$14xsgv
     (case-lambda
       ((g$filename$6787$14xsgv)
        ((g$current-precompiled-library-loader$6712$14xsgv)
         g$filename$6787$14xsgv
         (case-lambda
           ((g$id$6788$14xsgv
              g$name$6789$14xsgv
              g$ver$6790$14xsgv
              g$imp*$6791$14xsgv
              g$vis*$6792$14xsgv
              g$inv*$6793$14xsgv
              g$exp-subst$6794$14xsgv
              g$exp-env$6795$14xsgv
              g$visit-proc$6796$14xsgv
              g$invoke-proc$6797$14xsgv
              g$visible?$6798$14xsgv)
            ((letrec ((g$f$6799$14xsgv
                        (case-lambda
                          ((g$deps$6800$14xsgv)
                           (if (null? g$deps$6800$14xsgv)
                             (begin
                               (g$install-library$6723$14xsgv
                                 g$id$6788$14xsgv
                                 g$name$6789$14xsgv
                                 g$ver$6790$14xsgv
                                 g$imp*$6791$14xsgv
                                 g$vis*$6792$14xsgv
                                 g$inv*$6793$14xsgv
                                 g$exp-subst$6794$14xsgv
                                 g$exp-env$6795$14xsgv
                                 g$visit-proc$6796$14xsgv
                                 g$invoke-proc$6797$14xsgv
                                 '#f
                                 '#f
                                 g$visible?$6798$14xsgv
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$6801$14xsgv)
                                 ((case-lambda
                                    ((g$label$6802$14xsgv g$dname$6803$14xsgv)
                                     ((case-lambda
                                        ((g$l$6804$14xsgv)
                                         (if (if (g$library?$6674$14xsgv
                                                   g$l$6804$14xsgv)
                                               (begin
                                                 '#f
                                                 (eq? g$label$6802$14xsgv
                                                      (g$library-id$6676$14xsgv
                                                        g$l$6804$14xsgv)))
                                               '#f)
                                           (g$f$6799$14xsgv
                                             (cdr g$deps$6800$14xsgv))
                                           (begin
                                             (g$fprintf$6295$14xsgv
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$6789$14xsgv
                                               g$dname$6803$14xsgv
                                               g$filename$6787$14xsgv)
                                             '#f))))
                                      (g$find-library-by-name$6718$14xsgv
                                        g$dname$6803$14xsgv))))
                                  (car g$d$6801$14xsgv)
                                  (g$cadr$4887$14xsgv g$d$6801$14xsgv))))
                              (car g$deps$6800$14xsgv)))))))
               g$f$6799$14xsgv)
             (append g$imp*$6791$14xsgv g$vis*$6792$14xsgv g$inv*$6793$14xsgv)))
           (g$others$6805$14xsgv '#f))))))
   (g$library-loader$6714$14xsgv
     g$library-loader$6918$14xsgv
     (g$make-parameter$6381$14xsgv
       (case-lambda
         ((g$x$6806$14xsgv)
          ((case-lambda
             ((g$file-name$6807$14xsgv)
              (if (not g$file-name$6807$14xsgv)
                (assertion-violation '#f '"cannot file library" g$x$6806$14xsgv)
                ((case-lambda
                   ((g$t$6808$14xsgv)
                    (if g$t$6808$14xsgv
                      g$t$6808$14xsgv
                      (begin
                        '#f
                        ((g$current-library-expander$6715$14xsgv)
                         (g$read-library-source-file$6380$14xsgv
                           g$file-name$6807$14xsgv)
                         g$file-name$6807$14xsgv
                         (case-lambda
                           ((g$name$6809$14xsgv)
                            (if (not (equal?
                                       g$name$6809$14xsgv
                                       g$x$6806$14xsgv))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6093$14xsgv)))
                                  (case-lambda
                                    ((g$p$6812$14xsgv g$e$6813$14xsgv)
                                     ((case-lambda
                                        ((g$e$6814$14xsgv g$p$6815$14xsgv)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$6815$14xsgv)
                                           (write
                                             g$x$6806$14xsgv
                                             g$p$6815$14xsgv)
                                           (display
                                             '" in file "
                                             g$p$6815$14xsgv)
                                           (display
                                             g$file-name$6807$14xsgv
                                             g$p$6815$14xsgv)
                                           (display '", found " g$p$6815$14xsgv)
                                           (write
                                             g$name$6809$14xsgv
                                             g$p$6815$14xsgv)
                                           (display '" instead" g$p$6815$14xsgv)
                                           (g$e$6814$14xsgv))))
                                      g$e$6813$14xsgv
                                      g$p$6812$14xsgv)))))
                              (void)))))))))
                 (g$try-load-from-file$6713$14xsgv g$file-name$6807$14xsgv)))))
           ((g$file-locator$6710$14xsgv) g$x$6806$14xsgv))))
       (case-lambda
         ((g$f$6816$14xsgv)
          (if (procedure? g$f$6816$14xsgv)
            g$f$6816$14xsgv
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$6816$14xsgv))))))
   (g$current-library-expander$6715$14xsgv
     g$current-library-expander$6919$14xsgv
     (g$make-parameter$6381$14xsgv
       (case-lambda
         ((g$x$6817$14xsgv)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$6818$14xsgv)
          (if (procedure? g$f$6818$14xsgv)
            g$f$6818$14xsgv
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$6818$14xsgv))))))
   (g$external-pending-libraries$6716$14xsgv
     g$external-pending-libraries$6920$14xsgv
     (g$make-parameter$6381$14xsgv '()))
   (g$find-external-library$6717$14xsgv
     g$find-external-library$6921$14xsgv
     (case-lambda
       ((g$name$6819$14xsgv)
        (begin
          (if (g$member$5352$14xsgv
                g$name$6819$14xsgv
                (g$external-pending-libraries$6716$14xsgv))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$6819$14xsgv)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$6822$14xsgv
                g$external-pending-libraries$6823$14xsgv)
              ((case-lambda
                 ((g$swap$6824$14xsgv)
                  (dynamic-wind
                    g$swap$6824$14xsgv
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6714$14xsgv) g$name$6819$14xsgv)
                         ((case-lambda
                            ((g$t$6825$14xsgv)
                             (if g$t$6825$14xsgv
                               g$t$6825$14xsgv
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$6819$14xsgv)))))
                          (g$find-library-by$6706$14xsgv
                            (case-lambda
                              ((g$x$6826$14xsgv)
                               (equal?
                                 (g$library-name$6677$14xsgv g$x$6826$14xsgv)
                                 g$name$6819$14xsgv))))))))
                    g$swap$6824$14xsgv)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$6827$14xsgv)
                      (begin
                        (g$external-pending-libraries$6822$14xsgv
                          g$external-pending-libraries$6823$14xsgv)
                        (set! g$external-pending-libraries$6823$14xsgv
                          g$t$6827$14xsgv))))
                   (g$external-pending-libraries$6822$14xsgv)))))))
           g$external-pending-libraries$6716$14xsgv
           (cons
             g$name$6819$14xsgv
             (g$external-pending-libraries$6716$14xsgv)))))))
   (g$find-library-by-name$6718$14xsgv
     g$find-library-by-name$6922$14xsgv
     (case-lambda
       ((g$name$6828$14xsgv)
        ((case-lambda
           ((g$t$6829$14xsgv)
            (if g$t$6829$14xsgv
              g$t$6829$14xsgv
              (begin
                '#f
                (g$find-external-library$6717$14xsgv g$name$6828$14xsgv)))))
         (g$find-library-by$6706$14xsgv
           (case-lambda
             ((g$x$6830$14xsgv)
              (equal?
                (g$library-name$6677$14xsgv g$x$6830$14xsgv)
                g$name$6828$14xsgv))))))))
   (g$library-exists?$6719$14xsgv
     g$library-exists?$6923$14xsgv
     (case-lambda
       ((g$name$6831$14xsgv)
        (if (g$find-library-by$6706$14xsgv
              (case-lambda
                ((g$x$6832$14xsgv)
                 (equal?
                   (g$library-name$6677$14xsgv g$x$6832$14xsgv)
                   g$name$6831$14xsgv))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6720$14xsgv
     g$find-library-by-spec/die$6924$14xsgv
     (case-lambda
       ((g$spec$6833$14xsgv)
        ((case-lambda
           ((g$id$6834$14xsgv)
            ((case-lambda
               ((g$t$6835$14xsgv)
                (if g$t$6835$14xsgv
                  g$t$6835$14xsgv
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$6833$14xsgv)))))
             (g$find-library-by$6706$14xsgv
               (case-lambda
                 ((g$x$6836$14xsgv)
                  (eq? g$id$6834$14xsgv
                       (g$library-id$6676$14xsgv g$x$6836$14xsgv))))))))
         (car g$spec$6833$14xsgv)))))
   (g$label->binding-table$6721$14xsgv
     g$label->binding-table$6925$14xsgv
     (g$make-eq-hashtable$5149$14xsgv))
   (g$install-library-record$6722$14xsgv
     g$install-library-record$6926$14xsgv
     (case-lambda
       ((g$lib$6837$14xsgv)
        (begin
          ((case-lambda
             ((g$exp-env$6838$14xsgv)
              (for-each
                (case-lambda
                  ((g$x$6839$14xsgv)
                   ((case-lambda
                      ((g$label$6840$14xsgv g$binding$6841$14xsgv)
                       ((case-lambda
                          ((g$binding$6842$14xsgv)
                           (g$hashtable-set!$5153$14xsgv
                             g$label->binding-table$6721$14xsgv
                             g$label$6840$14xsgv
                             g$binding$6842$14xsgv)))
                        ((case-lambda
                           ((g$t$6843$14xsgv)
                            (if (memv g$t$6843$14xsgv '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$6837$14xsgv
                                  (cdr g$binding$6841$14xsgv)))
                              (if (memv g$t$6843$14xsgv '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$6837$14xsgv
                                    (cdr g$binding$6841$14xsgv)))
                                (if (memv g$t$6843$14xsgv '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$6837$14xsgv
                                      (cdr g$binding$6841$14xsgv)))
                                  g$binding$6841$14xsgv)))))
                         (car g$binding$6841$14xsgv)))))
                    (car g$x$6839$14xsgv)
                    (cdr g$x$6839$14xsgv))))
                g$exp-env$6838$14xsgv)))
           (g$library-env$6683$14xsgv g$lib$6837$14xsgv))
          ((g$current-library-collection$6670$14xsgv) g$lib$6837$14xsgv)))))
   (g$install-library$6723$14xsgv
     g$install-library$6927$14xsgv
     (case-lambda
       ((g$id$6844$14xsgv
          g$name$6845$14xsgv
          g$ver$6846$14xsgv
          g$imp*$6847$14xsgv
          g$vis*$6848$14xsgv
          g$inv*$6849$14xsgv
          g$exp-subst$6850$14xsgv
          g$exp-env$6851$14xsgv
          g$visit-proc$6852$14xsgv
          g$invoke-proc$6853$14xsgv
          g$visit-code$6854$14xsgv
          g$invoke-code$6855$14xsgv
          g$visible?$6856$14xsgv
          g$source-file-name$6857$14xsgv)
        ((case-lambda
           ((g$imp-lib*$6858$14xsgv
              g$vis-lib*$6859$14xsgv
              g$inv-lib*$6860$14xsgv)
            (begin
              (if (not (if (symbol? g$id$6844$14xsgv)
                         (if (list? g$name$6845$14xsgv)
                           (begin '#f (list? g$ver$6846$14xsgv))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$6844$14xsgv
                  g$name$6845$14xsgv
                  g$ver$6846$14xsgv)
                (void))
              (if (g$library-exists?$6719$14xsgv g$name$6845$14xsgv)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$6845$14xsgv)
                (void))
              ((case-lambda
                 ((g$lib$6861$14xsgv)
                  (g$install-library-record$6722$14xsgv g$lib$6861$14xsgv)))
               (g$make-library$6675$14xsgv
                 g$id$6844$14xsgv
                 g$name$6845$14xsgv
                 g$ver$6846$14xsgv
                 g$imp-lib*$6858$14xsgv
                 g$vis-lib*$6859$14xsgv
                 g$inv-lib*$6860$14xsgv
                 g$exp-subst$6850$14xsgv
                 g$exp-env$6851$14xsgv
                 g$visit-proc$6852$14xsgv
                 g$invoke-proc$6853$14xsgv
                 g$visit-code$6854$14xsgv
                 g$invoke-code$6855$14xsgv
                 g$visible?$6856$14xsgv
                 g$source-file-name$6857$14xsgv)))))
         (map g$find-library-by-spec/die$6720$14xsgv g$imp*$6847$14xsgv)
         (map g$find-library-by-spec/die$6720$14xsgv g$vis*$6848$14xsgv)
         (map g$find-library-by-spec/die$6720$14xsgv g$inv*$6849$14xsgv)))))
   (g$imported-label->binding$6724$14xsgv
     g$imported-label->binding$6928$14xsgv
     (case-lambda
       ((g$lab$6862$14xsgv)
        (g$hashtable-ref$5152$14xsgv
          g$label->binding-table$6721$14xsgv
          g$lab$6862$14xsgv
          '#f))))
   (g$invoke-library$6725$14xsgv
     g$invoke-library$6929$14xsgv
     (case-lambda
       ((g$lib$6863$14xsgv)
        ((case-lambda
           ((g$invoke$6864$14xsgv)
            (if (procedure? g$invoke$6864$14xsgv)
              (begin
                (g$set-library-invoke-state!$6699$14xsgv
                  g$lib$6863$14xsgv
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$6863$14xsgv))))
                (for-each
                  g$invoke-library$6725$14xsgv
                  (g$library-inv*$6681$14xsgv g$lib$6863$14xsgv))
                (g$set-library-invoke-state!$6699$14xsgv
                  g$lib$6863$14xsgv
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$6863$14xsgv))))
                (g$invoke$6864$14xsgv)
                (g$set-library-invoke-state!$6699$14xsgv g$lib$6863$14xsgv '#t))
              (void))))
         (g$library-invoke-state$6685$14xsgv g$lib$6863$14xsgv)))))
   (g$visit-library$6726$14xsgv
     g$visit-library$6930$14xsgv
     (case-lambda
       ((g$lib$6865$14xsgv)
        ((case-lambda
           ((g$visit$6866$14xsgv)
            (if (procedure? g$visit$6866$14xsgv)
              (begin
                (g$set-library-visit-state!$6698$14xsgv
                  g$lib$6865$14xsgv
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$6865$14xsgv))))
                (for-each
                  g$invoke-library$6725$14xsgv
                  (g$library-vis*$6680$14xsgv g$lib$6865$14xsgv))
                (g$set-library-visit-state!$6698$14xsgv
                  g$lib$6865$14xsgv
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$6865$14xsgv))))
                (g$visit$6866$14xsgv)
                (g$set-library-visit-state!$6698$14xsgv g$lib$6865$14xsgv '#t))
              (void))))
         (g$library-visit-state$6684$14xsgv g$lib$6865$14xsgv)))))
   (g$invoke-library-by-spec$6727$14xsgv
     g$invoke-library-by-spec$6931$14xsgv
     (case-lambda
       ((g$spec$6867$14xsgv)
        (g$invoke-library$6725$14xsgv
          (g$find-library-by-spec/die$6720$14xsgv g$spec$6867$14xsgv)))))
   (g$installed-libraries$6728$14xsgv
     g$installed-libraries$6932$14xsgv
     (case-lambda
       ((g$all?$6868$14xsgv)
        ((letrec ((g$f$6869$14xsgv
                    (case-lambda
                      ((g$ls$6870$14xsgv)
                       (if (null? g$ls$6870$14xsgv)
                         '()
                         (if ((case-lambda
                                ((g$t$6871$14xsgv)
                                 (if g$t$6871$14xsgv
                                   g$t$6871$14xsgv
                                   (begin
                                     '#f
                                     (g$library-visible?$6688$14xsgv
                                       (car g$ls$6870$14xsgv))))))
                              g$all?$6868$14xsgv)
                           (cons
                             (car g$ls$6870$14xsgv)
                             (g$f$6869$14xsgv (cdr g$ls$6870$14xsgv)))
                           (g$f$6869$14xsgv (cdr g$ls$6870$14xsgv))))))))
           g$f$6869$14xsgv)
         ((g$current-library-collection$6670$14xsgv))))
       (() (g$installed-libraries$6728$14xsgv '#f))))
   (g$library-spec$6729$14xsgv
     g$library-spec$6933$14xsgv
     (case-lambda
       ((g$x$6872$14xsgv)
        (begin
          (if (not (g$library?$6674$14xsgv g$x$6872$14xsgv))
            (assertion-violation 'library-spec '"not a library" g$x$6872$14xsgv)
            (void))
          (list
            (g$library-id$6676$14xsgv g$x$6872$14xsgv)
            (g$library-name$6677$14xsgv g$x$6872$14xsgv)
            (g$library-version$6678$14xsgv g$x$6872$14xsgv)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$6934$14xsgv
     g$build-global-define$7044$14xsgv
     (case-lambda ((g$x$7015$14xsgv) (g$build-void$7011$14xsgv))))
   (g$build-lambda$6983$14xsgv
     g$build-lambda$7045$14xsgv
     (case-lambda
       ((g$ae$7016$14xsgv g$vars$7017$14xsgv g$exp$7018$14xsgv)
        (list 'case-lambda (list g$vars$7017$14xsgv g$exp$7018$14xsgv)))))
   (g$build-case-lambda$6984$14xsgv
     g$build-case-lambda$7046$14xsgv
     (case-lambda
       ((g$ae$7019$14xsgv g$vars*$7020$14xsgv g$exp*$7021$14xsgv)
        (cons 'case-lambda (map list g$vars*$7020$14xsgv g$exp*$7021$14xsgv)))))
   (g$build-let$6985$14xsgv
     g$build-let$7047$14xsgv
     (case-lambda
       ((g$ae$7022$14xsgv
          g$lhs*$7023$14xsgv
          g$rhs*$7024$14xsgv
          g$body$7025$14xsgv)
        (cons
          (g$build-lambda$6983$14xsgv
            g$ae$7022$14xsgv
            g$lhs*$7023$14xsgv
            g$body$7025$14xsgv)
          g$rhs*$7024$14xsgv))))
   (g$build-sequence$7010$14xsgv
     g$build-sequence$7048$14xsgv
     (case-lambda
       ((g$ae$7026$14xsgv g$exps$7027$14xsgv)
        ((letrec ((g$loop$7028$14xsgv
                    (case-lambda
                      ((g$exps$7029$14xsgv)
                       (if (null? (cdr g$exps$7029$14xsgv))
                         (car g$exps$7029$14xsgv)
                         (if (equal?
                               (car g$exps$7029$14xsgv)
                               (g$build-void$7011$14xsgv))
                           (g$loop$7028$14xsgv (cdr g$exps$7029$14xsgv))
                           (cons 'begin g$exps$7029$14xsgv)))))))
           g$loop$7028$14xsgv)
         g$exps$7027$14xsgv))))
   (g$build-void$7011$14xsgv
     g$build-void$7049$14xsgv
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7012$14xsgv
     g$build-letrec$7050$14xsgv
     (case-lambda
       ((g$ae$7030$14xsgv
          g$vars$7031$14xsgv
          g$val-exps$7032$14xsgv
          g$body-exp$7033$14xsgv)
        (if (null? g$vars$7031$14xsgv)
          g$body-exp$7033$14xsgv
          (list
            'letrec
            (map list g$vars$7031$14xsgv g$val-exps$7032$14xsgv)
            g$body-exp$7033$14xsgv)))))
   (g$build-letrec*$7013$14xsgv
     g$build-letrec*$7051$14xsgv
     (case-lambda
       ((g$ae$7034$14xsgv
          g$vars$7035$14xsgv
          g$val-exps$7036$14xsgv
          g$body-exp$7037$14xsgv)
        (if (null? g$vars$7035$14xsgv)
          g$body-exp$7037$14xsgv
          (list
            'letrec*
            (map list g$vars$7035$14xsgv g$val-exps$7036$14xsgv)
            g$body-exp$7037$14xsgv)))))
   (g$build-library-letrec*$7014$14xsgv
     g$build-library-letrec*$7052$14xsgv
     (case-lambda
       ((g$ae$7038$14xsgv
          g$name$7039$14xsgv
          g$vars$7040$14xsgv
          g$locs$7041$14xsgv
          g$val-exps$7042$14xsgv
          g$body-exp$7043$14xsgv)
        (list
          'library-letrec*
          g$name$7039$14xsgv
          (map list
               g$vars$7040$14xsgv
               g$locs$7041$14xsgv
               g$val-exps$7042$14xsgv)
          g$body-exp$7043$14xsgv)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7053$14xsgv
     g$set-cons$10682$14xsgv
     (case-lambda
       ((g$x$7509$14xsgv g$ls$7510$14xsgv)
        (if (memq g$x$7509$14xsgv g$ls$7510$14xsgv)
          g$ls$7510$14xsgv
          (cons g$x$7509$14xsgv g$ls$7510$14xsgv)))))
   (g$set-union$7054$14xsgv
     g$set-union$10683$14xsgv
     (case-lambda
       ((g$ls1$7511$14xsgv g$ls2$7512$14xsgv)
        (if (null? g$ls1$7511$14xsgv)
          g$ls2$7512$14xsgv
          (if (memq (car g$ls1$7511$14xsgv) g$ls2$7512$14xsgv)
            (g$set-union$7054$14xsgv (cdr g$ls1$7511$14xsgv) g$ls2$7512$14xsgv)
            (cons
              (car g$ls1$7511$14xsgv)
              (g$set-union$7054$14xsgv
                (cdr g$ls1$7511$14xsgv)
                g$ls2$7512$14xsgv)))))))
   (g$top-mark*$7056$14xsgv g$top-mark*$10684$14xsgv '(top))
   (g$top-marked?$7057$14xsgv
     g$top-marked?$10685$14xsgv
     (case-lambda ((g$m*$7513$14xsgv) (memq 'top g$m*$7513$14xsgv))))
   (g$gen-lexical$7058$14xsgv
     g$gen-lexical$10686$14xsgv
     (case-lambda
       ((g$sym$7514$14xsgv)
        (if (symbol? g$sym$7514$14xsgv)
          (gensym g$sym$7514$14xsgv)
          (if (g$stx?$7086$14xsgv g$sym$7514$14xsgv)
            (g$gen-lexical$7058$14xsgv
              (g$id->sym$7115$14xsgv g$sym$7514$14xsgv))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7514$14xsgv))))))
   (g$gen-global$7059$14xsgv
     g$gen-global$10687$14xsgv
     (case-lambda
       ((g$x$7515$14xsgv) (g$gen-lexical$7058$14xsgv g$x$7515$14xsgv))))
   (g$gen-label$7060$14xsgv
     g$gen-label$10688$14xsgv
     (case-lambda ((g$_$7516$14xsgv) (gensym))))
   (g$gen-top-level-label$7061$14xsgv
     g$gen-top-level-label$10689$14xsgv
     (case-lambda
       ((g$id$7517$14xsgv g$rib$7518$14xsgv)
        (letrec* ((g$find$7519$14xsgv
                    (case-lambda
                      ((g$sym$7525$14xsgv
                         g$mark*$7526$14xsgv
                         g$sym*$7527$14xsgv
                         g$mark**$7528$14xsgv
                         g$label*$7529$14xsgv)
                       (if (pair? g$sym*$7527$14xsgv)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7525$14xsgv
                                        (car g$sym*$7527$14xsgv))
                                 (begin
                                   '#f
                                   (g$same-marks?$7116$14xsgv
                                     g$mark*$7526$14xsgv
                                     (car g$mark**$7528$14xsgv)))
                                 '#f)
                             (car g$label*$7529$14xsgv)
                             (g$find$7519$14xsgv
                               g$sym$7525$14xsgv
                               g$mark*$7526$14xsgv
                               (cdr g$sym*$7527$14xsgv)
                               (cdr g$mark**$7528$14xsgv)
                               (cdr g$label*$7529$14xsgv))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7520$14xsgv g$mark*$7521$14xsgv)
              ((case-lambda
                 ((g$sym*$7522$14xsgv)
                  ((case-lambda
                     ((g$t$7523$14xsgv)
                      (if g$t$7523$14xsgv
                        ((case-lambda
                           ((g$label$7524$14xsgv)
                            (if (g$imported-label->binding$6928$14xsgv
                                  g$label$7524$14xsgv)
                              (gensym)
                              g$label$7524$14xsgv)))
                         g$t$7523$14xsgv)
                        (gensym))))
                   (if (memq
                         g$sym$7520$14xsgv
                         (g$rib-sym*$7069$14xsgv g$rib$7518$14xsgv))
                     (begin
                       '#f
                       (g$find$7519$14xsgv
                         g$sym$7520$14xsgv
                         g$mark*$7521$14xsgv
                         g$sym*$7522$14xsgv
                         (g$rib-mark**$7070$14xsgv g$rib$7518$14xsgv)
                         (g$rib-label*$7071$14xsgv g$rib$7518$14xsgv)))
                     '#f))))
               (g$rib-sym*$7069$14xsgv g$rib$7518$14xsgv))))
           (g$id->sym$7115$14xsgv g$id$7517$14xsgv)
           (g$stx-mark*$7089$14xsgv g$id$7517$14xsgv))))))
   (g$gen-define-label+loc$7062$14xsgv
     g$gen-define-label+loc$10690$14xsgv
     (case-lambda
       ((g$id$7530$14xsgv g$rib$7531$14xsgv)
        ((case-lambda
           ((g$t$7532$14xsgv)
            (if g$t$7532$14xsgv
              ((case-lambda
                 ((g$env$7533$14xsgv)
                  ((case-lambda
                     ((g$label$7534$14xsgv g$locs$7535$14xsgv)
                      (values
                        g$label$7534$14xsgv
                        ((case-lambda
                           ((g$t$7536$14xsgv)
                            (if g$t$7536$14xsgv
                              (cdr g$t$7536$14xsgv)
                              ((case-lambda
                                 ((g$loc$7537$14xsgv)
                                  (begin
                                    (g$set-interaction-env-locs!$7475$14xsgv
                                      g$env$7533$14xsgv
                                      (cons
                                        (cons
                                          g$label$7534$14xsgv
                                          g$loc$7537$14xsgv)
                                        g$locs$7535$14xsgv))
                                    g$loc$7537$14xsgv)))
                               (g$gen-lexical$7058$14xsgv g$id$7530$14xsgv)))))
                         (assq g$label$7534$14xsgv g$locs$7535$14xsgv)))))
                   (g$gen-top-level-label$7061$14xsgv
                     g$id$7530$14xsgv
                     g$rib$7531$14xsgv)
                   (g$interaction-env-locs$7472$14xsgv g$env$7533$14xsgv))))
               g$t$7532$14xsgv)
              (values (gensym) (g$gen-lexical$7058$14xsgv g$id$7530$14xsgv)))))
         (g$top-level-context$7508$14xsgv)))))
   (g$gen-define-label$7063$14xsgv
     g$gen-define-label$10691$14xsgv
     (case-lambda
       ((g$id$7538$14xsgv g$rib$7539$14xsgv)
        (if (g$top-level-context$7508$14xsgv)
          (g$gen-top-level-label$7061$14xsgv g$id$7538$14xsgv g$rib$7539$14xsgv)
          (gensym)))))
   (g$8054$7064$14xsgv
     g$8054$10692$14xsgv
     (make-record-type-descriptor
       'rib
       '#f
       'g$8057$14xsgv
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8056$7065$14xsgv g$8056$10693$14xsgv '#f)
   (g$8055$7066$14xsgv
     g$8055$10694$14xsgv
     (make-record-constructor-descriptor
       g$8054$7064$14xsgv
       '#f
       g$8056$7065$14xsgv))
   (g$rib?$7067$14xsgv
     g$rib?$10695$14xsgv
     (record-predicate g$8054$7064$14xsgv))
   (g$make-rib$7068$14xsgv
     g$make-rib$10696$14xsgv
     (record-constructor g$8055$7066$14xsgv))
   (g$rib-sym*$7069$14xsgv
     g$rib-sym*$10697$14xsgv
     (record-accessor g$8054$7064$14xsgv '0))
   (g$rib-mark**$7070$14xsgv
     g$rib-mark**$10698$14xsgv
     (record-accessor g$8054$7064$14xsgv '1))
   (g$rib-label*$7071$14xsgv
     g$rib-label*$10699$14xsgv
     (record-accessor g$8054$7064$14xsgv '2))
   (g$rib-sealed/freq$7072$14xsgv
     g$rib-sealed/freq$10700$14xsgv
     (record-accessor g$8054$7064$14xsgv '3))
   (g$set-rib-sym*!$7073$14xsgv
     g$set-rib-sym*!$10701$14xsgv
     (record-mutator g$8054$7064$14xsgv '0))
   (g$set-rib-mark**!$7074$14xsgv
     g$set-rib-mark**!$10702$14xsgv
     (record-mutator g$8054$7064$14xsgv '1))
   (g$set-rib-label*!$7075$14xsgv
     g$set-rib-label*!$10703$14xsgv
     (record-mutator g$8054$7064$14xsgv '2))
   (g$set-rib-sealed/freq!$7076$14xsgv
     g$set-rib-sealed/freq!$10704$14xsgv
     (record-mutator g$8054$7064$14xsgv '3))
   (g$make-empty-rib$7077$14xsgv
     g$make-empty-rib$10705$14xsgv
     (case-lambda (() (g$make-rib$7068$14xsgv '() '() '() '#f))))
   (g$extend-rib!$7078$14xsgv
     g$extend-rib!$10706$14xsgv
     (case-lambda
       ((g$rib$7540$14xsgv g$id$7541$14xsgv g$label$7542$14xsgv)
        (letrec* ((g$find$7543$14xsgv
                    (case-lambda
                      ((g$sym$7549$14xsgv
                         g$mark*$7550$14xsgv
                         g$sym*$7551$14xsgv
                         g$mark**$7552$14xsgv
                         g$label*$7553$14xsgv)
                       (if (pair? g$sym*$7551$14xsgv)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7549$14xsgv
                                        (car g$sym*$7551$14xsgv))
                                 (begin
                                   '#f
                                   (g$same-marks?$7116$14xsgv
                                     g$mark*$7550$14xsgv
                                     (car g$mark**$7552$14xsgv)))
                                 '#f)
                             g$label*$7553$14xsgv
                             (g$find$7543$14xsgv
                               g$sym$7549$14xsgv
                               g$mark*$7550$14xsgv
                               (cdr g$sym*$7551$14xsgv)
                               (cdr g$mark**$7552$14xsgv)
                               (cdr g$label*$7553$14xsgv))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7072$14xsgv g$rib$7540$14xsgv)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7540$14xsgv)
              (void))
            ((case-lambda
               ((g$sym$7544$14xsgv g$mark*$7545$14xsgv)
                ((case-lambda
                   ((g$sym*$7546$14xsgv)
                    ((case-lambda
                       ((g$t$7547$14xsgv)
                        (if g$t$7547$14xsgv
                          ((case-lambda
                             ((g$p$7548$14xsgv)
                              (if (not (eq? g$label$7542$14xsgv
                                            (car g$p$7548$14xsgv)))
                                (if (g$top-level-context$7508$14xsgv)
                                  (set-car! g$p$7548$14xsgv g$label$7542$14xsgv)
                                  (g$syntax-violation$7501$14xsgv
                                    '#f
                                    '"cannot redefine"
                                    g$id$7541$14xsgv))
                                (void))))
                           g$t$7547$14xsgv)
                          (begin
                            (g$set-rib-sym*!$7073$14xsgv
                              g$rib$7540$14xsgv
                              (cons g$sym$7544$14xsgv g$sym*$7546$14xsgv))
                            (g$set-rib-mark**!$7074$14xsgv
                              g$rib$7540$14xsgv
                              (cons
                                g$mark*$7545$14xsgv
                                (g$rib-mark**$7070$14xsgv g$rib$7540$14xsgv)))
                            (g$set-rib-label*!$7075$14xsgv
                              g$rib$7540$14xsgv
                              (cons
                                g$label$7542$14xsgv
                                (g$rib-label*$7071$14xsgv
                                  g$rib$7540$14xsgv)))))))
                     (if (memq
                           g$sym$7544$14xsgv
                           (g$rib-sym*$7069$14xsgv g$rib$7540$14xsgv))
                       (begin
                         '#f
                         (g$find$7543$14xsgv
                           g$sym$7544$14xsgv
                           g$mark*$7545$14xsgv
                           g$sym*$7546$14xsgv
                           (g$rib-mark**$7070$14xsgv g$rib$7540$14xsgv)
                           (g$rib-label*$7071$14xsgv g$rib$7540$14xsgv)))
                       '#f))))
                 (g$rib-sym*$7069$14xsgv g$rib$7540$14xsgv))))
             (g$id->sym$7115$14xsgv g$id$7541$14xsgv)
             (g$stx-mark*$7089$14xsgv g$id$7541$14xsgv)))))))
   (g$make-rib-map$7079$14xsgv
     g$make-rib-map$10707$14xsgv
     (case-lambda
       ((g$sym*$7554$14xsgv)
        ((case-lambda
           ((g$ht$7555$14xsgv)
            ((letrec ((g$f$7556$14xsgv
                        (case-lambda
                          ((g$i$7557$14xsgv g$sym*$7558$14xsgv)
                           (if (null? g$sym*$7558$14xsgv)
                             g$ht$7555$14xsgv
                             (begin
                               (g$hashtable-update!$5156$14xsgv
                                 g$ht$7555$14xsgv
                                 (car g$sym*$7558$14xsgv)
                                 (case-lambda
                                   ((g$x$7559$14xsgv)
                                    (cons g$i$7557$14xsgv g$x$7559$14xsgv)))
                                 '())
                               (g$f$7556$14xsgv
                                 (+ g$i$7557$14xsgv '1)
                                 (cdr g$sym*$7558$14xsgv))))))))
               g$f$7556$14xsgv)
             '0
             g$sym*$7554$14xsgv)))
         (g$make-eq-hashtable$5149$14xsgv)))))
   (g$seal-rib!$7080$14xsgv
     g$seal-rib!$10708$14xsgv
     (case-lambda
       ((g$rib$7560$14xsgv)
        ((case-lambda
           ((g$sym*$7561$14xsgv)
            (if (not (null? g$sym*$7561$14xsgv))
              (begin
                (g$set-rib-sym*!$7073$14xsgv
                  g$rib$7560$14xsgv
                  (list->vector g$sym*$7561$14xsgv))
                (g$set-rib-mark**!$7074$14xsgv
                  g$rib$7560$14xsgv
                  (list->vector (g$rib-mark**$7070$14xsgv g$rib$7560$14xsgv)))
                (g$set-rib-label*!$7075$14xsgv
                  g$rib$7560$14xsgv
                  (list->vector (g$rib-label*$7071$14xsgv g$rib$7560$14xsgv)))
                (g$set-rib-sealed/freq!$7076$14xsgv
                  g$rib$7560$14xsgv
                  (g$make-rib-map$7079$14xsgv g$sym*$7561$14xsgv)))
              (void))))
         (g$rib-sym*$7069$14xsgv g$rib$7560$14xsgv)))))
   (g$unseal-rib!$7081$14xsgv
     g$unseal-rib!$10709$14xsgv
     (case-lambda
       ((g$rib$7562$14xsgv)
        (if (g$rib-sealed/freq$7072$14xsgv g$rib$7562$14xsgv)
          (begin
            (g$set-rib-sealed/freq!$7076$14xsgv g$rib$7562$14xsgv '#f)
            (g$set-rib-sym*!$7073$14xsgv
              g$rib$7562$14xsgv
              (vector->list (g$rib-sym*$7069$14xsgv g$rib$7562$14xsgv)))
            (g$set-rib-mark**!$7074$14xsgv
              g$rib$7562$14xsgv
              (vector->list (g$rib-mark**$7070$14xsgv g$rib$7562$14xsgv)))
            (g$set-rib-label*!$7075$14xsgv
              g$rib$7562$14xsgv
              (vector->list (g$rib-label*$7071$14xsgv g$rib$7562$14xsgv))))
          (void)))))
   (g$make-full-rib$7082$14xsgv
     g$make-full-rib$10710$14xsgv
     (case-lambda
       ((g$id*$7563$14xsgv g$label*$7564$14xsgv)
        ((case-lambda
           ((g$r$7565$14xsgv)
            (begin (g$seal-rib!$7080$14xsgv g$r$7565$14xsgv) g$r$7565$14xsgv)))
         (g$make-rib$7068$14xsgv
           (map g$id->sym$7115$14xsgv g$id*$7563$14xsgv)
           (map g$stx-mark*$7089$14xsgv g$id*$7563$14xsgv)
           g$label*$7564$14xsgv
           '#f)))))
   (g$8080$7083$14xsgv
     g$8080$10711$14xsgv
     (make-record-type-descriptor
       'stx
       '#f
       'g$8083$14xsgv
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8082$7084$14xsgv g$8082$10712$14xsgv '#f)
   (g$8081$7085$14xsgv
     g$8081$10713$14xsgv
     (make-record-constructor-descriptor
       g$8080$7083$14xsgv
       '#f
       g$8082$7084$14xsgv))
   (g$stx?$7086$14xsgv
     g$stx?$10714$14xsgv
     (record-predicate g$8080$7083$14xsgv))
   (g$make-stx$7087$14xsgv
     g$make-stx$10715$14xsgv
     (record-constructor g$8081$7085$14xsgv))
   (g$stx-expr$7088$14xsgv
     g$stx-expr$10716$14xsgv
     (record-accessor g$8080$7083$14xsgv '0))
   (g$stx-mark*$7089$14xsgv
     g$stx-mark*$10717$14xsgv
     (record-accessor g$8080$7083$14xsgv '1))
   (g$stx-subst*$7090$14xsgv
     g$stx-subst*$10718$14xsgv
     (record-accessor g$8080$7083$14xsgv '2))
   (g$stx-ae*$7091$14xsgv
     g$stx-ae*$10719$14xsgv
     (record-accessor g$8080$7083$14xsgv '3))
   (g$set-stx-expr!$7092$14xsgv
     g$set-stx-expr!$10720$14xsgv
     (record-mutator g$8080$7083$14xsgv '0))
   (g$set-stx-mark*!$7093$14xsgv
     g$set-stx-mark*!$10721$14xsgv
     (record-mutator g$8080$7083$14xsgv '1))
   (g$set-stx-subst*!$7094$14xsgv
     g$set-stx-subst*!$10722$14xsgv
     (record-mutator g$8080$7083$14xsgv '2))
   (g$set-stx-ae*!$7095$14xsgv
     g$set-stx-ae*!$10723$14xsgv
     (record-mutator g$8080$7083$14xsgv '3))
   (g$rp$7096$14xsgv
     g$rp$10724$14xsgv
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7566$14xsgv g$p$7567$14xsgv)
          (begin
            (display '"#<syntax " g$p$7567$14xsgv)
            (write (g$stx->datum$7125$14xsgv g$x$7566$14xsgv) g$p$7567$14xsgv)
            ((case-lambda
               ((g$expr$7568$14xsgv)
                (if (annotation? g$expr$7568$14xsgv)
                  ((case-lambda
                     ((g$src$7569$14xsgv)
                      (if (pair? g$src$7569$14xsgv)
                        (begin
                          (display '" [" g$p$7567$14xsgv)
                          (display (cdr g$src$7569$14xsgv) g$p$7567$14xsgv)
                          (display '" of " g$p$7567$14xsgv)
                          (display (car g$src$7569$14xsgv) g$p$7567$14xsgv)
                          (display '"]" g$p$7567$14xsgv))
                        (void))))
                   (annotation-source g$expr$7568$14xsgv))
                  (void))))
             (g$stx-expr$7088$14xsgv g$x$7566$14xsgv))
            (display '">" g$p$7567$14xsgv))))))
   (g$datum->stx$7097$14xsgv
     g$datum->stx$10725$14xsgv
     (case-lambda
       ((g$id$7570$14xsgv g$datum$7571$14xsgv)
        (g$make-stx$7087$14xsgv
          g$datum$7571$14xsgv
          (g$stx-mark*$7089$14xsgv g$id$7570$14xsgv)
          (g$stx-subst*$7090$14xsgv g$id$7570$14xsgv)
          (g$stx-ae*$7091$14xsgv g$id$7570$14xsgv)))))
   (g$gen-mark$7098$14xsgv
     g$gen-mark$10726$14xsgv
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7099$14xsgv g$anti-mark$10727$14xsgv '#f)
   (g$anti-mark?$7100$14xsgv g$anti-mark?$10728$14xsgv not)
   (g$join-wraps$7101$14xsgv
     g$join-wraps$10729$14xsgv
     (case-lambda
       ((g$m1*$7572$14xsgv
          g$s1*$7573$14xsgv
          g$ae1*$7574$14xsgv
          g$e$7575$14xsgv)
        (letrec* ((g$cancel$7576$14xsgv
                    (case-lambda
                      ((g$ls1$7580$14xsgv g$ls2$7581$14xsgv)
                       ((letrec ((g$f$7582$14xsgv
                                   (case-lambda
                                     ((g$x$7583$14xsgv g$ls1$7584$14xsgv)
                                      (if (null? g$ls1$7584$14xsgv)
                                        (cdr g$ls2$7581$14xsgv)
                                        (cons
                                          g$x$7583$14xsgv
                                          (g$f$7582$14xsgv
                                            (car g$ls1$7584$14xsgv)
                                            (cdr g$ls1$7584$14xsgv))))))))
                          g$f$7582$14xsgv)
                        (car g$ls1$7580$14xsgv)
                        (cdr g$ls1$7580$14xsgv))))))
          ((case-lambda
             ((g$m2*$7577$14xsgv g$s2*$7578$14xsgv g$ae2*$7579$14xsgv)
              (if (if (not (null? g$m1*$7572$14xsgv))
                    (if (not (null? g$m2*$7577$14xsgv))
                      (begin
                        '#f
                        (g$anti-mark?$7100$14xsgv (car g$m2*$7577$14xsgv)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7576$14xsgv g$m1*$7572$14xsgv g$m2*$7577$14xsgv)
                  (g$cancel$7576$14xsgv g$s1*$7573$14xsgv g$s2*$7578$14xsgv)
                  (g$cancel$7576$14xsgv g$ae1*$7574$14xsgv g$ae2*$7579$14xsgv))
                (values
                  (append g$m1*$7572$14xsgv g$m2*$7577$14xsgv)
                  (append g$s1*$7573$14xsgv g$s2*$7578$14xsgv)
                  (append g$ae1*$7574$14xsgv g$ae2*$7579$14xsgv)))))
           (g$stx-mark*$7089$14xsgv g$e$7575$14xsgv)
           (g$stx-subst*$7090$14xsgv g$e$7575$14xsgv)
           (g$stx-ae*$7091$14xsgv g$e$7575$14xsgv))))))
   (g$mkstx$7102$14xsgv
     g$mkstx$10730$14xsgv
     (case-lambda
       ((g$e$7585$14xsgv g$m*$7586$14xsgv g$s*$7587$14xsgv g$ae*$7588$14xsgv)
        (if (g$stx?$7086$14xsgv g$e$7585$14xsgv)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7101$14xsgv
                 g$m*$7586$14xsgv
                 g$s*$7587$14xsgv
                 g$ae*$7588$14xsgv
                 g$e$7585$14xsgv)))
            (case-lambda
              ((g$m*$7592$14xsgv g$s*$7593$14xsgv g$ae*$7594$14xsgv)
               ((case-lambda
                  ((g$ae*$7595$14xsgv g$s*$7596$14xsgv g$m*$7597$14xsgv)
                   (g$make-stx$7087$14xsgv
                     (g$stx-expr$7088$14xsgv g$e$7585$14xsgv)
                     g$m*$7597$14xsgv
                     g$s*$7596$14xsgv
                     g$ae*$7595$14xsgv)))
                g$ae*$7594$14xsgv
                g$s*$7593$14xsgv
                g$m*$7592$14xsgv))))
          (g$make-stx$7087$14xsgv
            g$e$7585$14xsgv
            g$m*$7586$14xsgv
            g$s*$7587$14xsgv
            g$ae*$7588$14xsgv)))))
   (g$add-mark$7103$14xsgv
     g$add-mark$10731$14xsgv
     (case-lambda
       ((g$m$7598$14xsgv g$e$7599$14xsgv g$ae$7600$14xsgv)
        (g$mkstx$7102$14xsgv
          g$e$7599$14xsgv
          (list g$m$7598$14xsgv)
          '(shift)
          (list g$ae$7600$14xsgv)))))
   (g$add-subst$7104$14xsgv
     g$add-subst$10732$14xsgv
     (case-lambda
       ((g$subst$7601$14xsgv g$e$7602$14xsgv)
        (g$mkstx$7102$14xsgv
          g$e$7602$14xsgv
          '()
          (list g$subst$7601$14xsgv)
          '()))))
   (g$syntax-kind?$7105$14xsgv
     g$syntax-kind?$10733$14xsgv
     (case-lambda
       ((g$x$7603$14xsgv g$p?$7604$14xsgv)
        (if (g$stx?$7086$14xsgv g$x$7603$14xsgv)
          (g$syntax-kind?$7105$14xsgv
            (g$stx-expr$7088$14xsgv g$x$7603$14xsgv)
            g$p?$7604$14xsgv)
          (if (annotation? g$x$7603$14xsgv)
            (g$syntax-kind?$7105$14xsgv
              (annotation-expression g$x$7603$14xsgv)
              g$p?$7604$14xsgv)
            (g$p?$7604$14xsgv g$x$7603$14xsgv))))))
   (g$syntax-vector->list$7106$14xsgv
     g$syntax-vector->list$10734$14xsgv
     (case-lambda
       ((g$x$7605$14xsgv)
        (if (g$stx?$7086$14xsgv g$x$7605$14xsgv)
          ((case-lambda
             ((g$ls$7606$14xsgv
                g$m*$7607$14xsgv
                g$s*$7608$14xsgv
                g$ae*$7609$14xsgv)
              (map (case-lambda
                     ((g$x$7610$14xsgv)
                      (g$mkstx$7102$14xsgv
                        g$x$7610$14xsgv
                        g$m*$7607$14xsgv
                        g$s*$7608$14xsgv
                        g$ae*$7609$14xsgv)))
                   g$ls$7606$14xsgv)))
           (g$syntax-vector->list$7106$14xsgv
             (g$stx-expr$7088$14xsgv g$x$7605$14xsgv))
           (g$stx-mark*$7089$14xsgv g$x$7605$14xsgv)
           (g$stx-subst*$7090$14xsgv g$x$7605$14xsgv)
           (g$stx-ae*$7091$14xsgv g$x$7605$14xsgv))
          (if (annotation? g$x$7605$14xsgv)
            (g$syntax-vector->list$7106$14xsgv
              (annotation-expression g$x$7605$14xsgv))
            (if (vector? g$x$7605$14xsgv)
              (vector->list g$x$7605$14xsgv)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7605$14xsgv)))))))
   (g$syntax-pair?$7107$14xsgv
     g$syntax-pair?$10735$14xsgv
     (case-lambda
       ((g$x$7611$14xsgv) (g$syntax-kind?$7105$14xsgv g$x$7611$14xsgv pair?))))
   (g$syntax-vector?$7108$14xsgv
     g$syntax-vector?$10736$14xsgv
     (case-lambda
       ((g$x$7612$14xsgv)
        (g$syntax-kind?$7105$14xsgv g$x$7612$14xsgv vector?))))
   (g$syntax-null?$7109$14xsgv
     g$syntax-null?$10737$14xsgv
     (case-lambda
       ((g$x$7613$14xsgv) (g$syntax-kind?$7105$14xsgv g$x$7613$14xsgv null?))))
   (g$syntax-list?$7110$14xsgv
     g$syntax-list?$10738$14xsgv
     (case-lambda
       ((g$x$7614$14xsgv)
        ((case-lambda
           ((g$t$7615$14xsgv)
            (if g$t$7615$14xsgv
              g$t$7615$14xsgv
              (begin
                '#f
                (if (g$syntax-pair?$7107$14xsgv g$x$7614$14xsgv)
                  (begin
                    '#f
                    (g$syntax-list?$7110$14xsgv
                      (g$syntax-cdr$7112$14xsgv g$x$7614$14xsgv)))
                  '#f)))))
         (g$syntax-null?$7109$14xsgv g$x$7614$14xsgv)))))
   (g$syntax-car$7111$14xsgv
     g$syntax-car$10739$14xsgv
     (case-lambda
       ((g$x$7616$14xsgv)
        (if (g$stx?$7086$14xsgv g$x$7616$14xsgv)
          (g$mkstx$7102$14xsgv
            (g$syntax-car$7111$14xsgv (g$stx-expr$7088$14xsgv g$x$7616$14xsgv))
            (g$stx-mark*$7089$14xsgv g$x$7616$14xsgv)
            (g$stx-subst*$7090$14xsgv g$x$7616$14xsgv)
            (g$stx-ae*$7091$14xsgv g$x$7616$14xsgv))
          (if (annotation? g$x$7616$14xsgv)
            (g$syntax-car$7111$14xsgv (annotation-expression g$x$7616$14xsgv))
            (if (pair? g$x$7616$14xsgv)
              (car g$x$7616$14xsgv)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7616$14xsgv)))))))
   (g$syntax-cdr$7112$14xsgv
     g$syntax-cdr$10740$14xsgv
     (case-lambda
       ((g$x$7617$14xsgv)
        (if (g$stx?$7086$14xsgv g$x$7617$14xsgv)
          (g$mkstx$7102$14xsgv
            (g$syntax-cdr$7112$14xsgv (g$stx-expr$7088$14xsgv g$x$7617$14xsgv))
            (g$stx-mark*$7089$14xsgv g$x$7617$14xsgv)
            (g$stx-subst*$7090$14xsgv g$x$7617$14xsgv)
            (g$stx-ae*$7091$14xsgv g$x$7617$14xsgv))
          (if (annotation? g$x$7617$14xsgv)
            (g$syntax-cdr$7112$14xsgv (annotation-expression g$x$7617$14xsgv))
            (if (pair? g$x$7617$14xsgv)
              (cdr g$x$7617$14xsgv)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7617$14xsgv)))))))
   (g$syntax->list$7113$14xsgv
     g$syntax->list$10741$14xsgv
     (case-lambda
       ((g$x$7618$14xsgv)
        (if (g$syntax-pair?$7107$14xsgv g$x$7618$14xsgv)
          (cons
            (g$syntax-car$7111$14xsgv g$x$7618$14xsgv)
            (g$syntax->list$7113$14xsgv
              (g$syntax-cdr$7112$14xsgv g$x$7618$14xsgv)))
          (if (g$syntax-null?$7109$14xsgv g$x$7618$14xsgv)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7618$14xsgv))))))
   (g$id?$7114$14xsgv
     g$id?$10742$14xsgv
     (case-lambda
       ((g$x$7619$14xsgv)
        (if (g$stx?$7086$14xsgv g$x$7619$14xsgv)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7620$14xsgv)
                (symbol?
                  (if (annotation? g$expr$7620$14xsgv)
                    (annotation-stripped g$expr$7620$14xsgv)
                    g$expr$7620$14xsgv))))
             (g$stx-expr$7088$14xsgv g$x$7619$14xsgv)))
          '#f))))
   (g$id->sym$7115$14xsgv
     g$id->sym$10743$14xsgv
     (case-lambda
       ((g$x$7621$14xsgv)
        (begin
          (if (not (g$stx?$7086$14xsgv g$x$7621$14xsgv))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7621$14xsgv)
            (void))
          ((case-lambda
             ((g$expr$7622$14xsgv)
              ((case-lambda
                 ((g$sym$7623$14xsgv)
                  (if (symbol? g$sym$7623$14xsgv)
                    g$sym$7623$14xsgv
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7621$14xsgv))))
               (if (annotation? g$expr$7622$14xsgv)
                 (annotation-stripped g$expr$7622$14xsgv)
                 g$expr$7622$14xsgv))))
           (g$stx-expr$7088$14xsgv g$x$7621$14xsgv))))))
   (g$same-marks?$7116$14xsgv
     g$same-marks?$10744$14xsgv
     (case-lambda
       ((g$x$7624$14xsgv g$y$7625$14xsgv)
        ((case-lambda
           ((g$t$7626$14xsgv)
            (if g$t$7626$14xsgv
              g$t$7626$14xsgv
              (begin
                '#f
                (if (pair? g$x$7624$14xsgv)
                  (if (pair? g$y$7625$14xsgv)
                    (if (eq? (car g$x$7624$14xsgv) (car g$y$7625$14xsgv))
                      (begin
                        '#f
                        (g$same-marks?$7116$14xsgv
                          (cdr g$x$7624$14xsgv)
                          (cdr g$y$7625$14xsgv)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7624$14xsgv)
           (begin '#f (null? g$y$7625$14xsgv))
           '#f)))))
   (g$bound-id=?$7117$14xsgv
     g$bound-id=?$10745$14xsgv
     (case-lambda
       ((g$x$7627$14xsgv g$y$7628$14xsgv)
        (if (eq? (g$id->sym$7115$14xsgv g$x$7627$14xsgv)
                 (g$id->sym$7115$14xsgv g$y$7628$14xsgv))
          (begin
            '#f
            (g$same-marks?$7116$14xsgv
              (g$stx-mark*$7089$14xsgv g$x$7627$14xsgv)
              (g$stx-mark*$7089$14xsgv g$y$7628$14xsgv)))
          '#f))))
   (g$free-id=?$7118$14xsgv
     g$free-id=?$10746$14xsgv
     (case-lambda
       ((g$i$7629$14xsgv g$j$7630$14xsgv)
        ((case-lambda
           ((g$t0$7631$14xsgv g$t1$7632$14xsgv)
            (if ((case-lambda
                   ((g$t$7633$14xsgv)
                    (if g$t$7633$14xsgv
                      g$t$7633$14xsgv
                      (begin '#f g$t1$7632$14xsgv))))
                 g$t0$7631$14xsgv)
              (eq? g$t0$7631$14xsgv g$t1$7632$14xsgv)
              (eq? (g$id->sym$7115$14xsgv g$i$7629$14xsgv)
                   (g$id->sym$7115$14xsgv g$j$7630$14xsgv)))))
         (g$id->real-label$7128$14xsgv g$i$7629$14xsgv)
         (g$id->real-label$7128$14xsgv g$j$7630$14xsgv)))))
   (g$valid-bound-ids?$7119$14xsgv
     g$valid-bound-ids?$10747$14xsgv
     (case-lambda
       ((g$id*$7634$14xsgv)
        (if (g$for-all$5356$14xsgv g$id?$7114$14xsgv g$id*$7634$14xsgv)
          (begin '#f (g$distinct-bound-ids?$7120$14xsgv g$id*$7634$14xsgv))
          '#f))))
   (g$distinct-bound-ids?$7120$14xsgv
     g$distinct-bound-ids?$10748$14xsgv
     (case-lambda
       ((g$id*$7635$14xsgv)
        ((case-lambda
           ((g$t$7636$14xsgv)
            (if g$t$7636$14xsgv
              g$t$7636$14xsgv
              (begin
                '#f
                (if (not (g$bound-id-member?$7121$14xsgv
                           (car g$id*$7635$14xsgv)
                           (cdr g$id*$7635$14xsgv)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7120$14xsgv (cdr g$id*$7635$14xsgv)))
                  '#f)))))
         (null? g$id*$7635$14xsgv)))))
   (g$bound-id-member?$7121$14xsgv
     g$bound-id-member?$10749$14xsgv
     (case-lambda
       ((g$id$7637$14xsgv g$id*$7638$14xsgv)
        (if (pair? g$id*$7638$14xsgv)
          (begin
            '#f
            ((case-lambda
               ((g$t$7639$14xsgv)
                (if g$t$7639$14xsgv
                  g$t$7639$14xsgv
                  (begin
                    '#f
                    (g$bound-id-member?$7121$14xsgv
                      g$id$7637$14xsgv
                      (cdr g$id*$7638$14xsgv))))))
             (g$bound-id=?$7117$14xsgv
               g$id$7637$14xsgv
               (car g$id*$7638$14xsgv))))
          '#f))))
   (g$self-evaluating?$7122$14xsgv
     g$self-evaluating?$10750$14xsgv
     (case-lambda
       ((g$x$7640$14xsgv)
        ((case-lambda
           ((g$t$7641$14xsgv)
            (if g$t$7641$14xsgv
              g$t$7641$14xsgv
              ((case-lambda
                 ((g$t$7642$14xsgv)
                  (if g$t$7642$14xsgv
                    g$t$7642$14xsgv
                    ((case-lambda
                       ((g$t$7643$14xsgv)
                        (if g$t$7643$14xsgv
                          g$t$7643$14xsgv
                          ((case-lambda
                             ((g$t$7644$14xsgv)
                              (if g$t$7644$14xsgv
                                g$t$7644$14xsgv
                                (begin '#f (bytevector? g$x$7640$14xsgv)))))
                           (boolean? g$x$7640$14xsgv)))))
                     (char? g$x$7640$14xsgv)))))
               (string? g$x$7640$14xsgv)))))
         (number? g$x$7640$14xsgv)))))
   (g$strip-annotations$7123$14xsgv
     g$strip-annotations$10751$14xsgv
     (case-lambda
       ((g$x$7645$14xsgv)
        (if (pair? g$x$7645$14xsgv)
          (cons
            (g$strip-annotations$7123$14xsgv (car g$x$7645$14xsgv))
            (g$strip-annotations$7123$14xsgv (cdr g$x$7645$14xsgv)))
          (if (vector? g$x$7645$14xsgv)
            (vector-map g$strip-annotations$7123$14xsgv g$x$7645$14xsgv)
            (if (annotation? g$x$7645$14xsgv)
              (annotation-stripped g$x$7645$14xsgv)
              g$x$7645$14xsgv))))))
   (g$strip$7124$14xsgv
     g$strip$10752$14xsgv
     (case-lambda
       ((g$x$7646$14xsgv g$m*$7647$14xsgv)
        (if (g$top-marked?$7057$14xsgv g$m*$7647$14xsgv)
          (if ((case-lambda
                 ((g$t$7648$14xsgv)
                  (if g$t$7648$14xsgv
                    g$t$7648$14xsgv
                    ((case-lambda
                       ((g$t$7649$14xsgv)
                        (if g$t$7649$14xsgv
                          g$t$7649$14xsgv
                          (begin
                            '#f
                            (if (vector? g$x$7646$14xsgv)
                              (if (> (vector-length g$x$7646$14xsgv) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7646$14xsgv '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7646$14xsgv)
                       (begin '#f (annotation? (car g$x$7646$14xsgv)))
                       '#f)))))
               (annotation? g$x$7646$14xsgv))
            (g$strip-annotations$7123$14xsgv g$x$7646$14xsgv)
            g$x$7646$14xsgv)
          ((letrec ((g$f$7650$14xsgv
                      (case-lambda
                        ((g$x$7651$14xsgv)
                         (if (g$stx?$7086$14xsgv g$x$7651$14xsgv)
                           (g$strip$7124$14xsgv
                             (g$stx-expr$7088$14xsgv g$x$7651$14xsgv)
                             (g$stx-mark*$7089$14xsgv g$x$7651$14xsgv))
                           (if (annotation? g$x$7651$14xsgv)
                             (annotation-stripped g$x$7651$14xsgv)
                             (if (pair? g$x$7651$14xsgv)
                               ((case-lambda
                                  ((g$a$7652$14xsgv g$d$7653$14xsgv)
                                   (if (if (eq? g$a$7652$14xsgv
                                                (car g$x$7651$14xsgv))
                                         (begin
                                           '#f
                                           (eq? g$d$7653$14xsgv
                                                (cdr g$x$7651$14xsgv)))
                                         '#f)
                                     g$x$7651$14xsgv
                                     (cons g$a$7652$14xsgv g$d$7653$14xsgv))))
                                (g$f$7650$14xsgv (car g$x$7651$14xsgv))
                                (g$f$7650$14xsgv (cdr g$x$7651$14xsgv)))
                               (if (vector? g$x$7651$14xsgv)
                                 ((case-lambda
                                    ((g$old$7654$14xsgv)
                                     ((case-lambda
                                        ((g$new$7655$14xsgv)
                                         (if (g$for-all$5356$14xsgv
                                               eq?
                                               g$old$7654$14xsgv
                                               g$new$7655$14xsgv)
                                           g$x$7651$14xsgv
                                           (list->vector g$new$7655$14xsgv))))
                                      (map g$f$7650$14xsgv g$old$7654$14xsgv))))
                                  (vector->list g$x$7651$14xsgv))
                                 g$x$7651$14xsgv))))))))
             g$f$7650$14xsgv)
           g$x$7646$14xsgv)))))
   (g$stx->datum$7125$14xsgv
     g$stx->datum$10753$14xsgv
     (case-lambda
       ((g$x$7656$14xsgv) (g$strip$7124$14xsgv g$x$7656$14xsgv '()))))
   (g$same-marks*?$7126$14xsgv
     g$same-marks*?$10754$14xsgv
     (case-lambda
       ((g$mark*$7657$14xsgv g$mark**$7658$14xsgv g$si$7659$14xsgv)
        (if (null? g$si$7659$14xsgv)
          '#f
          (if (g$same-marks?$7116$14xsgv
                g$mark*$7657$14xsgv
                (vector-ref g$mark**$7658$14xsgv (car g$si$7659$14xsgv)))
            (car g$si$7659$14xsgv)
            (g$same-marks*?$7126$14xsgv
              g$mark*$7657$14xsgv
              g$mark**$7658$14xsgv
              (cdr g$si$7659$14xsgv)))))))
   (g$id->label$7127$14xsgv
     g$id->label$10755$14xsgv
     (case-lambda
       ((g$id$7660$14xsgv)
        ((case-lambda
           ((g$t$7661$14xsgv)
            (if g$t$7661$14xsgv
              g$t$7661$14xsgv
              (begin
                '#f
                ((case-lambda
                   ((g$t$7662$14xsgv)
                    (if g$t$7662$14xsgv
                      ((case-lambda
                         ((g$env$7663$14xsgv)
                          ((case-lambda
                             ((g$rib$7664$14xsgv)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7062$14xsgv
                                     g$id$7660$14xsgv
                                     g$rib$7664$14xsgv)))
                                (case-lambda
                                  ((g$lab$7667$14xsgv g$loc_$7668$14xsgv)
                                   ((case-lambda
                                      ((g$loc_$7669$14xsgv g$lab$7670$14xsgv)
                                       (begin
                                         (g$extend-rib!$7078$14xsgv
                                           g$rib$7664$14xsgv
                                           g$id$7660$14xsgv
                                           g$lab$7670$14xsgv)
                                         g$lab$7670$14xsgv)))
                                    g$loc_$7668$14xsgv
                                    g$lab$7667$14xsgv))))))
                           (g$interaction-env-rib$7470$14xsgv
                             g$env$7663$14xsgv))))
                       g$t$7662$14xsgv)
                      '#f)))
                 (g$top-level-context$7508$14xsgv))))))
         (g$id->real-label$7128$14xsgv g$id$7660$14xsgv)))))
   (g$id->real-label$7128$14xsgv
     g$id->real-label$10756$14xsgv
     (case-lambda
       ((g$id$7671$14xsgv)
        ((case-lambda
           ((g$sym$7672$14xsgv)
            ((letrec ((g$search$7673$14xsgv
                        (case-lambda
                          ((g$subst*$7674$14xsgv g$mark*$7675$14xsgv)
                           (if (null? g$subst*$7674$14xsgv)
                             '#f
                             (if (eq? (car g$subst*$7674$14xsgv) 'shift)
                               (g$search$7673$14xsgv
                                 (cdr g$subst*$7674$14xsgv)
                                 (cdr g$mark*$7675$14xsgv))
                               ((case-lambda
                                  ((g$rib$7676$14xsgv)
                                   ((case-lambda
                                      ((g$t$7677$14xsgv)
                                       (if g$t$7677$14xsgv
                                         ((case-lambda
                                            ((g$ht$7678$14xsgv)
                                             ((case-lambda
                                                ((g$si$7679$14xsgv)
                                                 ((case-lambda
                                                    ((g$i$7680$14xsgv)
                                                     (if g$i$7680$14xsgv
                                                       (vector-ref
                                                         (g$rib-label*$7071$14xsgv
                                                           g$rib$7676$14xsgv)
                                                         g$i$7680$14xsgv)
                                                       (g$search$7673$14xsgv
                                                         (cdr g$subst*$7674$14xsgv)
                                                         g$mark*$7675$14xsgv))))
                                                  (if g$si$7679$14xsgv
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7126$14xsgv
                                                        g$mark*$7675$14xsgv
                                                        (g$rib-mark**$7070$14xsgv
                                                          g$rib$7676$14xsgv)
                                                        (reverse
                                                          g$si$7679$14xsgv)))
                                                    '#f))))
                                              (g$hashtable-ref$5152$14xsgv
                                                g$ht$7678$14xsgv
                                                g$sym$7672$14xsgv
                                                '#f))))
                                          g$t$7677$14xsgv)
                                         ((letrec ((g$f$7681$14xsgv
                                                     (case-lambda
                                                       ((g$sym*$7682$14xsgv
                                                          g$mark**$7683$14xsgv
                                                          g$label*$7684$14xsgv)
                                                        (if (null?
                                                              g$sym*$7682$14xsgv)
                                                          (g$search$7673$14xsgv
                                                            (cdr g$subst*$7674$14xsgv)
                                                            g$mark*$7675$14xsgv)
                                                          (if (if (eq? (car g$sym*$7682$14xsgv)
                                                                       g$sym$7672$14xsgv)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7116$14xsgv
                                                                    (car g$mark**$7683$14xsgv)
                                                                    g$mark*$7675$14xsgv))
                                                                '#f)
                                                            (car g$label*$7684$14xsgv)
                                                            (g$f$7681$14xsgv
                                                              (cdr g$sym*$7682$14xsgv)
                                                              (cdr g$mark**$7683$14xsgv)
                                                              (cdr g$label*$7684$14xsgv))))))))
                                            g$f$7681$14xsgv)
                                          (g$rib-sym*$7069$14xsgv
                                            g$rib$7676$14xsgv)
                                          (g$rib-mark**$7070$14xsgv
                                            g$rib$7676$14xsgv)
                                          (g$rib-label*$7071$14xsgv
                                            g$rib$7676$14xsgv)))))
                                    (g$rib-sealed/freq$7072$14xsgv
                                      g$rib$7676$14xsgv))))
                                (car g$subst*$7674$14xsgv))))))))
               g$search$7673$14xsgv)
             (g$stx-subst*$7090$14xsgv g$id$7671$14xsgv)
             (g$stx-mark*$7089$14xsgv g$id$7671$14xsgv))))
         (g$id->sym$7115$14xsgv g$id$7671$14xsgv)))))
   (g$label->binding$7129$14xsgv
     g$label->binding$10757$14xsgv
     (case-lambda
       ((g$x$7685$14xsgv g$r$7686$14xsgv)
        ((case-lambda
           ((g$t$7687$14xsgv)
            (if g$t$7687$14xsgv
              ((case-lambda
                 ((g$b$7688$14xsgv)
                  (if (if (pair? g$b$7688$14xsgv)
                        (begin '#f (eq? (car g$b$7688$14xsgv) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7355$14xsgv (cdr g$b$7688$14xsgv)))
                    (if (if (pair? g$b$7688$14xsgv)
                          (begin '#f (eq? (car g$b$7688$14xsgv) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7689$14xsgv g$loc$7690$14xsgv)
                          (cons '$rtd (symbol-value g$loc$7690$14xsgv))))
                       (g$cadr$4887$14xsgv g$b$7688$14xsgv)
                       (g$cddr$4889$14xsgv g$b$7688$14xsgv))
                      g$b$7688$14xsgv))))
               g$t$7687$14xsgv)
              ((case-lambda
                 ((g$t$7691$14xsgv)
                  (if g$t$7691$14xsgv
                    (cdr g$t$7691$14xsgv)
                    ((case-lambda
                       ((g$t$7692$14xsgv)
                        (if g$t$7692$14xsgv
                          ((case-lambda
                             ((g$env$7693$14xsgv)
                              ((case-lambda
                                 ((g$t$7694$14xsgv)
                                  (if g$t$7694$14xsgv
                                    ((case-lambda
                                       ((g$p$7695$14xsgv)
                                        (g$cons*$5358$14xsgv
                                          'lexical
                                          (cdr g$p$7695$14xsgv)
                                          '#f)))
                                     g$t$7694$14xsgv)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7685$14xsgv
                                 (g$interaction-env-locs$7472$14xsgv
                                   g$env$7693$14xsgv)))))
                           g$t$7692$14xsgv)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7508$14xsgv)))))
               (assq g$x$7685$14xsgv g$r$7686$14xsgv)))))
         (g$imported-label->binding$6928$14xsgv g$x$7685$14xsgv)))))
   (g$make-binding$7130$14xsgv g$make-binding$10758$14xsgv cons)
   (g$binding-type$7131$14xsgv g$binding-type$10759$14xsgv car)
   (g$binding-value$7132$14xsgv g$binding-value$10760$14xsgv cdr)
   (g$raise-unbound-error$7133$14xsgv
     g$raise-unbound-error$10761$14xsgv
     (case-lambda
       ((g$id$7696$14xsgv)
        (g$syntax-violation*$7500$14xsgv
          '#f
          '"unbound identifier"
          g$id$7696$14xsgv
          (g$make-undefined-violation$5692$14xsgv)))))
   (g$syntax-type$7134$14xsgv
     g$syntax-type$10762$14xsgv
     (case-lambda
       ((g$e$7697$14xsgv g$r$7698$14xsgv)
        (if (g$id?$7114$14xsgv g$e$7697$14xsgv)
          ((case-lambda
             ((g$id$7699$14xsgv)
              ((case-lambda
                 ((g$label$7700$14xsgv)
                  ((case-lambda
                     ((g$b$7701$14xsgv)
                      ((case-lambda
                         ((g$type$7702$14xsgv)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7700$14xsgv)
                                  (g$raise-unbound-error$7133$14xsgv
                                    g$id$7699$14xsgv)
                                  (void))
                                ((case-lambda
                                   ((g$t$7703$14xsgv)
                                    (if (memv
                                          g$t$7703$14xsgv
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7702$14xsgv
                                        (g$binding-value$7132$14xsgv
                                          g$b$7701$14xsgv)
                                        g$id$7699$14xsgv)
                                      (values 'other '#f '#f))))
                                 g$type$7702$14xsgv)))))))
                       (g$binding-type$7131$14xsgv g$b$7701$14xsgv))))
                   (g$label->binding$7129$14xsgv
                     g$label$7700$14xsgv
                     g$r$7698$14xsgv))))
               (g$id->label$7127$14xsgv g$id$7699$14xsgv))))
           g$e$7697$14xsgv)
          (if (g$syntax-pair?$7107$14xsgv g$e$7697$14xsgv)
            ((case-lambda
               ((g$id$7704$14xsgv)
                (if (g$id?$7114$14xsgv g$id$7704$14xsgv)
                  ((case-lambda
                     ((g$label$7705$14xsgv)
                      ((case-lambda
                         ((g$b$7706$14xsgv)
                          ((case-lambda
                             ((g$type$7707$14xsgv)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7705$14xsgv)
                                      (g$raise-unbound-error$7133$14xsgv
                                        g$id$7704$14xsgv)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7708$14xsgv)
                                        (if (memv
                                              g$t$7708$14xsgv
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7707$14xsgv
                                            (g$binding-value$7132$14xsgv
                                              g$b$7706$14xsgv)
                                            g$id$7704$14xsgv)
                                          (values 'call '#f '#f))))
                                     g$type$7707$14xsgv)))))))
                           (g$binding-type$7131$14xsgv g$b$7706$14xsgv))))
                       (g$label->binding$7129$14xsgv
                         g$label$7705$14xsgv
                         g$r$7698$14xsgv))))
                   (g$id->label$7127$14xsgv g$id$7704$14xsgv))
                  (values 'call '#f '#f))))
             (g$syntax-car$7111$14xsgv g$e$7697$14xsgv))
            ((case-lambda
               ((g$d$7709$14xsgv)
                (if (g$self-evaluating?$7122$14xsgv g$d$7709$14xsgv)
                  (values 'constant g$d$7709$14xsgv '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7125$14xsgv g$e$7697$14xsgv)))))))
   (g$sanitize-binding$7142$14xsgv
     g$sanitize-binding$10763$14xsgv
     (case-lambda
       ((g$x$7710$14xsgv g$src$7711$14xsgv)
        (if (procedure? g$x$7710$14xsgv)
          (g$cons*$5358$14xsgv 'local-macro g$x$7710$14xsgv g$src$7711$14xsgv)
          (if (if (pair? g$x$7710$14xsgv)
                (if (eq? (car g$x$7710$14xsgv) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7710$14xsgv)))
                  '#f)
                '#f)
            (g$cons*$5358$14xsgv
              'local-macro!
              (cdr g$x$7710$14xsgv)
              g$src$7711$14xsgv)
            (if (if (pair? g$x$7710$14xsgv)
                  (begin '#f (eq? (car g$x$7710$14xsgv) '$rtd))
                  '#f)
              g$x$7710$14xsgv
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7710$14xsgv)))))))
   (g$make-variable-transformer$7143$14xsgv
     g$make-variable-transformer$10764$14xsgv
     (case-lambda
       ((g$x$7712$14xsgv)
        (if (procedure? g$x$7712$14xsgv)
          (cons 'macro! g$x$7712$14xsgv)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7712$14xsgv)))))
   (g$variable-transformer?$7144$14xsgv
     g$variable-transformer?$10765$14xsgv
     (case-lambda
       ((g$x$7713$14xsgv)
        (if (pair? g$x$7713$14xsgv)
          (if (eq? (car g$x$7713$14xsgv) 'macro!)
            (begin '#f (procedure? (cdr g$x$7713$14xsgv)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7145$14xsgv
     g$variable-transformer-procedure$10766$14xsgv
     (case-lambda
       ((g$x$7714$14xsgv)
        (if (g$variable-transformer?$7144$14xsgv g$x$7714$14xsgv)
          (cdr g$x$7714$14xsgv)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7714$14xsgv)))))
   (g$make-eval-transformer$7146$14xsgv
     g$make-eval-transformer$10767$14xsgv
     (case-lambda
       ((g$x$7715$14xsgv)
        (g$sanitize-binding$7142$14xsgv
          (eval-core (g$expanded->core$6628$14xsgv g$x$7715$14xsgv))
          g$x$7715$14xsgv))))
   (g$parse-define$7332$14xsgv
     g$parse-define$10768$14xsgv
     (case-lambda
       ((g$x$7716$14xsgv)
        ((case-lambda
           ((g$t$7717$14xsgv)
            ((case-lambda
               ((g$ls/false$7718$14xsgv)
                (if (if g$ls/false$7718$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7719$14xsgv
                               g$fmls$7720$14xsgv
                               g$b$7721$14xsgv
                               g$b*$7722$14xsgv)
                             (g$id?$7114$14xsgv g$id$7719$14xsgv)))
                          g$ls/false$7718$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7723$14xsgv
                         g$fmls$7724$14xsgv
                         g$b$7725$14xsgv
                         g$b*$7726$14xsgv)
                       (begin
                         (g$verify-formals$7412$14xsgv
                           g$fmls$7724$14xsgv
                           g$x$7716$14xsgv)
                         (values
                           g$id$7723$14xsgv
                           (cons
                             'defun
                             (cons
                               g$fmls$7724$14xsgv
                               (cons g$b$7725$14xsgv g$b*$7726$14xsgv)))))))
                    g$ls/false$7718$14xsgv)
                  ((case-lambda
                     ((g$t$7727$14xsgv)
                      ((case-lambda
                         ((g$ls/false$7728$14xsgv)
                          (if (if g$ls/false$7728$14xsgv
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7729$14xsgv g$val$7730$14xsgv)
                                       (g$id?$7114$14xsgv g$id$7729$14xsgv)))
                                    g$ls/false$7728$14xsgv))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7731$14xsgv g$val$7732$14xsgv)
                                 (values
                                   g$id$7731$14xsgv
                                   (cons 'expr g$val$7732$14xsgv))))
                              g$ls/false$7728$14xsgv)
                            ((case-lambda
                               ((g$t$7733$14xsgv)
                                ((case-lambda
                                   ((g$ls/false$7734$14xsgv)
                                    (if (if g$ls/false$7734$14xsgv
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7735$14xsgv)
                                                 (g$id?$7114$14xsgv
                                                   g$id$7735$14xsgv)))
                                              g$ls/false$7734$14xsgv))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7736$14xsgv)
                                           (values
                                             g$id$7736$14xsgv
                                             (cons
                                               'expr
                                               (g$bless$7355$14xsgv '(void))))))
                                        g$ls/false$7734$14xsgv)
                                      (g$syntax-violation$7501$14xsgv
                                        '#f
                                        '"invalid syntax"
                                        g$t$7733$14xsgv))))
                                 (g$syntax-dispatch$7392$14xsgv
                                   g$t$7733$14xsgv
                                   '(_ any)))))
                             g$t$7727$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$7727$14xsgv
                         '(_ any any)))))
                   g$t$7717$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$7717$14xsgv
               '(_ (any . any) any . each-any)))))
         g$x$7716$14xsgv))))
   (g$parse-define-syntax$7333$14xsgv
     g$parse-define-syntax$10769$14xsgv
     (case-lambda
       ((g$x$7737$14xsgv)
        ((case-lambda
           ((g$t$7738$14xsgv)
            ((case-lambda
               ((g$ls/false$7739$14xsgv)
                (if (if g$ls/false$7739$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7740$14xsgv g$val$7741$14xsgv)
                             (g$id?$7114$14xsgv g$id$7740$14xsgv)))
                          g$ls/false$7739$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7742$14xsgv g$val$7743$14xsgv)
                       (values g$id$7742$14xsgv g$val$7743$14xsgv)))
                    g$ls/false$7739$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7738$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$7738$14xsgv '(_ any any)))))
         g$x$7737$14xsgv))))
   (g$scheme-stx-hashtable$7334$14xsgv
     g$scheme-stx-hashtable$10770$14xsgv
     (g$make-eq-hashtable$5149$14xsgv))
   (g$scheme-stx$7335$14xsgv
     g$scheme-stx$10771$14xsgv
     (case-lambda
       ((g$sym$7744$14xsgv)
        ((case-lambda
           ((g$t$7745$14xsgv)
            (if g$t$7745$14xsgv
              g$t$7745$14xsgv
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7746$14xsgv)
                    ((case-lambda
                       ((g$stx$7747$14xsgv)
                        ((case-lambda
                           ((g$stx$7748$14xsgv)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5153$14xsgv
                                    g$scheme-stx-hashtable$7334$14xsgv
                                    g$sym$7744$14xsgv
                                    g$stx$7748$14xsgv)
                                  g$stx$7748$14xsgv))))))
                         ((case-lambda
                            ((g$t$7749$14xsgv)
                             (if g$t$7749$14xsgv
                               ((case-lambda
                                  ((g$x$7750$14xsgv)
                                   ((case-lambda
                                      ((g$name$7751$14xsgv g$label$7752$14xsgv)
                                       (g$add-subst$7104$14xsgv
                                         (g$make-rib$7068$14xsgv
                                           (list g$name$7751$14xsgv)
                                           (list g$top-mark*$7056$14xsgv)
                                           (list g$label$7752$14xsgv)
                                           '#f)
                                         g$stx$7747$14xsgv)))
                                    (car g$x$7750$14xsgv)
                                    (cdr g$x$7750$14xsgv))))
                                g$t$7749$14xsgv)
                               g$stx$7747$14xsgv)))
                          (assq g$sym$7744$14xsgv g$subst$7746$14xsgv)))))
                     (g$make-stx$7087$14xsgv
                       g$sym$7744$14xsgv
                       g$top-mark*$7056$14xsgv
                       '()
                       '()))))
                 (g$library-subst$6886$14xsgv
                   (g$find-library-by-name$6922$14xsgv
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5152$14xsgv
           g$scheme-stx-hashtable$7334$14xsgv
           g$sym$7744$14xsgv
           '#f)))))
   (g$lexical-var$7336$14xsgv g$lexical-var$10772$14xsgv car)
   (g$lexical-mutable?$7337$14xsgv g$lexical-mutable?$10773$14xsgv cdr)
   (g$set-lexical-mutable!$7338$14xsgv
     g$set-lexical-mutable!$10774$14xsgv
     set-cdr!)
   (g$add-lexical$7339$14xsgv
     g$add-lexical$10775$14xsgv
     (case-lambda
       ((g$lab$7753$14xsgv g$lex$7754$14xsgv g$r$7755$14xsgv)
        (cons
          (g$cons*$5358$14xsgv g$lab$7753$14xsgv 'lexical g$lex$7754$14xsgv '#f)
          g$r$7755$14xsgv))))
   (g$add-lexicals$7340$14xsgv
     g$add-lexicals$10776$14xsgv
     (case-lambda
       ((g$lab*$7756$14xsgv g$lex*$7757$14xsgv g$r$7758$14xsgv)
        (if (null? g$lab*$7756$14xsgv)
          g$r$7758$14xsgv
          (g$add-lexicals$7340$14xsgv
            (cdr g$lab*$7756$14xsgv)
            (cdr g$lex*$7757$14xsgv)
            (g$add-lexical$7339$14xsgv
              (car g$lab*$7756$14xsgv)
              (car g$lex*$7757$14xsgv)
              g$r$7758$14xsgv))))))
   (g$letrec-helper$7341$14xsgv
     g$letrec-helper$10777$14xsgv
     (case-lambda
       ((g$e$7759$14xsgv g$r$7760$14xsgv g$mr$7761$14xsgv g$build$7762$14xsgv)
        ((case-lambda
           ((g$t$7763$14xsgv)
            ((case-lambda
               ((g$ls/false$7764$14xsgv)
                (if g$ls/false$7764$14xsgv
                  (apply
                    (case-lambda
                      ((g$lhs*$7765$14xsgv
                         g$rhs*$7766$14xsgv
                         g$b$7767$14xsgv
                         g$b*$7768$14xsgv)
                       (if (not (g$valid-bound-ids?$7119$14xsgv
                                  g$lhs*$7765$14xsgv))
                         (g$invalid-fmls-error$7357$14xsgv
                           g$e$7759$14xsgv
                           g$lhs*$7765$14xsgv)
                         ((case-lambda
                            ((g$lex*$7769$14xsgv g$lab*$7770$14xsgv)
                             ((case-lambda
                                ((g$rib$7771$14xsgv g$r$7772$14xsgv)
                                 ((case-lambda
                                    ((g$body$7773$14xsgv g$rhs*$7774$14xsgv)
                                     (g$build$7762$14xsgv
                                       '#f
                                       g$lex*$7769$14xsgv
                                       g$rhs*$7774$14xsgv
                                       g$body$7773$14xsgv)))
                                  (g$chi-internal$7421$14xsgv
                                    (g$add-subst$7104$14xsgv
                                      g$rib$7771$14xsgv
                                      (cons g$b$7767$14xsgv g$b*$7768$14xsgv))
                                    g$r$7772$14xsgv
                                    g$mr$7761$14xsgv)
                                  (g$chi-expr*$7408$14xsgv
                                    (map (case-lambda
                                           ((g$x$7775$14xsgv)
                                            (g$add-subst$7104$14xsgv
                                              g$rib$7771$14xsgv
                                              g$x$7775$14xsgv)))
                                         g$rhs*$7766$14xsgv)
                                    g$r$7772$14xsgv
                                    g$mr$7761$14xsgv))))
                              (g$make-full-rib$7082$14xsgv
                                g$lhs*$7765$14xsgv
                                g$lab*$7770$14xsgv)
                              (g$add-lexicals$7340$14xsgv
                                g$lab*$7770$14xsgv
                                g$lex*$7769$14xsgv
                                g$r$7760$14xsgv))))
                          (map g$gen-lexical$7058$14xsgv g$lhs*$7765$14xsgv)
                          (map g$gen-label$7060$14xsgv g$lhs*$7765$14xsgv)))))
                    g$ls/false$7764$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7763$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$7763$14xsgv
               '(_ #(each (any any)) any . each-any)))))
         g$e$7759$14xsgv))))
   (g$letrec-transformer$7342$14xsgv
     g$letrec-transformer$10778$14xsgv
     (case-lambda
       ((g$e$7776$14xsgv g$r$7777$14xsgv g$mr$7778$14xsgv)
        (g$letrec-helper$7341$14xsgv
          g$e$7776$14xsgv
          g$r$7777$14xsgv
          g$mr$7778$14xsgv
          g$build-letrec$7050$14xsgv))))
   (g$letrec*-transformer$7343$14xsgv
     g$letrec*-transformer$10779$14xsgv
     (case-lambda
       ((g$e$7779$14xsgv g$r$7780$14xsgv g$mr$7781$14xsgv)
        (g$letrec-helper$7341$14xsgv
          g$e$7779$14xsgv
          g$r$7780$14xsgv
          g$mr$7781$14xsgv
          g$build-letrec*$7051$14xsgv))))
   (g$fluid-let-syntax-transformer$7344$14xsgv
     g$fluid-let-syntax-transformer$10780$14xsgv
     (case-lambda
       ((g$e$7782$14xsgv g$r$7783$14xsgv g$mr$7784$14xsgv)
        (letrec* ((g$lookup$7785$14xsgv
                    (case-lambda
                      ((g$x$7795$14xsgv)
                       ((case-lambda
                          ((g$t$7796$14xsgv)
                           (if g$t$7796$14xsgv
                             g$t$7796$14xsgv
                             (begin
                               '#f
                               (g$syntax-violation$7501$14xsgv
                                 '#f
                                 '"unbound identifier"
                                 g$e$7782$14xsgv
                                 g$x$7795$14xsgv)))))
                        (g$id->label$7127$14xsgv g$x$7795$14xsgv))))))
          ((case-lambda
             ((g$t$7786$14xsgv)
              ((case-lambda
                 ((g$ls/false$7787$14xsgv)
                  (if g$ls/false$7787$14xsgv
                    (apply
                      (case-lambda
                        ((g$lhs*$7788$14xsgv
                           g$rhs*$7789$14xsgv
                           g$b$7790$14xsgv
                           g$b*$7791$14xsgv)
                         (if (not (g$valid-bound-ids?$7119$14xsgv
                                    g$lhs*$7788$14xsgv))
                           (g$invalid-fmls-error$7357$14xsgv
                             g$e$7782$14xsgv
                             g$lhs*$7788$14xsgv)
                           ((case-lambda
                              ((g$lab*$7792$14xsgv g$rhs*$7793$14xsgv)
                               (g$chi-internal$7421$14xsgv
                                 (cons g$b$7790$14xsgv g$b*$7791$14xsgv)
                                 (append
                                   (map cons
                                        g$lab*$7792$14xsgv
                                        g$rhs*$7793$14xsgv)
                                   g$r$7783$14xsgv)
                                 (append
                                   (map cons
                                        g$lab*$7792$14xsgv
                                        g$rhs*$7793$14xsgv)
                                   g$mr$7784$14xsgv))))
                            (map g$lookup$7785$14xsgv g$lhs*$7788$14xsgv)
                            (map (case-lambda
                                   ((g$x$7794$14xsgv)
                                    (g$make-eval-transformer$7146$14xsgv
                                      (g$expand-transformer$7437$14xsgv
                                        g$x$7794$14xsgv
                                        g$mr$7784$14xsgv))))
                                 g$rhs*$7789$14xsgv)))))
                      g$ls/false$7787$14xsgv)
                    (g$syntax-violation$7501$14xsgv
                      '#f
                      '"invalid syntax"
                      g$t$7786$14xsgv))))
               (g$syntax-dispatch$7392$14xsgv
                 g$t$7786$14xsgv
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7782$14xsgv)))))
   (g$type-descriptor-transformer$7345$14xsgv
     g$type-descriptor-transformer$10781$14xsgv
     (case-lambda
       ((g$e$7797$14xsgv g$r$7798$14xsgv g$mr$7799$14xsgv)
        ((case-lambda
           ((g$t$7800$14xsgv)
            ((case-lambda
               ((g$ls/false$7801$14xsgv)
                (if (if g$ls/false$7801$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7802$14xsgv)
                             (g$id?$7114$14xsgv g$id$7802$14xsgv)))
                          g$ls/false$7801$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7803$14xsgv)
                       ((case-lambda
                          ((g$lab$7804$14xsgv)
                           ((case-lambda
                              ((g$b$7805$14xsgv)
                               ((case-lambda
                                  ((g$type$7806$14xsgv)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7804$14xsgv)
                                           (g$raise-unbound-error$7133$14xsgv
                                             g$id$7803$14xsgv)
                                           (void))
                                         (if (not (if (eq? g$type$7806$14xsgv
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7132$14xsgv
                                                               g$b$7805$14xsgv))))
                                                    '#f))
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"not a record type"
                                             g$e$7797$14xsgv)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7132$14xsgv
                                             g$b$7805$14xsgv))))))))
                                (g$binding-type$7131$14xsgv g$b$7805$14xsgv))))
                            (g$label->binding$7129$14xsgv
                              g$lab$7804$14xsgv
                              g$r$7798$14xsgv))))
                        (g$id->label$7127$14xsgv g$id$7803$14xsgv))))
                    g$ls/false$7801$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7800$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$7800$14xsgv '(_ any)))))
         g$e$7797$14xsgv))))
   (g$record-type-descriptor-transformer$7346$14xsgv
     g$record-type-descriptor-transformer$10782$14xsgv
     (case-lambda
       ((g$e$7807$14xsgv g$r$7808$14xsgv g$mr$7809$14xsgv)
        ((case-lambda
           ((g$t$7810$14xsgv)
            ((case-lambda
               ((g$ls/false$7811$14xsgv)
                (if (if g$ls/false$7811$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7812$14xsgv)
                             (g$id?$7114$14xsgv g$id$7812$14xsgv)))
                          g$ls/false$7811$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7813$14xsgv)
                       ((case-lambda
                          ((g$lab$7814$14xsgv)
                           ((case-lambda
                              ((g$b$7815$14xsgv)
                               ((case-lambda
                                  ((g$type$7816$14xsgv)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7814$14xsgv)
                                           (g$raise-unbound-error$7133$14xsgv
                                             g$id$7813$14xsgv)
                                           (void))
                                         (if (not (if (eq? g$type$7816$14xsgv
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7132$14xsgv
                                                          g$b$7815$14xsgv)))
                                                    '#f))
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"not a record type"
                                             g$e$7807$14xsgv)
                                           (void))
                                         (g$chi-expr$7410$14xsgv
                                           (car (g$binding-value$7132$14xsgv
                                                  g$b$7815$14xsgv))
                                           g$r$7808$14xsgv
                                           g$mr$7809$14xsgv)))))))
                                (g$binding-type$7131$14xsgv g$b$7815$14xsgv))))
                            (g$label->binding$7129$14xsgv
                              g$lab$7814$14xsgv
                              g$r$7808$14xsgv))))
                        (g$id->label$7127$14xsgv g$id$7813$14xsgv))))
                    g$ls/false$7811$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7810$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$7810$14xsgv '(_ any)))))
         g$e$7807$14xsgv))))
   (g$record-constructor-descriptor-transformer$7347$14xsgv
     g$record-constructor-descriptor-transformer$10783$14xsgv
     (case-lambda
       ((g$e$7817$14xsgv g$r$7818$14xsgv g$mr$7819$14xsgv)
        ((case-lambda
           ((g$t$7820$14xsgv)
            ((case-lambda
               ((g$ls/false$7821$14xsgv)
                (if (if g$ls/false$7821$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7822$14xsgv)
                             (g$id?$7114$14xsgv g$id$7822$14xsgv)))
                          g$ls/false$7821$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7823$14xsgv)
                       ((case-lambda
                          ((g$lab$7824$14xsgv)
                           ((case-lambda
                              ((g$b$7825$14xsgv)
                               ((case-lambda
                                  ((g$type$7826$14xsgv)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7824$14xsgv)
                                           (g$raise-unbound-error$7133$14xsgv
                                             g$id$7823$14xsgv)
                                           (void))
                                         (if (not (if (eq? g$type$7826$14xsgv
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7132$14xsgv
                                                          g$b$7825$14xsgv)))
                                                    '#f))
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid type"
                                             g$e$7817$14xsgv)
                                           (void))
                                         (g$chi-expr$7410$14xsgv
                                           (g$cadr$4887$14xsgv
                                             (g$binding-value$7132$14xsgv
                                               g$b$7825$14xsgv))
                                           g$r$7818$14xsgv
                                           g$mr$7819$14xsgv)))))))
                                (g$binding-type$7131$14xsgv g$b$7825$14xsgv))))
                            (g$label->binding$7129$14xsgv
                              g$lab$7824$14xsgv
                              g$r$7818$14xsgv))))
                        (g$id->label$7127$14xsgv g$id$7823$14xsgv))))
                    g$ls/false$7821$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7820$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$7820$14xsgv '(_ any)))))
         g$e$7817$14xsgv))))
   (g$when-macro$7348$14xsgv
     g$when-macro$10784$14xsgv
     (case-lambda
       ((g$e$7827$14xsgv)
        ((case-lambda
           ((g$t$7828$14xsgv)
            ((case-lambda
               ((g$ls/false$7829$14xsgv)
                (if g$ls/false$7829$14xsgv
                  (apply
                    (case-lambda
                      ((g$test$7830$14xsgv g$e$7831$14xsgv g$e*$7832$14xsgv)
                       (g$bless$7355$14xsgv
                         (list
                           'if
                           g$test$7830$14xsgv
                           (cons
                             'begin
                             (cons g$e$7831$14xsgv g$e*$7832$14xsgv))))))
                    g$ls/false$7829$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7828$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$7828$14xsgv
               '(_ any any . each-any)))))
         g$e$7827$14xsgv))))
   (g$unless-macro$7349$14xsgv
     g$unless-macro$10785$14xsgv
     (case-lambda
       ((g$e$7833$14xsgv)
        ((case-lambda
           ((g$t$7834$14xsgv)
            ((case-lambda
               ((g$ls/false$7835$14xsgv)
                (if g$ls/false$7835$14xsgv
                  (apply
                    (case-lambda
                      ((g$test$7836$14xsgv g$e$7837$14xsgv g$e*$7838$14xsgv)
                       (g$bless$7355$14xsgv
                         (list
                           'if
                           (list 'not g$test$7836$14xsgv)
                           (cons
                             'begin
                             (cons g$e$7837$14xsgv g$e*$7838$14xsgv))))))
                    g$ls/false$7835$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7834$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$7834$14xsgv
               '(_ any any . each-any)))))
         g$e$7833$14xsgv))))
   (g$if-transformer$7350$14xsgv
     g$if-transformer$10786$14xsgv
     (case-lambda
       ((g$e$7839$14xsgv g$r$7840$14xsgv g$mr$7841$14xsgv)
        ((case-lambda
           ((g$t$7842$14xsgv)
            ((case-lambda
               ((g$ls/false$7843$14xsgv)
                (if g$ls/false$7843$14xsgv
                  (apply
                    (case-lambda
                      ((g$e0$7844$14xsgv g$e1$7845$14xsgv g$e2$7846$14xsgv)
                       (list
                         'if
                         (g$chi-expr$7410$14xsgv
                           g$e0$7844$14xsgv
                           g$r$7840$14xsgv
                           g$mr$7841$14xsgv)
                         (g$chi-expr$7410$14xsgv
                           g$e1$7845$14xsgv
                           g$r$7840$14xsgv
                           g$mr$7841$14xsgv)
                         (g$chi-expr$7410$14xsgv
                           g$e2$7846$14xsgv
                           g$r$7840$14xsgv
                           g$mr$7841$14xsgv))))
                    g$ls/false$7843$14xsgv)
                  ((case-lambda
                     ((g$t$7847$14xsgv)
                      ((case-lambda
                         ((g$ls/false$7848$14xsgv)
                          (if g$ls/false$7848$14xsgv
                            (apply
                              (case-lambda
                                ((g$e0$7849$14xsgv g$e1$7850$14xsgv)
                                 (list
                                   'if
                                   (g$chi-expr$7410$14xsgv
                                     g$e0$7849$14xsgv
                                     g$r$7840$14xsgv
                                     g$mr$7841$14xsgv)
                                   (g$chi-expr$7410$14xsgv
                                     g$e1$7850$14xsgv
                                     g$r$7840$14xsgv
                                     g$mr$7841$14xsgv)
                                   (g$build-void$7049$14xsgv))))
                              g$ls/false$7848$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$7847$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$7847$14xsgv
                         '(_ any any)))))
                   g$t$7842$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$7842$14xsgv '(_ any any any)))))
         g$e$7839$14xsgv))))
   (g$case-macro$7351$14xsgv
     g$case-macro$10787$14xsgv
     (case-lambda
       ((g$e$7851$14xsgv)
        (letrec* ((g$build-last$7852$14xsgv
                    (case-lambda
                      ((g$cls$7872$14xsgv)
                       ((case-lambda
                          ((g$t$7873$14xsgv)
                           ((case-lambda
                              ((g$ls/false$7874$14xsgv)
                               (if g$ls/false$7874$14xsgv
                                 (apply
                                   (case-lambda
                                     ((g$e$7875$14xsgv g$e*$7876$14xsgv)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$7875$14xsgv
                                          g$e*$7876$14xsgv))))
                                   g$ls/false$7874$14xsgv)
                                 ((case-lambda
                                    ((g$t$7877$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$7878$14xsgv)
                                         (if g$ls/false$7878$14xsgv
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$7853$14xsgv
                                                  g$cls$7872$14xsgv
                                                  '(if #f #f))))
                                             g$ls/false$7878$14xsgv)
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid syntax"
                                             g$t$7877$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$7877$14xsgv
                                        '_))))
                                  g$t$7873$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$7873$14xsgv
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$7872$14xsgv))))
                  (g$build-one$7853$14xsgv
                    (case-lambda
                      ((g$cls$7865$14xsgv g$k$7866$14xsgv)
                       ((case-lambda
                          ((g$t$7867$14xsgv)
                           ((case-lambda
                              ((g$ls/false$7868$14xsgv)
                               (if g$ls/false$7868$14xsgv
                                 (apply
                                   (case-lambda
                                     ((g$d*$7869$14xsgv
                                        g$e$7870$14xsgv
                                        g$e*$7871$14xsgv)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$7869$14xsgv))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$7870$14xsgv
                                            g$e*$7871$14xsgv))
                                        g$k$7866$14xsgv)))
                                   g$ls/false$7868$14xsgv)
                                 (g$syntax-violation$7501$14xsgv
                                   '#f
                                   '"invalid syntax"
                                   g$t$7867$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$7867$14xsgv
                              '(each-any any . each-any)))))
                        g$cls$7865$14xsgv)))))
          ((case-lambda
             ((g$t$7854$14xsgv)
              ((case-lambda
                 ((g$ls/false$7855$14xsgv)
                  (if g$ls/false$7855$14xsgv
                    (apply
                      (case-lambda
                        ((g$expr$7856$14xsgv)
                         (g$bless$7355$14xsgv
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$7856$14xsgv))
                               '((if #f #f)))))))
                      g$ls/false$7855$14xsgv)
                    ((case-lambda
                       ((g$t$7857$14xsgv)
                        ((case-lambda
                           ((g$ls/false$7858$14xsgv)
                            (if g$ls/false$7858$14xsgv
                              (apply
                                (case-lambda
                                  ((g$expr$7859$14xsgv
                                     g$cls$7860$14xsgv
                                     g$cls*$7861$14xsgv)
                                   (g$bless$7355$14xsgv
                                     (list
                                       'let
                                       (list (list 't g$expr$7859$14xsgv))
                                       ((letrec ((g$f$7862$14xsgv
                                                   (case-lambda
                                                     ((g$cls$7863$14xsgv
                                                        g$cls*$7864$14xsgv)
                                                      (if (null?
                                                            g$cls*$7864$14xsgv)
                                                        (g$build-last$7852$14xsgv
                                                          g$cls$7863$14xsgv)
                                                        (g$build-one$7853$14xsgv
                                                          g$cls$7863$14xsgv
                                                          (g$f$7862$14xsgv
                                                            (car g$cls*$7864$14xsgv)
                                                            (cdr g$cls*$7864$14xsgv))))))))
                                          g$f$7862$14xsgv)
                                        g$cls$7860$14xsgv
                                        g$cls*$7861$14xsgv)))))
                                g$ls/false$7858$14xsgv)
                              (g$syntax-violation$7501$14xsgv
                                '#f
                                '"invalid syntax"
                                g$t$7857$14xsgv))))
                         (g$syntax-dispatch$7392$14xsgv
                           g$t$7857$14xsgv
                           '(_ any any . each-any)))))
                     g$t$7854$14xsgv))))
               (g$syntax-dispatch$7392$14xsgv g$t$7854$14xsgv '(_ any)))))
           g$e$7851$14xsgv)))))
   (g$quote-transformer$7352$14xsgv
     g$quote-transformer$10788$14xsgv
     (case-lambda
       ((g$e$7879$14xsgv g$r$7880$14xsgv g$mr$7881$14xsgv)
        ((case-lambda
           ((g$t$7882$14xsgv)
            ((case-lambda
               ((g$ls/false$7883$14xsgv)
                (if g$ls/false$7883$14xsgv
                  (apply
                    (case-lambda
                      ((g$datum$7884$14xsgv)
                       (list
                         'quote
                         (g$stx->datum$7125$14xsgv g$datum$7884$14xsgv))))
                    g$ls/false$7883$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7882$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$7882$14xsgv '(_ any)))))
         g$e$7879$14xsgv))))
   (g$case-lambda-transformer$7353$14xsgv
     g$case-lambda-transformer$10789$14xsgv
     (case-lambda
       ((g$e$7885$14xsgv g$r$7886$14xsgv g$mr$7887$14xsgv)
        ((case-lambda
           ((g$t$7888$14xsgv)
            ((case-lambda
               ((g$ls/false$7889$14xsgv)
                (if g$ls/false$7889$14xsgv
                  (apply
                    (case-lambda
                      ((g$fmls*$7890$14xsgv g$b*$7891$14xsgv g$b**$7892$14xsgv)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7414$14xsgv
                              g$e$7885$14xsgv
                              g$fmls*$7890$14xsgv
                              (map cons g$b*$7891$14xsgv g$b**$7892$14xsgv)
                              g$r$7886$14xsgv
                              g$mr$7887$14xsgv)))
                         (case-lambda
                           ((g$fmls*$7895$14xsgv g$body*$7896$14xsgv)
                            ((case-lambda
                               ((g$body*$7897$14xsgv g$fmls*$7898$14xsgv)
                                (g$build-case-lambda$7046$14xsgv
                                  '#f
                                  g$fmls*$7898$14xsgv
                                  g$body*$7897$14xsgv)))
                             g$body*$7896$14xsgv
                             g$fmls*$7895$14xsgv))))))
                    g$ls/false$7889$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7888$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$7888$14xsgv
               '(_ . #(each (any any . each-any)))))))
         g$e$7885$14xsgv))))
   (g$lambda-transformer$7354$14xsgv
     g$lambda-transformer$10790$14xsgv
     (case-lambda
       ((g$e$7899$14xsgv g$r$7900$14xsgv g$mr$7901$14xsgv)
        ((case-lambda
           ((g$t$7902$14xsgv)
            ((case-lambda
               ((g$ls/false$7903$14xsgv)
                (if g$ls/false$7903$14xsgv
                  (apply
                    (case-lambda
                      ((g$fmls$7904$14xsgv g$b$7905$14xsgv g$b*$7906$14xsgv)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7413$14xsgv
                              g$e$7899$14xsgv
                              g$fmls$7904$14xsgv
                              (cons g$b$7905$14xsgv g$b*$7906$14xsgv)
                              g$r$7900$14xsgv
                              g$mr$7901$14xsgv)))
                         (case-lambda
                           ((g$fmls$7909$14xsgv g$body$7910$14xsgv)
                            ((case-lambda
                               ((g$body$7911$14xsgv g$fmls$7912$14xsgv)
                                (g$build-lambda$7045$14xsgv
                                  '#f
                                  g$fmls$7912$14xsgv
                                  g$body$7911$14xsgv)))
                             g$body$7910$14xsgv
                             g$fmls$7909$14xsgv))))))
                    g$ls/false$7903$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7902$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$7902$14xsgv
               '(_ any any . each-any)))))
         g$e$7899$14xsgv))))
   (g$bless$7355$14xsgv
     g$bless$10791$14xsgv
     (case-lambda
       ((g$x$7913$14xsgv)
        (g$mkstx$7102$14xsgv
          ((letrec ((g$f$7914$14xsgv
                      (case-lambda
                        ((g$x$7915$14xsgv)
                         (if (g$stx?$7086$14xsgv g$x$7915$14xsgv)
                           g$x$7915$14xsgv
                           (if (pair? g$x$7915$14xsgv)
                             (cons
                               (g$f$7914$14xsgv (car g$x$7915$14xsgv))
                               (g$f$7914$14xsgv (cdr g$x$7915$14xsgv)))
                             (if (symbol? g$x$7915$14xsgv)
                               (g$scheme-stx$7335$14xsgv g$x$7915$14xsgv)
                               (if (vector? g$x$7915$14xsgv)
                                 (vector-map g$f$7914$14xsgv g$x$7915$14xsgv)
                                 g$x$7915$14xsgv))))))))
             g$f$7914$14xsgv)
           g$x$7913$14xsgv)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7356$14xsgv
     g$with-syntax-macro$10792$14xsgv
     (case-lambda
       ((g$e$7916$14xsgv)
        ((case-lambda
           ((g$t$7917$14xsgv)
            ((case-lambda
               ((g$ls/false$7918$14xsgv)
                (if g$ls/false$7918$14xsgv
                  (apply
                    (case-lambda
                      ((g$pat*$7919$14xsgv
                         g$expr*$7920$14xsgv
                         g$b$7921$14xsgv
                         g$b*$7922$14xsgv)
                       ((case-lambda
                          ((g$idn*$7923$14xsgv)
                           (begin
                             (g$verify-formals$7412$14xsgv
                               (map car g$idn*$7923$14xsgv)
                               g$e$7916$14xsgv)
                             ((case-lambda
                                ((g$t*$7924$14xsgv)
                                 (g$bless$7355$14xsgv
                                   (list
                                     'let
                                     (map list
                                          g$t*$7924$14xsgv
                                          g$expr*$7920$14xsgv)
                                     ((letrec ((g$f$7925$14xsgv
                                                 (case-lambda
                                                   ((g$pat*$7926$14xsgv
                                                      g$t*$7927$14xsgv)
                                                    (if (null?
                                                          g$pat*$7926$14xsgv)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$7921$14xsgv
                                                            g$b*$7922$14xsgv)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$7927$14xsgv)
                                                        '()
                                                        (list
                                                          (car g$pat*$7926$14xsgv)
                                                          (g$f$7925$14xsgv
                                                            (cdr g$pat*$7926$14xsgv)
                                                            (cdr g$t*$7927$14xsgv)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$7926$14xsgv))
                                                            (car g$t*$7927$14xsgv)))))))))
                                        g$f$7925$14xsgv)
                                      g$pat*$7919$14xsgv
                                      g$t*$7924$14xsgv)))))
                              (g$generate-temporaries$7491$14xsgv
                                g$expr*$7920$14xsgv)))))
                        ((letrec ((g$f$7928$14xsgv
                                    (case-lambda
                                      ((g$pat*$7929$14xsgv)
                                       (if (null? g$pat*$7929$14xsgv)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7391$14xsgv
                                                (car g$pat*$7929$14xsgv)
                                                '())))
                                           (case-lambda
                                             ((g$pat$7932$14xsgv
                                                g$idn*$7933$14xsgv)
                                              ((case-lambda
                                                 ((g$idn*$7934$14xsgv
                                                    g$pat$7935$14xsgv)
                                                  (append
                                                    g$idn*$7934$14xsgv
                                                    (g$f$7928$14xsgv
                                                      (cdr g$pat*$7929$14xsgv)))))
                                               g$idn*$7933$14xsgv
                                               g$pat$7932$14xsgv)))))))))
                           g$f$7928$14xsgv)
                         g$pat*$7919$14xsgv))))
                    g$ls/false$7918$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$7917$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$7917$14xsgv
               '(_ #(each (any any)) any . each-any)))))
         g$e$7916$14xsgv))))
   (g$invalid-fmls-error$7357$14xsgv
     g$invalid-fmls-error$10793$14xsgv
     (case-lambda
       ((g$stx$7936$14xsgv g$fmls$7937$14xsgv)
        ((case-lambda
           ((g$t$7938$14xsgv)
            ((case-lambda
               ((g$ls/false$7939$14xsgv)
                (if g$ls/false$7939$14xsgv
                  (apply
                    (case-lambda
                      ((g$id*$7940$14xsgv g$last$7941$14xsgv)
                       ((letrec ((g$f$7942$14xsgv
                                   (case-lambda
                                     ((g$id*$7943$14xsgv)
                                      (if (null? g$id*$7943$14xsgv)
                                        (values)
                                        (if (not (g$id?$7114$14xsgv
                                                   (car g$id*$7943$14xsgv)))
                                          (g$syntax-violation$7501$14xsgv
                                            '#f
                                            '"not an identifier"
                                            g$stx$7936$14xsgv
                                            (car g$id*$7943$14xsgv))
                                          (begin
                                            (g$f$7942$14xsgv
                                              (cdr g$id*$7943$14xsgv))
                                            (if (g$bound-id-member?$7121$14xsgv
                                                  (car g$id*$7943$14xsgv)
                                                  (cdr g$id*$7943$14xsgv))
                                              (g$syntax-violation$7501$14xsgv
                                                '#f
                                                '"duplicate binding"
                                                g$stx$7936$14xsgv
                                                (car g$id*$7943$14xsgv))
                                              (void)))))))))
                          g$f$7942$14xsgv)
                        (if (g$id?$7114$14xsgv g$last$7941$14xsgv)
                          (cons g$last$7941$14xsgv g$id*$7940$14xsgv)
                          (if (g$syntax-null?$7109$14xsgv g$last$7941$14xsgv)
                            g$id*$7940$14xsgv
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"not an identifier"
                              g$stx$7936$14xsgv
                              g$last$7941$14xsgv))))))
                    g$ls/false$7939$14xsgv)
                  ((case-lambda
                     ((g$t$7944$14xsgv)
                      ((case-lambda
                         ((g$ls/false$7945$14xsgv)
                          (if g$ls/false$7945$14xsgv
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7501$14xsgv
                                   '#f
                                   '"malformed binding form"
                                   g$stx$7936$14xsgv
                                   g$fmls$7937$14xsgv)))
                              g$ls/false$7945$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$7944$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv g$t$7944$14xsgv '_))))
                   g$t$7938$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$7938$14xsgv
               '#(each+ any () any)))))
         g$fmls$7937$14xsgv))))
   (g$let-macro$7358$14xsgv
     g$let-macro$10794$14xsgv
     (case-lambda
       ((g$stx$7946$14xsgv)
        ((case-lambda
           ((g$t$7947$14xsgv)
            ((case-lambda
               ((g$ls/false$7948$14xsgv)
                (if g$ls/false$7948$14xsgv
                  (apply
                    (case-lambda
                      ((g$lhs*$7949$14xsgv
                         g$rhs*$7950$14xsgv
                         g$b$7951$14xsgv
                         g$b*$7952$14xsgv)
                       (if (g$valid-bound-ids?$7119$14xsgv g$lhs*$7949$14xsgv)
                         (g$bless$7355$14xsgv
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$7949$14xsgv
                                 (cons g$b$7951$14xsgv g$b*$7952$14xsgv)))
                             g$rhs*$7950$14xsgv))
                         (g$invalid-fmls-error$7357$14xsgv
                           g$stx$7946$14xsgv
                           g$lhs*$7949$14xsgv))))
                    g$ls/false$7948$14xsgv)
                  ((case-lambda
                     ((g$t$7953$14xsgv)
                      ((case-lambda
                         ((g$ls/false$7954$14xsgv)
                          (if (if g$ls/false$7954$14xsgv
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$7955$14xsgv
                                         g$lhs*$7956$14xsgv
                                         g$rhs*$7957$14xsgv
                                         g$b$7958$14xsgv
                                         g$b*$7959$14xsgv)
                                       (g$id?$7114$14xsgv g$f$7955$14xsgv)))
                                    g$ls/false$7954$14xsgv))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$7960$14xsgv
                                   g$lhs*$7961$14xsgv
                                   g$rhs*$7962$14xsgv
                                   g$b$7963$14xsgv
                                   g$b*$7964$14xsgv)
                                 (if (g$valid-bound-ids?$7119$14xsgv
                                       g$lhs*$7961$14xsgv)
                                   (g$bless$7355$14xsgv
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$7960$14xsgv
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$7961$14xsgv
                                                 (cons
                                                   g$b$7963$14xsgv
                                                   g$b*$7964$14xsgv)))))
                                         g$f$7960$14xsgv)
                                       g$rhs*$7962$14xsgv))
                                   (g$invalid-fmls-error$7357$14xsgv
                                     g$stx$7946$14xsgv
                                     g$lhs*$7961$14xsgv))))
                              g$ls/false$7954$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$7953$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$7953$14xsgv
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$7947$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$7947$14xsgv
               '(_ #(each (any any)) any . each-any)))))
         g$stx$7946$14xsgv))))
   (g$let-values-macro$7359$14xsgv
     g$let-values-macro$10795$14xsgv
     (case-lambda
       ((g$stx$7965$14xsgv)
        (letrec* ((g$rename$7966$14xsgv
                    (case-lambda
                      ((g$x$8017$14xsgv g$old*$8018$14xsgv g$new*$8019$14xsgv)
                       (begin
                         (if (not (g$id?$7114$14xsgv g$x$8017$14xsgv))
                           (g$syntax-violation$7501$14xsgv
                             '#f
                             '"not an indentifier"
                             g$stx$7965$14xsgv
                             g$x$8017$14xsgv)
                           (void))
                         (if (g$bound-id-member?$7121$14xsgv
                               g$x$8017$14xsgv
                               g$old*$8018$14xsgv)
                           (g$syntax-violation$7501$14xsgv
                             '#f
                             '"duplicate binding"
                             g$stx$7965$14xsgv
                             g$x$8017$14xsgv)
                           (void))
                         ((case-lambda
                            ((g$y$8020$14xsgv)
                             (values
                               g$y$8020$14xsgv
                               (cons g$x$8017$14xsgv g$old*$8018$14xsgv)
                               (cons g$y$8020$14xsgv g$new*$8019$14xsgv))))
                          (gensym
                            (g$syntax->datum$7504$14xsgv g$x$8017$14xsgv)))))))
                  (g$rename*$7967$14xsgv
                    (case-lambda
                      ((g$x*$8008$14xsgv g$old*$8009$14xsgv g$new*$8010$14xsgv)
                       (if (null? g$x*$8008$14xsgv)
                         (values '() g$old*$8009$14xsgv g$new*$8010$14xsgv)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$7966$14xsgv
                                (car g$x*$8008$14xsgv)
                                g$old*$8009$14xsgv
                                g$new*$8010$14xsgv)))
                           (case-lambda
                             ((g$x$8011$14xsgv
                                g$old*$8012$14xsgv
                                g$new*$8013$14xsgv)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$7967$14xsgv
                                     (cdr g$x*$8008$14xsgv)
                                     g$old*$8012$14xsgv
                                     g$new*$8013$14xsgv)))
                                (case-lambda
                                  ((g$x*$8014$14xsgv
                                     g$old*$8015$14xsgv
                                     g$new*$8016$14xsgv)
                                   (values
                                     (cons g$x$8011$14xsgv g$x*$8014$14xsgv)
                                     g$old*$8015$14xsgv
                                     g$new*$8016$14xsgv))))))))))))
          ((case-lambda
             ((g$t$7968$14xsgv)
              ((case-lambda
                 ((g$ls/false$7969$14xsgv)
                  (if g$ls/false$7969$14xsgv
                    (apply
                      (case-lambda
                        ((g$b$7970$14xsgv g$b*$7971$14xsgv)
                         (g$cons*$5358$14xsgv
                           (g$bless$7355$14xsgv 'let)
                           '()
                           g$b$7970$14xsgv
                           g$b*$7971$14xsgv)))
                      g$ls/false$7969$14xsgv)
                    ((case-lambda
                       ((g$t$7972$14xsgv)
                        ((case-lambda
                           ((g$ls/false$7973$14xsgv)
                            (if g$ls/false$7973$14xsgv
                              (apply
                                (case-lambda
                                  ((g$lhs*$7974$14xsgv
                                     g$rhs*$7975$14xsgv
                                     g$b$7976$14xsgv
                                     g$b*$7977$14xsgv)
                                   (g$bless$7355$14xsgv
                                     ((letrec ((g$f$7978$14xsgv
                                                 (case-lambda
                                                   ((g$lhs*$7979$14xsgv
                                                      g$rhs*$7980$14xsgv
                                                      g$old*$7981$14xsgv
                                                      g$new*$7982$14xsgv)
                                                    (if (null?
                                                          g$lhs*$7979$14xsgv)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$7981$14xsgv
                                                               g$new*$7982$14xsgv)
                                                          (cons
                                                            g$b$7976$14xsgv
                                                            g$b*$7977$14xsgv)))
                                                      ((case-lambda
                                                         ((g$t$7983$14xsgv)
                                                          ((case-lambda
                                                             ((g$ls/false$7984$14xsgv)
                                                              (if g$ls/false$7984$14xsgv
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$7985$14xsgv)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$7967$14xsgv
                                                                            g$x*$7985$14xsgv
                                                                            g$old*$7981$14xsgv
                                                                            g$new*$7982$14xsgv)))
                                                                       (case-lambda
                                                                         ((g$y*$7989$14xsgv
                                                                            g$old*$7990$14xsgv
                                                                            g$new*$7991$14xsgv)
                                                                          ((case-lambda
                                                                             ((g$new*$7992$14xsgv
                                                                                g$old*$7993$14xsgv
                                                                                g$y*$7994$14xsgv)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$7980$14xsgv))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$7994$14xsgv
                                                                                  (g$f$7978$14xsgv
                                                                                    (cdr g$lhs*$7979$14xsgv)
                                                                                    (cdr g$rhs*$7980$14xsgv)
                                                                                    g$old*$7993$14xsgv
                                                                                    g$new*$7992$14xsgv)))))
                                                                           g$new*$7991$14xsgv
                                                                           g$old*$7990$14xsgv
                                                                           g$y*$7989$14xsgv))))))
                                                                  g$ls/false$7984$14xsgv)
                                                                ((case-lambda
                                                                   ((g$t$7995$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$ls/false$7996$14xsgv)
                                                                        (if g$ls/false$7996$14xsgv
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$7997$14xsgv
                                                                                 g$x$7998$14xsgv)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$7966$14xsgv
                                                                                      g$x$7998$14xsgv
                                                                                      g$old*$7981$14xsgv
                                                                                      g$new*$7982$14xsgv)))
                                                                                 (case-lambda
                                                                                   ((g$y$7999$14xsgv
                                                                                      g$old*$8000$14xsgv
                                                                                      g$new*$8001$14xsgv)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$7967$14xsgv
                                                                                           g$x*$7997$14xsgv
                                                                                           g$old*$8000$14xsgv
                                                                                           g$new*$8001$14xsgv)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8002$14xsgv
                                                                                           g$old*$8003$14xsgv
                                                                                           g$new*$8004$14xsgv)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$7980$14xsgv))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8002$14xsgv
                                                                                               g$y$7999$14xsgv)
                                                                                             (g$f$7978$14xsgv
                                                                                               (cdr g$lhs*$7979$14xsgv)
                                                                                               (cdr g$rhs*$7980$14xsgv)
                                                                                               g$old*$8003$14xsgv
                                                                                               g$new*$8004$14xsgv)))))))))))
                                                                            g$ls/false$7996$14xsgv)
                                                                          ((case-lambda
                                                                             ((g$t$8005$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8006$14xsgv)
                                                                                  (if g$ls/false$8006$14xsgv
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8007$14xsgv)
                                                                                         (g$syntax-violation$7501$14xsgv
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$7965$14xsgv
                                                                                           g$others$8007$14xsgv)))
                                                                                      g$ls/false$8006$14xsgv)
                                                                                    (g$syntax-violation$7501$14xsgv
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8005$14xsgv))))
                                                                               (g$syntax-dispatch$7392$14xsgv
                                                                                 g$t$8005$14xsgv
                                                                                 'any))))
                                                                           g$t$7995$14xsgv))))
                                                                     (g$syntax-dispatch$7392$14xsgv
                                                                       g$t$7995$14xsgv
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$7983$14xsgv))))
                                                           (g$syntax-dispatch$7392$14xsgv
                                                             g$t$7983$14xsgv
                                                             'each-any))))
                                                       (car g$lhs*$7979$14xsgv)))))))
                                        g$f$7978$14xsgv)
                                      g$lhs*$7974$14xsgv
                                      g$rhs*$7975$14xsgv
                                      '()
                                      '()))))
                                g$ls/false$7973$14xsgv)
                              (g$syntax-violation$7501$14xsgv
                                '#f
                                '"invalid syntax"
                                g$t$7972$14xsgv))))
                         (g$syntax-dispatch$7392$14xsgv
                           g$t$7972$14xsgv
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$7968$14xsgv))))
               (g$syntax-dispatch$7392$14xsgv
                 g$t$7968$14xsgv
                 '(_ () any . each-any)))))
           g$stx$7965$14xsgv)))))
   (g$let*-values-macro$7360$14xsgv
     g$let*-values-macro$10796$14xsgv
     (case-lambda
       ((g$stx$8021$14xsgv)
        (letrec* ((g$check$8022$14xsgv
                    (case-lambda
                      ((g$x*$8046$14xsgv)
                       (if (not (null? g$x*$8046$14xsgv))
                         ((case-lambda
                            ((g$x$8047$14xsgv)
                             (begin
                               (if (not (g$id?$7114$14xsgv g$x$8047$14xsgv))
                                 (g$syntax-violation$7501$14xsgv
                                   '#f
                                   '"not an identifier"
                                   g$stx$8021$14xsgv
                                   g$x$8047$14xsgv)
                                 (void))
                               (g$check$8022$14xsgv (cdr g$x*$8046$14xsgv))
                               (if (g$bound-id-member?$7121$14xsgv
                                     g$x$8047$14xsgv
                                     (cdr g$x*$8046$14xsgv))
                                 (g$syntax-violation$7501$14xsgv
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8021$14xsgv
                                   g$x$8047$14xsgv)
                                 (void)))))
                          (car g$x*$8046$14xsgv))
                         (void))))))
          ((case-lambda
             ((g$t$8023$14xsgv)
              ((case-lambda
                 ((g$ls/false$8024$14xsgv)
                  (if g$ls/false$8024$14xsgv
                    (apply
                      (case-lambda
                        ((g$b$8025$14xsgv g$b*$8026$14xsgv)
                         (g$cons*$5358$14xsgv
                           (g$bless$7355$14xsgv 'let)
                           '()
                           g$b$8025$14xsgv
                           g$b*$8026$14xsgv)))
                      g$ls/false$8024$14xsgv)
                    ((case-lambda
                       ((g$t$8027$14xsgv)
                        ((case-lambda
                           ((g$ls/false$8028$14xsgv)
                            (if g$ls/false$8028$14xsgv
                              (apply
                                (case-lambda
                                  ((g$lhs*$8029$14xsgv
                                     g$rhs*$8030$14xsgv
                                     g$b$8031$14xsgv
                                     g$b*$8032$14xsgv)
                                   (g$bless$7355$14xsgv
                                     ((letrec ((g$f$8033$14xsgv
                                                 (case-lambda
                                                   ((g$lhs*$8034$14xsgv
                                                      g$rhs*$8035$14xsgv)
                                                    (if (null?
                                                          g$lhs*$8034$14xsgv)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8031$14xsgv
                                                          g$b*$8032$14xsgv))
                                                      ((case-lambda
                                                         ((g$t$8036$14xsgv)
                                                          ((case-lambda
                                                             ((g$ls/false$8037$14xsgv)
                                                              (if g$ls/false$8037$14xsgv
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8038$14xsgv)
                                                                     (begin
                                                                       (g$check$8022$14xsgv
                                                                         g$x*$8038$14xsgv)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8035$14xsgv))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8038$14xsgv
                                                                           (g$f$8033$14xsgv
                                                                             (cdr g$lhs*$8034$14xsgv)
                                                                             (cdr g$rhs*$8035$14xsgv)))))))
                                                                  g$ls/false$8037$14xsgv)
                                                                ((case-lambda
                                                                   ((g$t$8039$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8040$14xsgv)
                                                                        (if g$ls/false$8040$14xsgv
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8041$14xsgv
                                                                                 g$x$8042$14xsgv)
                                                                               (begin
                                                                                 (g$check$8022$14xsgv
                                                                                   (cons
                                                                                     g$x$8042$14xsgv
                                                                                     g$x*$8041$14xsgv))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8035$14xsgv))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8041$14xsgv
                                                                                       g$x$8042$14xsgv)
                                                                                     (g$f$8033$14xsgv
                                                                                       (cdr g$lhs*$8034$14xsgv)
                                                                                       (cdr g$rhs*$8035$14xsgv)))))))
                                                                            g$ls/false$8040$14xsgv)
                                                                          ((case-lambda
                                                                             ((g$t$8043$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8044$14xsgv)
                                                                                  (if g$ls/false$8044$14xsgv
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8045$14xsgv)
                                                                                         (g$syntax-violation$7501$14xsgv
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8021$14xsgv
                                                                                           g$others$8045$14xsgv)))
                                                                                      g$ls/false$8044$14xsgv)
                                                                                    (g$syntax-violation$7501$14xsgv
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8043$14xsgv))))
                                                                               (g$syntax-dispatch$7392$14xsgv
                                                                                 g$t$8043$14xsgv
                                                                                 'any))))
                                                                           g$t$8039$14xsgv))))
                                                                     (g$syntax-dispatch$7392$14xsgv
                                                                       g$t$8039$14xsgv
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8036$14xsgv))))
                                                           (g$syntax-dispatch$7392$14xsgv
                                                             g$t$8036$14xsgv
                                                             'each-any))))
                                                       (car g$lhs*$8034$14xsgv)))))))
                                        g$f$8033$14xsgv)
                                      g$lhs*$8029$14xsgv
                                      g$rhs*$8030$14xsgv))))
                                g$ls/false$8028$14xsgv)
                              (g$syntax-violation$7501$14xsgv
                                '#f
                                '"invalid syntax"
                                g$t$8027$14xsgv))))
                         (g$syntax-dispatch$7392$14xsgv
                           g$t$8027$14xsgv
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8023$14xsgv))))
               (g$syntax-dispatch$7392$14xsgv
                 g$t$8023$14xsgv
                 '(_ () any . each-any)))))
           g$stx$8021$14xsgv)))))
   (g$trace-lambda-macro$7361$14xsgv
     g$trace-lambda-macro$10797$14xsgv
     (case-lambda
       ((g$stx$8048$14xsgv)
        ((case-lambda
           ((g$t$8049$14xsgv)
            ((case-lambda
               ((g$ls/false$8050$14xsgv)
                (if g$ls/false$8050$14xsgv
                  (apply
                    (case-lambda
                      ((g$who$8051$14xsgv
                         g$fmls$8052$14xsgv
                         g$b$8053$14xsgv
                         g$b*$8054$14xsgv)
                       (if (g$valid-bound-ids?$7119$14xsgv g$fmls$8052$14xsgv)
                         (g$bless$7355$14xsgv
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8051$14xsgv)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8052$14xsgv
                                 (cons g$b$8053$14xsgv g$b*$8054$14xsgv)))))
                         (g$invalid-fmls-error$7357$14xsgv
                           g$stx$8048$14xsgv
                           g$fmls$8052$14xsgv))))
                    g$ls/false$8050$14xsgv)
                  ((case-lambda
                     ((g$t$8055$14xsgv)
                      ((case-lambda
                         ((g$ls/false$8056$14xsgv)
                          (if g$ls/false$8056$14xsgv
                            (apply
                              (case-lambda
                                ((g$who$8057$14xsgv
                                   g$fmls$8058$14xsgv
                                   g$last$8059$14xsgv
                                   g$b$8060$14xsgv
                                   g$b*$8061$14xsgv)
                                 (if (g$valid-bound-ids?$7119$14xsgv
                                       (cons
                                         g$last$8059$14xsgv
                                         g$fmls$8058$14xsgv))
                                   (g$bless$7355$14xsgv
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8057$14xsgv)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8058$14xsgv
                                             g$last$8059$14xsgv)
                                           (cons
                                             g$b$8060$14xsgv
                                             g$b*$8061$14xsgv)))))
                                   (g$invalid-fmls-error$7357$14xsgv
                                     g$stx$8048$14xsgv
                                     (append
                                       g$fmls$8058$14xsgv
                                       g$last$8059$14xsgv)))))
                              g$ls/false$8056$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$8055$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$8055$14xsgv
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8049$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$8049$14xsgv
               '(_ any each-any any . each-any)))))
         g$stx$8048$14xsgv))))
   (g$trace-define-macro$7362$14xsgv
     g$trace-define-macro$10798$14xsgv
     (case-lambda
       ((g$stx$8062$14xsgv)
        ((case-lambda
           ((g$t$8063$14xsgv)
            ((case-lambda
               ((g$ls/false$8064$14xsgv)
                (if g$ls/false$8064$14xsgv
                  (apply
                    (case-lambda
                      ((g$who$8065$14xsgv
                         g$fmls$8066$14xsgv
                         g$b$8067$14xsgv
                         g$b*$8068$14xsgv)
                       (if (g$valid-bound-ids?$7119$14xsgv g$fmls$8066$14xsgv)
                         (g$bless$7355$14xsgv
                           (list
                             'define
                             g$who$8065$14xsgv
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8065$14xsgv)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8066$14xsgv
                                   (cons g$b$8067$14xsgv g$b*$8068$14xsgv))))))
                         (g$invalid-fmls-error$7357$14xsgv
                           g$stx$8062$14xsgv
                           g$fmls$8066$14xsgv))))
                    g$ls/false$8064$14xsgv)
                  ((case-lambda
                     ((g$t$8069$14xsgv)
                      ((case-lambda
                         ((g$ls/false$8070$14xsgv)
                          (if g$ls/false$8070$14xsgv
                            (apply
                              (case-lambda
                                ((g$who$8071$14xsgv
                                   g$fmls$8072$14xsgv
                                   g$last$8073$14xsgv
                                   g$b$8074$14xsgv
                                   g$b*$8075$14xsgv)
                                 (if (g$valid-bound-ids?$7119$14xsgv
                                       (cons
                                         g$last$8073$14xsgv
                                         g$fmls$8072$14xsgv))
                                   (g$bless$7355$14xsgv
                                     (list
                                       'define
                                       g$who$8071$14xsgv
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8071$14xsgv)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8072$14xsgv
                                               g$last$8073$14xsgv)
                                             (cons
                                               g$b$8074$14xsgv
                                               g$b*$8075$14xsgv))))))
                                   (g$invalid-fmls-error$7357$14xsgv
                                     g$stx$8062$14xsgv
                                     (append
                                       g$fmls$8072$14xsgv
                                       g$last$8073$14xsgv)))))
                              g$ls/false$8070$14xsgv)
                            ((case-lambda
                               ((g$t$8076$14xsgv)
                                ((case-lambda
                                   ((g$ls/false$8077$14xsgv)
                                    (if g$ls/false$8077$14xsgv
                                      (apply
                                        (case-lambda
                                          ((g$who$8078$14xsgv
                                             g$expr$8079$14xsgv)
                                           (if (g$id?$7114$14xsgv
                                                 g$who$8078$14xsgv)
                                             (g$bless$7355$14xsgv
                                               (list
                                                 'define
                                                 g$who$8078$14xsgv
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8079$14xsgv))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8078$14xsgv)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7501$14xsgv
                                               '#f
                                               '"invalid name"
                                               g$stx$8062$14xsgv))))
                                        g$ls/false$8077$14xsgv)
                                      (g$syntax-violation$7501$14xsgv
                                        '#f
                                        '"invalid syntax"
                                        g$t$8076$14xsgv))))
                                 (g$syntax-dispatch$7392$14xsgv
                                   g$t$8076$14xsgv
                                   '(_ any any)))))
                             g$t$8069$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$8069$14xsgv
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8063$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$8063$14xsgv
               '(_ (any . each-any) any . each-any)))))
         g$stx$8062$14xsgv))))
   (g$trace-define-syntax-macro$7363$14xsgv
     g$trace-define-syntax-macro$10799$14xsgv
     (case-lambda
       ((g$stx$8080$14xsgv)
        ((case-lambda
           ((g$t$8081$14xsgv)
            ((case-lambda
               ((g$ls/false$8082$14xsgv)
                (if g$ls/false$8082$14xsgv
                  (apply
                    (case-lambda
                      ((g$who$8083$14xsgv g$expr$8084$14xsgv)
                       (if (g$id?$7114$14xsgv g$who$8083$14xsgv)
                         (g$bless$7355$14xsgv
                           (list
                             'define-syntax
                             g$who$8083$14xsgv
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8083$14xsgv)
                               g$expr$8084$14xsgv)))
                         (g$syntax-violation$7501$14xsgv
                           '#f
                           '"invalid name"
                           g$stx$8080$14xsgv))))
                    g$ls/false$8082$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8081$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$8081$14xsgv '(_ any any)))))
         g$stx$8080$14xsgv))))
   (g$trace-let/rec-syntax$7364$14xsgv
     g$trace-let/rec-syntax$10800$14xsgv
     (case-lambda
       ((g$who$8085$14xsgv)
        (case-lambda
          ((g$stx$8086$14xsgv)
           ((case-lambda
              ((g$t$8087$14xsgv)
               ((case-lambda
                  ((g$ls/false$8088$14xsgv)
                   (if g$ls/false$8088$14xsgv
                     (apply
                       (case-lambda
                         ((g$lhs*$8089$14xsgv
                            g$rhs*$8090$14xsgv
                            g$b$8091$14xsgv
                            g$b*$8092$14xsgv)
                          (if (g$valid-bound-ids?$7119$14xsgv
                                g$lhs*$8089$14xsgv)
                            ((case-lambda
                               ((g$rhs*$8093$14xsgv)
                                (g$bless$7355$14xsgv
                                  (cons
                                    g$who$8085$14xsgv
                                    (cons
                                      (map list
                                           g$lhs*$8089$14xsgv
                                           g$rhs*$8093$14xsgv)
                                      (cons
                                        g$b$8091$14xsgv
                                        g$b*$8092$14xsgv))))))
                             (map (case-lambda
                                    ((g$lhs$8094$14xsgv g$rhs$8095$14xsgv)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8094$14xsgv)
                                       g$rhs$8095$14xsgv)))
                                  g$lhs*$8089$14xsgv
                                  g$rhs*$8090$14xsgv))
                            (g$invalid-fmls-error$7357$14xsgv
                              g$stx$8086$14xsgv
                              g$lhs*$8089$14xsgv))))
                       g$ls/false$8088$14xsgv)
                     (g$syntax-violation$7501$14xsgv
                       '#f
                       '"invalid syntax"
                       g$t$8087$14xsgv))))
                (g$syntax-dispatch$7392$14xsgv
                  g$t$8087$14xsgv
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8086$14xsgv))))))
   (g$trace-let-syntax-macro$7365$14xsgv
     g$trace-let-syntax-macro$10801$14xsgv
     (g$trace-let/rec-syntax$7364$14xsgv 'let-syntax))
   (g$trace-letrec-syntax-macro$7366$14xsgv
     g$trace-letrec-syntax-macro$10802$14xsgv
     (g$trace-let/rec-syntax$7364$14xsgv 'letrec-syntax))
   (g$guard-macro$7367$14xsgv
     g$guard-macro$10803$14xsgv
     (case-lambda
       ((g$x$8096$14xsgv)
        (letrec* ((g$gen-clauses$8097$14xsgv
                    (case-lambda
                      ((g$con$8109$14xsgv
                         g$outerk$8110$14xsgv
                         g$clause*$8111$14xsgv)
                       (letrec* ((g$f$8112$14xsgv
                                   (case-lambda
                                     ((g$x$8140$14xsgv g$k$8141$14xsgv)
                                      ((case-lambda
                                         ((g$t$8142$14xsgv)
                                          ((case-lambda
                                             ((g$ls/false$8143$14xsgv)
                                              (if g$ls/false$8143$14xsgv
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8144$14xsgv
                                                       g$p$8145$14xsgv)
                                                     ((case-lambda
                                                        ((g$t$8146$14xsgv)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8146$14xsgv
                                                               g$e$8144$14xsgv))
                                                           (list
                                                             'if
                                                             g$t$8146$14xsgv
                                                             (list
                                                               g$p$8145$14xsgv
                                                               g$t$8146$14xsgv)
                                                             g$k$8141$14xsgv))))
                                                      (gensym))))
                                                  g$ls/false$8143$14xsgv)
                                                ((case-lambda
                                                   ((g$t$8147$14xsgv)
                                                    ((case-lambda
                                                       ((g$ls/false$8148$14xsgv)
                                                        (if g$ls/false$8148$14xsgv
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8149$14xsgv)
                                                               ((case-lambda
                                                                  ((g$t$8150$14xsgv)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8150$14xsgv
                                                                         g$e$8149$14xsgv))
                                                                     (list
                                                                       'if
                                                                       g$t$8150$14xsgv
                                                                       g$t$8150$14xsgv
                                                                       g$k$8141$14xsgv))))
                                                                (gensym))))
                                                            g$ls/false$8148$14xsgv)
                                                          ((case-lambda
                                                             ((g$t$8151$14xsgv)
                                                              ((case-lambda
                                                                 ((g$ls/false$8152$14xsgv)
                                                                  (if g$ls/false$8152$14xsgv
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8153$14xsgv
                                                                           g$v$8154$14xsgv
                                                                           g$v*$8155$14xsgv)
                                                                         (list
                                                                           'if
                                                                           g$e$8153$14xsgv
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8154$14xsgv
                                                                               g$v*$8155$14xsgv))
                                                                           g$k$8141$14xsgv)))
                                                                      g$ls/false$8152$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$t$8156$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8157$14xsgv)
                                                                            (if g$ls/false$8157$14xsgv
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7501$14xsgv
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8140$14xsgv)))
                                                                                g$ls/false$8157$14xsgv)
                                                                              (g$syntax-violation$7501$14xsgv
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8156$14xsgv))))
                                                                         (g$syntax-dispatch$7392$14xsgv
                                                                           g$t$8156$14xsgv
                                                                           '_))))
                                                                     g$t$8151$14xsgv))))
                                                               (g$syntax-dispatch$7392$14xsgv
                                                                 g$t$8151$14xsgv
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8147$14xsgv))))
                                                     (g$syntax-dispatch$7392$14xsgv
                                                       g$t$8147$14xsgv
                                                       '(any)))))
                                                 g$t$8142$14xsgv))))
                                           (g$syntax-dispatch$7392$14xsgv
                                             g$t$8142$14xsgv
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8140$14xsgv))))
                                 (g$f*$8113$14xsgv
                                   (case-lambda
                                     ((g$x*$8120$14xsgv)
                                      ((case-lambda
                                         ((g$t$8121$14xsgv)
                                          ((case-lambda
                                             ((g$ls/false$8122$14xsgv)
                                              (if g$ls/false$8122$14xsgv
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8109$14xsgv)
                                                       '#t)))
                                                  g$ls/false$8122$14xsgv)
                                                ((case-lambda
                                                   ((g$t$8123$14xsgv)
                                                    ((case-lambda
                                                       ((g$ls/false$8124$14xsgv)
                                                        (if g$ls/false$8124$14xsgv
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8125$14xsgv
                                                                 g$e*$8126$14xsgv)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8125$14xsgv
                                                                     g$e*$8126$14xsgv))
                                                                 '#f)))
                                                            g$ls/false$8124$14xsgv)
                                                          ((case-lambda
                                                             ((g$t$8127$14xsgv)
                                                              ((case-lambda
                                                                 ((g$ls/false$8128$14xsgv)
                                                                  (if g$ls/false$8128$14xsgv
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8129$14xsgv
                                                                           g$cls*$8130$14xsgv)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8113$14xsgv
                                                                                g$cls*$8130$14xsgv)))
                                                                           (case-lambda
                                                                             ((g$e$8133$14xsgv
                                                                                g$g$8134$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$g$8135$14xsgv
                                                                                    g$e$8136$14xsgv)
                                                                                  (values
                                                                                    (g$f$8112$14xsgv
                                                                                      g$cls$8129$14xsgv
                                                                                      g$e$8136$14xsgv)
                                                                                    g$g$8135$14xsgv)))
                                                                               g$g$8134$14xsgv
                                                                               g$e$8133$14xsgv))))))
                                                                      g$ls/false$8128$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$t$8137$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8138$14xsgv)
                                                                            (if g$ls/false$8138$14xsgv
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8139$14xsgv)
                                                                                   (g$syntax-violation$7501$14xsgv
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8139$14xsgv)))
                                                                                g$ls/false$8138$14xsgv)
                                                                              (g$syntax-violation$7501$14xsgv
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8137$14xsgv))))
                                                                         (g$syntax-dispatch$7392$14xsgv
                                                                           g$t$8137$14xsgv
                                                                           'any))))
                                                                     g$t$8127$14xsgv))))
                                                               (g$syntax-dispatch$7392$14xsgv
                                                                 g$t$8127$14xsgv
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8123$14xsgv))))
                                                     (g$syntax-dispatch$7392$14xsgv
                                                       g$t$8123$14xsgv
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8121$14xsgv))))
                                           (g$syntax-dispatch$7392$14xsgv
                                             g$t$8121$14xsgv
                                             '()))))
                                       g$x*$8120$14xsgv)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8113$14xsgv g$clause*$8111$14xsgv)))
                           (case-lambda
                             ((g$code$8116$14xsgv g$raisek$8117$14xsgv)
                              ((case-lambda
                                 ((g$raisek$8118$14xsgv g$code$8119$14xsgv)
                                  (if g$raisek$8118$14xsgv
                                    (list
                                      g$outerk$8110$14xsgv
                                      g$code$8119$14xsgv)
                                    g$code$8119$14xsgv)))
                               g$raisek$8117$14xsgv
                               g$code$8116$14xsgv)))))))))
          ((case-lambda
             ((g$t$8098$14xsgv)
              ((case-lambda
                 ((g$ls/false$8099$14xsgv)
                  (if (if g$ls/false$8099$14xsgv
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8100$14xsgv
                                 g$clause*$8101$14xsgv
                                 g$b$8102$14xsgv
                                 g$b*$8103$14xsgv)
                               (g$id?$7114$14xsgv g$con$8100$14xsgv)))
                            g$ls/false$8099$14xsgv))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8104$14xsgv
                           g$clause*$8105$14xsgv
                           g$b$8106$14xsgv
                           g$b*$8107$14xsgv)
                         ((case-lambda
                            ((g$outerk$8108$14xsgv)
                             (g$bless$7355$14xsgv
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8108$14xsgv)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8104$14xsgv)
                                           (g$gen-clauses$8097$14xsgv
                                             g$con$8104$14xsgv
                                             g$outerk$8108$14xsgv
                                             g$clause*$8105$14xsgv))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8106$14xsgv
                                                 g$b*$8107$14xsgv))))))))))))
                          (gensym))))
                      g$ls/false$8099$14xsgv)
                    (g$syntax-violation$7501$14xsgv
                      '#f
                      '"invalid syntax"
                      g$t$8098$14xsgv))))
               (g$syntax-dispatch$7392$14xsgv
                 g$t$8098$14xsgv
                 '(_ (any . each-any) any . each-any)))))
           g$x$8096$14xsgv)))))
   (g$define-enumeration-macro$7368$14xsgv
     g$define-enumeration-macro$10804$14xsgv
     (case-lambda
       ((g$stx$8158$14xsgv)
        (letrec* ((g$set?$8159$14xsgv
                    (case-lambda
                      ((g$x$8172$14xsgv)
                       ((case-lambda
                          ((g$t$8173$14xsgv)
                           (if g$t$8173$14xsgv
                             g$t$8173$14xsgv
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8172$14xsgv)
                                          (cdr g$x$8172$14xsgv)))
                                 (begin
                                   '#f
                                   (g$set?$8159$14xsgv (cdr g$x$8172$14xsgv)))
                                 '#f)))))
                        (null? g$x$8172$14xsgv)))))
                  (g$remove-dups$8160$14xsgv
                    (case-lambda
                      ((g$ls$8171$14xsgv)
                       (if (null? g$ls$8171$14xsgv)
                         '()
                         (cons
                           (car g$ls$8171$14xsgv)
                           (g$remove-dups$8160$14xsgv
                             (g$remq$5363$14xsgv
                               (car g$ls$8171$14xsgv)
                               (cdr g$ls$8171$14xsgv)))))))))
          ((case-lambda
             ((g$t$8161$14xsgv)
              ((case-lambda
                 ((g$ls/false$8162$14xsgv)
                  (if (if g$ls/false$8162$14xsgv
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8163$14xsgv
                                 g$id*$8164$14xsgv
                                 g$maker$8165$14xsgv)
                               (if (g$id?$7114$14xsgv g$name$8163$14xsgv)
                                 (if (g$id?$7114$14xsgv g$maker$8165$14xsgv)
                                   (begin
                                     '#f
                                     (g$for-all$5356$14xsgv
                                       g$id?$7114$14xsgv
                                       g$id*$8164$14xsgv))
                                   '#f)
                                 '#f)))
                            g$ls/false$8162$14xsgv))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8166$14xsgv
                           g$id*$8167$14xsgv
                           g$maker$8168$14xsgv)
                         ((case-lambda
                            ((g$name*$8169$14xsgv g$mk$8170$14xsgv)
                             (g$bless$7355$14xsgv
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8170$14xsgv
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8169$14xsgv))))
                                 (list
                                   'define-syntax
                                   g$name$8166$14xsgv
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8169$14xsgv))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8166$14xsgv)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8168$14xsgv
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8168$14xsgv)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8169$14xsgv))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8168$14xsgv)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8170$14xsgv
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8160$14xsgv
                            (g$syntax->datum$7504$14xsgv g$id*$8167$14xsgv))
                          (gensym))))
                      g$ls/false$8162$14xsgv)
                    (g$syntax-violation$7501$14xsgv
                      '#f
                      '"invalid syntax"
                      g$t$8161$14xsgv))))
               (g$syntax-dispatch$7392$14xsgv
                 g$t$8161$14xsgv
                 '(_ any each-any any)))))
           g$stx$8158$14xsgv)))))
   (g$time-macro$7369$14xsgv
     g$time-macro$10805$14xsgv
     (case-lambda
       ((g$stx$8174$14xsgv)
        ((case-lambda
           ((g$t$8175$14xsgv)
            ((case-lambda
               ((g$ls/false$8176$14xsgv)
                (if g$ls/false$8176$14xsgv
                  (apply
                    (case-lambda
                      ((g$expr$8177$14xsgv)
                       ((case-lambda
                          ((g$str$8178$14xsgv)
                           (g$bless$7355$14xsgv
                             (list
                               'time-it
                               g$str$8178$14xsgv
                               (list 'lambda '() g$expr$8177$14xsgv)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6093$14xsgv)))
                          (case-lambda
                            ((g$p$8181$14xsgv g$e$8182$14xsgv)
                             ((case-lambda
                                ((g$e$8183$14xsgv g$p$8184$14xsgv)
                                 (begin
                                   (write
                                     (g$syntax->datum$7504$14xsgv
                                       g$expr$8177$14xsgv)
                                     g$p$8184$14xsgv)
                                   (g$e$8183$14xsgv))))
                              g$e$8182$14xsgv
                              g$p$8181$14xsgv)))))))
                    g$ls/false$8176$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8175$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$8175$14xsgv '(_ any)))))
         g$stx$8174$14xsgv))))
   (g$delay-macro$7370$14xsgv
     g$delay-macro$10806$14xsgv
     (case-lambda
       ((g$stx$8185$14xsgv)
        ((case-lambda
           ((g$t$8186$14xsgv)
            ((case-lambda
               ((g$ls/false$8187$14xsgv)
                (if g$ls/false$8187$14xsgv
                  (apply
                    (case-lambda
                      ((g$expr$8188$14xsgv)
                       (g$bless$7355$14xsgv
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8188$14xsgv)))))
                    g$ls/false$8187$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8186$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$8186$14xsgv '(_ any)))))
         g$stx$8185$14xsgv))))
   (g$assert-macro$7371$14xsgv
     g$assert-macro$10807$14xsgv
     (case-lambda
       ((g$stx$8189$14xsgv)
        ((case-lambda
           ((g$t$8190$14xsgv)
            ((case-lambda
               ((g$ls/false$8191$14xsgv)
                (if g$ls/false$8191$14xsgv
                  (apply
                    (case-lambda
                      ((g$expr$8192$14xsgv)
                       ((case-lambda
                          ((g$pos$8193$14xsgv)
                           (g$bless$7355$14xsgv
                             (list
                               'unless
                               g$expr$8192$14xsgv
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8192$14xsgv)
                                 (list 'quote g$pos$8193$14xsgv))))))
                        ((case-lambda
                           ((g$t$8194$14xsgv)
                            (if g$t$8194$14xsgv
                              g$t$8194$14xsgv
                              (begin
                                '#f
                                (g$expression-position$7496$14xsgv
                                  g$expr$8192$14xsgv)))))
                         (g$expression-position$7496$14xsgv
                           g$stx$8189$14xsgv)))))
                    g$ls/false$8191$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8190$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$8190$14xsgv '(_ any)))))
         g$stx$8189$14xsgv))))
   (g$endianness-macro$7372$14xsgv
     g$endianness-macro$10808$14xsgv
     (case-lambda
       ((g$stx$8195$14xsgv)
        ((case-lambda
           ((g$t$8196$14xsgv)
            ((case-lambda
               ((g$ls/false$8197$14xsgv)
                (if g$ls/false$8197$14xsgv
                  (apply
                    (case-lambda
                      ((g$e$8198$14xsgv)
                       ((case-lambda
                          ((g$t$8199$14xsgv)
                           (if (memv g$t$8199$14xsgv '(little))
                             (g$bless$7355$14xsgv ''little)
                             (if (memv g$t$8199$14xsgv '(big))
                               (g$bless$7355$14xsgv ''big)
                               (g$syntax-violation$7501$14xsgv
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8195$14xsgv)))))
                        (g$syntax->datum$7504$14xsgv g$e$8198$14xsgv))))
                    g$ls/false$8197$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8196$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$8196$14xsgv '(_ any)))))
         g$stx$8195$14xsgv))))
   (g$identifier-syntax-macro$7373$14xsgv
     g$identifier-syntax-macro$10809$14xsgv
     (case-lambda
       ((g$stx$8200$14xsgv)
        ((case-lambda
           ((g$t$8201$14xsgv)
            ((case-lambda
               ((g$ls/false$8202$14xsgv)
                (if g$ls/false$8202$14xsgv
                  (apply
                    (case-lambda
                      ((g$expr$8203$14xsgv)
                       (g$bless$7355$14xsgv
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8203$14xsgv))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8203$14xsgv)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8202$14xsgv)
                  ((case-lambda
                     ((g$t$8204$14xsgv)
                      ((case-lambda
                         ((g$ls/false$8205$14xsgv)
                          (if (if g$ls/false$8205$14xsgv
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8206$14xsgv
                                         g$expr1$8207$14xsgv
                                         g$id2$8208$14xsgv
                                         g$expr2$8209$14xsgv
                                         g$expr3$8210$14xsgv)
                                       (if (g$id?$7114$14xsgv g$id1$8206$14xsgv)
                                         (if (g$id?$7114$14xsgv
                                               g$id2$8208$14xsgv)
                                           (begin
                                             '#f
                                             (g$id?$7114$14xsgv
                                               g$expr2$8209$14xsgv))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8205$14xsgv))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8211$14xsgv
                                   g$expr1$8212$14xsgv
                                   g$id2$8213$14xsgv
                                   g$expr2$8214$14xsgv
                                   g$expr3$8215$14xsgv)
                                 (g$bless$7355$14xsgv
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8212$14xsgv))
                                         (list
                                           (list 'set! 'id g$expr2$8214$14xsgv)
                                           (list 'syntax g$expr3$8215$14xsgv))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8212$14xsgv
                                               '(e* ...))))))))))
                              g$ls/false$8205$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$8204$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$8204$14xsgv
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8201$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$8201$14xsgv '(_ any)))))
         g$stx$8200$14xsgv))))
   (g$do-macro$7374$14xsgv
     g$do-macro$10810$14xsgv
     (case-lambda
       ((g$stx$8216$14xsgv)
        (letrec* ((g$bind$8217$14xsgv
                    (case-lambda
                      ((g$x$8229$14xsgv)
                       ((case-lambda
                          ((g$t$8230$14xsgv)
                           ((case-lambda
                              ((g$ls/false$8231$14xsgv)
                               (if g$ls/false$8231$14xsgv
                                 (apply
                                   (case-lambda
                                     ((g$x$8232$14xsgv g$init$8233$14xsgv)
                                      (list
                                        g$x$8232$14xsgv
                                        g$init$8233$14xsgv
                                        g$x$8232$14xsgv)))
                                   g$ls/false$8231$14xsgv)
                                 ((case-lambda
                                    ((g$t$8234$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8235$14xsgv)
                                         (if g$ls/false$8235$14xsgv
                                           (apply
                                             (case-lambda
                                               ((g$x$8236$14xsgv
                                                  g$init$8237$14xsgv
                                                  g$step$8238$14xsgv)
                                                (list
                                                  g$x$8236$14xsgv
                                                  g$init$8237$14xsgv
                                                  g$step$8238$14xsgv)))
                                             g$ls/false$8235$14xsgv)
                                           ((case-lambda
                                              ((g$t$8239$14xsgv)
                                               ((case-lambda
                                                  ((g$ls/false$8240$14xsgv)
                                                   (if g$ls/false$8240$14xsgv
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7501$14xsgv
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8216$14xsgv)))
                                                       g$ls/false$8240$14xsgv)
                                                     (g$syntax-violation$7501$14xsgv
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8239$14xsgv))))
                                                (g$syntax-dispatch$7392$14xsgv
                                                  g$t$8239$14xsgv
                                                  '_))))
                                            g$t$8234$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8234$14xsgv
                                        '(any any any)))))
                                  g$t$8230$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$8230$14xsgv
                              '(any any)))))
                        g$x$8229$14xsgv)))))
          ((case-lambda
             ((g$t$8218$14xsgv)
              ((case-lambda
                 ((g$ls/false$8219$14xsgv)
                  (if g$ls/false$8219$14xsgv
                    (apply
                      (case-lambda
                        ((g$binding*$8220$14xsgv
                           g$test$8221$14xsgv
                           g$expr*$8222$14xsgv
                           g$command*$8223$14xsgv)
                         ((case-lambda
                            ((g$t$8224$14xsgv)
                             ((case-lambda
                                ((g$ls/false$8225$14xsgv)
                                 (if g$ls/false$8225$14xsgv
                                   (apply
                                     (case-lambda
                                       ((g$x*$8226$14xsgv
                                          g$init*$8227$14xsgv
                                          g$step*$8228$14xsgv)
                                        (if (g$valid-bound-ids?$7119$14xsgv
                                              g$x*$8226$14xsgv)
                                          (g$bless$7355$14xsgv
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8226$14xsgv
                                                    (list
                                                      'if
                                                      g$test$8221$14xsgv
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8222$14xsgv))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8223$14xsgv
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8228$14xsgv))))))))
                                              (cons 'loop g$init*$8227$14xsgv)))
                                          (g$syntax-violation$7501$14xsgv
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8216$14xsgv))))
                                     g$ls/false$8225$14xsgv)
                                   (g$syntax-violation$7501$14xsgv
                                     '#f
                                     '"invalid syntax"
                                     g$t$8224$14xsgv))))
                              (g$syntax-dispatch$7392$14xsgv
                                g$t$8224$14xsgv
                                '#(each (any any any))))))
                          (map g$bind$8217$14xsgv g$binding*$8220$14xsgv))))
                      g$ls/false$8219$14xsgv)
                    (g$syntax-violation$7501$14xsgv
                      '#f
                      '"invalid syntax"
                      g$t$8218$14xsgv))))
               (g$syntax-dispatch$7392$14xsgv
                 g$t$8218$14xsgv
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8216$14xsgv)))))
   (g$let*-macro$7375$14xsgv
     g$let*-macro$10811$14xsgv
     (case-lambda
       ((g$stx$8241$14xsgv)
        ((case-lambda
           ((g$t$8242$14xsgv)
            ((case-lambda
               ((g$ls/false$8243$14xsgv)
                (if (if g$ls/false$8243$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8244$14xsgv
                               g$rhs*$8245$14xsgv
                               g$b$8246$14xsgv
                               g$b*$8247$14xsgv)
                             (g$for-all$5356$14xsgv
                               g$id?$7114$14xsgv
                               g$lhs*$8244$14xsgv)))
                          g$ls/false$8243$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8248$14xsgv
                         g$rhs*$8249$14xsgv
                         g$b$8250$14xsgv
                         g$b*$8251$14xsgv)
                       (g$bless$7355$14xsgv
                         ((letrec ((g$f$8252$14xsgv
                                     (case-lambda
                                       ((g$x*$8253$14xsgv)
                                        (if (null? g$x*$8253$14xsgv)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8250$14xsgv
                                                g$b*$8251$14xsgv)))
                                          (list
                                            'let
                                            (list (car g$x*$8253$14xsgv))
                                            (g$f$8252$14xsgv
                                              (cdr g$x*$8253$14xsgv))))))))
                            g$f$8252$14xsgv)
                          (map list g$lhs*$8248$14xsgv g$rhs*$8249$14xsgv)))))
                    g$ls/false$8243$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8242$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$8242$14xsgv
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8241$14xsgv))))
   (g$or-macro$7376$14xsgv
     g$or-macro$10812$14xsgv
     (case-lambda
       ((g$stx$8254$14xsgv)
        ((case-lambda
           ((g$t$8255$14xsgv)
            ((case-lambda
               ((g$ls/false$8256$14xsgv)
                (if g$ls/false$8256$14xsgv
                  (apply (case-lambda (() '#f)) g$ls/false$8256$14xsgv)
                  ((case-lambda
                     ((g$t$8257$14xsgv)
                      ((case-lambda
                         ((g$ls/false$8258$14xsgv)
                          (if g$ls/false$8258$14xsgv
                            (apply
                              (case-lambda
                                ((g$e$8259$14xsgv g$e*$8260$14xsgv)
                                 (g$bless$7355$14xsgv
                                   ((letrec ((g$f$8261$14xsgv
                                               (case-lambda
                                                 ((g$e$8262$14xsgv
                                                    g$e*$8263$14xsgv)
                                                  (if (null? g$e*$8263$14xsgv)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8262$14xsgv)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8262$14xsgv))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8261$14xsgv
                                                          (car g$e*$8263$14xsgv)
                                                          (cdr g$e*$8263$14xsgv)))))))))
                                      g$f$8261$14xsgv)
                                    g$e$8259$14xsgv
                                    g$e*$8260$14xsgv))))
                              g$ls/false$8258$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$8257$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$8257$14xsgv
                         '(_ any . each-any)))))
                   g$t$8255$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$8255$14xsgv '(_)))))
         g$stx$8254$14xsgv))))
   (g$and-macro$7377$14xsgv
     g$and-macro$10813$14xsgv
     (case-lambda
       ((g$stx$8264$14xsgv)
        ((case-lambda
           ((g$t$8265$14xsgv)
            ((case-lambda
               ((g$ls/false$8266$14xsgv)
                (if g$ls/false$8266$14xsgv
                  (apply (case-lambda (() '#t)) g$ls/false$8266$14xsgv)
                  ((case-lambda
                     ((g$t$8267$14xsgv)
                      ((case-lambda
                         ((g$ls/false$8268$14xsgv)
                          (if g$ls/false$8268$14xsgv
                            (apply
                              (case-lambda
                                ((g$e$8269$14xsgv g$e*$8270$14xsgv)
                                 (g$bless$7355$14xsgv
                                   ((letrec ((g$f$8271$14xsgv
                                               (case-lambda
                                                 ((g$e$8272$14xsgv
                                                    g$e*$8273$14xsgv)
                                                  (if (null? g$e*$8273$14xsgv)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8272$14xsgv)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8272$14xsgv
                                                        (cons
                                                          (g$f$8271$14xsgv
                                                            (car g$e*$8273$14xsgv)
                                                            (cdr g$e*$8273$14xsgv))
                                                          '(#f)))))))))
                                      g$f$8271$14xsgv)
                                    g$e$8269$14xsgv
                                    g$e*$8270$14xsgv))))
                              g$ls/false$8268$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$8267$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$8267$14xsgv
                         '(_ any . each-any)))))
                   g$t$8265$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$8265$14xsgv '(_)))))
         g$stx$8264$14xsgv))))
   (g$cond-macro$7378$14xsgv
     g$cond-macro$10814$14xsgv
     (case-lambda
       ((g$stx$8274$14xsgv)
        ((case-lambda
           ((g$t$8275$14xsgv)
            ((case-lambda
               ((g$ls/false$8276$14xsgv)
                (if g$ls/false$8276$14xsgv
                  (apply
                    (case-lambda
                      ((g$cls$8277$14xsgv g$cls*$8278$14xsgv)
                       (g$bless$7355$14xsgv
                         ((letrec ((g$f$8279$14xsgv
                                     (case-lambda
                                       ((g$cls$8280$14xsgv g$cls*$8281$14xsgv)
                                        (if (null? g$cls*$8281$14xsgv)
                                          ((case-lambda
                                             ((g$t$8282$14xsgv)
                                              ((case-lambda
                                                 ((g$ls/false$8283$14xsgv)
                                                  (if g$ls/false$8283$14xsgv
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8284$14xsgv
                                                           g$e*$8285$14xsgv)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8284$14xsgv
                                                             g$e*$8285$14xsgv))))
                                                      g$ls/false$8283$14xsgv)
                                                    ((case-lambda
                                                       ((g$t$8286$14xsgv)
                                                        ((case-lambda
                                                           ((g$ls/false$8287$14xsgv)
                                                            (if g$ls/false$8287$14xsgv
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8288$14xsgv
                                                                     g$p$8289$14xsgv)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8288$14xsgv))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8289$14xsgv
                                                                         '(t))))))
                                                                g$ls/false$8287$14xsgv)
                                                              ((case-lambda
                                                                 ((g$t$8290$14xsgv)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8291$14xsgv)
                                                                      (if g$ls/false$8291$14xsgv
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8292$14xsgv)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8292$14xsgv
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8291$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$t$8293$14xsgv)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8294$14xsgv)
                                                                                (if g$ls/false$8294$14xsgv
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8295$14xsgv
                                                                                         g$e*$8296$14xsgv)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8295$14xsgv
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8296$14xsgv))))
                                                                                    g$ls/false$8294$14xsgv)
                                                                                  ((case-lambda
                                                                                     ((g$t$8297$14xsgv)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8298$14xsgv)
                                                                                          (if g$ls/false$8298$14xsgv
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7501$14xsgv
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8274$14xsgv)))
                                                                                              g$ls/false$8298$14xsgv)
                                                                                            (g$syntax-violation$7501$14xsgv
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8297$14xsgv))))
                                                                                       (g$syntax-dispatch$7392$14xsgv
                                                                                         g$t$8297$14xsgv
                                                                                         '_))))
                                                                                   g$t$8293$14xsgv))))
                                                                             (g$syntax-dispatch$7392$14xsgv
                                                                               g$t$8293$14xsgv
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8290$14xsgv))))
                                                                   (g$syntax-dispatch$7392$14xsgv
                                                                     g$t$8290$14xsgv
                                                                     '(any)))))
                                                               g$t$8286$14xsgv))))
                                                         (g$syntax-dispatch$7392$14xsgv
                                                           g$t$8286$14xsgv
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8282$14xsgv))))
                                               (g$syntax-dispatch$7392$14xsgv
                                                 g$t$8282$14xsgv
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8280$14xsgv)
                                          ((case-lambda
                                             ((g$t$8299$14xsgv)
                                              ((case-lambda
                                                 ((g$ls/false$8300$14xsgv)
                                                  (if g$ls/false$8300$14xsgv
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8301$14xsgv
                                                           g$e*$8302$14xsgv)
                                                         (g$syntax-violation$7501$14xsgv
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8274$14xsgv)))
                                                      g$ls/false$8300$14xsgv)
                                                    ((case-lambda
                                                       ((g$t$8303$14xsgv)
                                                        ((case-lambda
                                                           ((g$ls/false$8304$14xsgv)
                                                            (if g$ls/false$8304$14xsgv
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8305$14xsgv
                                                                     g$p$8306$14xsgv)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8305$14xsgv))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8306$14xsgv
                                                                         '(t))
                                                                       (g$f$8279$14xsgv
                                                                         (car g$cls*$8281$14xsgv)
                                                                         (cdr g$cls*$8281$14xsgv))))))
                                                                g$ls/false$8304$14xsgv)
                                                              ((case-lambda
                                                                 ((g$t$8307$14xsgv)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8308$14xsgv)
                                                                      (if g$ls/false$8308$14xsgv
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8309$14xsgv)
                                                                             (list
                                                                               'or
                                                                               g$e$8309$14xsgv
                                                                               (g$f$8279$14xsgv
                                                                                 (car g$cls*$8281$14xsgv)
                                                                                 (cdr g$cls*$8281$14xsgv)))))
                                                                          g$ls/false$8308$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$t$8310$14xsgv)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8311$14xsgv)
                                                                                (if g$ls/false$8311$14xsgv
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8312$14xsgv
                                                                                         g$e*$8313$14xsgv)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8312$14xsgv
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8313$14xsgv)
                                                                                         (g$f$8279$14xsgv
                                                                                           (car g$cls*$8281$14xsgv)
                                                                                           (cdr g$cls*$8281$14xsgv)))))
                                                                                    g$ls/false$8311$14xsgv)
                                                                                  ((case-lambda
                                                                                     ((g$t$8314$14xsgv)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8315$14xsgv)
                                                                                          (if g$ls/false$8315$14xsgv
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7501$14xsgv
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8274$14xsgv)))
                                                                                              g$ls/false$8315$14xsgv)
                                                                                            (g$syntax-violation$7501$14xsgv
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8314$14xsgv))))
                                                                                       (g$syntax-dispatch$7392$14xsgv
                                                                                         g$t$8314$14xsgv
                                                                                         '_))))
                                                                                   g$t$8310$14xsgv))))
                                                                             (g$syntax-dispatch$7392$14xsgv
                                                                               g$t$8310$14xsgv
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8307$14xsgv))))
                                                                   (g$syntax-dispatch$7392$14xsgv
                                                                     g$t$8307$14xsgv
                                                                     '(any)))))
                                                               g$t$8303$14xsgv))))
                                                         (g$syntax-dispatch$7392$14xsgv
                                                           g$t$8303$14xsgv
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8299$14xsgv))))
                                               (g$syntax-dispatch$7392$14xsgv
                                                 g$t$8299$14xsgv
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8280$14xsgv))))))
                            g$f$8279$14xsgv)
                          g$cls$8277$14xsgv
                          g$cls*$8278$14xsgv))))
                    g$ls/false$8276$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8275$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$8275$14xsgv
               '(_ any . each-any)))))
         g$stx$8274$14xsgv))))
   (g$do-include$7379$14xsgv
     g$do-include$10815$14xsgv
     (case-lambda
       ((g$stx$8316$14xsgv g$id$8317$14xsgv g$filename$8318$14xsgv)
        ((case-lambda
           ((g$filename$8319$14xsgv)
            (begin
              (if (not (if (string? g$filename$8319$14xsgv)
                         (begin '#f (g$id?$7114$14xsgv g$id$8317$14xsgv))
                         '#f))
                (g$syntax-violation$7501$14xsgv
                  '#f
                  '"invalid syntax"
                  g$stx$8316$14xsgv)
                (void))
              (cons
                (g$bless$7355$14xsgv 'begin)
                (g$with-input-from-file$6127$14xsgv
                  g$filename$8319$14xsgv
                  (case-lambda
                    (()
                     ((letrec ((g$f$8320$14xsgv
                                 (case-lambda
                                   ((g$ls$8321$14xsgv)
                                    ((case-lambda
                                       ((g$x$8322$14xsgv)
                                        (if (eof-object? g$x$8322$14xsgv)
                                          (reverse g$ls$8321$14xsgv)
                                          (g$f$8320$14xsgv
                                            (cons
                                              (g$datum->stx$7097$14xsgv
                                                g$id$8317$14xsgv
                                                g$x$8322$14xsgv)
                                              g$ls$8321$14xsgv)))))
                                     (read-annotated))))))
                        g$f$8320$14xsgv)
                      '()))))))))
         (g$stx->datum$7125$14xsgv g$filename$8318$14xsgv)))))
   (g$include-macro$7380$14xsgv
     g$include-macro$10816$14xsgv
     (case-lambda
       ((g$e$8323$14xsgv)
        ((case-lambda
           ((g$t$8324$14xsgv)
            ((case-lambda
               ((g$ls/false$8325$14xsgv)
                (if g$ls/false$8325$14xsgv
                  (apply
                    (case-lambda
                      ((g$id$8326$14xsgv g$filename$8327$14xsgv)
                       (g$do-include$7379$14xsgv
                         g$e$8323$14xsgv
                         g$id$8326$14xsgv
                         g$filename$8327$14xsgv)))
                    g$ls/false$8325$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8324$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$8324$14xsgv '(any any)))))
         g$e$8323$14xsgv))))
   (g$include-into-macro$7381$14xsgv
     g$include-into-macro$10817$14xsgv
     (case-lambda
       ((g$e$8328$14xsgv)
        ((case-lambda
           ((g$t$8329$14xsgv)
            ((case-lambda
               ((g$ls/false$8330$14xsgv)
                (if g$ls/false$8330$14xsgv
                  (apply
                    (case-lambda
                      ((g$id$8331$14xsgv g$filename$8332$14xsgv)
                       (g$do-include$7379$14xsgv
                         g$e$8328$14xsgv
                         g$id$8331$14xsgv
                         g$filename$8332$14xsgv)))
                    g$ls/false$8330$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8329$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$8329$14xsgv '(_ any any)))))
         g$e$8328$14xsgv))))
   (g$syntax-rules-macro$7382$14xsgv
     g$syntax-rules-macro$10818$14xsgv
     (case-lambda
       ((g$e$8333$14xsgv)
        ((case-lambda
           ((g$t$8334$14xsgv)
            ((case-lambda
               ((g$ls/false$8335$14xsgv)
                (if g$ls/false$8335$14xsgv
                  (apply
                    (case-lambda
                      ((g$lits$8336$14xsgv
                         g$pat*$8337$14xsgv
                         g$tmp*$8338$14xsgv)
                       (begin
                         (g$verify-literals$7395$14xsgv
                           g$lits$8336$14xsgv
                           g$e$8333$14xsgv)
                         (g$bless$7355$14xsgv
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8336$14xsgv
                                   (map (case-lambda
                                          ((g$pat$8339$14xsgv g$tmp$8340$14xsgv)
                                           ((case-lambda
                                              ((g$t$8341$14xsgv)
                                               ((case-lambda
                                                  ((g$ls/false$8342$14xsgv)
                                                   (if g$ls/false$8342$14xsgv
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8343$14xsgv)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8343$14xsgv)
                                                            (list
                                                              'syntax
                                                              g$tmp$8340$14xsgv))))
                                                       g$ls/false$8342$14xsgv)
                                                     ((case-lambda
                                                        ((g$t$8344$14xsgv)
                                                         ((case-lambda
                                                            ((g$ls/false$8345$14xsgv)
                                                             (if g$ls/false$8345$14xsgv
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7501$14xsgv
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8333$14xsgv
                                                                      g$pat$8339$14xsgv)))
                                                                 g$ls/false$8345$14xsgv)
                                                               (g$syntax-violation$7501$14xsgv
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8344$14xsgv))))
                                                          (g$syntax-dispatch$7392$14xsgv
                                                            g$t$8344$14xsgv
                                                            '_))))
                                                      g$t$8341$14xsgv))))
                                                (g$syntax-dispatch$7392$14xsgv
                                                  g$t$8341$14xsgv
                                                  '(_ . any)))))
                                            g$pat$8339$14xsgv)))
                                        g$pat*$8337$14xsgv
                                        g$tmp*$8338$14xsgv)))))))))
                    g$ls/false$8335$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8334$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$8334$14xsgv
               '(_ each-any . #(each (any any)))))))
         g$e$8333$14xsgv))))
   (g$quasiquote-macro$7383$14xsgv
     g$quasiquote-macro$10819$14xsgv
     ((case-lambda
        (()
         (letrec* ((g$datum$8346$14xsgv
                     (case-lambda
                       ((g$x$8477$14xsgv)
                        (list
                          (g$scheme-stx$7335$14xsgv 'quote)
                          (g$mkstx$7102$14xsgv g$x$8477$14xsgv '() '() '())))))
                   (g$quasicons*$8362$14xsgv
                     (case-lambda
                       ((g$x$8473$14xsgv g$y$8474$14xsgv)
                        ((letrec ((g$f$8475$14xsgv
                                    (case-lambda
                                      ((g$x$8476$14xsgv)
                                       (if (null? g$x$8476$14xsgv)
                                         g$y$8474$14xsgv
                                         (g$quasicons$8363$14xsgv
                                           (car g$x$8476$14xsgv)
                                           (g$f$8475$14xsgv
                                             (cdr g$x$8476$14xsgv))))))))
                           g$f$8475$14xsgv)
                         g$x$8473$14xsgv))))
                   (g$quasicons$8363$14xsgv
                     (case-lambda
                       ((g$x$8454$14xsgv g$y$8455$14xsgv)
                        ((case-lambda
                           ((g$t$8456$14xsgv)
                            ((case-lambda
                               ((g$ls/false$8457$14xsgv)
                                (if g$ls/false$8457$14xsgv
                                  (apply
                                    (case-lambda
                                      ((g$dy$8458$14xsgv)
                                       ((case-lambda
                                          ((g$t$8459$14xsgv)
                                           ((case-lambda
                                              ((g$ls/false$8460$14xsgv)
                                               (if g$ls/false$8460$14xsgv
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8461$14xsgv)
                                                      (list
                                                        (g$scheme-stx$7335$14xsgv
                                                          'quote)
                                                        (cons
                                                          g$dx$8461$14xsgv
                                                          g$dy$8458$14xsgv))))
                                                   g$ls/false$8460$14xsgv)
                                                 ((case-lambda
                                                    ((g$t$8462$14xsgv)
                                                     ((case-lambda
                                                        ((g$ls/false$8463$14xsgv)
                                                         (if g$ls/false$8463$14xsgv
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8464$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8465$14xsgv)
                                                                        (if g$ls/false$8465$14xsgv
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7335$14xsgv
                                                                                   'list)
                                                                                 g$x$8454$14xsgv)))
                                                                            g$ls/false$8465$14xsgv)
                                                                          ((case-lambda
                                                                             ((g$t$8466$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8467$14xsgv)
                                                                                  (if g$ls/false$8467$14xsgv
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7335$14xsgv
                                                                                             'cons)
                                                                                           g$x$8454$14xsgv
                                                                                           g$y$8455$14xsgv)))
                                                                                      g$ls/false$8467$14xsgv)
                                                                                    (g$syntax-violation$7501$14xsgv
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8466$14xsgv))))
                                                                               (g$syntax-dispatch$7392$14xsgv
                                                                                 g$t$8466$14xsgv
                                                                                 '_))))
                                                                           g$t$8464$14xsgv))))
                                                                     (g$syntax-dispatch$7392$14xsgv
                                                                       g$t$8464$14xsgv
                                                                       '()))))
                                                                 g$dy$8458$14xsgv)))
                                                             g$ls/false$8463$14xsgv)
                                                           (g$syntax-violation$7501$14xsgv
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8462$14xsgv))))
                                                      (g$syntax-dispatch$7392$14xsgv
                                                        g$t$8462$14xsgv
                                                        '_))))
                                                  g$t$8459$14xsgv))))
                                            (g$syntax-dispatch$7392$14xsgv
                                              g$t$8459$14xsgv
                                              '(#(scheme-id quote) any)))))
                                        g$x$8454$14xsgv)))
                                    g$ls/false$8457$14xsgv)
                                  ((case-lambda
                                     ((g$t$8468$14xsgv)
                                      ((case-lambda
                                         ((g$ls/false$8469$14xsgv)
                                          (if g$ls/false$8469$14xsgv
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8470$14xsgv)
                                                 (g$cons*$5358$14xsgv
                                                   (g$scheme-stx$7335$14xsgv
                                                     'list)
                                                   g$x$8454$14xsgv
                                                   g$stuff$8470$14xsgv)))
                                              g$ls/false$8469$14xsgv)
                                            ((case-lambda
                                               ((g$t$8471$14xsgv)
                                                ((case-lambda
                                                   ((g$ls/false$8472$14xsgv)
                                                    (if g$ls/false$8472$14xsgv
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7335$14xsgv
                                                               'cons)
                                                             g$x$8454$14xsgv
                                                             g$y$8455$14xsgv)))
                                                        g$ls/false$8472$14xsgv)
                                                      (g$syntax-violation$7501$14xsgv
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8471$14xsgv))))
                                                 (g$syntax-dispatch$7392$14xsgv
                                                   g$t$8471$14xsgv
                                                   '_))))
                                             g$t$8468$14xsgv))))
                                       (g$syntax-dispatch$7392$14xsgv
                                         g$t$8468$14xsgv
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8456$14xsgv))))
                             (g$syntax-dispatch$7392$14xsgv
                               g$t$8456$14xsgv
                               '(#(scheme-id quote) any)))))
                         g$y$8455$14xsgv))))
                   (g$quasiappend$8364$14xsgv
                     (case-lambda
                       ((g$x$8441$14xsgv g$y$8442$14xsgv)
                        ((case-lambda
                           ((g$ls$8443$14xsgv)
                            (if (null? g$ls$8443$14xsgv)
                              (list (g$scheme-stx$7335$14xsgv 'quote) '())
                              (if (null? (cdr g$ls$8443$14xsgv))
                                (car g$ls$8443$14xsgv)
                                (g$cons*$5358$14xsgv
                                  (g$scheme-stx$7335$14xsgv 'append)
                                  g$ls$8443$14xsgv)))))
                         ((letrec ((g$f$8444$14xsgv
                                     (case-lambda
                                       ((g$x$8445$14xsgv)
                                        (if (null? g$x$8445$14xsgv)
                                          ((case-lambda
                                             ((g$t$8446$14xsgv)
                                              ((case-lambda
                                                 ((g$ls/false$8447$14xsgv)
                                                  (if g$ls/false$8447$14xsgv
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8447$14xsgv)
                                                    ((case-lambda
                                                       ((g$t$8448$14xsgv)
                                                        ((case-lambda
                                                           ((g$ls/false$8449$14xsgv)
                                                            (if g$ls/false$8449$14xsgv
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8442$14xsgv)))
                                                                g$ls/false$8449$14xsgv)
                                                              (g$syntax-violation$7501$14xsgv
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8448$14xsgv))))
                                                         (g$syntax-dispatch$7392$14xsgv
                                                           g$t$8448$14xsgv
                                                           '_))))
                                                     g$t$8446$14xsgv))))
                                               (g$syntax-dispatch$7392$14xsgv
                                                 g$t$8446$14xsgv
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8442$14xsgv)
                                          ((case-lambda
                                             ((g$t$8450$14xsgv)
                                              ((case-lambda
                                                 ((g$ls/false$8451$14xsgv)
                                                  (if g$ls/false$8451$14xsgv
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8444$14xsgv
                                                           (cdr g$x$8445$14xsgv))))
                                                      g$ls/false$8451$14xsgv)
                                                    ((case-lambda
                                                       ((g$t$8452$14xsgv)
                                                        ((case-lambda
                                                           ((g$ls/false$8453$14xsgv)
                                                            (if g$ls/false$8453$14xsgv
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8445$14xsgv)
                                                                     (g$f$8444$14xsgv
                                                                       (cdr g$x$8445$14xsgv)))))
                                                                g$ls/false$8453$14xsgv)
                                                              (g$syntax-violation$7501$14xsgv
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8452$14xsgv))))
                                                         (g$syntax-dispatch$7392$14xsgv
                                                           g$t$8452$14xsgv
                                                           '_))))
                                                     g$t$8450$14xsgv))))
                                               (g$syntax-dispatch$7392$14xsgv
                                                 g$t$8450$14xsgv
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8445$14xsgv)))))))
                            g$f$8444$14xsgv)
                          g$x$8441$14xsgv)))))
                   (g$quasivector$8365$14xsgv
                     (case-lambda
                       ((g$x$8416$14xsgv)
                        ((case-lambda
                           ((g$pat-x$8417$14xsgv)
                            ((case-lambda
                               ((g$t$8418$14xsgv)
                                ((case-lambda
                                   ((g$ls/false$8419$14xsgv)
                                    (if g$ls/false$8419$14xsgv
                                      (apply
                                        (case-lambda
                                          ((g$x*$8420$14xsgv)
                                           (list
                                             (g$scheme-stx$7335$14xsgv 'quote)
                                             (list->vector g$x*$8420$14xsgv))))
                                        g$ls/false$8419$14xsgv)
                                      ((case-lambda
                                         ((g$t$8421$14xsgv)
                                          ((case-lambda
                                             ((g$ls/false$8422$14xsgv)
                                              (if g$ls/false$8422$14xsgv
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8423$14xsgv
                                                                 (case-lambda
                                                                   ((g$x$8424$14xsgv
                                                                      g$k$8425$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$t$8426$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8427$14xsgv)
                                                                            (if g$ls/false$8427$14xsgv
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8428$14xsgv)
                                                                                   (g$k$8425$14xsgv
                                                                                     (map (case-lambda
                                                                                            ((g$x$8429$14xsgv)
                                                                                             (list
                                                                                               (g$scheme-stx$7335$14xsgv
                                                                                                 'quote)
                                                                                               g$x$8429$14xsgv)))
                                                                                          g$x*$8428$14xsgv))))
                                                                                g$ls/false$8427$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$t$8430$14xsgv)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8431$14xsgv)
                                                                                      (if g$ls/false$8431$14xsgv
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8432$14xsgv)
                                                                                             (g$k$8425$14xsgv
                                                                                               g$x*$8432$14xsgv)))
                                                                                          g$ls/false$8431$14xsgv)
                                                                                        ((case-lambda
                                                                                           ((g$t$8433$14xsgv)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8434$14xsgv)
                                                                                                (if g$ls/false$8434$14xsgv
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8435$14xsgv
                                                                                                         g$y$8436$14xsgv)
                                                                                                       (g$f$8423$14xsgv
                                                                                                         g$y$8436$14xsgv
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8437$14xsgv)
                                                                                                            (g$k$8425$14xsgv
                                                                                                              (cons
                                                                                                                g$x$8435$14xsgv
                                                                                                                g$ls$8437$14xsgv)))))))
                                                                                                    g$ls/false$8434$14xsgv)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8438$14xsgv)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8439$14xsgv)
                                                                                                          (if g$ls/false$8439$14xsgv
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7335$14xsgv
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8417$14xsgv)))
                                                                                                              g$ls/false$8439$14xsgv)
                                                                                                            (g$syntax-violation$7501$14xsgv
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8438$14xsgv))))
                                                                                                       (g$syntax-dispatch$7392$14xsgv
                                                                                                         g$t$8438$14xsgv
                                                                                                         '_))))
                                                                                                   g$t$8433$14xsgv))))
                                                                                             (g$syntax-dispatch$7392$14xsgv
                                                                                               g$t$8433$14xsgv
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8430$14xsgv))))
                                                                                   (g$syntax-dispatch$7392$14xsgv
                                                                                     g$t$8430$14xsgv
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8426$14xsgv))))
                                                                         (g$syntax-dispatch$7392$14xsgv
                                                                           g$t$8426$14xsgv
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8424$14xsgv)))))
                                                        g$f$8423$14xsgv)
                                                      g$x$8416$14xsgv
                                                      (case-lambda
                                                        ((g$ls$8440$14xsgv)
                                                         (g$cons*$5358$14xsgv
                                                           (g$scheme-stx$7335$14xsgv
                                                             'vector)
                                                           g$ls$8440$14xsgv))))))
                                                  g$ls/false$8422$14xsgv)
                                                (g$syntax-violation$7501$14xsgv
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8421$14xsgv))))
                                           (g$syntax-dispatch$7392$14xsgv
                                             g$t$8421$14xsgv
                                             '_))))
                                       g$t$8418$14xsgv))))
                                 (g$syntax-dispatch$7392$14xsgv
                                   g$t$8418$14xsgv
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8417$14xsgv)))
                         g$x$8416$14xsgv))))
                   (g$vquasi$8366$14xsgv
                     (case-lambda
                       ((g$p$8399$14xsgv g$lev$8400$14xsgv)
                        ((case-lambda
                           ((g$t$8401$14xsgv)
                            ((case-lambda
                               ((g$ls/false$8402$14xsgv)
                                (if g$ls/false$8402$14xsgv
                                  (apply
                                    (case-lambda
                                      ((g$p$8403$14xsgv g$q$8404$14xsgv)
                                       ((case-lambda
                                          ((g$t$8405$14xsgv)
                                           ((case-lambda
                                              ((g$ls/false$8406$14xsgv)
                                               (if g$ls/false$8406$14xsgv
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8407$14xsgv)
                                                      (if (= g$lev$8400$14xsgv
                                                             '0)
                                                        (g$quasicons*$8362$14xsgv
                                                          g$p$8407$14xsgv
                                                          (g$vquasi$8366$14xsgv
                                                            g$q$8404$14xsgv
                                                            g$lev$8400$14xsgv))
                                                        (g$quasicons$8363$14xsgv
                                                          (g$quasicons$8363$14xsgv
                                                            (g$datum$8346$14xsgv
                                                              'unquote)
                                                            (g$quasi$8367$14xsgv
                                                              g$p$8407$14xsgv
                                                              (- g$lev$8400$14xsgv
                                                                 '1)))
                                                          (g$vquasi$8366$14xsgv
                                                            g$q$8404$14xsgv
                                                            g$lev$8400$14xsgv)))))
                                                   g$ls/false$8406$14xsgv)
                                                 ((case-lambda
                                                    ((g$t$8408$14xsgv)
                                                     ((case-lambda
                                                        ((g$ls/false$8409$14xsgv)
                                                         (if g$ls/false$8409$14xsgv
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8410$14xsgv)
                                                                (if (= g$lev$8400$14xsgv
                                                                       '0)
                                                                  (g$quasiappend$8364$14xsgv
                                                                    g$p$8410$14xsgv
                                                                    (g$vquasi$8366$14xsgv
                                                                      g$q$8404$14xsgv
                                                                      g$lev$8400$14xsgv))
                                                                  (g$quasicons$8363$14xsgv
                                                                    (g$quasicons$8363$14xsgv
                                                                      (g$datum$8346$14xsgv
                                                                        'unquote-splicing)
                                                                      (g$quasi$8367$14xsgv
                                                                        g$p$8410$14xsgv
                                                                        (- g$lev$8400$14xsgv
                                                                           '1)))
                                                                    (g$vquasi$8366$14xsgv
                                                                      g$q$8404$14xsgv
                                                                      g$lev$8400$14xsgv)))))
                                                             g$ls/false$8409$14xsgv)
                                                           ((case-lambda
                                                              ((g$t$8411$14xsgv)
                                                               ((case-lambda
                                                                  ((g$ls/false$8412$14xsgv)
                                                                   (if g$ls/false$8412$14xsgv
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8413$14xsgv)
                                                                          (g$quasicons$8363$14xsgv
                                                                            (g$quasi$8367$14xsgv
                                                                              g$p$8413$14xsgv
                                                                              g$lev$8400$14xsgv)
                                                                            (g$vquasi$8366$14xsgv
                                                                              g$q$8404$14xsgv
                                                                              g$lev$8400$14xsgv))))
                                                                       g$ls/false$8412$14xsgv)
                                                                     (g$syntax-violation$7501$14xsgv
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8411$14xsgv))))
                                                                (g$syntax-dispatch$7392$14xsgv
                                                                  g$t$8411$14xsgv
                                                                  'any))))
                                                            g$t$8408$14xsgv))))
                                                      (g$syntax-dispatch$7392$14xsgv
                                                        g$t$8408$14xsgv
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8405$14xsgv))))
                                            (g$syntax-dispatch$7392$14xsgv
                                              g$t$8405$14xsgv
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8403$14xsgv)))
                                    g$ls/false$8402$14xsgv)
                                  ((case-lambda
                                     ((g$t$8414$14xsgv)
                                      ((case-lambda
                                         ((g$ls/false$8415$14xsgv)
                                          (if g$ls/false$8415$14xsgv
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7335$14xsgv
                                                     'quote)
                                                   '())))
                                              g$ls/false$8415$14xsgv)
                                            (g$syntax-violation$7501$14xsgv
                                              '#f
                                              '"invalid syntax"
                                              g$t$8414$14xsgv))))
                                       (g$syntax-dispatch$7392$14xsgv
                                         g$t$8414$14xsgv
                                         '()))))
                                   g$t$8401$14xsgv))))
                             (g$syntax-dispatch$7392$14xsgv
                               g$t$8401$14xsgv
                               '(any . any)))))
                         g$p$8399$14xsgv))))
                   (g$quasi$8367$14xsgv
                     (case-lambda
                       ((g$p$8372$14xsgv g$lev$8373$14xsgv)
                        ((case-lambda
                           ((g$t$8374$14xsgv)
                            ((case-lambda
                               ((g$ls/false$8375$14xsgv)
                                (if g$ls/false$8375$14xsgv
                                  (apply
                                    (case-lambda
                                      ((g$p$8376$14xsgv)
                                       (if (= g$lev$8373$14xsgv '0)
                                         g$p$8376$14xsgv
                                         (g$quasicons$8363$14xsgv
                                           (g$datum$8346$14xsgv 'unquote)
                                           (g$quasi$8367$14xsgv
                                             (list g$p$8376$14xsgv)
                                             (- g$lev$8373$14xsgv '1))))))
                                    g$ls/false$8375$14xsgv)
                                  ((case-lambda
                                     ((g$t$8377$14xsgv)
                                      ((case-lambda
                                         ((g$ls/false$8378$14xsgv)
                                          (if g$ls/false$8378$14xsgv
                                            (apply
                                              (case-lambda
                                                ((g$p$8379$14xsgv
                                                   g$q$8380$14xsgv)
                                                 (if (= g$lev$8373$14xsgv '0)
                                                   (g$quasicons*$8362$14xsgv
                                                     g$p$8379$14xsgv
                                                     (g$quasi$8367$14xsgv
                                                       g$q$8380$14xsgv
                                                       g$lev$8373$14xsgv))
                                                   (g$quasicons$8363$14xsgv
                                                     (g$quasicons$8363$14xsgv
                                                       (g$datum$8346$14xsgv
                                                         'unquote)
                                                       (g$quasi$8367$14xsgv
                                                         g$p$8379$14xsgv
                                                         (- g$lev$8373$14xsgv
                                                            '1)))
                                                     (g$quasi$8367$14xsgv
                                                       g$q$8380$14xsgv
                                                       g$lev$8373$14xsgv)))))
                                              g$ls/false$8378$14xsgv)
                                            ((case-lambda
                                               ((g$t$8381$14xsgv)
                                                ((case-lambda
                                                   ((g$ls/false$8382$14xsgv)
                                                    (if g$ls/false$8382$14xsgv
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8383$14xsgv
                                                             g$q$8384$14xsgv)
                                                           (if (= g$lev$8373$14xsgv
                                                                  '0)
                                                             (g$quasiappend$8364$14xsgv
                                                               g$p$8383$14xsgv
                                                               (g$quasi$8367$14xsgv
                                                                 g$q$8384$14xsgv
                                                                 g$lev$8373$14xsgv))
                                                             (g$quasicons$8363$14xsgv
                                                               (g$quasicons$8363$14xsgv
                                                                 (g$datum$8346$14xsgv
                                                                   'unquote-splicing)
                                                                 (g$quasi$8367$14xsgv
                                                                   g$p$8383$14xsgv
                                                                   (- g$lev$8373$14xsgv
                                                                      '1)))
                                                               (g$quasi$8367$14xsgv
                                                                 g$q$8384$14xsgv
                                                                 g$lev$8373$14xsgv)))))
                                                        g$ls/false$8382$14xsgv)
                                                      ((case-lambda
                                                         ((g$t$8385$14xsgv)
                                                          ((case-lambda
                                                             ((g$ls/false$8386$14xsgv)
                                                              (if g$ls/false$8386$14xsgv
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8387$14xsgv)
                                                                     (g$quasicons$8363$14xsgv
                                                                       (g$datum$8346$14xsgv
                                                                         'quasiquote)
                                                                       (g$quasi$8367$14xsgv
                                                                         (list
                                                                           g$p$8387$14xsgv)
                                                                         (+ g$lev$8373$14xsgv
                                                                            '1)))))
                                                                  g$ls/false$8386$14xsgv)
                                                                ((case-lambda
                                                                   ((g$t$8388$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8389$14xsgv)
                                                                        (if g$ls/false$8389$14xsgv
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8390$14xsgv
                                                                                 g$q$8391$14xsgv)
                                                                               (g$quasicons$8363$14xsgv
                                                                                 (g$quasi$8367$14xsgv
                                                                                   g$p$8390$14xsgv
                                                                                   g$lev$8373$14xsgv)
                                                                                 (g$quasi$8367$14xsgv
                                                                                   g$q$8391$14xsgv
                                                                                   g$lev$8373$14xsgv))))
                                                                            g$ls/false$8389$14xsgv)
                                                                          ((case-lambda
                                                                             ((g$t$8392$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8393$14xsgv)
                                                                                  (if (if g$ls/false$8393$14xsgv
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8394$14xsgv)
                                                                                               (not (g$stx?$7086$14xsgv
                                                                                                      g$x$8394$14xsgv))))
                                                                                            g$ls/false$8393$14xsgv))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8395$14xsgv)
                                                                                         (g$quasivector$8365$14xsgv
                                                                                           (g$vquasi$8366$14xsgv
                                                                                             g$x$8395$14xsgv
                                                                                             g$lev$8373$14xsgv))))
                                                                                      g$ls/false$8393$14xsgv)
                                                                                    ((case-lambda
                                                                                       ((g$t$8396$14xsgv)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8397$14xsgv)
                                                                                            (if g$ls/false$8397$14xsgv
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8398$14xsgv)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7335$14xsgv
                                                                                                       'quote)
                                                                                                     g$p$8398$14xsgv)))
                                                                                                g$ls/false$8397$14xsgv)
                                                                                              (g$syntax-violation$7501$14xsgv
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8396$14xsgv))))
                                                                                         (g$syntax-dispatch$7392$14xsgv
                                                                                           g$t$8396$14xsgv
                                                                                           'any))))
                                                                                     g$t$8392$14xsgv))))
                                                                               (g$syntax-dispatch$7392$14xsgv
                                                                                 g$t$8392$14xsgv
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8388$14xsgv))))
                                                                     (g$syntax-dispatch$7392$14xsgv
                                                                       g$t$8388$14xsgv
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8385$14xsgv))))
                                                           (g$syntax-dispatch$7392$14xsgv
                                                             g$t$8385$14xsgv
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8381$14xsgv))))
                                                 (g$syntax-dispatch$7392$14xsgv
                                                   g$t$8381$14xsgv
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8377$14xsgv))))
                                       (g$syntax-dispatch$7392$14xsgv
                                         g$t$8377$14xsgv
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8374$14xsgv))))
                             (g$syntax-dispatch$7392$14xsgv
                               g$t$8374$14xsgv
                               '(#(scheme-id unquote) any)))))
                         g$p$8372$14xsgv)))))
           (case-lambda
             ((g$x$8368$14xsgv)
              ((case-lambda
                 ((g$t$8369$14xsgv)
                  ((case-lambda
                     ((g$ls/false$8370$14xsgv)
                      (if g$ls/false$8370$14xsgv
                        (apply
                          (case-lambda
                            ((g$e$8371$14xsgv)
                             (g$quasi$8367$14xsgv g$e$8371$14xsgv '0)))
                          g$ls/false$8370$14xsgv)
                        (g$syntax-violation$7501$14xsgv
                          '#f
                          '"invalid syntax"
                          g$t$8369$14xsgv))))
                   (g$syntax-dispatch$7392$14xsgv g$t$8369$14xsgv '(_ any)))))
               g$x$8368$14xsgv))))))))
   (g$quasisyntax-macro$7384$14xsgv
     g$quasisyntax-macro$10820$14xsgv
     ((case-lambda
        (()
         (letrec* ((g$quasi$8478$14xsgv
                     (case-lambda
                       ((g$p$8492$14xsgv g$lev$8493$14xsgv)
                        ((case-lambda
                           ((g$t$8494$14xsgv)
                            ((case-lambda
                               ((g$ls/false$8495$14xsgv)
                                (if g$ls/false$8495$14xsgv
                                  (apply
                                    (case-lambda
                                      ((g$p$8496$14xsgv)
                                       (if (= g$lev$8493$14xsgv '0)
                                         ((case-lambda
                                            ((g$g$8497$14xsgv)
                                             (values
                                               (list g$g$8497$14xsgv)
                                               (list g$p$8496$14xsgv)
                                               g$g$8497$14xsgv)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8478$14xsgv
                                                g$p$8496$14xsgv
                                                (- g$lev$8493$14xsgv '1))))
                                           (case-lambda
                                             ((g$lhs*$8501$14xsgv
                                                g$rhs*$8502$14xsgv
                                                g$p$8503$14xsgv)
                                              ((case-lambda
                                                 ((g$p$8504$14xsgv
                                                    g$rhs*$8505$14xsgv
                                                    g$lhs*$8506$14xsgv)
                                                  (values
                                                    g$lhs*$8506$14xsgv
                                                    g$rhs*$8505$14xsgv
                                                    (list
                                                      'unsyntax
                                                      g$p$8504$14xsgv))))
                                               g$p$8503$14xsgv
                                               g$rhs*$8502$14xsgv
                                               g$lhs*$8501$14xsgv)))))))
                                    g$ls/false$8495$14xsgv)
                                  ((case-lambda
                                     ((g$t$8507$14xsgv)
                                      ((case-lambda
                                         ((g$ls/false$8508$14xsgv)
                                          (if (if g$ls/false$8508$14xsgv
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8493$14xsgv
                                                          '0)))
                                                    g$ls/false$8508$14xsgv))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7501$14xsgv
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8492$14xsgv)))
                                              g$ls/false$8508$14xsgv)
                                            ((case-lambda
                                               ((g$t$8509$14xsgv)
                                                ((case-lambda
                                                   ((g$ls/false$8510$14xsgv)
                                                    (if g$ls/false$8510$14xsgv
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8511$14xsgv
                                                             g$q$8512$14xsgv)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8478$14xsgv
                                                                  g$q$8512$14xsgv
                                                                  g$lev$8493$14xsgv)))
                                                             (case-lambda
                                                               ((g$lhs*$8516$14xsgv
                                                                  g$rhs*$8517$14xsgv
                                                                  g$q$8518$14xsgv)
                                                                ((case-lambda
                                                                   ((g$q$8519$14xsgv
                                                                      g$rhs*$8520$14xsgv
                                                                      g$lhs*$8521$14xsgv)
                                                                    (if (= g$lev$8493$14xsgv
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8522$14xsgv)
                                                                          (values
                                                                            (append
                                                                              g$g*$8522$14xsgv
                                                                              g$lhs*$8521$14xsgv)
                                                                            (append
                                                                              g$p*$8511$14xsgv
                                                                              g$rhs*$8520$14xsgv)
                                                                            (append
                                                                              g$g*$8522$14xsgv
                                                                              g$q$8519$14xsgv))))
                                                                       (map (case-lambda
                                                                              ((g$x$8523$14xsgv)
                                                                               (gensym)))
                                                                            g$p*$8511$14xsgv))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8478$14xsgv
                                                                             g$p*$8511$14xsgv
                                                                             (- g$lev$8493$14xsgv
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8527$14xsgv
                                                                             g$rhs2*$8528$14xsgv
                                                                             g$p*$8529$14xsgv)
                                                                           ((case-lambda
                                                                              ((g$p*$8530$14xsgv
                                                                                 g$rhs2*$8531$14xsgv
                                                                                 g$lhs2*$8532$14xsgv)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8532$14xsgv
                                                                                   g$lhs*$8521$14xsgv)
                                                                                 (append
                                                                                   g$rhs2*$8531$14xsgv
                                                                                   g$rhs*$8520$14xsgv)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8530$14xsgv)
                                                                                   g$q$8519$14xsgv))))
                                                                            g$p*$8529$14xsgv
                                                                            g$rhs2*$8528$14xsgv
                                                                            g$lhs2*$8527$14xsgv)))))))
                                                                 g$q$8518$14xsgv
                                                                 g$rhs*$8517$14xsgv
                                                                 g$lhs*$8516$14xsgv))))))
                                                        g$ls/false$8510$14xsgv)
                                                      ((case-lambda
                                                         ((g$t$8533$14xsgv)
                                                          ((case-lambda
                                                             ((g$ls/false$8534$14xsgv)
                                                              (if g$ls/false$8534$14xsgv
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8535$14xsgv
                                                                       g$q$8536$14xsgv)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8478$14xsgv
                                                                            g$q$8536$14xsgv
                                                                            g$lev$8493$14xsgv)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8540$14xsgv
                                                                            g$rhs*$8541$14xsgv
                                                                            g$q$8542$14xsgv)
                                                                          ((case-lambda
                                                                             ((g$q$8543$14xsgv
                                                                                g$rhs*$8544$14xsgv
                                                                                g$lhs*$8545$14xsgv)
                                                                              (if (= g$lev$8493$14xsgv
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8546$14xsgv)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8547$14xsgv)
                                                                                                (cons
                                                                                                  g$g$8547$14xsgv
                                                                                                  '(...))))
                                                                                             g$g*$8546$14xsgv)
                                                                                        g$lhs*$8545$14xsgv)
                                                                                      (append
                                                                                        g$p*$8535$14xsgv
                                                                                        g$rhs*$8544$14xsgv)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8548$14xsgv)
                                                                                                  (cons
                                                                                                    g$g$8548$14xsgv
                                                                                                    '(...))))
                                                                                               g$g*$8546$14xsgv))
                                                                                        g$q$8543$14xsgv))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8549$14xsgv)
                                                                                         (gensym)))
                                                                                      g$p*$8535$14xsgv))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8478$14xsgv
                                                                                       g$p*$8535$14xsgv
                                                                                       (- g$lev$8493$14xsgv
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8553$14xsgv
                                                                                       g$rhs2*$8554$14xsgv
                                                                                       g$p*$8555$14xsgv)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8556$14xsgv
                                                                                           g$rhs2*$8557$14xsgv
                                                                                           g$lhs2*$8558$14xsgv)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8558$14xsgv
                                                                                             g$lhs*$8545$14xsgv)
                                                                                           (append
                                                                                             g$rhs2*$8557$14xsgv
                                                                                             g$rhs*$8544$14xsgv)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8556$14xsgv)
                                                                                             g$q$8543$14xsgv))))
                                                                                      g$p*$8555$14xsgv
                                                                                      g$rhs2*$8554$14xsgv
                                                                                      g$lhs2*$8553$14xsgv)))))))
                                                                           g$q$8542$14xsgv
                                                                           g$rhs*$8541$14xsgv
                                                                           g$lhs*$8540$14xsgv))))))
                                                                  g$ls/false$8534$14xsgv)
                                                                ((case-lambda
                                                                   ((g$t$8559$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8560$14xsgv)
                                                                        (if (if g$ls/false$8560$14xsgv
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8493$14xsgv
                                                                                        '0)))
                                                                                  g$ls/false$8560$14xsgv))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7501$14xsgv
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8492$14xsgv)))
                                                                            g$ls/false$8560$14xsgv)
                                                                          ((case-lambda
                                                                             ((g$t$8561$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8562$14xsgv)
                                                                                  (if g$ls/false$8562$14xsgv
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8563$14xsgv)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8478$14xsgv
                                                                                                g$p$8563$14xsgv
                                                                                                (+ g$lev$8493$14xsgv
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8567$14xsgv
                                                                                                g$rhs*$8568$14xsgv
                                                                                                g$p$8569$14xsgv)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8570$14xsgv
                                                                                                    g$rhs*$8571$14xsgv
                                                                                                    g$lhs*$8572$14xsgv)
                                                                                                  (values
                                                                                                    g$lhs*$8572$14xsgv
                                                                                                    g$rhs*$8571$14xsgv
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8570$14xsgv))))
                                                                                               g$p$8569$14xsgv
                                                                                               g$rhs*$8568$14xsgv
                                                                                               g$lhs*$8567$14xsgv))))))
                                                                                      g$ls/false$8562$14xsgv)
                                                                                    ((case-lambda
                                                                                       ((g$t$8573$14xsgv)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8574$14xsgv)
                                                                                            (if g$ls/false$8574$14xsgv
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8575$14xsgv
                                                                                                     g$q$8576$14xsgv)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8478$14xsgv
                                                                                                          g$p$8575$14xsgv
                                                                                                          g$lev$8493$14xsgv)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8583$14xsgv
                                                                                                          g$rhs*$8584$14xsgv
                                                                                                          g$p$8585$14xsgv)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8478$14xsgv
                                                                                                               g$q$8576$14xsgv
                                                                                                               g$lev$8493$14xsgv)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8586$14xsgv
                                                                                                               g$rhs2*$8587$14xsgv
                                                                                                               g$q$8588$14xsgv)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8589$14xsgv
                                                                                                                   g$rhs2*$8590$14xsgv
                                                                                                                   g$lhs2*$8591$14xsgv
                                                                                                                   g$p$8592$14xsgv
                                                                                                                   g$rhs*$8593$14xsgv
                                                                                                                   g$lhs*$8594$14xsgv)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8591$14xsgv
                                                                                                                     g$lhs*$8594$14xsgv)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8590$14xsgv
                                                                                                                     g$rhs*$8593$14xsgv)
                                                                                                                   (cons
                                                                                                                     g$p$8592$14xsgv
                                                                                                                     g$q$8589$14xsgv))))
                                                                                                              g$q$8588$14xsgv
                                                                                                              g$rhs2*$8587$14xsgv
                                                                                                              g$lhs2*$8586$14xsgv
                                                                                                              g$p$8585$14xsgv
                                                                                                              g$rhs*$8584$14xsgv
                                                                                                              g$lhs*$8583$14xsgv)))))))))
                                                                                                g$ls/false$8574$14xsgv)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8595$14xsgv)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8596$14xsgv)
                                                                                                      (if g$ls/false$8596$14xsgv
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8597$14xsgv)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8478$14xsgv
                                                                                                                    g$x*$8597$14xsgv
                                                                                                                    g$lev$8493$14xsgv)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8601$14xsgv
                                                                                                                    g$rhs*$8602$14xsgv
                                                                                                                    g$x*$8603$14xsgv)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8604$14xsgv
                                                                                                                        g$rhs*$8605$14xsgv
                                                                                                                        g$lhs*$8606$14xsgv)
                                                                                                                      (values
                                                                                                                        g$lhs*$8606$14xsgv
                                                                                                                        g$rhs*$8605$14xsgv
                                                                                                                        (list->vector
                                                                                                                          g$x*$8604$14xsgv))))
                                                                                                                   g$x*$8603$14xsgv
                                                                                                                   g$rhs*$8602$14xsgv
                                                                                                                   g$lhs*$8601$14xsgv))))))
                                                                                                          g$ls/false$8596$14xsgv)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8607$14xsgv)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8608$14xsgv)
                                                                                                                (if g$ls/false$8608$14xsgv
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8492$14xsgv)))
                                                                                                                    g$ls/false$8608$14xsgv)
                                                                                                                  (g$syntax-violation$7501$14xsgv
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8607$14xsgv))))
                                                                                                             (g$syntax-dispatch$7392$14xsgv
                                                                                                               g$t$8607$14xsgv
                                                                                                               '_))))
                                                                                                         g$t$8595$14xsgv))))
                                                                                                   (g$syntax-dispatch$7392$14xsgv
                                                                                                     g$t$8595$14xsgv
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8573$14xsgv))))
                                                                                         (g$syntax-dispatch$7392$14xsgv
                                                                                           g$t$8573$14xsgv
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8561$14xsgv))))
                                                                               (g$syntax-dispatch$7392$14xsgv
                                                                                 g$t$8561$14xsgv
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8559$14xsgv))))
                                                                     (g$syntax-dispatch$7392$14xsgv
                                                                       g$t$8559$14xsgv
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8533$14xsgv))))
                                                           (g$syntax-dispatch$7392$14xsgv
                                                             g$t$8533$14xsgv
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8509$14xsgv))))
                                                 (g$syntax-dispatch$7392$14xsgv
                                                   g$t$8509$14xsgv
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8507$14xsgv))))
                                       (g$syntax-dispatch$7392$14xsgv
                                         g$t$8507$14xsgv
                                         '#(scheme-id unsyntax)))))
                                   g$t$8494$14xsgv))))
                             (g$syntax-dispatch$7392$14xsgv
                               g$t$8494$14xsgv
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8492$14xsgv)))))
           (case-lambda
             ((g$x$8479$14xsgv)
              ((case-lambda
                 ((g$t$8480$14xsgv)
                  ((case-lambda
                     ((g$ls/false$8481$14xsgv)
                      (if g$ls/false$8481$14xsgv
                        (apply
                          (case-lambda
                            ((g$e$8482$14xsgv)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8478$14xsgv g$e$8482$14xsgv '0)))
                               (case-lambda
                                 ((g$lhs*$8486$14xsgv
                                    g$rhs*$8487$14xsgv
                                    g$v$8488$14xsgv)
                                  ((case-lambda
                                     ((g$v$8489$14xsgv
                                        g$rhs*$8490$14xsgv
                                        g$lhs*$8491$14xsgv)
                                      (g$bless$7355$14xsgv
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8490$14xsgv)
                                          '()
                                          (list
                                            g$lhs*$8491$14xsgv
                                            (list 'syntax g$v$8489$14xsgv))))))
                                   g$v$8488$14xsgv
                                   g$rhs*$8487$14xsgv
                                   g$lhs*$8486$14xsgv))))))
                          g$ls/false$8481$14xsgv)
                        (g$syntax-violation$7501$14xsgv
                          '#f
                          '"invalid syntax"
                          g$t$8480$14xsgv))))
                   (g$syntax-dispatch$7392$14xsgv g$t$8480$14xsgv '(_ any)))))
               g$x$8479$14xsgv))))))))
   (g$define-struct-macro$7385$14xsgv
     g$define-struct-macro$10821$14xsgv
     (case-lambda
       ((g$stx$8609$14xsgv)
        (g$syntax-violation$7501$14xsgv
          '#f
          '"define-struct not supported"
          g$stx$8609$14xsgv))))
   (g$define-record-type-macro$7386$14xsgv
     g$define-record-type-macro$10822$14xsgv
     (case-lambda
       ((g$x$8610$14xsgv)
        (letrec* ((g$id$8611$14xsgv
                    (case-lambda
                      ((g$ctxt$8863$14xsgv . g$str*$8864$14xsgv)
                       (g$datum->syntax$7503$14xsgv
                         g$ctxt$8863$14xsgv
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$8865$14xsgv)
                                     (if (symbol? g$x$8865$14xsgv)
                                       (symbol->string g$x$8865$14xsgv)
                                       (if (string? g$x$8865$14xsgv)
                                         g$x$8865$14xsgv
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$8864$14xsgv)))))))
                  (g$get-record-name$8612$14xsgv
                    (case-lambda
                      ((g$spec$8854$14xsgv)
                       ((case-lambda
                          ((g$t$8855$14xsgv)
                           ((case-lambda
                              ((g$ls/false$8856$14xsgv)
                               (if g$ls/false$8856$14xsgv
                                 (apply
                                   (case-lambda
                                     ((g$foo$8857$14xsgv
                                        g$make-foo$8858$14xsgv
                                        g$foo?$8859$14xsgv)
                                      g$foo$8857$14xsgv))
                                   g$ls/false$8856$14xsgv)
                                 ((case-lambda
                                    ((g$t$8860$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8861$14xsgv)
                                         (if g$ls/false$8861$14xsgv
                                           (apply
                                             (case-lambda
                                               ((g$foo$8862$14xsgv)
                                                g$foo$8862$14xsgv))
                                             g$ls/false$8861$14xsgv)
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid syntax"
                                             g$t$8860$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8860$14xsgv
                                        'any))))
                                  g$t$8855$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$8855$14xsgv
                              '(any any any)))))
                        g$spec$8854$14xsgv))))
                  (g$get-record-constructor-name$8613$14xsgv
                    (case-lambda
                      ((g$spec$8844$14xsgv)
                       ((case-lambda
                          ((g$t$8845$14xsgv)
                           ((case-lambda
                              ((g$ls/false$8846$14xsgv)
                               (if g$ls/false$8846$14xsgv
                                 (apply
                                   (case-lambda
                                     ((g$foo$8847$14xsgv
                                        g$make-foo$8848$14xsgv
                                        g$foo?$8849$14xsgv)
                                      g$make-foo$8848$14xsgv))
                                   g$ls/false$8846$14xsgv)
                                 ((case-lambda
                                    ((g$t$8850$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8851$14xsgv)
                                         (if (if g$ls/false$8851$14xsgv
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8852$14xsgv)
                                                      (g$id?$7114$14xsgv
                                                        g$foo$8852$14xsgv)))
                                                   g$ls/false$8851$14xsgv))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8853$14xsgv)
                                                (g$id$8611$14xsgv
                                                  g$foo$8853$14xsgv
                                                  '"make-"
                                                  (g$stx->datum$7125$14xsgv
                                                    g$foo$8853$14xsgv))))
                                             g$ls/false$8851$14xsgv)
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid syntax"
                                             g$t$8850$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8850$14xsgv
                                        'any))))
                                  g$t$8845$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$8845$14xsgv
                              '(any any any)))))
                        g$spec$8844$14xsgv))))
                  (g$get-record-predicate-name$8614$14xsgv
                    (case-lambda
                      ((g$spec$8834$14xsgv)
                       ((case-lambda
                          ((g$t$8835$14xsgv)
                           ((case-lambda
                              ((g$ls/false$8836$14xsgv)
                               (if g$ls/false$8836$14xsgv
                                 (apply
                                   (case-lambda
                                     ((g$foo$8837$14xsgv
                                        g$make-foo$8838$14xsgv
                                        g$foo?$8839$14xsgv)
                                      g$foo?$8839$14xsgv))
                                   g$ls/false$8836$14xsgv)
                                 ((case-lambda
                                    ((g$t$8840$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8841$14xsgv)
                                         (if (if g$ls/false$8841$14xsgv
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8842$14xsgv)
                                                      (g$id?$7114$14xsgv
                                                        g$foo$8842$14xsgv)))
                                                   g$ls/false$8841$14xsgv))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8843$14xsgv)
                                                (g$id$8611$14xsgv
                                                  g$foo$8843$14xsgv
                                                  (g$stx->datum$7125$14xsgv
                                                    g$foo$8843$14xsgv)
                                                  '"?")))
                                             g$ls/false$8841$14xsgv)
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid syntax"
                                             g$t$8840$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8840$14xsgv
                                        'any))))
                                  g$t$8835$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$8835$14xsgv
                              '(any any any)))))
                        g$spec$8834$14xsgv))))
                  (g$get-clause$8615$14xsgv
                    (case-lambda
                      ((g$id$8825$14xsgv g$ls$8826$14xsgv)
                       ((case-lambda
                          ((g$t$8827$14xsgv)
                           ((case-lambda
                              ((g$ls/false$8828$14xsgv)
                               (if g$ls/false$8828$14xsgv
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$8828$14xsgv)
                                 ((case-lambda
                                    ((g$t$8829$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8830$14xsgv)
                                         (if g$ls/false$8830$14xsgv
                                           (apply
                                             (case-lambda
                                               ((g$x$8831$14xsgv
                                                  g$rest$8832$14xsgv
                                                  g$ls$8833$14xsgv)
                                                (if (g$free-id=?$7118$14xsgv
                                                      (g$bless$7355$14xsgv
                                                        g$id$8825$14xsgv)
                                                      g$x$8831$14xsgv)
                                                  (cons
                                                    g$x$8831$14xsgv
                                                    g$rest$8832$14xsgv)
                                                  (g$get-clause$8615$14xsgv
                                                    g$id$8825$14xsgv
                                                    g$ls$8833$14xsgv))))
                                             g$ls/false$8830$14xsgv)
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid syntax"
                                             g$t$8829$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8829$14xsgv
                                        '((any . any) . any)))))
                                  g$t$8827$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$8827$14xsgv
                              '()))))
                        g$ls$8826$14xsgv))))
                  (g$foo-rtd-code$8616$14xsgv
                    (case-lambda
                      ((g$name$8784$14xsgv
                         g$clause*$8785$14xsgv
                         g$parent-rtd-code$8786$14xsgv)
                       (letrec* ((g$convert-field-spec*$8787$14xsgv
                                   (case-lambda
                                     ((g$ls$8812$14xsgv)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$8813$14xsgv)
                                                ((case-lambda
                                                   ((g$t$8814$14xsgv)
                                                    ((case-lambda
                                                       ((g$ls/false$8815$14xsgv)
                                                        (if g$ls/false$8815$14xsgv
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$8816$14xsgv
                                                                 g$rest$8817$14xsgv)
                                                               (list
                                                                 'mutable
                                                                 g$name$8816$14xsgv)))
                                                            g$ls/false$8815$14xsgv)
                                                          ((case-lambda
                                                             ((g$t$8818$14xsgv)
                                                              ((case-lambda
                                                                 ((g$ls/false$8819$14xsgv)
                                                                  (if g$ls/false$8819$14xsgv
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$8820$14xsgv
                                                                           g$rest$8821$14xsgv)
                                                                         (list
                                                                           'immutable
                                                                           g$name$8820$14xsgv)))
                                                                      g$ls/false$8819$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$t$8822$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8823$14xsgv)
                                                                            (if g$ls/false$8823$14xsgv
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$8824$14xsgv)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$8824$14xsgv)))
                                                                                g$ls/false$8823$14xsgv)
                                                                              (g$syntax-violation$7501$14xsgv
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8822$14xsgv))))
                                                                         (g$syntax-dispatch$7392$14xsgv
                                                                           g$t$8822$14xsgv
                                                                           'any))))
                                                                     g$t$8818$14xsgv))))
                                                               (g$syntax-dispatch$7392$14xsgv
                                                                 g$t$8818$14xsgv
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$8814$14xsgv))))
                                                     (g$syntax-dispatch$7392$14xsgv
                                                       g$t$8814$14xsgv
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$8813$14xsgv)))
                                             g$ls$8812$14xsgv))))))
                         ((case-lambda
                            ((g$uid-code$8788$14xsgv
                               g$sealed?$8789$14xsgv
                               g$opaque?$8790$14xsgv
                               g$fields$8791$14xsgv)
                             (g$bless$7355$14xsgv
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8784$14xsgv)
                                 g$parent-rtd-code$8786$14xsgv
                                 g$uid-code$8788$14xsgv
                                 g$sealed?$8789$14xsgv
                                 g$opaque?$8790$14xsgv
                                 g$fields$8791$14xsgv))))
                          ((case-lambda
                             ((g$t$8792$14xsgv)
                              ((case-lambda
                                 ((g$ls/false$8793$14xsgv)
                                  (if g$ls/false$8793$14xsgv
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$8793$14xsgv)
                                    ((case-lambda
                                       ((g$t$8794$14xsgv)
                                        ((case-lambda
                                           ((g$ls/false$8795$14xsgv)
                                            (if g$ls/false$8795$14xsgv
                                              (apply
                                                (case-lambda
                                                  ((g$uid$8796$14xsgv)
                                                   (list
                                                     'quote
                                                     g$uid$8796$14xsgv)))
                                                g$ls/false$8795$14xsgv)
                                              ((case-lambda
                                                 ((g$t$8797$14xsgv)
                                                  ((case-lambda
                                                     ((g$ls/false$8798$14xsgv)
                                                      (if g$ls/false$8798$14xsgv
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$8798$14xsgv)
                                                        (g$syntax-violation$7501$14xsgv
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$8797$14xsgv))))
                                                   (g$syntax-dispatch$7392$14xsgv
                                                     g$t$8797$14xsgv
                                                     '_))))
                                               g$t$8794$14xsgv))))
                                         (g$syntax-dispatch$7392$14xsgv
                                           g$t$8794$14xsgv
                                           '(_ any)))))
                                     g$t$8792$14xsgv))))
                               (g$syntax-dispatch$7392$14xsgv
                                 g$t$8792$14xsgv
                                 '(_)))))
                           (g$get-clause$8615$14xsgv
                             'nongenerative
                             g$clause*$8785$14xsgv))
                          ((case-lambda
                             ((g$t$8799$14xsgv)
                              ((case-lambda
                                 ((g$ls/false$8800$14xsgv)
                                  (if g$ls/false$8800$14xsgv
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8800$14xsgv)
                                    ((case-lambda
                                       ((g$t$8801$14xsgv)
                                        ((case-lambda
                                           ((g$ls/false$8802$14xsgv)
                                            (if g$ls/false$8802$14xsgv
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8802$14xsgv)
                                              (g$syntax-violation$7501$14xsgv
                                                '#f
                                                '"invalid syntax"
                                                g$t$8801$14xsgv))))
                                         (g$syntax-dispatch$7392$14xsgv
                                           g$t$8801$14xsgv
                                           '_))))
                                     g$t$8799$14xsgv))))
                               (g$syntax-dispatch$7392$14xsgv
                                 g$t$8799$14xsgv
                                 '(_ #(atom #t))))))
                           (g$get-clause$8615$14xsgv
                             'sealed
                             g$clause*$8785$14xsgv))
                          ((case-lambda
                             ((g$t$8803$14xsgv)
                              ((case-lambda
                                 ((g$ls/false$8804$14xsgv)
                                  (if g$ls/false$8804$14xsgv
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8804$14xsgv)
                                    ((case-lambda
                                       ((g$t$8805$14xsgv)
                                        ((case-lambda
                                           ((g$ls/false$8806$14xsgv)
                                            (if g$ls/false$8806$14xsgv
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8806$14xsgv)
                                              (g$syntax-violation$7501$14xsgv
                                                '#f
                                                '"invalid syntax"
                                                g$t$8805$14xsgv))))
                                         (g$syntax-dispatch$7392$14xsgv
                                           g$t$8805$14xsgv
                                           '_))))
                                     g$t$8803$14xsgv))))
                               (g$syntax-dispatch$7392$14xsgv
                                 g$t$8803$14xsgv
                                 '(_ #(atom #t))))))
                           (g$get-clause$8615$14xsgv
                             'opaque
                             g$clause*$8785$14xsgv))
                          ((case-lambda
                             ((g$t$8807$14xsgv)
                              ((case-lambda
                                 ((g$ls/false$8808$14xsgv)
                                  (if g$ls/false$8808$14xsgv
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$8809$14xsgv)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8787$14xsgv
                                             g$field-spec*$8809$14xsgv))))
                                      g$ls/false$8808$14xsgv)
                                    ((case-lambda
                                       ((g$t$8810$14xsgv)
                                        ((case-lambda
                                           ((g$ls/false$8811$14xsgv)
                                            (if g$ls/false$8811$14xsgv
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$8811$14xsgv)
                                              (g$syntax-violation$7501$14xsgv
                                                '#f
                                                '"invalid syntax"
                                                g$t$8810$14xsgv))))
                                         (g$syntax-dispatch$7392$14xsgv
                                           g$t$8810$14xsgv
                                           '_))))
                                     g$t$8807$14xsgv))))
                               (g$syntax-dispatch$7392$14xsgv
                                 g$t$8807$14xsgv
                                 '(_ . each-any)))))
                           (g$get-clause$8615$14xsgv
                             'fields
                             g$clause*$8785$14xsgv)))))))
                  (g$parent-rtd-code$8617$14xsgv
                    (case-lambda
                      ((g$clause*$8772$14xsgv)
                       ((case-lambda
                          ((g$t$8773$14xsgv)
                           ((case-lambda
                              ((g$ls/false$8774$14xsgv)
                               (if g$ls/false$8774$14xsgv
                                 (apply
                                   (case-lambda
                                     ((g$name$8775$14xsgv)
                                      (list
                                        'record-type-descriptor
                                        g$name$8775$14xsgv)))
                                   g$ls/false$8774$14xsgv)
                                 ((case-lambda
                                    ((g$t$8776$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8777$14xsgv)
                                         (if g$ls/false$8777$14xsgv
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8778$14xsgv)
                                                    ((case-lambda
                                                       ((g$ls/false$8779$14xsgv)
                                                        (if g$ls/false$8779$14xsgv
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8780$14xsgv
                                                                 g$rcd$8781$14xsgv)
                                                               g$rtd$8780$14xsgv))
                                                            g$ls/false$8779$14xsgv)
                                                          ((case-lambda
                                                             ((g$t$8782$14xsgv)
                                                              ((case-lambda
                                                                 ((g$ls/false$8783$14xsgv)
                                                                  (if g$ls/false$8783$14xsgv
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8783$14xsgv)
                                                                    (g$syntax-violation$7501$14xsgv
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8782$14xsgv))))
                                                               (g$syntax-dispatch$7392$14xsgv
                                                                 g$t$8782$14xsgv
                                                                 '#(atom #f)))))
                                                           g$t$8778$14xsgv))))
                                                     (g$syntax-dispatch$7392$14xsgv
                                                       g$t$8778$14xsgv
                                                       '(_ any any)))))
                                                 (g$get-clause$8615$14xsgv
                                                   'parent-rtd
                                                   g$clause*$8772$14xsgv))))
                                             g$ls/false$8777$14xsgv)
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid syntax"
                                             g$t$8776$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8776$14xsgv
                                        '#(atom #f)))))
                                  g$t$8773$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$8773$14xsgv
                              '(_ any)))))
                        (g$get-clause$8615$14xsgv
                          'parent
                          g$clause*$8772$14xsgv)))))
                  (g$parent-rcd-code$8618$14xsgv
                    (case-lambda
                      ((g$clause*$8760$14xsgv)
                       ((case-lambda
                          ((g$t$8761$14xsgv)
                           ((case-lambda
                              ((g$ls/false$8762$14xsgv)
                               (if g$ls/false$8762$14xsgv
                                 (apply
                                   (case-lambda
                                     ((g$name$8763$14xsgv)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$8763$14xsgv)))
                                   g$ls/false$8762$14xsgv)
                                 ((case-lambda
                                    ((g$t$8764$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8765$14xsgv)
                                         (if g$ls/false$8765$14xsgv
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8766$14xsgv)
                                                    ((case-lambda
                                                       ((g$ls/false$8767$14xsgv)
                                                        (if g$ls/false$8767$14xsgv
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8768$14xsgv
                                                                 g$rcd$8769$14xsgv)
                                                               g$rcd$8769$14xsgv))
                                                            g$ls/false$8767$14xsgv)
                                                          ((case-lambda
                                                             ((g$t$8770$14xsgv)
                                                              ((case-lambda
                                                                 ((g$ls/false$8771$14xsgv)
                                                                  (if g$ls/false$8771$14xsgv
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8771$14xsgv)
                                                                    (g$syntax-violation$7501$14xsgv
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8770$14xsgv))))
                                                               (g$syntax-dispatch$7392$14xsgv
                                                                 g$t$8770$14xsgv
                                                                 '#(atom #f)))))
                                                           g$t$8766$14xsgv))))
                                                     (g$syntax-dispatch$7392$14xsgv
                                                       g$t$8766$14xsgv
                                                       '(_ any any)))))
                                                 (g$get-clause$8615$14xsgv
                                                   'parent-rtd
                                                   g$clause*$8760$14xsgv))))
                                             g$ls/false$8765$14xsgv)
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid syntax"
                                             g$t$8764$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8764$14xsgv
                                        '#(atom #f)))))
                                  g$t$8761$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$8761$14xsgv
                              '(_ any)))))
                        (g$get-clause$8615$14xsgv
                          'parent
                          g$clause*$8760$14xsgv)))))
                  (g$foo-rcd-code$8619$14xsgv
                    (case-lambda
                      ((g$clause*$8756$14xsgv
                         g$foo-rtd$8757$14xsgv
                         g$protocol$8758$14xsgv
                         g$parent-rcd-code$8759$14xsgv)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$8757$14xsgv
                         g$parent-rcd-code$8759$14xsgv
                         g$protocol$8758$14xsgv))))
                  (g$get-protocol-code$8620$14xsgv
                    (case-lambda
                      ((g$clause*$8750$14xsgv)
                       ((case-lambda
                          ((g$t$8751$14xsgv)
                           ((case-lambda
                              ((g$ls/false$8752$14xsgv)
                               (if g$ls/false$8752$14xsgv
                                 (apply
                                   (case-lambda
                                     ((g$expr$8753$14xsgv) g$expr$8753$14xsgv))
                                   g$ls/false$8752$14xsgv)
                                 ((case-lambda
                                    ((g$t$8754$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8755$14xsgv)
                                         (if g$ls/false$8755$14xsgv
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8755$14xsgv)
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid syntax"
                                             g$t$8754$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8754$14xsgv
                                        '_))))
                                  g$t$8751$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$8751$14xsgv
                              '(_ any)))))
                        (g$get-clause$8615$14xsgv
                          'protocol
                          g$clause*$8750$14xsgv)))))
                  (g$get-fields$8621$14xsgv
                    (case-lambda
                      ((g$clause*$8741$14xsgv)
                       ((case-lambda
                          ((g$t$8742$14xsgv)
                           ((case-lambda
                              ((g$ls/false$8743$14xsgv)
                               (if g$ls/false$8743$14xsgv
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8743$14xsgv)
                                 ((case-lambda
                                    ((g$t$8744$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8745$14xsgv)
                                         (if g$ls/false$8745$14xsgv
                                           (apply
                                             (case-lambda
                                               ((g$f*$8746$14xsgv)
                                                g$f*$8746$14xsgv))
                                             g$ls/false$8745$14xsgv)
                                           ((case-lambda
                                              ((g$t$8747$14xsgv)
                                               ((case-lambda
                                                  ((g$ls/false$8748$14xsgv)
                                                   (if g$ls/false$8748$14xsgv
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8749$14xsgv)
                                                          (g$get-fields$8621$14xsgv
                                                            g$rest$8749$14xsgv)))
                                                       g$ls/false$8748$14xsgv)
                                                     (g$syntax-violation$7501$14xsgv
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8747$14xsgv))))
                                                (g$syntax-dispatch$7392$14xsgv
                                                  g$t$8747$14xsgv
                                                  '(_ . any)))))
                                            g$t$8744$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8744$14xsgv
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8742$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$8742$14xsgv
                              '()))))
                        g$clause*$8741$14xsgv))))
                  (g$get-mutator-indices$8622$14xsgv
                    (case-lambda
                      ((g$fields$8729$14xsgv)
                       ((letrec ((g$f$8730$14xsgv
                                   (case-lambda
                                     ((g$fields$8731$14xsgv g$i$8732$14xsgv)
                                      ((case-lambda
                                         ((g$t$8733$14xsgv)
                                          ((case-lambda
                                             ((g$ls/false$8734$14xsgv)
                                              (if g$ls/false$8734$14xsgv
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8734$14xsgv)
                                                ((case-lambda
                                                   ((g$t$8735$14xsgv)
                                                    ((case-lambda
                                                       ((g$ls/false$8736$14xsgv)
                                                        (if g$ls/false$8736$14xsgv
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8737$14xsgv)
                                                               (cons
                                                                 g$i$8732$14xsgv
                                                                 (g$f$8730$14xsgv
                                                                   g$rest$8737$14xsgv
                                                                   (+ g$i$8732$14xsgv
                                                                      '1)))))
                                                            g$ls/false$8736$14xsgv)
                                                          ((case-lambda
                                                             ((g$t$8738$14xsgv)
                                                              ((case-lambda
                                                                 ((g$ls/false$8739$14xsgv)
                                                                  (if g$ls/false$8739$14xsgv
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8740$14xsgv)
                                                                         (g$f$8730$14xsgv
                                                                           g$rest$8740$14xsgv
                                                                           (+ g$i$8732$14xsgv
                                                                              '1))))
                                                                      g$ls/false$8739$14xsgv)
                                                                    (g$syntax-violation$7501$14xsgv
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8738$14xsgv))))
                                                               (g$syntax-dispatch$7392$14xsgv
                                                                 g$t$8738$14xsgv
                                                                 '(_ . any)))))
                                                           g$t$8735$14xsgv))))
                                                     (g$syntax-dispatch$7392$14xsgv
                                                       g$t$8735$14xsgv
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8733$14xsgv))))
                                           (g$syntax-dispatch$7392$14xsgv
                                             g$t$8733$14xsgv
                                             '()))))
                                       g$fields$8731$14xsgv)))))
                          g$f$8730$14xsgv)
                        g$fields$8729$14xsgv
                        '0))))
                  (g$get-mutators$8623$14xsgv
                    (case-lambda
                      ((g$foo$8708$14xsgv g$fields$8709$14xsgv)
                       (letrec* ((g$gen-name$8710$14xsgv
                                   (case-lambda
                                     ((g$x$8728$14xsgv)
                                      (g$datum->syntax$7503$14xsgv
                                        g$foo$8708$14xsgv
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7504$14xsgv
                                                g$foo$8708$14xsgv))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7504$14xsgv
                                                g$x$8728$14xsgv))
                                            '"-set!")))))))
                         ((letrec ((g$f$8711$14xsgv
                                     (case-lambda
                                       ((g$fields$8712$14xsgv)
                                        ((case-lambda
                                           ((g$t$8713$14xsgv)
                                            ((case-lambda
                                               ((g$ls/false$8714$14xsgv)
                                                (if g$ls/false$8714$14xsgv
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8714$14xsgv)
                                                  ((case-lambda
                                                     ((g$t$8715$14xsgv)
                                                      ((case-lambda
                                                         ((g$ls/false$8716$14xsgv)
                                                          (if g$ls/false$8716$14xsgv
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8717$14xsgv
                                                                   g$accessor$8718$14xsgv
                                                                   g$mutator$8719$14xsgv
                                                                   g$rest$8720$14xsgv)
                                                                 (cons
                                                                   g$mutator$8719$14xsgv
                                                                   (g$f$8711$14xsgv
                                                                     g$rest$8720$14xsgv))))
                                                              g$ls/false$8716$14xsgv)
                                                            ((case-lambda
                                                               ((g$t$8721$14xsgv)
                                                                ((case-lambda
                                                                   ((g$ls/false$8722$14xsgv)
                                                                    (if g$ls/false$8722$14xsgv
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8723$14xsgv
                                                                             g$rest$8724$14xsgv)
                                                                           (cons
                                                                             (g$gen-name$8710$14xsgv
                                                                               g$name$8723$14xsgv)
                                                                             (g$f$8711$14xsgv
                                                                               g$rest$8724$14xsgv))))
                                                                        g$ls/false$8722$14xsgv)
                                                                      ((case-lambda
                                                                         ((g$t$8725$14xsgv)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8726$14xsgv)
                                                                              (if g$ls/false$8726$14xsgv
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8727$14xsgv)
                                                                                     (g$f$8711$14xsgv
                                                                                       g$rest$8727$14xsgv)))
                                                                                  g$ls/false$8726$14xsgv)
                                                                                (g$syntax-violation$7501$14xsgv
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8725$14xsgv))))
                                                                           (g$syntax-dispatch$7392$14xsgv
                                                                             g$t$8725$14xsgv
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8721$14xsgv))))
                                                                 (g$syntax-dispatch$7392$14xsgv
                                                                   g$t$8721$14xsgv
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8715$14xsgv))))
                                                       (g$syntax-dispatch$7392$14xsgv
                                                         g$t$8715$14xsgv
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8713$14xsgv))))
                                             (g$syntax-dispatch$7392$14xsgv
                                               g$t$8713$14xsgv
                                               '()))))
                                         g$fields$8712$14xsgv)))))
                            g$f$8711$14xsgv)
                          g$fields$8709$14xsgv)))))
                  (g$get-accessors$8624$14xsgv
                    (case-lambda
                      ((g$foo$8674$14xsgv g$fields$8675$14xsgv)
                       (letrec* ((g$gen-name$8676$14xsgv
                                   (case-lambda
                                     ((g$x$8707$14xsgv)
                                      (g$datum->syntax$7503$14xsgv
                                        g$foo$8674$14xsgv
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7504$14xsgv
                                                g$foo$8674$14xsgv))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7504$14xsgv
                                                g$x$8707$14xsgv)))))))))
                         (map (case-lambda
                                ((g$field$8677$14xsgv)
                                 ((case-lambda
                                    ((g$t$8678$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8679$14xsgv)
                                         (if (if g$ls/false$8679$14xsgv
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8680$14xsgv
                                                        g$accessor$8681$14xsgv
                                                        g$mutator$8682$14xsgv)
                                                      (g$id?$7114$14xsgv
                                                        g$accessor$8681$14xsgv)))
                                                   g$ls/false$8679$14xsgv))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8683$14xsgv
                                                  g$accessor$8684$14xsgv
                                                  g$mutator$8685$14xsgv)
                                                g$accessor$8684$14xsgv))
                                             g$ls/false$8679$14xsgv)
                                           ((case-lambda
                                              ((g$t$8686$14xsgv)
                                               ((case-lambda
                                                  ((g$ls/false$8687$14xsgv)
                                                   (if (if g$ls/false$8687$14xsgv
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8688$14xsgv
                                                                  g$accessor$8689$14xsgv)
                                                                (g$id?$7114$14xsgv
                                                                  g$accessor$8689$14xsgv)))
                                                             g$ls/false$8687$14xsgv))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8690$14xsgv
                                                            g$accessor$8691$14xsgv)
                                                          g$accessor$8691$14xsgv))
                                                       g$ls/false$8687$14xsgv)
                                                     ((case-lambda
                                                        ((g$t$8692$14xsgv)
                                                         ((case-lambda
                                                            ((g$ls/false$8693$14xsgv)
                                                             (if (if g$ls/false$8693$14xsgv
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8694$14xsgv)
                                                                          (g$id?$7114$14xsgv
                                                                            g$name$8694$14xsgv)))
                                                                       g$ls/false$8693$14xsgv))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8695$14xsgv)
                                                                    (g$gen-name$8676$14xsgv
                                                                      g$name$8695$14xsgv)))
                                                                 g$ls/false$8693$14xsgv)
                                                               ((case-lambda
                                                                  ((g$t$8696$14xsgv)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8697$14xsgv)
                                                                       (if (if g$ls/false$8697$14xsgv
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8698$14xsgv)
                                                                                    (g$id?$7114$14xsgv
                                                                                      g$name$8698$14xsgv)))
                                                                                 g$ls/false$8697$14xsgv))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8699$14xsgv)
                                                                              (g$gen-name$8676$14xsgv
                                                                                g$name$8699$14xsgv)))
                                                                           g$ls/false$8697$14xsgv)
                                                                         ((case-lambda
                                                                            ((g$t$8700$14xsgv)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8701$14xsgv)
                                                                                 (if (if g$ls/false$8701$14xsgv
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8702$14xsgv)
                                                                                              (g$id?$7114$14xsgv
                                                                                                g$name$8702$14xsgv)))
                                                                                           g$ls/false$8701$14xsgv))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8703$14xsgv)
                                                                                        (g$gen-name$8676$14xsgv
                                                                                          g$name$8703$14xsgv)))
                                                                                     g$ls/false$8701$14xsgv)
                                                                                   ((case-lambda
                                                                                      ((g$t$8704$14xsgv)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8705$14xsgv)
                                                                                           (if g$ls/false$8705$14xsgv
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8706$14xsgv)
                                                                                                  (g$syntax-violation$7501$14xsgv
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8677$14xsgv)))
                                                                                               g$ls/false$8705$14xsgv)
                                                                                             (g$syntax-violation$7501$14xsgv
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8704$14xsgv))))
                                                                                        (g$syntax-dispatch$7392$14xsgv
                                                                                          g$t$8704$14xsgv
                                                                                          'any))))
                                                                                    g$t$8700$14xsgv))))
                                                                              (g$syntax-dispatch$7392$14xsgv
                                                                                g$t$8700$14xsgv
                                                                                'any))))
                                                                          g$t$8696$14xsgv))))
                                                                    (g$syntax-dispatch$7392$14xsgv
                                                                      g$t$8696$14xsgv
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8692$14xsgv))))
                                                          (g$syntax-dispatch$7392$14xsgv
                                                            g$t$8692$14xsgv
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8686$14xsgv))))
                                                (g$syntax-dispatch$7392$14xsgv
                                                  g$t$8686$14xsgv
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8678$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8678$14xsgv
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8677$14xsgv)))
                              g$fields$8675$14xsgv)))))
                  (g$enumerate$8625$14xsgv
                    (case-lambda
                      ((g$ls$8670$14xsgv)
                       ((letrec ((g$f$8671$14xsgv
                                   (case-lambda
                                     ((g$ls$8672$14xsgv g$i$8673$14xsgv)
                                      (if (null? g$ls$8672$14xsgv)
                                        '()
                                        (cons
                                          g$i$8673$14xsgv
                                          (g$f$8671$14xsgv
                                            (cdr g$ls$8672$14xsgv)
                                            (+ g$i$8673$14xsgv '1))))))))
                          g$f$8671$14xsgv)
                        g$ls$8670$14xsgv
                        '0))))
                  (g$do-define-record$8626$14xsgv
                    (case-lambda
                      ((g$namespec$8650$14xsgv g$clause*$8651$14xsgv)
                       ((case-lambda
                          ((g$foo$8652$14xsgv)
                           ((case-lambda
                              ((g$foo-rtd$8653$14xsgv)
                               ((case-lambda
                                  ((g$foo-rcd$8654$14xsgv)
                                   ((case-lambda
                                      ((g$protocol$8655$14xsgv)
                                       ((case-lambda
                                          ((g$make-foo$8656$14xsgv)
                                           ((case-lambda
                                              ((g$fields$8657$14xsgv)
                                               ((case-lambda
                                                  ((g$idx*$8658$14xsgv)
                                                   ((case-lambda
                                                      ((g$foo-x*$8659$14xsgv)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8660$14xsgv)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8661$14xsgv)
                                                               ((case-lambda
                                                                  ((g$foo?$8662$14xsgv)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8663$14xsgv)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8664$14xsgv)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8665$14xsgv)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7355$14xsgv
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8653$14xsgv
                                                                                           g$foo-rtd-code$8663$14xsgv)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8655$14xsgv
                                                                                             g$protocol-code$8665$14xsgv)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8654$14xsgv
                                                                                               g$foo-rcd-code$8664$14xsgv)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8652$14xsgv
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8653$14xsgv)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8654$14xsgv)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8662$14xsgv
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8653$14xsgv))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8656$14xsgv
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8654$14xsgv))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8666$14xsgv
                                                                                                               g$idx$8667$14xsgv)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8666$14xsgv
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8653$14xsgv
                                                                                                                 g$idx$8667$14xsgv))))
                                                                                                          g$foo-x*$8659$14xsgv
                                                                                                          g$idx*$8658$14xsgv)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8668$14xsgv
                                                                                                               g$idx$8669$14xsgv)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8668$14xsgv
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8653$14xsgv
                                                                                                                 g$idx$8669$14xsgv))))
                                                                                                          g$set-foo-x!*$8660$14xsgv
                                                                                                          g$set-foo-idx*$8661$14xsgv)))))))))))))))
                                                                            (g$get-protocol-code$8620$14xsgv
                                                                              g$clause*$8651$14xsgv))))
                                                                        (g$foo-rcd-code$8619$14xsgv
                                                                          g$clause*$8651$14xsgv
                                                                          g$foo-rtd$8653$14xsgv
                                                                          g$protocol$8655$14xsgv
                                                                          (g$parent-rcd-code$8618$14xsgv
                                                                            g$clause*$8651$14xsgv)))))
                                                                    (g$foo-rtd-code$8616$14xsgv
                                                                      g$foo$8652$14xsgv
                                                                      g$clause*$8651$14xsgv
                                                                      (g$parent-rtd-code$8617$14xsgv
                                                                        g$clause*$8651$14xsgv)))))
                                                                (g$get-record-predicate-name$8614$14xsgv
                                                                  g$namespec$8650$14xsgv))))
                                                            (g$get-mutator-indices$8622$14xsgv
                                                              g$fields$8657$14xsgv))))
                                                        (g$get-mutators$8623$14xsgv
                                                          g$foo$8652$14xsgv
                                                          g$fields$8657$14xsgv))))
                                                    (g$get-accessors$8624$14xsgv
                                                      g$foo$8652$14xsgv
                                                      g$fields$8657$14xsgv))))
                                                (g$enumerate$8625$14xsgv
                                                  g$fields$8657$14xsgv))))
                                            (g$get-fields$8621$14xsgv
                                              g$clause*$8651$14xsgv))))
                                        (g$get-record-constructor-name$8613$14xsgv
                                          g$namespec$8650$14xsgv))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8612$14xsgv
                          g$namespec$8650$14xsgv)))))
                  (g$verify-clauses$8627$14xsgv
                    (case-lambda
                      ((g$x$8632$14xsgv g$cls*$8633$14xsgv)
                       (letrec* ((g$valid-kwds$8634$14xsgv
                                   (map g$bless$7355$14xsgv
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8635$14xsgv
                                   (case-lambda
                                     ((g$x$8647$14xsgv g$ls$8648$14xsgv)
                                      (if (pair? g$ls$8648$14xsgv)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8649$14xsgv)
                                              (if g$t$8649$14xsgv
                                                g$t$8649$14xsgv
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8635$14xsgv
                                                    g$x$8647$14xsgv
                                                    (cdr g$ls$8648$14xsgv))))))
                                           (g$free-id=?$7118$14xsgv
                                             g$x$8647$14xsgv
                                             (car g$ls$8648$14xsgv))))
                                        '#f)))))
                         ((letrec ((g$f$8636$14xsgv
                                     (case-lambda
                                       ((g$cls*$8637$14xsgv g$seen*$8638$14xsgv)
                                        (if (not (null? g$cls*$8637$14xsgv))
                                          ((case-lambda
                                             ((g$t$8639$14xsgv)
                                              ((case-lambda
                                                 ((g$ls/false$8640$14xsgv)
                                                  (if g$ls/false$8640$14xsgv
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8641$14xsgv
                                                           g$rest$8642$14xsgv)
                                                         (if ((case-lambda
                                                                ((g$t$8643$14xsgv)
                                                                 (if g$t$8643$14xsgv
                                                                   g$t$8643$14xsgv
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8635$14xsgv
                                                                            g$kwd$8641$14xsgv
                                                                            g$valid-kwds$8634$14xsgv))))))
                                                              (not (g$id?$7114$14xsgv
                                                                     g$kwd$8641$14xsgv)))
                                                           (g$syntax-violation$7501$14xsgv
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8641$14xsgv)
                                                           (if (g$bound-id-member?$7121$14xsgv
                                                                 g$kwd$8641$14xsgv
                                                                 g$seen*$8638$14xsgv)
                                                             (g$syntax-violation$7501$14xsgv
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8632$14xsgv
                                                               g$kwd$8641$14xsgv)
                                                             (g$f$8636$14xsgv
                                                               (cdr g$cls*$8637$14xsgv)
                                                               (cons
                                                                 g$kwd$8641$14xsgv
                                                                 g$seen*$8638$14xsgv))))))
                                                      g$ls/false$8640$14xsgv)
                                                    ((case-lambda
                                                       ((g$t$8644$14xsgv)
                                                        ((case-lambda
                                                           ((g$ls/false$8645$14xsgv)
                                                            (if g$ls/false$8645$14xsgv
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8646$14xsgv)
                                                                   (g$syntax-violation$7501$14xsgv
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8646$14xsgv)))
                                                                g$ls/false$8645$14xsgv)
                                                              (g$syntax-violation$7501$14xsgv
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8644$14xsgv))))
                                                         (g$syntax-dispatch$7392$14xsgv
                                                           g$t$8644$14xsgv
                                                           'any))))
                                                     g$t$8639$14xsgv))))
                                               (g$syntax-dispatch$7392$14xsgv
                                                 g$t$8639$14xsgv
                                                 '(any . any)))))
                                           (car g$cls*$8637$14xsgv))
                                          (void))))))
                            g$f$8636$14xsgv)
                          g$cls*$8633$14xsgv
                          '()))))))
          ((case-lambda
             ((g$t$8628$14xsgv)
              ((case-lambda
                 ((g$ls/false$8629$14xsgv)
                  (if g$ls/false$8629$14xsgv
                    (apply
                      (case-lambda
                        ((g$namespec$8630$14xsgv g$clause*$8631$14xsgv)
                         (begin
                           (g$verify-clauses$8627$14xsgv
                             g$x$8610$14xsgv
                             g$clause*$8631$14xsgv)
                           (g$do-define-record$8626$14xsgv
                             g$namespec$8630$14xsgv
                             g$clause*$8631$14xsgv))))
                      g$ls/false$8629$14xsgv)
                    (g$syntax-violation$7501$14xsgv
                      '#f
                      '"invalid syntax"
                      g$t$8628$14xsgv))))
               (g$syntax-dispatch$7392$14xsgv
                 g$t$8628$14xsgv
                 '(_ any . each-any)))))
           g$x$8610$14xsgv)))))
   (g$define-condition-type-macro$7387$14xsgv
     g$define-condition-type-macro$10823$14xsgv
     (case-lambda
       ((g$x$8866$14xsgv)
        (letrec* ((g$mkname$8867$14xsgv
                    (case-lambda
                      ((g$name$8890$14xsgv g$suffix$8891$14xsgv)
                       (g$datum->syntax$7503$14xsgv
                         g$name$8890$14xsgv
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7504$14xsgv g$name$8890$14xsgv))
                             g$suffix$8891$14xsgv)))))))
          ((case-lambda
             ((g$t$8868$14xsgv)
              ((case-lambda
                 ((g$ls/false$8869$14xsgv)
                  (if (if g$ls/false$8869$14xsgv
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$8870$14xsgv
                                 g$name$8871$14xsgv
                                 g$super$8872$14xsgv
                                 g$constructor$8873$14xsgv
                                 g$predicate$8874$14xsgv
                                 g$field*$8875$14xsgv
                                 g$accessor*$8876$14xsgv)
                               (if (g$id?$7114$14xsgv g$name$8871$14xsgv)
                                 (if (g$id?$7114$14xsgv g$super$8872$14xsgv)
                                   (if (g$id?$7114$14xsgv
                                         g$constructor$8873$14xsgv)
                                     (if (g$id?$7114$14xsgv
                                           g$predicate$8874$14xsgv)
                                       (if (g$for-all$5356$14xsgv
                                             g$id?$7114$14xsgv
                                             g$field*$8875$14xsgv)
                                         (begin
                                           '#f
                                           (g$for-all$5356$14xsgv
                                             g$id?$7114$14xsgv
                                             g$accessor*$8876$14xsgv))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$8869$14xsgv))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$8877$14xsgv
                           g$name$8878$14xsgv
                           g$super$8879$14xsgv
                           g$constructor$8880$14xsgv
                           g$predicate$8881$14xsgv
                           g$field*$8882$14xsgv
                           g$accessor*$8883$14xsgv)
                         ((case-lambda
                            ((g$aux-accessor*$8884$14xsgv)
                             (g$bless$7355$14xsgv
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$8878$14xsgv
                                         g$constructor$8880$14xsgv
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$8879$14xsgv)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$8885$14xsgv
                                                       g$aux$8886$14xsgv)
                                                     (list
                                                       'immutable
                                                       g$field$8885$14xsgv
                                                       g$aux$8886$14xsgv)))
                                                  g$field*$8882$14xsgv
                                                  g$aux-accessor*$8884$14xsgv))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$8881$14xsgv
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$8878$14xsgv)))
                                     (map (case-lambda
                                            ((g$accessor$8887$14xsgv
                                               g$aux$8888$14xsgv)
                                             (list
                                               'define
                                               g$accessor$8887$14xsgv
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$8878$14xsgv)
                                                 g$aux$8888$14xsgv))))
                                          g$accessor*$8883$14xsgv
                                          g$aux-accessor*$8884$14xsgv)))))))
                          (map (case-lambda ((g$x$8889$14xsgv) (gensym)))
                               g$accessor*$8883$14xsgv))))
                      g$ls/false$8869$14xsgv)
                    (g$syntax-violation$7501$14xsgv
                      '#f
                      '"invalid syntax"
                      g$t$8868$14xsgv))))
               (g$syntax-dispatch$7392$14xsgv
                 g$t$8868$14xsgv
                 '(any any any any any . #(each (any any)))))))
           g$x$8866$14xsgv)))))
   (g$incorrect-usage-macro$7388$14xsgv
     g$incorrect-usage-macro$10824$14xsgv
     (case-lambda
       ((g$e$8892$14xsgv)
        (g$syntax-violation$7501$14xsgv
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$8892$14xsgv))))
   (g$parameterize-macro$7389$14xsgv
     g$parameterize-macro$10825$14xsgv
     (case-lambda
       ((g$e$8893$14xsgv)
        ((case-lambda
           ((g$t$8894$14xsgv)
            ((case-lambda
               ((g$ls/false$8895$14xsgv)
                (if g$ls/false$8895$14xsgv
                  (apply
                    (case-lambda
                      ((g$b$8896$14xsgv g$b*$8897$14xsgv)
                       (g$bless$7355$14xsgv
                         (cons
                           'begin
                           (cons g$b$8896$14xsgv g$b*$8897$14xsgv)))))
                    g$ls/false$8895$14xsgv)
                  ((case-lambda
                     ((g$t$8898$14xsgv)
                      ((case-lambda
                         ((g$ls/false$8899$14xsgv)
                          (if g$ls/false$8899$14xsgv
                            (apply
                              (case-lambda
                                ((g$olhs*$8900$14xsgv
                                   g$orhs*$8901$14xsgv
                                   g$b$8902$14xsgv
                                   g$b*$8903$14xsgv)
                                 ((case-lambda
                                    ((g$lhs*$8904$14xsgv g$rhs*$8905$14xsgv)
                                     (g$bless$7355$14xsgv
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$8904$14xsgv
                                             g$rhs*$8905$14xsgv)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$8906$14xsgv
                                                               g$rhs$8907$14xsgv)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$8906$14xsgv)))
                                                               (list
                                                                 g$lhs$8906$14xsgv
                                                                 g$rhs$8907$14xsgv)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$8907$14xsgv
                                                                   '(t))))))
                                                          g$lhs*$8904$14xsgv
                                                          g$rhs*$8905$14xsgv)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$8902$14xsgv
                                                         g$b*$8903$14xsgv)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$8900$14xsgv
                                           g$orhs*$8901$14xsgv)))))
                                  (g$generate-temporaries$7491$14xsgv
                                    g$olhs*$8900$14xsgv)
                                  (g$generate-temporaries$7491$14xsgv
                                    g$orhs*$8901$14xsgv))))
                              g$ls/false$8899$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$8898$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$8898$14xsgv
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$8894$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$8894$14xsgv
               '(_ () any . each-any)))))
         g$e$8893$14xsgv))))
   (g$foreign-call-transformer$7390$14xsgv
     g$foreign-call-transformer$10826$14xsgv
     (case-lambda
       ((g$e$8908$14xsgv g$r$8909$14xsgv g$mr$8910$14xsgv)
        ((case-lambda
           ((g$t$8911$14xsgv)
            ((case-lambda
               ((g$ls/false$8912$14xsgv)
                (if g$ls/false$8912$14xsgv
                  (apply
                    (case-lambda
                      ((g$name$8913$14xsgv g$arg*$8914$14xsgv)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7410$14xsgv
                             g$name$8913$14xsgv
                             g$r$8909$14xsgv
                             g$mr$8910$14xsgv)
                           (g$chi-expr*$7408$14xsgv
                             g$arg*$8914$14xsgv
                             g$r$8909$14xsgv
                             g$mr$8910$14xsgv)))))
                    g$ls/false$8912$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$8911$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$8911$14xsgv
               '(_ any . each-any)))))
         g$e$8908$14xsgv))))
   (g$convert-pattern$7391$14xsgv
     g$convert-pattern$10827$14xsgv
     (case-lambda
       ((g$pattern$8915$14xsgv g$keys$8916$14xsgv)
        (letrec* ((g$cvt*$8917$14xsgv
                    (case-lambda
                      ((g$p*$8997$14xsgv g$n$8998$14xsgv g$ids$8999$14xsgv)
                       (if (null? g$p*$8997$14xsgv)
                         (values '() g$ids$8999$14xsgv)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$8917$14xsgv
                                (cdr g$p*$8997$14xsgv)
                                g$n$8998$14xsgv
                                g$ids$8999$14xsgv)))
                           (case-lambda
                             ((g$y$9002$14xsgv g$ids$9003$14xsgv)
                              ((case-lambda
                                 ((g$ids$9004$14xsgv g$y$9005$14xsgv)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$8918$14xsgv
                                         (car g$p*$8997$14xsgv)
                                         g$n$8998$14xsgv
                                         g$ids$9004$14xsgv)))
                                    (case-lambda
                                      ((g$x$9008$14xsgv g$ids$9009$14xsgv)
                                       ((case-lambda
                                          ((g$ids$9010$14xsgv g$x$9011$14xsgv)
                                           (values
                                             (cons
                                               g$x$9011$14xsgv
                                               g$y$9005$14xsgv)
                                             g$ids$9010$14xsgv)))
                                        g$ids$9009$14xsgv
                                        g$x$9008$14xsgv))))))
                               g$ids$9003$14xsgv
                               g$y$9002$14xsgv))))))))
                  (g$cvt$8918$14xsgv
                    (case-lambda
                      ((g$p$8919$14xsgv g$n$8920$14xsgv g$ids$8921$14xsgv)
                       ((case-lambda
                          ((g$t$8922$14xsgv)
                           ((case-lambda
                              ((g$ls/false$8923$14xsgv)
                               (if (if g$ls/false$8923$14xsgv
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$8924$14xsgv)
                                            (g$id?$7114$14xsgv
                                              g$id$8924$14xsgv)))
                                         g$ls/false$8923$14xsgv))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$8925$14xsgv)
                                      (if (g$bound-id-member?$7121$14xsgv
                                            g$p$8919$14xsgv
                                            g$keys$8916$14xsgv)
                                        (values
                                          (vector 'free-id g$p$8919$14xsgv)
                                          g$ids$8921$14xsgv)
                                        (if (g$free-id=?$7118$14xsgv
                                              g$p$8919$14xsgv
                                              (g$scheme-stx$7335$14xsgv '_))
                                          (values '_ g$ids$8921$14xsgv)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$8919$14xsgv
                                                g$n$8920$14xsgv)
                                              g$ids$8921$14xsgv))))))
                                   g$ls/false$8923$14xsgv)
                                 ((case-lambda
                                    ((g$t$8926$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$8927$14xsgv)
                                         (if (if g$ls/false$8927$14xsgv
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8928$14xsgv
                                                        g$dots$8929$14xsgv)
                                                      (g$ellipsis?$7393$14xsgv
                                                        g$dots$8929$14xsgv)))
                                                   g$ls/false$8927$14xsgv))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$8930$14xsgv
                                                  g$dots$8931$14xsgv)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$8918$14xsgv
                                                       g$p$8930$14xsgv
                                                       (+ g$n$8920$14xsgv '1)
                                                       g$ids$8921$14xsgv)))
                                                  (case-lambda
                                                    ((g$p$8934$14xsgv
                                                       g$ids$8935$14xsgv)
                                                     ((case-lambda
                                                        ((g$ids$8936$14xsgv
                                                           g$p$8937$14xsgv)
                                                         (values
                                                           (if (eq? g$p$8937$14xsgv
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$8937$14xsgv))
                                                           g$ids$8936$14xsgv)))
                                                      g$ids$8935$14xsgv
                                                      g$p$8934$14xsgv))))))
                                             g$ls/false$8927$14xsgv)
                                           ((case-lambda
                                              ((g$t$8938$14xsgv)
                                               ((case-lambda
                                                  ((g$ls/false$8939$14xsgv)
                                                   (if (if g$ls/false$8939$14xsgv
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$8940$14xsgv
                                                                  g$dots$8941$14xsgv
                                                                  g$ys$8942$14xsgv
                                                                  g$z$8943$14xsgv)
                                                                (g$ellipsis?$7393$14xsgv
                                                                  g$dots$8941$14xsgv)))
                                                             g$ls/false$8939$14xsgv))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$8944$14xsgv
                                                            g$dots$8945$14xsgv
                                                            g$ys$8946$14xsgv
                                                            g$z$8947$14xsgv)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$8918$14xsgv
                                                                 g$z$8947$14xsgv
                                                                 g$n$8920$14xsgv
                                                                 g$ids$8921$14xsgv)))
                                                            (case-lambda
                                                              ((g$z$8950$14xsgv
                                                                 g$ids$8951$14xsgv)
                                                               ((case-lambda
                                                                  ((g$ids$8952$14xsgv
                                                                     g$z$8953$14xsgv)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$8917$14xsgv
                                                                          g$ys$8946$14xsgv
                                                                          g$n$8920$14xsgv
                                                                          g$ids$8952$14xsgv)))
                                                                     (case-lambda
                                                                       ((g$ys$8956$14xsgv
                                                                          g$ids$8957$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$ids$8958$14xsgv
                                                                              g$ys$8959$14xsgv)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$8918$14xsgv
                                                                                   g$x$8944$14xsgv
                                                                                   (+ g$n$8920$14xsgv
                                                                                      '1)
                                                                                   g$ids$8958$14xsgv)))
                                                                              (case-lambda
                                                                                ((g$x$8962$14xsgv
                                                                                   g$ids$8963$14xsgv)
                                                                                 ((case-lambda
                                                                                    ((g$ids$8964$14xsgv
                                                                                       g$x$8965$14xsgv)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$8965$14xsgv
                                                                                         (reverse
                                                                                           g$ys$8959$14xsgv)
                                                                                         g$z$8953$14xsgv)
                                                                                       g$ids$8964$14xsgv)))
                                                                                  g$ids$8963$14xsgv
                                                                                  g$x$8962$14xsgv))))))
                                                                         g$ids$8957$14xsgv
                                                                         g$ys$8956$14xsgv))))))
                                                                g$ids$8951$14xsgv
                                                                g$z$8950$14xsgv))))))
                                                       g$ls/false$8939$14xsgv)
                                                     ((case-lambda
                                                        ((g$t$8966$14xsgv)
                                                         ((case-lambda
                                                            ((g$ls/false$8967$14xsgv)
                                                             (if g$ls/false$8967$14xsgv
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$8968$14xsgv
                                                                      g$y$8969$14xsgv)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$8918$14xsgv
                                                                           g$y$8969$14xsgv
                                                                           g$n$8920$14xsgv
                                                                           g$ids$8921$14xsgv)))
                                                                      (case-lambda
                                                                        ((g$y$8972$14xsgv
                                                                           g$ids$8973$14xsgv)
                                                                         ((case-lambda
                                                                            ((g$ids$8974$14xsgv
                                                                               g$y$8975$14xsgv)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$8918$14xsgv
                                                                                    g$x$8968$14xsgv
                                                                                    g$n$8920$14xsgv
                                                                                    g$ids$8974$14xsgv)))
                                                                               (case-lambda
                                                                                 ((g$x$8978$14xsgv
                                                                                    g$ids$8979$14xsgv)
                                                                                  ((case-lambda
                                                                                     ((g$ids$8980$14xsgv
                                                                                        g$x$8981$14xsgv)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$8981$14xsgv
                                                                                          g$y$8975$14xsgv)
                                                                                        g$ids$8980$14xsgv)))
                                                                                   g$ids$8979$14xsgv
                                                                                   g$x$8978$14xsgv))))))
                                                                          g$ids$8973$14xsgv
                                                                          g$y$8972$14xsgv))))))
                                                                 g$ls/false$8967$14xsgv)
                                                               ((case-lambda
                                                                  ((g$t$8982$14xsgv)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8983$14xsgv)
                                                                       (if g$ls/false$8983$14xsgv
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$8921$14xsgv)))
                                                                           g$ls/false$8983$14xsgv)
                                                                         ((case-lambda
                                                                            ((g$t$8984$14xsgv)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8985$14xsgv)
                                                                                 (if (if g$ls/false$8985$14xsgv
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$8986$14xsgv)
                                                                                              (not (g$stx?$7086$14xsgv
                                                                                                     g$p$8986$14xsgv))))
                                                                                           g$ls/false$8985$14xsgv))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$8987$14xsgv)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$8918$14xsgv
                                                                                               g$p$8987$14xsgv
                                                                                               g$n$8920$14xsgv
                                                                                               g$ids$8921$14xsgv)))
                                                                                          (case-lambda
                                                                                            ((g$p$8990$14xsgv
                                                                                               g$ids$8991$14xsgv)
                                                                                             ((case-lambda
                                                                                                ((g$ids$8992$14xsgv
                                                                                                   g$p$8993$14xsgv)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$8993$14xsgv)
                                                                                                   g$ids$8992$14xsgv)))
                                                                                              g$ids$8991$14xsgv
                                                                                              g$p$8990$14xsgv))))))
                                                                                     g$ls/false$8985$14xsgv)
                                                                                   ((case-lambda
                                                                                      ((g$t$8994$14xsgv)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8995$14xsgv)
                                                                                           (if g$ls/false$8995$14xsgv
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$8996$14xsgv)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7125$14xsgv
                                                                                                        g$datum$8996$14xsgv))
                                                                                                    g$ids$8921$14xsgv)))
                                                                                               g$ls/false$8995$14xsgv)
                                                                                             (g$syntax-violation$7501$14xsgv
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8994$14xsgv))))
                                                                                        (g$syntax-dispatch$7392$14xsgv
                                                                                          g$t$8994$14xsgv
                                                                                          'any))))
                                                                                    g$t$8984$14xsgv))))
                                                                              (g$syntax-dispatch$7392$14xsgv
                                                                                g$t$8984$14xsgv
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$8982$14xsgv))))
                                                                    (g$syntax-dispatch$7392$14xsgv
                                                                      g$t$8982$14xsgv
                                                                      '()))))
                                                                g$t$8966$14xsgv))))
                                                          (g$syntax-dispatch$7392$14xsgv
                                                            g$t$8966$14xsgv
                                                            '(any . any)))))
                                                      g$t$8938$14xsgv))))
                                                (g$syntax-dispatch$7392$14xsgv
                                                  g$t$8938$14xsgv
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$8926$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$8926$14xsgv
                                        '(any any)))))
                                  g$t$8922$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$8922$14xsgv
                              'any))))
                        g$p$8919$14xsgv)))))
          (g$cvt$8918$14xsgv g$pattern$8915$14xsgv '0 '())))))
   (g$syntax-dispatch$7392$14xsgv
     g$syntax-dispatch$10828$14xsgv
     (case-lambda
       ((g$e$9012$14xsgv g$p$9013$14xsgv)
        (letrec* ((g$stx^$9014$14xsgv
                    (case-lambda
                      ((g$e$9122$14xsgv
                         g$m*$9123$14xsgv
                         g$s*$9124$14xsgv
                         g$ae*$9125$14xsgv)
                       (if (if (null? g$m*$9123$14xsgv)
                             (if (null? g$s*$9124$14xsgv)
                               (begin '#f (null? g$ae*$9125$14xsgv))
                               '#f)
                             '#f)
                         g$e$9122$14xsgv
                         (g$mkstx$7102$14xsgv
                           g$e$9122$14xsgv
                           g$m*$9123$14xsgv
                           g$s*$9124$14xsgv
                           g$ae*$9125$14xsgv)))))
                  (g$match-each$9015$14xsgv
                    (case-lambda
                      ((g$e$9106$14xsgv
                         g$p$9107$14xsgv
                         g$m*$9108$14xsgv
                         g$s*$9109$14xsgv
                         g$ae*$9110$14xsgv)
                       (if (pair? g$e$9106$14xsgv)
                         ((case-lambda
                            ((g$first$9111$14xsgv)
                             (if g$first$9111$14xsgv
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9112$14xsgv)
                                     (if g$rest$9112$14xsgv
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9111$14xsgv
                                           g$rest$9112$14xsgv))
                                       '#f)))
                                  (g$match-each$9015$14xsgv
                                    (cdr g$e$9106$14xsgv)
                                    g$p$9107$14xsgv
                                    g$m*$9108$14xsgv
                                    g$s*$9109$14xsgv
                                    g$ae*$9110$14xsgv)))
                               '#f)))
                          (g$match$9021$14xsgv
                            (car g$e$9106$14xsgv)
                            g$p$9107$14xsgv
                            g$m*$9108$14xsgv
                            g$s*$9109$14xsgv
                            g$ae*$9110$14xsgv
                            '()))
                         (if (null? g$e$9106$14xsgv)
                           '()
                           (if (g$stx?$7086$14xsgv g$e$9106$14xsgv)
                             (if (not (g$top-marked?$7057$14xsgv
                                        g$m*$9108$14xsgv))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7101$14xsgv
                                        g$m*$9108$14xsgv
                                        g$s*$9109$14xsgv
                                        g$ae*$9110$14xsgv
                                        g$e$9106$14xsgv)))
                                   (case-lambda
                                     ((g$m*$9116$14xsgv
                                        g$s*$9117$14xsgv
                                        g$ae*$9118$14xsgv)
                                      ((case-lambda
                                         ((g$ae*$9119$14xsgv
                                            g$s*$9120$14xsgv
                                            g$m*$9121$14xsgv)
                                          (g$match-each$9015$14xsgv
                                            (g$stx-expr$7088$14xsgv
                                              g$e$9106$14xsgv)
                                            g$p$9107$14xsgv
                                            g$m*$9121$14xsgv
                                            g$s*$9120$14xsgv
                                            g$ae*$9119$14xsgv)))
                                       g$ae*$9118$14xsgv
                                       g$s*$9117$14xsgv
                                       g$m*$9116$14xsgv)))))
                               '#f)
                             (if (annotation? g$e$9106$14xsgv)
                               (g$match-each$9015$14xsgv
                                 (annotation-expression g$e$9106$14xsgv)
                                 g$p$9107$14xsgv
                                 g$m*$9108$14xsgv
                                 g$s*$9109$14xsgv
                                 g$ae*$9110$14xsgv)
                               '#f)))))))
                  (g$match-each+$9016$14xsgv
                    (case-lambda
                      ((g$e$9074$14xsgv
                         g$x-pat$9075$14xsgv
                         g$y-pat$9076$14xsgv
                         g$z-pat$9077$14xsgv
                         g$m*$9078$14xsgv
                         g$s*$9079$14xsgv
                         g$ae*$9080$14xsgv
                         g$r$9081$14xsgv)
                       ((letrec ((g$f$9082$14xsgv
                                   (case-lambda
                                     ((g$e$9083$14xsgv
                                        g$m*$9084$14xsgv
                                        g$s*$9085$14xsgv
                                        g$ae*$9086$14xsgv)
                                      (if (pair? g$e$9083$14xsgv)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9082$14xsgv
                                               (cdr g$e$9083$14xsgv)
                                               g$m*$9084$14xsgv
                                               g$s*$9085$14xsgv
                                               g$ae*$9086$14xsgv)))
                                          (case-lambda
                                            ((g$xr*$9090$14xsgv
                                               g$y-pat$9091$14xsgv
                                               g$r$9092$14xsgv)
                                             ((case-lambda
                                                ((g$r$9093$14xsgv
                                                   g$y-pat$9094$14xsgv
                                                   g$xr*$9095$14xsgv)
                                                 (if g$r$9093$14xsgv
                                                   (if (null?
                                                         g$y-pat$9094$14xsgv)
                                                     ((case-lambda
                                                        ((g$xr$9096$14xsgv)
                                                         (if g$xr$9096$14xsgv
                                                           (values
                                                             (cons
                                                               g$xr$9096$14xsgv
                                                               g$xr*$9095$14xsgv)
                                                             g$y-pat$9094$14xsgv
                                                             g$r$9093$14xsgv)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9021$14xsgv
                                                        (car g$e$9083$14xsgv)
                                                        g$x-pat$9075$14xsgv
                                                        g$m*$9084$14xsgv
                                                        g$s*$9085$14xsgv
                                                        g$ae*$9086$14xsgv
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9094$14xsgv)
                                                       (g$match$9021$14xsgv
                                                         (car g$e$9083$14xsgv)
                                                         (car g$y-pat$9094$14xsgv)
                                                         g$m*$9084$14xsgv
                                                         g$s*$9085$14xsgv
                                                         g$ae*$9086$14xsgv
                                                         g$r$9093$14xsgv)))
                                                   (values '#f '#f '#f))))
                                              g$r$9092$14xsgv
                                              g$y-pat$9091$14xsgv
                                              g$xr*$9090$14xsgv))))
                                        (if (g$stx?$7086$14xsgv g$e$9083$14xsgv)
                                          (if (g$top-marked?$7057$14xsgv
                                                g$m*$9084$14xsgv)
                                            (values
                                              '()
                                              g$y-pat$9076$14xsgv
                                              (g$match$9021$14xsgv
                                                g$e$9083$14xsgv
                                                g$z-pat$9077$14xsgv
                                                g$m*$9084$14xsgv
                                                g$s*$9085$14xsgv
                                                g$ae*$9086$14xsgv
                                                g$r$9081$14xsgv))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7101$14xsgv
                                                   g$m*$9084$14xsgv
                                                   g$s*$9085$14xsgv
                                                   g$ae*$9086$14xsgv
                                                   g$e$9083$14xsgv)))
                                              (case-lambda
                                                ((g$m*$9100$14xsgv
                                                   g$s*$9101$14xsgv
                                                   g$ae*$9102$14xsgv)
                                                 ((case-lambda
                                                    ((g$ae*$9103$14xsgv
                                                       g$s*$9104$14xsgv
                                                       g$m*$9105$14xsgv)
                                                     (g$f$9082$14xsgv
                                                       (g$stx-expr$7088$14xsgv
                                                         g$e$9083$14xsgv)
                                                       g$m*$9105$14xsgv
                                                       g$s*$9104$14xsgv
                                                       g$ae*$9103$14xsgv)))
                                                  g$ae*$9102$14xsgv
                                                  g$s*$9101$14xsgv
                                                  g$m*$9100$14xsgv)))))
                                          (if (annotation? g$e$9083$14xsgv)
                                            (g$f$9082$14xsgv
                                              (annotation-expression
                                                g$e$9083$14xsgv)
                                              g$m*$9084$14xsgv
                                              g$s*$9085$14xsgv
                                              g$ae*$9086$14xsgv)
                                            (values
                                              '()
                                              g$y-pat$9076$14xsgv
                                              (g$match$9021$14xsgv
                                                g$e$9083$14xsgv
                                                g$z-pat$9077$14xsgv
                                                g$m*$9084$14xsgv
                                                g$s*$9085$14xsgv
                                                g$ae*$9086$14xsgv
                                                g$r$9081$14xsgv)))))))))
                          g$f$9082$14xsgv)
                        g$e$9074$14xsgv
                        g$m*$9078$14xsgv
                        g$s*$9079$14xsgv
                        g$ae*$9080$14xsgv))))
                  (g$match-each-any$9017$14xsgv
                    (case-lambda
                      ((g$e$9060$14xsgv
                         g$m*$9061$14xsgv
                         g$s*$9062$14xsgv
                         g$ae*$9063$14xsgv)
                       (if (pair? g$e$9060$14xsgv)
                         ((case-lambda
                            ((g$l$9064$14xsgv)
                             (if g$l$9064$14xsgv
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9014$14xsgv
                                     (car g$e$9060$14xsgv)
                                     g$m*$9061$14xsgv
                                     g$s*$9062$14xsgv
                                     g$ae*$9063$14xsgv)
                                   g$l$9064$14xsgv))
                               '#f)))
                          (g$match-each-any$9017$14xsgv
                            (cdr g$e$9060$14xsgv)
                            g$m*$9061$14xsgv
                            g$s*$9062$14xsgv
                            g$ae*$9063$14xsgv))
                         (if (null? g$e$9060$14xsgv)
                           '()
                           (if (g$stx?$7086$14xsgv g$e$9060$14xsgv)
                             (if (not (g$top-marked?$7057$14xsgv
                                        g$m*$9061$14xsgv))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7101$14xsgv
                                        g$m*$9061$14xsgv
                                        g$s*$9062$14xsgv
                                        g$ae*$9063$14xsgv
                                        g$e$9060$14xsgv)))
                                   (case-lambda
                                     ((g$m*$9068$14xsgv
                                        g$s*$9069$14xsgv
                                        g$ae*$9070$14xsgv)
                                      ((case-lambda
                                         ((g$ae*$9071$14xsgv
                                            g$s*$9072$14xsgv
                                            g$m*$9073$14xsgv)
                                          (g$match-each-any$9017$14xsgv
                                            (g$stx-expr$7088$14xsgv
                                              g$e$9060$14xsgv)
                                            g$m*$9073$14xsgv
                                            g$s*$9072$14xsgv
                                            g$ae*$9071$14xsgv)))
                                       g$ae*$9070$14xsgv
                                       g$s*$9069$14xsgv
                                       g$m*$9068$14xsgv)))))
                               '#f)
                             (if (annotation? g$e$9060$14xsgv)
                               (g$match-each-any$9017$14xsgv
                                 (annotation-expression g$e$9060$14xsgv)
                                 g$m*$9061$14xsgv
                                 g$s*$9062$14xsgv
                                 g$ae*$9063$14xsgv)
                               '#f)))))))
                  (g$match-empty$9018$14xsgv
                    (case-lambda
                      ((g$p$9057$14xsgv g$r$9058$14xsgv)
                       (if (null? g$p$9057$14xsgv)
                         g$r$9058$14xsgv
                         (if (eq? g$p$9057$14xsgv '_)
                           g$r$9058$14xsgv
                           (if (eq? g$p$9057$14xsgv 'any)
                             (cons '() g$r$9058$14xsgv)
                             (if (pair? g$p$9057$14xsgv)
                               (g$match-empty$9018$14xsgv
                                 (car g$p$9057$14xsgv)
                                 (g$match-empty$9018$14xsgv
                                   (cdr g$p$9057$14xsgv)
                                   g$r$9058$14xsgv))
                               (if (eq? g$p$9057$14xsgv 'each-any)
                                 (cons '() g$r$9058$14xsgv)
                                 ((case-lambda
                                    ((g$t$9059$14xsgv)
                                     (if (memv g$t$9059$14xsgv '(each))
                                       (g$match-empty$9018$14xsgv
                                         (vector-ref g$p$9057$14xsgv '1)
                                         g$r$9058$14xsgv)
                                       (if (memv g$t$9059$14xsgv '(each+))
                                         (g$match-empty$9018$14xsgv
                                           (vector-ref g$p$9057$14xsgv '1)
                                           (g$match-empty$9018$14xsgv
                                             (reverse
                                               (vector-ref g$p$9057$14xsgv '2))
                                             (g$match-empty$9018$14xsgv
                                               (vector-ref g$p$9057$14xsgv '3)
                                               g$r$9058$14xsgv)))
                                         (if (memv
                                               g$t$9059$14xsgv
                                               '(free-id atom))
                                           g$r$9058$14xsgv
                                           (if (memv
                                                 g$t$9059$14xsgv
                                                 '(scheme-id atom))
                                             g$r$9058$14xsgv
                                             (if (memv
                                                   g$t$9059$14xsgv
                                                   '(vector))
                                               (g$match-empty$9018$14xsgv
                                                 (vector-ref g$p$9057$14xsgv '1)
                                                 g$r$9058$14xsgv)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9057$14xsgv))))))))
                                  (vector-ref g$p$9057$14xsgv '0))))))))))
                  (g$combine$9019$14xsgv
                    (case-lambda
                      ((g$r*$9055$14xsgv g$r$9056$14xsgv)
                       (if (null? (car g$r*$9055$14xsgv))
                         g$r$9056$14xsgv
                         (cons
                           (map car g$r*$9055$14xsgv)
                           (g$combine$9019$14xsgv
                             (map cdr g$r*$9055$14xsgv)
                             g$r$9056$14xsgv))))))
                  (g$match*$9020$14xsgv
                    (case-lambda
                      ((g$e$9037$14xsgv
                         g$p$9038$14xsgv
                         g$m*$9039$14xsgv
                         g$s*$9040$14xsgv
                         g$ae*$9041$14xsgv
                         g$r$9042$14xsgv)
                       (if (null? g$p$9038$14xsgv)
                         (if (null? g$e$9037$14xsgv)
                           (begin '#f g$r$9042$14xsgv)
                           '#f)
                         (if (pair? g$p$9038$14xsgv)
                           (if (pair? g$e$9037$14xsgv)
                             (begin
                               '#f
                               (g$match$9021$14xsgv
                                 (car g$e$9037$14xsgv)
                                 (car g$p$9038$14xsgv)
                                 g$m*$9039$14xsgv
                                 g$s*$9040$14xsgv
                                 g$ae*$9041$14xsgv
                                 (g$match$9021$14xsgv
                                   (cdr g$e$9037$14xsgv)
                                   (cdr g$p$9038$14xsgv)
                                   g$m*$9039$14xsgv
                                   g$s*$9040$14xsgv
                                   g$ae*$9041$14xsgv
                                   g$r$9042$14xsgv)))
                             '#f)
                           (if (eq? g$p$9038$14xsgv 'each-any)
                             ((case-lambda
                                ((g$l$9043$14xsgv)
                                 (if g$l$9043$14xsgv
                                   (begin
                                     '#f
                                     (cons g$l$9043$14xsgv g$r$9042$14xsgv))
                                   '#f)))
                              (g$match-each-any$9017$14xsgv
                                g$e$9037$14xsgv
                                g$m*$9039$14xsgv
                                g$s*$9040$14xsgv
                                g$ae*$9041$14xsgv))
                             ((case-lambda
                                ((g$t$9044$14xsgv)
                                 (if (memv g$t$9044$14xsgv '(each))
                                   (if (null? g$e$9037$14xsgv)
                                     (g$match-empty$9018$14xsgv
                                       (vector-ref g$p$9038$14xsgv '1)
                                       g$r$9042$14xsgv)
                                     ((case-lambda
                                        ((g$r*$9045$14xsgv)
                                         (if g$r*$9045$14xsgv
                                           (begin
                                             '#f
                                             (g$combine$9019$14xsgv
                                               g$r*$9045$14xsgv
                                               g$r$9042$14xsgv))
                                           '#f)))
                                      (g$match-each$9015$14xsgv
                                        g$e$9037$14xsgv
                                        (vector-ref g$p$9038$14xsgv '1)
                                        g$m*$9039$14xsgv
                                        g$s*$9040$14xsgv
                                        g$ae*$9041$14xsgv)))
                                   (if (memv g$t$9044$14xsgv '(free-id))
                                     (if (symbol? g$e$9037$14xsgv)
                                       (if (g$top-marked?$7057$14xsgv
                                             g$m*$9039$14xsgv)
                                         (if (g$free-id=?$7118$14xsgv
                                               (g$stx^$9014$14xsgv
                                                 g$e$9037$14xsgv
                                                 g$m*$9039$14xsgv
                                                 g$s*$9040$14xsgv
                                                 g$ae*$9041$14xsgv)
                                               (vector-ref g$p$9038$14xsgv '1))
                                           (begin '#f g$r$9042$14xsgv)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (memv g$t$9044$14xsgv '(scheme-id))
                                       (if (symbol? g$e$9037$14xsgv)
                                         (if (g$top-marked?$7057$14xsgv
                                               g$m*$9039$14xsgv)
                                           (if (g$free-id=?$7118$14xsgv
                                                 (g$stx^$9014$14xsgv
                                                   g$e$9037$14xsgv
                                                   g$m*$9039$14xsgv
                                                   g$s*$9040$14xsgv
                                                   g$ae*$9041$14xsgv)
                                                 (g$scheme-stx$7335$14xsgv
                                                   (vector-ref
                                                     g$p$9038$14xsgv
                                                     '1)))
                                             (begin '#f g$r$9042$14xsgv)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (memv g$t$9044$14xsgv '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9016$14xsgv
                                                g$e$9037$14xsgv
                                                (vector-ref g$p$9038$14xsgv '1)
                                                (vector-ref g$p$9038$14xsgv '2)
                                                (vector-ref g$p$9038$14xsgv '3)
                                                g$m*$9039$14xsgv
                                                g$s*$9040$14xsgv
                                                g$ae*$9041$14xsgv
                                                g$r$9042$14xsgv)))
                                           (case-lambda
                                             ((g$xr*$9049$14xsgv
                                                g$y-pat$9050$14xsgv
                                                g$r$9051$14xsgv)
                                              ((case-lambda
                                                 ((g$r$9052$14xsgv
                                                    g$y-pat$9053$14xsgv
                                                    g$xr*$9054$14xsgv)
                                                  (if g$r$9052$14xsgv
                                                    (if (null?
                                                          g$y-pat$9053$14xsgv)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9054$14xsgv)
                                                          (g$match-empty$9018$14xsgv
                                                            (vector-ref
                                                              g$p$9038$14xsgv
                                                              '1)
                                                            g$r$9052$14xsgv)
                                                          (g$combine$9019$14xsgv
                                                            g$xr*$9054$14xsgv
                                                            g$r$9052$14xsgv)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9051$14xsgv
                                               g$y-pat$9050$14xsgv
                                               g$xr*$9049$14xsgv))))
                                         (if (memv g$t$9044$14xsgv '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9038$14xsgv '1)
                                                 (g$strip$7124$14xsgv
                                                   g$e$9037$14xsgv
                                                   g$m*$9039$14xsgv))
                                             (begin '#f g$r$9042$14xsgv)
                                             '#f)
                                           (if (memv g$t$9044$14xsgv '(vector))
                                             (if (vector? g$e$9037$14xsgv)
                                               (begin
                                                 '#f
                                                 (g$match$9021$14xsgv
                                                   (vector->list
                                                     g$e$9037$14xsgv)
                                                   (vector-ref
                                                     g$p$9038$14xsgv
                                                     '1)
                                                   g$m*$9039$14xsgv
                                                   g$s*$9040$14xsgv
                                                   g$ae*$9041$14xsgv
                                                   g$r$9042$14xsgv))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9038$14xsgv)))))))))
                              (vector-ref g$p$9038$14xsgv '0))))))))
                  (g$match$9021$14xsgv
                    (case-lambda
                      ((g$e$9022$14xsgv
                         g$p$9023$14xsgv
                         g$m*$9024$14xsgv
                         g$s*$9025$14xsgv
                         g$ae*$9026$14xsgv
                         g$r$9027$14xsgv)
                       (if (not g$r$9027$14xsgv)
                         '#f
                         (if (eq? g$p$9023$14xsgv '_)
                           g$r$9027$14xsgv
                           (if (eq? g$p$9023$14xsgv 'any)
                             (cons
                               (g$stx^$9014$14xsgv
                                 g$e$9022$14xsgv
                                 g$m*$9024$14xsgv
                                 g$s*$9025$14xsgv
                                 g$ae*$9026$14xsgv)
                               g$r$9027$14xsgv)
                             (if (g$stx?$7086$14xsgv g$e$9022$14xsgv)
                               (if (not (g$top-marked?$7057$14xsgv
                                          g$m*$9024$14xsgv))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7101$14xsgv
                                          g$m*$9024$14xsgv
                                          g$s*$9025$14xsgv
                                          g$ae*$9026$14xsgv
                                          g$e$9022$14xsgv)))
                                     (case-lambda
                                       ((g$m*$9031$14xsgv
                                          g$s*$9032$14xsgv
                                          g$ae*$9033$14xsgv)
                                        ((case-lambda
                                           ((g$ae*$9034$14xsgv
                                              g$s*$9035$14xsgv
                                              g$m*$9036$14xsgv)
                                            (g$match$9021$14xsgv
                                              (g$stx-expr$7088$14xsgv
                                                g$e$9022$14xsgv)
                                              g$p$9023$14xsgv
                                              g$m*$9036$14xsgv
                                              g$s*$9035$14xsgv
                                              g$ae*$9034$14xsgv
                                              g$r$9027$14xsgv)))
                                         g$ae*$9033$14xsgv
                                         g$s*$9032$14xsgv
                                         g$m*$9031$14xsgv)))))
                                 '#f)
                               (if (annotation? g$e$9022$14xsgv)
                                 (g$match$9021$14xsgv
                                   (annotation-expression g$e$9022$14xsgv)
                                   g$p$9023$14xsgv
                                   g$m*$9024$14xsgv
                                   g$s*$9025$14xsgv
                                   g$ae*$9026$14xsgv
                                   g$r$9027$14xsgv)
                                 (g$match*$9020$14xsgv
                                   g$e$9022$14xsgv
                                   g$p$9023$14xsgv
                                   g$m*$9024$14xsgv
                                   g$s*$9025$14xsgv
                                   g$ae*$9026$14xsgv
                                   g$r$9027$14xsgv))))))))))
          (g$match$9021$14xsgv
            g$e$9012$14xsgv
            g$p$9013$14xsgv
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7393$14xsgv
     g$ellipsis?$10829$14xsgv
     (case-lambda
       ((g$x$9126$14xsgv)
        (if (g$id?$7114$14xsgv g$x$9126$14xsgv)
          (begin
            '#f
            (g$free-id=?$7118$14xsgv
              g$x$9126$14xsgv
              (g$scheme-stx$7335$14xsgv '...)))
          '#f))))
   (g$underscore?$7394$14xsgv
     g$underscore?$10830$14xsgv
     (case-lambda
       ((g$x$9127$14xsgv)
        (if (g$id?$7114$14xsgv g$x$9127$14xsgv)
          (begin
            '#f
            (g$free-id=?$7118$14xsgv
              g$x$9127$14xsgv
              (g$scheme-stx$7335$14xsgv '_)))
          '#f))))
   (g$verify-literals$7395$14xsgv
     g$verify-literals$10831$14xsgv
     (case-lambda
       ((g$lits$9128$14xsgv g$expr$9129$14xsgv)
        (for-each
          (case-lambda
            ((g$x$9130$14xsgv)
             (if ((case-lambda
                    ((g$t$9131$14xsgv)
                     (if g$t$9131$14xsgv
                       g$t$9131$14xsgv
                       ((case-lambda
                          ((g$t$9132$14xsgv)
                           (if g$t$9132$14xsgv
                             g$t$9132$14xsgv
                             (begin
                               '#f
                               (g$underscore?$7394$14xsgv g$x$9130$14xsgv)))))
                        (g$ellipsis?$7393$14xsgv g$x$9130$14xsgv)))))
                  (not (g$id?$7114$14xsgv g$x$9130$14xsgv)))
               (g$syntax-violation$7501$14xsgv
                 '#f
                 '"invalid literal"
                 g$expr$9129$14xsgv
                 g$x$9130$14xsgv)
               (void))))
          g$lits$9128$14xsgv))))
   (g$syntax-case-transformer$7396$14xsgv
     g$syntax-case-transformer$10832$14xsgv
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9133$14xsgv
                     (case-lambda
                       ((g$pvars$9190$14xsgv
                          g$expr$9191$14xsgv
                          g$y$9192$14xsgv
                          g$r$9193$14xsgv
                          g$mr$9194$14xsgv)
                        ((case-lambda
                           ((g$ids$9195$14xsgv g$levels$9196$14xsgv)
                            ((case-lambda
                               ((g$labels$9197$14xsgv g$new-vars$9198$14xsgv)
                                ((case-lambda
                                   ((g$body$9199$14xsgv)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7045$14xsgv
                                        '#f
                                        g$new-vars$9198$14xsgv
                                        g$body$9199$14xsgv)
                                      g$y$9192$14xsgv)))
                                 (g$chi-expr$7410$14xsgv
                                   (g$add-subst$7104$14xsgv
                                     (g$make-full-rib$7082$14xsgv
                                       g$ids$9195$14xsgv
                                       g$labels$9197$14xsgv)
                                     g$expr$9191$14xsgv)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9200$14xsgv
                                               g$var$9201$14xsgv
                                               g$level$9202$14xsgv)
                                             (cons
                                               g$label$9200$14xsgv
                                               (g$make-binding$7130$14xsgv
                                                 'syntax
                                                 (cons
                                                   g$var$9201$14xsgv
                                                   g$level$9202$14xsgv)))))
                                          g$labels$9197$14xsgv
                                          g$new-vars$9198$14xsgv
                                          (map cdr g$pvars$9190$14xsgv))
                                     g$r$9193$14xsgv)
                                   g$mr$9194$14xsgv))))
                             (map g$gen-label$7060$14xsgv g$ids$9195$14xsgv)
                             (map g$gen-lexical$7058$14xsgv
                                  g$ids$9195$14xsgv))))
                         (map car g$pvars$9190$14xsgv)
                         (map cdr g$pvars$9190$14xsgv)))))
                   (g$invalid-ids-error$9134$14xsgv
                     (case-lambda
                       ((g$id*$9184$14xsgv g$e$9185$14xsgv g$class$9186$14xsgv)
                        ((letrec ((g$find$9187$14xsgv
                                    (case-lambda
                                      ((g$id*$9188$14xsgv g$ok*$9189$14xsgv)
                                       (if (null? g$id*$9188$14xsgv)
                                         (g$syntax-violation$7501$14xsgv
                                           '#f
                                           '"invalid syntax"
                                           g$e$9185$14xsgv)
                                         (if (g$id?$7114$14xsgv
                                               (car g$id*$9188$14xsgv))
                                           (if (g$bound-id-member?$7121$14xsgv
                                                 (car g$id*$9188$14xsgv)
                                                 g$ok*$9189$14xsgv)
                                             (g$syntax-error$7498$14xsgv
                                               (car g$id*$9188$14xsgv)
                                               '"duplicate "
                                               g$class$9186$14xsgv)
                                             (g$find$9187$14xsgv
                                               (cdr g$id*$9188$14xsgv)
                                               (cons
                                                 (car g$id*$9188$14xsgv)
                                                 g$ok*$9189$14xsgv)))
                                           (g$syntax-error$7498$14xsgv
                                             (car g$id*$9188$14xsgv)
                                             '"invalid "
                                             g$class$9186$14xsgv)))))))
                           g$find$9187$14xsgv)
                         g$id*$9184$14xsgv
                         '()))))
                   (g$gen-clause$9135$14xsgv
                     (case-lambda
                       ((g$x$9164$14xsgv
                          g$keys$9165$14xsgv
                          g$clauses$9166$14xsgv
                          g$r$9167$14xsgv
                          g$mr$9168$14xsgv
                          g$pat$9169$14xsgv
                          g$fender$9170$14xsgv
                          g$expr$9171$14xsgv)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7391$14xsgv
                               g$pat$9169$14xsgv
                               g$keys$9165$14xsgv)))
                          (case-lambda
                            ((g$p$9174$14xsgv g$pvars$9175$14xsgv)
                             ((case-lambda
                                ((g$pvars$9176$14xsgv g$p$9177$14xsgv)
                                 (if (not (g$distinct-bound-ids?$7120$14xsgv
                                            (map car g$pvars$9176$14xsgv)))
                                   (g$invalid-ids-error$9134$14xsgv
                                     (map car g$pvars$9176$14xsgv)
                                     g$pat$9169$14xsgv
                                     '"pattern variable")
                                   (if (not (g$for-all$5356$14xsgv
                                              (case-lambda
                                                ((g$x$9178$14xsgv)
                                                 (not (g$ellipsis?$7393$14xsgv
                                                        (car g$x$9178$14xsgv)))))
                                              g$pvars$9176$14xsgv))
                                     (g$syntax-violation$7501$14xsgv
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9169$14xsgv)
                                     ((case-lambda
                                        ((g$y$9179$14xsgv)
                                         ((case-lambda
                                            ((g$test$9180$14xsgv)
                                             ((case-lambda
                                                ((g$conseq$9181$14xsgv)
                                                 ((case-lambda
                                                    ((g$altern$9182$14xsgv)
                                                     (list
                                                       (g$build-lambda$7045$14xsgv
                                                         '#f
                                                         (list g$y$9179$14xsgv)
                                                         (list
                                                           'if
                                                           g$test$9180$14xsgv
                                                           g$conseq$9181$14xsgv
                                                           g$altern$9182$14xsgv))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9164$14xsgv
                                                         (list
                                                           'quote
                                                           g$p$9177$14xsgv)))))
                                                  (g$gen-syntax-case$9136$14xsgv
                                                    g$x$9164$14xsgv
                                                    g$keys$9165$14xsgv
                                                    g$clauses$9166$14xsgv
                                                    g$r$9167$14xsgv
                                                    g$mr$9168$14xsgv))))
                                              (g$build-dispatch-call$9133$14xsgv
                                                g$pvars$9176$14xsgv
                                                g$expr$9171$14xsgv
                                                g$y$9179$14xsgv
                                                g$r$9167$14xsgv
                                                g$mr$9168$14xsgv))))
                                          (if (eq? g$fender$9170$14xsgv '#t)
                                            g$y$9179$14xsgv
                                            ((case-lambda
                                               ((g$call$9183$14xsgv)
                                                (list
                                                  'if
                                                  g$y$9179$14xsgv
                                                  g$call$9183$14xsgv
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9133$14xsgv
                                               g$pvars$9176$14xsgv
                                               g$fender$9170$14xsgv
                                               g$y$9179$14xsgv
                                               g$r$9167$14xsgv
                                               g$mr$9168$14xsgv))))))
                                      (g$gen-lexical$7058$14xsgv 'tmp))))))
                              g$pvars$9175$14xsgv
                              g$p$9174$14xsgv)))))))
                   (g$gen-syntax-case$9136$14xsgv
                     (case-lambda
                       ((g$x$9147$14xsgv
                          g$keys$9148$14xsgv
                          g$clauses$9149$14xsgv
                          g$r$9150$14xsgv
                          g$mr$9151$14xsgv)
                        (if (null? g$clauses$9149$14xsgv)
                          (list '(primitive syntax-error) g$x$9147$14xsgv)
                          ((case-lambda
                             ((g$t$9152$14xsgv)
                              ((case-lambda
                                 ((g$ls/false$9153$14xsgv)
                                  (if g$ls/false$9153$14xsgv
                                    (apply
                                      (case-lambda
                                        ((g$pat$9154$14xsgv g$expr$9155$14xsgv)
                                         (if (if (g$id?$7114$14xsgv
                                                   g$pat$9154$14xsgv)
                                               (if (not (g$bound-id-member?$7121$14xsgv
                                                          g$pat$9154$14xsgv
                                                          g$keys$9148$14xsgv))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7393$14xsgv
                                                          g$pat$9154$14xsgv)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7118$14xsgv
                                                 g$pat$9154$14xsgv
                                                 (g$scheme-stx$7335$14xsgv '_))
                                             (g$chi-expr$7410$14xsgv
                                               g$expr$9155$14xsgv
                                               g$r$9150$14xsgv
                                               g$mr$9151$14xsgv)
                                             ((case-lambda
                                                ((g$lab$9156$14xsgv
                                                   g$lex$9157$14xsgv)
                                                 ((case-lambda
                                                    ((g$body$9158$14xsgv)
                                                     (list
                                                       (g$build-lambda$7045$14xsgv
                                                         '#f
                                                         (list
                                                           g$lex$9157$14xsgv)
                                                         g$body$9158$14xsgv)
                                                       g$x$9147$14xsgv)))
                                                  (g$chi-expr$7410$14xsgv
                                                    (g$add-subst$7104$14xsgv
                                                      (g$make-full-rib$7082$14xsgv
                                                        (list g$pat$9154$14xsgv)
                                                        (list
                                                          g$lab$9156$14xsgv))
                                                      g$expr$9155$14xsgv)
                                                    (cons
                                                      (cons
                                                        g$lab$9156$14xsgv
                                                        (g$make-binding$7130$14xsgv
                                                          'syntax
                                                          (cons
                                                            g$lex$9157$14xsgv
                                                            '0)))
                                                      g$r$9150$14xsgv)
                                                    g$mr$9151$14xsgv))))
                                              (g$gen-label$7060$14xsgv
                                                g$pat$9154$14xsgv)
                                              (g$gen-lexical$7058$14xsgv
                                                g$pat$9154$14xsgv)))
                                           (g$gen-clause$9135$14xsgv
                                             g$x$9147$14xsgv
                                             g$keys$9148$14xsgv
                                             (cdr g$clauses$9149$14xsgv)
                                             g$r$9150$14xsgv
                                             g$mr$9151$14xsgv
                                             g$pat$9154$14xsgv
                                             '#t
                                             g$expr$9155$14xsgv))))
                                      g$ls/false$9153$14xsgv)
                                    ((case-lambda
                                       ((g$t$9159$14xsgv)
                                        ((case-lambda
                                           ((g$ls/false$9160$14xsgv)
                                            (if g$ls/false$9160$14xsgv
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9161$14xsgv
                                                     g$fender$9162$14xsgv
                                                     g$expr$9163$14xsgv)
                                                   (g$gen-clause$9135$14xsgv
                                                     g$x$9147$14xsgv
                                                     g$keys$9148$14xsgv
                                                     (cdr g$clauses$9149$14xsgv)
                                                     g$r$9150$14xsgv
                                                     g$mr$9151$14xsgv
                                                     g$pat$9161$14xsgv
                                                     g$fender$9162$14xsgv
                                                     g$expr$9163$14xsgv)))
                                                g$ls/false$9160$14xsgv)
                                              (g$syntax-violation$7501$14xsgv
                                                '#f
                                                '"invalid syntax"
                                                g$t$9159$14xsgv))))
                                         (g$syntax-dispatch$7392$14xsgv
                                           g$t$9159$14xsgv
                                           '(any any any)))))
                                     g$t$9152$14xsgv))))
                               (g$syntax-dispatch$7392$14xsgv
                                 g$t$9152$14xsgv
                                 '(any any)))))
                           (car g$clauses$9149$14xsgv)))))))
           (case-lambda
             ((g$e$9137$14xsgv g$r$9138$14xsgv g$mr$9139$14xsgv)
              ((case-lambda
                 ((g$t$9140$14xsgv)
                  ((case-lambda
                     ((g$ls/false$9141$14xsgv)
                      (if g$ls/false$9141$14xsgv
                        (apply
                          (case-lambda
                            ((g$expr$9142$14xsgv
                               g$keys$9143$14xsgv
                               g$clauses$9144$14xsgv)
                             (begin
                               (g$verify-literals$7395$14xsgv
                                 g$keys$9143$14xsgv
                                 g$e$9137$14xsgv)
                               ((case-lambda
                                  ((g$x$9145$14xsgv)
                                   ((case-lambda
                                      ((g$body$9146$14xsgv)
                                       (list
                                         (g$build-lambda$7045$14xsgv
                                           '#f
                                           (list g$x$9145$14xsgv)
                                           g$body$9146$14xsgv)
                                         (g$chi-expr$7410$14xsgv
                                           g$expr$9142$14xsgv
                                           g$r$9138$14xsgv
                                           g$mr$9139$14xsgv))))
                                    (g$gen-syntax-case$9136$14xsgv
                                      g$x$9145$14xsgv
                                      g$keys$9143$14xsgv
                                      g$clauses$9144$14xsgv
                                      g$r$9138$14xsgv
                                      g$mr$9139$14xsgv))))
                                (g$gen-lexical$7058$14xsgv 'tmp)))))
                          g$ls/false$9141$14xsgv)
                        (g$syntax-violation$7501$14xsgv
                          '#f
                          '"invalid syntax"
                          g$t$9140$14xsgv))))
                   (g$syntax-dispatch$7392$14xsgv
                     g$t$9140$14xsgv
                     '(_ any each-any . each-any)))))
               g$e$9137$14xsgv))))))))
   (g$ellipsis-map$7397$14xsgv
     g$ellipsis-map$10833$14xsgv
     (case-lambda
       ((g$proc$9203$14xsgv g$ls$9204$14xsgv . g$ls*$9205$14xsgv)
        (letrec* ((g$who$9206$14xsgv '...))
          (begin
            (if (not (list? g$ls$9204$14xsgv))
              (assertion-violation
                g$who$9206$14xsgv
                '"not a list"
                g$ls$9204$14xsgv)
              (void))
            (if (not (null? g$ls*$9205$14xsgv))
              ((case-lambda
                 ((g$n$9207$14xsgv)
                  (for-each
                    (case-lambda
                      ((g$x$9208$14xsgv)
                       (begin
                         (if (not (list? g$x$9208$14xsgv))
                           (assertion-violation
                             g$who$9206$14xsgv
                             '"not a list"
                             g$x$9208$14xsgv)
                           (void))
                         (if (not (= (length g$x$9208$14xsgv) g$n$9207$14xsgv))
                           (assertion-violation
                             g$who$9206$14xsgv
                             '"length mismatch"
                             g$ls$9204$14xsgv
                             g$x$9208$14xsgv)
                           (void)))))
                    g$ls*$9205$14xsgv)))
               (length g$ls$9204$14xsgv))
              (void))
            (apply
              map
              g$proc$9203$14xsgv
              g$ls$9204$14xsgv
              g$ls*$9205$14xsgv))))))
   (g$syntax-transformer$7398$14xsgv
     g$syntax-transformer$10834$14xsgv
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9209$14xsgv
                     (case-lambda
                       ((g$src$9269$14xsgv
                          g$e$9270$14xsgv
                          g$r$9271$14xsgv
                          g$maps$9272$14xsgv
                          g$ellipsis?$9273$14xsgv
                          g$vec?$9274$14xsgv)
                        ((case-lambda
                           ((g$t$9275$14xsgv)
                            ((case-lambda
                               ((g$ls/false$9276$14xsgv)
                                (if (if g$ls/false$9276$14xsgv
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9277$14xsgv)
                                             (g$ellipsis?$9273$14xsgv
                                               g$dots$9277$14xsgv)))
                                          g$ls/false$9276$14xsgv))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9278$14xsgv)
                                       (g$syntax-violation$7501$14xsgv
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9269$14xsgv)))
                                    g$ls/false$9276$14xsgv)
                                  ((case-lambda
                                     ((g$t$9279$14xsgv)
                                      ((case-lambda
                                         ((g$ls/false$9280$14xsgv)
                                          (if (if g$ls/false$9280$14xsgv
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9281$14xsgv)
                                                       (g$id?$7114$14xsgv
                                                         g$id$9281$14xsgv)))
                                                    g$ls/false$9280$14xsgv))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9282$14xsgv)
                                                 ((case-lambda
                                                    ((g$label$9283$14xsgv)
                                                     ((case-lambda
                                                        ((g$b$9284$14xsgv)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7131$14xsgv
                                                                        g$b$9284$14xsgv)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9287$14xsgv)
                                                                        (g$gen-ref$9210$14xsgv
                                                                          g$src$9269$14xsgv
                                                                          (car g$var.lev$9287$14xsgv)
                                                                          (cdr g$var.lev$9287$14xsgv)
                                                                          g$maps$9272$14xsgv)))
                                                                     (g$binding-value$7132$14xsgv
                                                                       g$b$9284$14xsgv))))
                                                                 (case-lambda
                                                                   ((g$var$9288$14xsgv
                                                                      g$maps$9289$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$maps$9290$14xsgv
                                                                          g$var$9291$14xsgv)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9291$14xsgv)
                                                                          g$maps$9290$14xsgv)))
                                                                     g$maps$9289$14xsgv
                                                                     g$var$9288$14xsgv))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9270$14xsgv)
                                                                 g$maps$9272$14xsgv)))))))
                                                      (g$label->binding$7129$14xsgv
                                                        g$label$9283$14xsgv
                                                        g$r$9271$14xsgv))))
                                                  (g$id->label$7127$14xsgv
                                                    g$e$9270$14xsgv))))
                                              g$ls/false$9280$14xsgv)
                                            ((case-lambda
                                               ((g$t$9292$14xsgv)
                                                ((case-lambda
                                                   ((g$ls/false$9293$14xsgv)
                                                    (if (if g$ls/false$9293$14xsgv
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9294$14xsgv
                                                                   g$e$9295$14xsgv)
                                                                 (g$ellipsis?$9273$14xsgv
                                                                   g$dots$9294$14xsgv)))
                                                              g$ls/false$9293$14xsgv))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9296$14xsgv
                                                             g$e$9297$14xsgv)
                                                           (if g$vec?$9274$14xsgv
                                                             (g$syntax-violation$7501$14xsgv
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9269$14xsgv)
                                                             (g$gen-syntax$9209$14xsgv
                                                               g$src$9269$14xsgv
                                                               g$e$9297$14xsgv
                                                               g$r$9271$14xsgv
                                                               g$maps$9272$14xsgv
                                                               (case-lambda
                                                                 ((g$x$9298$14xsgv)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9293$14xsgv)
                                                      ((case-lambda
                                                         ((g$t$9299$14xsgv)
                                                          ((case-lambda
                                                             ((g$ls/false$9300$14xsgv)
                                                              (if (if g$ls/false$9300$14xsgv
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9301$14xsgv
                                                                             g$dots$9302$14xsgv
                                                                             g$y$9303$14xsgv)
                                                                           (g$ellipsis?$9273$14xsgv
                                                                             g$dots$9302$14xsgv)))
                                                                        g$ls/false$9300$14xsgv))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9304$14xsgv
                                                                       g$dots$9305$14xsgv
                                                                       g$y$9306$14xsgv)
                                                                     ((letrec ((g$f$9307$14xsgv
                                                                                 (case-lambda
                                                                                   ((g$y$9308$14xsgv
                                                                                      g$k$9309$14xsgv)
                                                                                    ((case-lambda
                                                                                       ((g$t$9310$14xsgv)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9311$14xsgv)
                                                                                            (if g$ls/false$9311$14xsgv
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9309$14xsgv
                                                                                                     g$maps$9272$14xsgv)))
                                                                                                g$ls/false$9311$14xsgv)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9312$14xsgv)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9313$14xsgv)
                                                                                                      (if (if g$ls/false$9313$14xsgv
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9314$14xsgv
                                                                                                                     g$y$9315$14xsgv)
                                                                                                                   (g$ellipsis?$9273$14xsgv
                                                                                                                     g$dots$9314$14xsgv)))
                                                                                                                g$ls/false$9313$14xsgv))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9316$14xsgv
                                                                                                               g$y$9317$14xsgv)
                                                                                                             (g$f$9307$14xsgv
                                                                                                               g$y$9317$14xsgv
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9318$14xsgv)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9309$14xsgv
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9318$14xsgv))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9321$14xsgv
                                                                                                                         g$maps$9322$14xsgv)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9323$14xsgv
                                                                                                                             g$x$9324$14xsgv)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9323$14xsgv))
                                                                                                                             (g$syntax-violation$7501$14xsgv
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9269$14xsgv)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9212$14xsgv
                                                                                                                                 g$x$9324$14xsgv
                                                                                                                                 (car g$maps$9323$14xsgv))
                                                                                                                               (cdr g$maps$9323$14xsgv)))))
                                                                                                                        g$maps$9322$14xsgv
                                                                                                                        g$x$9321$14xsgv)))))))))
                                                                                                          g$ls/false$9313$14xsgv)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9325$14xsgv)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9326$14xsgv)
                                                                                                                (if g$ls/false$9326$14xsgv
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9209$14xsgv
                                                                                                                              g$src$9269$14xsgv
                                                                                                                              g$y$9308$14xsgv
                                                                                                                              g$r$9271$14xsgv
                                                                                                                              g$maps$9272$14xsgv
                                                                                                                              g$ellipsis?$9273$14xsgv
                                                                                                                              g$vec?$9274$14xsgv)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9329$14xsgv
                                                                                                                              g$maps$9330$14xsgv)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9331$14xsgv
                                                                                                                                  g$y$9332$14xsgv)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9309$14xsgv
                                                                                                                                       g$maps$9331$14xsgv)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9335$14xsgv
                                                                                                                                       g$maps$9336$14xsgv)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9337$14xsgv
                                                                                                                                           g$x$9338$14xsgv)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9211$14xsgv
                                                                                                                                             g$x$9338$14xsgv
                                                                                                                                             g$y$9332$14xsgv)
                                                                                                                                           g$maps$9337$14xsgv)))
                                                                                                                                      g$maps$9336$14xsgv
                                                                                                                                      g$x$9335$14xsgv))))))
                                                                                                                             g$maps$9330$14xsgv
                                                                                                                             g$y$9329$14xsgv))))))
                                                                                                                    g$ls/false$9326$14xsgv)
                                                                                                                  (g$syntax-violation$7501$14xsgv
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9325$14xsgv))))
                                                                                                             (g$syntax-dispatch$7392$14xsgv
                                                                                                               g$t$9325$14xsgv
                                                                                                               '_))))
                                                                                                         g$t$9312$14xsgv))))
                                                                                                   (g$syntax-dispatch$7392$14xsgv
                                                                                                     g$t$9312$14xsgv
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9310$14xsgv))))
                                                                                         (g$syntax-dispatch$7392$14xsgv
                                                                                           g$t$9310$14xsgv
                                                                                           '()))))
                                                                                     g$y$9308$14xsgv)))))
                                                                        g$f$9307$14xsgv)
                                                                      g$y$9306$14xsgv
                                                                      (case-lambda
                                                                        ((g$maps$9339$14xsgv)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9209$14xsgv
                                                                                g$src$9269$14xsgv
                                                                                g$x$9304$14xsgv
                                                                                g$r$9271$14xsgv
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9339$14xsgv)
                                                                                g$ellipsis?$9273$14xsgv
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9342$14xsgv
                                                                                g$maps$9343$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$maps$9344$14xsgv
                                                                                    g$x$9345$14xsgv)
                                                                                  (if (null?
                                                                                        (car g$maps$9344$14xsgv))
                                                                                    (g$syntax-violation$7501$14xsgv
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9269$14xsgv)
                                                                                    (values
                                                                                      (g$gen-map$9213$14xsgv
                                                                                        g$x$9345$14xsgv
                                                                                        (car g$maps$9344$14xsgv))
                                                                                      (cdr g$maps$9344$14xsgv)))))
                                                                               g$maps$9343$14xsgv
                                                                               g$x$9342$14xsgv)))))))))
                                                                  g$ls/false$9300$14xsgv)
                                                                ((case-lambda
                                                                   ((g$t$9346$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9347$14xsgv)
                                                                        (if g$ls/false$9347$14xsgv
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9348$14xsgv
                                                                                 g$y$9349$14xsgv)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9209$14xsgv
                                                                                      g$src$9269$14xsgv
                                                                                      g$x$9348$14xsgv
                                                                                      g$r$9271$14xsgv
                                                                                      g$maps$9272$14xsgv
                                                                                      g$ellipsis?$9273$14xsgv
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9352$14xsgv
                                                                                      g$maps$9353$14xsgv)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9354$14xsgv
                                                                                          g$xnew$9355$14xsgv)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9209$14xsgv
                                                                                               g$src$9269$14xsgv
                                                                                               g$y$9349$14xsgv
                                                                                               g$r$9271$14xsgv
                                                                                               g$maps$9354$14xsgv
                                                                                               g$ellipsis?$9273$14xsgv
                                                                                               g$vec?$9274$14xsgv)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9358$14xsgv
                                                                                               g$maps$9359$14xsgv)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9360$14xsgv
                                                                                                   g$ynew$9361$14xsgv)
                                                                                                 (values
                                                                                                   (g$gen-cons$9214$14xsgv
                                                                                                     g$e$9270$14xsgv
                                                                                                     g$x$9348$14xsgv
                                                                                                     g$y$9349$14xsgv
                                                                                                     g$xnew$9355$14xsgv
                                                                                                     g$ynew$9361$14xsgv)
                                                                                                   g$maps$9360$14xsgv)))
                                                                                              g$maps$9359$14xsgv
                                                                                              g$ynew$9358$14xsgv))))))
                                                                                     g$maps$9353$14xsgv
                                                                                     g$xnew$9352$14xsgv))))))
                                                                            g$ls/false$9347$14xsgv)
                                                                          ((case-lambda
                                                                             ((g$t$9362$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9363$14xsgv)
                                                                                  (if g$ls/false$9363$14xsgv
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9364$14xsgv)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9209$14xsgv
                                                                                                g$src$9269$14xsgv
                                                                                                g$ls$9364$14xsgv
                                                                                                g$r$9271$14xsgv
                                                                                                g$maps$9272$14xsgv
                                                                                                g$ellipsis?$9273$14xsgv
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9367$14xsgv
                                                                                                g$maps$9368$14xsgv)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9369$14xsgv
                                                                                                    g$lsnew$9370$14xsgv)
                                                                                                  (values
                                                                                                    (g$gen-vector$9215$14xsgv
                                                                                                      g$e$9270$14xsgv
                                                                                                      g$ls$9364$14xsgv
                                                                                                      g$lsnew$9370$14xsgv)
                                                                                                    g$maps$9369$14xsgv)))
                                                                                               g$maps$9368$14xsgv
                                                                                               g$lsnew$9367$14xsgv))))))
                                                                                      g$ls/false$9363$14xsgv)
                                                                                    ((case-lambda
                                                                                       ((g$t$9371$14xsgv)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9372$14xsgv)
                                                                                            (if g$ls/false$9372$14xsgv
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9270$14xsgv)
                                                                                                     g$maps$9272$14xsgv)))
                                                                                                g$ls/false$9372$14xsgv)
                                                                                              (g$syntax-violation$7501$14xsgv
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9371$14xsgv))))
                                                                                         (g$syntax-dispatch$7392$14xsgv
                                                                                           g$t$9371$14xsgv
                                                                                           '_))))
                                                                                     g$t$9362$14xsgv))))
                                                                               (g$syntax-dispatch$7392$14xsgv
                                                                                 g$t$9362$14xsgv
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9346$14xsgv))))
                                                                     (g$syntax-dispatch$7392$14xsgv
                                                                       g$t$9346$14xsgv
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9299$14xsgv))))
                                                           (g$syntax-dispatch$7392$14xsgv
                                                             g$t$9299$14xsgv
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9292$14xsgv))))
                                                 (g$syntax-dispatch$7392$14xsgv
                                                   g$t$9292$14xsgv
                                                   '(any any)))))
                                             g$t$9279$14xsgv))))
                                       (g$syntax-dispatch$7392$14xsgv
                                         g$t$9279$14xsgv
                                         'any))))
                                   g$t$9275$14xsgv))))
                             (g$syntax-dispatch$7392$14xsgv
                               g$t$9275$14xsgv
                               'any))))
                         g$e$9270$14xsgv))))
                   (g$gen-ref$9210$14xsgv
                     (case-lambda
                       ((g$src$9256$14xsgv
                          g$var$9257$14xsgv
                          g$level$9258$14xsgv
                          g$maps$9259$14xsgv)
                        (if (= g$level$9258$14xsgv '0)
                          (values g$var$9257$14xsgv g$maps$9259$14xsgv)
                          (if (null? g$maps$9259$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9256$14xsgv)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9210$14xsgv
                                   g$src$9256$14xsgv
                                   g$var$9257$14xsgv
                                   (- g$level$9258$14xsgv '1)
                                   (cdr g$maps$9259$14xsgv))))
                              (case-lambda
                                ((g$outer-var$9262$14xsgv
                                   g$outer-maps$9263$14xsgv)
                                 ((case-lambda
                                    ((g$outer-maps$9264$14xsgv
                                       g$outer-var$9265$14xsgv)
                                     ((case-lambda
                                        ((g$t$9266$14xsgv)
                                         (if g$t$9266$14xsgv
                                           ((case-lambda
                                              ((g$b$9267$14xsgv)
                                               (values
                                                 (cdr g$b$9267$14xsgv)
                                                 g$maps$9259$14xsgv)))
                                            g$t$9266$14xsgv)
                                           ((case-lambda
                                              ((g$inner-var$9268$14xsgv)
                                               (values
                                                 g$inner-var$9268$14xsgv
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9265$14xsgv
                                                       g$inner-var$9268$14xsgv)
                                                     (car g$maps$9259$14xsgv))
                                                   g$outer-maps$9264$14xsgv))))
                                            (g$gen-lexical$7058$14xsgv 'tmp)))))
                                      (assq
                                        g$outer-var$9265$14xsgv
                                        (car g$maps$9259$14xsgv)))))
                                  g$outer-maps$9263$14xsgv
                                  g$outer-var$9262$14xsgv)))))))))
                   (g$gen-append$9211$14xsgv
                     (case-lambda
                       ((g$x$9254$14xsgv g$y$9255$14xsgv)
                        (if (equal? g$y$9255$14xsgv ''())
                          g$x$9254$14xsgv
                          (list 'append g$x$9254$14xsgv g$y$9255$14xsgv)))))
                   (g$gen-mappend$9212$14xsgv
                     (case-lambda
                       ((g$e$9252$14xsgv g$map-env$9253$14xsgv)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9213$14xsgv
                            g$e$9252$14xsgv
                            g$map-env$9253$14xsgv)))))
                   (g$gen-map$9213$14xsgv
                     (case-lambda
                       ((g$e$9243$14xsgv g$map-env$9244$14xsgv)
                        ((case-lambda
                           ((g$formals$9245$14xsgv g$actuals$9246$14xsgv)
                            (if (eq? (car g$e$9243$14xsgv) 'ref)
                              (car g$actuals$9246$14xsgv)
                              (if (g$for-all$5356$14xsgv
                                    (case-lambda
                                      ((g$x$9247$14xsgv)
                                       (if (eq? (car g$x$9247$14xsgv) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$4887$14xsgv
                                               g$x$9247$14xsgv)
                                             g$formals$9245$14xsgv))
                                         '#f)))
                                    (cdr g$e$9243$14xsgv))
                                ((case-lambda
                                   ((g$args$9248$14xsgv)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9243$14xsgv))
                                        g$args$9248$14xsgv))))
                                 (map ((case-lambda
                                         ((g$r$9249$14xsgv)
                                          (case-lambda
                                            ((g$x$9250$14xsgv)
                                             (cdr (assq
                                                    (g$cadr$4887$14xsgv
                                                      g$x$9250$14xsgv)
                                                    g$r$9249$14xsgv))))))
                                       (map cons
                                            g$formals$9245$14xsgv
                                            g$actuals$9246$14xsgv))
                                      (cdr g$e$9243$14xsgv)))
                                (g$cons*$5358$14xsgv
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9245$14xsgv
                                    g$e$9243$14xsgv)
                                  g$actuals$9246$14xsgv)))))
                         (map cdr g$map-env$9244$14xsgv)
                         (map (case-lambda
                                ((g$x$9251$14xsgv)
                                 (list 'ref (car g$x$9251$14xsgv))))
                              g$map-env$9244$14xsgv)))))
                   (g$gen-cons$9214$14xsgv
                     (case-lambda
                       ((g$e$9235$14xsgv
                          g$x$9236$14xsgv
                          g$y$9237$14xsgv
                          g$xnew$9238$14xsgv
                          g$ynew$9239$14xsgv)
                        ((case-lambda
                           ((g$t$9240$14xsgv)
                            (if (memv g$t$9240$14xsgv '(quote))
                              (if (eq? (car g$xnew$9238$14xsgv) 'quote)
                                ((case-lambda
                                   ((g$xnew$9241$14xsgv g$ynew$9242$14xsgv)
                                    (if (if (eq? g$xnew$9241$14xsgv
                                                 g$x$9236$14xsgv)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9242$14xsgv
                                                 g$y$9237$14xsgv))
                                          '#f)
                                      (list 'quote g$e$9235$14xsgv)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9241$14xsgv
                                          g$ynew$9242$14xsgv)))))
                                 (g$cadr$4887$14xsgv g$xnew$9238$14xsgv)
                                 (g$cadr$4887$14xsgv g$ynew$9239$14xsgv))
                                (if (null?
                                      (g$cadr$4887$14xsgv g$ynew$9239$14xsgv))
                                  (list 'list g$xnew$9238$14xsgv)
                                  (list
                                    'cons
                                    g$xnew$9238$14xsgv
                                    g$ynew$9239$14xsgv)))
                              (if (memv g$t$9240$14xsgv '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9238$14xsgv
                                    (cdr g$ynew$9239$14xsgv)))
                                (list
                                  'cons
                                  g$xnew$9238$14xsgv
                                  g$ynew$9239$14xsgv)))))
                         (car g$ynew$9239$14xsgv)))))
                   (g$gen-vector$9215$14xsgv
                     (case-lambda
                       ((g$e$9232$14xsgv g$ls$9233$14xsgv g$lsnew$9234$14xsgv)
                        (if (eq? (car g$lsnew$9234$14xsgv) 'quote)
                          (if (eq? (g$cadr$4887$14xsgv g$lsnew$9234$14xsgv)
                                   g$ls$9233$14xsgv)
                            (list 'quote g$e$9232$14xsgv)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$4887$14xsgv g$lsnew$9234$14xsgv))))
                          (if (eq? (car g$lsnew$9234$14xsgv) 'list)
                            (cons 'vector (cdr g$lsnew$9234$14xsgv))
                            (list 'list->vector g$lsnew$9234$14xsgv))))))
                   (g$regen$9216$14xsgv
                     (case-lambda
                       ((g$x$9229$14xsgv)
                        ((case-lambda
                           ((g$t$9230$14xsgv)
                            (if (memv g$t$9230$14xsgv '(ref))
                              (g$cadr$4887$14xsgv g$x$9229$14xsgv)
                              (if (memv g$t$9230$14xsgv '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$4887$14xsgv g$x$9229$14xsgv))
                                (if (memv g$t$9230$14xsgv '(quote))
                                  (list
                                    'quote
                                    (g$cadr$4887$14xsgv g$x$9229$14xsgv))
                                  (if (memv g$t$9230$14xsgv '(lambda))
                                    (g$build-lambda$7045$14xsgv
                                      '#f
                                      (g$cadr$4887$14xsgv g$x$9229$14xsgv)
                                      (g$regen$9216$14xsgv
                                        (g$caddr$4893$14xsgv g$x$9229$14xsgv)))
                                    (if (memv g$t$9230$14xsgv '(map))
                                      ((case-lambda
                                         ((g$ls$9231$14xsgv)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9231$14xsgv)))
                                       (map g$regen$9216$14xsgv
                                            (cdr g$x$9229$14xsgv)))
                                      (cons
                                        (list 'primitive (car g$x$9229$14xsgv))
                                        (map g$regen$9216$14xsgv
                                             (cdr g$x$9229$14xsgv))))))))))
                         (car g$x$9229$14xsgv))))))
           (case-lambda
             ((g$e$9217$14xsgv g$r$9218$14xsgv g$mr$9219$14xsgv)
              ((case-lambda
                 ((g$t$9220$14xsgv)
                  ((case-lambda
                     ((g$ls/false$9221$14xsgv)
                      (if g$ls/false$9221$14xsgv
                        (apply
                          (case-lambda
                            ((g$x$9222$14xsgv)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9209$14xsgv
                                    g$e$9217$14xsgv
                                    g$x$9222$14xsgv
                                    g$r$9218$14xsgv
                                    '()
                                    g$ellipsis?$7393$14xsgv
                                    '#f)))
                               (case-lambda
                                 ((g$e$9225$14xsgv g$maps$9226$14xsgv)
                                  ((case-lambda
                                     ((g$maps$9227$14xsgv g$e$9228$14xsgv)
                                      (g$regen$9216$14xsgv g$e$9228$14xsgv)))
                                   g$maps$9226$14xsgv
                                   g$e$9225$14xsgv))))))
                          g$ls/false$9221$14xsgv)
                        (g$syntax-violation$7501$14xsgv
                          '#f
                          '"invalid syntax"
                          g$t$9220$14xsgv))))
                   (g$syntax-dispatch$7392$14xsgv g$t$9220$14xsgv '(_ any)))))
               g$e$9217$14xsgv))))))))
   (g$core-macro-transformer$7399$14xsgv
     g$core-macro-transformer$10835$14xsgv
     (case-lambda
       ((g$name$9373$14xsgv)
        ((case-lambda
           ((g$t$9374$14xsgv)
            (if (memv g$t$9374$14xsgv '(quote))
              g$quote-transformer$7352$14xsgv
              (if (memv g$t$9374$14xsgv '(lambda))
                g$lambda-transformer$7354$14xsgv
                (if (memv g$t$9374$14xsgv '(case-lambda))
                  g$case-lambda-transformer$7353$14xsgv
                  (if (memv g$t$9374$14xsgv '(letrec))
                    g$letrec-transformer$7342$14xsgv
                    (if (memv g$t$9374$14xsgv '(letrec*))
                      g$letrec*-transformer$7343$14xsgv
                      (if (memv g$t$9374$14xsgv '(if))
                        g$if-transformer$7350$14xsgv
                        (if (memv g$t$9374$14xsgv '(foreign-call))
                          g$foreign-call-transformer$7390$14xsgv
                          (if (memv g$t$9374$14xsgv '(syntax-case))
                            g$syntax-case-transformer$7396$14xsgv
                            (if (memv g$t$9374$14xsgv '(syntax))
                              g$syntax-transformer$7398$14xsgv
                              (if (memv g$t$9374$14xsgv '(type-descriptor))
                                g$type-descriptor-transformer$7345$14xsgv
                                (if (memv
                                      g$t$9374$14xsgv
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7346$14xsgv
                                  (if (memv
                                        g$t$9374$14xsgv
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7347$14xsgv
                                    (if (memv
                                          g$t$9374$14xsgv
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7344$14xsgv
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9373$14xsgv))))))))))))))))
         g$name$9373$14xsgv))))
   (g$file-options-macro$7400$14xsgv
     g$file-options-macro$10836$14xsgv
     (case-lambda
       ((g$x$9375$14xsgv)
        ((case-lambda
           ((g$t$9376$14xsgv)
            ((case-lambda
               ((g$ls/false$9377$14xsgv)
                (if (if g$ls/false$9377$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$opt*$9378$14xsgv)
                             (if (g$for-all$5356$14xsgv
                                   g$id?$7114$14xsgv
                                   g$opt*$9378$14xsgv)
                               (begin
                                 '#f
                                 (g$file-options-spec$6383$14xsgv
                                   (map g$id->sym$7115$14xsgv
                                        g$opt*$9378$14xsgv)))
                               '#f)))
                          g$ls/false$9377$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$opt*$9379$14xsgv)
                       (g$bless$7355$14xsgv
                         (list
                           'quote
                           (g$file-options-spec$6383$14xsgv
                             (map g$id->sym$7115$14xsgv g$opt*$9379$14xsgv))))))
                    g$ls/false$9377$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$9376$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$9376$14xsgv '(_ . each-any)))))
         g$x$9375$14xsgv))))
   (g$symbol-macro$7401$14xsgv
     g$symbol-macro$10837$14xsgv
     (case-lambda
       ((g$x$9380$14xsgv g$set$9381$14xsgv)
        ((case-lambda
           ((g$t$9382$14xsgv)
            ((case-lambda
               ((g$ls/false$9383$14xsgv)
                (if (if g$ls/false$9383$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9384$14xsgv)
                             (if (g$id?$7114$14xsgv g$name$9384$14xsgv)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7115$14xsgv g$name$9384$14xsgv)
                                   g$set$9381$14xsgv))
                               '#f)))
                          g$ls/false$9383$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9385$14xsgv)
                       (g$bless$7355$14xsgv (list 'quote g$name$9385$14xsgv))))
                    g$ls/false$9383$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$9382$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$9382$14xsgv '(_ any)))))
         g$x$9380$14xsgv))))
   (g$macro-transformer$7402$14xsgv
     g$macro-transformer$10838$14xsgv
     (case-lambda
       ((g$x$9386$14xsgv)
        (if (procedure? g$x$9386$14xsgv)
          g$x$9386$14xsgv
          (if (symbol? g$x$9386$14xsgv)
            ((case-lambda
               ((g$t$9387$14xsgv)
                (if (memv g$t$9387$14xsgv '(define-record-type))
                  g$define-record-type-macro$7386$14xsgv
                  (if (memv g$t$9387$14xsgv '(define-struct))
                    g$define-struct-macro$7385$14xsgv
                    (if (memv g$t$9387$14xsgv '(include))
                      g$include-macro$7380$14xsgv
                      (if (memv g$t$9387$14xsgv '(cond))
                        g$cond-macro$7378$14xsgv
                        (if (memv g$t$9387$14xsgv '(let))
                          g$let-macro$7358$14xsgv
                          (if (memv g$t$9387$14xsgv '(do))
                            g$do-macro$7374$14xsgv
                            (if (memv g$t$9387$14xsgv '(or))
                              g$or-macro$7376$14xsgv
                              (if (memv g$t$9387$14xsgv '(and))
                                g$and-macro$7377$14xsgv
                                (if (memv g$t$9387$14xsgv '(let*))
                                  g$let*-macro$7375$14xsgv
                                  (if (memv g$t$9387$14xsgv '(let-values))
                                    g$let-values-macro$7359$14xsgv
                                    (if (memv g$t$9387$14xsgv '(let*-values))
                                      g$let*-values-macro$7360$14xsgv
                                      (if (memv g$t$9387$14xsgv '(syntax-rules))
                                        g$syntax-rules-macro$7382$14xsgv
                                        (if (memv g$t$9387$14xsgv '(quasiquote))
                                          g$quasiquote-macro$7383$14xsgv
                                          (if (memv
                                                g$t$9387$14xsgv
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7384$14xsgv
                                            (if (memv
                                                  g$t$9387$14xsgv
                                                  '(with-syntax))
                                              g$with-syntax-macro$7356$14xsgv
                                              (if (memv g$t$9387$14xsgv '(when))
                                                g$when-macro$7348$14xsgv
                                                (if (memv
                                                      g$t$9387$14xsgv
                                                      '(unless))
                                                  g$unless-macro$7349$14xsgv
                                                  (if (memv
                                                        g$t$9387$14xsgv
                                                        '(case))
                                                    g$case-macro$7351$14xsgv
                                                    (if (memv
                                                          g$t$9387$14xsgv
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7373$14xsgv
                                                      (if (memv
                                                            g$t$9387$14xsgv
                                                            '(time))
                                                        g$time-macro$7369$14xsgv
                                                        (if (memv
                                                              g$t$9387$14xsgv
                                                              '(delay))
                                                          g$delay-macro$7370$14xsgv
                                                          (if (memv
                                                                g$t$9387$14xsgv
                                                                '(assert))
                                                            g$assert-macro$7371$14xsgv
                                                            (if (memv
                                                                  g$t$9387$14xsgv
                                                                  '(endianness))
                                                              g$endianness-macro$7372$14xsgv
                                                              (if (memv
                                                                    g$t$9387$14xsgv
                                                                    '(guard))
                                                                g$guard-macro$7367$14xsgv
                                                                (if (memv
                                                                      g$t$9387$14xsgv
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7368$14xsgv
                                                                  (if (memv
                                                                        g$t$9387$14xsgv
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7361$14xsgv
                                                                    (if (memv
                                                                          g$t$9387$14xsgv
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7362$14xsgv
                                                                      (if (memv
                                                                            g$t$9387$14xsgv
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7363$14xsgv
                                                                        (if (memv
                                                                              g$t$9387$14xsgv
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7365$14xsgv
                                                                          (if (memv
                                                                                g$t$9387$14xsgv
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7366$14xsgv
                                                                            (if (memv
                                                                                  g$t$9387$14xsgv
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7387$14xsgv
                                                                              (if (memv
                                                                                    g$t$9387$14xsgv
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7389$14xsgv
                                                                                (if (memv
                                                                                      g$t$9387$14xsgv
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7381$14xsgv
                                                                                  (if (memv
                                                                                        g$t$9387$14xsgv
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9388$14xsgv)
                                                                                       (g$symbol-macro$7401$14xsgv
                                                                                         g$x$9388$14xsgv
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (memv
                                                                                          g$t$9387$14xsgv
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9389$14xsgv)
                                                                                         (g$symbol-macro$7401$14xsgv
                                                                                           g$x$9389$14xsgv
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (memv
                                                                                            g$t$9387$14xsgv
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9390$14xsgv)
                                                                                           (g$symbol-macro$7401$14xsgv
                                                                                             g$x$9390$14xsgv
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (memv
                                                                                              g$t$9387$14xsgv
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7400$14xsgv
                                                                                          (if (memv
                                                                                                g$t$9387$14xsgv
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7388$14xsgv
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9386$14xsgv)))))))))))))))))))))))))))))))))))))))))
             g$x$9386$14xsgv)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9386$14xsgv))))))
   (g$local-macro-transformer$7403$14xsgv
     g$local-macro-transformer$10839$14xsgv
     (case-lambda ((g$x$9391$14xsgv) (car g$x$9391$14xsgv))))
   (g$do-macro-call$7404$14xsgv
     g$do-macro-call$10840$14xsgv
     (case-lambda
       ((g$transformer$9392$14xsgv g$expr$9393$14xsgv)
        ((case-lambda
           ((g$out$9394$14xsgv)
            (begin
              ((letrec ((g$f$9395$14xsgv
                          (case-lambda
                            ((g$x$9396$14xsgv)
                             (if (not (g$stx?$7086$14xsgv g$x$9396$14xsgv))
                               (if (pair? g$x$9396$14xsgv)
                                 (begin
                                   (g$f$9395$14xsgv (car g$x$9396$14xsgv))
                                   (g$f$9395$14xsgv (cdr g$x$9396$14xsgv)))
                                 (if (vector? g$x$9396$14xsgv)
                                   (vector-for-each
                                     g$f$9395$14xsgv
                                     g$x$9396$14xsgv)
                                   (if (symbol? g$x$9396$14xsgv)
                                     (g$syntax-violation$7501$14xsgv
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9393$14xsgv
                                       g$x$9396$14xsgv)
                                     (void))))
                               (void))))))
                 g$f$9395$14xsgv)
               g$out$9394$14xsgv)
              (g$add-mark$7103$14xsgv
                (g$gen-mark$7098$14xsgv)
                g$out$9394$14xsgv
                g$expr$9393$14xsgv))))
         (g$transformer$9392$14xsgv
           (g$add-mark$7103$14xsgv
             g$anti-mark$7099$14xsgv
             g$expr$9393$14xsgv
             '#f))))))
   (g$chi-macro$7405$14xsgv
     g$chi-macro$10841$14xsgv
     (case-lambda
       ((g$p$9397$14xsgv g$e$9398$14xsgv)
        (g$do-macro-call$7404$14xsgv
          (g$macro-transformer$7402$14xsgv g$p$9397$14xsgv)
          g$e$9398$14xsgv))))
   (g$chi-local-macro$7406$14xsgv
     g$chi-local-macro$10842$14xsgv
     (case-lambda
       ((g$p$9399$14xsgv g$e$9400$14xsgv)
        (g$do-macro-call$7404$14xsgv
          (g$local-macro-transformer$7403$14xsgv g$p$9399$14xsgv)
          g$e$9400$14xsgv))))
   (g$chi-global-macro$7407$14xsgv
     g$chi-global-macro$10843$14xsgv
     (case-lambda
       ((g$p$9401$14xsgv g$e$9402$14xsgv)
        ((case-lambda
           ((g$lib$9403$14xsgv g$loc$9404$14xsgv)
            (begin
              (g$visit-library$6930$14xsgv g$lib$9403$14xsgv)
              ((case-lambda
                 ((g$x$9405$14xsgv)
                  ((case-lambda
                     ((g$transformer$9406$14xsgv)
                      (g$do-macro-call$7404$14xsgv
                        g$transformer$9406$14xsgv
                        g$e$9402$14xsgv)))
                   (if (procedure? g$x$9405$14xsgv)
                     g$x$9405$14xsgv
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9405$14xsgv)))))
               (symbol-value g$loc$9404$14xsgv)))))
         (car g$p$9401$14xsgv)
         (cdr g$p$9401$14xsgv)))))
   (g$chi-expr*$7408$14xsgv
     g$chi-expr*$10844$14xsgv
     (case-lambda
       ((g$e*$9407$14xsgv g$r$9408$14xsgv g$mr$9409$14xsgv)
        (if (null? g$e*$9407$14xsgv)
          '()
          ((case-lambda
             ((g$e$9410$14xsgv)
              (cons
                g$e$9410$14xsgv
                (g$chi-expr*$7408$14xsgv
                  (cdr g$e*$9407$14xsgv)
                  g$r$9408$14xsgv
                  g$mr$9409$14xsgv))))
           (g$chi-expr$7410$14xsgv
             (car g$e*$9407$14xsgv)
             g$r$9408$14xsgv
             g$mr$9409$14xsgv))))))
   (g$chi-application$7409$14xsgv
     g$chi-application$10845$14xsgv
     (case-lambda
       ((g$e$9411$14xsgv g$r$9412$14xsgv g$mr$9413$14xsgv)
        ((case-lambda
           ((g$t$9414$14xsgv)
            ((case-lambda
               ((g$ls/false$9415$14xsgv)
                (if g$ls/false$9415$14xsgv
                  (apply
                    (case-lambda
                      ((g$rator$9416$14xsgv g$rands$9417$14xsgv)
                       ((case-lambda
                          ((g$rator$9418$14xsgv)
                           (cons
                             g$rator$9418$14xsgv
                             (g$chi-expr*$7408$14xsgv
                               g$rands$9417$14xsgv
                               g$r$9412$14xsgv
                               g$mr$9413$14xsgv))))
                        (g$chi-expr$7410$14xsgv
                          g$rator$9416$14xsgv
                          g$r$9412$14xsgv
                          g$mr$9413$14xsgv))))
                    g$ls/false$9415$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$9414$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$9414$14xsgv
               '(any . each-any)))))
         g$e$9411$14xsgv))))
   (g$chi-expr$7410$14xsgv
     g$chi-expr$10846$14xsgv
     (case-lambda
       ((g$e$9419$14xsgv g$r$9420$14xsgv g$mr$9421$14xsgv)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7134$14xsgv g$e$9419$14xsgv g$r$9420$14xsgv)))
          (case-lambda
            ((g$type$9425$14xsgv g$value$9426$14xsgv g$kwd$9427$14xsgv)
             ((case-lambda
                ((g$kwd$9428$14xsgv g$value$9429$14xsgv g$type$9430$14xsgv)
                 ((case-lambda
                    ((g$t$9431$14xsgv)
                     (if (memv g$t$9431$14xsgv '(core-macro))
                       ((case-lambda
                          ((g$transformer$9432$14xsgv)
                           (g$transformer$9432$14xsgv
                             g$e$9419$14xsgv
                             g$r$9420$14xsgv
                             g$mr$9421$14xsgv)))
                        (g$core-macro-transformer$7399$14xsgv
                          g$value$9429$14xsgv))
                       (if (memv g$t$9431$14xsgv '(global))
                         ((case-lambda
                            ((g$lib$9433$14xsgv)
                             ((case-lambda
                                ((g$loc$9434$14xsgv)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7444$14xsgv)
                                        g$lib$9433$14xsgv)
                                       g$loc$9434$14xsgv))))))
                              (cdr g$value$9429$14xsgv))))
                          (car g$value$9429$14xsgv))
                         (if (memv g$t$9431$14xsgv '(core-prim))
                           ((case-lambda
                              ((g$name$9435$14xsgv)
                               (list 'primitive g$name$9435$14xsgv)))
                            g$value$9429$14xsgv)
                           (if (memv g$t$9431$14xsgv '(call))
                             (g$chi-application$7409$14xsgv
                               g$e$9419$14xsgv
                               g$r$9420$14xsgv
                               g$mr$9421$14xsgv)
                             (if (memv g$t$9431$14xsgv '(lexical))
                               ((case-lambda
                                  ((g$lex$9436$14xsgv) g$lex$9436$14xsgv))
                                (g$lexical-var$7336$14xsgv g$value$9429$14xsgv))
                               (if (memv
                                     g$t$9431$14xsgv
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7410$14xsgv
                                   (g$chi-global-macro$7407$14xsgv
                                     g$value$9429$14xsgv
                                     g$e$9419$14xsgv)
                                   g$r$9420$14xsgv
                                   g$mr$9421$14xsgv)
                                 (if (memv
                                       g$t$9431$14xsgv
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7410$14xsgv
                                     (g$chi-local-macro$7406$14xsgv
                                       g$value$9429$14xsgv
                                       g$e$9419$14xsgv)
                                     g$r$9420$14xsgv
                                     g$mr$9421$14xsgv)
                                   (if (memv g$t$9431$14xsgv '(macro macro!))
                                     (g$chi-expr$7410$14xsgv
                                       (g$chi-macro$7405$14xsgv
                                         g$value$9429$14xsgv
                                         g$e$9419$14xsgv)
                                       g$r$9420$14xsgv
                                       g$mr$9421$14xsgv)
                                     (if (memv g$t$9431$14xsgv '(constant))
                                       ((case-lambda
                                          ((g$datum$9437$14xsgv)
                                           (list 'quote g$datum$9437$14xsgv)))
                                        g$value$9429$14xsgv)
                                       (if (memv g$t$9431$14xsgv '(set!))
                                         (g$chi-set!$7411$14xsgv
                                           g$e$9419$14xsgv
                                           g$r$9420$14xsgv
                                           g$mr$9421$14xsgv)
                                         (if (memv g$t$9431$14xsgv '(begin))
                                           ((case-lambda
                                              ((g$t$9438$14xsgv)
                                               ((case-lambda
                                                  ((g$ls/false$9439$14xsgv)
                                                   (if g$ls/false$9439$14xsgv
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9440$14xsgv
                                                            g$x*$9441$14xsgv)
                                                          (g$build-sequence$7048$14xsgv
                                                            '#f
                                                            (g$chi-expr*$7408$14xsgv
                                                              (cons
                                                                g$x$9440$14xsgv
                                                                g$x*$9441$14xsgv)
                                                              g$r$9420$14xsgv
                                                              g$mr$9421$14xsgv))))
                                                       g$ls/false$9439$14xsgv)
                                                     (g$syntax-violation$7501$14xsgv
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9438$14xsgv))))
                                                (g$syntax-dispatch$7392$14xsgv
                                                  g$t$9438$14xsgv
                                                  '(_ any . each-any)))))
                                            g$e$9419$14xsgv)
                                           (if (memv
                                                 g$t$9431$14xsgv
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9442$14xsgv)
                                                 ((case-lambda
                                                    ((g$ls/false$9443$14xsgv)
                                                     (if (if g$ls/false$9443$14xsgv
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9444$14xsgv
                                                                    g$xrhs*$9445$14xsgv
                                                                    g$xbody$9446$14xsgv
                                                                    g$xbody*$9447$14xsgv)
                                                                  (if (not (g$valid-bound-ids?$7119$14xsgv
                                                                             g$xlhs*$9444$14xsgv))
                                                                    (g$syntax-violation$7501$14xsgv
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9419$14xsgv)
                                                                    (void))))
                                                               g$ls/false$9443$14xsgv))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9448$14xsgv
                                                              g$xrhs*$9449$14xsgv
                                                              g$xbody$9450$14xsgv
                                                              g$xbody*$9451$14xsgv)
                                                            ((case-lambda
                                                               ((g$xlab*$9452$14xsgv)
                                                                ((case-lambda
                                                                   ((g$xrib$9453$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$xb*$9454$14xsgv)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7048$14xsgv
                                                                              '#f
                                                                              (g$chi-expr*$7408$14xsgv
                                                                                (map (case-lambda
                                                                                       ((g$x$9455$14xsgv)
                                                                                        (g$add-subst$7104$14xsgv
                                                                                          g$xrib$9453$14xsgv
                                                                                          g$x$9455$14xsgv)))
                                                                                     (cons
                                                                                       g$xbody$9450$14xsgv
                                                                                       g$xbody*$9451$14xsgv))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9452$14xsgv
                                                                                       g$xb*$9454$14xsgv)
                                                                                  g$r$9420$14xsgv)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9452$14xsgv
                                                                                       g$xb*$9454$14xsgv)
                                                                                  g$mr$9421$14xsgv))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9456$14xsgv)
                                                                             (g$make-eval-transformer$7146$14xsgv
                                                                               (g$expand-transformer$7437$14xsgv
                                                                                 (if (eq? g$type$9430$14xsgv
                                                                                          'let-syntax)
                                                                                   g$x$9456$14xsgv
                                                                                   (g$add-subst$7104$14xsgv
                                                                                     g$xrib$9453$14xsgv
                                                                                     g$x$9456$14xsgv))
                                                                                 g$mr$9421$14xsgv))))
                                                                          g$xrhs*$9449$14xsgv))))
                                                                 (g$make-full-rib$7082$14xsgv
                                                                   g$xlhs*$9448$14xsgv
                                                                   g$xlab*$9452$14xsgv))))
                                                             (map g$gen-label$7060$14xsgv
                                                                  g$xlhs*$9448$14xsgv))))
                                                         g$ls/false$9443$14xsgv)
                                                       (g$syntax-violation$7501$14xsgv
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9442$14xsgv))))
                                                  (g$syntax-dispatch$7392$14xsgv
                                                    g$t$9442$14xsgv
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9419$14xsgv)
                                             (if (memv
                                                   g$t$9431$14xsgv
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7501$14xsgv
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9419$14xsgv)
                                               (if (memv
                                                     g$t$9431$14xsgv
                                                     '(syntax))
                                                 (g$syntax-violation$7501$14xsgv
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9419$14xsgv)
                                                 (if (memv
                                                       g$t$9431$14xsgv
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7501$14xsgv
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9457$14xsgv)
                                                           (if (memv
                                                                 g$t$9457$14xsgv
                                                                 '(define))
                                                             '"a definition"
                                                             (if (memv
                                                                   g$t$9457$14xsgv
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (memv
                                                                     g$t$9457$14xsgv
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (memv
                                                                       g$t$9457$14xsgv
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (memv
                                                                         g$t$9457$14xsgv
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9430$14xsgv)
                                                       '" was found where an expression was expected")
                                                     g$e$9419$14xsgv)
                                                   (if (memv
                                                         g$t$9431$14xsgv
                                                         '(mutable))
                                                     (g$syntax-violation$7501$14xsgv
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9419$14xsgv)
                                                     (g$syntax-violation$7501$14xsgv
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9419$14xsgv)))))))))))))))))))
                  g$type$9430$14xsgv)))
              g$kwd$9427$14xsgv
              g$value$9426$14xsgv
              g$type$9425$14xsgv)))))))
   (g$chi-set!$7411$14xsgv
     g$chi-set!$10847$14xsgv
     (case-lambda
       ((g$e$9458$14xsgv g$r$9459$14xsgv g$mr$9460$14xsgv)
        ((case-lambda
           ((g$t$9461$14xsgv)
            ((case-lambda
               ((g$ls/false$9462$14xsgv)
                (if (if g$ls/false$9462$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9463$14xsgv g$v$9464$14xsgv)
                             (g$id?$7114$14xsgv g$x$9463$14xsgv)))
                          g$ls/false$9462$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9465$14xsgv g$v$9466$14xsgv)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7134$14xsgv
                              g$x$9465$14xsgv
                              g$r$9459$14xsgv)))
                         (case-lambda
                           ((g$type$9470$14xsgv
                              g$value$9471$14xsgv
                              g$kwd$9472$14xsgv)
                            ((case-lambda
                               ((g$kwd$9473$14xsgv
                                  g$value$9474$14xsgv
                                  g$type$9475$14xsgv)
                                ((case-lambda
                                   ((g$t$9476$14xsgv)
                                    (if (memv g$t$9476$14xsgv '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7338$14xsgv
                                          g$value$9474$14xsgv
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7336$14xsgv
                                            g$value$9474$14xsgv)
                                          (g$chi-expr$7410$14xsgv
                                            g$v$9466$14xsgv
                                            g$r$9459$14xsgv
                                            g$mr$9460$14xsgv)))
                                      (if (memv g$t$9476$14xsgv '(core-prim))
                                        (g$syntax-violation$7501$14xsgv
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9458$14xsgv)
                                        (if (memv g$t$9476$14xsgv '(global))
                                          (g$syntax-violation$7501$14xsgv
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9458$14xsgv)
                                          (if (memv
                                                g$t$9476$14xsgv
                                                '(global-macro!))
                                            (g$chi-expr$7410$14xsgv
                                              (g$chi-global-macro$7407$14xsgv
                                                g$value$9474$14xsgv
                                                g$e$9458$14xsgv)
                                              g$r$9459$14xsgv
                                              g$mr$9460$14xsgv)
                                            (if (memv
                                                  g$t$9476$14xsgv
                                                  '(local-macro!))
                                              (g$chi-expr$7410$14xsgv
                                                (g$chi-local-macro$7406$14xsgv
                                                  g$value$9474$14xsgv
                                                  g$e$9458$14xsgv)
                                                g$r$9459$14xsgv
                                                g$mr$9460$14xsgv)
                                              (if (memv
                                                    g$t$9476$14xsgv
                                                    '(mutable))
                                                (g$syntax-violation$7501$14xsgv
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9458$14xsgv)
                                                (g$syntax-violation$7501$14xsgv
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9458$14xsgv)))))))))
                                 g$type$9475$14xsgv)))
                             g$kwd$9472$14xsgv
                             g$value$9471$14xsgv
                             g$type$9470$14xsgv))))))
                    g$ls/false$9462$14xsgv)
                  (g$syntax-violation$7501$14xsgv
                    '#f
                    '"invalid syntax"
                    g$t$9461$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$9461$14xsgv '(_ any any)))))
         g$e$9458$14xsgv))))
   (g$verify-formals$7412$14xsgv
     g$verify-formals$10848$14xsgv
     (case-lambda
       ((g$fmls$9477$14xsgv g$stx$9478$14xsgv)
        ((case-lambda
           ((g$t$9479$14xsgv)
            ((case-lambda
               ((g$ls/false$9480$14xsgv)
                (if g$ls/false$9480$14xsgv
                  (apply
                    (case-lambda
                      ((g$x*$9481$14xsgv)
                       (if (not (g$valid-bound-ids?$7119$14xsgv
                                  g$x*$9481$14xsgv))
                         (g$invalid-fmls-error$7357$14xsgv
                           g$stx$9478$14xsgv
                           g$fmls$9477$14xsgv)
                         (void))))
                    g$ls/false$9480$14xsgv)
                  ((case-lambda
                     ((g$t$9482$14xsgv)
                      ((case-lambda
                         ((g$ls/false$9483$14xsgv)
                          (if g$ls/false$9483$14xsgv
                            (apply
                              (case-lambda
                                ((g$x*$9484$14xsgv g$x$9485$14xsgv)
                                 (if (not (g$valid-bound-ids?$7119$14xsgv
                                            (cons
                                              g$x$9485$14xsgv
                                              g$x*$9484$14xsgv)))
                                   (g$invalid-fmls-error$7357$14xsgv
                                     g$stx$9478$14xsgv
                                     g$fmls$9477$14xsgv)
                                   (void))))
                              g$ls/false$9483$14xsgv)
                            ((case-lambda
                               ((g$t$9486$14xsgv)
                                ((case-lambda
                                   ((g$ls/false$9487$14xsgv)
                                    (if g$ls/false$9487$14xsgv
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9478$14xsgv)))
                                        g$ls/false$9487$14xsgv)
                                      (g$syntax-violation$7501$14xsgv
                                        '#f
                                        '"invalid syntax"
                                        g$t$9486$14xsgv))))
                                 (g$syntax-dispatch$7392$14xsgv
                                   g$t$9486$14xsgv
                                   '_))))
                             g$t$9482$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$9482$14xsgv
                         '#(each+ any () any)))))
                   g$t$9479$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$9479$14xsgv 'each-any))))
         g$fmls$9477$14xsgv))))
   (g$chi-lambda-clause$7413$14xsgv
     g$chi-lambda-clause$10849$14xsgv
     (case-lambda
       ((g$stx$9488$14xsgv
          g$fmls$9489$14xsgv
          g$body*$9490$14xsgv
          g$r$9491$14xsgv
          g$mr$9492$14xsgv)
        ((case-lambda
           ((g$t$9493$14xsgv)
            ((case-lambda
               ((g$ls/false$9494$14xsgv)
                (if g$ls/false$9494$14xsgv
                  (apply
                    (case-lambda
                      ((g$x*$9495$14xsgv)
                       (begin
                         (g$verify-formals$7412$14xsgv
                           g$fmls$9489$14xsgv
                           g$stx$9488$14xsgv)
                         ((case-lambda
                            ((g$lex*$9496$14xsgv g$lab*$9497$14xsgv)
                             (values
                               g$lex*$9496$14xsgv
                               (g$chi-internal$7421$14xsgv
                                 (g$add-subst$7104$14xsgv
                                   (g$make-full-rib$7082$14xsgv
                                     g$x*$9495$14xsgv
                                     g$lab*$9497$14xsgv)
                                   g$body*$9490$14xsgv)
                                 (g$add-lexicals$7340$14xsgv
                                   g$lab*$9497$14xsgv
                                   g$lex*$9496$14xsgv
                                   g$r$9491$14xsgv)
                                 g$mr$9492$14xsgv))))
                          (map g$gen-lexical$7058$14xsgv g$x*$9495$14xsgv)
                          (map g$gen-label$7060$14xsgv g$x*$9495$14xsgv)))))
                    g$ls/false$9494$14xsgv)
                  ((case-lambda
                     ((g$t$9498$14xsgv)
                      ((case-lambda
                         ((g$ls/false$9499$14xsgv)
                          (if g$ls/false$9499$14xsgv
                            (apply
                              (case-lambda
                                ((g$x*$9500$14xsgv g$x$9501$14xsgv)
                                 (begin
                                   (g$verify-formals$7412$14xsgv
                                     g$fmls$9489$14xsgv
                                     g$stx$9488$14xsgv)
                                   ((case-lambda
                                      ((g$lex*$9502$14xsgv
                                         g$lab*$9503$14xsgv
                                         g$lex$9504$14xsgv
                                         g$lab$9505$14xsgv)
                                       (values
                                         (append
                                           g$lex*$9502$14xsgv
                                           g$lex$9504$14xsgv)
                                         (g$chi-internal$7421$14xsgv
                                           (g$add-subst$7104$14xsgv
                                             (g$make-full-rib$7082$14xsgv
                                               (cons
                                                 g$x$9501$14xsgv
                                                 g$x*$9500$14xsgv)
                                               (cons
                                                 g$lab$9505$14xsgv
                                                 g$lab*$9503$14xsgv))
                                             g$body*$9490$14xsgv)
                                           (g$add-lexicals$7340$14xsgv
                                             (cons
                                               g$lab$9505$14xsgv
                                               g$lab*$9503$14xsgv)
                                             (cons
                                               g$lex$9504$14xsgv
                                               g$lex*$9502$14xsgv)
                                             g$r$9491$14xsgv)
                                           g$mr$9492$14xsgv))))
                                    (map g$gen-lexical$7058$14xsgv
                                         g$x*$9500$14xsgv)
                                    (map g$gen-label$7060$14xsgv
                                         g$x*$9500$14xsgv)
                                    (g$gen-lexical$7058$14xsgv g$x$9501$14xsgv)
                                    (g$gen-label$7060$14xsgv
                                      g$x$9501$14xsgv)))))
                              g$ls/false$9499$14xsgv)
                            ((case-lambda
                               ((g$t$9506$14xsgv)
                                ((case-lambda
                                   ((g$ls/false$9507$14xsgv)
                                    (if g$ls/false$9507$14xsgv
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7501$14xsgv
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9489$14xsgv)))
                                        g$ls/false$9507$14xsgv)
                                      (g$syntax-violation$7501$14xsgv
                                        '#f
                                        '"invalid syntax"
                                        g$t$9506$14xsgv))))
                                 (g$syntax-dispatch$7392$14xsgv
                                   g$t$9506$14xsgv
                                   '_))))
                             g$t$9498$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$9498$14xsgv
                         '#(each+ any () any)))))
                   g$t$9493$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$9493$14xsgv 'each-any))))
         g$fmls$9489$14xsgv))))
   (g$chi-lambda-clause*$7414$14xsgv
     g$chi-lambda-clause*$10850$14xsgv
     (case-lambda
       ((g$stx$9508$14xsgv
          g$fmls*$9509$14xsgv
          g$body**$9510$14xsgv
          g$r$9511$14xsgv
          g$mr$9512$14xsgv)
        (if (null? g$fmls*$9509$14xsgv)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7413$14xsgv
                 g$stx$9508$14xsgv
                 (car g$fmls*$9509$14xsgv)
                 (car g$body**$9510$14xsgv)
                 g$r$9511$14xsgv
                 g$mr$9512$14xsgv)))
            (case-lambda
              ((g$a$9515$14xsgv g$b$9516$14xsgv)
               ((case-lambda
                  ((g$b$9517$14xsgv g$a$9518$14xsgv)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7414$14xsgv
                          g$stx$9508$14xsgv
                          (cdr g$fmls*$9509$14xsgv)
                          (cdr g$body**$9510$14xsgv)
                          g$r$9511$14xsgv
                          g$mr$9512$14xsgv)))
                     (case-lambda
                       ((g$a*$9521$14xsgv g$b*$9522$14xsgv)
                        ((case-lambda
                           ((g$b*$9523$14xsgv g$a*$9524$14xsgv)
                            (values
                              (cons g$a$9518$14xsgv g$a*$9524$14xsgv)
                              (cons g$b$9517$14xsgv g$b*$9523$14xsgv))))
                         g$b*$9522$14xsgv
                         g$a*$9521$14xsgv))))))
                g$b$9516$14xsgv
                g$a$9515$14xsgv))))))))
   (g$chi-defun$7415$14xsgv
     g$chi-defun$10851$14xsgv
     (case-lambda
       ((g$x$9525$14xsgv g$r$9526$14xsgv g$mr$9527$14xsgv)
        ((case-lambda
           ((g$fmls$9528$14xsgv g$body*$9529$14xsgv)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7413$14xsgv
                   g$fmls$9528$14xsgv
                   g$fmls$9528$14xsgv
                   g$body*$9529$14xsgv
                   g$r$9526$14xsgv
                   g$mr$9527$14xsgv)))
              (case-lambda
                ((g$fmls$9532$14xsgv g$body$9533$14xsgv)
                 ((case-lambda
                    ((g$body$9534$14xsgv g$fmls$9535$14xsgv)
                     (g$build-lambda$7045$14xsgv
                       '#f
                       g$fmls$9535$14xsgv
                       g$body$9534$14xsgv)))
                  g$body$9533$14xsgv
                  g$fmls$9532$14xsgv))))))
         (car g$x$9525$14xsgv)
         (cdr g$x$9525$14xsgv)))))
   (g$chi-rhs$7416$14xsgv
     g$chi-rhs$10852$14xsgv
     (case-lambda
       ((g$rhs$9536$14xsgv g$r$9537$14xsgv g$mr$9538$14xsgv)
        ((case-lambda
           ((g$t$9539$14xsgv)
            (if (memv g$t$9539$14xsgv '(defun))
              (g$chi-defun$7415$14xsgv
                (cdr g$rhs$9536$14xsgv)
                g$r$9537$14xsgv
                g$mr$9538$14xsgv)
              (if (memv g$t$9539$14xsgv '(expr))
                ((case-lambda
                   ((g$expr$9540$14xsgv)
                    (g$chi-expr$7410$14xsgv
                      g$expr$9540$14xsgv
                      g$r$9537$14xsgv
                      g$mr$9538$14xsgv)))
                 (cdr g$rhs$9536$14xsgv))
                (if (memv g$t$9539$14xsgv '(top-expr))
                  ((case-lambda
                     ((g$expr$9541$14xsgv)
                      (g$build-sequence$7048$14xsgv
                        '#f
                        (list
                          (g$chi-expr$7410$14xsgv
                            g$expr$9541$14xsgv
                            g$r$9537$14xsgv
                            g$mr$9538$14xsgv)
                          (g$build-void$7049$14xsgv)))))
                   (cdr g$rhs$9536$14xsgv))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9536$14xsgv))))))
         (car g$rhs$9536$14xsgv)))))
   (g$expand-interaction-rhs*/init*$7417$14xsgv
     g$expand-interaction-rhs*/init*$10853$14xsgv
     (case-lambda
       ((g$lhs*$9542$14xsgv
          g$rhs*$9543$14xsgv
          g$init*$9544$14xsgv
          g$r$9545$14xsgv
          g$mr$9546$14xsgv)
        ((letrec ((g$f$9547$14xsgv
                    (case-lambda
                      ((g$lhs*$9548$14xsgv g$rhs*$9549$14xsgv)
                       (if (null? g$lhs*$9548$14xsgv)
                         (map (case-lambda
                                ((g$x$9550$14xsgv)
                                 (g$chi-expr$7410$14xsgv
                                   g$x$9550$14xsgv
                                   g$r$9545$14xsgv
                                   g$mr$9546$14xsgv)))
                              g$init*$9544$14xsgv)
                         ((case-lambda
                            ((g$lhs$9551$14xsgv g$rhs$9552$14xsgv)
                             ((case-lambda
                                ((g$t$9553$14xsgv)
                                 (if (memv g$t$9553$14xsgv '(defun))
                                   ((case-lambda
                                      ((g$rhs$9554$14xsgv)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9551$14xsgv
                                           g$rhs$9554$14xsgv)
                                         (g$f$9547$14xsgv
                                           (cdr g$lhs*$9548$14xsgv)
                                           (cdr g$rhs*$9549$14xsgv)))))
                                    (g$chi-defun$7415$14xsgv
                                      (cdr g$rhs$9552$14xsgv)
                                      g$r$9545$14xsgv
                                      g$mr$9546$14xsgv))
                                   (if (memv g$t$9553$14xsgv '(expr))
                                     ((case-lambda
                                        ((g$rhs$9555$14xsgv)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9551$14xsgv
                                             g$rhs$9555$14xsgv)
                                           (g$f$9547$14xsgv
                                             (cdr g$lhs*$9548$14xsgv)
                                             (cdr g$rhs*$9549$14xsgv)))))
                                      (g$chi-expr$7410$14xsgv
                                        (cdr g$rhs$9552$14xsgv)
                                        g$r$9545$14xsgv
                                        g$mr$9546$14xsgv))
                                     (if (memv g$t$9553$14xsgv '(top-expr))
                                       ((case-lambda
                                          ((g$e$9556$14xsgv)
                                           (cons
                                             g$e$9556$14xsgv
                                             (g$f$9547$14xsgv
                                               (cdr g$lhs*$9548$14xsgv)
                                               (cdr g$rhs*$9549$14xsgv)))))
                                        (g$chi-expr$7410$14xsgv
                                          (cdr g$rhs$9552$14xsgv)
                                          g$r$9545$14xsgv
                                          g$mr$9546$14xsgv))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9552$14xsgv))))))
                              (car g$rhs$9552$14xsgv))))
                          (car g$lhs*$9548$14xsgv)
                          (car g$rhs*$9549$14xsgv)))))))
           g$f$9547$14xsgv)
         g$lhs*$9542$14xsgv
         g$rhs*$9543$14xsgv))))
   (g$chi-rhs*$7418$14xsgv
     g$chi-rhs*$10854$14xsgv
     (case-lambda
       ((g$rhs*$9557$14xsgv g$r$9558$14xsgv g$mr$9559$14xsgv)
        ((letrec ((g$f$9560$14xsgv
                    (case-lambda
                      ((g$ls$9561$14xsgv)
                       (if (null? g$ls$9561$14xsgv)
                         '()
                         ((case-lambda
                            ((g$a$9562$14xsgv)
                             (cons
                               g$a$9562$14xsgv
                               (g$f$9560$14xsgv (cdr g$ls$9561$14xsgv)))))
                          (g$chi-rhs$7416$14xsgv
                            (car g$ls$9561$14xsgv)
                            g$r$9558$14xsgv
                            g$mr$9559$14xsgv)))))))
           g$f$9560$14xsgv)
         g$rhs*$9557$14xsgv))))
   (g$find-bound=?$7419$14xsgv
     g$find-bound=?$10855$14xsgv
     (case-lambda
       ((g$x$9563$14xsgv g$lhs*$9564$14xsgv g$rhs*$9565$14xsgv)
        (if (null? g$lhs*$9564$14xsgv)
          '#f
          (if (g$bound-id=?$7117$14xsgv
                g$x$9563$14xsgv
                (car g$lhs*$9564$14xsgv))
            (car g$rhs*$9565$14xsgv)
            (g$find-bound=?$7419$14xsgv
              g$x$9563$14xsgv
              (cdr g$lhs*$9564$14xsgv)
              (cdr g$rhs*$9565$14xsgv)))))))
   (g$find-dups$7420$14xsgv
     g$find-dups$10856$14xsgv
     (case-lambda
       ((g$ls$9566$14xsgv)
        ((letrec ((g$f$9567$14xsgv
                    (case-lambda
                      ((g$ls$9568$14xsgv g$dups$9569$14xsgv)
                       (if (null? g$ls$9568$14xsgv)
                         g$dups$9569$14xsgv
                         ((case-lambda
                            ((g$t$9570$14xsgv)
                             (if g$t$9570$14xsgv
                               ((case-lambda
                                  ((g$x$9571$14xsgv)
                                   (g$f$9567$14xsgv
                                     (cdr g$ls$9568$14xsgv)
                                     (cons
                                       (list
                                         (car g$ls$9568$14xsgv)
                                         g$x$9571$14xsgv)
                                       g$dups$9569$14xsgv))))
                                g$t$9570$14xsgv)
                               (g$f$9567$14xsgv
                                 (cdr g$ls$9568$14xsgv)
                                 g$dups$9569$14xsgv))))
                          (g$find-bound=?$7419$14xsgv
                            (car g$ls$9568$14xsgv)
                            (cdr g$ls$9568$14xsgv)
                            (cdr g$ls$9568$14xsgv))))))))
           g$f$9567$14xsgv)
         g$ls$9566$14xsgv
         '()))))
   (g$chi-internal$7421$14xsgv
     g$chi-internal$10857$14xsgv
     (case-lambda
       ((g$e*$9572$14xsgv g$r$9573$14xsgv g$mr$9574$14xsgv)
        ((case-lambda
           ((g$rib$9575$14xsgv)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7436$14xsgv
                   (map (case-lambda
                          ((g$x$9583$14xsgv)
                           (g$add-subst$7104$14xsgv
                             g$rib$9575$14xsgv
                             g$x$9583$14xsgv)))
                        (g$syntax->list$7113$14xsgv g$e*$9572$14xsgv))
                   g$r$9573$14xsgv
                   g$mr$9574$14xsgv
                   '()
                   '()
                   '()
                   '()
                   g$rib$9575$14xsgv
                   '#f)))
              (case-lambda
                ((g$e*$9584$14xsgv
                   g$r$9585$14xsgv
                   g$mr$9586$14xsgv
                   g$lex*$9587$14xsgv
                   g$rhs*$9588$14xsgv
                   g$mod**$9589$14xsgv
                   g$kwd*$9590$14xsgv)
                 ((case-lambda
                    ((g$kwd*$9591$14xsgv
                       g$mod**$9592$14xsgv
                       g$rhs*$9593$14xsgv
                       g$lex*$9594$14xsgv
                       g$mr$9595$14xsgv
                       g$r$9596$14xsgv
                       g$e*$9597$14xsgv)
                     (begin
                       (if (null? g$e*$9597$14xsgv)
                         (g$syntax-violation$7501$14xsgv
                           '#f
                           '"no expression in body"
                           g$e*$9597$14xsgv)
                         (void))
                       ((case-lambda
                          ((g$init*$9598$14xsgv)
                           ((case-lambda
                              ((g$rhs*$9599$14xsgv)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7051$14xsgv
                                     '#f
                                     (reverse g$lex*$9594$14xsgv)
                                     (reverse g$rhs*$9599$14xsgv)
                                     (g$build-sequence$7048$14xsgv
                                       '#f
                                       g$init*$9598$14xsgv)))))))
                            (g$chi-rhs*$7418$14xsgv
                              g$rhs*$9593$14xsgv
                              g$r$9596$14xsgv
                              g$mr$9595$14xsgv))))
                        (g$chi-expr*$7408$14xsgv
                          (append
                            (apply append (reverse g$mod**$9592$14xsgv))
                            g$e*$9597$14xsgv)
                          g$r$9596$14xsgv
                          g$mr$9595$14xsgv)))))
                  g$kwd*$9590$14xsgv
                  g$mod**$9589$14xsgv
                  g$rhs*$9588$14xsgv
                  g$lex*$9587$14xsgv
                  g$mr$9586$14xsgv
                  g$r$9585$14xsgv
                  g$e*$9584$14xsgv))))))
         (g$make-empty-rib$7077$14xsgv)))))
   (g$parse-module$7422$14xsgv
     g$parse-module$10858$14xsgv
     (case-lambda
       ((g$e$9600$14xsgv)
        ((case-lambda
           ((g$t$9601$14xsgv)
            ((case-lambda
               ((g$ls/false$9602$14xsgv)
                (if g$ls/false$9602$14xsgv
                  (apply
                    (case-lambda
                      ((g$export*$9603$14xsgv g$b*$9604$14xsgv)
                       (begin
                         (if (not (g$for-all$5356$14xsgv
                                    g$id?$7114$14xsgv
                                    g$export*$9603$14xsgv))
                           (g$syntax-violation$7501$14xsgv
                             '#f
                             '"module exports must be identifiers"
                             g$e$9600$14xsgv)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9603$14xsgv)
                           g$b*$9604$14xsgv))))
                    g$ls/false$9602$14xsgv)
                  ((case-lambda
                     ((g$t$9605$14xsgv)
                      ((case-lambda
                         ((g$ls/false$9606$14xsgv)
                          (if g$ls/false$9606$14xsgv
                            (apply
                              (case-lambda
                                ((g$name$9607$14xsgv
                                   g$export*$9608$14xsgv
                                   g$b*$9609$14xsgv)
                                 (begin
                                   (if (not (g$id?$7114$14xsgv
                                              g$name$9607$14xsgv))
                                     (g$syntax-violation$7501$14xsgv
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9600$14xsgv)
                                     (void))
                                   (if (not (g$for-all$5356$14xsgv
                                              g$id?$7114$14xsgv
                                              g$export*$9608$14xsgv))
                                     (g$syntax-violation$7501$14xsgv
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9600$14xsgv)
                                     (void))
                                   (values
                                     g$name$9607$14xsgv
                                     (list->vector g$export*$9608$14xsgv)
                                     g$b*$9609$14xsgv))))
                              g$ls/false$9606$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$9605$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$9605$14xsgv
                         '(_ any each-any . each-any)))))
                   g$t$9601$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$9601$14xsgv
               '(_ each-any . each-any)))))
         g$e$9600$14xsgv))))
   (g$8450$7423$14xsgv
     g$8450$10859$14xsgv
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8453$14xsgv
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8452$7424$14xsgv g$8452$10860$14xsgv '#f)
   (g$8451$7425$14xsgv
     g$8451$10861$14xsgv
     (make-record-constructor-descriptor
       g$8450$7423$14xsgv
       '#f
       g$8452$7424$14xsgv))
   (g$module-interface?$7426$14xsgv
     g$module-interface?$10862$14xsgv
     (record-predicate g$8450$7423$14xsgv))
   (g$make-module-interface$7427$14xsgv
     g$make-module-interface$10863$14xsgv
     (record-constructor g$8451$7425$14xsgv))
   (g$module-interface-first-mark$7428$14xsgv
     g$module-interface-first-mark$10864$14xsgv
     (record-accessor g$8450$7423$14xsgv '0))
   (g$module-interface-exp-id-vec$7429$14xsgv
     g$module-interface-exp-id-vec$10865$14xsgv
     (record-accessor g$8450$7423$14xsgv '1))
   (g$module-interface-exp-lab-vec$7430$14xsgv
     g$module-interface-exp-lab-vec$10866$14xsgv
     (record-accessor g$8450$7423$14xsgv '2))
   (g$set-module-interface-first-mark!$7431$14xsgv
     g$set-module-interface-first-mark!$10867$14xsgv
     (record-mutator g$8450$7423$14xsgv '0))
   (g$set-module-interface-exp-id-vec!$7432$14xsgv
     g$set-module-interface-exp-id-vec!$10868$14xsgv
     (record-mutator g$8450$7423$14xsgv '1))
   (g$set-module-interface-exp-lab-vec!$7433$14xsgv
     g$set-module-interface-exp-lab-vec!$10869$14xsgv
     (record-mutator g$8450$7423$14xsgv '2))
   (g$module-interface-exp-id*$7434$14xsgv
     g$module-interface-exp-id*$10870$14xsgv
     (case-lambda
       ((g$iface$9610$14xsgv g$id$9611$14xsgv)
        (letrec* ((g$diff-marks$9612$14xsgv
                    (case-lambda
                      ((g$ls$9616$14xsgv g$x$9617$14xsgv)
                       (begin
                         (if (null? g$ls$9616$14xsgv)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9618$14xsgv)
                             (if (eq? g$a$9618$14xsgv g$x$9617$14xsgv)
                               '()
                               (cons
                                 g$a$9618$14xsgv
                                 (g$diff-marks$9612$14xsgv
                                   (cdr g$ls$9616$14xsgv)
                                   g$x$9617$14xsgv)))))
                          (car g$ls$9616$14xsgv)))))))
          ((case-lambda
             ((g$diff$9613$14xsgv g$id-vec$9614$14xsgv)
              (if (null? g$diff$9613$14xsgv)
                g$id-vec$9614$14xsgv
                (vector-map
                  (case-lambda
                    ((g$x$9615$14xsgv)
                     (g$make-stx$7087$14xsgv
                       (g$stx-expr$7088$14xsgv g$x$9615$14xsgv)
                       (append
                         g$diff$9613$14xsgv
                         (g$stx-mark*$7089$14xsgv g$x$9615$14xsgv))
                       '()
                       '())))
                  g$id-vec$9614$14xsgv))))
           (g$diff-marks$9612$14xsgv
             (g$stx-mark*$7089$14xsgv g$id$9611$14xsgv)
             (g$module-interface-first-mark$7428$14xsgv g$iface$9610$14xsgv))
           (g$module-interface-exp-id-vec$7429$14xsgv g$iface$9610$14xsgv))))))
   (g$chi-internal-module$7435$14xsgv
     g$chi-internal-module$10871$14xsgv
     (case-lambda
       ((g$e$9619$14xsgv
          g$r$9620$14xsgv
          g$mr$9621$14xsgv
          g$lex*$9622$14xsgv
          g$rhs*$9623$14xsgv
          g$mod**$9624$14xsgv
          g$kwd*$9625$14xsgv)
        (call-with-values
          (case-lambda (() (g$parse-module$7422$14xsgv g$e$9619$14xsgv)))
          (case-lambda
            ((g$name$9629$14xsgv g$exp-id*$9630$14xsgv g$e*$9631$14xsgv)
             ((case-lambda
                ((g$e*$9632$14xsgv g$exp-id*$9633$14xsgv g$name$9634$14xsgv)
                 ((case-lambda
                    ((g$rib$9635$14xsgv)
                     ((case-lambda
                        ((g$e*$9636$14xsgv)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7436$14xsgv
                                    g$e*$9636$14xsgv
                                    g$r$9620$14xsgv
                                    g$mr$9621$14xsgv
                                    g$lex*$9622$14xsgv
                                    g$rhs*$9623$14xsgv
                                    g$mod**$9624$14xsgv
                                    g$kwd*$9625$14xsgv
                                    g$rib$9635$14xsgv
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9644$14xsgv
                                    g$r$9645$14xsgv
                                    g$mr$9646$14xsgv
                                    g$lex*$9647$14xsgv
                                    g$rhs*$9648$14xsgv
                                    g$mod**$9649$14xsgv
                                    g$kwd*$9650$14xsgv)
                                  ((case-lambda
                                     ((g$kwd*$9651$14xsgv
                                        g$mod**$9652$14xsgv
                                        g$rhs*$9653$14xsgv
                                        g$lex*$9654$14xsgv
                                        g$mr$9655$14xsgv
                                        g$r$9656$14xsgv
                                        g$e*$9657$14xsgv)
                                      ((case-lambda
                                         ((g$exp-lab*$9658$14xsgv
                                            g$mod**$9659$14xsgv)
                                          (if (not g$name$9634$14xsgv)
                                            (values
                                              g$lex*$9654$14xsgv
                                              g$rhs*$9653$14xsgv
                                              g$exp-id*$9633$14xsgv
                                              g$exp-lab*$9658$14xsgv
                                              g$r$9656$14xsgv
                                              g$mr$9655$14xsgv
                                              g$mod**$9659$14xsgv
                                              g$kwd*$9651$14xsgv)
                                            ((case-lambda
                                               ((g$lab$9660$14xsgv
                                                  g$iface$9661$14xsgv)
                                                (values
                                                  g$lex*$9654$14xsgv
                                                  g$rhs*$9653$14xsgv
                                                  (vector g$name$9634$14xsgv)
                                                  (vector g$lab$9660$14xsgv)
                                                  (cons
                                                    (cons
                                                      g$lab$9660$14xsgv
                                                      (cons
                                                        '$module
                                                        g$iface$9661$14xsgv))
                                                    g$r$9656$14xsgv)
                                                  (cons
                                                    (cons
                                                      g$lab$9660$14xsgv
                                                      (cons
                                                        '$module
                                                        g$iface$9661$14xsgv))
                                                    g$mr$9655$14xsgv)
                                                  g$mod**$9659$14xsgv
                                                  g$kwd*$9651$14xsgv)))
                                             (g$gen-label$7060$14xsgv 'module)
                                             (g$make-module-interface$7427$14xsgv
                                               (car (g$stx-mark*$7089$14xsgv
                                                      g$name$9634$14xsgv))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9662$14xsgv)
                                                    (g$make-stx$7087$14xsgv
                                                      (g$stx-expr$7088$14xsgv
                                                        g$x$9662$14xsgv)
                                                      (g$stx-mark*$7089$14xsgv
                                                        g$x$9662$14xsgv)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9633$14xsgv)
                                               g$exp-lab*$9658$14xsgv)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9663$14xsgv)
                                            ((case-lambda
                                               ((g$t$9664$14xsgv)
                                                (if g$t$9664$14xsgv
                                                  g$t$9664$14xsgv
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7501$14xsgv
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9663$14xsgv)))))
                                             (g$id->label$7127$14xsgv
                                               (g$make-stx$7087$14xsgv
                                                 (g$id->sym$7115$14xsgv
                                                   g$x$9663$14xsgv)
                                                 (g$stx-mark*$7089$14xsgv
                                                   g$x$9663$14xsgv)
                                                 (list g$rib$9635$14xsgv)
                                                 '())))))
                                         g$exp-id*$9633$14xsgv)
                                       (cons
                                         g$e*$9657$14xsgv
                                         g$mod**$9652$14xsgv))))
                                   g$kwd*$9650$14xsgv
                                   g$mod**$9649$14xsgv
                                   g$rhs*$9648$14xsgv
                                   g$lex*$9647$14xsgv
                                   g$mr$9646$14xsgv
                                   g$r$9645$14xsgv
                                   g$e*$9644$14xsgv)))))))))
                      (map (case-lambda
                             ((g$x$9665$14xsgv)
                              (g$add-subst$7104$14xsgv
                                g$rib$9635$14xsgv
                                g$x$9665$14xsgv)))
                           (g$syntax->list$7113$14xsgv g$e*$9632$14xsgv)))))
                  (g$make-empty-rib$7077$14xsgv))))
              g$e*$9631$14xsgv
              g$exp-id*$9630$14xsgv
              g$name$9629$14xsgv)))))))
   (g$chi-body*$7436$14xsgv
     g$chi-body*$10872$14xsgv
     (case-lambda
       ((g$e*$9666$14xsgv
          g$r$9667$14xsgv
          g$mr$9668$14xsgv
          g$lex*$9669$14xsgv
          g$rhs*$9670$14xsgv
          g$mod**$9671$14xsgv
          g$kwd*$9672$14xsgv
          g$rib$9673$14xsgv
          g$top?$9674$14xsgv)
        (if (null? g$e*$9666$14xsgv)
          (values
            g$e*$9666$14xsgv
            g$r$9667$14xsgv
            g$mr$9668$14xsgv
            g$lex*$9669$14xsgv
            g$rhs*$9670$14xsgv
            g$mod**$9671$14xsgv
            g$kwd*$9672$14xsgv)
          ((case-lambda
             ((g$e$9675$14xsgv)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7134$14xsgv g$e$9675$14xsgv g$r$9667$14xsgv)))
                (case-lambda
                  ((g$type$9679$14xsgv g$value$9680$14xsgv g$kwd$9681$14xsgv)
                   ((case-lambda
                      ((g$kwd$9682$14xsgv
                         g$value$9683$14xsgv
                         g$type$9684$14xsgv)
                       ((case-lambda
                          ((g$kwd*$9685$14xsgv)
                           ((case-lambda
                              ((g$t$9686$14xsgv)
                               (if (memv g$t$9686$14xsgv '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7332$14xsgv
                                        g$e$9675$14xsgv)))
                                   (case-lambda
                                     ((g$id$9689$14xsgv g$rhs$9690$14xsgv)
                                      ((case-lambda
                                         ((g$rhs$9691$14xsgv g$id$9692$14xsgv)
                                          (begin
                                            (if (g$bound-id-member?$7121$14xsgv
                                                  g$id$9692$14xsgv
                                                  g$kwd*$9685$14xsgv)
                                              (g$syntax-violation$7501$14xsgv
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9675$14xsgv)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7062$14xsgv
                                                   g$id$9692$14xsgv
                                                   g$rib$9673$14xsgv)))
                                              (case-lambda
                                                ((g$lab$9695$14xsgv
                                                   g$lex$9696$14xsgv)
                                                 ((case-lambda
                                                    ((g$lex$9697$14xsgv
                                                       g$lab$9698$14xsgv)
                                                     (begin
                                                       (g$extend-rib!$7078$14xsgv
                                                         g$rib$9673$14xsgv
                                                         g$id$9692$14xsgv
                                                         g$lab$9698$14xsgv)
                                                       (g$chi-body*$7436$14xsgv
                                                         (cdr g$e*$9666$14xsgv)
                                                         (g$add-lexical$7339$14xsgv
                                                           g$lab$9698$14xsgv
                                                           g$lex$9697$14xsgv
                                                           g$r$9667$14xsgv)
                                                         g$mr$9668$14xsgv
                                                         (cons
                                                           g$lex$9697$14xsgv
                                                           g$lex*$9669$14xsgv)
                                                         (cons
                                                           g$rhs$9691$14xsgv
                                                           g$rhs*$9670$14xsgv)
                                                         g$mod**$9671$14xsgv
                                                         g$kwd*$9685$14xsgv
                                                         g$rib$9673$14xsgv
                                                         g$top?$9674$14xsgv))))
                                                  g$lex$9696$14xsgv
                                                  g$lab$9695$14xsgv)))))))
                                       g$rhs$9690$14xsgv
                                       g$id$9689$14xsgv))))
                                 (if (memv g$t$9686$14xsgv '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7333$14xsgv
                                          g$e$9675$14xsgv)))
                                     (case-lambda
                                       ((g$id$9701$14xsgv g$rhs$9702$14xsgv)
                                        ((case-lambda
                                           ((g$rhs$9703$14xsgv g$id$9704$14xsgv)
                                            (begin
                                              (if (g$bound-id-member?$7121$14xsgv
                                                    g$id$9704$14xsgv
                                                    g$kwd*$9685$14xsgv)
                                                (g$syntax-violation$7501$14xsgv
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9675$14xsgv)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9705$14xsgv
                                                    g$expanded-rhs$9706$14xsgv)
                                                  (begin
                                                    (g$extend-rib!$7078$14xsgv
                                                      g$rib$9673$14xsgv
                                                      g$id$9704$14xsgv
                                                      g$lab$9705$14xsgv)
                                                    ((case-lambda
                                                       ((g$b$9707$14xsgv)
                                                        (g$chi-body*$7436$14xsgv
                                                          (cdr g$e*$9666$14xsgv)
                                                          (cons
                                                            (cons
                                                              g$lab$9705$14xsgv
                                                              g$b$9707$14xsgv)
                                                            g$r$9667$14xsgv)
                                                          (cons
                                                            (cons
                                                              g$lab$9705$14xsgv
                                                              g$b$9707$14xsgv)
                                                            g$mr$9668$14xsgv)
                                                          g$lex*$9669$14xsgv
                                                          g$rhs*$9670$14xsgv
                                                          g$mod**$9671$14xsgv
                                                          g$kwd*$9685$14xsgv
                                                          g$rib$9673$14xsgv
                                                          g$top?$9674$14xsgv)))
                                                     (g$make-eval-transformer$7146$14xsgv
                                                       g$expanded-rhs$9706$14xsgv)))))
                                               (g$gen-define-label$7063$14xsgv
                                                 g$id$9704$14xsgv
                                                 g$rib$9673$14xsgv)
                                               (g$expand-transformer$7437$14xsgv
                                                 g$rhs$9703$14xsgv
                                                 g$mr$9668$14xsgv)))))
                                         g$rhs$9702$14xsgv
                                         g$id$9701$14xsgv))))
                                   (if (memv
                                         g$t$9686$14xsgv
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9708$14xsgv)
                                         ((case-lambda
                                            ((g$ls/false$9709$14xsgv)
                                             (if (if g$ls/false$9709$14xsgv
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9710$14xsgv
                                                            g$xrhs*$9711$14xsgv
                                                            g$xbody*$9712$14xsgv)
                                                          (if (not (g$valid-bound-ids?$7119$14xsgv
                                                                     g$xlhs*$9710$14xsgv))
                                                            (g$syntax-violation$7501$14xsgv
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9675$14xsgv)
                                                            (void))))
                                                       g$ls/false$9709$14xsgv))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9713$14xsgv
                                                      g$xrhs*$9714$14xsgv
                                                      g$xbody*$9715$14xsgv)
                                                    ((case-lambda
                                                       ((g$xlab*$9716$14xsgv)
                                                        ((case-lambda
                                                           ((g$xrib$9717$14xsgv)
                                                            ((case-lambda
                                                               ((g$xb*$9718$14xsgv)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7436$14xsgv
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9719$14xsgv)
                                                                                (g$add-subst$7104$14xsgv
                                                                                  g$xrib$9717$14xsgv
                                                                                  g$x$9719$14xsgv)))
                                                                             g$xbody*$9715$14xsgv)
                                                                        (cdr g$e*$9666$14xsgv))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9716$14xsgv
                                                                             g$xb*$9718$14xsgv)
                                                                        g$r$9667$14xsgv)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9716$14xsgv
                                                                             g$xb*$9718$14xsgv)
                                                                        g$mr$9668$14xsgv)
                                                                      g$lex*$9669$14xsgv
                                                                      g$rhs*$9670$14xsgv
                                                                      g$mod**$9671$14xsgv
                                                                      g$kwd*$9685$14xsgv
                                                                      g$rib$9673$14xsgv
                                                                      g$top?$9674$14xsgv))))))
                                                             (map (case-lambda
                                                                    ((g$x$9720$14xsgv)
                                                                     (g$make-eval-transformer$7146$14xsgv
                                                                       (g$expand-transformer$7437$14xsgv
                                                                         (if (eq? g$type$9684$14xsgv
                                                                                  'let-syntax)
                                                                           g$x$9720$14xsgv
                                                                           (g$add-subst$7104$14xsgv
                                                                             g$xrib$9717$14xsgv
                                                                             g$x$9720$14xsgv))
                                                                         g$mr$9668$14xsgv))))
                                                                  g$xrhs*$9714$14xsgv))))
                                                         (g$make-full-rib$7082$14xsgv
                                                           g$xlhs*$9713$14xsgv
                                                           g$xlab*$9716$14xsgv))))
                                                     (map g$gen-label$7060$14xsgv
                                                          g$xlhs*$9713$14xsgv))))
                                                 g$ls/false$9709$14xsgv)
                                               (g$syntax-violation$7501$14xsgv
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9708$14xsgv))))
                                          (g$syntax-dispatch$7392$14xsgv
                                            g$t$9708$14xsgv
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9675$14xsgv)
                                     (if (memv g$t$9686$14xsgv '(begin))
                                       ((case-lambda
                                          ((g$t$9721$14xsgv)
                                           ((case-lambda
                                              ((g$ls/false$9722$14xsgv)
                                               (if g$ls/false$9722$14xsgv
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9723$14xsgv)
                                                      (g$chi-body*$7436$14xsgv
                                                        (append
                                                          g$x*$9723$14xsgv
                                                          (cdr g$e*$9666$14xsgv))
                                                        g$r$9667$14xsgv
                                                        g$mr$9668$14xsgv
                                                        g$lex*$9669$14xsgv
                                                        g$rhs*$9670$14xsgv
                                                        g$mod**$9671$14xsgv
                                                        g$kwd*$9685$14xsgv
                                                        g$rib$9673$14xsgv
                                                        g$top?$9674$14xsgv)))
                                                   g$ls/false$9722$14xsgv)
                                                 (g$syntax-violation$7501$14xsgv
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9721$14xsgv))))
                                            (g$syntax-dispatch$7392$14xsgv
                                              g$t$9721$14xsgv
                                              '(_ . each-any)))))
                                        g$e$9675$14xsgv)
                                       (if (memv
                                             g$t$9686$14xsgv
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7436$14xsgv
                                           (cons
                                             (g$add-subst$7104$14xsgv
                                               g$rib$9673$14xsgv
                                               (g$chi-global-macro$7407$14xsgv
                                                 g$value$9683$14xsgv
                                                 g$e$9675$14xsgv))
                                             (cdr g$e*$9666$14xsgv))
                                           g$r$9667$14xsgv
                                           g$mr$9668$14xsgv
                                           g$lex*$9669$14xsgv
                                           g$rhs*$9670$14xsgv
                                           g$mod**$9671$14xsgv
                                           g$kwd*$9685$14xsgv
                                           g$rib$9673$14xsgv
                                           g$top?$9674$14xsgv)
                                         (if (memv
                                               g$t$9686$14xsgv
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7436$14xsgv
                                             (cons
                                               (g$add-subst$7104$14xsgv
                                                 g$rib$9673$14xsgv
                                                 (g$chi-local-macro$7406$14xsgv
                                                   g$value$9683$14xsgv
                                                   g$e$9675$14xsgv))
                                               (cdr g$e*$9666$14xsgv))
                                             g$r$9667$14xsgv
                                             g$mr$9668$14xsgv
                                             g$lex*$9669$14xsgv
                                             g$rhs*$9670$14xsgv
                                             g$mod**$9671$14xsgv
                                             g$kwd*$9685$14xsgv
                                             g$rib$9673$14xsgv
                                             g$top?$9674$14xsgv)
                                           (if (memv
                                                 g$t$9686$14xsgv
                                                 '(macro macro!))
                                             (g$chi-body*$7436$14xsgv
                                               (cons
                                                 (g$add-subst$7104$14xsgv
                                                   g$rib$9673$14xsgv
                                                   (g$chi-macro$7405$14xsgv
                                                     g$value$9683$14xsgv
                                                     g$e$9675$14xsgv))
                                                 (cdr g$e*$9666$14xsgv))
                                               g$r$9667$14xsgv
                                               g$mr$9668$14xsgv
                                               g$lex*$9669$14xsgv
                                               g$rhs*$9670$14xsgv
                                               g$mod**$9671$14xsgv
                                               g$kwd*$9685$14xsgv
                                               g$rib$9673$14xsgv
                                               g$top?$9674$14xsgv)
                                             (if (memv
                                                   g$t$9686$14xsgv
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7435$14xsgv
                                                      g$e$9675$14xsgv
                                                      g$r$9667$14xsgv
                                                      g$mr$9668$14xsgv
                                                      g$lex*$9669$14xsgv
                                                      g$rhs*$9670$14xsgv
                                                      g$mod**$9671$14xsgv
                                                      g$kwd*$9685$14xsgv)))
                                                 (case-lambda
                                                   ((g$lex*$9732$14xsgv
                                                      g$rhs*$9733$14xsgv
                                                      g$m-exp-id*$9734$14xsgv
                                                      g$m-exp-lab*$9735$14xsgv
                                                      g$r$9736$14xsgv
                                                      g$mr$9737$14xsgv
                                                      g$mod**$9738$14xsgv
                                                      g$kwd*$9739$14xsgv)
                                                    ((case-lambda
                                                       ((g$kwd*$9740$14xsgv
                                                          g$mod**$9741$14xsgv
                                                          g$mr$9742$14xsgv
                                                          g$r$9743$14xsgv
                                                          g$m-exp-lab*$9744$14xsgv
                                                          g$m-exp-id*$9745$14xsgv
                                                          g$rhs*$9746$14xsgv
                                                          g$lex*$9747$14xsgv)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9748$14xsgv
                                                                 g$lab$9749$14xsgv)
                                                               (g$extend-rib!$7078$14xsgv
                                                                 g$rib$9673$14xsgv
                                                                 g$id$9748$14xsgv
                                                                 g$lab$9749$14xsgv)))
                                                            g$m-exp-id*$9745$14xsgv
                                                            g$m-exp-lab*$9744$14xsgv)
                                                          (g$chi-body*$7436$14xsgv
                                                            (cdr g$e*$9666$14xsgv)
                                                            g$r$9743$14xsgv
                                                            g$mr$9742$14xsgv
                                                            g$lex*$9747$14xsgv
                                                            g$rhs*$9746$14xsgv
                                                            g$mod**$9741$14xsgv
                                                            g$kwd*$9740$14xsgv
                                                            g$rib$9673$14xsgv
                                                            g$top?$9674$14xsgv))))
                                                     g$kwd*$9739$14xsgv
                                                     g$mod**$9738$14xsgv
                                                     g$mr$9737$14xsgv
                                                     g$r$9736$14xsgv
                                                     g$m-exp-lab*$9735$14xsgv
                                                     g$m-exp-id*$9734$14xsgv
                                                     g$rhs*$9733$14xsgv
                                                     g$lex*$9732$14xsgv))))
                                               (if (memv
                                                     g$t$9686$14xsgv
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7485$14xsgv
                                                     (g$stx->datum$7125$14xsgv
                                                       g$e$9675$14xsgv))
                                                   (g$chi-body*$7436$14xsgv
                                                     (cdr g$e*$9666$14xsgv)
                                                     g$r$9667$14xsgv
                                                     g$mr$9668$14xsgv
                                                     g$lex*$9669$14xsgv
                                                     g$rhs*$9670$14xsgv
                                                     g$mod**$9671$14xsgv
                                                     g$kwd*$9685$14xsgv
                                                     g$rib$9673$14xsgv
                                                     g$top?$9674$14xsgv))
                                                 (if (memv
                                                       g$t$9686$14xsgv
                                                       '(import))
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$9750$14xsgv
                                                                     (case-lambda
                                                                       ((g$e$9792$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$t$9793$14xsgv)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9794$14xsgv)
                                                                                (if (if g$ls/false$9794$14xsgv
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9795$14xsgv)
                                                                                             (g$id?$7114$14xsgv
                                                                                               g$id$9795$14xsgv)))
                                                                                          g$ls/false$9794$14xsgv))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9796$14xsgv)
                                                                                       '#t))
                                                                                    g$ls/false$9794$14xsgv)
                                                                                  ((case-lambda
                                                                                     ((g$t$9797$14xsgv)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9798$14xsgv)
                                                                                          (if g$ls/false$9798$14xsgv
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$9799$14xsgv)
                                                                                                 '#f))
                                                                                              g$ls/false$9798$14xsgv)
                                                                                            ((case-lambda
                                                                                               ((g$t$9800$14xsgv)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$9801$14xsgv)
                                                                                                    (if g$ls/false$9801$14xsgv
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7501$14xsgv
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$9792$14xsgv)))
                                                                                                        g$ls/false$9801$14xsgv)
                                                                                                      (g$syntax-violation$7501$14xsgv
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$9800$14xsgv))))
                                                                                                 (g$syntax-dispatch$7392$14xsgv
                                                                                                   g$t$9800$14xsgv
                                                                                                   '_))))
                                                                                             g$t$9797$14xsgv))))
                                                                                       (g$syntax-dispatch$7392$14xsgv
                                                                                         g$t$9797$14xsgv
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$9793$14xsgv))))
                                                                             (g$syntax-dispatch$7392$14xsgv
                                                                               g$t$9793$14xsgv
                                                                               '(_ any)))))
                                                                         g$e$9792$14xsgv))))
                                                                   (g$module-import$9751$14xsgv
                                                                     (case-lambda
                                                                       ((g$e$9775$14xsgv
                                                                          g$r$9776$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$t$9777$14xsgv)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9778$14xsgv)
                                                                                (if (if g$ls/false$9778$14xsgv
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9779$14xsgv)
                                                                                             (g$id?$7114$14xsgv
                                                                                               g$id$9779$14xsgv)))
                                                                                          g$ls/false$9778$14xsgv))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9780$14xsgv)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7134$14xsgv
                                                                                              g$id$9780$14xsgv
                                                                                              g$r$9776$14xsgv)))
                                                                                         (case-lambda
                                                                                           ((g$type$9784$14xsgv
                                                                                              g$value$9785$14xsgv
                                                                                              g$kwd$9786$14xsgv)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$9787$14xsgv
                                                                                                  g$value$9788$14xsgv
                                                                                                  g$type$9789$14xsgv)
                                                                                                ((case-lambda
                                                                                                   ((g$t$9790$14xsgv)
                                                                                                    (if (memv
                                                                                                          g$t$9790$14xsgv
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$9791$14xsgv)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7434$14xsgv
                                                                                                              g$iface$9791$14xsgv
                                                                                                              g$id$9780$14xsgv)
                                                                                                            (g$module-interface-exp-lab-vec$7430$14xsgv
                                                                                                              g$iface$9791$14xsgv))))
                                                                                                       g$value$9788$14xsgv)
                                                                                                      (g$syntax-violation$7501$14xsgv
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$9775$14xsgv))))
                                                                                                 g$type$9789$14xsgv)))
                                                                                             g$kwd$9786$14xsgv
                                                                                             g$value$9785$14xsgv
                                                                                             g$type$9784$14xsgv))))))
                                                                                    g$ls/false$9778$14xsgv)
                                                                                  (g$syntax-violation$7501$14xsgv
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$9777$14xsgv))))
                                                                             (g$syntax-dispatch$7392$14xsgv
                                                                               g$t$9777$14xsgv
                                                                               '(_ any)))))
                                                                         g$e$9775$14xsgv))))
                                                                   (g$library-import$9752$14xsgv
                                                                     (case-lambda
                                                                       ((g$e$9761$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$t$9762$14xsgv)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9763$14xsgv)
                                                                                (if g$ls/false$9763$14xsgv
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$9764$14xsgv
                                                                                         g$imp*$9765$14xsgv)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7441$14xsgv
                                                                                              (g$syntax->datum$7504$14xsgv
                                                                                                g$imp*$9765$14xsgv))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$9768$14xsgv
                                                                                              g$subst-labels$9769$14xsgv)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$9770$14xsgv
                                                                                                  g$subst-names$9771$14xsgv)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$9772$14xsgv)
                                                                                                       (g$datum->stx$7097$14xsgv
                                                                                                         g$ctxt$9764$14xsgv
                                                                                                         g$name$9772$14xsgv)))
                                                                                                    g$subst-names$9771$14xsgv)
                                                                                                  g$subst-labels$9770$14xsgv)))
                                                                                             g$subst-labels$9769$14xsgv
                                                                                             g$subst-names$9768$14xsgv))))))
                                                                                    g$ls/false$9763$14xsgv)
                                                                                  ((case-lambda
                                                                                     ((g$t$9773$14xsgv)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9774$14xsgv)
                                                                                          (if g$ls/false$9774$14xsgv
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7501$14xsgv
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$9761$14xsgv)))
                                                                                              g$ls/false$9774$14xsgv)
                                                                                            (g$syntax-violation$7501$14xsgv
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9773$14xsgv))))
                                                                                       (g$syntax-dispatch$7392$14xsgv
                                                                                         g$t$9773$14xsgv
                                                                                         '_))))
                                                                                   g$t$9762$14xsgv))))
                                                                             (g$syntax-dispatch$7392$14xsgv
                                                                               g$t$9762$14xsgv
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$9761$14xsgv)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$9750$14xsgv
                                                                      g$e$9675$14xsgv)
                                                                  (g$module-import$9751$14xsgv
                                                                    g$e$9675$14xsgv
                                                                    g$r$9667$14xsgv)
                                                                  (g$library-import$9752$14xsgv
                                                                    g$e$9675$14xsgv))))
                                                             (case-lambda
                                                               ((g$id*$9755$14xsgv
                                                                  g$lab*$9756$14xsgv)
                                                                ((case-lambda
                                                                   ((g$lab*$9757$14xsgv
                                                                      g$id*$9758$14xsgv)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$9759$14xsgv
                                                                           g$lab$9760$14xsgv)
                                                                         (g$extend-rib!$7078$14xsgv
                                                                           g$rib$9673$14xsgv
                                                                           g$id$9759$14xsgv
                                                                           g$lab$9760$14xsgv)))
                                                                      g$id*$9758$14xsgv
                                                                      g$lab*$9757$14xsgv)))
                                                                 g$lab*$9756$14xsgv
                                                                 g$id*$9755$14xsgv))))))))
                                                     (g$chi-body*$7436$14xsgv
                                                       (cdr g$e*$9666$14xsgv)
                                                       g$r$9667$14xsgv
                                                       g$mr$9668$14xsgv
                                                       g$lex*$9669$14xsgv
                                                       g$rhs*$9670$14xsgv
                                                       g$mod**$9671$14xsgv
                                                       g$kwd*$9685$14xsgv
                                                       g$rib$9673$14xsgv
                                                       g$top?$9674$14xsgv))
                                                   (if g$top?$9674$14xsgv
                                                     (g$chi-body*$7436$14xsgv
                                                       (cdr g$e*$9666$14xsgv)
                                                       g$r$9667$14xsgv
                                                       g$mr$9668$14xsgv
                                                       (cons
                                                         (g$gen-lexical$7058$14xsgv
                                                           'dummy)
                                                         g$lex*$9669$14xsgv)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9675$14xsgv)
                                                         g$rhs*$9670$14xsgv)
                                                       g$mod**$9671$14xsgv
                                                       g$kwd*$9685$14xsgv
                                                       g$rib$9673$14xsgv
                                                       g$top?$9674$14xsgv)
                                                     (values
                                                       g$e*$9666$14xsgv
                                                       g$r$9667$14xsgv
                                                       g$mr$9668$14xsgv
                                                       g$lex*$9669$14xsgv
                                                       g$rhs*$9670$14xsgv
                                                       g$mod**$9671$14xsgv
                                                       g$kwd*$9685$14xsgv))))))))))))))
                            g$type$9684$14xsgv)))
                        (if (g$id?$7114$14xsgv g$kwd$9682$14xsgv)
                          (cons g$kwd$9682$14xsgv g$kwd*$9672$14xsgv)
                          g$kwd*$9672$14xsgv))))
                    g$kwd$9681$14xsgv
                    g$value$9680$14xsgv
                    g$type$9679$14xsgv))))))
           (car g$e*$9666$14xsgv))))))
   (g$expand-transformer$7437$14xsgv
     g$expand-transformer$10873$14xsgv
     (case-lambda
       ((g$expr$9802$14xsgv g$r$9803$14xsgv)
        ((case-lambda
           ((g$rtc$9804$14xsgv)
            ((case-lambda
               ((g$expanded-rhs$9805$14xsgv)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$9806$14xsgv)
                        (case-lambda
                          ((g$x$9807$14xsgv)
                           (begin
                             (g$invoke-library$6929$14xsgv g$x$9807$14xsgv)
                             (g$mark-visit$9806$14xsgv g$x$9807$14xsgv))))))
                     (g$vis-collector$7445$14xsgv))
                    (g$rtc$9804$14xsgv))
                  g$expanded-rhs$9805$14xsgv)))
             ((case-lambda
                ((g$inv-collector$9812$14xsgv
                   g$vis-collector$9813$14xsgv
                   g$inv-collector$9814$14xsgv
                   g$vis-collector$9815$14xsgv)
                 ((case-lambda
                    ((g$swap$9816$14xsgv)
                     (dynamic-wind
                       g$swap$9816$14xsgv
                       (case-lambda
                         (()
                          (g$chi-expr$7410$14xsgv
                            g$expr$9802$14xsgv
                            g$r$9803$14xsgv
                            g$r$9803$14xsgv)))
                       g$swap$9816$14xsgv)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$9817$14xsgv)
                           (begin
                             (g$inv-collector$9812$14xsgv
                               g$inv-collector$9814$14xsgv)
                             (set! g$inv-collector$9814$14xsgv
                               g$t$9817$14xsgv))))
                        (g$inv-collector$9812$14xsgv))
                       ((case-lambda
                          ((g$t$9818$14xsgv)
                           (begin
                             (g$vis-collector$9813$14xsgv
                               g$vis-collector$9815$14xsgv)
                             (set! g$vis-collector$9815$14xsgv
                               g$t$9818$14xsgv))))
                        (g$vis-collector$9813$14xsgv))))))))
              g$inv-collector$7444$14xsgv
              g$vis-collector$7445$14xsgv
              g$rtc$9804$14xsgv
              (case-lambda ((g$x$9819$14xsgv) (values)))))))
         (g$make-collector$7443$14xsgv)))))
   (g$parse-exports$7438$14xsgv
     g$parse-exports$10874$14xsgv
     (case-lambda
       ((g$exp*$9820$14xsgv)
        (letrec* ((g$idsyn?$9821$14xsgv
                    (case-lambda
                      ((g$x$9836$14xsgv)
                       (symbol?
                         (g$syntax->datum$7504$14xsgv g$x$9836$14xsgv))))))
          ((letrec ((g$f$9822$14xsgv
                      (case-lambda
                        ((g$exp*$9823$14xsgv
                           g$int*$9824$14xsgv
                           g$ext*$9825$14xsgv)
                         (if (null? g$exp*$9823$14xsgv)
                           (begin
                             ((case-lambda
                                ((g$id*$9826$14xsgv)
                                 (if (not (g$valid-bound-ids?$7119$14xsgv
                                            g$id*$9826$14xsgv))
                                   (g$syntax-violation$7501$14xsgv
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7420$14xsgv
                                       g$id*$9826$14xsgv))
                                   (void))))
                              (map (case-lambda
                                     ((g$x$9827$14xsgv)
                                      (g$make-stx$7087$14xsgv
                                        g$x$9827$14xsgv
                                        g$top-mark*$7056$14xsgv
                                        '()
                                        '())))
                                   g$ext*$9825$14xsgv))
                             (values
                               (map g$syntax->datum$7504$14xsgv
                                    g$int*$9824$14xsgv)
                               (map g$syntax->datum$7504$14xsgv
                                    g$ext*$9825$14xsgv)))
                           ((case-lambda
                              ((g$t$9828$14xsgv)
                               ((case-lambda
                                  ((g$ls/false$9829$14xsgv)
                                   (if g$ls/false$9829$14xsgv
                                     (apply
                                       (case-lambda
                                         ((g$rename$9830$14xsgv
                                            g$i*$9831$14xsgv
                                            g$e*$9832$14xsgv)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$7504$14xsgv
                                                                g$rename$9830$14xsgv)
                                                              'rename)
                                                       (if (g$for-all$5356$14xsgv
                                                             g$idsyn?$9821$14xsgv
                                                             g$i*$9831$14xsgv)
                                                         (begin
                                                           '#f
                                                           (g$for-all$5356$14xsgv
                                                             g$idsyn?$9821$14xsgv
                                                             g$e*$9832$14xsgv))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$7501$14xsgv
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$9823$14xsgv))
                                              (void))
                                            (g$f$9822$14xsgv
                                              (cdr g$exp*$9823$14xsgv)
                                              (append
                                                g$i*$9831$14xsgv
                                                g$int*$9824$14xsgv)
                                              (append
                                                g$e*$9832$14xsgv
                                                g$ext*$9825$14xsgv)))))
                                       g$ls/false$9829$14xsgv)
                                     ((case-lambda
                                        ((g$t$9833$14xsgv)
                                         ((case-lambda
                                            ((g$ls/false$9834$14xsgv)
                                             (if g$ls/false$9834$14xsgv
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$9835$14xsgv)
                                                    (begin
                                                      (if (not (g$idsyn?$9821$14xsgv
                                                                 g$ie$9835$14xsgv))
                                                        (g$syntax-violation$7501$14xsgv
                                                          'export
                                                          '"invalid export"
                                                          g$ie$9835$14xsgv)
                                                        (void))
                                                      (g$f$9822$14xsgv
                                                        (cdr g$exp*$9823$14xsgv)
                                                        (cons
                                                          g$ie$9835$14xsgv
                                                          g$int*$9824$14xsgv)
                                                        (cons
                                                          g$ie$9835$14xsgv
                                                          g$ext*$9825$14xsgv)))))
                                                 g$ls/false$9834$14xsgv)
                                               (g$syntax-violation$7501$14xsgv
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9833$14xsgv))))
                                          (g$syntax-dispatch$7392$14xsgv
                                            g$t$9833$14xsgv
                                            'any))))
                                      g$t$9828$14xsgv))))
                                (g$syntax-dispatch$7392$14xsgv
                                  g$t$9828$14xsgv
                                  '(any . #(each (any any)))))))
                            (car g$exp*$9823$14xsgv)))))))
             g$f$9822$14xsgv)
           g$exp*$9820$14xsgv
           '()
           '())))))
   (g$parse-library-name$7439$14xsgv
     g$parse-library-name$10875$14xsgv
     (case-lambda
       ((g$spec$9837$14xsgv)
        (letrec* ((g$parse$9838$14xsgv
                    (case-lambda
                      ((g$x$9845$14xsgv)
                       ((case-lambda
                          ((g$t$9846$14xsgv)
                           ((case-lambda
                              ((g$ls/false$9847$14xsgv)
                               (if (if g$ls/false$9847$14xsgv
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$9848$14xsgv)
                                            (g$for-all$5356$14xsgv
                                              (case-lambda
                                                ((g$x$9849$14xsgv)
                                                 ((case-lambda
                                                    ((g$x$9850$14xsgv)
                                                     (if (integer?
                                                           g$x$9850$14xsgv)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$9850$14xsgv))
                                                       '#f)))
                                                  (g$syntax->datum$7504$14xsgv
                                                    g$x$9849$14xsgv))))
                                              g$v*$9848$14xsgv)))
                                         g$ls/false$9847$14xsgv))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$9851$14xsgv)
                                      (values
                                        '()
                                        (map g$syntax->datum$7504$14xsgv
                                             g$v*$9851$14xsgv))))
                                   g$ls/false$9847$14xsgv)
                                 ((case-lambda
                                    ((g$t$9852$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$9853$14xsgv)
                                         (if (if g$ls/false$9853$14xsgv
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$9854$14xsgv
                                                        g$rest$9855$14xsgv)
                                                      (symbol?
                                                        (g$syntax->datum$7504$14xsgv
                                                          g$x$9854$14xsgv))))
                                                   g$ls/false$9853$14xsgv))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$9856$14xsgv
                                                  g$rest$9857$14xsgv)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$9838$14xsgv
                                                       g$rest$9857$14xsgv)))
                                                  (case-lambda
                                                    ((g$x*$9860$14xsgv
                                                       g$v*$9861$14xsgv)
                                                     ((case-lambda
                                                        ((g$v*$9862$14xsgv
                                                           g$x*$9863$14xsgv)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7504$14xsgv
                                                               g$x$9856$14xsgv)
                                                             g$x*$9863$14xsgv)
                                                           g$v*$9862$14xsgv)))
                                                      g$v*$9861$14xsgv
                                                      g$x*$9860$14xsgv))))))
                                             g$ls/false$9853$14xsgv)
                                           ((case-lambda
                                              ((g$t$9864$14xsgv)
                                               ((case-lambda
                                                  ((g$ls/false$9865$14xsgv)
                                                   (if g$ls/false$9865$14xsgv
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$9865$14xsgv)
                                                     ((case-lambda
                                                        ((g$t$9866$14xsgv)
                                                         ((case-lambda
                                                            ((g$ls/false$9867$14xsgv)
                                                             (if g$ls/false$9867$14xsgv
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7501$14xsgv
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$9837$14xsgv)))
                                                                 g$ls/false$9867$14xsgv)
                                                               (g$syntax-violation$7501$14xsgv
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$9866$14xsgv))))
                                                          (g$syntax-dispatch$7392$14xsgv
                                                            g$t$9866$14xsgv
                                                            '_))))
                                                      g$t$9864$14xsgv))))
                                                (g$syntax-dispatch$7392$14xsgv
                                                  g$t$9864$14xsgv
                                                  '()))))
                                            g$t$9852$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$9852$14xsgv
                                        '(any . any)))))
                                  g$t$9846$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$9846$14xsgv
                              '(each-any)))))
                        g$x$9845$14xsgv)))))
          (call-with-values
            (case-lambda (() (g$parse$9838$14xsgv g$spec$9837$14xsgv)))
            (case-lambda
              ((g$name*$9841$14xsgv g$ver*$9842$14xsgv)
               ((case-lambda
                  ((g$ver*$9843$14xsgv g$name*$9844$14xsgv)
                   (begin
                     (if (null? g$name*$9844$14xsgv)
                       (g$syntax-violation$7501$14xsgv
                         '#f
                         '"empty library name"
                         g$spec$9837$14xsgv)
                       (void))
                     (values g$name*$9844$14xsgv g$ver*$9843$14xsgv))))
                g$ver*$9842$14xsgv
                g$name*$9841$14xsgv))))))))
   (g$parse-library$7440$14xsgv
     g$parse-library$10876$14xsgv
     (case-lambda
       ((g$e$9868$14xsgv)
        ((case-lambda
           ((g$t$9869$14xsgv)
            ((case-lambda
               ((g$ls/false$9870$14xsgv)
                (if (if g$ls/false$9870$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$9871$14xsgv
                               g$name*$9872$14xsgv
                               g$export$9873$14xsgv
                               g$exp*$9874$14xsgv
                               g$import$9875$14xsgv
                               g$imp*$9876$14xsgv
                               g$b*$9877$14xsgv)
                             (if (eq? (g$syntax->datum$7504$14xsgv
                                        g$export$9873$14xsgv)
                                      'export)
                               (if (eq? (g$syntax->datum$7504$14xsgv
                                          g$import$9875$14xsgv)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7504$14xsgv
                                          g$library$9871$14xsgv)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$9870$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$9878$14xsgv
                         g$name*$9879$14xsgv
                         g$export$9880$14xsgv
                         g$exp*$9881$14xsgv
                         g$import$9882$14xsgv
                         g$imp*$9883$14xsgv
                         g$b*$9884$14xsgv)
                       (values
                         g$name*$9879$14xsgv
                         g$exp*$9881$14xsgv
                         g$imp*$9883$14xsgv
                         g$b*$9884$14xsgv)))
                    g$ls/false$9870$14xsgv)
                  ((case-lambda
                     ((g$t$9885$14xsgv)
                      ((case-lambda
                         ((g$ls/false$9886$14xsgv)
                          (if g$ls/false$9886$14xsgv
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7501$14xsgv
                                   '#f
                                   '"malformed library"
                                   g$e$9868$14xsgv)))
                              g$ls/false$9886$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$9885$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv g$t$9885$14xsgv '_))))
                   g$t$9869$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$9869$14xsgv
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$9868$14xsgv))))
   (g$parse-import-spec*$7441$14xsgv
     g$parse-import-spec*$10877$14xsgv
     (case-lambda
       ((g$imp*$9887$14xsgv)
        (letrec* ((g$idsyn?$9888$14xsgv
                    (case-lambda
                      ((g$x$10147$14xsgv)
                       (symbol?
                         (g$syntax->datum$7504$14xsgv g$x$10147$14xsgv)))))
                  (g$dup-error$9889$14xsgv
                    (case-lambda
                      ((g$name$10146$14xsgv)
                       (g$syntax-violation$7501$14xsgv
                         'import
                         '"two imports with different bindings"
                         g$name$10146$14xsgv))))
                  (g$merge-substs$9890$14xsgv
                    (case-lambda
                      ((g$s$10137$14xsgv g$subst$10138$14xsgv)
                       (letrec* ((g$insert-to-subst$10139$14xsgv
                                   (case-lambda
                                     ((g$a$10140$14xsgv g$subst$10141$14xsgv)
                                      ((case-lambda
                                         ((g$name$10142$14xsgv
                                            g$label$10143$14xsgv)
                                          ((case-lambda
                                             ((g$t$10144$14xsgv)
                                              (if g$t$10144$14xsgv
                                                ((case-lambda
                                                   ((g$x$10145$14xsgv)
                                                    (if (eq? (cdr g$x$10145$14xsgv)
                                                             g$label$10143$14xsgv)
                                                      g$subst$10141$14xsgv
                                                      (g$dup-error$9889$14xsgv
                                                        g$name$10142$14xsgv))))
                                                 g$t$10144$14xsgv)
                                                (cons
                                                  g$a$10140$14xsgv
                                                  g$subst$10141$14xsgv))))
                                           (assq
                                             g$name$10142$14xsgv
                                             g$subst$10141$14xsgv))))
                                       (car g$a$10140$14xsgv)
                                       (cdr g$a$10140$14xsgv))))))
                         (if (null? g$s$10137$14xsgv)
                           g$subst$10138$14xsgv
                           (g$insert-to-subst$10139$14xsgv
                             (car g$s$10137$14xsgv)
                             (g$merge-substs$9890$14xsgv
                               (cdr g$s$10137$14xsgv)
                               g$subst$10138$14xsgv)))))))
                  (g$exclude*$9891$14xsgv
                    (case-lambda
                      ((g$sym*$10113$14xsgv g$subst$10114$14xsgv)
                       (letrec* ((g$exclude$10115$14xsgv
                                   (case-lambda
                                     ((g$sym$10128$14xsgv g$subst$10129$14xsgv)
                                      (if (null? g$subst$10129$14xsgv)
                                        (g$syntax-violation$7501$14xsgv
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10128$14xsgv)
                                        (if (eq? g$sym$10128$14xsgv
                                                 (g$caar$4886$14xsgv
                                                   g$subst$10129$14xsgv))
                                          (values
                                            (g$cdar$4888$14xsgv
                                              g$subst$10129$14xsgv)
                                            (cdr g$subst$10129$14xsgv))
                                          ((case-lambda
                                             ((g$a$10130$14xsgv)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10115$14xsgv
                                                     g$sym$10128$14xsgv
                                                     (cdr g$subst$10129$14xsgv))))
                                                (case-lambda
                                                  ((g$old$10133$14xsgv
                                                     g$subst$10134$14xsgv)
                                                   ((case-lambda
                                                      ((g$subst$10135$14xsgv
                                                         g$old$10136$14xsgv)
                                                       (values
                                                         g$old$10136$14xsgv
                                                         (cons
                                                           g$a$10130$14xsgv
                                                           g$subst$10135$14xsgv))))
                                                    g$subst$10134$14xsgv
                                                    g$old$10133$14xsgv))))))
                                           (car g$subst$10129$14xsgv))))))))
                         (if (null? g$sym*$10113$14xsgv)
                           (values '() g$subst$10114$14xsgv)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10115$14xsgv
                                  (car g$sym*$10113$14xsgv)
                                  g$subst$10114$14xsgv)))
                             (case-lambda
                               ((g$old$10118$14xsgv g$subst$10119$14xsgv)
                                ((case-lambda
                                   ((g$subst$10120$14xsgv g$old$10121$14xsgv)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$9891$14xsgv
                                           (cdr g$sym*$10113$14xsgv)
                                           g$subst$10120$14xsgv)))
                                      (case-lambda
                                        ((g$old*$10124$14xsgv
                                           g$subst$10125$14xsgv)
                                         ((case-lambda
                                            ((g$subst$10126$14xsgv
                                               g$old*$10127$14xsgv)
                                             (values
                                               (cons
                                                 g$old$10121$14xsgv
                                                 g$old*$10127$14xsgv)
                                               g$subst$10126$14xsgv)))
                                          g$subst$10125$14xsgv
                                          g$old*$10124$14xsgv))))))
                                 g$subst$10119$14xsgv
                                 g$old$10118$14xsgv)))))))))
                  (g$find*$9892$14xsgv
                    (case-lambda
                      ((g$sym*$10109$14xsgv g$subst$10110$14xsgv)
                       (map (case-lambda
                              ((g$x$10111$14xsgv)
                               ((case-lambda
                                  ((g$t$10112$14xsgv)
                                   (if g$t$10112$14xsgv
                                     (cdr g$t$10112$14xsgv)
                                     (g$syntax-violation$7501$14xsgv
                                       'import
                                       '"cannot find identifier"
                                       g$x$10111$14xsgv))))
                                (assq g$x$10111$14xsgv g$subst$10110$14xsgv))))
                            g$sym*$10109$14xsgv))))
                  (g$rem*$9893$14xsgv
                    (case-lambda
                      ((g$sym*$10105$14xsgv g$subst$10106$14xsgv)
                       ((letrec ((g$f$10107$14xsgv
                                   (case-lambda
                                     ((g$subst$10108$14xsgv)
                                      (if (null? g$subst$10108$14xsgv)
                                        '()
                                        (if (memq
                                              (g$caar$4886$14xsgv
                                                g$subst$10108$14xsgv)
                                              g$sym*$10105$14xsgv)
                                          (g$f$10107$14xsgv
                                            (cdr g$subst$10108$14xsgv))
                                          (cons
                                            (car g$subst$10108$14xsgv)
                                            (g$f$10107$14xsgv
                                              (cdr g$subst$10108$14xsgv)))))))))
                          g$f$10107$14xsgv)
                        g$subst$10106$14xsgv))))
                  (g$remove-dups$9894$14xsgv
                    (case-lambda
                      ((g$ls$10104$14xsgv)
                       (if (null? g$ls$10104$14xsgv)
                         '()
                         (if (memq
                               (car g$ls$10104$14xsgv)
                               (cdr g$ls$10104$14xsgv))
                           (g$remove-dups$9894$14xsgv (cdr g$ls$10104$14xsgv))
                           (cons
                             (car g$ls$10104$14xsgv)
                             (g$remove-dups$9894$14xsgv
                               (cdr g$ls$10104$14xsgv))))))))
                  (g$parse-library-name$9895$14xsgv
                    (case-lambda
                      ((g$spec$9989$14xsgv)
                       (letrec* ((g$subversion?$9990$14xsgv
                                   (case-lambda
                                     ((g$x$10103$14xsgv)
                                      (if (integer? g$x$10103$14xsgv)
                                        (if (exact? g$x$10103$14xsgv)
                                          (begin '#f (>= g$x$10103$14xsgv '0))
                                          '#f)
                                        '#f))))
                                 (g$subversion-pred$9991$14xsgv
                                   (case-lambda
                                     ((g$x*$10055$14xsgv)
                                      ((case-lambda
                                         ((g$t$10056$14xsgv)
                                          ((case-lambda
                                             ((g$ls/false$10057$14xsgv)
                                              (if (if g$ls/false$10057$14xsgv
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10058$14xsgv)
                                                           (g$subversion?$9990$14xsgv
                                                             (g$syntax->datum$7504$14xsgv
                                                               g$n$10058$14xsgv))))
                                                        g$ls/false$10057$14xsgv))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10059$14xsgv)
                                                     (case-lambda
                                                       ((g$x$10060$14xsgv)
                                                        (= g$x$10060$14xsgv
                                                           (g$syntax->datum$7504$14xsgv
                                                             g$n$10059$14xsgv))))))
                                                  g$ls/false$10057$14xsgv)
                                                ((case-lambda
                                                   ((g$t$10061$14xsgv)
                                                    ((case-lambda
                                                       ((g$ls/false$10062$14xsgv)
                                                        (if (if g$ls/false$10062$14xsgv
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10063$14xsgv
                                                                       g$sub*$10064$14xsgv)
                                                                     (eq? (g$syntax->datum$7504$14xsgv
                                                                            g$p?$10063$14xsgv)
                                                                          'and)))
                                                                  g$ls/false$10062$14xsgv))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10065$14xsgv
                                                                 g$sub*$10066$14xsgv)
                                                               ((case-lambda
                                                                  ((g$p*$10067$14xsgv)
                                                                   (case-lambda
                                                                     ((g$x$10068$14xsgv)
                                                                      (g$for-all$5356$14xsgv
                                                                        (case-lambda
                                                                          ((g$p$10069$14xsgv)
                                                                           (g$p$10069$14xsgv
                                                                             g$x$10068$14xsgv)))
                                                                        g$p*$10067$14xsgv)))))
                                                                (map g$subversion-pred$9991$14xsgv
                                                                     g$sub*$10066$14xsgv))))
                                                            g$ls/false$10062$14xsgv)
                                                          ((case-lambda
                                                             ((g$t$10070$14xsgv)
                                                              ((case-lambda
                                                                 ((g$ls/false$10071$14xsgv)
                                                                  (if (if g$ls/false$10071$14xsgv
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10072$14xsgv
                                                                                 g$sub*$10073$14xsgv)
                                                                               (eq? (g$syntax->datum$7504$14xsgv
                                                                                      g$p?$10072$14xsgv)
                                                                                    'or)))
                                                                            g$ls/false$10071$14xsgv))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10074$14xsgv
                                                                           g$sub*$10075$14xsgv)
                                                                         ((case-lambda
                                                                            ((g$p*$10076$14xsgv)
                                                                             (case-lambda
                                                                               ((g$x$10077$14xsgv)
                                                                                (g$exists$5357$14xsgv
                                                                                  (case-lambda
                                                                                    ((g$p$10078$14xsgv)
                                                                                     (g$p$10078$14xsgv
                                                                                       g$x$10077$14xsgv)))
                                                                                  g$p*$10076$14xsgv)))))
                                                                          (map g$subversion-pred$9991$14xsgv
                                                                               g$sub*$10075$14xsgv))))
                                                                      g$ls/false$10071$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$t$10079$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10080$14xsgv)
                                                                            (if (if g$ls/false$10080$14xsgv
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10081$14xsgv
                                                                                           g$sub$10082$14xsgv)
                                                                                         (eq? (g$syntax->datum$7504$14xsgv
                                                                                                g$p?$10081$14xsgv)
                                                                                              'not)))
                                                                                      g$ls/false$10080$14xsgv))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10083$14xsgv
                                                                                     g$sub$10084$14xsgv)
                                                                                   ((case-lambda
                                                                                      ((g$p$10085$14xsgv)
                                                                                       (case-lambda
                                                                                         ((g$x$10086$14xsgv)
                                                                                          (not (g$p$10085$14xsgv
                                                                                                 g$x$10086$14xsgv))))))
                                                                                    (g$subversion-pred$9991$14xsgv
                                                                                      g$sub$10084$14xsgv))))
                                                                                g$ls/false$10080$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$t$10087$14xsgv)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10088$14xsgv)
                                                                                      (if (if g$ls/false$10088$14xsgv
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10089$14xsgv
                                                                                                     g$n$10090$14xsgv)
                                                                                                   (if (eq? (g$syntax->datum$7504$14xsgv
                                                                                                              g$p?$10089$14xsgv)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$9990$14xsgv
                                                                                                         (g$syntax->datum$7504$14xsgv
                                                                                                           g$n$10090$14xsgv)))
                                                                                                     '#f)))
                                                                                                g$ls/false$10088$14xsgv))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10091$14xsgv
                                                                                               g$n$10092$14xsgv)
                                                                                             (case-lambda
                                                                                               ((g$x$10093$14xsgv)
                                                                                                (<= g$x$10093$14xsgv
                                                                                                    (g$syntax->datum$7504$14xsgv
                                                                                                      g$n$10092$14xsgv))))))
                                                                                          g$ls/false$10088$14xsgv)
                                                                                        ((case-lambda
                                                                                           ((g$t$10094$14xsgv)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10095$14xsgv)
                                                                                                (if (if g$ls/false$10095$14xsgv
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10096$14xsgv
                                                                                                               g$n$10097$14xsgv)
                                                                                                             (if (eq? (g$syntax->datum$7504$14xsgv
                                                                                                                        g$p?$10096$14xsgv)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$9990$14xsgv
                                                                                                                   g$n$10097$14xsgv))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10095$14xsgv))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10098$14xsgv
                                                                                                         g$n$10099$14xsgv)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10100$14xsgv)
                                                                                                          (>= g$x$10100$14xsgv
                                                                                                              (g$syntax->datum$7504$14xsgv
                                                                                                                g$n$10099$14xsgv))))))
                                                                                                    g$ls/false$10095$14xsgv)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10101$14xsgv)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10102$14xsgv)
                                                                                                          (if g$ls/false$10102$14xsgv
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7501$14xsgv
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$9989$14xsgv
                                                                                                                   g$x*$10055$14xsgv)))
                                                                                                              g$ls/false$10102$14xsgv)
                                                                                                            (g$syntax-violation$7501$14xsgv
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10101$14xsgv))))
                                                                                                       (g$syntax-dispatch$7392$14xsgv
                                                                                                         g$t$10101$14xsgv
                                                                                                         '_))))
                                                                                                   g$t$10094$14xsgv))))
                                                                                             (g$syntax-dispatch$7392$14xsgv
                                                                                               g$t$10094$14xsgv
                                                                                               '(any any)))))
                                                                                         g$t$10087$14xsgv))))
                                                                                   (g$syntax-dispatch$7392$14xsgv
                                                                                     g$t$10087$14xsgv
                                                                                     '(any any)))))
                                                                               g$t$10079$14xsgv))))
                                                                         (g$syntax-dispatch$7392$14xsgv
                                                                           g$t$10079$14xsgv
                                                                           '(any any)))))
                                                                     g$t$10070$14xsgv))))
                                                               (g$syntax-dispatch$7392$14xsgv
                                                                 g$t$10070$14xsgv
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10061$14xsgv))))
                                                     (g$syntax-dispatch$7392$14xsgv
                                                       g$t$10061$14xsgv
                                                       '(any . each-any)))))
                                                 g$t$10056$14xsgv))))
                                           (g$syntax-dispatch$7392$14xsgv
                                             g$t$10056$14xsgv
                                             'any))))
                                       g$x*$10055$14xsgv))))
                                 (g$version-pred$9992$14xsgv
                                   (case-lambda
                                     ((g$x*$10015$14xsgv)
                                      ((case-lambda
                                         ((g$t$10016$14xsgv)
                                          ((case-lambda
                                             ((g$ls/false$10017$14xsgv)
                                              (if g$ls/false$10017$14xsgv
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10018$14xsgv)
                                                        '#t))))
                                                  g$ls/false$10017$14xsgv)
                                                ((case-lambda
                                                   ((g$t$10019$14xsgv)
                                                    ((case-lambda
                                                       ((g$ls/false$10020$14xsgv)
                                                        (if (if g$ls/false$10020$14xsgv
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10021$14xsgv
                                                                       g$ver*$10022$14xsgv)
                                                                     (eq? (g$syntax->datum$7504$14xsgv
                                                                            g$c$10021$14xsgv)
                                                                          'and)))
                                                                  g$ls/false$10020$14xsgv))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10023$14xsgv
                                                                 g$ver*$10024$14xsgv)
                                                               ((case-lambda
                                                                  ((g$p*$10025$14xsgv)
                                                                   (case-lambda
                                                                     ((g$x$10026$14xsgv)
                                                                      (g$for-all$5356$14xsgv
                                                                        (case-lambda
                                                                          ((g$p$10027$14xsgv)
                                                                           (g$p$10027$14xsgv
                                                                             g$x$10026$14xsgv)))
                                                                        g$p*$10025$14xsgv)))))
                                                                (map g$version-pred$9992$14xsgv
                                                                     g$ver*$10024$14xsgv))))
                                                            g$ls/false$10020$14xsgv)
                                                          ((case-lambda
                                                             ((g$t$10028$14xsgv)
                                                              ((case-lambda
                                                                 ((g$ls/false$10029$14xsgv)
                                                                  (if (if g$ls/false$10029$14xsgv
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10030$14xsgv
                                                                                 g$ver*$10031$14xsgv)
                                                                               (eq? (g$syntax->datum$7504$14xsgv
                                                                                      g$c$10030$14xsgv)
                                                                                    'or)))
                                                                            g$ls/false$10029$14xsgv))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10032$14xsgv
                                                                           g$ver*$10033$14xsgv)
                                                                         ((case-lambda
                                                                            ((g$p*$10034$14xsgv)
                                                                             (case-lambda
                                                                               ((g$x$10035$14xsgv)
                                                                                (g$exists$5357$14xsgv
                                                                                  (case-lambda
                                                                                    ((g$p$10036$14xsgv)
                                                                                     (g$p$10036$14xsgv
                                                                                       g$x$10035$14xsgv)))
                                                                                  g$p*$10034$14xsgv)))))
                                                                          (map g$version-pred$9992$14xsgv
                                                                               g$ver*$10033$14xsgv))))
                                                                      g$ls/false$10029$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$t$10037$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10038$14xsgv)
                                                                            (if (if g$ls/false$10038$14xsgv
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10039$14xsgv
                                                                                           g$ver$10040$14xsgv)
                                                                                         (eq? (g$syntax->datum$7504$14xsgv
                                                                                                g$c$10039$14xsgv)
                                                                                              'not)))
                                                                                      g$ls/false$10038$14xsgv))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10041$14xsgv
                                                                                     g$ver$10042$14xsgv)
                                                                                   ((case-lambda
                                                                                      ((g$p$10043$14xsgv)
                                                                                       (case-lambda
                                                                                         ((g$x$10044$14xsgv)
                                                                                          (not (g$p$10043$14xsgv
                                                                                                 g$x$10044$14xsgv))))))
                                                                                    (g$version-pred$9992$14xsgv
                                                                                      g$ver$10042$14xsgv))))
                                                                                g$ls/false$10038$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$t$10045$14xsgv)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10046$14xsgv)
                                                                                      (if g$ls/false$10046$14xsgv
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10047$14xsgv)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10048$14xsgv)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10049$14xsgv)
                                                                                                    ((letrec ((g$f$10050$14xsgv
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10051$14xsgv
                                                                                                                     g$x$10052$14xsgv)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10051$14xsgv)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10052$14xsgv)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10051$14xsgv)
                                                                                                                            (car g$x$10052$14xsgv))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10050$14xsgv
                                                                                                                             (cdr g$p*$10051$14xsgv)
                                                                                                                             (cdr g$x$10052$14xsgv)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10050$14xsgv)
                                                                                                     g$p*$10048$14xsgv
                                                                                                     g$x$10049$14xsgv)))))
                                                                                              (map g$subversion-pred$9991$14xsgv
                                                                                                   g$sub*$10047$14xsgv))))
                                                                                          g$ls/false$10046$14xsgv)
                                                                                        ((case-lambda
                                                                                           ((g$t$10053$14xsgv)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10054$14xsgv)
                                                                                                (if g$ls/false$10054$14xsgv
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7501$14xsgv
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$9989$14xsgv
                                                                                                         g$x*$10015$14xsgv)))
                                                                                                    g$ls/false$10054$14xsgv)
                                                                                                  (g$syntax-violation$7501$14xsgv
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10053$14xsgv))))
                                                                                             (g$syntax-dispatch$7392$14xsgv
                                                                                               g$t$10053$14xsgv
                                                                                               '_))))
                                                                                         g$t$10045$14xsgv))))
                                                                                   (g$syntax-dispatch$7392$14xsgv
                                                                                     g$t$10045$14xsgv
                                                                                     'each-any))))
                                                                               g$t$10037$14xsgv))))
                                                                         (g$syntax-dispatch$7392$14xsgv
                                                                           g$t$10037$14xsgv
                                                                           '(any any)))))
                                                                     g$t$10028$14xsgv))))
                                                               (g$syntax-dispatch$7392$14xsgv
                                                                 g$t$10028$14xsgv
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10019$14xsgv))))
                                                     (g$syntax-dispatch$7392$14xsgv
                                                       g$t$10019$14xsgv
                                                       '(any . each-any)))))
                                                 g$t$10016$14xsgv))))
                                           (g$syntax-dispatch$7392$14xsgv
                                             g$t$10016$14xsgv
                                             '()))))
                                       g$x*$10015$14xsgv)))))
                         ((letrec ((g$f$9993$14xsgv
                                     (case-lambda
                                       ((g$x$9994$14xsgv)
                                        ((case-lambda
                                           ((g$t$9995$14xsgv)
                                            ((case-lambda
                                               ((g$ls/false$9996$14xsgv)
                                                (if g$ls/false$9996$14xsgv
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$9997$14xsgv)
                                                       (values
                                                         '()
                                                         (g$version-pred$9992$14xsgv
                                                           g$version-spec*$9997$14xsgv))))
                                                    g$ls/false$9996$14xsgv)
                                                  ((case-lambda
                                                     ((g$t$9998$14xsgv)
                                                      ((case-lambda
                                                         ((g$ls/false$9999$14xsgv)
                                                          (if (if g$ls/false$9999$14xsgv
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10000$14xsgv
                                                                         g$x*$10001$14xsgv)
                                                                       (g$idsyn?$9888$14xsgv
                                                                         g$x$10000$14xsgv)))
                                                                    g$ls/false$9999$14xsgv))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10002$14xsgv
                                                                   g$x*$10003$14xsgv)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$9993$14xsgv
                                                                        g$x*$10003$14xsgv)))
                                                                   (case-lambda
                                                                     ((g$name$10006$14xsgv
                                                                        g$pred$10007$14xsgv)
                                                                      ((case-lambda
                                                                         ((g$pred$10008$14xsgv
                                                                            g$name$10009$14xsgv)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7504$14xsgv
                                                                                g$x$10002$14xsgv)
                                                                              g$name$10009$14xsgv)
                                                                            g$pred$10008$14xsgv)))
                                                                       g$pred$10007$14xsgv
                                                                       g$name$10006$14xsgv))))))
                                                              g$ls/false$9999$14xsgv)
                                                            ((case-lambda
                                                               ((g$t$10010$14xsgv)
                                                                ((case-lambda
                                                                   ((g$ls/false$10011$14xsgv)
                                                                    (if g$ls/false$10011$14xsgv
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10012$14xsgv)
                                                                                '#t)))))
                                                                        g$ls/false$10011$14xsgv)
                                                                      ((case-lambda
                                                                         ((g$t$10013$14xsgv)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10014$14xsgv)
                                                                              (if g$ls/false$10014$14xsgv
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7501$14xsgv
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$9989$14xsgv)))
                                                                                  g$ls/false$10014$14xsgv)
                                                                                (g$syntax-violation$7501$14xsgv
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10013$14xsgv))))
                                                                           (g$syntax-dispatch$7392$14xsgv
                                                                             g$t$10013$14xsgv
                                                                             '_))))
                                                                       g$t$10010$14xsgv))))
                                                                 (g$syntax-dispatch$7392$14xsgv
                                                                   g$t$10010$14xsgv
                                                                   '()))))
                                                             g$t$9998$14xsgv))))
                                                       (g$syntax-dispatch$7392$14xsgv
                                                         g$t$9998$14xsgv
                                                         '(any . any)))))
                                                   g$t$9995$14xsgv))))
                                             (g$syntax-dispatch$7392$14xsgv
                                               g$t$9995$14xsgv
                                               '(each-any)))))
                                         g$x$9994$14xsgv)))))
                            g$f$9993$14xsgv)
                          g$spec$9989$14xsgv)))))
                  (g$import-library$9896$14xsgv
                    (case-lambda
                      ((g$spec*$9981$14xsgv)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$9895$14xsgv
                              g$spec*$9981$14xsgv)))
                         (case-lambda
                           ((g$name$9984$14xsgv g$pred$9985$14xsgv)
                            ((case-lambda
                               ((g$pred$9986$14xsgv g$name$9987$14xsgv)
                                (begin
                                  (if (null? g$name$9987$14xsgv)
                                    (g$syntax-violation$7501$14xsgv
                                      'import
                                      '"empty library name"
                                      g$spec*$9981$14xsgv)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$9988$14xsgv)
                                      (begin
                                        (if (not g$lib$9988$14xsgv)
                                          (g$syntax-violation$7501$14xsgv
                                            'import
                                            '"cannot find library with required name"
                                            g$name$9987$14xsgv)
                                          (void))
                                        (if (not (g$pred$9986$14xsgv
                                                   (g$library-version$6882$14xsgv
                                                     g$lib$9988$14xsgv)))
                                          (g$syntax-violation$7501$14xsgv
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$9981$14xsgv
                                            g$lib$9988$14xsgv)
                                          (void))
                                        ((g$imp-collector$7446$14xsgv)
                                         g$lib$9988$14xsgv)
                                        (g$library-subst$6886$14xsgv
                                          g$lib$9988$14xsgv))))
                                   (g$find-library-by-name$6922$14xsgv
                                     g$name$9987$14xsgv)))))
                             g$pred$9985$14xsgv
                             g$name$9984$14xsgv)))))))
                  (g$get-import$9897$14xsgv
                    (case-lambda
                      ((g$spec$9910$14xsgv)
                       ((case-lambda
                          ((g$t$9911$14xsgv)
                           ((case-lambda
                              ((g$ls/false$9912$14xsgv)
                               (if (if g$ls/false$9912$14xsgv
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$9913$14xsgv g$x*$9914$14xsgv)
                                            (not (memq
                                                   (g$syntax->datum$7504$14xsgv
                                                     g$x$9913$14xsgv)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$9912$14xsgv))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$9915$14xsgv g$x*$9916$14xsgv)
                                      (g$import-library$9896$14xsgv
                                        (cons
                                          g$x$9915$14xsgv
                                          g$x*$9916$14xsgv))))
                                   g$ls/false$9912$14xsgv)
                                 ((case-lambda
                                    ((g$t$9917$14xsgv)
                                     ((case-lambda
                                        ((g$ls/false$9918$14xsgv)
                                         (if (if g$ls/false$9918$14xsgv
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$9919$14xsgv
                                                        g$isp$9920$14xsgv
                                                        g$old*$9921$14xsgv
                                                        g$new*$9922$14xsgv)
                                                      (if (eq? (g$syntax->datum$7504$14xsgv
                                                                 g$rename$9919$14xsgv)
                                                               'rename)
                                                        (if (g$for-all$5356$14xsgv
                                                              g$idsyn?$9888$14xsgv
                                                              g$old*$9921$14xsgv)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5356$14xsgv
                                                              g$idsyn?$9888$14xsgv
                                                              g$new*$9922$14xsgv))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$9918$14xsgv))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$9923$14xsgv
                                                  g$isp$9924$14xsgv
                                                  g$old*$9925$14xsgv
                                                  g$new*$9926$14xsgv)
                                                ((case-lambda
                                                   ((g$subst$9927$14xsgv
                                                      g$old*$9928$14xsgv
                                                      g$new*$9929$14xsgv)
                                                    ((case-lambda
                                                       ((g$old-label*$9930$14xsgv)
                                                        ((case-lambda
                                                           ((g$subst$9931$14xsgv)
                                                            (g$merge-substs$9890$14xsgv
                                                              (map cons
                                                                   g$new*$9929$14xsgv
                                                                   g$old-label*$9930$14xsgv)
                                                              g$subst$9931$14xsgv)))
                                                         (g$rem*$9893$14xsgv
                                                           g$old*$9928$14xsgv
                                                           g$subst$9927$14xsgv))))
                                                     (g$find*$9892$14xsgv
                                                       g$old*$9928$14xsgv
                                                       g$subst$9927$14xsgv))))
                                                 (g$get-import$9897$14xsgv
                                                   g$isp$9924$14xsgv)
                                                 (map g$syntax->datum$7504$14xsgv
                                                      g$old*$9925$14xsgv)
                                                 (map g$syntax->datum$7504$14xsgv
                                                      g$new*$9926$14xsgv))))
                                             g$ls/false$9918$14xsgv)
                                           ((case-lambda
                                              ((g$t$9932$14xsgv)
                                               ((case-lambda
                                                  ((g$ls/false$9933$14xsgv)
                                                   (if (if g$ls/false$9933$14xsgv
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$9934$14xsgv
                                                                  g$isp$9935$14xsgv
                                                                  g$sym*$9936$14xsgv)
                                                                (if (eq? (g$syntax->datum$7504$14xsgv
                                                                           g$except$9934$14xsgv)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5356$14xsgv
                                                                      g$idsyn?$9888$14xsgv
                                                                      g$sym*$9936$14xsgv))
                                                                  '#f)))
                                                             g$ls/false$9933$14xsgv))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$9937$14xsgv
                                                            g$isp$9938$14xsgv
                                                            g$sym*$9939$14xsgv)
                                                          ((case-lambda
                                                             ((g$subst$9940$14xsgv)
                                                              (g$rem*$9893$14xsgv
                                                                (map g$syntax->datum$7504$14xsgv
                                                                     g$sym*$9939$14xsgv)
                                                                g$subst$9940$14xsgv)))
                                                           (g$get-import$9897$14xsgv
                                                             g$isp$9938$14xsgv))))
                                                       g$ls/false$9933$14xsgv)
                                                     ((case-lambda
                                                        ((g$t$9941$14xsgv)
                                                         ((case-lambda
                                                            ((g$ls/false$9942$14xsgv)
                                                             (if (if g$ls/false$9942$14xsgv
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$9943$14xsgv
                                                                            g$isp$9944$14xsgv
                                                                            g$sym*$9945$14xsgv)
                                                                          (if (eq? (g$syntax->datum$7504$14xsgv
                                                                                     g$only$9943$14xsgv)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5356$14xsgv
                                                                                g$idsyn?$9888$14xsgv
                                                                                g$sym*$9945$14xsgv))
                                                                            '#f)))
                                                                       g$ls/false$9942$14xsgv))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$9946$14xsgv
                                                                      g$isp$9947$14xsgv
                                                                      g$sym*$9948$14xsgv)
                                                                    ((case-lambda
                                                                       ((g$subst$9949$14xsgv
                                                                          g$sym*$9950$14xsgv)
                                                                        ((case-lambda
                                                                           ((g$sym*$9951$14xsgv)
                                                                            ((case-lambda
                                                                               ((g$lab*$9952$14xsgv)
                                                                                (map cons
                                                                                     g$sym*$9951$14xsgv
                                                                                     g$lab*$9952$14xsgv)))
                                                                             (g$find*$9892$14xsgv
                                                                               g$sym*$9951$14xsgv
                                                                               g$subst$9949$14xsgv))))
                                                                         (g$remove-dups$9894$14xsgv
                                                                           g$sym*$9950$14xsgv))))
                                                                     (g$get-import$9897$14xsgv
                                                                       g$isp$9947$14xsgv)
                                                                     (map g$syntax->datum$7504$14xsgv
                                                                          g$sym*$9948$14xsgv))))
                                                                 g$ls/false$9942$14xsgv)
                                                               ((case-lambda
                                                                  ((g$t$9953$14xsgv)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9954$14xsgv)
                                                                       (if (if g$ls/false$9954$14xsgv
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$9955$14xsgv
                                                                                      g$isp$9956$14xsgv
                                                                                      g$p$9957$14xsgv)
                                                                                    (if (eq? (g$syntax->datum$7504$14xsgv
                                                                                               g$prefix$9955$14xsgv)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$9888$14xsgv
                                                                                          g$p$9957$14xsgv))
                                                                                      '#f)))
                                                                                 g$ls/false$9954$14xsgv))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$9958$14xsgv
                                                                                g$isp$9959$14xsgv
                                                                                g$p$9960$14xsgv)
                                                                              ((case-lambda
                                                                                 ((g$subst$9961$14xsgv
                                                                                    g$prefix$9962$14xsgv)
                                                                                  (map (case-lambda
                                                                                         ((g$x$9963$14xsgv)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$9962$14xsgv
                                                                                                (symbol->string
                                                                                                  (car g$x$9963$14xsgv))))
                                                                                            (cdr g$x$9963$14xsgv))))
                                                                                       g$subst$9961$14xsgv)))
                                                                               (g$get-import$9897$14xsgv
                                                                                 g$isp$9959$14xsgv)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7504$14xsgv
                                                                                   g$p$9960$14xsgv)))))
                                                                           g$ls/false$9954$14xsgv)
                                                                         ((case-lambda
                                                                            ((g$t$9964$14xsgv)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9965$14xsgv)
                                                                                 (if (if g$ls/false$9965$14xsgv
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$9966$14xsgv
                                                                                                g$spec*$9967$14xsgv)
                                                                                              (eq? (g$syntax->datum$7504$14xsgv
                                                                                                     g$library$9966$14xsgv)
                                                                                                   'library)))
                                                                                           g$ls/false$9965$14xsgv))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$9968$14xsgv
                                                                                          g$spec*$9969$14xsgv)
                                                                                        (g$import-library$9896$14xsgv
                                                                                          g$spec*$9969$14xsgv)))
                                                                                     g$ls/false$9965$14xsgv)
                                                                                   ((case-lambda
                                                                                      ((g$t$9970$14xsgv)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9971$14xsgv)
                                                                                           (if (if g$ls/false$9971$14xsgv
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$9972$14xsgv
                                                                                                          g$isp$9973$14xsgv
                                                                                                          g$rest$9974$14xsgv)
                                                                                                        (eq? (g$syntax->datum$7504$14xsgv
                                                                                                               g$for$9972$14xsgv)
                                                                                                             'for)))
                                                                                                     g$ls/false$9971$14xsgv))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$9975$14xsgv
                                                                                                    g$isp$9976$14xsgv
                                                                                                    g$rest$9977$14xsgv)
                                                                                                  (g$get-import$9897$14xsgv
                                                                                                    g$isp$9976$14xsgv)))
                                                                                               g$ls/false$9971$14xsgv)
                                                                                             ((case-lambda
                                                                                                ((g$t$9978$14xsgv)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$9979$14xsgv)
                                                                                                     (if g$ls/false$9979$14xsgv
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$9980$14xsgv)
                                                                                                            (g$syntax-violation$7501$14xsgv
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$9980$14xsgv)))
                                                                                                         g$ls/false$9979$14xsgv)
                                                                                                       (g$syntax-violation$7501$14xsgv
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$9978$14xsgv))))
                                                                                                  (g$syntax-dispatch$7392$14xsgv
                                                                                                    g$t$9978$14xsgv
                                                                                                    'any))))
                                                                                              g$t$9970$14xsgv))))
                                                                                        (g$syntax-dispatch$7392$14xsgv
                                                                                          g$t$9970$14xsgv
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$9964$14xsgv))))
                                                                              (g$syntax-dispatch$7392$14xsgv
                                                                                g$t$9964$14xsgv
                                                                                '(any each-any)))))
                                                                          g$t$9953$14xsgv))))
                                                                    (g$syntax-dispatch$7392$14xsgv
                                                                      g$t$9953$14xsgv
                                                                      '(any any
                                                                            any)))))
                                                                g$t$9941$14xsgv))))
                                                          (g$syntax-dispatch$7392$14xsgv
                                                            g$t$9941$14xsgv
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$9932$14xsgv))))
                                                (g$syntax-dispatch$7392$14xsgv
                                                  g$t$9932$14xsgv
                                                  '(any any . each-any)))))
                                            g$t$9917$14xsgv))))
                                      (g$syntax-dispatch$7392$14xsgv
                                        g$t$9917$14xsgv
                                        '(any any . #(each (any any)))))))
                                  g$t$9911$14xsgv))))
                            (g$syntax-dispatch$7392$14xsgv
                              g$t$9911$14xsgv
                              '(any . each-any)))))
                        g$spec$9910$14xsgv))))
                  (g$add-imports!$9898$14xsgv
                    (case-lambda
                      ((g$imp$9902$14xsgv g$h$9903$14xsgv)
                       ((case-lambda
                          ((g$subst$9904$14xsgv)
                           (for-each
                             (case-lambda
                               ((g$x$9905$14xsgv)
                                ((case-lambda
                                   ((g$name$9906$14xsgv g$label$9907$14xsgv)
                                    ((case-lambda
                                       ((g$t$9908$14xsgv)
                                        (if g$t$9908$14xsgv
                                          ((case-lambda
                                             ((g$l$9909$14xsgv)
                                              (if (not (eq? g$l$9909$14xsgv
                                                            g$label$9907$14xsgv))
                                                (g$dup-error$9889$14xsgv
                                                  g$name$9906$14xsgv)
                                                (void))))
                                           g$t$9908$14xsgv)
                                          (g$hashtable-set!$5153$14xsgv
                                            g$h$9903$14xsgv
                                            g$name$9906$14xsgv
                                            g$label$9907$14xsgv))))
                                     (g$hashtable-ref$5152$14xsgv
                                       g$h$9903$14xsgv
                                       g$name$9906$14xsgv
                                       '#f))))
                                 (car g$x$9905$14xsgv)
                                 (cdr g$x$9905$14xsgv))))
                             g$subst$9904$14xsgv)))
                        (g$get-import$9897$14xsgv g$imp$9902$14xsgv))))))
          ((letrec ((g$f$9899$14xsgv
                      (case-lambda
                        ((g$imp*$9900$14xsgv g$h$9901$14xsgv)
                         (if (null? g$imp*$9900$14xsgv)
                           (hashtable-entries g$h$9901$14xsgv)
                           (begin
                             (g$add-imports!$9898$14xsgv
                               (car g$imp*$9900$14xsgv)
                               g$h$9901$14xsgv)
                             (g$f$9899$14xsgv
                               (cdr g$imp*$9900$14xsgv)
                               g$h$9901$14xsgv)))))))
             g$f$9899$14xsgv)
           g$imp*$9887$14xsgv
           (g$make-eq-hashtable$5149$14xsgv))))))
   (g$make-top-rib$7442$14xsgv
     g$make-top-rib$10878$14xsgv
     (case-lambda
       ((g$names$10148$14xsgv g$labels$10149$14xsgv)
        ((case-lambda
           ((g$rib$10150$14xsgv)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10151$14xsgv g$label$10152$14xsgv)
                   (begin
                     (if (not (symbol? g$name$10151$14xsgv))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10151$14xsgv)
                       (void))
                     (g$extend-rib!$7078$14xsgv
                       g$rib$10150$14xsgv
                       (g$make-stx$7087$14xsgv
                         g$name$10151$14xsgv
                         g$top-mark*$7056$14xsgv
                         '()
                         '())
                       g$label$10152$14xsgv))))
                g$names$10148$14xsgv
                g$labels$10149$14xsgv)
              g$rib$10150$14xsgv)))
         (g$make-empty-rib$7077$14xsgv)))))
   (g$make-collector$7443$14xsgv
     g$make-collector$10879$14xsgv
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10153$14xsgv)
            (case-lambda
              (() g$ls$10153$14xsgv)
              ((g$x$10154$14xsgv)
               (set! g$ls$10153$14xsgv
                 (g$set-cons$7053$14xsgv
                   g$x$10154$14xsgv
                   g$ls$10153$14xsgv))))))
         '()))))
   (g$inv-collector$7444$14xsgv
     g$inv-collector$10880$14xsgv
     (g$make-parameter$6381$14xsgv
       (case-lambda
         (g$args$10155$14xsgv
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10156$14xsgv)
          (begin
            (if (not (procedure? g$x$10156$14xsgv))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10156$14xsgv)
              (void))
            g$x$10156$14xsgv)))))
   (g$vis-collector$7445$14xsgv
     g$vis-collector$10881$14xsgv
     (g$make-parameter$6381$14xsgv
       (case-lambda
         (g$args$10157$14xsgv
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10158$14xsgv)
          (begin
            (if (not (procedure? g$x$10158$14xsgv))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10158$14xsgv)
              (void))
            g$x$10158$14xsgv)))))
   (g$imp-collector$7446$14xsgv
     g$imp-collector$10882$14xsgv
     (g$make-parameter$6381$14xsgv
       (case-lambda
         (g$args$10159$14xsgv
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10160$14xsgv)
          (begin
            (if (not (procedure? g$x$10160$14xsgv))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10160$14xsgv)
              (void))
            g$x$10160$14xsgv)))))
   (g$chi-library-internal$7447$14xsgv
     g$chi-library-internal$10883$14xsgv
     (case-lambda
       ((g$e*$10161$14xsgv g$rib$10162$14xsgv g$top?$10163$14xsgv)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7436$14xsgv
               g$e*$10161$14xsgv
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10162$14xsgv
               g$top?$10163$14xsgv)))
          (case-lambda
            ((g$e*$10171$14xsgv
               g$r$10172$14xsgv
               g$mr$10173$14xsgv
               g$lex*$10174$14xsgv
               g$rhs*$10175$14xsgv
               g$mod**$10176$14xsgv
               g$_kwd*$10177$14xsgv)
             ((case-lambda
                ((g$_kwd*$10178$14xsgv
                   g$mod**$10179$14xsgv
                   g$rhs*$10180$14xsgv
                   g$lex*$10181$14xsgv
                   g$mr$10182$14xsgv
                   g$r$10183$14xsgv
                   g$e*$10184$14xsgv)
                 (values
                   (append
                     (apply append (reverse g$mod**$10179$14xsgv))
                     g$e*$10184$14xsgv)
                   g$r$10183$14xsgv
                   g$mr$10182$14xsgv
                   (reverse g$lex*$10181$14xsgv)
                   (reverse g$rhs*$10180$14xsgv))))
              g$_kwd*$10177$14xsgv
              g$mod**$10176$14xsgv
              g$rhs*$10175$14xsgv
              g$lex*$10174$14xsgv
              g$mr$10173$14xsgv
              g$r$10172$14xsgv
              g$e*$10171$14xsgv)))))))
   (g$chi-interaction-expr$7448$14xsgv
     g$chi-interaction-expr$10884$14xsgv
     (case-lambda
       ((g$e$10185$14xsgv g$rib$10186$14xsgv g$r$10187$14xsgv)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7436$14xsgv
               (list g$e$10185$14xsgv)
               g$r$10187$14xsgv
               g$r$10187$14xsgv
               '()
               '()
               '()
               '()
               g$rib$10186$14xsgv
               '#t)))
          (case-lambda
            ((g$e*$10195$14xsgv
               g$r$10196$14xsgv
               g$mr$10197$14xsgv
               g$lex*$10198$14xsgv
               g$rhs*$10199$14xsgv
               g$mod**$10200$14xsgv
               g$_kwd*$10201$14xsgv)
             ((case-lambda
                ((g$_kwd*$10202$14xsgv
                   g$mod**$10203$14xsgv
                   g$rhs*$10204$14xsgv
                   g$lex*$10205$14xsgv
                   g$mr$10206$14xsgv
                   g$r$10207$14xsgv
                   g$e*$10208$14xsgv)
                 ((case-lambda
                    ((g$e*$10209$14xsgv)
                     ((case-lambda
                        ((g$e$10210$14xsgv)
                         (values g$e$10210$14xsgv g$r$10207$14xsgv)))
                      (if (null? g$e*$10209$14xsgv)
                        (g$build-void$7049$14xsgv)
                        (if (null? (cdr g$e*$10209$14xsgv))
                          (car g$e*$10209$14xsgv)
                          (g$build-sequence$7048$14xsgv
                            '#f
                            g$e*$10209$14xsgv))))))
                  (g$expand-interaction-rhs*/init*$7417$14xsgv
                    (reverse g$lex*$10205$14xsgv)
                    (reverse g$rhs*$10204$14xsgv)
                    (append
                      (apply append (reverse g$mod**$10203$14xsgv))
                      g$e*$10208$14xsgv)
                    g$r$10207$14xsgv
                    g$mr$10206$14xsgv))))
              g$_kwd*$10201$14xsgv
              g$mod**$10200$14xsgv
              g$rhs*$10199$14xsgv
              g$lex*$10198$14xsgv
              g$mr$10197$14xsgv
              g$r$10196$14xsgv
              g$e*$10195$14xsgv)))))))
   (g$library-body-expander$7449$14xsgv
     g$library-body-expander$10885$14xsgv
     (case-lambda
       ((g$name$10211$14xsgv
          g$exp*$10212$14xsgv
          g$imp*$10213$14xsgv
          g$b*$10214$14xsgv
          g$top?$10215$14xsgv)
        (letrec* ((g$itc$10216$14xsgv (g$make-collector$7443$14xsgv)))
          ((case-lambda
             ((g$imp-collector$10221$14xsgv
                g$top-level-context$10222$14xsgv
                g$imp-collector$10223$14xsgv
                g$top-level-context$10224$14xsgv)
              ((case-lambda
                 ((g$swap$10225$14xsgv)
                  (dynamic-wind
                    g$swap$10225$14xsgv
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-exports$7438$14xsgv g$exp*$10212$14xsgv)))
                         (case-lambda
                           ((g$exp-int*$10228$14xsgv g$exp-ext*$10229$14xsgv)
                            ((case-lambda
                               ((g$exp-ext*$10230$14xsgv
                                  g$exp-int*$10231$14xsgv)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7441$14xsgv
                                       g$imp*$10213$14xsgv)))
                                  (case-lambda
                                    ((g$subst-names$10234$14xsgv
                                       g$subst-labels$10235$14xsgv)
                                     ((case-lambda
                                        ((g$subst-labels$10236$14xsgv
                                           g$subst-names$10237$14xsgv)
                                         ((case-lambda
                                            ((g$rib$10238$14xsgv)
                                             ((case-lambda
                                                ((g$b*$10239$14xsgv
                                                   g$rtc$10240$14xsgv
                                                   g$vtc$10241$14xsgv)
                                                 ((case-lambda
                                                    ((g$inv-collector$10246$14xsgv
                                                       g$vis-collector$10247$14xsgv
                                                       g$inv-collector$10248$14xsgv
                                                       g$vis-collector$10249$14xsgv)
                                                     ((case-lambda
                                                        ((g$swap$10250$14xsgv)
                                                         (dynamic-wind
                                                           g$swap$10250$14xsgv
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7447$14xsgv
                                                                     g$b*$10239$14xsgv
                                                                     g$rib$10238$14xsgv
                                                                     g$top?$10215$14xsgv)))
                                                                (case-lambda
                                                                  ((g$init*$10256$14xsgv
                                                                     g$r$10257$14xsgv
                                                                     g$mr$10258$14xsgv
                                                                     g$lex*$10259$14xsgv
                                                                     g$rhs*$10260$14xsgv)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10261$14xsgv
                                                                         g$lex*$10262$14xsgv
                                                                         g$mr$10263$14xsgv
                                                                         g$r$10264$14xsgv
                                                                         g$init*$10265$14xsgv)
                                                                       (begin
                                                                         (g$seal-rib!$7080$14xsgv
                                                                           g$rib$10238$14xsgv)
                                                                         ((case-lambda
                                                                            ((g$init*$10266$14xsgv)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10267$14xsgv)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7081$14xsgv
                                                                                         g$rib$10238$14xsgv)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10268$14xsgv
                                                                                             g$export-subst$10269$14xsgv)
                                                                                           (letrec* ((g$errstr$10270$14xsgv
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7490$14xsgv
                                                                                                    g$lex*$10262$14xsgv
                                                                                                    g$loc*$10268$14xsgv
                                                                                                    g$r$10264$14xsgv)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10274$14xsgv
                                                                                                    g$global*$10275$14xsgv
                                                                                                    g$macro*$10276$14xsgv)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10277$14xsgv
                                                                                                        g$global*$10278$14xsgv
                                                                                                        g$export-env$10279$14xsgv)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10280$14xsgv)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10281$14xsgv
                                                                                                                   g$label$10282$14xsgv)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10283$14xsgv)
                                                                                                                     (if g$p$10283$14xsgv
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10284$14xsgv)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10285$14xsgv)
                                                                                                                               (if (eq? g$type$10285$14xsgv
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7501$14xsgv
                                                                                                                                   'export
                                                                                                                                   g$errstr$10270$14xsgv
                                                                                                                                   g$name$10281$14xsgv)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10284$14xsgv))))
                                                                                                                        (cdr g$p$10283$14xsgv))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10282$14xsgv
                                                                                                                    g$export-env$10279$14xsgv))))
                                                                                                              (car g$s$10280$14xsgv)
                                                                                                              (cdr g$s$10280$14xsgv))))
                                                                                                          g$export-subst$10269$14xsgv)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10286$14xsgv
                                                                                                              g$invoke-definitions$10287$14xsgv)
                                                                                                            (values
                                                                                                              (g$itc$10216$14xsgv)
                                                                                                              (g$rtc$10240$14xsgv)
                                                                                                              (g$vtc$10241$14xsgv)
                                                                                                              (g$build-sequence$7048$14xsgv
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10287$14xsgv
                                                                                                                  (list
                                                                                                                    g$invoke-body$10286$14xsgv)))
                                                                                                              g$macro*$10277$14xsgv
                                                                                                              g$export-subst$10269$14xsgv
                                                                                                              g$export-env$10279$14xsgv)))
                                                                                                         (g$build-library-letrec*$7052$14xsgv
                                                                                                           '#f
                                                                                                           g$name$10211$14xsgv
                                                                                                           g$lex*$10262$14xsgv
                                                                                                           g$loc*$10268$14xsgv
                                                                                                           g$rhs*$10267$14xsgv
                                                                                                           (if (null?
                                                                                                                 g$init*$10266$14xsgv)
                                                                                                             (g$build-void$7049$14xsgv)
                                                                                                             (g$build-sequence$7048$14xsgv
                                                                                                               '#f
                                                                                                               g$init*$10266$14xsgv)))
                                                                                                         (map g$build-global-define$7044$14xsgv
                                                                                                              (map cdr
                                                                                                                   g$global*$10278$14xsgv))))))
                                                                                                   g$macro*$10276$14xsgv
                                                                                                   g$global*$10275$14xsgv
                                                                                                   g$export-env$10274$14xsgv)))))))
                                                                                        (map g$gen-global$7059$14xsgv
                                                                                             g$lex*$10262$14xsgv)
                                                                                        (g$make-export-subst$7489$14xsgv
                                                                                          g$exp-int*$10231$14xsgv
                                                                                          g$exp-ext*$10230$14xsgv
                                                                                          g$rib$10238$14xsgv))))))))
                                                                              (g$chi-rhs*$7418$14xsgv
                                                                                g$rhs*$10261$14xsgv
                                                                                g$r$10264$14xsgv
                                                                                g$mr$10263$14xsgv))))
                                                                          (g$chi-expr*$7408$14xsgv
                                                                            g$init*$10265$14xsgv
                                                                            g$r$10264$14xsgv
                                                                            g$mr$10263$14xsgv)))))
                                                                    g$rhs*$10260$14xsgv
                                                                    g$lex*$10259$14xsgv
                                                                    g$mr$10258$14xsgv
                                                                    g$r$10257$14xsgv
                                                                    g$init*$10256$14xsgv))))))
                                                           g$swap$10250$14xsgv)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10288$14xsgv)
                                                               (begin
                                                                 (g$inv-collector$10246$14xsgv
                                                                   g$inv-collector$10248$14xsgv)
                                                                 (set! g$inv-collector$10248$14xsgv
                                                                   g$t$10288$14xsgv))))
                                                            (g$inv-collector$10246$14xsgv))
                                                           ((case-lambda
                                                              ((g$t$10289$14xsgv)
                                                               (begin
                                                                 (g$vis-collector$10247$14xsgv
                                                                   g$vis-collector$10249$14xsgv)
                                                                 (set! g$vis-collector$10249$14xsgv
                                                                   g$t$10289$14xsgv))))
                                                            (g$vis-collector$10247$14xsgv))))))))
                                                  g$inv-collector$7444$14xsgv
                                                  g$vis-collector$7445$14xsgv
                                                  g$rtc$10240$14xsgv
                                                  g$vtc$10241$14xsgv)))
                                              (map (case-lambda
                                                     ((g$x$10290$14xsgv)
                                                      (g$make-stx$7087$14xsgv
                                                        g$x$10290$14xsgv
                                                        g$top-mark*$7056$14xsgv
                                                        (list
                                                          g$rib$10238$14xsgv)
                                                        '())))
                                                   g$b*$10214$14xsgv)
                                              (g$make-collector$7443$14xsgv)
                                              (g$make-collector$7443$14xsgv))))
                                          (g$make-top-rib$7442$14xsgv
                                            g$subst-names$10237$14xsgv
                                            g$subst-labels$10236$14xsgv))))
                                      g$subst-labels$10235$14xsgv
                                      g$subst-names$10234$14xsgv))))))
                             g$exp-ext*$10229$14xsgv
                             g$exp-int*$10228$14xsgv))))))
                    g$swap$10225$14xsgv)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10291$14xsgv)
                        (begin
                          (g$imp-collector$10221$14xsgv
                            g$imp-collector$10223$14xsgv)
                          (set! g$imp-collector$10223$14xsgv
                            g$t$10291$14xsgv))))
                     (g$imp-collector$10221$14xsgv))
                    ((case-lambda
                       ((g$t$10292$14xsgv)
                        (begin
                          (g$top-level-context$10222$14xsgv
                            g$top-level-context$10224$14xsgv)
                          (set! g$top-level-context$10224$14xsgv
                            g$t$10292$14xsgv))))
                     (g$top-level-context$10222$14xsgv))))))))
           g$imp-collector$7446$14xsgv
           g$top-level-context$7508$14xsgv
           g$itc$10216$14xsgv
           '#f)))))
   (g$core-library-expander$7450$14xsgv
     g$core-library-expander$10886$14xsgv
     (case-lambda
       ((g$e$10293$14xsgv g$verify-name$10294$14xsgv)
        (call-with-values
          (case-lambda (() (g$parse-library$7440$14xsgv g$e$10293$14xsgv)))
          (case-lambda
            ((g$name*$10299$14xsgv
               g$exp*$10300$14xsgv
               g$imp*$10301$14xsgv
               g$b*$10302$14xsgv)
             ((case-lambda
                ((g$b*$10303$14xsgv
                   g$imp*$10304$14xsgv
                   g$exp*$10305$14xsgv
                   g$name*$10306$14xsgv)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7439$14xsgv g$name*$10306$14xsgv)))
                   (case-lambda
                     ((g$name$10309$14xsgv g$ver$10310$14xsgv)
                      ((case-lambda
                         ((g$ver$10311$14xsgv g$name$10312$14xsgv)
                          (begin
                            (g$verify-name$10294$14xsgv g$name$10312$14xsgv)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7449$14xsgv
                                   g$name$10312$14xsgv
                                   g$exp*$10305$14xsgv
                                   g$imp*$10304$14xsgv
                                   g$b*$10303$14xsgv
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10320$14xsgv
                                   g$invoke-req*$10321$14xsgv
                                   g$visit-req*$10322$14xsgv
                                   g$invoke-code$10323$14xsgv
                                   g$visit-code$10324$14xsgv
                                   g$export-subst$10325$14xsgv
                                   g$export-env$10326$14xsgv)
                                 ((case-lambda
                                    ((g$export-env$10327$14xsgv
                                       g$export-subst$10328$14xsgv
                                       g$visit-code$10329$14xsgv
                                       g$invoke-code$10330$14xsgv
                                       g$visit-req*$10331$14xsgv
                                       g$invoke-req*$10332$14xsgv
                                       g$imp*$10333$14xsgv)
                                     (values
                                       g$name$10312$14xsgv
                                       g$ver$10311$14xsgv
                                       g$imp*$10333$14xsgv
                                       g$invoke-req*$10332$14xsgv
                                       g$visit-req*$10331$14xsgv
                                       g$invoke-code$10330$14xsgv
                                       g$visit-code$10329$14xsgv
                                       g$export-subst$10328$14xsgv
                                       g$export-env$10327$14xsgv)))
                                  g$export-env$10326$14xsgv
                                  g$export-subst$10325$14xsgv
                                  g$visit-code$10324$14xsgv
                                  g$invoke-code$10323$14xsgv
                                  g$visit-req*$10322$14xsgv
                                  g$invoke-req*$10321$14xsgv
                                  g$imp*$10320$14xsgv)))))))
                       g$ver$10310$14xsgv
                       g$name$10309$14xsgv))))))
              g$b*$10302$14xsgv
              g$imp*$10301$14xsgv
              g$exp*$10300$14xsgv
              g$name*$10299$14xsgv)))))))
   (g$parse-top-level-program$7451$14xsgv
     g$parse-top-level-program$10887$14xsgv
     (case-lambda
       ((g$e*$10334$14xsgv)
        ((case-lambda
           ((g$t$10335$14xsgv)
            ((case-lambda
               ((g$ls/false$10336$14xsgv)
                (if (if g$ls/false$10336$14xsgv
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10337$14xsgv
                               g$imp*$10338$14xsgv
                               g$b*$10339$14xsgv)
                             (eq? (g$syntax->datum$7504$14xsgv
                                    g$import$10337$14xsgv)
                                  'import)))
                          g$ls/false$10336$14xsgv))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10340$14xsgv
                         g$imp*$10341$14xsgv
                         g$b*$10342$14xsgv)
                       (values g$imp*$10341$14xsgv g$b*$10342$14xsgv)))
                    g$ls/false$10336$14xsgv)
                  ((case-lambda
                     ((g$t$10343$14xsgv)
                      ((case-lambda
                         ((g$ls/false$10344$14xsgv)
                          (if (if g$ls/false$10344$14xsgv
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10345$14xsgv
                                         g$x$10346$14xsgv
                                         g$y$10347$14xsgv)
                                       (eq? (g$syntax->datum$7504$14xsgv
                                              g$import$10345$14xsgv)
                                            'import)))
                                    g$ls/false$10344$14xsgv))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10348$14xsgv
                                   g$x$10349$14xsgv
                                   g$y$10350$14xsgv)
                                 (g$syntax-violation$7501$14xsgv
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7111$14xsgv
                                     g$e*$10334$14xsgv))))
                              g$ls/false$10344$14xsgv)
                            ((case-lambda
                               ((g$t$10351$14xsgv)
                                ((case-lambda
                                   ((g$ls/false$10352$14xsgv)
                                    (if g$ls/false$10352$14xsgv
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10352$14xsgv)
                                      (g$syntax-violation$7501$14xsgv
                                        '#f
                                        '"invalid syntax"
                                        g$t$10351$14xsgv))))
                                 (g$syntax-dispatch$7392$14xsgv
                                   g$t$10351$14xsgv
                                   '_))))
                             g$t$10343$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv
                         g$t$10343$14xsgv
                         '((any . any) . any)))))
                   g$t$10335$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv
               g$t$10335$14xsgv
               '((any . each-any) . each-any)))))
         g$e*$10334$14xsgv))))
   (g$top-level-expander$7452$14xsgv
     g$top-level-expander$10888$14xsgv
     (case-lambda
       ((g$e*$10353$14xsgv)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7451$14xsgv g$e*$10353$14xsgv)))
          (case-lambda
            ((g$imp*$10356$14xsgv g$b*$10357$14xsgv)
             ((case-lambda
                ((g$b*$10358$14xsgv g$imp*$10359$14xsgv)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7449$14xsgv
                        '()
                        '()
                        g$imp*$10359$14xsgv
                        g$b*$10358$14xsgv
                        '#t)))
                   (case-lambda
                     ((g$imp*$10367$14xsgv
                        g$invoke-req*$10368$14xsgv
                        g$visit-req*$10369$14xsgv
                        g$invoke-code$10370$14xsgv
                        g$visit-code$10371$14xsgv
                        g$export-subst$10372$14xsgv
                        g$export-env$10373$14xsgv)
                      ((case-lambda
                         ((g$export-env$10374$14xsgv
                            g$export-subst$10375$14xsgv
                            g$visit-code$10376$14xsgv
                            g$invoke-code$10377$14xsgv
                            g$visit-req*$10378$14xsgv
                            g$invoke-req*$10379$14xsgv
                            g$imp*$10380$14xsgv)
                          (values
                            g$invoke-req*$10379$14xsgv
                            g$invoke-code$10377$14xsgv)))
                       g$export-env$10373$14xsgv
                       g$export-subst$10372$14xsgv
                       g$visit-code$10371$14xsgv
                       g$invoke-code$10370$14xsgv
                       g$visit-req*$10369$14xsgv
                       g$invoke-req*$10368$14xsgv
                       g$imp*$10367$14xsgv))))))
              g$b*$10357$14xsgv
              g$imp*$10356$14xsgv)))))))
   (g$8487$7453$14xsgv
     g$8487$10889$14xsgv
     (make-record-type-descriptor
       'env
       '#f
       'g$8490$14xsgv
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8489$7454$14xsgv g$8489$10890$14xsgv '#f)
   (g$8488$7455$14xsgv
     g$8488$10891$14xsgv
     (make-record-constructor-descriptor
       g$8487$7453$14xsgv
       '#f
       g$8489$7454$14xsgv))
   (g$env?$7456$14xsgv
     g$env?$10892$14xsgv
     (record-predicate g$8487$7453$14xsgv))
   (g$make-env$7457$14xsgv
     g$make-env$10893$14xsgv
     (record-constructor g$8488$7455$14xsgv))
   (g$env-names$7458$14xsgv
     g$env-names$10894$14xsgv
     (record-accessor g$8487$7453$14xsgv '0))
   (g$env-labels$7459$14xsgv
     g$env-labels$10895$14xsgv
     (record-accessor g$8487$7453$14xsgv '1))
   (g$env-itc$7460$14xsgv
     g$env-itc$10896$14xsgv
     (record-accessor g$8487$7453$14xsgv '2))
   (g$set-env-names!$7461$14xsgv
     g$set-env-names!$10897$14xsgv
     (record-mutator g$8487$7453$14xsgv '0))
   (g$set-env-labels!$7462$14xsgv
     g$set-env-labels!$10898$14xsgv
     (record-mutator g$8487$7453$14xsgv '1))
   (g$set-env-itc!$7463$14xsgv
     g$set-env-itc!$10899$14xsgv
     (record-mutator g$8487$7453$14xsgv '2))
   (g$rp$7464$14xsgv
     g$rp$10900$14xsgv
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10381$14xsgv g$p$10382$14xsgv)
          (display '"#<environment>" g$p$10382$14xsgv)))))
   (g$8506$7465$14xsgv
     g$8506$10901$14xsgv
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8509$14xsgv
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8508$7466$14xsgv g$8508$10902$14xsgv '#f)
   (g$8507$7467$14xsgv
     g$8507$10903$14xsgv
     (make-record-constructor-descriptor
       g$8506$7465$14xsgv
       '#f
       g$8508$7466$14xsgv))
   (g$interaction-env?$7468$14xsgv
     g$interaction-env?$10904$14xsgv
     (record-predicate g$8506$7465$14xsgv))
   (g$make-interaction-env$7469$14xsgv
     g$make-interaction-env$10905$14xsgv
     (record-constructor g$8507$7467$14xsgv))
   (g$interaction-env-rib$7470$14xsgv
     g$interaction-env-rib$10906$14xsgv
     (record-accessor g$8506$7465$14xsgv '0))
   (g$interaction-env-r$7471$14xsgv
     g$interaction-env-r$10907$14xsgv
     (record-accessor g$8506$7465$14xsgv '1))
   (g$interaction-env-locs$7472$14xsgv
     g$interaction-env-locs$10908$14xsgv
     (record-accessor g$8506$7465$14xsgv '2))
   (g$set-interaction-env-rib!$7473$14xsgv
     g$set-interaction-env-rib!$10909$14xsgv
     (record-mutator g$8506$7465$14xsgv '0))
   (g$set-interaction-env-r!$7474$14xsgv
     g$set-interaction-env-r!$10910$14xsgv
     (record-mutator g$8506$7465$14xsgv '1))
   (g$set-interaction-env-locs!$7475$14xsgv
     g$set-interaction-env-locs!$10911$14xsgv
     (record-mutator g$8506$7465$14xsgv '2))
   (g$rp$7476$14xsgv
     g$rp$10912$14xsgv
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10383$14xsgv g$p$10384$14xsgv)
          (display '"#<environment>" g$p$10384$14xsgv)))))
   (g$interaction-environment-symbols$7477$14xsgv
     g$interaction-environment-symbols$10913$14xsgv
     (case-lambda
       (()
        (map (case-lambda ((g$x$10385$14xsgv) g$x$10385$14xsgv))
             (g$rib-sym*$7069$14xsgv
               (g$interaction-env-rib$7470$14xsgv
                 (g$interaction-environment$7507$14xsgv)))))))
   (g$environment-symbols$7478$14xsgv
     g$environment-symbols$10914$14xsgv
     (case-lambda
       ((g$e$10386$14xsgv)
        (vector->list (g$env-names$7458$14xsgv g$e$10386$14xsgv)))))
   (g$environment?$7479$14xsgv
     g$environment?$10915$14xsgv
     (case-lambda
       ((g$x$10387$14xsgv)
        ((case-lambda
           ((g$t$10388$14xsgv)
            (if g$t$10388$14xsgv
              g$t$10388$14xsgv
              (begin '#f (g$interaction-env?$7468$14xsgv g$x$10387$14xsgv)))))
         (g$env?$7456$14xsgv g$x$10387$14xsgv)))))
   (g$environment$7480$14xsgv
     g$environment$10916$14xsgv
     (case-lambda
       (g$imp*$10389$14xsgv
        ((case-lambda
           ((g$itc$10390$14xsgv)
            ((case-lambda
               ((g$imp-collector$10393$14xsgv g$imp-collector$10394$14xsgv)
                ((case-lambda
                   ((g$swap$10395$14xsgv)
                    (dynamic-wind
                      g$swap$10395$14xsgv
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7441$14xsgv
                                g$imp*$10389$14xsgv)))
                           (case-lambda
                             ((g$subst-names$10398$14xsgv
                                g$subst-labels$10399$14xsgv)
                              ((case-lambda
                                 ((g$subst-labels$10400$14xsgv
                                    g$subst-names$10401$14xsgv)
                                  (g$make-env$7457$14xsgv
                                    g$subst-names$10401$14xsgv
                                    g$subst-labels$10400$14xsgv
                                    g$itc$10390$14xsgv)))
                               g$subst-labels$10399$14xsgv
                               g$subst-names$10398$14xsgv))))))
                      g$swap$10395$14xsgv)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10402$14xsgv)
                        (begin
                          (g$imp-collector$10393$14xsgv
                            g$imp-collector$10394$14xsgv)
                          (set! g$imp-collector$10394$14xsgv
                            g$t$10402$14xsgv))))
                     (g$imp-collector$10393$14xsgv)))))))
             g$imp-collector$7446$14xsgv
             g$itc$10390$14xsgv)))
         (g$make-collector$7443$14xsgv)))))
   (g$null-environment$7481$14xsgv
     g$null-environment$10917$14xsgv
     (case-lambda
       ((g$n$10403$14xsgv)
        (begin
          (if (not (eqv? g$n$10403$14xsgv '5))
            (assertion-violation 'null-environment '"not 5" g$n$10403$14xsgv)
            (void))
          (g$environment$7480$14xsgv '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7482$14xsgv
     g$scheme-report-environment$10918$14xsgv
     (case-lambda
       ((g$n$10404$14xsgv)
        (begin
          (if (not (eqv? g$n$10404$14xsgv '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10404$14xsgv)
            (void))
          (g$environment$7480$14xsgv '(psyntax scheme-report-environment-5))))))
   (g$expand$7483$14xsgv
     g$expand$10919$14xsgv
     (case-lambda
       ((g$x$10405$14xsgv g$env$10406$14xsgv)
        (if (g$env?$7456$14xsgv g$env$10406$14xsgv)
          ((case-lambda
             ((g$rib$10407$14xsgv)
              ((case-lambda
                 ((g$x$10408$14xsgv
                    g$itc$10409$14xsgv
                    g$rtc$10410$14xsgv
                    g$vtc$10411$14xsgv)
                  ((case-lambda
                     ((g$x$10412$14xsgv)
                      (begin
                        (g$seal-rib!$7080$14xsgv g$rib$10407$14xsgv)
                        (values g$x$10412$14xsgv (g$rtc$10410$14xsgv)))))
                   ((case-lambda
                      ((g$inv-collector$10419$14xsgv
                         g$vis-collector$10420$14xsgv
                         g$imp-collector$10421$14xsgv
                         g$inv-collector$10422$14xsgv
                         g$vis-collector$10423$14xsgv
                         g$imp-collector$10424$14xsgv)
                       ((case-lambda
                          ((g$swap$10425$14xsgv)
                           (dynamic-wind
                             g$swap$10425$14xsgv
                             (case-lambda
                               (()
                                (g$chi-expr$7410$14xsgv
                                  g$x$10408$14xsgv
                                  '()
                                  '())))
                             g$swap$10425$14xsgv)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10426$14xsgv)
                                 (begin
                                   (g$inv-collector$10419$14xsgv
                                     g$inv-collector$10422$14xsgv)
                                   (set! g$inv-collector$10422$14xsgv
                                     g$t$10426$14xsgv))))
                              (g$inv-collector$10419$14xsgv))
                             ((case-lambda
                                ((g$t$10427$14xsgv)
                                 (begin
                                   (g$vis-collector$10420$14xsgv
                                     g$vis-collector$10423$14xsgv)
                                   (set! g$vis-collector$10423$14xsgv
                                     g$t$10427$14xsgv))))
                              (g$vis-collector$10420$14xsgv))
                             ((case-lambda
                                ((g$t$10428$14xsgv)
                                 (begin
                                   (g$imp-collector$10421$14xsgv
                                     g$imp-collector$10424$14xsgv)
                                   (set! g$imp-collector$10424$14xsgv
                                     g$t$10428$14xsgv))))
                              (g$imp-collector$10421$14xsgv))))))))
                    g$inv-collector$7444$14xsgv
                    g$vis-collector$7445$14xsgv
                    g$imp-collector$7446$14xsgv
                    g$rtc$10410$14xsgv
                    g$vtc$10411$14xsgv
                    g$itc$10409$14xsgv))))
               (g$make-stx$7087$14xsgv
                 g$x$10405$14xsgv
                 g$top-mark*$7056$14xsgv
                 (list g$rib$10407$14xsgv)
                 '())
               (g$env-itc$7460$14xsgv g$env$10406$14xsgv)
               (g$make-collector$7443$14xsgv)
               (g$make-collector$7443$14xsgv))))
           (g$make-top-rib$7442$14xsgv
             (g$env-names$7458$14xsgv g$env$10406$14xsgv)
             (g$env-labels$7459$14xsgv g$env$10406$14xsgv)))
          (if (g$interaction-env?$7468$14xsgv g$env$10406$14xsgv)
            ((case-lambda
               ((g$rib$10429$14xsgv g$r$10430$14xsgv g$rtc$10431$14xsgv)
                ((case-lambda
                   ((g$x$10432$14xsgv)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10443$14xsgv
                               g$inv-collector$10444$14xsgv
                               g$vis-collector$10445$14xsgv
                               g$imp-collector$10446$14xsgv
                               g$top-level-context$10447$14xsgv
                               g$inv-collector$10448$14xsgv
                               g$vis-collector$10449$14xsgv
                               g$imp-collector$10450$14xsgv)
                             ((case-lambda
                                ((g$swap$10451$14xsgv)
                                 (dynamic-wind
                                   g$swap$10451$14xsgv
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7448$14xsgv
                                        g$x$10432$14xsgv
                                        g$rib$10429$14xsgv
                                        g$r$10430$14xsgv)))
                                   g$swap$10451$14xsgv)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10452$14xsgv)
                                       (begin
                                         (g$top-level-context$10443$14xsgv
                                           g$top-level-context$10447$14xsgv)
                                         (set! g$top-level-context$10447$14xsgv
                                           g$t$10452$14xsgv))))
                                    (g$top-level-context$10443$14xsgv))
                                   ((case-lambda
                                      ((g$t$10453$14xsgv)
                                       (begin
                                         (g$inv-collector$10444$14xsgv
                                           g$inv-collector$10448$14xsgv)
                                         (set! g$inv-collector$10448$14xsgv
                                           g$t$10453$14xsgv))))
                                    (g$inv-collector$10444$14xsgv))
                                   ((case-lambda
                                      ((g$t$10454$14xsgv)
                                       (begin
                                         (g$vis-collector$10445$14xsgv
                                           g$vis-collector$10449$14xsgv)
                                         (set! g$vis-collector$10449$14xsgv
                                           g$t$10454$14xsgv))))
                                    (g$vis-collector$10445$14xsgv))
                                   ((case-lambda
                                      ((g$t$10455$14xsgv)
                                       (begin
                                         (g$imp-collector$10446$14xsgv
                                           g$imp-collector$10450$14xsgv)
                                         (set! g$imp-collector$10450$14xsgv
                                           g$t$10455$14xsgv))))
                                    (g$imp-collector$10446$14xsgv))))))))
                          g$top-level-context$7508$14xsgv
                          g$inv-collector$7444$14xsgv
                          g$vis-collector$7445$14xsgv
                          g$imp-collector$7446$14xsgv
                          g$env$10406$14xsgv
                          g$rtc$10431$14xsgv
                          (g$make-collector$7443$14xsgv)
                          (g$make-collector$7443$14xsgv))))
                      (case-lambda
                        ((g$e$10456$14xsgv g$r^$10457$14xsgv)
                         ((case-lambda
                            ((g$r^$10458$14xsgv g$e$10459$14xsgv)
                             (begin
                               (g$set-interaction-env-r!$7474$14xsgv
                                 g$env$10406$14xsgv
                                 g$r^$10458$14xsgv)
                               (values g$e$10459$14xsgv (g$rtc$10431$14xsgv)))))
                          g$r^$10457$14xsgv
                          g$e$10456$14xsgv))))))
                 (g$make-stx$7087$14xsgv
                   g$x$10405$14xsgv
                   g$top-mark*$7056$14xsgv
                   (list g$rib$10429$14xsgv)
                   '()))))
             (g$interaction-env-rib$7470$14xsgv g$env$10406$14xsgv)
             (g$interaction-env-r$7471$14xsgv g$env$10406$14xsgv)
             (g$make-collector$7443$14xsgv))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10406$14xsgv))))))
   (g$eval$7484$14xsgv
     g$eval$10920$14xsgv
     (case-lambda
       ((g$x$10460$14xsgv g$env$10461$14xsgv)
        (begin
          (if (not (g$environment?$7479$14xsgv g$env$10461$14xsgv))
            (error 'eval '"not an environment" g$env$10461$14xsgv)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7483$14xsgv g$x$10460$14xsgv g$env$10461$14xsgv)))
            (case-lambda
              ((g$x$10464$14xsgv g$invoke-req*$10465$14xsgv)
               ((case-lambda
                  ((g$invoke-req*$10466$14xsgv g$x$10467$14xsgv)
                   (begin
                     (for-each
                       g$invoke-library$6929$14xsgv
                       g$invoke-req*$10466$14xsgv)
                     (eval-core
                       (g$expanded->core$6628$14xsgv g$x$10467$14xsgv)))))
                g$invoke-req*$10465$14xsgv
                g$x$10464$14xsgv))))))))
   (g$library-expander$7485$14xsgv
     g$library-expander$10921$14xsgv
     (case-lambda
       ((g$x$10468$14xsgv g$filename$10469$14xsgv g$verify-name$10470$14xsgv)
        (letrec* ((g$build-visit-code$10471$14xsgv
                    (case-lambda
                      ((g$macro*$10514$14xsgv)
                       (if (null? g$macro*$10514$14xsgv)
                         (g$build-void$7049$14xsgv)
                         (g$build-sequence$7048$14xsgv
                           '#f
                           (map (case-lambda
                                  ((g$x$10515$14xsgv)
                                   ((case-lambda
                                      ((g$loc$10516$14xsgv g$src$10517$14xsgv)
                                       (list
                                         'set!
                                         g$loc$10516$14xsgv
                                         g$src$10517$14xsgv)))
                                    (car g$x$10515$14xsgv)
                                    (g$cddr$4889$14xsgv g$x$10515$14xsgv))))
                                g$macro*$10514$14xsgv))))))
                  (g$visit!$10472$14xsgv
                    (case-lambda
                      ((g$macro*$10510$14xsgv)
                       (for-each
                         (case-lambda
                           ((g$x$10511$14xsgv)
                            ((case-lambda
                               ((g$loc$10512$14xsgv g$proc$10513$14xsgv)
                                (set-symbol-value!
                                  g$loc$10512$14xsgv
                                  g$proc$10513$14xsgv)))
                             (car g$x$10511$14xsgv)
                             (g$cadr$4887$14xsgv g$x$10511$14xsgv))))
                         g$macro*$10510$14xsgv)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7450$14xsgv
                 g$x$10468$14xsgv
                 g$verify-name$10470$14xsgv)))
            (case-lambda
              ((g$name$10482$14xsgv
                 g$ver$10483$14xsgv
                 g$imp*$10484$14xsgv
                 g$inv*$10485$14xsgv
                 g$vis*$10486$14xsgv
                 g$invoke-code$10487$14xsgv
                 g$macro*$10488$14xsgv
                 g$export-subst$10489$14xsgv
                 g$export-env$10490$14xsgv)
               ((case-lambda
                  ((g$export-env$10491$14xsgv
                     g$export-subst$10492$14xsgv
                     g$macro*$10493$14xsgv
                     g$invoke-code$10494$14xsgv
                     g$vis*$10495$14xsgv
                     g$inv*$10496$14xsgv
                     g$imp*$10497$14xsgv
                     g$ver$10498$14xsgv
                     g$name$10499$14xsgv)
                   ((case-lambda
                      ((g$id$10500$14xsgv
                         g$name$10501$14xsgv
                         g$ver$10502$14xsgv
                         g$imp*$10503$14xsgv
                         g$vis*$10504$14xsgv
                         g$inv*$10505$14xsgv
                         g$visit-proc$10506$14xsgv
                         g$invoke-proc$10507$14xsgv
                         g$visit-code$10508$14xsgv
                         g$invoke-code$10509$14xsgv)
                       (begin
                         (g$install-library$6927$14xsgv
                           g$id$10500$14xsgv
                           g$name$10501$14xsgv
                           g$ver$10502$14xsgv
                           g$imp*$10503$14xsgv
                           g$vis*$10504$14xsgv
                           g$inv*$10505$14xsgv
                           g$export-subst$10492$14xsgv
                           g$export-env$10491$14xsgv
                           g$visit-proc$10506$14xsgv
                           g$invoke-proc$10507$14xsgv
                           g$visit-code$10508$14xsgv
                           g$invoke-code$10509$14xsgv
                           '#t
                           g$filename$10469$14xsgv)
                         (values
                           g$id$10500$14xsgv
                           g$name$10501$14xsgv
                           g$ver$10502$14xsgv
                           g$imp*$10503$14xsgv
                           g$vis*$10504$14xsgv
                           g$inv*$10505$14xsgv
                           g$invoke-code$10509$14xsgv
                           g$visit-code$10508$14xsgv
                           g$export-subst$10492$14xsgv
                           g$export-env$10491$14xsgv))))
                    (gensym)
                    g$name$10499$14xsgv
                    g$ver$10498$14xsgv
                    (map g$library-spec$6933$14xsgv g$imp*$10497$14xsgv)
                    (map g$library-spec$6933$14xsgv g$vis*$10495$14xsgv)
                    (map g$library-spec$6933$14xsgv g$inv*$10496$14xsgv)
                    (case-lambda
                      (() (g$visit!$10472$14xsgv g$macro*$10493$14xsgv)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6628$14xsgv
                           g$invoke-code$10494$14xsgv))))
                    (g$build-visit-code$10471$14xsgv g$macro*$10493$14xsgv)
                    g$invoke-code$10494$14xsgv)))
                g$export-env$10490$14xsgv
                g$export-subst$10489$14xsgv
                g$macro*$10488$14xsgv
                g$invoke-code$10487$14xsgv
                g$vis*$10486$14xsgv
                g$inv*$10485$14xsgv
                g$imp*$10484$14xsgv
                g$ver$10483$14xsgv
                g$name$10482$14xsgv))))))
       ((g$x$10518$14xsgv g$filename$10519$14xsgv)
        (g$library-expander$7485$14xsgv
          g$x$10518$14xsgv
          g$filename$10519$14xsgv
          (case-lambda ((g$x$10520$14xsgv) (values)))))
       ((g$x$10521$14xsgv)
        (g$library-expander$7485$14xsgv
          g$x$10521$14xsgv
          '#f
          (case-lambda ((g$x$10522$14xsgv) (values)))))))
   (g$boot-library-expand$7486$14xsgv
     g$boot-library-expand$10922$14xsgv
     (case-lambda
       ((g$x$10523$14xsgv)
        (call-with-values
          (case-lambda (() (g$library-expander$7485$14xsgv g$x$10523$14xsgv)))
          (case-lambda
            ((g$id$10534$14xsgv
               g$name$10535$14xsgv
               g$ver$10536$14xsgv
               g$imp*$10537$14xsgv
               g$vis*$10538$14xsgv
               g$inv*$10539$14xsgv
               g$invoke-code$10540$14xsgv
               g$visit-code$10541$14xsgv
               g$export-subst$10542$14xsgv
               g$export-env$10543$14xsgv)
             ((case-lambda
                ((g$export-env$10544$14xsgv
                   g$export-subst$10545$14xsgv
                   g$visit-code$10546$14xsgv
                   g$invoke-code$10547$14xsgv
                   g$inv*$10548$14xsgv
                   g$vis*$10549$14xsgv
                   g$imp*$10550$14xsgv
                   g$ver$10551$14xsgv
                   g$name$10552$14xsgv
                   g$id$10553$14xsgv)
                 (values
                   g$name$10552$14xsgv
                   g$invoke-code$10547$14xsgv
                   g$export-subst$10545$14xsgv
                   g$export-env$10544$14xsgv)))
              g$export-env$10543$14xsgv
              g$export-subst$10542$14xsgv
              g$visit-code$10541$14xsgv
              g$invoke-code$10540$14xsgv
              g$inv*$10539$14xsgv
              g$vis*$10538$14xsgv
              g$imp*$10537$14xsgv
              g$ver$10536$14xsgv
              g$name$10535$14xsgv
              g$id$10534$14xsgv)))))))
   (g$rev-map-append$7487$14xsgv
     g$rev-map-append$10923$14xsgv
     (case-lambda
       ((g$f$10554$14xsgv g$ls$10555$14xsgv g$ac$10556$14xsgv)
        (if (null? g$ls$10555$14xsgv)
          g$ac$10556$14xsgv
          (g$rev-map-append$7487$14xsgv
            g$f$10554$14xsgv
            (cdr g$ls$10555$14xsgv)
            (cons
              (g$f$10554$14xsgv (car g$ls$10555$14xsgv))
              g$ac$10556$14xsgv))))))
   (g$build-exports$7488$14xsgv
     g$build-exports$10924$14xsgv
     (case-lambda
       ((g$lex*+loc*$10557$14xsgv g$init*$10558$14xsgv)
        (g$build-sequence$7048$14xsgv
          '#f
          (cons
            (g$build-void$7049$14xsgv)
            (g$rev-map-append$7487$14xsgv
              (case-lambda
                ((g$x$10559$14xsgv)
                 (list 'set! (cdr g$x$10559$14xsgv) (car g$x$10559$14xsgv))))
              g$lex*+loc*$10557$14xsgv
              g$init*$10558$14xsgv))))))
   (g$make-export-subst$7489$14xsgv
     g$make-export-subst$10925$14xsgv
     (case-lambda
       ((g$int*$10560$14xsgv g$ext*$10561$14xsgv g$rib$10562$14xsgv)
        (map (case-lambda
               ((g$int$10563$14xsgv g$ext$10564$14xsgv)
                ((case-lambda
                   ((g$id$10565$14xsgv)
                    ((case-lambda
                       ((g$label$10566$14xsgv)
                        ((case-lambda
                           (()
                            (begin
                              (if (not g$label$10566$14xsgv)
                                (g$syntax-violation$7501$14xsgv
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10565$14xsgv)
                                (void))
                              (cons
                                g$ext$10564$14xsgv
                                g$label$10566$14xsgv)))))))
                     (g$id->label$7127$14xsgv g$id$10565$14xsgv))))
                 (g$make-stx$7087$14xsgv
                   g$int$10563$14xsgv
                   g$top-mark*$7056$14xsgv
                   (list g$rib$10562$14xsgv)
                   '()))))
             g$int*$10560$14xsgv
             g$ext*$10561$14xsgv))))
   (g$make-export-env/macros$7490$14xsgv
     g$make-export-env/macros$10926$14xsgv
     (case-lambda
       ((g$lex*$10567$14xsgv g$loc*$10568$14xsgv g$r$10569$14xsgv)
        (letrec* ((g$lookup$10570$14xsgv
                    (case-lambda
                      ((g$x$10585$14xsgv)
                       ((letrec ((g$f$10586$14xsgv
                                   (case-lambda
                                     ((g$x$10587$14xsgv
                                        g$lex*$10588$14xsgv
                                        g$loc*$10589$14xsgv)
                                      (if (pair? g$lex*$10588$14xsgv)
                                        (if (eq? g$x$10587$14xsgv
                                                 (car g$lex*$10588$14xsgv))
                                          (car g$loc*$10589$14xsgv)
                                          (g$f$10586$14xsgv
                                            g$x$10587$14xsgv
                                            (cdr g$lex*$10588$14xsgv)
                                            (cdr g$loc*$10589$14xsgv)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10586$14xsgv)
                        g$x$10585$14xsgv
                        g$lex*$10567$14xsgv
                        g$loc*$10568$14xsgv)))))
          ((letrec ((g$f$10571$14xsgv
                      (case-lambda
                        ((g$r$10572$14xsgv
                           g$env$10573$14xsgv
                           g$global*$10574$14xsgv
                           g$macro*$10575$14xsgv)
                         (if (null? g$r$10572$14xsgv)
                           (values
                             g$env$10573$14xsgv
                             g$global*$10574$14xsgv
                             g$macro*$10575$14xsgv)
                           ((case-lambda
                              ((g$x$10576$14xsgv)
                               ((case-lambda
                                  ((g$label$10577$14xsgv g$b$10578$14xsgv)
                                   ((case-lambda
                                      ((g$t$10579$14xsgv)
                                       (if (memv g$t$10579$14xsgv '(lexical))
                                         ((case-lambda
                                            ((g$v$10580$14xsgv)
                                             ((case-lambda
                                                ((g$loc$10581$14xsgv
                                                   g$type$10582$14xsgv)
                                                 (g$f$10571$14xsgv
                                                   (cdr g$r$10572$14xsgv)
                                                   (cons
                                                     (g$cons*$5358$14xsgv
                                                       g$label$10577$14xsgv
                                                       g$type$10582$14xsgv
                                                       g$loc$10581$14xsgv)
                                                     g$env$10573$14xsgv)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7336$14xsgv
                                                         g$v$10580$14xsgv)
                                                       g$loc$10581$14xsgv)
                                                     g$global*$10574$14xsgv)
                                                   g$macro*$10575$14xsgv)))
                                              (g$lookup$10570$14xsgv
                                                (g$lexical-var$7336$14xsgv
                                                  g$v$10580$14xsgv))
                                              (if (g$lexical-mutable?$7337$14xsgv
                                                    g$v$10580$14xsgv)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7132$14xsgv
                                            g$b$10578$14xsgv))
                                         (if (memv
                                               g$t$10579$14xsgv
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10583$14xsgv)
                                               (g$f$10571$14xsgv
                                                 (cdr g$r$10572$14xsgv)
                                                 (cons
                                                   (g$cons*$5358$14xsgv
                                                     g$label$10577$14xsgv
                                                     'global-macro
                                                     g$loc$10583$14xsgv)
                                                   g$env$10573$14xsgv)
                                                 g$global*$10574$14xsgv
                                                 (cons
                                                   (cons
                                                     g$loc$10583$14xsgv
                                                     (g$binding-value$7132$14xsgv
                                                       g$b$10578$14xsgv))
                                                   g$macro*$10575$14xsgv))))
                                            (gensym))
                                           (if (memv
                                                 g$t$10579$14xsgv
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10584$14xsgv)
                                                 (g$f$10571$14xsgv
                                                   (cdr g$r$10572$14xsgv)
                                                   (cons
                                                     (g$cons*$5358$14xsgv
                                                       g$label$10577$14xsgv
                                                       'global-macro!
                                                       g$loc$10584$14xsgv)
                                                     g$env$10573$14xsgv)
                                                   g$global*$10574$14xsgv
                                                   (cons
                                                     (cons
                                                       g$loc$10584$14xsgv
                                                       (g$binding-value$7132$14xsgv
                                                         g$b$10578$14xsgv))
                                                     g$macro*$10575$14xsgv))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10579$14xsgv
                                                   '($rtd $module))
                                               (g$f$10571$14xsgv
                                                 (cdr g$r$10572$14xsgv)
                                                 (cons
                                                   g$x$10576$14xsgv
                                                   g$env$10573$14xsgv)
                                                 g$global*$10574$14xsgv
                                                 g$macro*$10575$14xsgv)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7131$14xsgv
                                                   g$b$10578$14xsgv)
                                                 (g$binding-value$7132$14xsgv
                                                   g$b$10578$14xsgv))))))))
                                    (g$binding-type$7131$14xsgv
                                      g$b$10578$14xsgv))))
                                (car g$x$10576$14xsgv)
                                (cdr g$x$10576$14xsgv))))
                            (car g$r$10572$14xsgv)))))))
             g$f$10571$14xsgv)
           g$r$10569$14xsgv
           '()
           '()
           '())))))
   (g$generate-temporaries$7491$14xsgv
     g$generate-temporaries$10927$14xsgv
     (case-lambda
       ((g$ls$10590$14xsgv)
        ((case-lambda
           ((g$t$10591$14xsgv)
            ((case-lambda
               ((g$ls/false$10592$14xsgv)
                (if g$ls/false$10592$14xsgv
                  (apply
                    (case-lambda
                      ((g$ls$10593$14xsgv)
                       (map (case-lambda
                              ((g$x$10594$14xsgv)
                               (g$make-stx$7087$14xsgv
                                 ((case-lambda
                                    ((g$x$10595$14xsgv)
                                     (if ((case-lambda
                                            ((g$t$10596$14xsgv)
                                             (if g$t$10596$14xsgv
                                               g$t$10596$14xsgv
                                               (begin
                                                 '#f
                                                 (string? g$x$10595$14xsgv)))))
                                          (symbol? g$x$10595$14xsgv))
                                       (gensym g$x$10595$14xsgv)
                                       (gensym 't))))
                                  (g$syntax->datum$7504$14xsgv
                                    g$x$10594$14xsgv))
                                 g$top-mark*$7056$14xsgv
                                 '()
                                 '())))
                            g$ls$10593$14xsgv)))
                    g$ls/false$10592$14xsgv)
                  ((case-lambda
                     ((g$t$10597$14xsgv)
                      ((case-lambda
                         ((g$ls/false$10598$14xsgv)
                          (if g$ls/false$10598$14xsgv
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10598$14xsgv)
                            (g$syntax-violation$7501$14xsgv
                              '#f
                              '"invalid syntax"
                              g$t$10597$14xsgv))))
                       (g$syntax-dispatch$7392$14xsgv g$t$10597$14xsgv '_))))
                   g$t$10591$14xsgv))))
             (g$syntax-dispatch$7392$14xsgv g$t$10591$14xsgv 'each-any))))
         g$ls$10590$14xsgv))))
   (g$free-identifier=?$7492$14xsgv
     g$free-identifier=?$10928$14xsgv
     (case-lambda
       ((g$x$10599$14xsgv g$y$10600$14xsgv)
        (if (g$id?$7114$14xsgv g$x$10599$14xsgv)
          (if (g$id?$7114$14xsgv g$y$10600$14xsgv)
            (g$free-id=?$7118$14xsgv g$x$10599$14xsgv g$y$10600$14xsgv)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10600$14xsgv))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10599$14xsgv)))))
   (g$bound-identifier=?$7493$14xsgv
     g$bound-identifier=?$10929$14xsgv
     (case-lambda
       ((g$x$10601$14xsgv g$y$10602$14xsgv)
        (if (g$id?$7114$14xsgv g$x$10601$14xsgv)
          (if (g$id?$7114$14xsgv g$y$10602$14xsgv)
            (g$bound-id=?$7117$14xsgv g$x$10601$14xsgv g$y$10602$14xsgv)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10602$14xsgv))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10601$14xsgv)))))
   (g$make-source-condition$7494$14xsgv
     g$make-source-condition$10930$14xsgv
     (case-lambda
       ((g$x$10603$14xsgv)
        (letrec* ((g$11388$10604$14xsgv
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11391$14xsgv
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11390$10605$14xsgv '#f)
                  (g$11389$10606$14xsgv
                    (make-record-constructor-descriptor
                      g$11388$10604$14xsgv
                      &condition-rcd
                      g$11390$10605$14xsgv))
                  (g$11387$10607$14xsgv (record-predicate g$11388$10604$14xsgv))
                  (g$make-source-condition$10608$14xsgv
                    (record-constructor g$11389$10606$14xsgv))
                  (g$11385$10609$14xsgv
                    (record-accessor g$11388$10604$14xsgv '0))
                  (g$11386$10610$14xsgv
                    (record-accessor g$11388$10604$14xsgv '1))
                  (g$source-condition?$10611$14xsgv
                    (condition-predicate g$11388$10604$14xsgv))
                  (g$source-filename$10612$14xsgv
                    (condition-accessor
                      g$11388$10604$14xsgv
                      g$11385$10609$14xsgv))
                  (g$source-character$10613$14xsgv
                    (condition-accessor
                      g$11388$10604$14xsgv
                      g$11386$10610$14xsgv)))
          (if (pair? g$x$10603$14xsgv)
            (g$make-source-condition$10608$14xsgv
              (car g$x$10603$14xsgv)
              (cdr g$x$10603$14xsgv))
            (condition))))))
   (g$extract-position-condition$7495$14xsgv
     g$extract-position-condition$10931$14xsgv
     (case-lambda
       ((g$x$10614$14xsgv)
        (g$make-source-condition$7494$14xsgv
          (g$expression-position$7496$14xsgv g$x$10614$14xsgv)))))
   (g$expression-position$7496$14xsgv
     g$expression-position$10932$14xsgv
     (case-lambda
       ((g$x$10615$14xsgv)
        (if (g$stx?$7086$14xsgv g$x$10615$14xsgv)
          (begin
            '#f
            ((case-lambda
               ((g$x$10616$14xsgv)
                (if (annotation? g$x$10616$14xsgv)
                  (begin '#f (annotation-source g$x$10616$14xsgv))
                  '#f)))
             (g$stx-expr$7088$14xsgv g$x$10615$14xsgv)))
          '#f))))
   (g$assertion-error$7497$14xsgv
     g$assertion-error$10933$14xsgv
     (case-lambda
       ((g$expr$10617$14xsgv g$pos$10618$14xsgv)
        (raise
          (condition
            (g$make-assertion-violation$5642$14xsgv)
            (g$make-who-condition$5656$14xsgv 'assert)
            (g$make-message-condition$5610$14xsgv '"assertion failed")
            (g$make-irritants-condition$5648$14xsgv (list g$expr$10617$14xsgv))
            (g$make-source-condition$7494$14xsgv g$pos$10618$14xsgv))))))
   (g$syntax-error$7498$14xsgv
     g$syntax-error$10934$14xsgv
     (case-lambda
       ((g$x$10619$14xsgv . g$args$10620$14xsgv)
        (begin
          (if (not (g$for-all$5356$14xsgv string? g$args$10620$14xsgv))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10620$14xsgv)
            (void))
          (raise
            (condition
              (g$make-message-condition$5610$14xsgv
                (if (null? g$args$10620$14xsgv)
                  '"invalid syntax"
                  (apply string-append g$args$10620$14xsgv)))
              (g$make-syntax-violation$5682$14xsgv
                (g$syntax->datum$7504$14xsgv g$x$10619$14xsgv)
                '#f)
              (g$extract-position-condition$7495$14xsgv g$x$10619$14xsgv)
              (g$extract-trace$7499$14xsgv g$x$10619$14xsgv)))))))
   (g$extract-trace$7499$14xsgv
     g$extract-trace$10935$14xsgv
     (case-lambda
       ((g$x$10621$14xsgv)
        (letrec* ((g$11415$10622$14xsgv
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11418$14xsgv
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11417$10623$14xsgv '#f)
                  (g$11416$10624$14xsgv
                    (make-record-constructor-descriptor
                      g$11415$10622$14xsgv
                      &condition-rcd
                      g$11417$10623$14xsgv))
                  (g$11414$10625$14xsgv (record-predicate g$11415$10622$14xsgv))
                  (g$make-trace$10626$14xsgv
                    (record-constructor g$11416$10624$14xsgv))
                  (g$11413$10627$14xsgv
                    (record-accessor g$11415$10622$14xsgv '0))
                  (g$trace?$10628$14xsgv
                    (condition-predicate g$11415$10622$14xsgv))
                  (g$trace-form$10629$14xsgv
                    (condition-accessor
                      g$11415$10622$14xsgv
                      g$11413$10627$14xsgv)))
          ((letrec ((g$f$10630$14xsgv
                      (case-lambda
                        ((g$x$10631$14xsgv)
                         (if (g$stx?$7086$14xsgv g$x$10631$14xsgv)
                           (apply
                             condition
                             (g$make-trace$10626$14xsgv g$x$10631$14xsgv)
                             (map g$f$10630$14xsgv
                                  (g$stx-ae*$7091$14xsgv g$x$10631$14xsgv)))
                           (if (annotation? g$x$10631$14xsgv)
                             (g$make-trace$10626$14xsgv
                               (g$make-stx$7087$14xsgv
                                 g$x$10631$14xsgv
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10630$14xsgv)
           g$x$10621$14xsgv)))))
   (g$syntax-violation*$7500$14xsgv
     g$syntax-violation*$10936$14xsgv
     (case-lambda
       ((g$who$10632$14xsgv
          g$msg$10633$14xsgv
          g$form$10634$14xsgv
          g$condition-object$10635$14xsgv)
        (begin
          (if (not (string? g$msg$10633$14xsgv))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10633$14xsgv)
            (void))
          ((case-lambda
             ((g$who$10636$14xsgv)
              (raise
                (condition
                  (if g$who$10636$14xsgv
                    (g$make-who-condition$5656$14xsgv g$who$10636$14xsgv)
                    (condition))
                  (g$make-message-condition$5610$14xsgv g$msg$10633$14xsgv)
                  g$condition-object$10635$14xsgv
                  (g$extract-position-condition$7495$14xsgv g$form$10634$14xsgv)
                  (g$extract-trace$7499$14xsgv g$form$10634$14xsgv)))))
           (if ((case-lambda
                  ((g$t$10637$14xsgv)
                   (if g$t$10637$14xsgv
                     g$t$10637$14xsgv
                     (begin '#f (symbol? g$who$10632$14xsgv)))))
                (string? g$who$10632$14xsgv))
             g$who$10632$14xsgv
             (if (not g$who$10632$14xsgv)
               ((case-lambda
                  ((g$t$10638$14xsgv)
                   ((case-lambda
                      ((g$ls/false$10639$14xsgv)
                       (if (if g$ls/false$10639$14xsgv
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10640$14xsgv)
                                    (g$id?$7114$14xsgv g$id$10640$14xsgv)))
                                 g$ls/false$10639$14xsgv))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10641$14xsgv)
                              (g$syntax->datum$7504$14xsgv g$id$10641$14xsgv)))
                           g$ls/false$10639$14xsgv)
                         ((case-lambda
                            ((g$t$10642$14xsgv)
                             ((case-lambda
                                ((g$ls/false$10643$14xsgv)
                                 (if (if g$ls/false$10643$14xsgv
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10644$14xsgv
                                                g$rest$10645$14xsgv)
                                              (g$id?$7114$14xsgv
                                                g$id$10644$14xsgv)))
                                           g$ls/false$10643$14xsgv))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10646$14xsgv g$rest$10647$14xsgv)
                                        (g$syntax->datum$7504$14xsgv
                                          g$id$10646$14xsgv)))
                                     g$ls/false$10643$14xsgv)
                                   ((case-lambda
                                      ((g$t$10648$14xsgv)
                                       ((case-lambda
                                          ((g$ls/false$10649$14xsgv)
                                           (if g$ls/false$10649$14xsgv
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10649$14xsgv)
                                             (g$syntax-violation$7501$14xsgv
                                               '#f
                                               '"invalid syntax"
                                               g$t$10648$14xsgv))))
                                        (g$syntax-dispatch$7392$14xsgv
                                          g$t$10648$14xsgv
                                          '_))))
                                    g$t$10642$14xsgv))))
                              (g$syntax-dispatch$7392$14xsgv
                                g$t$10642$14xsgv
                                '(any . any)))))
                          g$t$10638$14xsgv))))
                    (g$syntax-dispatch$7392$14xsgv g$t$10638$14xsgv 'any))))
                g$form$10634$14xsgv)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10632$14xsgv))))))))
   (g$syntax-violation$7501$14xsgv
     g$syntax-violation$10937$14xsgv
     (case-lambda
       ((g$who$10650$14xsgv g$msg$10651$14xsgv g$form$10652$14xsgv)
        (g$syntax-violation$7501$14xsgv
          g$who$10650$14xsgv
          g$msg$10651$14xsgv
          g$form$10652$14xsgv
          '#f))
       ((g$who$10653$14xsgv
          g$msg$10654$14xsgv
          g$form$10655$14xsgv
          g$subform$10656$14xsgv)
        (g$syntax-violation*$7500$14xsgv
          g$who$10653$14xsgv
          g$msg$10654$14xsgv
          g$form$10655$14xsgv
          (g$make-syntax-violation$5682$14xsgv
            (g$syntax->datum$7504$14xsgv g$form$10655$14xsgv)
            (g$syntax->datum$7504$14xsgv g$subform$10656$14xsgv))))))
   (g$identifier?$7502$14xsgv
     g$identifier?$10938$14xsgv
     (case-lambda ((g$x$10657$14xsgv) (g$id?$7114$14xsgv g$x$10657$14xsgv))))
   (g$datum->syntax$7503$14xsgv
     g$datum->syntax$10939$14xsgv
     (case-lambda
       ((g$id$10658$14xsgv g$datum$10659$14xsgv)
        (if (g$id?$7114$14xsgv g$id$10658$14xsgv)
          (g$datum->stx$7097$14xsgv g$id$10658$14xsgv g$datum$10659$14xsgv)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10658$14xsgv)))))
   (g$syntax->datum$7504$14xsgv
     g$syntax->datum$10940$14xsgv
     (case-lambda
       ((g$x$10660$14xsgv) (g$stx->datum$7125$14xsgv g$x$10660$14xsgv))))
   (g$compile-r6rs-top-level$7505$14xsgv
     g$compile-r6rs-top-level$10941$14xsgv
     (case-lambda
       ((g$x*$10661$14xsgv)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7452$14xsgv g$x*$10661$14xsgv)))
          (case-lambda
            ((g$lib*$10664$14xsgv g$invoke-code$10665$14xsgv)
             ((case-lambda
                ((g$invoke-code$10666$14xsgv g$lib*$10667$14xsgv)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$6929$14xsgv
                        g$lib*$10667$14xsgv)
                      (eval-core
                        (g$expanded->core$6628$14xsgv
                          g$invoke-code$10666$14xsgv)))))))
              g$invoke-code$10665$14xsgv
              g$lib*$10664$14xsgv)))))))
   (g$pre-compile-r6rs-top-level$7506$14xsgv
     g$pre-compile-r6rs-top-level$10942$14xsgv
     (case-lambda
       ((g$x*$10668$14xsgv)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7452$14xsgv g$x*$10668$14xsgv)))
          (case-lambda
            ((g$lib*$10671$14xsgv g$invoke-code$10672$14xsgv)
             ((case-lambda
                ((g$invoke-code$10673$14xsgv g$lib*$10674$14xsgv)
                 (begin
                   (for-each g$invoke-library$6929$14xsgv g$lib*$10674$14xsgv)
                   (compile-core
                     (g$expanded->core$6628$14xsgv
                       g$invoke-code$10673$14xsgv)))))
              g$invoke-code$10672$14xsgv
              g$lib*$10671$14xsgv)))))))
   (g$interaction-environment$7507$14xsgv
     g$interaction-environment$10943$14xsgv
     ((case-lambda
        ((g$the-env$10675$14xsgv)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10676$14xsgv)
                (if g$t$10676$14xsgv
                  g$t$10676$14xsgv
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10677$14xsgv g$rib$10678$14xsgv)
                        (begin
                          ((case-lambda
                             ((g$subst$10679$14xsgv)
                              (begin
                                (g$set-rib-sym*!$7073$14xsgv
                                  g$rib$10678$14xsgv
                                  (map car g$subst$10679$14xsgv))
                                (g$set-rib-mark**!$7074$14xsgv
                                  g$rib$10678$14xsgv
                                  (map (case-lambda
                                         ((g$x$10680$14xsgv)
                                          g$top-mark*$7056$14xsgv))
                                       g$subst$10679$14xsgv))
                                (g$set-rib-label*!$7075$14xsgv
                                  g$rib$10678$14xsgv
                                  (map cdr g$subst$10679$14xsgv)))))
                           (g$library-subst$6886$14xsgv g$lib$10677$14xsgv))
                          ((case-lambda
                             ((g$env$10681$14xsgv)
                              (begin
                                (set! g$the-env$10675$14xsgv g$env$10681$14xsgv)
                                g$env$10681$14xsgv)))
                           (g$make-interaction-env$7469$14xsgv
                             g$rib$10678$14xsgv
                             '()
                             '())))))
                     (g$find-library-by-name$6922$14xsgv '(ironscheme))
                     (g$make-empty-rib$7077$14xsgv))))))
             g$the-env$10675$14xsgv)))))
      '#f))
   (g$top-level-context$7508$14xsgv
     g$top-level-context$10944$14xsgv
     (g$make-parameter$6381$14xsgv '#f)))
  (g$current-library-expander$6919$14xsgv g$library-expander$7485$14xsgv))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6625$14xsgv
      (case-lambda
        ((g$x$10997$14xsgv)
         ((case-lambda
            ((g$t$10998$14xsgv)
             (if g$t$10998$14xsgv (cdr g$t$10998$14xsgv) '#f)))
          (assq
            g$x$10997$14xsgv
            '((ellipsis-map . g$ellipsis-map$10833$14xsgv)
              (ironscheme-build . g$ironscheme-build$10990$14xsgv)
              (syntax-error . g$syntax-error$10934$14xsgv)
              (syntax-dispatch . g$syntax-dispatch$10828$14xsgv)
              (compile-system-libraries
                .
                g$compile-system-libraries$10992$14xsgv)
              (compile->closure . g$compile->closure$10994$14xsgv)
              (compile . g$compile$10993$14xsgv)
              (load . g$load$10989$14xsgv)
              (interaction-environment . g$interaction-environment$10943$14xsgv)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10766$14xsgv)
              (variable-transformer? . g$variable-transformer?$10765$14xsgv)
              (make-variable-transformer
                .
                g$make-variable-transformer$10764$14xsgv)
              (identifier? . g$identifier?$10938$14xsgv)
              (generate-temporaries . g$generate-temporaries$10927$14xsgv)
              (free-identifier=? . g$free-identifier=?$10928$14xsgv)
              (syntax->datum . g$syntax->datum$10940$14xsgv)
              (datum->syntax . g$datum->syntax$10939$14xsgv)
              (bound-identifier=? . g$bound-identifier=?$10929$14xsgv)
              (delete-file . g$delete-file$5228$14xsgv)
              (file-exists? . g$file-exists?$5227$14xsgv)
              (list-sort . g$list-sort$5753$14xsgv)
              (make-eqv-hashtable . g$make-eqv-hashtable$5150$14xsgv)
              (make-eq-hashtable . g$make-eq-hashtable$5149$14xsgv)
              (hashtable-update! . g$hashtable-update!$5156$14xsgv)
              (hashtable-size . g$hashtable-size$5151$14xsgv)
              (hashtable-set! . g$hashtable-set!$5153$14xsgv)
              (hashtable-ref . g$hashtable-ref$5152$14xsgv)
              (hashtable-delete! . g$hashtable-delete!$5154$14xsgv)
              (hashtable-contains? . g$hashtable-contains?$5155$14xsgv)
              (hashtable-clear! . g$hashtable-clear!$5157$14xsgv)
              (call-with-output-file . g$call-with-output-file$6130$14xsgv)
              (call-with-input-file . g$call-with-input-file$6129$14xsgv)
              (with-output-to-file . g$with-output-to-file$6128$14xsgv)
              (with-input-from-file . g$with-input-from-file$6127$14xsgv)
              (port? . g$port?$6094$14xsgv)
              (open-string-output-port . g$open-string-output-port$6093$14xsgv)
              (make-i/o-write-error . g$make-i/o-write-error$6019$14xsgv)
              (make-i/o-read-error . g$make-i/o-read-error$6013$14xsgv)
              (make-i/o-port-error . g$make-i/o-port-error$6065$14xsgv)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6025$14xsgv)
              (make-i/o-filename-error . g$make-i/o-filename-error$6033$14xsgv)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6041$14xsgv)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6047$14xsgv)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6059$14xsgv)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6053$14xsgv)
              (make-i/o-error . g$make-i/o-error$6007$14xsgv)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6079$14xsgv)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6073$14xsgv)
              (i/o-write-error? . g$i/o-write-error?$6020$14xsgv)
              (i/o-read-error? . g$i/o-read-error?$6014$14xsgv)
              (i/o-port-error? . g$i/o-port-error?$6067$14xsgv)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6027$14xsgv)
              (i/o-error-position . g$i/o-error-position$6028$14xsgv)
              (i/o-filename-error? . g$i/o-filename-error?$6035$14xsgv)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6042$14xsgv)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6048$14xsgv)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6060$14xsgv)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6054$14xsgv)
              (i/o-error? . g$i/o-error?$6008$14xsgv)
              (i/o-error-port . g$i/o-error-port$6068$14xsgv)
              (i/o-error-filename . g$i/o-error-filename$6036$14xsgv)
              (i/o-encoding-error? . g$i/o-encoding-error?$6081$14xsgv)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6082$14xsgv)
              (i/o-decoding-error? . g$i/o-decoding-error?$6074$14xsgv)
              (scheme-report-environment
                .
                g$scheme-report-environment$10918$14xsgv)
              (quotient . g$quotient$5720$14xsgv)
              (null-environment . g$null-environment$10917$14xsgv)
              (remainder . g$remainder$5721$14xsgv)
              (modulo . g$modulo$5722$14xsgv)
              (force . g$force$5724$14xsgv)
              (command-line . g$command-line$10986$14xsgv)
              (remove . g$remove$5361$14xsgv)
              (remv . g$remv$5362$14xsgv)
              (remp . g$remp$5347$14xsgv)
              (remq . g$remq$5363$14xsgv)
              (partition . g$partition$5346$14xsgv)
              (memp . g$memp$5353$14xsgv)
              (member . g$member$5352$14xsgv)
              (exists . g$exists$5357$14xsgv)
              (for-all . g$for-all$5356$14xsgv)
              (fold-right . g$fold-right$5360$14xsgv)
              (fold-left . g$fold-left$5359$14xsgv)
              (find . g$find$5345$14xsgv)
              (filter . g$filter$5348$14xsgv)
              (cons* . g$cons*$5358$14xsgv)
              (assv . g$assv$5349$14xsgv)
              (assp . g$assp$5351$14xsgv)
              (assoc . g$assoc$5350$14xsgv)
              (eval . g$eval$10920$14xsgv)
              (environment . g$environment$10916$14xsgv)
              (make-enumeration . g$make-enumeration$6258$14xsgv)
              (enum-set=? . g$enum-set=?$6265$14xsgv)
              (enum-set-universe . g$enum-set-universe$6259$14xsgv)
              (enum-set-union . g$enum-set-union$6266$14xsgv)
              (enum-set-subset? . g$enum-set-subset?$6264$14xsgv)
              (enum-set-projection . g$enum-set-projection$6270$14xsgv)
              (enum-set-member? . g$enum-set-member?$6263$14xsgv)
              (enum-set-intersection . g$enum-set-intersection$6267$14xsgv)
              (enum-set-indexer . g$enum-set-indexer$6260$14xsgv)
              (enum-set-difference . g$enum-set-difference$6268$14xsgv)
              (enum-set-constructor . g$enum-set-constructor$6261$14xsgv)
              (enum-set-complement . g$enum-set-complement$6269$14xsgv)
              (enum-set->list . g$enum-set->list$6262$14xsgv)
              (who-condition? . g$who-condition?$5658$14xsgv)
              (warning? . g$warning?$5619$14xsgv)
              (violation? . g$violation?$5637$14xsgv)
              (undefined-violation? . g$undefined-violation?$5693$14xsgv)
              (syntax-violation? . g$syntax-violation?$5685$14xsgv)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5687$14xsgv)
              (syntax-violation-form . g$syntax-violation-form$5686$14xsgv)
              (syntax-violation . g$syntax-violation$10937$14xsgv)
              (serious-condition? . g$serious-condition?$5625$14xsgv)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5665$14xsgv)
              (message-condition? . g$message-condition?$5612$14xsgv)
              (make-who-condition . g$make-who-condition$5656$14xsgv)
              (make-warning . g$make-warning$5618$14xsgv)
              (make-violation . g$make-violation$5636$14xsgv)
              (make-undefined-violation
                .
                g$make-undefined-violation$5692$14xsgv)
              (make-syntax-violation . g$make-syntax-violation$5682$14xsgv)
              (make-serious-condition . g$make-serious-condition$5624$14xsgv)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5664$14xsgv)
              (make-message-condition . g$make-message-condition$5610$14xsgv)
              (make-lexical-violation . g$make-lexical-violation$5676$14xsgv)
              (make-irritants-condition
                .
                g$make-irritants-condition$5648$14xsgv)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5670$14xsgv)
              (make-error . g$make-error$5630$14xsgv)
              (make-assertion-violation
                .
                g$make-assertion-violation$5642$14xsgv)
              (lexical-violation? . g$lexical-violation?$5677$14xsgv)
              (irritants-condition? . g$irritants-condition?$5650$14xsgv)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5671$14xsgv)
              (error? . g$error?$5631$14xsgv)
              (condition-who . g$condition-who$5659$14xsgv)
              (condition-message . g$condition-message$5613$14xsgv)
              (condition-irritants . g$condition-irritants$5651$14xsgv)
              (assertion-violation? . g$assertion-violation?$5643$14xsgv)
              (native-endianness . g$native-endianness$5475$14xsgv)
              (bytevector-u64-set! . g$bytevector-u64-set!$5496$14xsgv)
              (bytevector-u64-ref . g$bytevector-u64-ref$5492$14xsgv)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5498$14xsgv)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5494$14xsgv)
              (bytevector-u32-set! . g$bytevector-u32-set!$5488$14xsgv)
              (bytevector-u32-ref . g$bytevector-u32-ref$5484$14xsgv)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5490$14xsgv)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5486$14xsgv)
              (bytevector-u16-set! . g$bytevector-u16-set!$5480$14xsgv)
              (bytevector-u16-ref . g$bytevector-u16-ref$5476$14xsgv)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5482$14xsgv)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5478$14xsgv)
              (bytevector-s64-set! . g$bytevector-s64-set!$5497$14xsgv)
              (bytevector-s64-ref . g$bytevector-s64-ref$5493$14xsgv)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5499$14xsgv)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5495$14xsgv)
              (bytevector-s32-set! . g$bytevector-s32-set!$5489$14xsgv)
              (bytevector-s32-ref . g$bytevector-s32-ref$5485$14xsgv)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5491$14xsgv)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5487$14xsgv)
              (bytevector-s16-set! . g$bytevector-s16-set!$5481$14xsgv)
              (bytevector-s16-ref . g$bytevector-s16-ref$5477$14xsgv)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5483$14xsgv)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5479$14xsgv)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5502$14xsgv)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5500$14xsgv)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5503$14xsgv)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5501$14xsgv)
              (no-nans-violation? . g$no-nans-violation?$5922$14xsgv)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$5916$14xsgv)
              (make-no-nans-violation . g$make-no-nans-violation$5921$14xsgv)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$5915$14xsgv)
              (fxrotate-bit-field . g$fxrotate-bit-field$5898$14xsgv)
              (fxif . g$fxif$5892$14xsgv)
              (fxcopy-bit-field . g$fxcopy-bit-field$5895$14xsgv)
              (fxcopy-bit . g$fxcopy-bit$5893$14xsgv)
              (fxbit-field . g$fxbit-field$5894$14xsgv)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$5897$14xsgv)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$5896$14xsgv)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$5844$14xsgv)
              (bitwise-if . g$bitwise-if$5838$14xsgv)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$5841$14xsgv)
              (bitwise-copy-bit . g$bitwise-copy-bit$5839$14xsgv)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$5843$14xsgv)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$5842$14xsgv)
              (rationalize . g$rationalize$4914$14xsgv)
              (cddddr . g$cddddr$4913$14xsgv)
              (cdddar . g$cdddar$4912$14xsgv)
              (cddadr . g$cddadr$4911$14xsgv)
              (cddaar . g$cddaar$4910$14xsgv)
              (cdaddr . g$cdaddr$4909$14xsgv)
              (cdadar . g$cdadar$4908$14xsgv)
              (cdaadr . g$cdaadr$4907$14xsgv)
              (cdaaar . g$cdaaar$4906$14xsgv)
              (cadddr . g$cadddr$4905$14xsgv)
              (caddar . g$caddar$4904$14xsgv)
              (cadadr . g$cadadr$4903$14xsgv)
              (cadaar . g$cadaar$4902$14xsgv)
              (caaddr . g$caaddr$4901$14xsgv)
              (caadar . g$caadar$4900$14xsgv)
              (caaadr . g$caaadr$4899$14xsgv)
              (caaaar . g$caaaar$4898$14xsgv)
              (cdddr . g$cdddr$4897$14xsgv)
              (cddar . g$cddar$4896$14xsgv)
              (cdadr . g$cdadr$4895$14xsgv)
              (cdaar . g$cdaar$4894$14xsgv)
              (caddr . g$caddr$4893$14xsgv)
              (cadar . g$cadar$4892$14xsgv)
              (caadr . g$caadr$4891$14xsgv)
              (caaar . g$caaar$4890$14xsgv)
              (cddr . g$cddr$4889$14xsgv)
              (cdar . g$cdar$4888$14xsgv)
              (cadr . g$cadr$4887$14xsgv)
              (caar . g$caar$4886$14xsgv)
              (make-promise . g$make-promise$5723$14xsgv)
              (load/args . g$load/args$10988$14xsgv)
              (printf . g$printf$6294$14xsgv)
              (fprintf . g$fprintf$6295$14xsgv)
              (format . g$format$6296$14xsgv)
              (trace-printer . g$trace-printer$10985$14xsgv)
              (make-traced-macro . g$make-traced-macro$6300$14xsgv)
              (assertion-error . g$assertion-error$10933$14xsgv)
              (make-parameter . g$make-parameter$6381$14xsgv)
              (environment-symbols . g$environment-symbols$10914$14xsgv)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$10913$14xsgv)
              (library-path . g$library-path$6911$14xsgv)
              (library-extensions . g$library-extensions$6912$14xsgv)
              (installed-libraries . g$installed-libraries$6932$14xsgv)
              (expand . g$expand$10919$14xsgv)))))))
    (g$install-library$6927$14xsgv
      'g$12158$14xsgv
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12095$14xsgv)
        (cosh . g$12094$14xsgv)
        (sinh . g$12093$14xsgv)
        (make-guid . g$12092$14xsgv)
        (unspecified? . g$12091$14xsgv)
        (make-trace . g$12090$14xsgv)
        (make-list . g$12089$14xsgv)
        (last-pair . g$12088$14xsgv)
        (load-r5rs . g$12087$14xsgv)
        (license . g$12086$14xsgv)
        (stacktrace . g$12085$14xsgv)
        (ironscheme-build . g$11487$14xsgv)
        (set-symbol-value! . g$12071$14xsgv)
        (symbol-value . g$12070$14xsgv)
        (ungensym . g$12069$14xsgv)
        (gensym . g$12068$14xsgv)
        (void . g$12067$14xsgv)
        (compile-system-libraries . g$11489$14xsgv)
        (compile->closure . g$11491$14xsgv)
        (compile . g$11490$14xsgv)
        (load . g$11486$14xsgv)
        (interaction-environment . g$8555$14xsgv)
        (string-upcase . g$12063$14xsgv)
        (string-titlecase . g$12062$14xsgv)
        (string-normalize-nfkd . g$12061$14xsgv)
        (string-normalize-nfkc . g$12060$14xsgv)
        (string-normalize-nfd . g$12059$14xsgv)
        (string-normalize-nfc . g$12058$14xsgv)
        (string-foldcase . g$12057$14xsgv)
        (string-downcase . g$12056$14xsgv)
        (string-ci>? . g$12055$14xsgv)
        (string-ci>=? . g$12054$14xsgv)
        (string-ci=? . g$12053$14xsgv)
        (string-ci<? . g$12052$14xsgv)
        (string-ci<=? . g$12051$14xsgv)
        (char-whitespace? . g$12050$14xsgv)
        (char-upper-case? . g$12049$14xsgv)
        (char-title-case? . g$12048$14xsgv)
        (char-numeric? . g$12047$14xsgv)
        (char-lower-case? . g$12046$14xsgv)
        (char-general-category . g$12045$14xsgv)
        (char-upcase . g$12044$14xsgv)
        (char-titlecase . g$12043$14xsgv)
        (char-foldcase . g$12042$14xsgv)
        (char-downcase . g$12041$14xsgv)
        (char-ci>? . g$12040$14xsgv)
        (char-ci>=? . g$12039$14xsgv)
        (char-ci=? . g$12038$14xsgv)
        (char-ci<? . g$12037$14xsgv)
        (char-ci<=? . g$12036$14xsgv)
        (char-alphabetic? . g$12035$14xsgv)
        (variable-transformer-procedure . g$8156$14xsgv)
        (variable-transformer? . g$8155$14xsgv)
        (make-variable-transformer . g$8154$14xsgv)
        (identifier? . g$8550$14xsgv)
        (generate-temporaries . g$8539$14xsgv)
        (free-identifier=? . g$8540$14xsgv)
        (syntax->datum . g$8552$14xsgv)
        (datum->syntax . g$8551$14xsgv)
        (bound-identifier=? . g$8541$14xsgv)
        (record-type-descriptor? . g$12034$14xsgv)
        (record-predicate . g$12033$14xsgv)
        (record-mutator . g$12032$14xsgv)
        (record-constructor . g$12031$14xsgv)
        (record-accessor . g$12030$14xsgv)
        (make-record-type-descriptor . g$12029$14xsgv)
        (make-record-constructor-descriptor . g$12028$14xsgv)
        (record? . g$12027$14xsgv)
        (record-type-uid . g$12026$14xsgv)
        (record-type-sealed? . g$12025$14xsgv)
        (record-type-parent . g$12024$14xsgv)
        (record-type-opaque? . g$12023$14xsgv)
        (record-type-name . g$12022$14xsgv)
        (record-type-generative? . g$12021$14xsgv)
        (record-type-field-names . g$12020$14xsgv)
        (record-rtd . g$12019$14xsgv)
        (record-field-mutable? . g$12018$14xsgv)
        (delete-file . g$6170$14xsgv)
        (file-exists? . g$6169$14xsgv)
        (vector-sort! . g$12017$14xsgv)
        (vector-sort . g$12016$14xsgv)
        (list-sort . g$6683$14xsgv)
        (symbol-hash . g$12015$14xsgv)
        (string-ci-hash . g$12014$14xsgv)
        (string-hash . g$12013$14xsgv)
        (equal-hash . g$12012$14xsgv)
        (hashtable-equivalence-function . g$12011$14xsgv)
        (make-hashtable . g$12010$14xsgv)
        (hashtable-hash-function . g$12009$14xsgv)
        (make-eqv-hashtable . g$6137$14xsgv)
        (make-eq-hashtable . g$6136$14xsgv)
        (hashtable? . g$12008$14xsgv)
        (hashtable-update! . g$6143$14xsgv)
        (hashtable-size . g$6138$14xsgv)
        (hashtable-set! . g$6140$14xsgv)
        (hashtable-ref . g$6139$14xsgv)
        (hashtable-mutable? . g$12007$14xsgv)
        (hashtable-keys . g$12006$14xsgv)
        (hashtable-entries . g$12005$14xsgv)
        (hashtable-delete! . g$6141$14xsgv)
        (hashtable-copy . g$12004$14xsgv)
        (hashtable-contains? . g$6142$14xsgv)
        (hashtable-clear! . g$6144$14xsgv)
        (call-with-output-file . g$7095$14xsgv)
        (call-with-input-file . g$7094$14xsgv)
        (write-char . g$12003$14xsgv)
        (write . g$12002$14xsgv)
        (with-output-to-file . g$7093$14xsgv)
        (with-input-from-file . g$7092$14xsgv)
        (read-char . g$12001$14xsgv)
        (read . g$12000$14xsgv)
        (peek-char . g$11999$14xsgv)
        (open-output-file . g$11998$14xsgv)
        (open-input-file . g$11997$14xsgv)
        (newline . g$11996$14xsgv)
        (display . g$11995$14xsgv)
        (close-output-port . g$11994$14xsgv)
        (close-input-port . g$11993$14xsgv)
        (eof-object? . g$11992$14xsgv)
        (eof-object . g$11991$14xsgv)
        (current-error-port . g$11990$14xsgv)
        (current-output-port . g$11989$14xsgv)
        (current-input-port . g$11988$14xsgv)
        (output-port? . g$11987$14xsgv)
        (input-port? . g$11986$14xsgv)
        (utf-8-codec . g$11985$14xsgv)
        (utf-16-codec . g$11984$14xsgv)
        (transcoder-error-handling-mode . g$11983$14xsgv)
        (transcoder-eol-style . g$11982$14xsgv)
        (transcoder-codec . g$11981$14xsgv)
        (transcoded-port . g$11980$14xsgv)
        (textual-port? . g$11979$14xsgv)
        (string->bytevector . g$11978$14xsgv)
        (standard-output-port . g$11977$14xsgv)
        (standard-input-port . g$11976$14xsgv)
        (standard-error-port . g$11975$14xsgv)
        (set-port-position! . g$11974$14xsgv)
        (put-u8 . g$11973$14xsgv)
        (put-string . g$11972$14xsgv)
        (put-datum . g$11971$14xsgv)
        (put-char . g$11970$14xsgv)
        (put-bytevector . g$11969$14xsgv)
        (port? . g$7071$14xsgv)
        (port-transcoder . g$11968$14xsgv)
        (port-position . g$11967$14xsgv)
        (port-has-set-port-position!? . g$11966$14xsgv)
        (port-has-port-position? . g$11965$14xsgv)
        (port-eof? . g$11964$14xsgv)
        (output-port-buffer-mode . g$11963$14xsgv)
        (open-string-output-port . g$7070$14xsgv)
        (open-string-input-port . g$11962$14xsgv)
        (open-file-output-port . g$11961$14xsgv)
        (open-file-input/output-port . g$11960$14xsgv)
        (open-file-input-port . g$11959$14xsgv)
        (open-bytevector-output-port . g$11958$14xsgv)
        (open-bytevector-input-port . g$11957$14xsgv)
        (native-transcoder . g$11956$14xsgv)
        (native-eol-style . g$11955$14xsgv)
        (make-transcoder . g$11954$14xsgv)
        (latin-1-codec . g$11953$14xsgv)
        (make-i/o-write-error . g$6927$14xsgv)
        (make-i/o-read-error . g$6913$14xsgv)
        (make-i/o-port-error . g$7032$14xsgv)
        (make-i/o-invalid-position-error . g$6942$14xsgv)
        (make-i/o-filename-error . g$6959$14xsgv)
        (make-i/o-file-protection-error . g$6975$14xsgv)
        (make-i/o-file-is-read-only-error . g$6989$14xsgv)
        (make-i/o-file-does-not-exist-error . g$7017$14xsgv)
        (make-i/o-file-already-exists-error . g$7003$14xsgv)
        (make-i/o-error . g$6899$14xsgv)
        (make-i/o-encoding-error . g$7063$14xsgv)
        (make-i/o-decoding-error . g$7048$14xsgv)
        (make-custom-textual-output-port . g$11952$14xsgv)
        (make-custom-textual-input/output-port . g$11951$14xsgv)
        (make-custom-textual-input-port . g$11950$14xsgv)
        (make-custom-binary-output-port . g$11949$14xsgv)
        (make-custom-binary-input/output-port . g$11948$14xsgv)
        (make-custom-binary-input-port . g$11947$14xsgv)
        (make-bytevector . g$11946$14xsgv)
        (lookahead-u8 . g$11945$14xsgv)
        (lookahead-char . g$11944$14xsgv)
        (i/o-write-error? . g$6928$14xsgv)
        (i/o-read-error? . g$6914$14xsgv)
        (i/o-port-error? . g$7034$14xsgv)
        (i/o-invalid-position-error? . g$6944$14xsgv)
        (i/o-error-position . g$6945$14xsgv)
        (i/o-filename-error? . g$6961$14xsgv)
        (i/o-file-protection-error? . g$6976$14xsgv)
        (i/o-file-is-read-only-error? . g$6990$14xsgv)
        (i/o-file-does-not-exist-error? . g$7018$14xsgv)
        (i/o-file-already-exists-error? . g$7004$14xsgv)
        (i/o-error? . g$6900$14xsgv)
        (i/o-error-port . g$7035$14xsgv)
        (i/o-error-filename . g$6962$14xsgv)
        (i/o-encoding-error? . g$7065$14xsgv)
        (i/o-encoding-error-char . g$7066$14xsgv)
        (i/o-decoding-error? . g$7049$14xsgv)
        (get-u8 . g$11943$14xsgv)
        (get-string-n! . g$11942$14xsgv)
        (get-string-n . g$11941$14xsgv)
        (get-string-all . g$11940$14xsgv)
        (get-line . g$11939$14xsgv)
        (get-datum . g$11938$14xsgv)
        (get-char . g$11937$14xsgv)
        (get-bytevector-some . g$11936$14xsgv)
        (get-bytevector-n! . g$11935$14xsgv)
        (get-bytevector-n . g$11934$14xsgv)
        (get-bytevector-all . g$11933$14xsgv)
        (flush-output-port . g$11932$14xsgv)
        (close-port . g$11931$14xsgv)
        (call-with-string-output-port . g$11930$14xsgv)
        (call-with-port . g$11929$14xsgv)
        (call-with-bytevector-output-port . g$11928$14xsgv)
        (bytevector->string . g$11927$14xsgv)
        (buffer-mode? . g$11926$14xsgv)
        (binary-port? . g$11925$14xsgv)
        (scheme-report-environment . g$8530$14xsgv)
        (quotient . g$6663$14xsgv)
        (null-environment . g$8529$14xsgv)
        (remainder . g$6664$14xsgv)
        (modulo . g$6665$14xsgv)
        (inexact->exact . g$11924$14xsgv)
        (force . g$6667$14xsgv)
        (exact->inexact . g$11923$14xsgv)
        (exit . g$11922$14xsgv)
        (command-line . g$11483$14xsgv)
        (string-fill! . g$11921$14xsgv)
        (string-set! . g$11920$14xsgv)
        (set-cdr! . g$11919$14xsgv)
        (set-car! . g$11918$14xsgv)
        (remove . g$6250$14xsgv)
        (remv . g$6251$14xsgv)
        (remp . g$6236$14xsgv)
        (remq . g$6252$14xsgv)
        (partition . g$6235$14xsgv)
        (memv . g$11917$14xsgv)
        (memq . g$11916$14xsgv)
        (memp . g$6242$14xsgv)
        (member . g$6241$14xsgv)
        (exists . g$6246$14xsgv)
        (for-all . g$6245$14xsgv)
        (fold-right . g$6249$14xsgv)
        (fold-left . g$6248$14xsgv)
        (find . g$6234$14xsgv)
        (filter . g$6237$14xsgv)
        (cons* . g$6247$14xsgv)
        (assv . g$6238$14xsgv)
        (assq . g$11915$14xsgv)
        (assp . g$6240$14xsgv)
        (assoc . g$6239$14xsgv)
        (with-exception-handler . g$11914$14xsgv)
        (raise-continuable . g$11913$14xsgv)
        (raise . g$11912$14xsgv)
        (eval . g$8532$14xsgv)
        (environment . g$8528$14xsgv)
        (make-enumeration . g$7152$14xsgv)
        (enum-set=? . g$7159$14xsgv)
        (enum-set-universe . g$7153$14xsgv)
        (enum-set-union . g$7160$14xsgv)
        (enum-set-subset? . g$7158$14xsgv)
        (enum-set-projection . g$7164$14xsgv)
        (enum-set-member? . g$7157$14xsgv)
        (enum-set-intersection . g$7161$14xsgv)
        (enum-set-indexer . g$7154$14xsgv)
        (enum-set-difference . g$7162$14xsgv)
        (enum-set-constructor . g$7155$14xsgv)
        (enum-set-complement . g$7163$14xsgv)
        (enum-set->list . g$7156$14xsgv)
        (who-condition? . g$6574$14xsgv)
        (warning? . g$6485$14xsgv)
        (violation? . g$6527$14xsgv)
        (undefined-violation? . g$6651$14xsgv)
        (syntax-violation? . g$6635$14xsgv)
        (syntax-violation-subform . g$6637$14xsgv)
        (syntax-violation-form . g$6636$14xsgv)
        (syntax-violation . g$8549$14xsgv)
        (simple-conditions . g$11911$14xsgv)
        (serious-condition? . g$6499$14xsgv)
        (non-continuable-violation? . g$6589$14xsgv)
        (message-condition? . g$6470$14xsgv)
        (make-who-condition . g$6572$14xsgv)
        (make-warning . g$6484$14xsgv)
        (make-violation . g$6526$14xsgv)
        (make-undefined-violation . g$6650$14xsgv)
        (make-syntax-violation . g$6632$14xsgv)
        (make-serious-condition . g$6498$14xsgv)
        (make-non-continuable-violation . g$6588$14xsgv)
        (make-message-condition . g$6468$14xsgv)
        (make-lexical-violation . g$6616$14xsgv)
        (make-irritants-condition . g$6555$14xsgv)
        (make-implementation-restriction-violation . g$6602$14xsgv)
        (make-error . g$6512$14xsgv)
        (make-assertion-violation . g$6540$14xsgv)
        (lexical-violation? . g$6617$14xsgv)
        (irritants-condition? . g$6557$14xsgv)
        (implementation-restriction-violation? . g$6603$14xsgv)
        (error? . g$6513$14xsgv)
        (condition-who . g$6575$14xsgv)
        (condition-predicate . g$11910$14xsgv)
        (condition-message . g$6471$14xsgv)
        (condition-irritants . g$6558$14xsgv)
        (condition-accessor . g$11909$14xsgv)
        (condition . g$11908$14xsgv)
        (assertion-violation? . g$6541$14xsgv)
        (condition? . g$11907$14xsgv)
        (utf32->string . g$11906$14xsgv)
        (utf16->string . g$11905$14xsgv)
        (utf8->string . g$11904$14xsgv)
        (uint-list->bytevector . g$11903$14xsgv)
        (u8-list->bytevector . g$11902$14xsgv)
        (string->utf8 . g$11901$14xsgv)
        (string->utf32 . g$11900$14xsgv)
        (string->utf16 . g$11899$14xsgv)
        (sint-list->bytevector . g$11898$14xsgv)
        (native-endianness . g$6326$14xsgv)
        (bytevector? . g$11897$14xsgv)
        (bytevector=? . g$11896$14xsgv)
        (bytevector-uint-set! . g$11895$14xsgv)
        (bytevector-uint-ref . g$11894$14xsgv)
        (bytevector-u8-set! . g$11893$14xsgv)
        (bytevector-u8-ref . g$11892$14xsgv)
        (bytevector-u64-set! . g$6347$14xsgv)
        (bytevector-u64-ref . g$6343$14xsgv)
        (bytevector-u64-native-set! . g$6349$14xsgv)
        (bytevector-u64-native-ref . g$6345$14xsgv)
        (bytevector-u32-set! . g$6339$14xsgv)
        (bytevector-u32-ref . g$6335$14xsgv)
        (bytevector-u32-native-set! . g$6341$14xsgv)
        (bytevector-u32-native-ref . g$6337$14xsgv)
        (bytevector-u16-set! . g$6331$14xsgv)
        (bytevector-u16-ref . g$6327$14xsgv)
        (bytevector-u16-native-set! . g$6333$14xsgv)
        (bytevector-u16-native-ref . g$6329$14xsgv)
        (bytevector-sint-set! . g$11891$14xsgv)
        (bytevector-sint-ref . g$11890$14xsgv)
        (bytevector-s8-set! . g$11889$14xsgv)
        (bytevector-s8-ref . g$11888$14xsgv)
        (bytevector-s64-set! . g$6348$14xsgv)
        (bytevector-s64-ref . g$6344$14xsgv)
        (bytevector-s64-native-set! . g$6350$14xsgv)
        (bytevector-s64-native-ref . g$6346$14xsgv)
        (bytevector-s32-set! . g$6340$14xsgv)
        (bytevector-s32-ref . g$6336$14xsgv)
        (bytevector-s32-native-set! . g$6342$14xsgv)
        (bytevector-s32-native-ref . g$6338$14xsgv)
        (bytevector-s16-set! . g$6332$14xsgv)
        (bytevector-s16-ref . g$6328$14xsgv)
        (bytevector-s16-native-set! . g$6334$14xsgv)
        (bytevector-s16-native-ref . g$6330$14xsgv)
        (bytevector-length . g$11887$14xsgv)
        (bytevector-ieee-single-set! . g$11886$14xsgv)
        (bytevector-ieee-single-ref . g$11885$14xsgv)
        (bytevector-ieee-single-native-set! . g$6353$14xsgv)
        (bytevector-ieee-single-native-ref . g$6351$14xsgv)
        (bytevector-ieee-double-set! . g$11884$14xsgv)
        (bytevector-ieee-double-ref . g$11883$14xsgv)
        (bytevector-ieee-double-native-set! . g$6354$14xsgv)
        (bytevector-ieee-double-native-ref . g$6352$14xsgv)
        (bytevector-fill! . g$11882$14xsgv)
        (bytevector-copy! . g$11881$14xsgv)
        (bytevector-copy . g$11880$14xsgv)
        (bytevector->uint-list . g$11879$14xsgv)
        (bytevector->u8-list . g$11878$14xsgv)
        (bytevector->sint-list . g$11877$14xsgv)
        (no-nans-violation? . g$6885$14xsgv)
        (no-infinities-violation? . g$6871$14xsgv)
        (make-no-nans-violation . g$6884$14xsgv)
        (make-no-infinities-violation . g$6870$14xsgv)
        (real->flonum . g$11876$14xsgv)
        (flzero? . g$11875$14xsgv)
        (fltruncate . g$11874$14xsgv)
        (fltan . g$11873$14xsgv)
        (flsqrt . g$11872$14xsgv)
        (flsin . g$11871$14xsgv)
        (flround . g$11870$14xsgv)
        (flpositive? . g$11869$14xsgv)
        (flonum? . g$11868$14xsgv)
        (flodd? . g$11867$14xsgv)
        (flnumerator . g$11866$14xsgv)
        (flnegative? . g$11865$14xsgv)
        (flnan? . g$11864$14xsgv)
        (flmod0 . g$11863$14xsgv)
        (flmod . g$11862$14xsgv)
        (flmin . g$11861$14xsgv)
        (flmax . g$11860$14xsgv)
        (fllog . g$11859$14xsgv)
        (flinteger? . g$11858$14xsgv)
        (flinfinite? . g$11857$14xsgv)
        (flfloor . g$11856$14xsgv)
        (flfinite? . g$11855$14xsgv)
        (flexpt . g$11854$14xsgv)
        (flexp . g$11853$14xsgv)
        (fleven? . g$11852$14xsgv)
        (fldiv0-and-mod0 . g$11851$14xsgv)
        (fldiv0 . g$11850$14xsgv)
        (fldiv-and-mod . g$11849$14xsgv)
        (fldiv . g$11848$14xsgv)
        (fldenominator . g$11847$14xsgv)
        (flcos . g$11846$14xsgv)
        (flceiling . g$11845$14xsgv)
        (flatan . g$11844$14xsgv)
        (flasin . g$11843$14xsgv)
        (flacos . g$11842$14xsgv)
        (flabs . g$11841$14xsgv)
        (fl>? . g$11840$14xsgv)
        (fl>=? . g$11839$14xsgv)
        (fl=? . g$11838$14xsgv)
        (fl<? . g$11837$14xsgv)
        (fl<=? . g$11836$14xsgv)
        (fl/ . g$11835$14xsgv)
        (fl- . g$11834$14xsgv)
        (fl+ . g$11833$14xsgv)
        (fl* . g$11832$14xsgv)
        (fixnum->flonum . g$11831$14xsgv)
        (fxzero? . g$11830$14xsgv)
        (fxxor . g$11829$14xsgv)
        (fxrotate-bit-field . g$6816$14xsgv)
        (fxreverse-bit-field . g$11828$14xsgv)
        (fxpositive? . g$11827$14xsgv)
        (fxodd? . g$11826$14xsgv)
        (fxnot . g$11825$14xsgv)
        (fxnegative? . g$11824$14xsgv)
        (fxmod0 . g$11823$14xsgv)
        (fxmod . g$11822$14xsgv)
        (fxmin . g$11821$14xsgv)
        (fxmax . g$11820$14xsgv)
        (fxlength . g$11819$14xsgv)
        (fxior . g$11818$14xsgv)
        (fxif . g$6810$14xsgv)
        (fxfirst-bit-set . g$11817$14xsgv)
        (fxeven? . g$11816$14xsgv)
        (fxdiv0-and-mod0 . g$11815$14xsgv)
        (fxdiv0 . g$11814$14xsgv)
        (fxdiv-and-mod . g$11813$14xsgv)
        (fxdiv . g$11812$14xsgv)
        (fxcopy-bit-field . g$6813$14xsgv)
        (fxcopy-bit . g$6811$14xsgv)
        (fxbit-set? . g$11811$14xsgv)
        (fxbit-field . g$6812$14xsgv)
        (fxbit-count . g$11810$14xsgv)
        (fxarithmetic-shift-right . g$6815$14xsgv)
        (fxarithmetic-shift-left . g$6814$14xsgv)
        (fxarithmetic-shift . g$11809$14xsgv)
        (fxand . g$11808$14xsgv)
        (fx>? . g$11807$14xsgv)
        (fx>=? . g$11806$14xsgv)
        (fx=? . g$11805$14xsgv)
        (fx<? . g$11804$14xsgv)
        (fx<=? . g$11803$14xsgv)
        (fx-/carry . g$11802$14xsgv)
        (fx- . g$11801$14xsgv)
        (fx+/carry . g$11800$14xsgv)
        (fx+ . g$11799$14xsgv)
        (fx*/carry . g$11798$14xsgv)
        (fx* . g$11797$14xsgv)
        (greatest-fixnum . g$11796$14xsgv)
        (least-fixnum . g$11795$14xsgv)
        (fixnum-width . g$11794$14xsgv)
        (fixnum? . g$11793$14xsgv)
        (bitwise-rotate-bit-field . g$6768$14xsgv)
        (bitwise-reverse-bit-field . g$11792$14xsgv)
        (bitwise-length . g$11791$14xsgv)
        (bitwise-if . g$6762$14xsgv)
        (bitwise-first-bit-set . g$11790$14xsgv)
        (bitwise-copy-bit-field . g$6765$14xsgv)
        (bitwise-copy-bit . g$6763$14xsgv)
        (bitwise-bit-set? . g$11789$14xsgv)
        (bitwise-bit-field . g$11788$14xsgv)
        (bitwise-bit-count . g$11787$14xsgv)
        (bitwise-xor . g$11786$14xsgv)
        (bitwise-ior . g$11785$14xsgv)
        (bitwise-and . g$11784$14xsgv)
        (bitwise-not . g$11783$14xsgv)
        (bitwise-arithmetic-shift-right . g$6767$14xsgv)
        (bitwise-arithmetic-shift-left . g$6766$14xsgv)
        (bitwise-arithmetic-shift . g$11782$14xsgv)
        (zero? . g$11781$14xsgv)
        (vector? . g$11780$14xsgv)
        (vector-set! . g$11779$14xsgv)
        (vector-ref . g$11778$14xsgv)
        (vector-map . g$11777$14xsgv)
        (vector-length . g$11776$14xsgv)
        (vector-for-each . g$11775$14xsgv)
        (vector-fill! . g$11774$14xsgv)
        (vector->list . g$11773$14xsgv)
        (vector . g$11772$14xsgv)
        (values . g$11771$14xsgv)
        (truncate . g$11770$14xsgv)
        (tan . g$11769$14xsgv)
        (symbol? . g$11768$14xsgv)
        (symbol=? . g$11767$14xsgv)
        (symbol->string . g$11766$14xsgv)
        (substring . g$11765$14xsgv)
        (string? . g$11764$14xsgv)
        (string>? . g$11763$14xsgv)
        (string>=? . g$11762$14xsgv)
        (string=? . g$11761$14xsgv)
        (string<? . g$11760$14xsgv)
        (string<=? . g$11759$14xsgv)
        (string-ref . g$11758$14xsgv)
        (string-length . g$11757$14xsgv)
        (string-for-each . g$11756$14xsgv)
        (string-copy . g$11755$14xsgv)
        (string-append . g$11754$14xsgv)
        (string->symbol . g$11753$14xsgv)
        (string->number . g$11752$14xsgv)
        (string->list . g$11751$14xsgv)
        (string . g$11750$14xsgv)
        (sqrt . g$11749$14xsgv)
        (sin . g$11748$14xsgv)
        (round . g$11747$14xsgv)
        (reverse . g$11746$14xsgv)
        (real? . g$11745$14xsgv)
        (real-valued? . g$11744$14xsgv)
        (real-part . g$11743$14xsgv)
        (rationalize . g$5786$14xsgv)
        (rational? . g$11742$14xsgv)
        (rational-valued? . g$11741$14xsgv)
        (procedure? . g$11740$14xsgv)
        (positive? . g$11739$14xsgv)
        (pair? . g$11738$14xsgv)
        (odd? . g$11737$14xsgv)
        (numerator . g$11736$14xsgv)
        (number? . g$11735$14xsgv)
        (number->string . g$11734$14xsgv)
        (null? . g$11733$14xsgv)
        (not . g$11732$14xsgv)
        (negative? . g$11731$14xsgv)
        (nan? . g$11730$14xsgv)
        (min . g$11729$14xsgv)
        (max . g$11728$14xsgv)
        (map . g$11727$14xsgv)
        (make-vector . g$11726$14xsgv)
        (make-string . g$11725$14xsgv)
        (make-rectangular . g$11724$14xsgv)
        (make-polar . g$11723$14xsgv)
        (magnitude . g$11722$14xsgv)
        (log . g$11721$14xsgv)
        (list? . g$11720$14xsgv)
        (list-tail . g$11719$14xsgv)
        (list-ref . g$11718$14xsgv)
        (list->vector . g$11717$14xsgv)
        (list->string . g$11716$14xsgv)
        (list . g$11715$14xsgv)
        (length . g$11714$14xsgv)
        (lcm . g$11713$14xsgv)
        (integer? . g$11712$14xsgv)
        (integer-valued? . g$11711$14xsgv)
        (integer->char . g$11710$14xsgv)
        (infinite? . g$11709$14xsgv)
        (inexact? . g$11708$14xsgv)
        (inexact . g$11707$14xsgv)
        (imag-part . g$11706$14xsgv)
        (gcd . g$11705$14xsgv)
        (for-each . g$11704$14xsgv)
        (floor . g$11703$14xsgv)
        (finite? . g$11702$14xsgv)
        (expt . g$11701$14xsgv)
        (exp . g$11700$14xsgv)
        (exact? . g$11699$14xsgv)
        (exact-integer-sqrt . g$11698$14xsgv)
        (exact . g$11697$14xsgv)
        (even? . g$11696$14xsgv)
        (error . g$11695$14xsgv)
        (eqv? . g$11694$14xsgv)
        (equal? . g$11693$14xsgv)
        (eq? . g$11692$14xsgv)
        (dynamic-wind . g$11691$14xsgv)
        (div0-and-mod0 . g$11690$14xsgv)
        (mod0 . g$11689$14xsgv)
        (div0 . g$11688$14xsgv)
        (div-and-mod . g$11687$14xsgv)
        (mod . g$11686$14xsgv)
        (div . g$11685$14xsgv)
        (denominator . g$11684$14xsgv)
        (cos . g$11683$14xsgv)
        (cons . g$11682$14xsgv)
        (complex? . g$11681$14xsgv)
        (char? . g$11680$14xsgv)
        (char>? . g$11679$14xsgv)
        (char>=? . g$11678$14xsgv)
        (char=? . g$11677$14xsgv)
        (char<? . g$11676$14xsgv)
        (char<=? . g$11675$14xsgv)
        (char->integer . g$11674$14xsgv)
        (ceiling . g$11673$14xsgv)
        (call-with-values . g$11672$14xsgv)
        (call/cc . g$11671$14xsgv)
        (call-with-current-continuation . g$11670$14xsgv)
        (cddddr . g$5785$14xsgv)
        (cdddar . g$5784$14xsgv)
        (cddadr . g$5783$14xsgv)
        (cddaar . g$5782$14xsgv)
        (cdaddr . g$5781$14xsgv)
        (cdadar . g$5780$14xsgv)
        (cdaadr . g$5779$14xsgv)
        (cdaaar . g$5778$14xsgv)
        (cadddr . g$5777$14xsgv)
        (caddar . g$5776$14xsgv)
        (cadadr . g$5775$14xsgv)
        (cadaar . g$5774$14xsgv)
        (caaddr . g$5773$14xsgv)
        (caadar . g$5772$14xsgv)
        (caaadr . g$5771$14xsgv)
        (caaaar . g$5770$14xsgv)
        (cdddr . g$5769$14xsgv)
        (cddar . g$5768$14xsgv)
        (cdadr . g$5767$14xsgv)
        (cdaar . g$5766$14xsgv)
        (caddr . g$5765$14xsgv)
        (cadar . g$5764$14xsgv)
        (caadr . g$5763$14xsgv)
        (caaar . g$5762$14xsgv)
        (cddr . g$5761$14xsgv)
        (cdar . g$5760$14xsgv)
        (cadr . g$5759$14xsgv)
        (caar . g$5758$14xsgv)
        (cdr . g$11669$14xsgv)
        (car . g$11668$14xsgv)
        (boolean? . g$11667$14xsgv)
        (boolean=? . g$11666$14xsgv)
        (atan . g$11665$14xsgv)
        (assertion-violation . g$11664$14xsgv)
        (asin . g$11663$14xsgv)
        (apply . g$11662$14xsgv)
        (append . g$11661$14xsgv)
        (angle . g$11660$14xsgv)
        (acos . g$11659$14xsgv)
        (abs . g$11658$14xsgv)
        (/ . g$11657$14xsgv)
        (* . g$11656$14xsgv)
        (- . g$11655$14xsgv)
        (+ . g$11654$14xsgv)
        (>= . g$11653$14xsgv)
        (> . g$11652$14xsgv)
        (= . g$11651$14xsgv)
        (<= . g$11650$14xsgv)
        (< . g$11649$14xsgv)
        (make-promise . g$6666$14xsgv)
        (load/args . g$11485$14xsgv)
        (printf . g$7236$14xsgv)
        (fprintf . g$7237$14xsgv)
        (format . g$7238$14xsgv)
        (get-arity . g$11644$14xsgv)
        (gc-collect . g$11643$14xsgv)
        (clr-type? . g$11642$14xsgv)
        (get-clr-type . g$11641$14xsgv)
        (vector-append . g$11639$14xsgv)
        (vector-filter . g$11638$14xsgv)
        (vector-reverse! . g$11637$14xsgv)
        (vector-contains? . g$11636$14xsgv)
        (vector-index-of . g$11635$14xsgv)
        (vector-copy . g$11634$14xsgv)
        (vector-binary-search . g$11633$14xsgv)
        (get-output-string . g$11632$14xsgv)
        (open-output-string . g$11631$14xsgv)
        (open-input-string . g$11630$14xsgv)
        (string-format . g$11629$14xsgv)
        (trace-printer . g$11482$14xsgv)
        (make-traced-procedure . g$11628$14xsgv)
        (make-traced-macro . g$7258$14xsgv)
        (pmap . g$11627$14xsgv)
        (time-it . g$11626$14xsgv)
        (make-parameter . g$7263$14xsgv)
        (library-locator . g$11625$14xsgv)
        (get-library-paths . g$11624$14xsgv)
        (environment-symbols . g$8526$14xsgv)
        (interaction-environment-symbols . g$8525$14xsgv)
        (library-path . g$7694$14xsgv)
        (library-extensions . g$7695$14xsgv)
        (installed-libraries . g$7715$14xsgv)
        (expand . g$8531$14xsgv)
        (&no-nans . g$11623$14xsgv)
        (&no-infinities . g$11622$14xsgv)
        (&i/o-encoding . g$11621$14xsgv)
        (&i/o-decoding . g$11620$14xsgv)
        (&i/o-port . g$11619$14xsgv)
        (&i/o-file-does-not-exist . g$11618$14xsgv)
        (&i/o-file-already-exists . g$11617$14xsgv)
        (&i/o-file-is-read-only . g$11616$14xsgv)
        (&i/o-file-protection . g$11615$14xsgv)
        (&i/o-filename . g$11614$14xsgv)
        (&i/o-invalid-position . g$11613$14xsgv)
        (&i/o-write . g$11612$14xsgv)
        (&i/o-read . g$11611$14xsgv)
        (&i/o . g$11610$14xsgv)
        (&non-continuable . g$11609$14xsgv)
        (&undefined . g$11608$14xsgv)
        (&syntax . g$11607$14xsgv)
        (&lexical . g$11606$14xsgv)
        (&implementation-restriction . g$11605$14xsgv)
        (&who . g$11603$14xsgv)
        (&irritants . g$11602$14xsgv)
        (&assertion . g$11601$14xsgv)
        (&violation . g$11600$14xsgv)
        (&error . g$11599$14xsgv)
        (&serious . g$11598$14xsgv)
        (&warning . g$11597$14xsgv)
        (&message . g$11596$14xsgv)
        (&condition . g$11595$14xsgv)
        (define-condition-type . g$11594$14xsgv)
        (define-enumeration . g$11593$14xsgv)
        (define-record-type . g$11592$14xsgv)
        (parent-rtd . g$11591$14xsgv)
        (nongenerative . g$11590$14xsgv)
        (opaque . g$11589$14xsgv)
        (sealed . g$11588$14xsgv)
        (protocol . g$11587$14xsgv)
        (parent . g$11586$14xsgv)
        (immutable . g$11585$14xsgv)
        (mutable . g$11584$14xsgv)
        (fields . g$11583$14xsgv)
        (error-handling-mode . g$11582$14xsgv)
        (file-options . g$11581$14xsgv)
        (buffer-mode . g$11580$14xsgv)
        (eol-style . g$11579$14xsgv)
        (guard . g$11578$14xsgv)
        (trace-letrec-syntax . g$11577$14xsgv)
        (trace-let-syntax . g$11576$14xsgv)
        (trace-define-syntax . g$11575$14xsgv)
        (trace-define . g$11574$14xsgv)
        (trace-lambda . g$11573$14xsgv)
        (unsyntax-splicing . g$11572$14xsgv)
        (unsyntax . g$11571$14xsgv)
        (unquote-splicing . g$11570$14xsgv)
        (unquote . g$11569$14xsgv)
        (_ . g$11568$14xsgv)
        (else . g$11567$14xsgv)
        (=> . g$11566$14xsgv)
        (... . g$11565$14xsgv)
        (assert . g$11564$14xsgv)
        (endianness . g$11563$14xsgv)
        (delay . g$11562$14xsgv)
        (time . g$11561$14xsgv)
        (or . g$11560$14xsgv)
        (and . g$11559$14xsgv)
        (do . g$11558$14xsgv)
        (cond . g$11557$14xsgv)
        (let* . g$11556$14xsgv)
        (let . g$11555$14xsgv)
        (identifier-syntax . g$11554$14xsgv)
        (with-syntax . g$11553$14xsgv)
        (quasisyntax . g$11552$14xsgv)
        (quasiquote . g$11551$14xsgv)
        (syntax-rules . g$11550$14xsgv)
        (include-into . g$11549$14xsgv)
        (include . g$11548$14xsgv)
        (let-values . g$11546$14xsgv)
        (let*-values . g$11545$14xsgv)
        (record-constructor-descriptor . g$11544$14xsgv)
        (record-type-descriptor . g$11543$14xsgv)
        (fluid-let-syntax . g$11542$14xsgv)
        (case . g$11541$14xsgv)
        (parameterize . g$11540$14xsgv)
        (unless . g$11539$14xsgv)
        (when . g$11538$14xsgv)
        (if . g$11537$14xsgv)
        (letrec* . g$11536$14xsgv)
        (letrec . g$11535$14xsgv)
        (case-lambda . g$11533$14xsgv)
        (lambda . g$11532$14xsgv)
        (syntax . g$11531$14xsgv)
        (syntax-case . g$11530$14xsgv)
        (quote . g$11529$14xsgv)
        (letrec-syntax . g$11527$14xsgv)
        (let-syntax . g$11526$14xsgv)
        (set! . g$11525$14xsgv)
        (import . g$11524$14xsgv)
        (library . g$11523$14xsgv)
        (begin . g$11522$14xsgv)
        (module . g$11521$14xsgv)
        (define-syntax . g$11520$14xsgv)
        (define . g$11519$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12159$14xsgv
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11624$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6927$14xsgv
      'g$12160$14xsgv
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12100$14xsgv)
        (annotation-source . g$12099$14xsgv)
        (annotation-expression . g$12098$14xsgv)
        (annotation? . g$12097$14xsgv)
        (read-annotated . g$12096$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6927$14xsgv
      'g$12161$14xsgv
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12066$14xsgv)
        (serialize-library . g$12065$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6927$14xsgv
      'g$12162$14xsgv
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8156$14xsgv)
        (variable-transformer? . g$8155$14xsgv)
        (eqv-hash . g$11647$14xsgv)
        (eq-hash . g$11646$14xsgv)
        (reverse! . g$11645$14xsgv)
        (format . g$7238$14xsgv)
        (get-command-line . g$11640$14xsgv)
        (make-traced-procedure . g$11628$14xsgv)
        (assertion-error . g$8545$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6927$14xsgv
      'g$12163$14xsgv
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11648$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12164$14xsgv
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12084$14xsgv)
        (clr-field-set!-internal . g$12083$14xsgv)
        (clr-field-get-internal . g$12082$14xsgv)
        (clr-cast-internal . g$12081$14xsgv)
        (clr-call-internal . g$12080$14xsgv)
        (clr-new-internal . g$12079$14xsgv)
        (clr-new-array-internal . g$12078$14xsgv)
        (clr-is-internal . g$12077$14xsgv)
        (clr-reference-internal . g$12076$14xsgv)
        (clr-using-internal . g$12075$14xsgv)
        (clr-clear-usings-internal . g$12074$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12165$14xsgv
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11570$14xsgv)
        (unquote . g$11569$14xsgv)
        (else . g$11567$14xsgv)
        (=> . g$11566$14xsgv)
        (delay . g$11562$14xsgv)
        (or . g$11560$14xsgv)
        (and . g$11559$14xsgv)
        (do . g$11558$14xsgv)
        (cond . g$11557$14xsgv)
        (let* . g$11556$14xsgv)
        (let . g$11555$14xsgv)
        (quasiquote . g$11551$14xsgv)
        (syntax-rules . g$11550$14xsgv)
        (case . g$11541$14xsgv)
        (if . g$11537$14xsgv)
        (letrec . g$11535$14xsgv)
        (lambda . g$11532$14xsgv)
        (quote . g$11529$14xsgv)
        (letrec-syntax . g$11527$14xsgv)
        (let-syntax . g$11526$14xsgv)
        (set! . g$11525$14xsgv)
        (begin . g$11522$14xsgv)
        (define-syntax . g$11520$14xsgv)
        (define . g$11519$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6927$14xsgv
      'g$12166$14xsgv
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8555$14xsgv)
        (char-ready? . g$12064$14xsgv)
        (string-ci>? . g$12055$14xsgv)
        (string-ci>=? . g$12054$14xsgv)
        (string-ci=? . g$12053$14xsgv)
        (string-ci<? . g$12052$14xsgv)
        (string-ci<=? . g$12051$14xsgv)
        (char-whitespace? . g$12050$14xsgv)
        (char-upper-case? . g$12049$14xsgv)
        (char-numeric? . g$12047$14xsgv)
        (char-lower-case? . g$12046$14xsgv)
        (char-upcase . g$12044$14xsgv)
        (char-downcase . g$12041$14xsgv)
        (char-ci>? . g$12040$14xsgv)
        (char-ci>=? . g$12039$14xsgv)
        (char-ci=? . g$12038$14xsgv)
        (char-ci<? . g$12037$14xsgv)
        (char-ci<=? . g$12036$14xsgv)
        (char-alphabetic? . g$12035$14xsgv)
        (call-with-output-file . g$7095$14xsgv)
        (call-with-input-file . g$7094$14xsgv)
        (write-char . g$12003$14xsgv)
        (write . g$12002$14xsgv)
        (with-output-to-file . g$7093$14xsgv)
        (with-input-from-file . g$7092$14xsgv)
        (read-char . g$12001$14xsgv)
        (read . g$12000$14xsgv)
        (peek-char . g$11999$14xsgv)
        (open-output-file . g$11998$14xsgv)
        (open-input-file . g$11997$14xsgv)
        (newline . g$11996$14xsgv)
        (display . g$11995$14xsgv)
        (close-output-port . g$11994$14xsgv)
        (close-input-port . g$11993$14xsgv)
        (eof-object? . g$11992$14xsgv)
        (eof-object . g$11991$14xsgv)
        (current-error-port . g$11990$14xsgv)
        (current-output-port . g$11989$14xsgv)
        (current-input-port . g$11988$14xsgv)
        (output-port? . g$11987$14xsgv)
        (input-port? . g$11986$14xsgv)
        (scheme-report-environment . g$8530$14xsgv)
        (quotient . g$6663$14xsgv)
        (null-environment . g$8529$14xsgv)
        (remainder . g$6664$14xsgv)
        (modulo . g$6665$14xsgv)
        (inexact->exact . g$11924$14xsgv)
        (force . g$6667$14xsgv)
        (exact->inexact . g$11923$14xsgv)
        (string-fill! . g$11921$14xsgv)
        (string-set! . g$11920$14xsgv)
        (set-cdr! . g$11919$14xsgv)
        (set-car! . g$11918$14xsgv)
        (memv . g$11917$14xsgv)
        (memq . g$11916$14xsgv)
        (member . g$6241$14xsgv)
        (assv . g$6238$14xsgv)
        (assq . g$11915$14xsgv)
        (assoc . g$6239$14xsgv)
        (eval . g$8532$14xsgv)
        (zero? . g$11781$14xsgv)
        (vector? . g$11780$14xsgv)
        (vector-set! . g$11779$14xsgv)
        (vector-ref . g$11778$14xsgv)
        (vector-length . g$11776$14xsgv)
        (vector-fill! . g$11774$14xsgv)
        (vector->list . g$11773$14xsgv)
        (vector . g$11772$14xsgv)
        (values . g$11771$14xsgv)
        (truncate . g$11770$14xsgv)
        (tan . g$11769$14xsgv)
        (symbol? . g$11768$14xsgv)
        (symbol->string . g$11766$14xsgv)
        (substring . g$11765$14xsgv)
        (string? . g$11764$14xsgv)
        (string>? . g$11763$14xsgv)
        (string>=? . g$11762$14xsgv)
        (string=? . g$11761$14xsgv)
        (string<? . g$11760$14xsgv)
        (string<=? . g$11759$14xsgv)
        (string-ref . g$11758$14xsgv)
        (string-length . g$11757$14xsgv)
        (string-copy . g$11755$14xsgv)
        (string-append . g$11754$14xsgv)
        (string->symbol . g$11753$14xsgv)
        (string->number . g$11752$14xsgv)
        (string->list . g$11751$14xsgv)
        (string . g$11750$14xsgv)
        (sqrt . g$11749$14xsgv)
        (sin . g$11748$14xsgv)
        (round . g$11747$14xsgv)
        (reverse . g$11746$14xsgv)
        (real? . g$11745$14xsgv)
        (real-part . g$11743$14xsgv)
        (rationalize . g$5786$14xsgv)
        (rational? . g$11742$14xsgv)
        (procedure? . g$11740$14xsgv)
        (positive? . g$11739$14xsgv)
        (pair? . g$11738$14xsgv)
        (odd? . g$11737$14xsgv)
        (numerator . g$11736$14xsgv)
        (number? . g$11735$14xsgv)
        (number->string . g$11734$14xsgv)
        (null? . g$11733$14xsgv)
        (not . g$11732$14xsgv)
        (negative? . g$11731$14xsgv)
        (min . g$11729$14xsgv)
        (max . g$11728$14xsgv)
        (map . g$11727$14xsgv)
        (make-vector . g$11726$14xsgv)
        (make-string . g$11725$14xsgv)
        (make-rectangular . g$11724$14xsgv)
        (make-polar . g$11723$14xsgv)
        (magnitude . g$11722$14xsgv)
        (log . g$11721$14xsgv)
        (list? . g$11720$14xsgv)
        (list-tail . g$11719$14xsgv)
        (list-ref . g$11718$14xsgv)
        (list->vector . g$11717$14xsgv)
        (list->string . g$11716$14xsgv)
        (list . g$11715$14xsgv)
        (length . g$11714$14xsgv)
        (lcm . g$11713$14xsgv)
        (integer? . g$11712$14xsgv)
        (integer->char . g$11710$14xsgv)
        (inexact? . g$11708$14xsgv)
        (imag-part . g$11706$14xsgv)
        (gcd . g$11705$14xsgv)
        (for-each . g$11704$14xsgv)
        (floor . g$11703$14xsgv)
        (expt . g$11701$14xsgv)
        (exp . g$11700$14xsgv)
        (exact? . g$11699$14xsgv)
        (even? . g$11696$14xsgv)
        (eqv? . g$11694$14xsgv)
        (equal? . g$11693$14xsgv)
        (eq? . g$11692$14xsgv)
        (dynamic-wind . g$11691$14xsgv)
        (denominator . g$11684$14xsgv)
        (cos . g$11683$14xsgv)
        (cons . g$11682$14xsgv)
        (complex? . g$11681$14xsgv)
        (char? . g$11680$14xsgv)
        (char>? . g$11679$14xsgv)
        (char>=? . g$11678$14xsgv)
        (char=? . g$11677$14xsgv)
        (char<? . g$11676$14xsgv)
        (char<=? . g$11675$14xsgv)
        (char->integer . g$11674$14xsgv)
        (ceiling . g$11673$14xsgv)
        (call-with-values . g$11672$14xsgv)
        (call-with-current-continuation . g$11670$14xsgv)
        (cddddr . g$5785$14xsgv)
        (cdddar . g$5784$14xsgv)
        (cddadr . g$5783$14xsgv)
        (cddaar . g$5782$14xsgv)
        (cdaddr . g$5781$14xsgv)
        (cdadar . g$5780$14xsgv)
        (cdaadr . g$5779$14xsgv)
        (cdaaar . g$5778$14xsgv)
        (cadddr . g$5777$14xsgv)
        (caddar . g$5776$14xsgv)
        (cadadr . g$5775$14xsgv)
        (cadaar . g$5774$14xsgv)
        (caaddr . g$5773$14xsgv)
        (caadar . g$5772$14xsgv)
        (caaadr . g$5771$14xsgv)
        (caaaar . g$5770$14xsgv)
        (cdddr . g$5769$14xsgv)
        (cddar . g$5768$14xsgv)
        (cdadr . g$5767$14xsgv)
        (cdaar . g$5766$14xsgv)
        (caddr . g$5765$14xsgv)
        (cadar . g$5764$14xsgv)
        (caadr . g$5763$14xsgv)
        (caaar . g$5762$14xsgv)
        (cddr . g$5761$14xsgv)
        (cdar . g$5760$14xsgv)
        (cadr . g$5759$14xsgv)
        (caar . g$5758$14xsgv)
        (cdr . g$11669$14xsgv)
        (car . g$11668$14xsgv)
        (boolean? . g$11667$14xsgv)
        (atan . g$11665$14xsgv)
        (asin . g$11663$14xsgv)
        (apply . g$11662$14xsgv)
        (append . g$11661$14xsgv)
        (angle . g$11660$14xsgv)
        (acos . g$11659$14xsgv)
        (abs . g$11658$14xsgv)
        (/ . g$11657$14xsgv)
        (* . g$11656$14xsgv)
        (- . g$11655$14xsgv)
        (+ . g$11654$14xsgv)
        (>= . g$11653$14xsgv)
        (> . g$11652$14xsgv)
        (= . g$11651$14xsgv)
        (<= . g$11650$14xsgv)
        (< . g$11649$14xsgv)
        (unquote-splicing . g$11570$14xsgv)
        (unquote . g$11569$14xsgv)
        (else . g$11567$14xsgv)
        (=> . g$11566$14xsgv)
        (... . g$11565$14xsgv)
        (delay . g$11562$14xsgv)
        (or . g$11560$14xsgv)
        (and . g$11559$14xsgv)
        (do . g$11558$14xsgv)
        (cond . g$11557$14xsgv)
        (let* . g$11556$14xsgv)
        (let . g$11555$14xsgv)
        (quasiquote . g$11551$14xsgv)
        (syntax-rules . g$11550$14xsgv)
        (case . g$11541$14xsgv)
        (if . g$11537$14xsgv)
        (letrec . g$11535$14xsgv)
        (lambda . g$11532$14xsgv)
        (quote . g$11529$14xsgv)
        (letrec-syntax . g$11527$14xsgv)
        (let-syntax . g$11526$14xsgv)
        (set! . g$11525$14xsgv)
        (begin . g$11522$14xsgv)
        (define-syntax . g$11520$14xsgv)
        (define . g$11519$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6927$14xsgv
      'g$12167$14xsgv
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12063$14xsgv)
        (string-titlecase . g$12062$14xsgv)
        (string-normalize-nfkd . g$12061$14xsgv)
        (string-normalize-nfkc . g$12060$14xsgv)
        (string-normalize-nfd . g$12059$14xsgv)
        (string-normalize-nfc . g$12058$14xsgv)
        (string-foldcase . g$12057$14xsgv)
        (string-downcase . g$12056$14xsgv)
        (string-ci>? . g$12055$14xsgv)
        (string-ci>=? . g$12054$14xsgv)
        (string-ci=? . g$12053$14xsgv)
        (string-ci<? . g$12052$14xsgv)
        (string-ci<=? . g$12051$14xsgv)
        (char-whitespace? . g$12050$14xsgv)
        (char-upper-case? . g$12049$14xsgv)
        (char-title-case? . g$12048$14xsgv)
        (char-numeric? . g$12047$14xsgv)
        (char-lower-case? . g$12046$14xsgv)
        (char-general-category . g$12045$14xsgv)
        (char-upcase . g$12044$14xsgv)
        (char-titlecase . g$12043$14xsgv)
        (char-foldcase . g$12042$14xsgv)
        (char-downcase . g$12041$14xsgv)
        (char-ci>? . g$12040$14xsgv)
        (char-ci>=? . g$12039$14xsgv)
        (char-ci=? . g$12038$14xsgv)
        (char-ci<? . g$12037$14xsgv)
        (char-ci<=? . g$12036$14xsgv)
        (char-alphabetic? . g$12035$14xsgv)
        (make-variable-transformer . g$8154$14xsgv)
        (identifier? . g$8550$14xsgv)
        (generate-temporaries . g$8539$14xsgv)
        (free-identifier=? . g$8540$14xsgv)
        (syntax->datum . g$8552$14xsgv)
        (datum->syntax . g$8551$14xsgv)
        (bound-identifier=? . g$8541$14xsgv)
        (record-type-descriptor? . g$12034$14xsgv)
        (record-predicate . g$12033$14xsgv)
        (record-mutator . g$12032$14xsgv)
        (record-constructor . g$12031$14xsgv)
        (record-accessor . g$12030$14xsgv)
        (make-record-type-descriptor . g$12029$14xsgv)
        (make-record-constructor-descriptor . g$12028$14xsgv)
        (record? . g$12027$14xsgv)
        (record-type-uid . g$12026$14xsgv)
        (record-type-sealed? . g$12025$14xsgv)
        (record-type-parent . g$12024$14xsgv)
        (record-type-opaque? . g$12023$14xsgv)
        (record-type-name . g$12022$14xsgv)
        (record-type-generative? . g$12021$14xsgv)
        (record-type-field-names . g$12020$14xsgv)
        (record-rtd . g$12019$14xsgv)
        (record-field-mutable? . g$12018$14xsgv)
        (delete-file . g$6170$14xsgv)
        (file-exists? . g$6169$14xsgv)
        (vector-sort! . g$12017$14xsgv)
        (vector-sort . g$12016$14xsgv)
        (list-sort . g$6683$14xsgv)
        (symbol-hash . g$12015$14xsgv)
        (string-ci-hash . g$12014$14xsgv)
        (string-hash . g$12013$14xsgv)
        (equal-hash . g$12012$14xsgv)
        (hashtable-equivalence-function . g$12011$14xsgv)
        (make-hashtable . g$12010$14xsgv)
        (hashtable-hash-function . g$12009$14xsgv)
        (make-eqv-hashtable . g$6137$14xsgv)
        (make-eq-hashtable . g$6136$14xsgv)
        (hashtable? . g$12008$14xsgv)
        (hashtable-update! . g$6143$14xsgv)
        (hashtable-size . g$6138$14xsgv)
        (hashtable-set! . g$6140$14xsgv)
        (hashtable-ref . g$6139$14xsgv)
        (hashtable-mutable? . g$12007$14xsgv)
        (hashtable-keys . g$12006$14xsgv)
        (hashtable-entries . g$12005$14xsgv)
        (hashtable-delete! . g$6141$14xsgv)
        (hashtable-copy . g$12004$14xsgv)
        (hashtable-contains? . g$6142$14xsgv)
        (hashtable-clear! . g$6144$14xsgv)
        (call-with-output-file . g$7095$14xsgv)
        (call-with-input-file . g$7094$14xsgv)
        (write-char . g$12003$14xsgv)
        (write . g$12002$14xsgv)
        (with-output-to-file . g$7093$14xsgv)
        (with-input-from-file . g$7092$14xsgv)
        (read-char . g$12001$14xsgv)
        (read . g$12000$14xsgv)
        (peek-char . g$11999$14xsgv)
        (open-output-file . g$11998$14xsgv)
        (open-input-file . g$11997$14xsgv)
        (newline . g$11996$14xsgv)
        (display . g$11995$14xsgv)
        (close-output-port . g$11994$14xsgv)
        (close-input-port . g$11993$14xsgv)
        (eof-object? . g$11992$14xsgv)
        (eof-object . g$11991$14xsgv)
        (current-error-port . g$11990$14xsgv)
        (current-output-port . g$11989$14xsgv)
        (current-input-port . g$11988$14xsgv)
        (output-port? . g$11987$14xsgv)
        (input-port? . g$11986$14xsgv)
        (utf-8-codec . g$11985$14xsgv)
        (utf-16-codec . g$11984$14xsgv)
        (transcoder-error-handling-mode . g$11983$14xsgv)
        (transcoder-eol-style . g$11982$14xsgv)
        (transcoder-codec . g$11981$14xsgv)
        (transcoded-port . g$11980$14xsgv)
        (textual-port? . g$11979$14xsgv)
        (string->bytevector . g$11978$14xsgv)
        (standard-output-port . g$11977$14xsgv)
        (standard-input-port . g$11976$14xsgv)
        (standard-error-port . g$11975$14xsgv)
        (set-port-position! . g$11974$14xsgv)
        (put-u8 . g$11973$14xsgv)
        (put-string . g$11972$14xsgv)
        (put-datum . g$11971$14xsgv)
        (put-char . g$11970$14xsgv)
        (put-bytevector . g$11969$14xsgv)
        (port? . g$7071$14xsgv)
        (port-transcoder . g$11968$14xsgv)
        (port-position . g$11967$14xsgv)
        (port-has-set-port-position!? . g$11966$14xsgv)
        (port-has-port-position? . g$11965$14xsgv)
        (port-eof? . g$11964$14xsgv)
        (output-port-buffer-mode . g$11963$14xsgv)
        (open-string-output-port . g$7070$14xsgv)
        (open-string-input-port . g$11962$14xsgv)
        (open-file-output-port . g$11961$14xsgv)
        (open-file-input/output-port . g$11960$14xsgv)
        (open-file-input-port . g$11959$14xsgv)
        (open-bytevector-output-port . g$11958$14xsgv)
        (open-bytevector-input-port . g$11957$14xsgv)
        (native-transcoder . g$11956$14xsgv)
        (native-eol-style . g$11955$14xsgv)
        (make-transcoder . g$11954$14xsgv)
        (latin-1-codec . g$11953$14xsgv)
        (make-i/o-write-error . g$6927$14xsgv)
        (make-i/o-read-error . g$6913$14xsgv)
        (make-i/o-port-error . g$7032$14xsgv)
        (make-i/o-invalid-position-error . g$6942$14xsgv)
        (make-i/o-filename-error . g$6959$14xsgv)
        (make-i/o-file-protection-error . g$6975$14xsgv)
        (make-i/o-file-is-read-only-error . g$6989$14xsgv)
        (make-i/o-file-does-not-exist-error . g$7017$14xsgv)
        (make-i/o-file-already-exists-error . g$7003$14xsgv)
        (make-i/o-error . g$6899$14xsgv)
        (make-i/o-encoding-error . g$7063$14xsgv)
        (make-i/o-decoding-error . g$7048$14xsgv)
        (make-custom-textual-output-port . g$11952$14xsgv)
        (make-custom-textual-input/output-port . g$11951$14xsgv)
        (make-custom-textual-input-port . g$11950$14xsgv)
        (make-custom-binary-output-port . g$11949$14xsgv)
        (make-custom-binary-input/output-port . g$11948$14xsgv)
        (make-custom-binary-input-port . g$11947$14xsgv)
        (make-bytevector . g$11946$14xsgv)
        (lookahead-u8 . g$11945$14xsgv)
        (lookahead-char . g$11944$14xsgv)
        (i/o-write-error? . g$6928$14xsgv)
        (i/o-read-error? . g$6914$14xsgv)
        (i/o-port-error? . g$7034$14xsgv)
        (i/o-invalid-position-error? . g$6944$14xsgv)
        (i/o-error-position . g$6945$14xsgv)
        (i/o-filename-error? . g$6961$14xsgv)
        (i/o-file-protection-error? . g$6976$14xsgv)
        (i/o-file-is-read-only-error? . g$6990$14xsgv)
        (i/o-file-does-not-exist-error? . g$7018$14xsgv)
        (i/o-file-already-exists-error? . g$7004$14xsgv)
        (i/o-error? . g$6900$14xsgv)
        (i/o-error-port . g$7035$14xsgv)
        (i/o-error-filename . g$6962$14xsgv)
        (i/o-encoding-error? . g$7065$14xsgv)
        (i/o-encoding-error-char . g$7066$14xsgv)
        (i/o-decoding-error? . g$7049$14xsgv)
        (get-u8 . g$11943$14xsgv)
        (get-string-n! . g$11942$14xsgv)
        (get-string-n . g$11941$14xsgv)
        (get-string-all . g$11940$14xsgv)
        (get-line . g$11939$14xsgv)
        (get-datum . g$11938$14xsgv)
        (get-char . g$11937$14xsgv)
        (get-bytevector-some . g$11936$14xsgv)
        (get-bytevector-n! . g$11935$14xsgv)
        (get-bytevector-n . g$11934$14xsgv)
        (get-bytevector-all . g$11933$14xsgv)
        (flush-output-port . g$11932$14xsgv)
        (close-port . g$11931$14xsgv)
        (call-with-string-output-port . g$11930$14xsgv)
        (call-with-port . g$11929$14xsgv)
        (call-with-bytevector-output-port . g$11928$14xsgv)
        (bytevector->string . g$11927$14xsgv)
        (buffer-mode? . g$11926$14xsgv)
        (binary-port? . g$11925$14xsgv)
        (exit . g$11922$14xsgv)
        (command-line . g$11483$14xsgv)
        (remove . g$6250$14xsgv)
        (remv . g$6251$14xsgv)
        (remp . g$6236$14xsgv)
        (remq . g$6252$14xsgv)
        (partition . g$6235$14xsgv)
        (memv . g$11917$14xsgv)
        (memq . g$11916$14xsgv)
        (memp . g$6242$14xsgv)
        (member . g$6241$14xsgv)
        (exists . g$6246$14xsgv)
        (for-all . g$6245$14xsgv)
        (fold-right . g$6249$14xsgv)
        (fold-left . g$6248$14xsgv)
        (find . g$6234$14xsgv)
        (filter . g$6237$14xsgv)
        (cons* . g$6247$14xsgv)
        (assv . g$6238$14xsgv)
        (assq . g$11915$14xsgv)
        (assp . g$6240$14xsgv)
        (assoc . g$6239$14xsgv)
        (with-exception-handler . g$11914$14xsgv)
        (raise-continuable . g$11913$14xsgv)
        (raise . g$11912$14xsgv)
        (make-enumeration . g$7152$14xsgv)
        (enum-set=? . g$7159$14xsgv)
        (enum-set-universe . g$7153$14xsgv)
        (enum-set-union . g$7160$14xsgv)
        (enum-set-subset? . g$7158$14xsgv)
        (enum-set-projection . g$7164$14xsgv)
        (enum-set-member? . g$7157$14xsgv)
        (enum-set-intersection . g$7161$14xsgv)
        (enum-set-indexer . g$7154$14xsgv)
        (enum-set-difference . g$7162$14xsgv)
        (enum-set-constructor . g$7155$14xsgv)
        (enum-set-complement . g$7163$14xsgv)
        (enum-set->list . g$7156$14xsgv)
        (who-condition? . g$6574$14xsgv)
        (warning? . g$6485$14xsgv)
        (violation? . g$6527$14xsgv)
        (undefined-violation? . g$6651$14xsgv)
        (syntax-violation? . g$6635$14xsgv)
        (syntax-violation-subform . g$6637$14xsgv)
        (syntax-violation-form . g$6636$14xsgv)
        (syntax-violation . g$8549$14xsgv)
        (simple-conditions . g$11911$14xsgv)
        (serious-condition? . g$6499$14xsgv)
        (non-continuable-violation? . g$6589$14xsgv)
        (message-condition? . g$6470$14xsgv)
        (make-who-condition . g$6572$14xsgv)
        (make-warning . g$6484$14xsgv)
        (make-violation . g$6526$14xsgv)
        (make-undefined-violation . g$6650$14xsgv)
        (make-syntax-violation . g$6632$14xsgv)
        (make-serious-condition . g$6498$14xsgv)
        (make-non-continuable-violation . g$6588$14xsgv)
        (make-message-condition . g$6468$14xsgv)
        (make-lexical-violation . g$6616$14xsgv)
        (make-irritants-condition . g$6555$14xsgv)
        (make-implementation-restriction-violation . g$6602$14xsgv)
        (make-error . g$6512$14xsgv)
        (make-assertion-violation . g$6540$14xsgv)
        (lexical-violation? . g$6617$14xsgv)
        (irritants-condition? . g$6557$14xsgv)
        (implementation-restriction-violation? . g$6603$14xsgv)
        (error? . g$6513$14xsgv)
        (condition-who . g$6575$14xsgv)
        (condition-predicate . g$11910$14xsgv)
        (condition-message . g$6471$14xsgv)
        (condition-irritants . g$6558$14xsgv)
        (condition-accessor . g$11909$14xsgv)
        (condition . g$11908$14xsgv)
        (assertion-violation? . g$6541$14xsgv)
        (condition? . g$11907$14xsgv)
        (utf32->string . g$11906$14xsgv)
        (utf16->string . g$11905$14xsgv)
        (utf8->string . g$11904$14xsgv)
        (uint-list->bytevector . g$11903$14xsgv)
        (u8-list->bytevector . g$11902$14xsgv)
        (string->utf8 . g$11901$14xsgv)
        (string->utf32 . g$11900$14xsgv)
        (string->utf16 . g$11899$14xsgv)
        (sint-list->bytevector . g$11898$14xsgv)
        (native-endianness . g$6326$14xsgv)
        (bytevector? . g$11897$14xsgv)
        (bytevector=? . g$11896$14xsgv)
        (bytevector-uint-set! . g$11895$14xsgv)
        (bytevector-uint-ref . g$11894$14xsgv)
        (bytevector-u8-set! . g$11893$14xsgv)
        (bytevector-u8-ref . g$11892$14xsgv)
        (bytevector-u64-set! . g$6347$14xsgv)
        (bytevector-u64-ref . g$6343$14xsgv)
        (bytevector-u64-native-set! . g$6349$14xsgv)
        (bytevector-u64-native-ref . g$6345$14xsgv)
        (bytevector-u32-set! . g$6339$14xsgv)
        (bytevector-u32-ref . g$6335$14xsgv)
        (bytevector-u32-native-set! . g$6341$14xsgv)
        (bytevector-u32-native-ref . g$6337$14xsgv)
        (bytevector-u16-set! . g$6331$14xsgv)
        (bytevector-u16-ref . g$6327$14xsgv)
        (bytevector-u16-native-set! . g$6333$14xsgv)
        (bytevector-u16-native-ref . g$6329$14xsgv)
        (bytevector-sint-set! . g$11891$14xsgv)
        (bytevector-sint-ref . g$11890$14xsgv)
        (bytevector-s8-set! . g$11889$14xsgv)
        (bytevector-s8-ref . g$11888$14xsgv)
        (bytevector-s64-set! . g$6348$14xsgv)
        (bytevector-s64-ref . g$6344$14xsgv)
        (bytevector-s64-native-set! . g$6350$14xsgv)
        (bytevector-s64-native-ref . g$6346$14xsgv)
        (bytevector-s32-set! . g$6340$14xsgv)
        (bytevector-s32-ref . g$6336$14xsgv)
        (bytevector-s32-native-set! . g$6342$14xsgv)
        (bytevector-s32-native-ref . g$6338$14xsgv)
        (bytevector-s16-set! . g$6332$14xsgv)
        (bytevector-s16-ref . g$6328$14xsgv)
        (bytevector-s16-native-set! . g$6334$14xsgv)
        (bytevector-s16-native-ref . g$6330$14xsgv)
        (bytevector-length . g$11887$14xsgv)
        (bytevector-ieee-single-set! . g$11886$14xsgv)
        (bytevector-ieee-single-ref . g$11885$14xsgv)
        (bytevector-ieee-single-native-set! . g$6353$14xsgv)
        (bytevector-ieee-single-native-ref . g$6351$14xsgv)
        (bytevector-ieee-double-set! . g$11884$14xsgv)
        (bytevector-ieee-double-ref . g$11883$14xsgv)
        (bytevector-ieee-double-native-set! . g$6354$14xsgv)
        (bytevector-ieee-double-native-ref . g$6352$14xsgv)
        (bytevector-fill! . g$11882$14xsgv)
        (bytevector-copy! . g$11881$14xsgv)
        (bytevector-copy . g$11880$14xsgv)
        (bytevector->uint-list . g$11879$14xsgv)
        (bytevector->u8-list . g$11878$14xsgv)
        (bytevector->sint-list . g$11877$14xsgv)
        (no-nans-violation? . g$6885$14xsgv)
        (no-infinities-violation? . g$6871$14xsgv)
        (make-no-nans-violation . g$6884$14xsgv)
        (make-no-infinities-violation . g$6870$14xsgv)
        (real->flonum . g$11876$14xsgv)
        (flzero? . g$11875$14xsgv)
        (fltruncate . g$11874$14xsgv)
        (fltan . g$11873$14xsgv)
        (flsqrt . g$11872$14xsgv)
        (flsin . g$11871$14xsgv)
        (flround . g$11870$14xsgv)
        (flpositive? . g$11869$14xsgv)
        (flonum? . g$11868$14xsgv)
        (flodd? . g$11867$14xsgv)
        (flnumerator . g$11866$14xsgv)
        (flnegative? . g$11865$14xsgv)
        (flnan? . g$11864$14xsgv)
        (flmod0 . g$11863$14xsgv)
        (flmod . g$11862$14xsgv)
        (flmin . g$11861$14xsgv)
        (flmax . g$11860$14xsgv)
        (fllog . g$11859$14xsgv)
        (flinteger? . g$11858$14xsgv)
        (flinfinite? . g$11857$14xsgv)
        (flfloor . g$11856$14xsgv)
        (flfinite? . g$11855$14xsgv)
        (flexpt . g$11854$14xsgv)
        (flexp . g$11853$14xsgv)
        (fleven? . g$11852$14xsgv)
        (fldiv0-and-mod0 . g$11851$14xsgv)
        (fldiv0 . g$11850$14xsgv)
        (fldiv-and-mod . g$11849$14xsgv)
        (fldiv . g$11848$14xsgv)
        (fldenominator . g$11847$14xsgv)
        (flcos . g$11846$14xsgv)
        (flceiling . g$11845$14xsgv)
        (flatan . g$11844$14xsgv)
        (flasin . g$11843$14xsgv)
        (flacos . g$11842$14xsgv)
        (flabs . g$11841$14xsgv)
        (fl>? . g$11840$14xsgv)
        (fl>=? . g$11839$14xsgv)
        (fl=? . g$11838$14xsgv)
        (fl<? . g$11837$14xsgv)
        (fl<=? . g$11836$14xsgv)
        (fl/ . g$11835$14xsgv)
        (fl- . g$11834$14xsgv)
        (fl+ . g$11833$14xsgv)
        (fl* . g$11832$14xsgv)
        (fixnum->flonum . g$11831$14xsgv)
        (fxzero? . g$11830$14xsgv)
        (fxxor . g$11829$14xsgv)
        (fxrotate-bit-field . g$6816$14xsgv)
        (fxreverse-bit-field . g$11828$14xsgv)
        (fxpositive? . g$11827$14xsgv)
        (fxodd? . g$11826$14xsgv)
        (fxnot . g$11825$14xsgv)
        (fxnegative? . g$11824$14xsgv)
        (fxmod0 . g$11823$14xsgv)
        (fxmod . g$11822$14xsgv)
        (fxmin . g$11821$14xsgv)
        (fxmax . g$11820$14xsgv)
        (fxlength . g$11819$14xsgv)
        (fxior . g$11818$14xsgv)
        (fxif . g$6810$14xsgv)
        (fxfirst-bit-set . g$11817$14xsgv)
        (fxeven? . g$11816$14xsgv)
        (fxdiv0-and-mod0 . g$11815$14xsgv)
        (fxdiv0 . g$11814$14xsgv)
        (fxdiv-and-mod . g$11813$14xsgv)
        (fxdiv . g$11812$14xsgv)
        (fxcopy-bit-field . g$6813$14xsgv)
        (fxcopy-bit . g$6811$14xsgv)
        (fxbit-set? . g$11811$14xsgv)
        (fxbit-field . g$6812$14xsgv)
        (fxbit-count . g$11810$14xsgv)
        (fxarithmetic-shift-right . g$6815$14xsgv)
        (fxarithmetic-shift-left . g$6814$14xsgv)
        (fxarithmetic-shift . g$11809$14xsgv)
        (fxand . g$11808$14xsgv)
        (fx>? . g$11807$14xsgv)
        (fx>=? . g$11806$14xsgv)
        (fx=? . g$11805$14xsgv)
        (fx<? . g$11804$14xsgv)
        (fx<=? . g$11803$14xsgv)
        (fx-/carry . g$11802$14xsgv)
        (fx- . g$11801$14xsgv)
        (fx+/carry . g$11800$14xsgv)
        (fx+ . g$11799$14xsgv)
        (fx*/carry . g$11798$14xsgv)
        (fx* . g$11797$14xsgv)
        (greatest-fixnum . g$11796$14xsgv)
        (least-fixnum . g$11795$14xsgv)
        (fixnum-width . g$11794$14xsgv)
        (fixnum? . g$11793$14xsgv)
        (bitwise-rotate-bit-field . g$6768$14xsgv)
        (bitwise-reverse-bit-field . g$11792$14xsgv)
        (bitwise-length . g$11791$14xsgv)
        (bitwise-if . g$6762$14xsgv)
        (bitwise-first-bit-set . g$11790$14xsgv)
        (bitwise-copy-bit-field . g$6765$14xsgv)
        (bitwise-copy-bit . g$6763$14xsgv)
        (bitwise-bit-set? . g$11789$14xsgv)
        (bitwise-bit-field . g$11788$14xsgv)
        (bitwise-bit-count . g$11787$14xsgv)
        (bitwise-xor . g$11786$14xsgv)
        (bitwise-ior . g$11785$14xsgv)
        (bitwise-and . g$11784$14xsgv)
        (bitwise-not . g$11783$14xsgv)
        (bitwise-arithmetic-shift-right . g$6767$14xsgv)
        (bitwise-arithmetic-shift-left . g$6766$14xsgv)
        (bitwise-arithmetic-shift . g$11782$14xsgv)
        (zero? . g$11781$14xsgv)
        (vector? . g$11780$14xsgv)
        (vector-set! . g$11779$14xsgv)
        (vector-ref . g$11778$14xsgv)
        (vector-map . g$11777$14xsgv)
        (vector-length . g$11776$14xsgv)
        (vector-for-each . g$11775$14xsgv)
        (vector-fill! . g$11774$14xsgv)
        (vector->list . g$11773$14xsgv)
        (vector . g$11772$14xsgv)
        (values . g$11771$14xsgv)
        (truncate . g$11770$14xsgv)
        (tan . g$11769$14xsgv)
        (symbol? . g$11768$14xsgv)
        (symbol=? . g$11767$14xsgv)
        (symbol->string . g$11766$14xsgv)
        (substring . g$11765$14xsgv)
        (string? . g$11764$14xsgv)
        (string>? . g$11763$14xsgv)
        (string>=? . g$11762$14xsgv)
        (string=? . g$11761$14xsgv)
        (string<? . g$11760$14xsgv)
        (string<=? . g$11759$14xsgv)
        (string-ref . g$11758$14xsgv)
        (string-length . g$11757$14xsgv)
        (string-for-each . g$11756$14xsgv)
        (string-copy . g$11755$14xsgv)
        (string-append . g$11754$14xsgv)
        (string->symbol . g$11753$14xsgv)
        (string->number . g$11752$14xsgv)
        (string->list . g$11751$14xsgv)
        (string . g$11750$14xsgv)
        (sqrt . g$11749$14xsgv)
        (sin . g$11748$14xsgv)
        (round . g$11747$14xsgv)
        (reverse . g$11746$14xsgv)
        (real? . g$11745$14xsgv)
        (real-valued? . g$11744$14xsgv)
        (real-part . g$11743$14xsgv)
        (rationalize . g$5786$14xsgv)
        (rational? . g$11742$14xsgv)
        (rational-valued? . g$11741$14xsgv)
        (procedure? . g$11740$14xsgv)
        (positive? . g$11739$14xsgv)
        (pair? . g$11738$14xsgv)
        (odd? . g$11737$14xsgv)
        (numerator . g$11736$14xsgv)
        (number? . g$11735$14xsgv)
        (number->string . g$11734$14xsgv)
        (null? . g$11733$14xsgv)
        (not . g$11732$14xsgv)
        (negative? . g$11731$14xsgv)
        (nan? . g$11730$14xsgv)
        (min . g$11729$14xsgv)
        (max . g$11728$14xsgv)
        (map . g$11727$14xsgv)
        (make-vector . g$11726$14xsgv)
        (make-string . g$11725$14xsgv)
        (make-rectangular . g$11724$14xsgv)
        (make-polar . g$11723$14xsgv)
        (magnitude . g$11722$14xsgv)
        (log . g$11721$14xsgv)
        (list? . g$11720$14xsgv)
        (list-tail . g$11719$14xsgv)
        (list-ref . g$11718$14xsgv)
        (list->vector . g$11717$14xsgv)
        (list->string . g$11716$14xsgv)
        (list . g$11715$14xsgv)
        (length . g$11714$14xsgv)
        (lcm . g$11713$14xsgv)
        (integer? . g$11712$14xsgv)
        (integer-valued? . g$11711$14xsgv)
        (integer->char . g$11710$14xsgv)
        (infinite? . g$11709$14xsgv)
        (inexact? . g$11708$14xsgv)
        (inexact . g$11707$14xsgv)
        (imag-part . g$11706$14xsgv)
        (gcd . g$11705$14xsgv)
        (for-each . g$11704$14xsgv)
        (floor . g$11703$14xsgv)
        (finite? . g$11702$14xsgv)
        (expt . g$11701$14xsgv)
        (exp . g$11700$14xsgv)
        (exact? . g$11699$14xsgv)
        (exact-integer-sqrt . g$11698$14xsgv)
        (exact . g$11697$14xsgv)
        (even? . g$11696$14xsgv)
        (error . g$11695$14xsgv)
        (eqv? . g$11694$14xsgv)
        (equal? . g$11693$14xsgv)
        (eq? . g$11692$14xsgv)
        (dynamic-wind . g$11691$14xsgv)
        (div0-and-mod0 . g$11690$14xsgv)
        (mod0 . g$11689$14xsgv)
        (div0 . g$11688$14xsgv)
        (div-and-mod . g$11687$14xsgv)
        (mod . g$11686$14xsgv)
        (div . g$11685$14xsgv)
        (denominator . g$11684$14xsgv)
        (cos . g$11683$14xsgv)
        (cons . g$11682$14xsgv)
        (complex? . g$11681$14xsgv)
        (char? . g$11680$14xsgv)
        (char>? . g$11679$14xsgv)
        (char>=? . g$11678$14xsgv)
        (char=? . g$11677$14xsgv)
        (char<? . g$11676$14xsgv)
        (char<=? . g$11675$14xsgv)
        (char->integer . g$11674$14xsgv)
        (ceiling . g$11673$14xsgv)
        (call-with-values . g$11672$14xsgv)
        (call/cc . g$11671$14xsgv)
        (call-with-current-continuation . g$11670$14xsgv)
        (cddddr . g$5785$14xsgv)
        (cdddar . g$5784$14xsgv)
        (cddadr . g$5783$14xsgv)
        (cddaar . g$5782$14xsgv)
        (cdaddr . g$5781$14xsgv)
        (cdadar . g$5780$14xsgv)
        (cdaadr . g$5779$14xsgv)
        (cdaaar . g$5778$14xsgv)
        (cadddr . g$5777$14xsgv)
        (caddar . g$5776$14xsgv)
        (cadadr . g$5775$14xsgv)
        (cadaar . g$5774$14xsgv)
        (caaddr . g$5773$14xsgv)
        (caadar . g$5772$14xsgv)
        (caaadr . g$5771$14xsgv)
        (caaaar . g$5770$14xsgv)
        (cdddr . g$5769$14xsgv)
        (cddar . g$5768$14xsgv)
        (cdadr . g$5767$14xsgv)
        (cdaar . g$5766$14xsgv)
        (caddr . g$5765$14xsgv)
        (cadar . g$5764$14xsgv)
        (caadr . g$5763$14xsgv)
        (caaar . g$5762$14xsgv)
        (cddr . g$5761$14xsgv)
        (cdar . g$5760$14xsgv)
        (cadr . g$5759$14xsgv)
        (caar . g$5758$14xsgv)
        (cdr . g$11669$14xsgv)
        (car . g$11668$14xsgv)
        (boolean? . g$11667$14xsgv)
        (boolean=? . g$11666$14xsgv)
        (atan . g$11665$14xsgv)
        (assertion-violation . g$11664$14xsgv)
        (asin . g$11663$14xsgv)
        (apply . g$11662$14xsgv)
        (append . g$11661$14xsgv)
        (angle . g$11660$14xsgv)
        (acos . g$11659$14xsgv)
        (abs . g$11658$14xsgv)
        (/ . g$11657$14xsgv)
        (* . g$11656$14xsgv)
        (- . g$11655$14xsgv)
        (+ . g$11654$14xsgv)
        (>= . g$11653$14xsgv)
        (> . g$11652$14xsgv)
        (= . g$11651$14xsgv)
        (<= . g$11650$14xsgv)
        (< . g$11649$14xsgv)
        (&no-nans . g$11623$14xsgv)
        (&no-infinities . g$11622$14xsgv)
        (&i/o-encoding . g$11621$14xsgv)
        (&i/o-decoding . g$11620$14xsgv)
        (&i/o-port . g$11619$14xsgv)
        (&i/o-file-does-not-exist . g$11618$14xsgv)
        (&i/o-file-already-exists . g$11617$14xsgv)
        (&i/o-file-is-read-only . g$11616$14xsgv)
        (&i/o-file-protection . g$11615$14xsgv)
        (&i/o-filename . g$11614$14xsgv)
        (&i/o-invalid-position . g$11613$14xsgv)
        (&i/o-write . g$11612$14xsgv)
        (&i/o-read . g$11611$14xsgv)
        (&i/o . g$11610$14xsgv)
        (&non-continuable . g$11609$14xsgv)
        (&undefined . g$11608$14xsgv)
        (&syntax . g$11607$14xsgv)
        (&lexical . g$11606$14xsgv)
        (&implementation-restriction . g$11605$14xsgv)
        (&who . g$11603$14xsgv)
        (&irritants . g$11602$14xsgv)
        (&assertion . g$11601$14xsgv)
        (&violation . g$11600$14xsgv)
        (&error . g$11599$14xsgv)
        (&serious . g$11598$14xsgv)
        (&warning . g$11597$14xsgv)
        (&message . g$11596$14xsgv)
        (&condition . g$11595$14xsgv)
        (define-condition-type . g$11594$14xsgv)
        (define-enumeration . g$11593$14xsgv)
        (define-record-type . g$11592$14xsgv)
        (parent-rtd . g$11591$14xsgv)
        (nongenerative . g$11590$14xsgv)
        (opaque . g$11589$14xsgv)
        (sealed . g$11588$14xsgv)
        (protocol . g$11587$14xsgv)
        (parent . g$11586$14xsgv)
        (immutable . g$11585$14xsgv)
        (mutable . g$11584$14xsgv)
        (fields . g$11583$14xsgv)
        (error-handling-mode . g$11582$14xsgv)
        (file-options . g$11581$14xsgv)
        (buffer-mode . g$11580$14xsgv)
        (eol-style . g$11579$14xsgv)
        (guard . g$11578$14xsgv)
        (unsyntax-splicing . g$11572$14xsgv)
        (unsyntax . g$11571$14xsgv)
        (unquote-splicing . g$11570$14xsgv)
        (unquote . g$11569$14xsgv)
        (_ . g$11568$14xsgv)
        (else . g$11567$14xsgv)
        (=> . g$11566$14xsgv)
        (... . g$11565$14xsgv)
        (assert . g$11564$14xsgv)
        (endianness . g$11563$14xsgv)
        (or . g$11560$14xsgv)
        (and . g$11559$14xsgv)
        (do . g$11558$14xsgv)
        (cond . g$11557$14xsgv)
        (let* . g$11556$14xsgv)
        (let . g$11555$14xsgv)
        (identifier-syntax . g$11554$14xsgv)
        (with-syntax . g$11553$14xsgv)
        (quasisyntax . g$11552$14xsgv)
        (quasiquote . g$11551$14xsgv)
        (syntax-rules . g$11550$14xsgv)
        (let-values . g$11546$14xsgv)
        (let*-values . g$11545$14xsgv)
        (record-constructor-descriptor . g$11544$14xsgv)
        (record-type-descriptor . g$11543$14xsgv)
        (case . g$11541$14xsgv)
        (unless . g$11539$14xsgv)
        (when . g$11538$14xsgv)
        (if . g$11537$14xsgv)
        (letrec* . g$11536$14xsgv)
        (letrec . g$11535$14xsgv)
        (case-lambda . g$11533$14xsgv)
        (lambda . g$11532$14xsgv)
        (syntax . g$11531$14xsgv)
        (syntax-case . g$11530$14xsgv)
        (quote . g$11529$14xsgv)
        (letrec-syntax . g$11527$14xsgv)
        (let-syntax . g$11526$14xsgv)
        (set! . g$11525$14xsgv)
        (import . g$11524$14xsgv)
        (library . g$11523$14xsgv)
        (begin . g$11522$14xsgv)
        (define-syntax . g$11520$14xsgv)
        (define . g$11519$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12168$14xsgv
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8555$14xsgv)
        (scheme-report-environment . g$8530$14xsgv)
        (quotient . g$6663$14xsgv)
        (null-environment . g$8529$14xsgv)
        (remainder . g$6664$14xsgv)
        (modulo . g$6665$14xsgv)
        (inexact->exact . g$11924$14xsgv)
        (force . g$6667$14xsgv)
        (exact->inexact . g$11923$14xsgv)
        (delay . g$11562$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12169$14xsgv
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11558$14xsgv)
        (unless . g$11539$14xsgv)
        (when . g$11538$14xsgv)
        (case-lambda . g$11533$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12170$14xsgv
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8532$14xsgv) (environment . g$8528$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12171$14xsgv
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$11919$14xsgv) (set-car! . g$11918$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12172$14xsgv
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$11921$14xsgv) (string-set! . g$11920$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12173$14xsgv
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$11922$14xsgv) (command-line . g$11483$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12174$14xsgv
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8154$14xsgv)
        (identifier? . g$8550$14xsgv)
        (generate-temporaries . g$8539$14xsgv)
        (free-identifier=? . g$8540$14xsgv)
        (syntax->datum . g$8552$14xsgv)
        (datum->syntax . g$8551$14xsgv)
        (bound-identifier=? . g$8541$14xsgv)
        (syntax-violation . g$8549$14xsgv)
        (unsyntax-splicing . g$11572$14xsgv)
        (unsyntax . g$11571$14xsgv)
        (_ . g$11568$14xsgv)
        (... . g$11565$14xsgv)
        (with-syntax . g$11553$14xsgv)
        (quasisyntax . g$11552$14xsgv)
        (syntax . g$11531$14xsgv)
        (syntax-case . g$11530$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12175$14xsgv
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6170$14xsgv)
        (file-exists? . g$6169$14xsgv)
        (make-i/o-write-error . g$6927$14xsgv)
        (make-i/o-read-error . g$6913$14xsgv)
        (make-i/o-port-error . g$7032$14xsgv)
        (make-i/o-invalid-position-error . g$6942$14xsgv)
        (make-i/o-filename-error . g$6959$14xsgv)
        (make-i/o-file-protection-error . g$6975$14xsgv)
        (make-i/o-file-is-read-only-error . g$6989$14xsgv)
        (make-i/o-file-does-not-exist-error . g$7017$14xsgv)
        (make-i/o-file-already-exists-error . g$7003$14xsgv)
        (make-i/o-error . g$6899$14xsgv)
        (i/o-write-error? . g$6928$14xsgv)
        (i/o-read-error? . g$6914$14xsgv)
        (i/o-port-error? . g$7034$14xsgv)
        (i/o-invalid-position-error? . g$6944$14xsgv)
        (i/o-error-position . g$6945$14xsgv)
        (i/o-filename-error? . g$6961$14xsgv)
        (i/o-file-protection-error? . g$6976$14xsgv)
        (i/o-file-is-read-only-error? . g$6990$14xsgv)
        (i/o-file-does-not-exist-error? . g$7018$14xsgv)
        (i/o-file-already-exists-error? . g$7004$14xsgv)
        (i/o-error? . g$6900$14xsgv)
        (i/o-error-port . g$7035$14xsgv)
        (i/o-error-filename . g$6962$14xsgv)
        (&i/o-port . g$11619$14xsgv)
        (&i/o-file-does-not-exist . g$11618$14xsgv)
        (&i/o-file-already-exists . g$11617$14xsgv)
        (&i/o-file-is-read-only . g$11616$14xsgv)
        (&i/o-file-protection . g$11615$14xsgv)
        (&i/o-filename . g$11614$14xsgv)
        (&i/o-invalid-position . g$11613$14xsgv)
        (&i/o-write . g$11612$14xsgv)
        (&i/o-read . g$11611$14xsgv)
        (&i/o . g$11610$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12176$14xsgv
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12017$14xsgv)
        (vector-sort . g$12016$14xsgv)
        (list-sort . g$6683$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12177$14xsgv
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$11781$14xsgv)
        (vector? . g$11780$14xsgv)
        (vector-set! . g$11779$14xsgv)
        (vector-ref . g$11778$14xsgv)
        (vector-map . g$11777$14xsgv)
        (vector-length . g$11776$14xsgv)
        (vector-for-each . g$11775$14xsgv)
        (vector-fill! . g$11774$14xsgv)
        (vector->list . g$11773$14xsgv)
        (vector . g$11772$14xsgv)
        (values . g$11771$14xsgv)
        (truncate . g$11770$14xsgv)
        (tan . g$11769$14xsgv)
        (symbol? . g$11768$14xsgv)
        (symbol=? . g$11767$14xsgv)
        (symbol->string . g$11766$14xsgv)
        (substring . g$11765$14xsgv)
        (string? . g$11764$14xsgv)
        (string>? . g$11763$14xsgv)
        (string>=? . g$11762$14xsgv)
        (string=? . g$11761$14xsgv)
        (string<? . g$11760$14xsgv)
        (string<=? . g$11759$14xsgv)
        (string-ref . g$11758$14xsgv)
        (string-length . g$11757$14xsgv)
        (string-for-each . g$11756$14xsgv)
        (string-copy . g$11755$14xsgv)
        (string-append . g$11754$14xsgv)
        (string->symbol . g$11753$14xsgv)
        (string->number . g$11752$14xsgv)
        (string->list . g$11751$14xsgv)
        (string . g$11750$14xsgv)
        (sqrt . g$11749$14xsgv)
        (sin . g$11748$14xsgv)
        (round . g$11747$14xsgv)
        (reverse . g$11746$14xsgv)
        (real? . g$11745$14xsgv)
        (real-valued? . g$11744$14xsgv)
        (real-part . g$11743$14xsgv)
        (rationalize . g$5786$14xsgv)
        (rational? . g$11742$14xsgv)
        (rational-valued? . g$11741$14xsgv)
        (procedure? . g$11740$14xsgv)
        (positive? . g$11739$14xsgv)
        (pair? . g$11738$14xsgv)
        (odd? . g$11737$14xsgv)
        (numerator . g$11736$14xsgv)
        (number? . g$11735$14xsgv)
        (number->string . g$11734$14xsgv)
        (null? . g$11733$14xsgv)
        (not . g$11732$14xsgv)
        (negative? . g$11731$14xsgv)
        (nan? . g$11730$14xsgv)
        (min . g$11729$14xsgv)
        (max . g$11728$14xsgv)
        (map . g$11727$14xsgv)
        (make-vector . g$11726$14xsgv)
        (make-string . g$11725$14xsgv)
        (make-rectangular . g$11724$14xsgv)
        (make-polar . g$11723$14xsgv)
        (magnitude . g$11722$14xsgv)
        (log . g$11721$14xsgv)
        (list? . g$11720$14xsgv)
        (list-tail . g$11719$14xsgv)
        (list-ref . g$11718$14xsgv)
        (list->vector . g$11717$14xsgv)
        (list->string . g$11716$14xsgv)
        (list . g$11715$14xsgv)
        (length . g$11714$14xsgv)
        (lcm . g$11713$14xsgv)
        (integer? . g$11712$14xsgv)
        (integer-valued? . g$11711$14xsgv)
        (integer->char . g$11710$14xsgv)
        (infinite? . g$11709$14xsgv)
        (inexact? . g$11708$14xsgv)
        (inexact . g$11707$14xsgv)
        (imag-part . g$11706$14xsgv)
        (gcd . g$11705$14xsgv)
        (for-each . g$11704$14xsgv)
        (floor . g$11703$14xsgv)
        (finite? . g$11702$14xsgv)
        (expt . g$11701$14xsgv)
        (exp . g$11700$14xsgv)
        (exact? . g$11699$14xsgv)
        (exact-integer-sqrt . g$11698$14xsgv)
        (exact . g$11697$14xsgv)
        (even? . g$11696$14xsgv)
        (error . g$11695$14xsgv)
        (eqv? . g$11694$14xsgv)
        (equal? . g$11693$14xsgv)
        (eq? . g$11692$14xsgv)
        (dynamic-wind . g$11691$14xsgv)
        (div0-and-mod0 . g$11690$14xsgv)
        (mod0 . g$11689$14xsgv)
        (div0 . g$11688$14xsgv)
        (div-and-mod . g$11687$14xsgv)
        (mod . g$11686$14xsgv)
        (div . g$11685$14xsgv)
        (denominator . g$11684$14xsgv)
        (cos . g$11683$14xsgv)
        (cons . g$11682$14xsgv)
        (complex? . g$11681$14xsgv)
        (char? . g$11680$14xsgv)
        (char>? . g$11679$14xsgv)
        (char>=? . g$11678$14xsgv)
        (char=? . g$11677$14xsgv)
        (char<? . g$11676$14xsgv)
        (char<=? . g$11675$14xsgv)
        (char->integer . g$11674$14xsgv)
        (ceiling . g$11673$14xsgv)
        (call-with-values . g$11672$14xsgv)
        (call/cc . g$11671$14xsgv)
        (call-with-current-continuation . g$11670$14xsgv)
        (cddddr . g$5785$14xsgv)
        (cdddar . g$5784$14xsgv)
        (cddadr . g$5783$14xsgv)
        (cddaar . g$5782$14xsgv)
        (cdaddr . g$5781$14xsgv)
        (cdadar . g$5780$14xsgv)
        (cdaadr . g$5779$14xsgv)
        (cdaaar . g$5778$14xsgv)
        (cadddr . g$5777$14xsgv)
        (caddar . g$5776$14xsgv)
        (cadadr . g$5775$14xsgv)
        (cadaar . g$5774$14xsgv)
        (caaddr . g$5773$14xsgv)
        (caadar . g$5772$14xsgv)
        (caaadr . g$5771$14xsgv)
        (caaaar . g$5770$14xsgv)
        (cdddr . g$5769$14xsgv)
        (cddar . g$5768$14xsgv)
        (cdadr . g$5767$14xsgv)
        (cdaar . g$5766$14xsgv)
        (caddr . g$5765$14xsgv)
        (cadar . g$5764$14xsgv)
        (caadr . g$5763$14xsgv)
        (caaar . g$5762$14xsgv)
        (cddr . g$5761$14xsgv)
        (cdar . g$5760$14xsgv)
        (cadr . g$5759$14xsgv)
        (caar . g$5758$14xsgv)
        (cdr . g$11669$14xsgv)
        (car . g$11668$14xsgv)
        (boolean? . g$11667$14xsgv)
        (boolean=? . g$11666$14xsgv)
        (atan . g$11665$14xsgv)
        (assertion-violation . g$11664$14xsgv)
        (asin . g$11663$14xsgv)
        (apply . g$11662$14xsgv)
        (append . g$11661$14xsgv)
        (angle . g$11660$14xsgv)
        (acos . g$11659$14xsgv)
        (abs . g$11658$14xsgv)
        (/ . g$11657$14xsgv)
        (* . g$11656$14xsgv)
        (- . g$11655$14xsgv)
        (+ . g$11654$14xsgv)
        (>= . g$11653$14xsgv)
        (> . g$11652$14xsgv)
        (= . g$11651$14xsgv)
        (<= . g$11650$14xsgv)
        (< . g$11649$14xsgv)
        (unquote-splicing . g$11570$14xsgv)
        (unquote . g$11569$14xsgv)
        (_ . g$11568$14xsgv)
        (else . g$11567$14xsgv)
        (=> . g$11566$14xsgv)
        (... . g$11565$14xsgv)
        (assert . g$11564$14xsgv)
        (or . g$11560$14xsgv)
        (and . g$11559$14xsgv)
        (cond . g$11557$14xsgv)
        (let* . g$11556$14xsgv)
        (let . g$11555$14xsgv)
        (identifier-syntax . g$11554$14xsgv)
        (quasiquote . g$11551$14xsgv)
        (syntax-rules . g$11550$14xsgv)
        (let-values . g$11546$14xsgv)
        (let*-values . g$11545$14xsgv)
        (case . g$11541$14xsgv)
        (if . g$11537$14xsgv)
        (letrec* . g$11536$14xsgv)
        (letrec . g$11535$14xsgv)
        (lambda . g$11532$14xsgv)
        (quote . g$11529$14xsgv)
        (letrec-syntax . g$11527$14xsgv)
        (let-syntax . g$11526$14xsgv)
        (set! . g$11525$14xsgv)
        (begin . g$11522$14xsgv)
        (define-syntax . g$11520$14xsgv)
        (define . g$11519$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12178$14xsgv
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6250$14xsgv)
        (remv . g$6251$14xsgv)
        (remp . g$6236$14xsgv)
        (remq . g$6252$14xsgv)
        (partition . g$6235$14xsgv)
        (memv . g$11917$14xsgv)
        (memq . g$11916$14xsgv)
        (memp . g$6242$14xsgv)
        (member . g$6241$14xsgv)
        (exists . g$6246$14xsgv)
        (for-all . g$6245$14xsgv)
        (fold-right . g$6249$14xsgv)
        (fold-left . g$6248$14xsgv)
        (find . g$6234$14xsgv)
        (filter . g$6237$14xsgv)
        (cons* . g$6247$14xsgv)
        (assv . g$6238$14xsgv)
        (assq . g$11915$14xsgv)
        (assp . g$6240$14xsgv)
        (assoc . g$6239$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12179$14xsgv
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7095$14xsgv)
        (call-with-input-file . g$7094$14xsgv)
        (write-char . g$12003$14xsgv)
        (write . g$12002$14xsgv)
        (with-output-to-file . g$7093$14xsgv)
        (with-input-from-file . g$7092$14xsgv)
        (read-char . g$12001$14xsgv)
        (read . g$12000$14xsgv)
        (peek-char . g$11999$14xsgv)
        (open-output-file . g$11998$14xsgv)
        (open-input-file . g$11997$14xsgv)
        (newline . g$11996$14xsgv)
        (display . g$11995$14xsgv)
        (close-output-port . g$11994$14xsgv)
        (close-input-port . g$11993$14xsgv)
        (eof-object? . g$11992$14xsgv)
        (eof-object . g$11991$14xsgv)
        (current-error-port . g$11990$14xsgv)
        (current-output-port . g$11989$14xsgv)
        (current-input-port . g$11988$14xsgv)
        (output-port? . g$11987$14xsgv)
        (input-port? . g$11986$14xsgv)
        (make-i/o-write-error . g$6927$14xsgv)
        (make-i/o-read-error . g$6913$14xsgv)
        (make-i/o-port-error . g$7032$14xsgv)
        (make-i/o-invalid-position-error . g$6942$14xsgv)
        (make-i/o-filename-error . g$6959$14xsgv)
        (make-i/o-file-protection-error . g$6975$14xsgv)
        (make-i/o-file-is-read-only-error . g$6989$14xsgv)
        (make-i/o-file-does-not-exist-error . g$7017$14xsgv)
        (make-i/o-file-already-exists-error . g$7003$14xsgv)
        (make-i/o-error . g$6899$14xsgv)
        (i/o-write-error? . g$6928$14xsgv)
        (i/o-read-error? . g$6914$14xsgv)
        (i/o-port-error? . g$7034$14xsgv)
        (i/o-invalid-position-error? . g$6944$14xsgv)
        (i/o-error-position . g$6945$14xsgv)
        (i/o-filename-error? . g$6961$14xsgv)
        (i/o-file-protection-error? . g$6976$14xsgv)
        (i/o-file-is-read-only-error? . g$6990$14xsgv)
        (i/o-file-does-not-exist-error? . g$7018$14xsgv)
        (i/o-file-already-exists-error? . g$7004$14xsgv)
        (i/o-error? . g$6900$14xsgv)
        (i/o-error-port . g$7035$14xsgv)
        (i/o-error-filename . g$6962$14xsgv)
        (&i/o-port . g$11619$14xsgv)
        (&i/o-file-does-not-exist . g$11618$14xsgv)
        (&i/o-file-already-exists . g$11617$14xsgv)
        (&i/o-file-is-read-only . g$11616$14xsgv)
        (&i/o-file-protection . g$11615$14xsgv)
        (&i/o-filename . g$11614$14xsgv)
        (&i/o-invalid-position . g$11613$14xsgv)
        (&i/o-write . g$11612$14xsgv)
        (&i/o-read . g$11611$14xsgv)
        (&i/o . g$11610$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12180$14xsgv
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$11946$14xsgv)
        (utf32->string . g$11906$14xsgv)
        (utf16->string . g$11905$14xsgv)
        (utf8->string . g$11904$14xsgv)
        (uint-list->bytevector . g$11903$14xsgv)
        (u8-list->bytevector . g$11902$14xsgv)
        (string->utf8 . g$11901$14xsgv)
        (string->utf32 . g$11900$14xsgv)
        (string->utf16 . g$11899$14xsgv)
        (sint-list->bytevector . g$11898$14xsgv)
        (native-endianness . g$6326$14xsgv)
        (bytevector? . g$11897$14xsgv)
        (bytevector=? . g$11896$14xsgv)
        (bytevector-uint-set! . g$11895$14xsgv)
        (bytevector-uint-ref . g$11894$14xsgv)
        (bytevector-u8-set! . g$11893$14xsgv)
        (bytevector-u8-ref . g$11892$14xsgv)
        (bytevector-u64-set! . g$6347$14xsgv)
        (bytevector-u64-ref . g$6343$14xsgv)
        (bytevector-u64-native-set! . g$6349$14xsgv)
        (bytevector-u64-native-ref . g$6345$14xsgv)
        (bytevector-u32-set! . g$6339$14xsgv)
        (bytevector-u32-ref . g$6335$14xsgv)
        (bytevector-u32-native-set! . g$6341$14xsgv)
        (bytevector-u32-native-ref . g$6337$14xsgv)
        (bytevector-u16-set! . g$6331$14xsgv)
        (bytevector-u16-ref . g$6327$14xsgv)
        (bytevector-u16-native-set! . g$6333$14xsgv)
        (bytevector-u16-native-ref . g$6329$14xsgv)
        (bytevector-sint-set! . g$11891$14xsgv)
        (bytevector-sint-ref . g$11890$14xsgv)
        (bytevector-s8-set! . g$11889$14xsgv)
        (bytevector-s8-ref . g$11888$14xsgv)
        (bytevector-s64-set! . g$6348$14xsgv)
        (bytevector-s64-ref . g$6344$14xsgv)
        (bytevector-s64-native-set! . g$6350$14xsgv)
        (bytevector-s64-native-ref . g$6346$14xsgv)
        (bytevector-s32-set! . g$6340$14xsgv)
        (bytevector-s32-ref . g$6336$14xsgv)
        (bytevector-s32-native-set! . g$6342$14xsgv)
        (bytevector-s32-native-ref . g$6338$14xsgv)
        (bytevector-s16-set! . g$6332$14xsgv)
        (bytevector-s16-ref . g$6328$14xsgv)
        (bytevector-s16-native-set! . g$6334$14xsgv)
        (bytevector-s16-native-ref . g$6330$14xsgv)
        (bytevector-length . g$11887$14xsgv)
        (bytevector-ieee-single-set! . g$11886$14xsgv)
        (bytevector-ieee-single-ref . g$11885$14xsgv)
        (bytevector-ieee-single-native-set! . g$6353$14xsgv)
        (bytevector-ieee-single-native-ref . g$6351$14xsgv)
        (bytevector-ieee-double-set! . g$11884$14xsgv)
        (bytevector-ieee-double-ref . g$11883$14xsgv)
        (bytevector-ieee-double-native-set! . g$6354$14xsgv)
        (bytevector-ieee-double-native-ref . g$6352$14xsgv)
        (bytevector-fill! . g$11882$14xsgv)
        (bytevector-copy! . g$11881$14xsgv)
        (bytevector-copy . g$11880$14xsgv)
        (bytevector->uint-list . g$11879$14xsgv)
        (bytevector->u8-list . g$11878$14xsgv)
        (bytevector->sint-list . g$11877$14xsgv)
        (endianness . g$11563$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12181$14xsgv
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12063$14xsgv)
        (string-titlecase . g$12062$14xsgv)
        (string-normalize-nfkd . g$12061$14xsgv)
        (string-normalize-nfkc . g$12060$14xsgv)
        (string-normalize-nfd . g$12059$14xsgv)
        (string-normalize-nfc . g$12058$14xsgv)
        (string-foldcase . g$12057$14xsgv)
        (string-downcase . g$12056$14xsgv)
        (string-ci>? . g$12055$14xsgv)
        (string-ci>=? . g$12054$14xsgv)
        (string-ci=? . g$12053$14xsgv)
        (string-ci<? . g$12052$14xsgv)
        (string-ci<=? . g$12051$14xsgv)
        (char-whitespace? . g$12050$14xsgv)
        (char-upper-case? . g$12049$14xsgv)
        (char-title-case? . g$12048$14xsgv)
        (char-numeric? . g$12047$14xsgv)
        (char-lower-case? . g$12046$14xsgv)
        (char-general-category . g$12045$14xsgv)
        (char-upcase . g$12044$14xsgv)
        (char-titlecase . g$12043$14xsgv)
        (char-foldcase . g$12042$14xsgv)
        (char-downcase . g$12041$14xsgv)
        (char-ci>? . g$12040$14xsgv)
        (char-ci>=? . g$12039$14xsgv)
        (char-ci=? . g$12038$14xsgv)
        (char-ci<? . g$12037$14xsgv)
        (char-ci<=? . g$12036$14xsgv)
        (char-alphabetic? . g$12035$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12182$14xsgv
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$11914$14xsgv)
        (raise-continuable . g$11913$14xsgv)
        (raise . g$11912$14xsgv)
        (guard . g$11578$14xsgv)
        (else . g$11567$14xsgv)
        (=> . g$11566$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12183$14xsgv
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$6768$14xsgv)
        (bitwise-reverse-bit-field . g$11792$14xsgv)
        (bitwise-length . g$11791$14xsgv)
        (bitwise-if . g$6762$14xsgv)
        (bitwise-first-bit-set . g$11790$14xsgv)
        (bitwise-copy-bit-field . g$6765$14xsgv)
        (bitwise-copy-bit . g$6763$14xsgv)
        (bitwise-bit-set? . g$11789$14xsgv)
        (bitwise-bit-field . g$11788$14xsgv)
        (bitwise-bit-count . g$11787$14xsgv)
        (bitwise-xor . g$11786$14xsgv)
        (bitwise-ior . g$11785$14xsgv)
        (bitwise-and . g$11784$14xsgv)
        (bitwise-not . g$11783$14xsgv)
        (bitwise-arithmetic-shift-right . g$6767$14xsgv)
        (bitwise-arithmetic-shift-left . g$6766$14xsgv)
        (bitwise-arithmetic-shift . g$11782$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12184$14xsgv
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$11830$14xsgv)
        (fxxor . g$11829$14xsgv)
        (fxrotate-bit-field . g$6816$14xsgv)
        (fxreverse-bit-field . g$11828$14xsgv)
        (fxpositive? . g$11827$14xsgv)
        (fxodd? . g$11826$14xsgv)
        (fxnot . g$11825$14xsgv)
        (fxnegative? . g$11824$14xsgv)
        (fxmod0 . g$11823$14xsgv)
        (fxmod . g$11822$14xsgv)
        (fxmin . g$11821$14xsgv)
        (fxmax . g$11820$14xsgv)
        (fxlength . g$11819$14xsgv)
        (fxior . g$11818$14xsgv)
        (fxif . g$6810$14xsgv)
        (fxfirst-bit-set . g$11817$14xsgv)
        (fxeven? . g$11816$14xsgv)
        (fxdiv0-and-mod0 . g$11815$14xsgv)
        (fxdiv0 . g$11814$14xsgv)
        (fxdiv-and-mod . g$11813$14xsgv)
        (fxdiv . g$11812$14xsgv)
        (fxcopy-bit-field . g$6813$14xsgv)
        (fxcopy-bit . g$6811$14xsgv)
        (fxbit-set? . g$11811$14xsgv)
        (fxbit-field . g$6812$14xsgv)
        (fxbit-count . g$11810$14xsgv)
        (fxarithmetic-shift-right . g$6815$14xsgv)
        (fxarithmetic-shift-left . g$6814$14xsgv)
        (fxarithmetic-shift . g$11809$14xsgv)
        (fxand . g$11808$14xsgv)
        (fx>? . g$11807$14xsgv)
        (fx>=? . g$11806$14xsgv)
        (fx=? . g$11805$14xsgv)
        (fx<? . g$11804$14xsgv)
        (fx<=? . g$11803$14xsgv)
        (fx-/carry . g$11802$14xsgv)
        (fx- . g$11801$14xsgv)
        (fx+/carry . g$11800$14xsgv)
        (fx+ . g$11799$14xsgv)
        (fx*/carry . g$11798$14xsgv)
        (fx* . g$11797$14xsgv)
        (greatest-fixnum . g$11796$14xsgv)
        (least-fixnum . g$11795$14xsgv)
        (fixnum-width . g$11794$14xsgv)
        (fixnum? . g$11793$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12185$14xsgv
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6885$14xsgv)
        (no-infinities-violation? . g$6871$14xsgv)
        (make-no-nans-violation . g$6884$14xsgv)
        (make-no-infinities-violation . g$6870$14xsgv)
        (real->flonum . g$11876$14xsgv)
        (flzero? . g$11875$14xsgv)
        (fltruncate . g$11874$14xsgv)
        (fltan . g$11873$14xsgv)
        (flsqrt . g$11872$14xsgv)
        (flsin . g$11871$14xsgv)
        (flround . g$11870$14xsgv)
        (flpositive? . g$11869$14xsgv)
        (flonum? . g$11868$14xsgv)
        (flodd? . g$11867$14xsgv)
        (flnumerator . g$11866$14xsgv)
        (flnegative? . g$11865$14xsgv)
        (flnan? . g$11864$14xsgv)
        (flmod0 . g$11863$14xsgv)
        (flmod . g$11862$14xsgv)
        (flmin . g$11861$14xsgv)
        (flmax . g$11860$14xsgv)
        (fllog . g$11859$14xsgv)
        (flinteger? . g$11858$14xsgv)
        (flinfinite? . g$11857$14xsgv)
        (flfloor . g$11856$14xsgv)
        (flfinite? . g$11855$14xsgv)
        (flexpt . g$11854$14xsgv)
        (flexp . g$11853$14xsgv)
        (fleven? . g$11852$14xsgv)
        (fldiv0-and-mod0 . g$11851$14xsgv)
        (fldiv0 . g$11850$14xsgv)
        (fldiv-and-mod . g$11849$14xsgv)
        (fldiv . g$11848$14xsgv)
        (fldenominator . g$11847$14xsgv)
        (flcos . g$11846$14xsgv)
        (flceiling . g$11845$14xsgv)
        (flatan . g$11844$14xsgv)
        (flasin . g$11843$14xsgv)
        (flacos . g$11842$14xsgv)
        (flabs . g$11841$14xsgv)
        (fl>? . g$11840$14xsgv)
        (fl>=? . g$11839$14xsgv)
        (fl=? . g$11838$14xsgv)
        (fl<? . g$11837$14xsgv)
        (fl<=? . g$11836$14xsgv)
        (fl/ . g$11835$14xsgv)
        (fl- . g$11834$14xsgv)
        (fl+ . g$11833$14xsgv)
        (fl* . g$11832$14xsgv)
        (fixnum->flonum . g$11831$14xsgv)
        (&no-nans . g$11623$14xsgv)
        (&no-infinities . g$11622$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12186$14xsgv
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12015$14xsgv)
        (string-ci-hash . g$12014$14xsgv)
        (string-hash . g$12013$14xsgv)
        (equal-hash . g$12012$14xsgv)
        (hashtable-equivalence-function . g$12011$14xsgv)
        (make-hashtable . g$12010$14xsgv)
        (hashtable-hash-function . g$12009$14xsgv)
        (make-eqv-hashtable . g$6137$14xsgv)
        (make-eq-hashtable . g$6136$14xsgv)
        (hashtable? . g$12008$14xsgv)
        (hashtable-update! . g$6143$14xsgv)
        (hashtable-size . g$6138$14xsgv)
        (hashtable-set! . g$6140$14xsgv)
        (hashtable-ref . g$6139$14xsgv)
        (hashtable-mutable? . g$12007$14xsgv)
        (hashtable-keys . g$12006$14xsgv)
        (hashtable-entries . g$12005$14xsgv)
        (hashtable-delete! . g$6141$14xsgv)
        (hashtable-copy . g$12004$14xsgv)
        (hashtable-contains? . g$6142$14xsgv)
        (hashtable-clear! . g$6144$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12187$14xsgv
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$11992$14xsgv)
        (eof-object . g$11991$14xsgv)
        (current-error-port . g$11990$14xsgv)
        (current-output-port . g$11989$14xsgv)
        (current-input-port . g$11988$14xsgv)
        (output-port? . g$11987$14xsgv)
        (input-port? . g$11986$14xsgv)
        (utf-8-codec . g$11985$14xsgv)
        (utf-16-codec . g$11984$14xsgv)
        (transcoder-error-handling-mode . g$11983$14xsgv)
        (transcoder-eol-style . g$11982$14xsgv)
        (transcoder-codec . g$11981$14xsgv)
        (transcoded-port . g$11980$14xsgv)
        (textual-port? . g$11979$14xsgv)
        (string->bytevector . g$11978$14xsgv)
        (standard-output-port . g$11977$14xsgv)
        (standard-input-port . g$11976$14xsgv)
        (standard-error-port . g$11975$14xsgv)
        (set-port-position! . g$11974$14xsgv)
        (put-u8 . g$11973$14xsgv)
        (put-string . g$11972$14xsgv)
        (put-datum . g$11971$14xsgv)
        (put-char . g$11970$14xsgv)
        (put-bytevector . g$11969$14xsgv)
        (port? . g$7071$14xsgv)
        (port-transcoder . g$11968$14xsgv)
        (port-position . g$11967$14xsgv)
        (port-has-set-port-position!? . g$11966$14xsgv)
        (port-has-port-position? . g$11965$14xsgv)
        (port-eof? . g$11964$14xsgv)
        (output-port-buffer-mode . g$11963$14xsgv)
        (open-string-output-port . g$7070$14xsgv)
        (open-string-input-port . g$11962$14xsgv)
        (open-file-output-port . g$11961$14xsgv)
        (open-file-input/output-port . g$11960$14xsgv)
        (open-file-input-port . g$11959$14xsgv)
        (open-bytevector-output-port . g$11958$14xsgv)
        (open-bytevector-input-port . g$11957$14xsgv)
        (native-transcoder . g$11956$14xsgv)
        (native-eol-style . g$11955$14xsgv)
        (make-transcoder . g$11954$14xsgv)
        (latin-1-codec . g$11953$14xsgv)
        (make-i/o-write-error . g$6927$14xsgv)
        (make-i/o-read-error . g$6913$14xsgv)
        (make-i/o-port-error . g$7032$14xsgv)
        (make-i/o-invalid-position-error . g$6942$14xsgv)
        (make-i/o-filename-error . g$6959$14xsgv)
        (make-i/o-file-protection-error . g$6975$14xsgv)
        (make-i/o-file-is-read-only-error . g$6989$14xsgv)
        (make-i/o-file-does-not-exist-error . g$7017$14xsgv)
        (make-i/o-file-already-exists-error . g$7003$14xsgv)
        (make-i/o-error . g$6899$14xsgv)
        (make-i/o-encoding-error . g$7063$14xsgv)
        (make-i/o-decoding-error . g$7048$14xsgv)
        (make-custom-textual-output-port . g$11952$14xsgv)
        (make-custom-textual-input/output-port . g$11951$14xsgv)
        (make-custom-textual-input-port . g$11950$14xsgv)
        (make-custom-binary-output-port . g$11949$14xsgv)
        (make-custom-binary-input/output-port . g$11948$14xsgv)
        (make-custom-binary-input-port . g$11947$14xsgv)
        (lookahead-u8 . g$11945$14xsgv)
        (lookahead-char . g$11944$14xsgv)
        (i/o-write-error? . g$6928$14xsgv)
        (i/o-read-error? . g$6914$14xsgv)
        (i/o-port-error? . g$7034$14xsgv)
        (i/o-invalid-position-error? . g$6944$14xsgv)
        (i/o-error-position . g$6945$14xsgv)
        (i/o-filename-error? . g$6961$14xsgv)
        (i/o-file-protection-error? . g$6976$14xsgv)
        (i/o-file-is-read-only-error? . g$6990$14xsgv)
        (i/o-file-does-not-exist-error? . g$7018$14xsgv)
        (i/o-file-already-exists-error? . g$7004$14xsgv)
        (i/o-error? . g$6900$14xsgv)
        (i/o-error-port . g$7035$14xsgv)
        (i/o-error-filename . g$6962$14xsgv)
        (i/o-encoding-error? . g$7065$14xsgv)
        (i/o-encoding-error-char . g$7066$14xsgv)
        (i/o-decoding-error? . g$7049$14xsgv)
        (get-u8 . g$11943$14xsgv)
        (get-string-n! . g$11942$14xsgv)
        (get-string-n . g$11941$14xsgv)
        (get-string-all . g$11940$14xsgv)
        (get-line . g$11939$14xsgv)
        (get-datum . g$11938$14xsgv)
        (get-char . g$11937$14xsgv)
        (get-bytevector-some . g$11936$14xsgv)
        (get-bytevector-n! . g$11935$14xsgv)
        (get-bytevector-n . g$11934$14xsgv)
        (get-bytevector-all . g$11933$14xsgv)
        (flush-output-port . g$11932$14xsgv)
        (close-port . g$11931$14xsgv)
        (call-with-string-output-port . g$11930$14xsgv)
        (call-with-port . g$11929$14xsgv)
        (call-with-bytevector-output-port . g$11928$14xsgv)
        (bytevector->string . g$11927$14xsgv)
        (buffer-mode? . g$11926$14xsgv)
        (binary-port? . g$11925$14xsgv)
        (&i/o-encoding . g$11621$14xsgv)
        (&i/o-decoding . g$11620$14xsgv)
        (&i/o-port . g$11619$14xsgv)
        (&i/o-file-does-not-exist . g$11618$14xsgv)
        (&i/o-file-already-exists . g$11617$14xsgv)
        (&i/o-file-is-read-only . g$11616$14xsgv)
        (&i/o-file-protection . g$11615$14xsgv)
        (&i/o-filename . g$11614$14xsgv)
        (&i/o-invalid-position . g$11613$14xsgv)
        (&i/o-write . g$11612$14xsgv)
        (&i/o-read . g$11611$14xsgv)
        (&i/o . g$11610$14xsgv)
        (error-handling-mode . g$11582$14xsgv)
        (file-options . g$11581$14xsgv)
        (buffer-mode . g$11580$14xsgv)
        (eol-style . g$11579$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12188$14xsgv
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7152$14xsgv)
        (enum-set=? . g$7159$14xsgv)
        (enum-set-universe . g$7153$14xsgv)
        (enum-set-union . g$7160$14xsgv)
        (enum-set-subset? . g$7158$14xsgv)
        (enum-set-projection . g$7164$14xsgv)
        (enum-set-member? . g$7157$14xsgv)
        (enum-set-intersection . g$7161$14xsgv)
        (enum-set-indexer . g$7154$14xsgv)
        (enum-set-difference . g$7162$14xsgv)
        (enum-set-constructor . g$7155$14xsgv)
        (enum-set-complement . g$7163$14xsgv)
        (enum-set->list . g$7156$14xsgv)
        (define-enumeration . g$11593$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12189$14xsgv
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6574$14xsgv)
        (warning? . g$6485$14xsgv)
        (violation? . g$6527$14xsgv)
        (undefined-violation? . g$6651$14xsgv)
        (syntax-violation? . g$6635$14xsgv)
        (syntax-violation-subform . g$6637$14xsgv)
        (syntax-violation-form . g$6636$14xsgv)
        (syntax-violation . g$8549$14xsgv)
        (simple-conditions . g$11911$14xsgv)
        (serious-condition? . g$6499$14xsgv)
        (non-continuable-violation? . g$6589$14xsgv)
        (message-condition? . g$6470$14xsgv)
        (make-who-condition . g$6572$14xsgv)
        (make-warning . g$6484$14xsgv)
        (make-violation . g$6526$14xsgv)
        (make-undefined-violation . g$6650$14xsgv)
        (make-syntax-violation . g$6632$14xsgv)
        (make-serious-condition . g$6498$14xsgv)
        (make-non-continuable-violation . g$6588$14xsgv)
        (make-message-condition . g$6468$14xsgv)
        (make-lexical-violation . g$6616$14xsgv)
        (make-irritants-condition . g$6555$14xsgv)
        (make-implementation-restriction-violation . g$6602$14xsgv)
        (make-error . g$6512$14xsgv)
        (make-assertion-violation . g$6540$14xsgv)
        (lexical-violation? . g$6617$14xsgv)
        (irritants-condition? . g$6557$14xsgv)
        (implementation-restriction-violation? . g$6603$14xsgv)
        (error? . g$6513$14xsgv)
        (condition-who . g$6575$14xsgv)
        (condition-predicate . g$11910$14xsgv)
        (condition-message . g$6471$14xsgv)
        (condition-irritants . g$6558$14xsgv)
        (condition-accessor . g$11909$14xsgv)
        (condition . g$11908$14xsgv)
        (assertion-violation? . g$6541$14xsgv)
        (condition? . g$11907$14xsgv)
        (&non-continuable . g$11609$14xsgv)
        (&undefined . g$11608$14xsgv)
        (&syntax . g$11607$14xsgv)
        (&lexical . g$11606$14xsgv)
        (&implementation-restriction . g$11605$14xsgv)
        (&who . g$11603$14xsgv)
        (&irritants . g$11602$14xsgv)
        (&assertion . g$11601$14xsgv)
        (&violation . g$11600$14xsgv)
        (&error . g$11599$14xsgv)
        (&serious . g$11598$14xsgv)
        (&warning . g$11597$14xsgv)
        (&message . g$11596$14xsgv)
        (&condition . g$11595$14xsgv)
        (define-condition-type . g$11594$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12190$14xsgv
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12027$14xsgv)
        (record-type-uid . g$12026$14xsgv)
        (record-type-sealed? . g$12025$14xsgv)
        (record-type-parent . g$12024$14xsgv)
        (record-type-opaque? . g$12023$14xsgv)
        (record-type-name . g$12022$14xsgv)
        (record-type-generative? . g$12021$14xsgv)
        (record-type-field-names . g$12020$14xsgv)
        (record-rtd . g$12019$14xsgv)
        (record-field-mutable? . g$12018$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12191$14xsgv
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12034$14xsgv)
        (record-predicate . g$12033$14xsgv)
        (record-mutator . g$12032$14xsgv)
        (record-constructor . g$12031$14xsgv)
        (record-accessor . g$12030$14xsgv)
        (make-record-type-descriptor . g$12029$14xsgv)
        (make-record-constructor-descriptor . g$12028$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12192$14xsgv
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11592$14xsgv)
        (parent-rtd . g$11591$14xsgv)
        (nongenerative . g$11590$14xsgv)
        (opaque . g$11589$14xsgv)
        (sealed . g$11588$14xsgv)
        (protocol . g$11587$14xsgv)
        (parent . g$11586$14xsgv)
        (immutable . g$11585$14xsgv)
        (mutable . g$11584$14xsgv)
        (fields . g$11583$14xsgv)
        (record-constructor-descriptor . g$11544$14xsgv)
        (record-type-descriptor . g$11543$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$6927$14xsgv
      'g$12193$14xsgv
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8424$14xsgv)
        (&no-nans-rcd . g$12157$14xsgv)
        (&no-nans-rtd . g$12156$14xsgv)
        (&no-infinities-rcd . g$12155$14xsgv)
        (&no-infinities-rtd . g$12154$14xsgv)
        (&i/o-encoding-rcd . g$12153$14xsgv)
        (&i/o-encoding-rtd . g$12152$14xsgv)
        (&i/o-decoding-rcd . g$12151$14xsgv)
        (&i/o-decoding-rtd . g$12150$14xsgv)
        (&i/o-port-rcd . g$12149$14xsgv)
        (&i/o-port-rtd . g$12148$14xsgv)
        (&i/o-file-does-not-exist-rcd . g$12147$14xsgv)
        (&i/o-file-does-not-exist-rtd . g$12146$14xsgv)
        (&i/o-file-already-exists-rcd . g$12145$14xsgv)
        (&i/o-file-already-exists-rtd . g$12144$14xsgv)
        (&i/o-file-is-read-only-rcd . g$12143$14xsgv)
        (&i/o-file-is-read-only-rtd . g$12142$14xsgv)
        (&i/o-file-protection-rcd . g$12141$14xsgv)
        (&i/o-file-protection-rtd . g$12140$14xsgv)
        (&i/o-filename-rcd . g$12139$14xsgv)
        (&i/o-filename-rtd . g$12138$14xsgv)
        (&i/o-invalid-position-rcd . g$12137$14xsgv)
        (&i/o-invalid-position-rtd . g$12136$14xsgv)
        (&i/o-write-rcd . g$12135$14xsgv)
        (&i/o-write-rtd . g$12134$14xsgv)
        (&i/o-read-rcd . g$12133$14xsgv)
        (&i/o-read-rtd . g$12132$14xsgv)
        (&i/o-rcd . g$12131$14xsgv)
        (&i/o-rtd . g$12130$14xsgv)
        (&undefined-rcd . g$12129$14xsgv)
        (&undefined-rtd . g$12128$14xsgv)
        (&syntax-rcd . g$12127$14xsgv)
        (&syntax-rtd . g$12126$14xsgv)
        (&lexical-rcd . g$12125$14xsgv)
        (&lexical-rtd . g$12124$14xsgv)
        (&implementation-restriction-rcd . g$12123$14xsgv)
        (&implementation-restriction-rtd . g$12122$14xsgv)
        (&non-continuable-rcd . g$12121$14xsgv)
        (&non-continuable-rtd . g$12120$14xsgv)
        (&who-rcd . g$12119$14xsgv)
        (&who-rtd . g$12118$14xsgv)
        (&irritants-rcd . g$12117$14xsgv)
        (&irritants-rtd . g$12116$14xsgv)
        (&assertion-rcd . g$12115$14xsgv)
        (&assertion-rtd . g$12114$14xsgv)
        (&violation-rcd . g$12113$14xsgv)
        (&violation-rtd . g$12112$14xsgv)
        (&error-rcd . g$12111$14xsgv)
        (&error-rtd . g$12110$14xsgv)
        (&serious-rcd . g$12109$14xsgv)
        (&serious-rtd . g$12108$14xsgv)
        (&warning-rcd . g$12107$14xsgv)
        (&warning-rtd . g$12106$14xsgv)
        (&message-rcd . g$12105$14xsgv)
        (&message-rtd . g$12104$14xsgv)
        (&condition-rcd . g$12103$14xsgv)
        (&condition-rtd . g$12102$14xsgv)
        (library-letrec* . g$12101$14xsgv)
        (annotation-stripped . g$12100$14xsgv)
        (annotation-source . g$12099$14xsgv)
        (annotation-expression . g$12098$14xsgv)
        (annotation? . g$12097$14xsgv)
        (read-annotated . g$12096$14xsgv)
        (tanh . g$12095$14xsgv)
        (cosh . g$12094$14xsgv)
        (sinh . g$12093$14xsgv)
        (make-guid . g$12092$14xsgv)
        (unspecified? . g$12091$14xsgv)
        (make-trace . g$12090$14xsgv)
        (make-list . g$12089$14xsgv)
        (last-pair . g$12088$14xsgv)
        (load-r5rs . g$12087$14xsgv)
        (license . g$12086$14xsgv)
        (stacktrace . g$12085$14xsgv)
        (ironscheme-build . g$11487$14xsgv)
        (define-clr-class-internal . g$12084$14xsgv)
        (clr-field-set!-internal . g$12083$14xsgv)
        (clr-field-get-internal . g$12082$14xsgv)
        (clr-cast-internal . g$12081$14xsgv)
        (clr-call-internal . g$12080$14xsgv)
        (clr-new-internal . g$12079$14xsgv)
        (clr-new-array-internal . g$12078$14xsgv)
        (clr-is-internal . g$12077$14xsgv)
        (clr-reference-internal . g$12076$14xsgv)
        (clr-using-internal . g$12075$14xsgv)
        (clr-clear-usings-internal . g$12074$14xsgv)
        (syntax-error . g$8546$14xsgv)
        (syntax-dispatch . g$8419$14xsgv)
        (compile-core . g$12073$14xsgv)
        (eval-core . g$12072$14xsgv)
        (set-symbol-value! . g$12071$14xsgv)
        (symbol-value . g$12070$14xsgv)
        (ungensym . g$12069$14xsgv)
        (gensym . g$12068$14xsgv)
        (void . g$12067$14xsgv)
        (load-serialized-library . g$12066$14xsgv)
        (serialize-library . g$12065$14xsgv)
        (compile-system-libraries . g$11489$14xsgv)
        (compile->closure . g$11491$14xsgv)
        (compile . g$11490$14xsgv)
        (load . g$11486$14xsgv)
        (interaction-environment . g$8555$14xsgv)
        (char-ready? . g$12064$14xsgv)
        (string-upcase . g$12063$14xsgv)
        (string-titlecase . g$12062$14xsgv)
        (string-normalize-nfkd . g$12061$14xsgv)
        (string-normalize-nfkc . g$12060$14xsgv)
        (string-normalize-nfd . g$12059$14xsgv)
        (string-normalize-nfc . g$12058$14xsgv)
        (string-foldcase . g$12057$14xsgv)
        (string-downcase . g$12056$14xsgv)
        (string-ci>? . g$12055$14xsgv)
        (string-ci>=? . g$12054$14xsgv)
        (string-ci=? . g$12053$14xsgv)
        (string-ci<? . g$12052$14xsgv)
        (string-ci<=? . g$12051$14xsgv)
        (char-whitespace? . g$12050$14xsgv)
        (char-upper-case? . g$12049$14xsgv)
        (char-title-case? . g$12048$14xsgv)
        (char-numeric? . g$12047$14xsgv)
        (char-lower-case? . g$12046$14xsgv)
        (char-general-category . g$12045$14xsgv)
        (char-upcase . g$12044$14xsgv)
        (char-titlecase . g$12043$14xsgv)
        (char-foldcase . g$12042$14xsgv)
        (char-downcase . g$12041$14xsgv)
        (char-ci>? . g$12040$14xsgv)
        (char-ci>=? . g$12039$14xsgv)
        (char-ci=? . g$12038$14xsgv)
        (char-ci<? . g$12037$14xsgv)
        (char-ci<=? . g$12036$14xsgv)
        (char-alphabetic? . g$12035$14xsgv)
        (variable-transformer-procedure . g$8156$14xsgv)
        (variable-transformer? . g$8155$14xsgv)
        (make-variable-transformer . g$8154$14xsgv)
        (identifier? . g$8550$14xsgv)
        (generate-temporaries . g$8539$14xsgv)
        (free-identifier=? . g$8540$14xsgv)
        (syntax->datum . g$8552$14xsgv)
        (datum->syntax . g$8551$14xsgv)
        (bound-identifier=? . g$8541$14xsgv)
        (record-type-descriptor? . g$12034$14xsgv)
        (record-predicate . g$12033$14xsgv)
        (record-mutator . g$12032$14xsgv)
        (record-constructor . g$12031$14xsgv)
        (record-accessor . g$12030$14xsgv)
        (make-record-type-descriptor . g$12029$14xsgv)
        (make-record-constructor-descriptor . g$12028$14xsgv)
        (record? . g$12027$14xsgv)
        (record-type-uid . g$12026$14xsgv)
        (record-type-sealed? . g$12025$14xsgv)
        (record-type-parent . g$12024$14xsgv)
        (record-type-opaque? . g$12023$14xsgv)
        (record-type-name . g$12022$14xsgv)
        (record-type-generative? . g$12021$14xsgv)
        (record-type-field-names . g$12020$14xsgv)
        (record-rtd . g$12019$14xsgv)
        (record-field-mutable? . g$12018$14xsgv)
        (delete-file . g$6170$14xsgv)
        (file-exists? . g$6169$14xsgv)
        (vector-sort! . g$12017$14xsgv)
        (vector-sort . g$12016$14xsgv)
        (list-sort . g$6683$14xsgv)
        (symbol-hash . g$12015$14xsgv)
        (string-ci-hash . g$12014$14xsgv)
        (string-hash . g$12013$14xsgv)
        (equal-hash . g$12012$14xsgv)
        (hashtable-equivalence-function . g$12011$14xsgv)
        (make-hashtable . g$12010$14xsgv)
        (hashtable-hash-function . g$12009$14xsgv)
        (make-eqv-hashtable . g$6137$14xsgv)
        (make-eq-hashtable . g$6136$14xsgv)
        (hashtable? . g$12008$14xsgv)
        (hashtable-update! . g$6143$14xsgv)
        (hashtable-size . g$6138$14xsgv)
        (hashtable-set! . g$6140$14xsgv)
        (hashtable-ref . g$6139$14xsgv)
        (hashtable-mutable? . g$12007$14xsgv)
        (hashtable-keys . g$12006$14xsgv)
        (hashtable-entries . g$12005$14xsgv)
        (hashtable-delete! . g$6141$14xsgv)
        (hashtable-copy . g$12004$14xsgv)
        (hashtable-contains? . g$6142$14xsgv)
        (hashtable-clear! . g$6144$14xsgv)
        (call-with-output-file . g$7095$14xsgv)
        (call-with-input-file . g$7094$14xsgv)
        (write-char . g$12003$14xsgv)
        (write . g$12002$14xsgv)
        (with-output-to-file . g$7093$14xsgv)
        (with-input-from-file . g$7092$14xsgv)
        (read-char . g$12001$14xsgv)
        (read . g$12000$14xsgv)
        (peek-char . g$11999$14xsgv)
        (open-output-file . g$11998$14xsgv)
        (open-input-file . g$11997$14xsgv)
        (newline . g$11996$14xsgv)
        (display . g$11995$14xsgv)
        (close-output-port . g$11994$14xsgv)
        (close-input-port . g$11993$14xsgv)
        (eof-object? . g$11992$14xsgv)
        (eof-object . g$11991$14xsgv)
        (current-error-port . g$11990$14xsgv)
        (current-output-port . g$11989$14xsgv)
        (current-input-port . g$11988$14xsgv)
        (output-port? . g$11987$14xsgv)
        (input-port? . g$11986$14xsgv)
        (utf-8-codec . g$11985$14xsgv)
        (utf-16-codec . g$11984$14xsgv)
        (transcoder-error-handling-mode . g$11983$14xsgv)
        (transcoder-eol-style . g$11982$14xsgv)
        (transcoder-codec . g$11981$14xsgv)
        (transcoded-port . g$11980$14xsgv)
        (textual-port? . g$11979$14xsgv)
        (string->bytevector . g$11978$14xsgv)
        (standard-output-port . g$11977$14xsgv)
        (standard-input-port . g$11976$14xsgv)
        (standard-error-port . g$11975$14xsgv)
        (set-port-position! . g$11974$14xsgv)
        (put-u8 . g$11973$14xsgv)
        (put-string . g$11972$14xsgv)
        (put-datum . g$11971$14xsgv)
        (put-char . g$11970$14xsgv)
        (put-bytevector . g$11969$14xsgv)
        (port? . g$7071$14xsgv)
        (port-transcoder . g$11968$14xsgv)
        (port-position . g$11967$14xsgv)
        (port-has-set-port-position!? . g$11966$14xsgv)
        (port-has-port-position? . g$11965$14xsgv)
        (port-eof? . g$11964$14xsgv)
        (output-port-buffer-mode . g$11963$14xsgv)
        (open-string-output-port . g$7070$14xsgv)
        (open-string-input-port . g$11962$14xsgv)
        (open-file-output-port . g$11961$14xsgv)
        (open-file-input/output-port . g$11960$14xsgv)
        (open-file-input-port . g$11959$14xsgv)
        (open-bytevector-output-port . g$11958$14xsgv)
        (open-bytevector-input-port . g$11957$14xsgv)
        (native-transcoder . g$11956$14xsgv)
        (native-eol-style . g$11955$14xsgv)
        (make-transcoder . g$11954$14xsgv)
        (latin-1-codec . g$11953$14xsgv)
        (make-i/o-write-error . g$6927$14xsgv)
        (make-i/o-read-error . g$6913$14xsgv)
        (make-i/o-port-error . g$7032$14xsgv)
        (make-i/o-invalid-position-error . g$6942$14xsgv)
        (make-i/o-filename-error . g$6959$14xsgv)
        (make-i/o-file-protection-error . g$6975$14xsgv)
        (make-i/o-file-is-read-only-error . g$6989$14xsgv)
        (make-i/o-file-does-not-exist-error . g$7017$14xsgv)
        (make-i/o-file-already-exists-error . g$7003$14xsgv)
        (make-i/o-error . g$6899$14xsgv)
        (make-i/o-encoding-error . g$7063$14xsgv)
        (make-i/o-decoding-error . g$7048$14xsgv)
        (make-custom-textual-output-port . g$11952$14xsgv)
        (make-custom-textual-input/output-port . g$11951$14xsgv)
        (make-custom-textual-input-port . g$11950$14xsgv)
        (make-custom-binary-output-port . g$11949$14xsgv)
        (make-custom-binary-input/output-port . g$11948$14xsgv)
        (make-custom-binary-input-port . g$11947$14xsgv)
        (make-bytevector . g$11946$14xsgv)
        (lookahead-u8 . g$11945$14xsgv)
        (lookahead-char . g$11944$14xsgv)
        (i/o-write-error? . g$6928$14xsgv)
        (i/o-read-error? . g$6914$14xsgv)
        (i/o-port-error? . g$7034$14xsgv)
        (i/o-invalid-position-error? . g$6944$14xsgv)
        (i/o-error-position . g$6945$14xsgv)
        (i/o-filename-error? . g$6961$14xsgv)
        (i/o-file-protection-error? . g$6976$14xsgv)
        (i/o-file-is-read-only-error? . g$6990$14xsgv)
        (i/o-file-does-not-exist-error? . g$7018$14xsgv)
        (i/o-file-already-exists-error? . g$7004$14xsgv)
        (i/o-error? . g$6900$14xsgv)
        (i/o-error-port . g$7035$14xsgv)
        (i/o-error-filename . g$6962$14xsgv)
        (i/o-encoding-error? . g$7065$14xsgv)
        (i/o-encoding-error-char . g$7066$14xsgv)
        (i/o-decoding-error? . g$7049$14xsgv)
        (get-u8 . g$11943$14xsgv)
        (get-string-n! . g$11942$14xsgv)
        (get-string-n . g$11941$14xsgv)
        (get-string-all . g$11940$14xsgv)
        (get-line . g$11939$14xsgv)
        (get-datum . g$11938$14xsgv)
        (get-char . g$11937$14xsgv)
        (get-bytevector-some . g$11936$14xsgv)
        (get-bytevector-n! . g$11935$14xsgv)
        (get-bytevector-n . g$11934$14xsgv)
        (get-bytevector-all . g$11933$14xsgv)
        (flush-output-port . g$11932$14xsgv)
        (close-port . g$11931$14xsgv)
        (call-with-string-output-port . g$11930$14xsgv)
        (call-with-port . g$11929$14xsgv)
        (call-with-bytevector-output-port . g$11928$14xsgv)
        (bytevector->string . g$11927$14xsgv)
        (buffer-mode? . g$11926$14xsgv)
        (binary-port? . g$11925$14xsgv)
        (scheme-report-environment . g$8530$14xsgv)
        (quotient . g$6663$14xsgv)
        (null-environment . g$8529$14xsgv)
        (remainder . g$6664$14xsgv)
        (modulo . g$6665$14xsgv)
        (inexact->exact . g$11924$14xsgv)
        (force . g$6667$14xsgv)
        (exact->inexact . g$11923$14xsgv)
        (exit . g$11922$14xsgv)
        (command-line . g$11483$14xsgv)
        (string-fill! . g$11921$14xsgv)
        (string-set! . g$11920$14xsgv)
        (set-cdr! . g$11919$14xsgv)
        (set-car! . g$11918$14xsgv)
        (remove . g$6250$14xsgv)
        (remv . g$6251$14xsgv)
        (remp . g$6236$14xsgv)
        (remq . g$6252$14xsgv)
        (partition . g$6235$14xsgv)
        (memv . g$11917$14xsgv)
        (memq . g$11916$14xsgv)
        (memp . g$6242$14xsgv)
        (member . g$6241$14xsgv)
        (exists . g$6246$14xsgv)
        (for-all . g$6245$14xsgv)
        (fold-right . g$6249$14xsgv)
        (fold-left . g$6248$14xsgv)
        (find . g$6234$14xsgv)
        (filter . g$6237$14xsgv)
        (cons* . g$6247$14xsgv)
        (assv . g$6238$14xsgv)
        (assq . g$11915$14xsgv)
        (assp . g$6240$14xsgv)
        (assoc . g$6239$14xsgv)
        (with-exception-handler . g$11914$14xsgv)
        (raise-continuable . g$11913$14xsgv)
        (raise . g$11912$14xsgv)
        (eval . g$8532$14xsgv)
        (environment . g$8528$14xsgv)
        (make-enumeration . g$7152$14xsgv)
        (enum-set=? . g$7159$14xsgv)
        (enum-set-universe . g$7153$14xsgv)
        (enum-set-union . g$7160$14xsgv)
        (enum-set-subset? . g$7158$14xsgv)
        (enum-set-projection . g$7164$14xsgv)
        (enum-set-member? . g$7157$14xsgv)
        (enum-set-intersection . g$7161$14xsgv)
        (enum-set-indexer . g$7154$14xsgv)
        (enum-set-difference . g$7162$14xsgv)
        (enum-set-constructor . g$7155$14xsgv)
        (enum-set-complement . g$7163$14xsgv)
        (enum-set->list . g$7156$14xsgv)
        (who-condition? . g$6574$14xsgv)
        (warning? . g$6485$14xsgv)
        (violation? . g$6527$14xsgv)
        (undefined-violation? . g$6651$14xsgv)
        (syntax-violation? . g$6635$14xsgv)
        (syntax-violation-subform . g$6637$14xsgv)
        (syntax-violation-form . g$6636$14xsgv)
        (syntax-violation . g$8549$14xsgv)
        (simple-conditions . g$11911$14xsgv)
        (serious-condition? . g$6499$14xsgv)
        (non-continuable-violation? . g$6589$14xsgv)
        (message-condition? . g$6470$14xsgv)
        (make-who-condition . g$6572$14xsgv)
        (make-warning . g$6484$14xsgv)
        (make-violation . g$6526$14xsgv)
        (make-undefined-violation . g$6650$14xsgv)
        (make-syntax-violation . g$6632$14xsgv)
        (make-serious-condition . g$6498$14xsgv)
        (make-non-continuable-violation . g$6588$14xsgv)
        (make-message-condition . g$6468$14xsgv)
        (make-lexical-violation . g$6616$14xsgv)
        (make-irritants-condition . g$6555$14xsgv)
        (make-implementation-restriction-violation . g$6602$14xsgv)
        (make-error . g$6512$14xsgv)
        (make-assertion-violation . g$6540$14xsgv)
        (lexical-violation? . g$6617$14xsgv)
        (irritants-condition? . g$6557$14xsgv)
        (implementation-restriction-violation? . g$6603$14xsgv)
        (error? . g$6513$14xsgv)
        (condition-who . g$6575$14xsgv)
        (condition-predicate . g$11910$14xsgv)
        (condition-message . g$6471$14xsgv)
        (condition-irritants . g$6558$14xsgv)
        (condition-accessor . g$11909$14xsgv)
        (condition . g$11908$14xsgv)
        (assertion-violation? . g$6541$14xsgv)
        (condition? . g$11907$14xsgv)
        (utf32->string . g$11906$14xsgv)
        (utf16->string . g$11905$14xsgv)
        (utf8->string . g$11904$14xsgv)
        (uint-list->bytevector . g$11903$14xsgv)
        (u8-list->bytevector . g$11902$14xsgv)
        (string->utf8 . g$11901$14xsgv)
        (string->utf32 . g$11900$14xsgv)
        (string->utf16 . g$11899$14xsgv)
        (sint-list->bytevector . g$11898$14xsgv)
        (native-endianness . g$6326$14xsgv)
        (bytevector? . g$11897$14xsgv)
        (bytevector=? . g$11896$14xsgv)
        (bytevector-uint-set! . g$11895$14xsgv)
        (bytevector-uint-ref . g$11894$14xsgv)
        (bytevector-u8-set! . g$11893$14xsgv)
        (bytevector-u8-ref . g$11892$14xsgv)
        (bytevector-u64-set! . g$6347$14xsgv)
        (bytevector-u64-ref . g$6343$14xsgv)
        (bytevector-u64-native-set! . g$6349$14xsgv)
        (bytevector-u64-native-ref . g$6345$14xsgv)
        (bytevector-u32-set! . g$6339$14xsgv)
        (bytevector-u32-ref . g$6335$14xsgv)
        (bytevector-u32-native-set! . g$6341$14xsgv)
        (bytevector-u32-native-ref . g$6337$14xsgv)
        (bytevector-u16-set! . g$6331$14xsgv)
        (bytevector-u16-ref . g$6327$14xsgv)
        (bytevector-u16-native-set! . g$6333$14xsgv)
        (bytevector-u16-native-ref . g$6329$14xsgv)
        (bytevector-sint-set! . g$11891$14xsgv)
        (bytevector-sint-ref . g$11890$14xsgv)
        (bytevector-s8-set! . g$11889$14xsgv)
        (bytevector-s8-ref . g$11888$14xsgv)
        (bytevector-s64-set! . g$6348$14xsgv)
        (bytevector-s64-ref . g$6344$14xsgv)
        (bytevector-s64-native-set! . g$6350$14xsgv)
        (bytevector-s64-native-ref . g$6346$14xsgv)
        (bytevector-s32-set! . g$6340$14xsgv)
        (bytevector-s32-ref . g$6336$14xsgv)
        (bytevector-s32-native-set! . g$6342$14xsgv)
        (bytevector-s32-native-ref . g$6338$14xsgv)
        (bytevector-s16-set! . g$6332$14xsgv)
        (bytevector-s16-ref . g$6328$14xsgv)
        (bytevector-s16-native-set! . g$6334$14xsgv)
        (bytevector-s16-native-ref . g$6330$14xsgv)
        (bytevector-length . g$11887$14xsgv)
        (bytevector-ieee-single-set! . g$11886$14xsgv)
        (bytevector-ieee-single-ref . g$11885$14xsgv)
        (bytevector-ieee-single-native-set! . g$6353$14xsgv)
        (bytevector-ieee-single-native-ref . g$6351$14xsgv)
        (bytevector-ieee-double-set! . g$11884$14xsgv)
        (bytevector-ieee-double-ref . g$11883$14xsgv)
        (bytevector-ieee-double-native-set! . g$6354$14xsgv)
        (bytevector-ieee-double-native-ref . g$6352$14xsgv)
        (bytevector-fill! . g$11882$14xsgv)
        (bytevector-copy! . g$11881$14xsgv)
        (bytevector-copy . g$11880$14xsgv)
        (bytevector->uint-list . g$11879$14xsgv)
        (bytevector->u8-list . g$11878$14xsgv)
        (bytevector->sint-list . g$11877$14xsgv)
        (no-nans-violation? . g$6885$14xsgv)
        (no-infinities-violation? . g$6871$14xsgv)
        (make-no-nans-violation . g$6884$14xsgv)
        (make-no-infinities-violation . g$6870$14xsgv)
        (real->flonum . g$11876$14xsgv)
        (flzero? . g$11875$14xsgv)
        (fltruncate . g$11874$14xsgv)
        (fltan . g$11873$14xsgv)
        (flsqrt . g$11872$14xsgv)
        (flsin . g$11871$14xsgv)
        (flround . g$11870$14xsgv)
        (flpositive? . g$11869$14xsgv)
        (flonum? . g$11868$14xsgv)
        (flodd? . g$11867$14xsgv)
        (flnumerator . g$11866$14xsgv)
        (flnegative? . g$11865$14xsgv)
        (flnan? . g$11864$14xsgv)
        (flmod0 . g$11863$14xsgv)
        (flmod . g$11862$14xsgv)
        (flmin . g$11861$14xsgv)
        (flmax . g$11860$14xsgv)
        (fllog . g$11859$14xsgv)
        (flinteger? . g$11858$14xsgv)
        (flinfinite? . g$11857$14xsgv)
        (flfloor . g$11856$14xsgv)
        (flfinite? . g$11855$14xsgv)
        (flexpt . g$11854$14xsgv)
        (flexp . g$11853$14xsgv)
        (fleven? . g$11852$14xsgv)
        (fldiv0-and-mod0 . g$11851$14xsgv)
        (fldiv0 . g$11850$14xsgv)
        (fldiv-and-mod . g$11849$14xsgv)
        (fldiv . g$11848$14xsgv)
        (fldenominator . g$11847$14xsgv)
        (flcos . g$11846$14xsgv)
        (flceiling . g$11845$14xsgv)
        (flatan . g$11844$14xsgv)
        (flasin . g$11843$14xsgv)
        (flacos . g$11842$14xsgv)
        (flabs . g$11841$14xsgv)
        (fl>? . g$11840$14xsgv)
        (fl>=? . g$11839$14xsgv)
        (fl=? . g$11838$14xsgv)
        (fl<? . g$11837$14xsgv)
        (fl<=? . g$11836$14xsgv)
        (fl/ . g$11835$14xsgv)
        (fl- . g$11834$14xsgv)
        (fl+ . g$11833$14xsgv)
        (fl* . g$11832$14xsgv)
        (fixnum->flonum . g$11831$14xsgv)
        (fxzero? . g$11830$14xsgv)
        (fxxor . g$11829$14xsgv)
        (fxrotate-bit-field . g$6816$14xsgv)
        (fxreverse-bit-field . g$11828$14xsgv)
        (fxpositive? . g$11827$14xsgv)
        (fxodd? . g$11826$14xsgv)
        (fxnot . g$11825$14xsgv)
        (fxnegative? . g$11824$14xsgv)
        (fxmod0 . g$11823$14xsgv)
        (fxmod . g$11822$14xsgv)
        (fxmin . g$11821$14xsgv)
        (fxmax . g$11820$14xsgv)
        (fxlength . g$11819$14xsgv)
        (fxior . g$11818$14xsgv)
        (fxif . g$6810$14xsgv)
        (fxfirst-bit-set . g$11817$14xsgv)
        (fxeven? . g$11816$14xsgv)
        (fxdiv0-and-mod0 . g$11815$14xsgv)
        (fxdiv0 . g$11814$14xsgv)
        (fxdiv-and-mod . g$11813$14xsgv)
        (fxdiv . g$11812$14xsgv)
        (fxcopy-bit-field . g$6813$14xsgv)
        (fxcopy-bit . g$6811$14xsgv)
        (fxbit-set? . g$11811$14xsgv)
        (fxbit-field . g$6812$14xsgv)
        (fxbit-count . g$11810$14xsgv)
        (fxarithmetic-shift-right . g$6815$14xsgv)
        (fxarithmetic-shift-left . g$6814$14xsgv)
        (fxarithmetic-shift . g$11809$14xsgv)
        (fxand . g$11808$14xsgv)
        (fx>? . g$11807$14xsgv)
        (fx>=? . g$11806$14xsgv)
        (fx=? . g$11805$14xsgv)
        (fx<? . g$11804$14xsgv)
        (fx<=? . g$11803$14xsgv)
        (fx-/carry . g$11802$14xsgv)
        (fx- . g$11801$14xsgv)
        (fx+/carry . g$11800$14xsgv)
        (fx+ . g$11799$14xsgv)
        (fx*/carry . g$11798$14xsgv)
        (fx* . g$11797$14xsgv)
        (greatest-fixnum . g$11796$14xsgv)
        (least-fixnum . g$11795$14xsgv)
        (fixnum-width . g$11794$14xsgv)
        (fixnum? . g$11793$14xsgv)
        (bitwise-rotate-bit-field . g$6768$14xsgv)
        (bitwise-reverse-bit-field . g$11792$14xsgv)
        (bitwise-length . g$11791$14xsgv)
        (bitwise-if . g$6762$14xsgv)
        (bitwise-first-bit-set . g$11790$14xsgv)
        (bitwise-copy-bit-field . g$6765$14xsgv)
        (bitwise-copy-bit . g$6763$14xsgv)
        (bitwise-bit-set? . g$11789$14xsgv)
        (bitwise-bit-field . g$11788$14xsgv)
        (bitwise-bit-count . g$11787$14xsgv)
        (bitwise-xor . g$11786$14xsgv)
        (bitwise-ior . g$11785$14xsgv)
        (bitwise-and . g$11784$14xsgv)
        (bitwise-not . g$11783$14xsgv)
        (bitwise-arithmetic-shift-right . g$6767$14xsgv)
        (bitwise-arithmetic-shift-left . g$6766$14xsgv)
        (bitwise-arithmetic-shift . g$11782$14xsgv)
        (zero? . g$11781$14xsgv)
        (vector? . g$11780$14xsgv)
        (vector-set! . g$11779$14xsgv)
        (vector-ref . g$11778$14xsgv)
        (vector-map . g$11777$14xsgv)
        (vector-length . g$11776$14xsgv)
        (vector-for-each . g$11775$14xsgv)
        (vector-fill! . g$11774$14xsgv)
        (vector->list . g$11773$14xsgv)
        (vector . g$11772$14xsgv)
        (values . g$11771$14xsgv)
        (truncate . g$11770$14xsgv)
        (tan . g$11769$14xsgv)
        (symbol? . g$11768$14xsgv)
        (symbol=? . g$11767$14xsgv)
        (symbol->string . g$11766$14xsgv)
        (substring . g$11765$14xsgv)
        (string? . g$11764$14xsgv)
        (string>? . g$11763$14xsgv)
        (string>=? . g$11762$14xsgv)
        (string=? . g$11761$14xsgv)
        (string<? . g$11760$14xsgv)
        (string<=? . g$11759$14xsgv)
        (string-ref . g$11758$14xsgv)
        (string-length . g$11757$14xsgv)
        (string-for-each . g$11756$14xsgv)
        (string-copy . g$11755$14xsgv)
        (string-append . g$11754$14xsgv)
        (string->symbol . g$11753$14xsgv)
        (string->number . g$11752$14xsgv)
        (string->list . g$11751$14xsgv)
        (string . g$11750$14xsgv)
        (sqrt . g$11749$14xsgv)
        (sin . g$11748$14xsgv)
        (round . g$11747$14xsgv)
        (reverse . g$11746$14xsgv)
        (real? . g$11745$14xsgv)
        (real-valued? . g$11744$14xsgv)
        (real-part . g$11743$14xsgv)
        (rationalize . g$5786$14xsgv)
        (rational? . g$11742$14xsgv)
        (rational-valued? . g$11741$14xsgv)
        (procedure? . g$11740$14xsgv)
        (positive? . g$11739$14xsgv)
        (pair? . g$11738$14xsgv)
        (odd? . g$11737$14xsgv)
        (numerator . g$11736$14xsgv)
        (number? . g$11735$14xsgv)
        (number->string . g$11734$14xsgv)
        (null? . g$11733$14xsgv)
        (not . g$11732$14xsgv)
        (negative? . g$11731$14xsgv)
        (nan? . g$11730$14xsgv)
        (min . g$11729$14xsgv)
        (max . g$11728$14xsgv)
        (map . g$11727$14xsgv)
        (make-vector . g$11726$14xsgv)
        (make-string . g$11725$14xsgv)
        (make-rectangular . g$11724$14xsgv)
        (make-polar . g$11723$14xsgv)
        (magnitude . g$11722$14xsgv)
        (log . g$11721$14xsgv)
        (list? . g$11720$14xsgv)
        (list-tail . g$11719$14xsgv)
        (list-ref . g$11718$14xsgv)
        (list->vector . g$11717$14xsgv)
        (list->string . g$11716$14xsgv)
        (list . g$11715$14xsgv)
        (length . g$11714$14xsgv)
        (lcm . g$11713$14xsgv)
        (integer? . g$11712$14xsgv)
        (integer-valued? . g$11711$14xsgv)
        (integer->char . g$11710$14xsgv)
        (infinite? . g$11709$14xsgv)
        (inexact? . g$11708$14xsgv)
        (inexact . g$11707$14xsgv)
        (imag-part . g$11706$14xsgv)
        (gcd . g$11705$14xsgv)
        (for-each . g$11704$14xsgv)
        (floor . g$11703$14xsgv)
        (finite? . g$11702$14xsgv)
        (expt . g$11701$14xsgv)
        (exp . g$11700$14xsgv)
        (exact? . g$11699$14xsgv)
        (exact-integer-sqrt . g$11698$14xsgv)
        (exact . g$11697$14xsgv)
        (even? . g$11696$14xsgv)
        (error . g$11695$14xsgv)
        (eqv? . g$11694$14xsgv)
        (equal? . g$11693$14xsgv)
        (eq? . g$11692$14xsgv)
        (dynamic-wind . g$11691$14xsgv)
        (div0-and-mod0 . g$11690$14xsgv)
        (mod0 . g$11689$14xsgv)
        (div0 . g$11688$14xsgv)
        (div-and-mod . g$11687$14xsgv)
        (mod . g$11686$14xsgv)
        (div . g$11685$14xsgv)
        (denominator . g$11684$14xsgv)
        (cos . g$11683$14xsgv)
        (cons . g$11682$14xsgv)
        (complex? . g$11681$14xsgv)
        (char? . g$11680$14xsgv)
        (char>? . g$11679$14xsgv)
        (char>=? . g$11678$14xsgv)
        (char=? . g$11677$14xsgv)
        (char<? . g$11676$14xsgv)
        (char<=? . g$11675$14xsgv)
        (char->integer . g$11674$14xsgv)
        (ceiling . g$11673$14xsgv)
        (call-with-values . g$11672$14xsgv)
        (call/cc . g$11671$14xsgv)
        (call-with-current-continuation . g$11670$14xsgv)
        (cddddr . g$5785$14xsgv)
        (cdddar . g$5784$14xsgv)
        (cddadr . g$5783$14xsgv)
        (cddaar . g$5782$14xsgv)
        (cdaddr . g$5781$14xsgv)
        (cdadar . g$5780$14xsgv)
        (cdaadr . g$5779$14xsgv)
        (cdaaar . g$5778$14xsgv)
        (cadddr . g$5777$14xsgv)
        (caddar . g$5776$14xsgv)
        (cadadr . g$5775$14xsgv)
        (cadaar . g$5774$14xsgv)
        (caaddr . g$5773$14xsgv)
        (caadar . g$5772$14xsgv)
        (caaadr . g$5771$14xsgv)
        (caaaar . g$5770$14xsgv)
        (cdddr . g$5769$14xsgv)
        (cddar . g$5768$14xsgv)
        (cdadr . g$5767$14xsgv)
        (cdaar . g$5766$14xsgv)
        (caddr . g$5765$14xsgv)
        (cadar . g$5764$14xsgv)
        (caadr . g$5763$14xsgv)
        (caaar . g$5762$14xsgv)
        (cddr . g$5761$14xsgv)
        (cdar . g$5760$14xsgv)
        (cadr . g$5759$14xsgv)
        (caar . g$5758$14xsgv)
        (cdr . g$11669$14xsgv)
        (car . g$11668$14xsgv)
        (boolean? . g$11667$14xsgv)
        (boolean=? . g$11666$14xsgv)
        (atan . g$11665$14xsgv)
        (assertion-violation . g$11664$14xsgv)
        (asin . g$11663$14xsgv)
        (apply . g$11662$14xsgv)
        (append . g$11661$14xsgv)
        (angle . g$11660$14xsgv)
        (acos . g$11659$14xsgv)
        (abs . g$11658$14xsgv)
        (/ . g$11657$14xsgv)
        (* . g$11656$14xsgv)
        (- . g$11655$14xsgv)
        (+ . g$11654$14xsgv)
        (>= . g$11653$14xsgv)
        (> . g$11652$14xsgv)
        (= . g$11651$14xsgv)
        (<= . g$11650$14xsgv)
        (< . g$11649$14xsgv)
        (make-record-printer . g$11648$14xsgv)
        (eqv-hash . g$11647$14xsgv)
        (eq-hash . g$11646$14xsgv)
        (reverse! . g$11645$14xsgv)
        (make-promise . g$6666$14xsgv)
        (load/args . g$11485$14xsgv)
        (printf . g$7236$14xsgv)
        (fprintf . g$7237$14xsgv)
        (format . g$7238$14xsgv)
        (get-arity . g$11644$14xsgv)
        (gc-collect . g$11643$14xsgv)
        (clr-type? . g$11642$14xsgv)
        (get-clr-type . g$11641$14xsgv)
        (get-command-line . g$11640$14xsgv)
        (vector-append . g$11639$14xsgv)
        (vector-filter . g$11638$14xsgv)
        (vector-reverse! . g$11637$14xsgv)
        (vector-contains? . g$11636$14xsgv)
        (vector-index-of . g$11635$14xsgv)
        (vector-copy . g$11634$14xsgv)
        (vector-binary-search . g$11633$14xsgv)
        (get-output-string . g$11632$14xsgv)
        (open-output-string . g$11631$14xsgv)
        (open-input-string . g$11630$14xsgv)
        (string-format . g$11629$14xsgv)
        (trace-printer . g$11482$14xsgv)
        (make-traced-procedure . g$11628$14xsgv)
        (make-traced-macro . g$7258$14xsgv)
        (assertion-error . g$8545$14xsgv)
        (pmap . g$11627$14xsgv)
        (time-it . g$11626$14xsgv)
        (make-parameter . g$7263$14xsgv)
        (library-locator . g$11625$14xsgv)
        (get-library-paths . g$11624$14xsgv)
        (environment-symbols . g$8526$14xsgv)
        (interaction-environment-symbols . g$8525$14xsgv)
        (library-path . g$7694$14xsgv)
        (library-extensions . g$7695$14xsgv)
        (installed-libraries . g$7715$14xsgv)
        (expand . g$8531$14xsgv)
        (&no-nans . g$11623$14xsgv)
        (&no-infinities . g$11622$14xsgv)
        (&i/o-encoding . g$11621$14xsgv)
        (&i/o-decoding . g$11620$14xsgv)
        (&i/o-port . g$11619$14xsgv)
        (&i/o-file-does-not-exist . g$11618$14xsgv)
        (&i/o-file-already-exists . g$11617$14xsgv)
        (&i/o-file-is-read-only . g$11616$14xsgv)
        (&i/o-file-protection . g$11615$14xsgv)
        (&i/o-filename . g$11614$14xsgv)
        (&i/o-invalid-position . g$11613$14xsgv)
        (&i/o-write . g$11612$14xsgv)
        (&i/o-read . g$11611$14xsgv)
        (&i/o . g$11610$14xsgv)
        (&non-continuable . g$11609$14xsgv)
        (&undefined . g$11608$14xsgv)
        (&syntax . g$11607$14xsgv)
        (&lexical . g$11606$14xsgv)
        (&implementation-restriction . g$11605$14xsgv)
        (&non . g$11604$14xsgv)
        (&who . g$11603$14xsgv)
        (&irritants . g$11602$14xsgv)
        (&assertion . g$11601$14xsgv)
        (&violation . g$11600$14xsgv)
        (&error . g$11599$14xsgv)
        (&serious . g$11598$14xsgv)
        (&warning . g$11597$14xsgv)
        (&message . g$11596$14xsgv)
        (&condition . g$11595$14xsgv)
        (define-condition-type . g$11594$14xsgv)
        (define-enumeration . g$11593$14xsgv)
        (define-record-type . g$11592$14xsgv)
        (parent-rtd . g$11591$14xsgv)
        (nongenerative . g$11590$14xsgv)
        (opaque . g$11589$14xsgv)
        (sealed . g$11588$14xsgv)
        (protocol . g$11587$14xsgv)
        (parent . g$11586$14xsgv)
        (immutable . g$11585$14xsgv)
        (mutable . g$11584$14xsgv)
        (fields . g$11583$14xsgv)
        (error-handling-mode . g$11582$14xsgv)
        (file-options . g$11581$14xsgv)
        (buffer-mode . g$11580$14xsgv)
        (eol-style . g$11579$14xsgv)
        (guard . g$11578$14xsgv)
        (trace-letrec-syntax . g$11577$14xsgv)
        (trace-let-syntax . g$11576$14xsgv)
        (trace-define-syntax . g$11575$14xsgv)
        (trace-define . g$11574$14xsgv)
        (trace-lambda . g$11573$14xsgv)
        (unsyntax-splicing . g$11572$14xsgv)
        (unsyntax . g$11571$14xsgv)
        (unquote-splicing . g$11570$14xsgv)
        (unquote . g$11569$14xsgv)
        (_ . g$11568$14xsgv)
        (else . g$11567$14xsgv)
        (=> . g$11566$14xsgv)
        (... . g$11565$14xsgv)
        (assert . g$11564$14xsgv)
        (endianness . g$11563$14xsgv)
        (delay . g$11562$14xsgv)
        (time . g$11561$14xsgv)
        (or . g$11560$14xsgv)
        (and . g$11559$14xsgv)
        (do . g$11558$14xsgv)
        (cond . g$11557$14xsgv)
        (let* . g$11556$14xsgv)
        (let . g$11555$14xsgv)
        (identifier-syntax . g$11554$14xsgv)
        (with-syntax . g$11553$14xsgv)
        (quasisyntax . g$11552$14xsgv)
        (quasiquote . g$11551$14xsgv)
        (syntax-rules . g$11550$14xsgv)
        (include-into . g$11549$14xsgv)
        (include . g$11548$14xsgv)
        (define-struct . g$11547$14xsgv)
        (let-values . g$11546$14xsgv)
        (let*-values . g$11545$14xsgv)
        (record-constructor-descriptor . g$11544$14xsgv)
        (record-type-descriptor . g$11543$14xsgv)
        (fluid-let-syntax . g$11542$14xsgv)
        (case . g$11541$14xsgv)
        (parameterize . g$11540$14xsgv)
        (unless . g$11539$14xsgv)
        (when . g$11538$14xsgv)
        (if . g$11537$14xsgv)
        (letrec* . g$11536$14xsgv)
        (letrec . g$11535$14xsgv)
        (type-descriptor . g$11534$14xsgv)
        (case-lambda . g$11533$14xsgv)
        (lambda . g$11532$14xsgv)
        (syntax . g$11531$14xsgv)
        (syntax-case . g$11530$14xsgv)
        (quote . g$11529$14xsgv)
        (foreign-call . g$11528$14xsgv)
        (letrec-syntax . g$11527$14xsgv)
        (let-syntax . g$11526$14xsgv)
        (set! . g$11525$14xsgv)
        (import . g$11524$14xsgv)
        (library . g$11523$14xsgv)
        (begin . g$11522$14xsgv)
        (module . g$11521$14xsgv)
        (define-syntax . g$11520$14xsgv)
        (define . g$11519$14xsgv))
      '((g$8424$14xsgv core-prim . ellipsis-map)
        (g$12157$14xsgv core-prim . &no-nans-rcd)
        (g$12156$14xsgv core-prim . &no-nans-rtd)
        (g$12155$14xsgv core-prim . &no-infinities-rcd)
        (g$12154$14xsgv core-prim . &no-infinities-rtd)
        (g$12153$14xsgv core-prim . &i/o-encoding-rcd)
        (g$12152$14xsgv core-prim . &i/o-encoding-rtd)
        (g$12151$14xsgv core-prim . &i/o-decoding-rcd)
        (g$12150$14xsgv core-prim . &i/o-decoding-rtd)
        (g$12149$14xsgv core-prim . &i/o-port-rcd)
        (g$12148$14xsgv core-prim . &i/o-port-rtd)
        (g$12147$14xsgv core-prim . &i/o-file-does-not-exist-rcd)
        (g$12146$14xsgv core-prim . &i/o-file-does-not-exist-rtd)
        (g$12145$14xsgv core-prim . &i/o-file-already-exists-rcd)
        (g$12144$14xsgv core-prim . &i/o-file-already-exists-rtd)
        (g$12143$14xsgv core-prim . &i/o-file-is-read-only-rcd)
        (g$12142$14xsgv core-prim . &i/o-file-is-read-only-rtd)
        (g$12141$14xsgv core-prim . &i/o-file-protection-rcd)
        (g$12140$14xsgv core-prim . &i/o-file-protection-rtd)
        (g$12139$14xsgv core-prim . &i/o-filename-rcd)
        (g$12138$14xsgv core-prim . &i/o-filename-rtd)
        (g$12137$14xsgv core-prim . &i/o-invalid-position-rcd)
        (g$12136$14xsgv core-prim . &i/o-invalid-position-rtd)
        (g$12135$14xsgv core-prim . &i/o-write-rcd)
        (g$12134$14xsgv core-prim . &i/o-write-rtd)
        (g$12133$14xsgv core-prim . &i/o-read-rcd)
        (g$12132$14xsgv core-prim . &i/o-read-rtd)
        (g$12131$14xsgv core-prim . &i/o-rcd)
        (g$12130$14xsgv core-prim . &i/o-rtd)
        (g$12129$14xsgv core-prim . &undefined-rcd)
        (g$12128$14xsgv core-prim . &undefined-rtd)
        (g$12127$14xsgv core-prim . &syntax-rcd)
        (g$12126$14xsgv core-prim . &syntax-rtd)
        (g$12125$14xsgv core-prim . &lexical-rcd)
        (g$12124$14xsgv core-prim . &lexical-rtd)
        (g$12123$14xsgv core-prim . &implementation-restriction-rcd)
        (g$12122$14xsgv core-prim . &implementation-restriction-rtd)
        (g$12121$14xsgv core-prim . &non-continuable-rcd)
        (g$12120$14xsgv core-prim . &non-continuable-rtd)
        (g$12119$14xsgv core-prim . &who-rcd)
        (g$12118$14xsgv core-prim . &who-rtd)
        (g$12117$14xsgv core-prim . &irritants-rcd)
        (g$12116$14xsgv core-prim . &irritants-rtd)
        (g$12115$14xsgv core-prim . &assertion-rcd)
        (g$12114$14xsgv core-prim . &assertion-rtd)
        (g$12113$14xsgv core-prim . &violation-rcd)
        (g$12112$14xsgv core-prim . &violation-rtd)
        (g$12111$14xsgv core-prim . &error-rcd)
        (g$12110$14xsgv core-prim . &error-rtd)
        (g$12109$14xsgv core-prim . &serious-rcd)
        (g$12108$14xsgv core-prim . &serious-rtd)
        (g$12107$14xsgv core-prim . &warning-rcd)
        (g$12106$14xsgv core-prim . &warning-rtd)
        (g$12105$14xsgv core-prim . &message-rcd)
        (g$12104$14xsgv core-prim . &message-rtd)
        (g$12103$14xsgv core-prim . &condition-rcd)
        (g$12102$14xsgv core-prim . &condition-rtd)
        (g$12101$14xsgv core-prim . library-letrec*)
        (g$12100$14xsgv core-prim . annotation-stripped)
        (g$12099$14xsgv core-prim . annotation-source)
        (g$12098$14xsgv core-prim . annotation-expression)
        (g$12097$14xsgv core-prim . annotation?)
        (g$12096$14xsgv core-prim . read-annotated)
        (g$12095$14xsgv core-prim . tanh)
        (g$12094$14xsgv core-prim . cosh)
        (g$12093$14xsgv core-prim . sinh)
        (g$12092$14xsgv core-prim . make-guid)
        (g$12091$14xsgv core-prim . unspecified?)
        (g$12090$14xsgv core-prim . make-trace)
        (g$12089$14xsgv core-prim . make-list)
        (g$12088$14xsgv core-prim . last-pair)
        (g$12087$14xsgv core-prim . load-r5rs)
        (g$12086$14xsgv core-prim . license)
        (g$12085$14xsgv core-prim . stacktrace)
        (g$11487$14xsgv core-prim . ironscheme-build)
        (g$12084$14xsgv core-prim . define-clr-class-internal)
        (g$12083$14xsgv core-prim . clr-field-set!-internal)
        (g$12082$14xsgv core-prim . clr-field-get-internal)
        (g$12081$14xsgv core-prim . clr-cast-internal)
        (g$12080$14xsgv core-prim . clr-call-internal)
        (g$12079$14xsgv core-prim . clr-new-internal)
        (g$12078$14xsgv core-prim . clr-new-array-internal)
        (g$12077$14xsgv core-prim . clr-is-internal)
        (g$12076$14xsgv core-prim . clr-reference-internal)
        (g$12075$14xsgv core-prim . clr-using-internal)
        (g$12074$14xsgv core-prim . clr-clear-usings-internal)
        (g$8546$14xsgv core-prim . syntax-error)
        (g$8419$14xsgv core-prim . syntax-dispatch)
        (g$12073$14xsgv core-prim . compile-core)
        (g$12072$14xsgv core-prim . eval-core)
        (g$12071$14xsgv core-prim . set-symbol-value!)
        (g$12070$14xsgv core-prim . symbol-value)
        (g$12069$14xsgv core-prim . ungensym)
        (g$12068$14xsgv core-prim . gensym)
        (g$12067$14xsgv core-prim . void)
        (g$12066$14xsgv core-prim . load-serialized-library)
        (g$12065$14xsgv core-prim . serialize-library)
        (g$11489$14xsgv core-prim . compile-system-libraries)
        (g$11491$14xsgv core-prim . compile->closure)
        (g$11490$14xsgv core-prim . compile)
        (g$11486$14xsgv core-prim . load)
        (g$8555$14xsgv core-prim . interaction-environment)
        (g$12064$14xsgv core-prim . char-ready?)
        (g$12063$14xsgv core-prim . string-upcase)
        (g$12062$14xsgv core-prim . string-titlecase)
        (g$12061$14xsgv core-prim . string-normalize-nfkd)
        (g$12060$14xsgv core-prim . string-normalize-nfkc)
        (g$12059$14xsgv core-prim . string-normalize-nfd)
        (g$12058$14xsgv core-prim . string-normalize-nfc)
        (g$12057$14xsgv core-prim . string-foldcase)
        (g$12056$14xsgv core-prim . string-downcase)
        (g$12055$14xsgv core-prim . string-ci>?)
        (g$12054$14xsgv core-prim . string-ci>=?)
        (g$12053$14xsgv core-prim . string-ci=?)
        (g$12052$14xsgv core-prim . string-ci<?)
        (g$12051$14xsgv core-prim . string-ci<=?)
        (g$12050$14xsgv core-prim . char-whitespace?)
        (g$12049$14xsgv core-prim . char-upper-case?)
        (g$12048$14xsgv core-prim . char-title-case?)
        (g$12047$14xsgv core-prim . char-numeric?)
        (g$12046$14xsgv core-prim . char-lower-case?)
        (g$12045$14xsgv core-prim . char-general-category)
        (g$12044$14xsgv core-prim . char-upcase)
        (g$12043$14xsgv core-prim . char-titlecase)
        (g$12042$14xsgv core-prim . char-foldcase)
        (g$12041$14xsgv core-prim . char-downcase)
        (g$12040$14xsgv core-prim . char-ci>?)
        (g$12039$14xsgv core-prim . char-ci>=?)
        (g$12038$14xsgv core-prim . char-ci=?)
        (g$12037$14xsgv core-prim . char-ci<?)
        (g$12036$14xsgv core-prim . char-ci<=?)
        (g$12035$14xsgv core-prim . char-alphabetic?)
        (g$8156$14xsgv core-prim . variable-transformer-procedure)
        (g$8155$14xsgv core-prim . variable-transformer?)
        (g$8154$14xsgv core-prim . make-variable-transformer)
        (g$8550$14xsgv core-prim . identifier?)
        (g$8539$14xsgv core-prim . generate-temporaries)
        (g$8540$14xsgv core-prim . free-identifier=?)
        (g$8552$14xsgv core-prim . syntax->datum)
        (g$8551$14xsgv core-prim . datum->syntax)
        (g$8541$14xsgv core-prim . bound-identifier=?)
        (g$12034$14xsgv core-prim . record-type-descriptor?)
        (g$12033$14xsgv core-prim . record-predicate)
        (g$12032$14xsgv core-prim . record-mutator)
        (g$12031$14xsgv core-prim . record-constructor)
        (g$12030$14xsgv core-prim . record-accessor)
        (g$12029$14xsgv core-prim . make-record-type-descriptor)
        (g$12028$14xsgv core-prim . make-record-constructor-descriptor)
        (g$12027$14xsgv core-prim . record?)
        (g$12026$14xsgv core-prim . record-type-uid)
        (g$12025$14xsgv core-prim . record-type-sealed?)
        (g$12024$14xsgv core-prim . record-type-parent)
        (g$12023$14xsgv core-prim . record-type-opaque?)
        (g$12022$14xsgv core-prim . record-type-name)
        (g$12021$14xsgv core-prim . record-type-generative?)
        (g$12020$14xsgv core-prim . record-type-field-names)
        (g$12019$14xsgv core-prim . record-rtd)
        (g$12018$14xsgv core-prim . record-field-mutable?)
        (g$6170$14xsgv core-prim . delete-file)
        (g$6169$14xsgv core-prim . file-exists?)
        (g$12017$14xsgv core-prim . vector-sort!)
        (g$12016$14xsgv core-prim . vector-sort)
        (g$6683$14xsgv core-prim . list-sort)
        (g$12015$14xsgv core-prim . symbol-hash)
        (g$12014$14xsgv core-prim . string-ci-hash)
        (g$12013$14xsgv core-prim . string-hash)
        (g$12012$14xsgv core-prim . equal-hash)
        (g$12011$14xsgv core-prim . hashtable-equivalence-function)
        (g$12010$14xsgv core-prim . make-hashtable)
        (g$12009$14xsgv core-prim . hashtable-hash-function)
        (g$6137$14xsgv core-prim . make-eqv-hashtable)
        (g$6136$14xsgv core-prim . make-eq-hashtable)
        (g$12008$14xsgv core-prim . hashtable?)
        (g$6143$14xsgv core-prim . hashtable-update!)
        (g$6138$14xsgv core-prim . hashtable-size)
        (g$6140$14xsgv core-prim . hashtable-set!)
        (g$6139$14xsgv core-prim . hashtable-ref)
        (g$12007$14xsgv core-prim . hashtable-mutable?)
        (g$12006$14xsgv core-prim . hashtable-keys)
        (g$12005$14xsgv core-prim . hashtable-entries)
        (g$6141$14xsgv core-prim . hashtable-delete!)
        (g$12004$14xsgv core-prim . hashtable-copy)
        (g$6142$14xsgv core-prim . hashtable-contains?)
        (g$6144$14xsgv core-prim . hashtable-clear!)
        (g$7095$14xsgv core-prim . call-with-output-file)
        (g$7094$14xsgv core-prim . call-with-input-file)
        (g$12003$14xsgv core-prim . write-char)
        (g$12002$14xsgv core-prim . write)
        (g$7093$14xsgv core-prim . with-output-to-file)
        (g$7092$14xsgv core-prim . with-input-from-file)
        (g$12001$14xsgv core-prim . read-char)
        (g$12000$14xsgv core-prim . read)
        (g$11999$14xsgv core-prim . peek-char)
        (g$11998$14xsgv core-prim . open-output-file)
        (g$11997$14xsgv core-prim . open-input-file)
        (g$11996$14xsgv core-prim . newline)
        (g$11995$14xsgv core-prim . display)
        (g$11994$14xsgv core-prim . close-output-port)
        (g$11993$14xsgv core-prim . close-input-port)
        (g$11992$14xsgv core-prim . eof-object?)
        (g$11991$14xsgv core-prim . eof-object)
        (g$11990$14xsgv core-prim . current-error-port)
        (g$11989$14xsgv core-prim . current-output-port)
        (g$11988$14xsgv core-prim . current-input-port)
        (g$11987$14xsgv core-prim . output-port?)
        (g$11986$14xsgv core-prim . input-port?)
        (g$11985$14xsgv core-prim . utf-8-codec)
        (g$11984$14xsgv core-prim . utf-16-codec)
        (g$11983$14xsgv core-prim . transcoder-error-handling-mode)
        (g$11982$14xsgv core-prim . transcoder-eol-style)
        (g$11981$14xsgv core-prim . transcoder-codec)
        (g$11980$14xsgv core-prim . transcoded-port)
        (g$11979$14xsgv core-prim . textual-port?)
        (g$11978$14xsgv core-prim . string->bytevector)
        (g$11977$14xsgv core-prim . standard-output-port)
        (g$11976$14xsgv core-prim . standard-input-port)
        (g$11975$14xsgv core-prim . standard-error-port)
        (g$11974$14xsgv core-prim . set-port-position!)
        (g$11973$14xsgv core-prim . put-u8)
        (g$11972$14xsgv core-prim . put-string)
        (g$11971$14xsgv core-prim . put-datum)
        (g$11970$14xsgv core-prim . put-char)
        (g$11969$14xsgv core-prim . put-bytevector)
        (g$7071$14xsgv core-prim . port?)
        (g$11968$14xsgv core-prim . port-transcoder)
        (g$11967$14xsgv core-prim . port-position)
        (g$11966$14xsgv core-prim . port-has-set-port-position!?)
        (g$11965$14xsgv core-prim . port-has-port-position?)
        (g$11964$14xsgv core-prim . port-eof?)
        (g$11963$14xsgv core-prim . output-port-buffer-mode)
        (g$7070$14xsgv core-prim . open-string-output-port)
        (g$11962$14xsgv core-prim . open-string-input-port)
        (g$11961$14xsgv core-prim . open-file-output-port)
        (g$11960$14xsgv core-prim . open-file-input/output-port)
        (g$11959$14xsgv core-prim . open-file-input-port)
        (g$11958$14xsgv core-prim . open-bytevector-output-port)
        (g$11957$14xsgv core-prim . open-bytevector-input-port)
        (g$11956$14xsgv core-prim . native-transcoder)
        (g$11955$14xsgv core-prim . native-eol-style)
        (g$11954$14xsgv core-prim . make-transcoder)
        (g$11953$14xsgv core-prim . latin-1-codec)
        (g$6927$14xsgv core-prim . make-i/o-write-error)
        (g$6913$14xsgv core-prim . make-i/o-read-error)
        (g$7032$14xsgv core-prim . make-i/o-port-error)
        (g$6942$14xsgv core-prim . make-i/o-invalid-position-error)
        (g$6959$14xsgv core-prim . make-i/o-filename-error)
        (g$6975$14xsgv core-prim . make-i/o-file-protection-error)
        (g$6989$14xsgv core-prim . make-i/o-file-is-read-only-error)
        (g$7017$14xsgv core-prim . make-i/o-file-does-not-exist-error)
        (g$7003$14xsgv core-prim . make-i/o-file-already-exists-error)
        (g$6899$14xsgv core-prim . make-i/o-error)
        (g$7063$14xsgv core-prim . make-i/o-encoding-error)
        (g$7048$14xsgv core-prim . make-i/o-decoding-error)
        (g$11952$14xsgv core-prim . make-custom-textual-output-port)
        (g$11951$14xsgv core-prim . make-custom-textual-input/output-port)
        (g$11950$14xsgv core-prim . make-custom-textual-input-port)
        (g$11949$14xsgv core-prim . make-custom-binary-output-port)
        (g$11948$14xsgv core-prim . make-custom-binary-input/output-port)
        (g$11947$14xsgv core-prim . make-custom-binary-input-port)
        (g$11946$14xsgv core-prim . make-bytevector)
        (g$11945$14xsgv core-prim . lookahead-u8)
        (g$11944$14xsgv core-prim . lookahead-char)
        (g$6928$14xsgv core-prim . i/o-write-error?)
        (g$6914$14xsgv core-prim . i/o-read-error?)
        (g$7034$14xsgv core-prim . i/o-port-error?)
        (g$6944$14xsgv core-prim . i/o-invalid-position-error?)
        (g$6945$14xsgv core-prim . i/o-error-position)
        (g$6961$14xsgv core-prim . i/o-filename-error?)
        (g$6976$14xsgv core-prim . i/o-file-protection-error?)
        (g$6990$14xsgv core-prim . i/o-file-is-read-only-error?)
        (g$7018$14xsgv core-prim . i/o-file-does-not-exist-error?)
        (g$7004$14xsgv core-prim . i/o-file-already-exists-error?)
        (g$6900$14xsgv core-prim . i/o-error?)
        (g$7035$14xsgv core-prim . i/o-error-port)
        (g$6962$14xsgv core-prim . i/o-error-filename)
        (g$7065$14xsgv core-prim . i/o-encoding-error?)
        (g$7066$14xsgv core-prim . i/o-encoding-error-char)
        (g$7049$14xsgv core-prim . i/o-decoding-error?)
        (g$11943$14xsgv core-prim . get-u8)
        (g$11942$14xsgv core-prim . get-string-n!)
        (g$11941$14xsgv core-prim . get-string-n)
        (g$11940$14xsgv core-prim . get-string-all)
        (g$11939$14xsgv core-prim . get-line)
        (g$11938$14xsgv core-prim . get-datum)
        (g$11937$14xsgv core-prim . get-char)
        (g$11936$14xsgv core-prim . get-bytevector-some)
        (g$11935$14xsgv core-prim . get-bytevector-n!)
        (g$11934$14xsgv core-prim . get-bytevector-n)
        (g$11933$14xsgv core-prim . get-bytevector-all)
        (g$11932$14xsgv core-prim . flush-output-port)
        (g$11931$14xsgv core-prim . close-port)
        (g$11930$14xsgv core-prim . call-with-string-output-port)
        (g$11929$14xsgv core-prim . call-with-port)
        (g$11928$14xsgv core-prim . call-with-bytevector-output-port)
        (g$11927$14xsgv core-prim . bytevector->string)
        (g$11926$14xsgv core-prim . buffer-mode?)
        (g$11925$14xsgv core-prim . binary-port?)
        (g$8530$14xsgv core-prim . scheme-report-environment)
        (g$6663$14xsgv core-prim . quotient)
        (g$8529$14xsgv core-prim . null-environment)
        (g$6664$14xsgv core-prim . remainder)
        (g$6665$14xsgv core-prim . modulo)
        (g$11924$14xsgv core-prim . inexact->exact)
        (g$6667$14xsgv core-prim . force)
        (g$11923$14xsgv core-prim . exact->inexact)
        (g$11922$14xsgv core-prim . exit)
        (g$11483$14xsgv core-prim . command-line)
        (g$11921$14xsgv core-prim . string-fill!)
        (g$11920$14xsgv core-prim . string-set!)
        (g$11919$14xsgv core-prim . set-cdr!)
        (g$11918$14xsgv core-prim . set-car!)
        (g$6250$14xsgv core-prim . remove)
        (g$6251$14xsgv core-prim . remv)
        (g$6236$14xsgv core-prim . remp)
        (g$6252$14xsgv core-prim . remq)
        (g$6235$14xsgv core-prim . partition)
        (g$11917$14xsgv core-prim . memv)
        (g$11916$14xsgv core-prim . memq)
        (g$6242$14xsgv core-prim . memp)
        (g$6241$14xsgv core-prim . member)
        (g$6246$14xsgv core-prim . exists)
        (g$6245$14xsgv core-prim . for-all)
        (g$6249$14xsgv core-prim . fold-right)
        (g$6248$14xsgv core-prim . fold-left)
        (g$6234$14xsgv core-prim . find)
        (g$6237$14xsgv core-prim . filter)
        (g$6247$14xsgv core-prim . cons*)
        (g$6238$14xsgv core-prim . assv)
        (g$11915$14xsgv core-prim . assq)
        (g$6240$14xsgv core-prim . assp)
        (g$6239$14xsgv core-prim . assoc)
        (g$11914$14xsgv core-prim . with-exception-handler)
        (g$11913$14xsgv core-prim . raise-continuable)
        (g$11912$14xsgv core-prim . raise)
        (g$8532$14xsgv core-prim . eval)
        (g$8528$14xsgv core-prim . environment)
        (g$7152$14xsgv core-prim . make-enumeration)
        (g$7159$14xsgv core-prim . enum-set=?)
        (g$7153$14xsgv core-prim . enum-set-universe)
        (g$7160$14xsgv core-prim . enum-set-union)
        (g$7158$14xsgv core-prim . enum-set-subset?)
        (g$7164$14xsgv core-prim . enum-set-projection)
        (g$7157$14xsgv core-prim . enum-set-member?)
        (g$7161$14xsgv core-prim . enum-set-intersection)
        (g$7154$14xsgv core-prim . enum-set-indexer)
        (g$7162$14xsgv core-prim . enum-set-difference)
        (g$7155$14xsgv core-prim . enum-set-constructor)
        (g$7163$14xsgv core-prim . enum-set-complement)
        (g$7156$14xsgv core-prim . enum-set->list)
        (g$6574$14xsgv core-prim . who-condition?)
        (g$6485$14xsgv core-prim . warning?)
        (g$6527$14xsgv core-prim . violation?)
        (g$6651$14xsgv core-prim . undefined-violation?)
        (g$6635$14xsgv core-prim . syntax-violation?)
        (g$6637$14xsgv core-prim . syntax-violation-subform)
        (g$6636$14xsgv core-prim . syntax-violation-form)
        (g$8549$14xsgv core-prim . syntax-violation)
        (g$11911$14xsgv core-prim . simple-conditions)
        (g$6499$14xsgv core-prim . serious-condition?)
        (g$6589$14xsgv core-prim . non-continuable-violation?)
        (g$6470$14xsgv core-prim . message-condition?)
        (g$6572$14xsgv core-prim . make-who-condition)
        (g$6484$14xsgv core-prim . make-warning)
        (g$6526$14xsgv core-prim . make-violation)
        (g$6650$14xsgv core-prim . make-undefined-violation)
        (g$6632$14xsgv core-prim . make-syntax-violation)
        (g$6498$14xsgv core-prim . make-serious-condition)
        (g$6588$14xsgv core-prim . make-non-continuable-violation)
        (g$6468$14xsgv core-prim . make-message-condition)
        (g$6616$14xsgv core-prim . make-lexical-violation)
        (g$6555$14xsgv core-prim . make-irritants-condition)
        (g$6602$14xsgv core-prim . make-implementation-restriction-violation)
        (g$6512$14xsgv core-prim . make-error)
        (g$6540$14xsgv core-prim . make-assertion-violation)
        (g$6617$14xsgv core-prim . lexical-violation?)
        (g$6557$14xsgv core-prim . irritants-condition?)
        (g$6603$14xsgv core-prim . implementation-restriction-violation?)
        (g$6513$14xsgv core-prim . error?)
        (g$6575$14xsgv core-prim . condition-who)
        (g$11910$14xsgv core-prim . condition-predicate)
        (g$6471$14xsgv core-prim . condition-message)
        (g$6558$14xsgv core-prim . condition-irritants)
        (g$11909$14xsgv core-prim . condition-accessor)
        (g$11908$14xsgv core-prim . condition)
        (g$6541$14xsgv core-prim . assertion-violation?)
        (g$11907$14xsgv core-prim . condition?)
        (g$11906$14xsgv core-prim . utf32->string)
        (g$11905$14xsgv core-prim . utf16->string)
        (g$11904$14xsgv core-prim . utf8->string)
        (g$11903$14xsgv core-prim . uint-list->bytevector)
        (g$11902$14xsgv core-prim . u8-list->bytevector)
        (g$11901$14xsgv core-prim . string->utf8)
        (g$11900$14xsgv core-prim . string->utf32)
        (g$11899$14xsgv core-prim . string->utf16)
        (g$11898$14xsgv core-prim . sint-list->bytevector)
        (g$6326$14xsgv core-prim . native-endianness)
        (g$11897$14xsgv core-prim . bytevector?)
        (g$11896$14xsgv core-prim . bytevector=?)
        (g$11895$14xsgv core-prim . bytevector-uint-set!)
        (g$11894$14xsgv core-prim . bytevector-uint-ref)
        (g$11893$14xsgv core-prim . bytevector-u8-set!)
        (g$11892$14xsgv core-prim . bytevector-u8-ref)
        (g$6347$14xsgv core-prim . bytevector-u64-set!)
        (g$6343$14xsgv core-prim . bytevector-u64-ref)
        (g$6349$14xsgv core-prim . bytevector-u64-native-set!)
        (g$6345$14xsgv core-prim . bytevector-u64-native-ref)
        (g$6339$14xsgv core-prim . bytevector-u32-set!)
        (g$6335$14xsgv core-prim . bytevector-u32-ref)
        (g$6341$14xsgv core-prim . bytevector-u32-native-set!)
        (g$6337$14xsgv core-prim . bytevector-u32-native-ref)
        (g$6331$14xsgv core-prim . bytevector-u16-set!)
        (g$6327$14xsgv core-prim . bytevector-u16-ref)
        (g$6333$14xsgv core-prim . bytevector-u16-native-set!)
        (g$6329$14xsgv core-prim . bytevector-u16-native-ref)
        (g$11891$14xsgv core-prim . bytevector-sint-set!)
        (g$11890$14xsgv core-prim . bytevector-sint-ref)
        (g$11889$14xsgv core-prim . bytevector-s8-set!)
        (g$11888$14xsgv core-prim . bytevector-s8-ref)
        (g$6348$14xsgv core-prim . bytevector-s64-set!)
        (g$6344$14xsgv core-prim . bytevector-s64-ref)
        (g$6350$14xsgv core-prim . bytevector-s64-native-set!)
        (g$6346$14xsgv core-prim . bytevector-s64-native-ref)
        (g$6340$14xsgv core-prim . bytevector-s32-set!)
        (g$6336$14xsgv core-prim . bytevector-s32-ref)
        (g$6342$14xsgv core-prim . bytevector-s32-native-set!)
        (g$6338$14xsgv core-prim . bytevector-s32-native-ref)
        (g$6332$14xsgv core-prim . bytevector-s16-set!)
        (g$6328$14xsgv core-prim . bytevector-s16-ref)
        (g$6334$14xsgv core-prim . bytevector-s16-native-set!)
        (g$6330$14xsgv core-prim . bytevector-s16-native-ref)
        (g$11887$14xsgv core-prim . bytevector-length)
        (g$11886$14xsgv core-prim . bytevector-ieee-single-set!)
        (g$11885$14xsgv core-prim . bytevector-ieee-single-ref)
        (g$6353$14xsgv core-prim . bytevector-ieee-single-native-set!)
        (g$6351$14xsgv core-prim . bytevector-ieee-single-native-ref)
        (g$11884$14xsgv core-prim . bytevector-ieee-double-set!)
        (g$11883$14xsgv core-prim . bytevector-ieee-double-ref)
        (g$6354$14xsgv core-prim . bytevector-ieee-double-native-set!)
        (g$6352$14xsgv core-prim . bytevector-ieee-double-native-ref)
        (g$11882$14xsgv core-prim . bytevector-fill!)
        (g$11881$14xsgv core-prim . bytevector-copy!)
        (g$11880$14xsgv core-prim . bytevector-copy)
        (g$11879$14xsgv core-prim . bytevector->uint-list)
        (g$11878$14xsgv core-prim . bytevector->u8-list)
        (g$11877$14xsgv core-prim . bytevector->sint-list)
        (g$6885$14xsgv core-prim . no-nans-violation?)
        (g$6871$14xsgv core-prim . no-infinities-violation?)
        (g$6884$14xsgv core-prim . make-no-nans-violation)
        (g$6870$14xsgv core-prim . make-no-infinities-violation)
        (g$11876$14xsgv core-prim . real->flonum)
        (g$11875$14xsgv core-prim . flzero?)
        (g$11874$14xsgv core-prim . fltruncate)
        (g$11873$14xsgv core-prim . fltan)
        (g$11872$14xsgv core-prim . flsqrt)
        (g$11871$14xsgv core-prim . flsin)
        (g$11870$14xsgv core-prim . flround)
        (g$11869$14xsgv core-prim . flpositive?)
        (g$11868$14xsgv core-prim . flonum?)
        (g$11867$14xsgv core-prim . flodd?)
        (g$11866$14xsgv core-prim . flnumerator)
        (g$11865$14xsgv core-prim . flnegative?)
        (g$11864$14xsgv core-prim . flnan?)
        (g$11863$14xsgv core-prim . flmod0)
        (g$11862$14xsgv core-prim . flmod)
        (g$11861$14xsgv core-prim . flmin)
        (g$11860$14xsgv core-prim . flmax)
        (g$11859$14xsgv core-prim . fllog)
        (g$11858$14xsgv core-prim . flinteger?)
        (g$11857$14xsgv core-prim . flinfinite?)
        (g$11856$14xsgv core-prim . flfloor)
        (g$11855$14xsgv core-prim . flfinite?)
        (g$11854$14xsgv core-prim . flexpt)
        (g$11853$14xsgv core-prim . flexp)
        (g$11852$14xsgv core-prim . fleven?)
        (g$11851$14xsgv core-prim . fldiv0-and-mod0)
        (g$11850$14xsgv core-prim . fldiv0)
        (g$11849$14xsgv core-prim . fldiv-and-mod)
        (g$11848$14xsgv core-prim . fldiv)
        (g$11847$14xsgv core-prim . fldenominator)
        (g$11846$14xsgv core-prim . flcos)
        (g$11845$14xsgv core-prim . flceiling)
        (g$11844$14xsgv core-prim . flatan)
        (g$11843$14xsgv core-prim . flasin)
        (g$11842$14xsgv core-prim . flacos)
        (g$11841$14xsgv core-prim . flabs)
        (g$11840$14xsgv core-prim . fl>?)
        (g$11839$14xsgv core-prim . fl>=?)
        (g$11838$14xsgv core-prim . fl=?)
        (g$11837$14xsgv core-prim . fl<?)
        (g$11836$14xsgv core-prim . fl<=?)
        (g$11835$14xsgv core-prim . fl/)
        (g$11834$14xsgv core-prim . fl-)
        (g$11833$14xsgv core-prim . fl+)
        (g$11832$14xsgv core-prim . fl*)
        (g$11831$14xsgv core-prim . fixnum->flonum)
        (g$11830$14xsgv core-prim . fxzero?)
        (g$11829$14xsgv core-prim . fxxor)
        (g$6816$14xsgv core-prim . fxrotate-bit-field)
        (g$11828$14xsgv core-prim . fxreverse-bit-field)
        (g$11827$14xsgv core-prim . fxpositive?)
        (g$11826$14xsgv core-prim . fxodd?)
        (g$11825$14xsgv core-prim . fxnot)
        (g$11824$14xsgv core-prim . fxnegative?)
        (g$11823$14xsgv core-prim . fxmod0)
        (g$11822$14xsgv core-prim . fxmod)
        (g$11821$14xsgv core-prim . fxmin)
        (g$11820$14xsgv core-prim . fxmax)
        (g$11819$14xsgv core-prim . fxlength)
        (g$11818$14xsgv core-prim . fxior)
        (g$6810$14xsgv core-prim . fxif)
        (g$11817$14xsgv core-prim . fxfirst-bit-set)
        (g$11816$14xsgv core-prim . fxeven?)
        (g$11815$14xsgv core-prim . fxdiv0-and-mod0)
        (g$11814$14xsgv core-prim . fxdiv0)
        (g$11813$14xsgv core-prim . fxdiv-and-mod)
        (g$11812$14xsgv core-prim . fxdiv)
        (g$6813$14xsgv core-prim . fxcopy-bit-field)
        (g$6811$14xsgv core-prim . fxcopy-bit)
        (g$11811$14xsgv core-prim . fxbit-set?)
        (g$6812$14xsgv core-prim . fxbit-field)
        (g$11810$14xsgv core-prim . fxbit-count)
        (g$6815$14xsgv core-prim . fxarithmetic-shift-right)
        (g$6814$14xsgv core-prim . fxarithmetic-shift-left)
        (g$11809$14xsgv core-prim . fxarithmetic-shift)
        (g$11808$14xsgv core-prim . fxand)
        (g$11807$14xsgv core-prim . fx>?)
        (g$11806$14xsgv core-prim . fx>=?)
        (g$11805$14xsgv core-prim . fx=?)
        (g$11804$14xsgv core-prim . fx<?)
        (g$11803$14xsgv core-prim . fx<=?)
        (g$11802$14xsgv core-prim . fx-/carry)
        (g$11801$14xsgv core-prim . fx-)
        (g$11800$14xsgv core-prim . fx+/carry)
        (g$11799$14xsgv core-prim . fx+)
        (g$11798$14xsgv core-prim . fx*/carry)
        (g$11797$14xsgv core-prim . fx*)
        (g$11796$14xsgv core-prim . greatest-fixnum)
        (g$11795$14xsgv core-prim . least-fixnum)
        (g$11794$14xsgv core-prim . fixnum-width)
        (g$11793$14xsgv core-prim . fixnum?)
        (g$6768$14xsgv core-prim . bitwise-rotate-bit-field)
        (g$11792$14xsgv core-prim . bitwise-reverse-bit-field)
        (g$11791$14xsgv core-prim . bitwise-length)
        (g$6762$14xsgv core-prim . bitwise-if)
        (g$11790$14xsgv core-prim . bitwise-first-bit-set)
        (g$6765$14xsgv core-prim . bitwise-copy-bit-field)
        (g$6763$14xsgv core-prim . bitwise-copy-bit)
        (g$11789$14xsgv core-prim . bitwise-bit-set?)
        (g$11788$14xsgv core-prim . bitwise-bit-field)
        (g$11787$14xsgv core-prim . bitwise-bit-count)
        (g$11786$14xsgv core-prim . bitwise-xor)
        (g$11785$14xsgv core-prim . bitwise-ior)
        (g$11784$14xsgv core-prim . bitwise-and)
        (g$11783$14xsgv core-prim . bitwise-not)
        (g$6767$14xsgv core-prim . bitwise-arithmetic-shift-right)
        (g$6766$14xsgv core-prim . bitwise-arithmetic-shift-left)
        (g$11782$14xsgv core-prim . bitwise-arithmetic-shift)
        (g$11781$14xsgv core-prim . zero?)
        (g$11780$14xsgv core-prim . vector?)
        (g$11779$14xsgv core-prim . vector-set!)
        (g$11778$14xsgv core-prim . vector-ref)
        (g$11777$14xsgv core-prim . vector-map)
        (g$11776$14xsgv core-prim . vector-length)
        (g$11775$14xsgv core-prim . vector-for-each)
        (g$11774$14xsgv core-prim . vector-fill!)
        (g$11773$14xsgv core-prim . vector->list)
        (g$11772$14xsgv core-prim . vector)
        (g$11771$14xsgv core-prim . values)
        (g$11770$14xsgv core-prim . truncate)
        (g$11769$14xsgv core-prim . tan)
        (g$11768$14xsgv core-prim . symbol?)
        (g$11767$14xsgv core-prim . symbol=?)
        (g$11766$14xsgv core-prim . symbol->string)
        (g$11765$14xsgv core-prim . substring)
        (g$11764$14xsgv core-prim . string?)
        (g$11763$14xsgv core-prim . string>?)
        (g$11762$14xsgv core-prim . string>=?)
        (g$11761$14xsgv core-prim . string=?)
        (g$11760$14xsgv core-prim . string<?)
        (g$11759$14xsgv core-prim . string<=?)
        (g$11758$14xsgv core-prim . string-ref)
        (g$11757$14xsgv core-prim . string-length)
        (g$11756$14xsgv core-prim . string-for-each)
        (g$11755$14xsgv core-prim . string-copy)
        (g$11754$14xsgv core-prim . string-append)
        (g$11753$14xsgv core-prim . string->symbol)
        (g$11752$14xsgv core-prim . string->number)
        (g$11751$14xsgv core-prim . string->list)
        (g$11750$14xsgv core-prim . string)
        (g$11749$14xsgv core-prim . sqrt)
        (g$11748$14xsgv core-prim . sin)
        (g$11747$14xsgv core-prim . round)
        (g$11746$14xsgv core-prim . reverse)
        (g$11745$14xsgv core-prim . real?)
        (g$11744$14xsgv core-prim . real-valued?)
        (g$11743$14xsgv core-prim . real-part)
        (g$5786$14xsgv core-prim . rationalize)
        (g$11742$14xsgv core-prim . rational?)
        (g$11741$14xsgv core-prim . rational-valued?)
        (g$11740$14xsgv core-prim . procedure?)
        (g$11739$14xsgv core-prim . positive?)
        (g$11738$14xsgv core-prim . pair?)
        (g$11737$14xsgv core-prim . odd?)
        (g$11736$14xsgv core-prim . numerator)
        (g$11735$14xsgv core-prim . number?)
        (g$11734$14xsgv core-prim . number->string)
        (g$11733$14xsgv core-prim . null?)
        (g$11732$14xsgv core-prim . not)
        (g$11731$14xsgv core-prim . negative?)
        (g$11730$14xsgv core-prim . nan?)
        (g$11729$14xsgv core-prim . min)
        (g$11728$14xsgv core-prim . max)
        (g$11727$14xsgv core-prim . map)
        (g$11726$14xsgv core-prim . make-vector)
        (g$11725$14xsgv core-prim . make-string)
        (g$11724$14xsgv core-prim . make-rectangular)
        (g$11723$14xsgv core-prim . make-polar)
        (g$11722$14xsgv core-prim . magnitude)
        (g$11721$14xsgv core-prim . log)
        (g$11720$14xsgv core-prim . list?)
        (g$11719$14xsgv core-prim . list-tail)
        (g$11718$14xsgv core-prim . list-ref)
        (g$11717$14xsgv core-prim . list->vector)
        (g$11716$14xsgv core-prim . list->string)
        (g$11715$14xsgv core-prim . list)
        (g$11714$14xsgv core-prim . length)
        (g$11713$14xsgv core-prim . lcm)
        (g$11712$14xsgv core-prim . integer?)
        (g$11711$14xsgv core-prim . integer-valued?)
        (g$11710$14xsgv core-prim . integer->char)
        (g$11709$14xsgv core-prim . infinite?)
        (g$11708$14xsgv core-prim . inexact?)
        (g$11707$14xsgv core-prim . inexact)
        (g$11706$14xsgv core-prim . imag-part)
        (g$11705$14xsgv core-prim . gcd)
        (g$11704$14xsgv core-prim . for-each)
        (g$11703$14xsgv core-prim . floor)
        (g$11702$14xsgv core-prim . finite?)
        (g$11701$14xsgv core-prim . expt)
        (g$11700$14xsgv core-prim . exp)
        (g$11699$14xsgv core-prim . exact?)
        (g$11698$14xsgv core-prim . exact-integer-sqrt)
        (g$11697$14xsgv core-prim . exact)
        (g$11696$14xsgv core-prim . even?)
        (g$11695$14xsgv core-prim . error)
        (g$11694$14xsgv core-prim . eqv?)
        (g$11693$14xsgv core-prim . equal?)
        (g$11692$14xsgv core-prim . eq?)
        (g$11691$14xsgv core-prim . dynamic-wind)
        (g$11690$14xsgv core-prim . div0-and-mod0)
        (g$11689$14xsgv core-prim . mod0)
        (g$11688$14xsgv core-prim . div0)
        (g$11687$14xsgv core-prim . div-and-mod)
        (g$11686$14xsgv core-prim . mod)
        (g$11685$14xsgv core-prim . div)
        (g$11684$14xsgv core-prim . denominator)
        (g$11683$14xsgv core-prim . cos)
        (g$11682$14xsgv core-prim . cons)
        (g$11681$14xsgv core-prim . complex?)
        (g$11680$14xsgv core-prim . char?)
        (g$11679$14xsgv core-prim . char>?)
        (g$11678$14xsgv core-prim . char>=?)
        (g$11677$14xsgv core-prim . char=?)
        (g$11676$14xsgv core-prim . char<?)
        (g$11675$14xsgv core-prim . char<=?)
        (g$11674$14xsgv core-prim . char->integer)
        (g$11673$14xsgv core-prim . ceiling)
        (g$11672$14xsgv core-prim . call-with-values)
        (g$11671$14xsgv core-prim . call/cc)
        (g$11670$14xsgv core-prim . call-with-current-continuation)
        (g$5785$14xsgv core-prim . cddddr)
        (g$5784$14xsgv core-prim . cdddar)
        (g$5783$14xsgv core-prim . cddadr)
        (g$5782$14xsgv core-prim . cddaar)
        (g$5781$14xsgv core-prim . cdaddr)
        (g$5780$14xsgv core-prim . cdadar)
        (g$5779$14xsgv core-prim . cdaadr)
        (g$5778$14xsgv core-prim . cdaaar)
        (g$5777$14xsgv core-prim . cadddr)
        (g$5776$14xsgv core-prim . caddar)
        (g$5775$14xsgv core-prim . cadadr)
        (g$5774$14xsgv core-prim . cadaar)
        (g$5773$14xsgv core-prim . caaddr)
        (g$5772$14xsgv core-prim . caadar)
        (g$5771$14xsgv core-prim . caaadr)
        (g$5770$14xsgv core-prim . caaaar)
        (g$5769$14xsgv core-prim . cdddr)
        (g$5768$14xsgv core-prim . cddar)
        (g$5767$14xsgv core-prim . cdadr)
        (g$5766$14xsgv core-prim . cdaar)
        (g$5765$14xsgv core-prim . caddr)
        (g$5764$14xsgv core-prim . cadar)
        (g$5763$14xsgv core-prim . caadr)
        (g$5762$14xsgv core-prim . caaar)
        (g$5761$14xsgv core-prim . cddr)
        (g$5760$14xsgv core-prim . cdar)
        (g$5759$14xsgv core-prim . cadr)
        (g$5758$14xsgv core-prim . caar)
        (g$11669$14xsgv core-prim . cdr)
        (g$11668$14xsgv core-prim . car)
        (g$11667$14xsgv core-prim . boolean?)
        (g$11666$14xsgv core-prim . boolean=?)
        (g$11665$14xsgv core-prim . atan)
        (g$11664$14xsgv core-prim . assertion-violation)
        (g$11663$14xsgv core-prim . asin)
        (g$11662$14xsgv core-prim . apply)
        (g$11661$14xsgv core-prim . append)
        (g$11660$14xsgv core-prim . angle)
        (g$11659$14xsgv core-prim . acos)
        (g$11658$14xsgv core-prim . abs)
        (g$11657$14xsgv core-prim . /)
        (g$11656$14xsgv core-prim . *)
        (g$11655$14xsgv core-prim . -)
        (g$11654$14xsgv core-prim . +)
        (g$11653$14xsgv core-prim . >=)
        (g$11652$14xsgv core-prim . >)
        (g$11651$14xsgv core-prim . =)
        (g$11650$14xsgv core-prim . <=)
        (g$11649$14xsgv core-prim . <)
        (g$11648$14xsgv core-prim . make-record-printer)
        (g$11647$14xsgv core-prim . eqv-hash)
        (g$11646$14xsgv core-prim . eq-hash)
        (g$11645$14xsgv core-prim . reverse!)
        (g$6666$14xsgv core-prim . make-promise)
        (g$11485$14xsgv core-prim . load/args)
        (g$7236$14xsgv core-prim . printf)
        (g$7237$14xsgv core-prim . fprintf)
        (g$7238$14xsgv core-prim . format)
        (g$11644$14xsgv core-prim . get-arity)
        (g$11643$14xsgv core-prim . gc-collect)
        (g$11642$14xsgv core-prim . clr-type?)
        (g$11641$14xsgv core-prim . get-clr-type)
        (g$11640$14xsgv core-prim . get-command-line)
        (g$11639$14xsgv core-prim . vector-append)
        (g$11638$14xsgv core-prim . vector-filter)
        (g$11637$14xsgv core-prim . vector-reverse!)
        (g$11636$14xsgv core-prim . vector-contains?)
        (g$11635$14xsgv core-prim . vector-index-of)
        (g$11634$14xsgv core-prim . vector-copy)
        (g$11633$14xsgv core-prim . vector-binary-search)
        (g$11632$14xsgv core-prim . get-output-string)
        (g$11631$14xsgv core-prim . open-output-string)
        (g$11630$14xsgv core-prim . open-input-string)
        (g$11629$14xsgv core-prim . string-format)
        (g$11482$14xsgv core-prim . trace-printer)
        (g$11628$14xsgv core-prim . make-traced-procedure)
        (g$7258$14xsgv core-prim . make-traced-macro)
        (g$8545$14xsgv core-prim . assertion-error)
        (g$11627$14xsgv core-prim . pmap)
        (g$11626$14xsgv core-prim . time-it)
        (g$7263$14xsgv core-prim . make-parameter)
        (g$11625$14xsgv core-prim . library-locator)
        (g$11624$14xsgv core-prim . get-library-paths)
        (g$8526$14xsgv core-prim . environment-symbols)
        (g$8525$14xsgv core-prim . interaction-environment-symbols)
        (g$7694$14xsgv core-prim . library-path)
        (g$7695$14xsgv core-prim . library-extensions)
        (g$7715$14xsgv core-prim . installed-libraries)
        (g$8531$14xsgv core-prim . expand)
        (g$11623$14xsgv $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11622$14xsgv $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11621$14xsgv $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11620$14xsgv $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11619$14xsgv $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11618$14xsgv
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11617$14xsgv
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11616$14xsgv
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11615$14xsgv
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11614$14xsgv $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11613$14xsgv
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11612$14xsgv $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11611$14xsgv $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11610$14xsgv $core-rtd &i/o-rtd &i/o-rcd)
        (g$11609$14xsgv $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11608$14xsgv $core-rtd &undefined-rtd &undefined-rcd)
        (g$11607$14xsgv $core-rtd &syntax-rtd &syntax-rcd)
        (g$11606$14xsgv $core-rtd &lexical-rtd &lexical-rcd)
        (g$11605$14xsgv
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11604$14xsgv $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11603$14xsgv $core-rtd &who-rtd &who-rcd)
        (g$11602$14xsgv $core-rtd &irritants-rtd &irritants-rcd)
        (g$11601$14xsgv $core-rtd &assertion-rtd &assertion-rcd)
        (g$11600$14xsgv $core-rtd &violation-rtd &violation-rcd)
        (g$11599$14xsgv $core-rtd &error-rtd &error-rcd)
        (g$11598$14xsgv $core-rtd &serious-rtd &serious-rcd)
        (g$11597$14xsgv $core-rtd &warning-rtd &warning-rcd)
        (g$11596$14xsgv $core-rtd &message-rtd &message-rcd)
        (g$11595$14xsgv $core-rtd &condition-rtd &condition-rcd)
        (g$11594$14xsgv macro . define-condition-type)
        (g$11593$14xsgv macro . define-enumeration)
        (g$11592$14xsgv macro . define-record-type)
        (g$11591$14xsgv macro . parent-rtd)
        (g$11590$14xsgv macro . nongenerative)
        (g$11589$14xsgv macro . opaque)
        (g$11588$14xsgv macro . sealed)
        (g$11587$14xsgv macro . protocol)
        (g$11586$14xsgv macro . parent)
        (g$11585$14xsgv macro . immutable)
        (g$11584$14xsgv macro . mutable)
        (g$11583$14xsgv macro . fields)
        (g$11582$14xsgv macro . error-handling-mode)
        (g$11581$14xsgv macro . file-options)
        (g$11580$14xsgv macro . buffer-mode)
        (g$11579$14xsgv macro . eol-style)
        (g$11578$14xsgv macro . guard)
        (g$11577$14xsgv macro . trace-letrec-syntax)
        (g$11576$14xsgv macro . trace-let-syntax)
        (g$11575$14xsgv macro . trace-define-syntax)
        (g$11574$14xsgv macro . trace-define)
        (g$11573$14xsgv macro . trace-lambda)
        (g$11572$14xsgv macro . unsyntax-splicing)
        (g$11571$14xsgv macro . unsyntax)
        (g$11570$14xsgv macro . unquote-splicing)
        (g$11569$14xsgv macro . unquote)
        (g$11568$14xsgv macro . _)
        (g$11567$14xsgv macro . else)
        (g$11566$14xsgv macro . =>)
        (g$11565$14xsgv macro . ...)
        (g$11564$14xsgv macro . assert)
        (g$11563$14xsgv macro . endianness)
        (g$11562$14xsgv macro . delay)
        (g$11561$14xsgv macro . time)
        (g$11560$14xsgv macro . or)
        (g$11559$14xsgv macro . and)
        (g$11558$14xsgv macro . do)
        (g$11557$14xsgv macro . cond)
        (g$11556$14xsgv macro . let*)
        (g$11555$14xsgv macro . let)
        (g$11554$14xsgv macro . identifier-syntax)
        (g$11553$14xsgv macro . with-syntax)
        (g$11552$14xsgv macro . quasisyntax)
        (g$11551$14xsgv macro . quasiquote)
        (g$11550$14xsgv macro . syntax-rules)
        (g$11549$14xsgv macro . include-into)
        (g$11548$14xsgv macro . include)
        (g$11547$14xsgv macro . define-struct)
        (g$11546$14xsgv macro . let-values)
        (g$11545$14xsgv macro . let*-values)
        (g$11544$14xsgv core-macro . record-constructor-descriptor)
        (g$11543$14xsgv core-macro . record-type-descriptor)
        (g$11542$14xsgv core-macro . fluid-let-syntax)
        (g$11541$14xsgv macro . case)
        (g$11540$14xsgv macro . parameterize)
        (g$11539$14xsgv macro . unless)
        (g$11538$14xsgv macro . when)
        (g$11537$14xsgv core-macro . if)
        (g$11536$14xsgv core-macro . letrec*)
        (g$11535$14xsgv core-macro . letrec)
        (g$11534$14xsgv core-macro . type-descriptor)
        (g$11533$14xsgv core-macro . case-lambda)
        (g$11532$14xsgv core-macro . lambda)
        (g$11531$14xsgv core-macro . syntax)
        (g$11530$14xsgv core-macro . syntax-case)
        (g$11529$14xsgv core-macro . quote)
        (g$11528$14xsgv core-macro . foreign-call)
        (g$11527$14xsgv letrec-syntax)
        (g$11526$14xsgv let-syntax)
        (g$11525$14xsgv set!)
        (g$11524$14xsgv import)
        (g$11523$14xsgv library)
        (g$11522$14xsgv begin)
        (g$11521$14xsgv module)
        (g$11520$14xsgv define-syntax)
        (g$11519$14xsgv define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$6927$14xsgv
      'g$12194$14xsgv
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12073$14xsgv)
        (eval-core . g$12072$14xsgv)
        (set-symbol-value! . g$12071$14xsgv)
        (symbol-value . g$12070$14xsgv)
        (gensym . g$12068$14xsgv)
        (void . g$12067$14xsgv))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$10945$14xsgv
     g$trace-printer$10985$14xsgv
     (g$make-parameter$6381$14xsgv write))
   (g$command-line$10946$14xsgv
     g$command-line$10986$14xsgv
     (g$make-parameter$6381$14xsgv (get-command-line)))
   (g$local-library-path$10947$14xsgv
     g$local-library-path$10987$14xsgv
     (case-lambda
       ((g$filename$10958$14xsgv)
        (cons
          (g$get-directory-name$5242$14xsgv g$filename$10958$14xsgv)
          (g$library-path$6911$14xsgv)))))
   (g$load/args$10948$14xsgv
     g$load/args$10988$14xsgv
     (case-lambda
       ((g$filename$10959$14xsgv . g$args$10960$14xsgv)
        (begin
          (apply
            g$load-r6rs-top-level$10955$14xsgv
            g$filename$10959$14xsgv
            'load
            g$args$10960$14xsgv)
          (void)))))
   (g$load$10949$14xsgv
     g$load$10989$14xsgv
     (case-lambda
       ((g$filename$10961$14xsgv)
        (begin
          (apply
            g$load-r6rs-top-level$10955$14xsgv
            g$filename$10961$14xsgv
            'load
            (cdr (g$command-line$10946$14xsgv)))
          (void)))))
   (g$ironscheme-build$10950$14xsgv
     g$ironscheme-build$10990$14xsgv
     (case-lambda (() (g$load$10949$14xsgv '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$10951$14xsgv
     g$eval-top-level$10991$14xsgv
     (case-lambda
       ((g$x$10962$14xsgv)
        (g$eval$10920$14xsgv
          g$x$10962$14xsgv
          (g$interaction-environment$10943$14xsgv)))))
   (g$compile-system-libraries$10952$14xsgv
     g$compile-system-libraries$10992$14xsgv
     (case-lambda
       (()
        (g$eval-top-level$10951$14xsgv
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$10953$14xsgv
     g$compile$10993$14xsgv
     (case-lambda
       ((g$filename$10963$14xsgv)
        (g$load-r6rs-top-level$10955$14xsgv g$filename$10963$14xsgv 'compile))))
   (g$compile->closure$10954$14xsgv
     g$compile->closure$10994$14xsgv
     (case-lambda
       ((g$filename$10964$14xsgv)
        (g$load-r6rs-top-level$10955$14xsgv g$filename$10964$14xsgv 'closure))))
   (g$load-r6rs-top-level$10955$14xsgv
     g$load-r6rs-top-level$10995$14xsgv
     (case-lambda
       ((g$filename$10965$14xsgv g$how$10966$14xsgv . g$args$10967$14xsgv)
        ((case-lambda
           ((g$library-path$10970$14xsgv g$library-path$10971$14xsgv)
            ((case-lambda
               ((g$swap$10972$14xsgv)
                (dynamic-wind
                  g$swap$10972$14xsgv
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$10973$14xsgv)
                         ((case-lambda
                            ((g$t$10974$14xsgv)
                             (if (memv g$t$10974$14xsgv '(closure))
                               (g$pre-compile-r6rs-top-level$10942$14xsgv
                                 g$x*$10973$14xsgv)
                               (if (memv g$t$10974$14xsgv '(load))
                                 ((case-lambda
                                    ((g$command-line$10977$14xsgv
                                       g$command-line$10978$14xsgv)
                                     ((case-lambda
                                        ((g$swap$10979$14xsgv)
                                         (dynamic-wind
                                           g$swap$10979$14xsgv
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$10941$14xsgv
                                                 g$x*$10973$14xsgv))))
                                           g$swap$10979$14xsgv)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$10980$14xsgv)
                                             (begin
                                               (g$command-line$10977$14xsgv
                                                 g$command-line$10978$14xsgv)
                                               (set! g$command-line$10978$14xsgv
                                                 g$t$10980$14xsgv))))
                                          (g$command-line$10977$14xsgv)))))))
                                  g$command-line$10946$14xsgv
                                  (cons
                                    g$filename$10965$14xsgv
                                    (map (case-lambda
                                           ((g$x$10981$14xsgv)
                                            (g$format$6296$14xsgv
                                              '"~a"
                                              g$x$10981$14xsgv)))
                                         g$args$10967$14xsgv)))
                                 (if (memv g$t$10974$14xsgv '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$10941$14xsgv
                                       g$x*$10973$14xsgv)
                                     (g$serialize-all$6915$14xsgv
                                       serialize-library
                                       g$compile-core-expr$6629$14xsgv))
                                   (if '#f '#f (void)))))))
                          g$how$10966$14xsgv)))
                      (g$with-input-from-file$6127$14xsgv
                        g$filename$10965$14xsgv
                        (case-lambda
                          (()
                           ((letrec ((g$f$10982$14xsgv
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$10983$14xsgv)
                                              (if (eof-object? g$x$10983$14xsgv)
                                                '()
                                                (cons
                                                  g$x$10983$14xsgv
                                                  (g$f$10982$14xsgv)))))
                                           (read-annotated))))))
                              g$f$10982$14xsgv))))))))
                  g$swap$10972$14xsgv)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$10984$14xsgv)
                    (begin
                      (g$library-path$10970$14xsgv g$library-path$10971$14xsgv)
                      (set! g$library-path$10971$14xsgv g$t$10984$14xsgv))))
                 (g$library-path$10970$14xsgv)))))))
         g$library-path$6911$14xsgv
         (g$local-library-path$10947$14xsgv g$filename$10965$14xsgv)))))
   (g$fo$10956$14xsgv
     g$fo$10996$14xsgv
     (g$make-enumeration$6258$14xsgv '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$6916$14xsgv
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$10957$14xsgv)
         (if (g$serious-condition?$5625$14xsgv g$ex$10957$14xsgv)
           (raise g$ex$10957$14xsgv)
           (begin (display g$ex$10957$14xsgv) (newline))))))
    (set-symbol-value! 'load g$load$10949$14xsgv)
    (set-symbol-value! 'compile g$compile$10953$14xsgv)
    (set-symbol-value! 'compile->closure g$compile->closure$10954$14xsgv)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$10951$14xsgv)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$10913$14xsgv)
    (set-symbol-value! 'expanded2core g$expanded->core$6628$14xsgv)
    (set-symbol-value! 'trace-printer g$trace-printer$10945$14xsgv)
    (g$file-options-constructor$6382$14xsgv
      (g$enum-set-constructor$6261$14xsgv g$fo$10956$14xsgv))
    (g$library-path$6911$14xsgv (get-library-paths))))

