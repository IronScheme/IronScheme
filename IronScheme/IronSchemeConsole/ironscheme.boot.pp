;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme lists)
  ((g$find$4876$1M&0Ej
     g$find$4981$1M&0Ej
     (case-lambda
       ((g$proc$4898$1M&0Ej g$l$4899$1M&0Ej)
        (if (null? g$l$4899$1M&0Ej)
          '#f
          ((case-lambda
             ((g$e$4900$1M&0Ej)
              (if (g$proc$4898$1M&0Ej g$e$4900$1M&0Ej)
                g$e$4900$1M&0Ej
                (g$find$4876$1M&0Ej g$proc$4898$1M&0Ej (cdr g$l$4899$1M&0Ej)))))
           (car g$l$4899$1M&0Ej))))))
   (g$partition$4877$1M&0Ej
     g$partition$4982$1M&0Ej
     (case-lambda
       ((g$proc$4901$1M&0Ej g$l$4902$1M&0Ej)
        ((letrec ((g$f$4903$1M&0Ej
                    (case-lambda
                      ((g$l$4904$1M&0Ej g$a$4905$1M&0Ej g$b$4906$1M&0Ej)
                       (if (null? g$l$4904$1M&0Ej)
                         (values
                           (reverse! g$a$4905$1M&0Ej)
                           (reverse! g$b$4906$1M&0Ej))
                         ((case-lambda
                            ((g$e$4907$1M&0Ej)
                             (if (g$proc$4901$1M&0Ej g$e$4907$1M&0Ej)
                               (g$f$4903$1M&0Ej
                                 (cdr g$l$4904$1M&0Ej)
                                 (cons g$e$4907$1M&0Ej g$a$4905$1M&0Ej)
                                 g$b$4906$1M&0Ej)
                               (g$f$4903$1M&0Ej
                                 (cdr g$l$4904$1M&0Ej)
                                 g$a$4905$1M&0Ej
                                 (cons g$e$4907$1M&0Ej g$b$4906$1M&0Ej)))))
                          (car g$l$4904$1M&0Ej)))))))
           g$f$4903$1M&0Ej)
         g$l$4902$1M&0Ej
         '()
         '()))))
   (g$remp$4878$1M&0Ej
     g$remp$4983$1M&0Ej
     (case-lambda
       ((g$proc$4908$1M&0Ej g$l$4909$1M&0Ej)
        ((letrec ((g$f$4910$1M&0Ej
                    (case-lambda
                      ((g$l$4911$1M&0Ej g$a$4912$1M&0Ej)
                       (if (null? g$l$4911$1M&0Ej)
                         (reverse! g$a$4912$1M&0Ej)
                         ((case-lambda
                            ((g$e$4913$1M&0Ej)
                             (if (g$proc$4908$1M&0Ej g$e$4913$1M&0Ej)
                               (g$f$4910$1M&0Ej
                                 (cdr g$l$4911$1M&0Ej)
                                 g$a$4912$1M&0Ej)
                               (g$f$4910$1M&0Ej
                                 (cdr g$l$4911$1M&0Ej)
                                 (cons g$e$4913$1M&0Ej g$a$4912$1M&0Ej)))))
                          (car g$l$4911$1M&0Ej)))))))
           g$f$4910$1M&0Ej)
         g$l$4909$1M&0Ej
         '()))))
   (g$filter$4879$1M&0Ej
     g$filter$4984$1M&0Ej
     (case-lambda
       ((g$proc$4914$1M&0Ej g$l$4915$1M&0Ej)
        ((letrec ((g$f$4916$1M&0Ej
                    (case-lambda
                      ((g$l$4917$1M&0Ej g$a$4918$1M&0Ej)
                       (if (null? g$l$4917$1M&0Ej)
                         (reverse! g$a$4918$1M&0Ej)
                         ((case-lambda
                            ((g$e$4919$1M&0Ej)
                             (if (g$proc$4914$1M&0Ej g$e$4919$1M&0Ej)
                               (g$f$4916$1M&0Ej
                                 (cdr g$l$4917$1M&0Ej)
                                 (cons g$e$4919$1M&0Ej g$a$4918$1M&0Ej))
                               (g$f$4916$1M&0Ej
                                 (cdr g$l$4917$1M&0Ej)
                                 g$a$4918$1M&0Ej))))
                          (car g$l$4917$1M&0Ej)))))))
           g$f$4916$1M&0Ej)
         g$l$4915$1M&0Ej
         '()))))
   (g$assq$4880$1M&0Ej
     g$assq$4985$1M&0Ej
     (case-lambda
       ((g$obj$4920$1M&0Ej g$lst$4921$1M&0Ej)
        (if (null? g$lst$4921$1M&0Ej)
          '#f
          ((case-lambda
             ((g$obj$4922$1M&0Ej g$t$4923$1M&0Ej g$r$4924$1M&0Ej)
              (if (eq? g$obj$4922$1M&0Ej (car g$t$4923$1M&0Ej))
                g$t$4923$1M&0Ej
                (g$assq$4880$1M&0Ej g$obj$4922$1M&0Ej g$r$4924$1M&0Ej))))
           g$obj$4920$1M&0Ej
           (car g$lst$4921$1M&0Ej)
           (cdr g$lst$4921$1M&0Ej))))))
   (g$assv$4881$1M&0Ej
     g$assv$4986$1M&0Ej
     (case-lambda
       ((g$obj$4925$1M&0Ej g$lst$4926$1M&0Ej)
        (if (null? g$lst$4926$1M&0Ej)
          '#f
          ((case-lambda
             ((g$c$4927$1M&0Ej)
              (if (eqv? g$obj$4925$1M&0Ej (car g$c$4927$1M&0Ej))
                g$c$4927$1M&0Ej
                (g$assv$4881$1M&0Ej
                  g$obj$4925$1M&0Ej
                  (cdr g$lst$4926$1M&0Ej)))))
           (car g$lst$4926$1M&0Ej))))))
   (g$assoc$4882$1M&0Ej
     g$assoc$4987$1M&0Ej
     (case-lambda
       ((g$obj$4928$1M&0Ej g$lst$4929$1M&0Ej)
        (if (null? g$lst$4929$1M&0Ej)
          '#f
          ((case-lambda
             ((g$c$4930$1M&0Ej)
              (if (equal? g$obj$4928$1M&0Ej (car g$c$4930$1M&0Ej))
                g$c$4930$1M&0Ej
                (g$assoc$4882$1M&0Ej
                  g$obj$4928$1M&0Ej
                  (cdr g$lst$4929$1M&0Ej)))))
           (car g$lst$4929$1M&0Ej))))))
   (g$assp$4883$1M&0Ej
     g$assp$4988$1M&0Ej
     (case-lambda
       ((g$p?$4931$1M&0Ej g$lst$4932$1M&0Ej)
        (if (null? g$lst$4932$1M&0Ej)
          '#f
          ((case-lambda
             ((g$p?$4933$1M&0Ej g$t$4934$1M&0Ej g$r$4935$1M&0Ej)
              (if (g$p?$4933$1M&0Ej (car g$t$4934$1M&0Ej))
                g$t$4934$1M&0Ej
                (g$assp$4883$1M&0Ej g$p?$4933$1M&0Ej g$r$4935$1M&0Ej))))
           g$p?$4931$1M&0Ej
           (car g$lst$4932$1M&0Ej)
           (cdr g$lst$4932$1M&0Ej))))))
   (g$memq$4884$1M&0Ej
     g$memq$4989$1M&0Ej
     (case-lambda
       ((g$obj$4936$1M&0Ej g$lst$4937$1M&0Ej)
        (if (null? g$lst$4937$1M&0Ej)
          '#f
          (if (eq? g$obj$4936$1M&0Ej (car g$lst$4937$1M&0Ej))
            g$lst$4937$1M&0Ej
            (g$memq$4884$1M&0Ej g$obj$4936$1M&0Ej (cdr g$lst$4937$1M&0Ej)))))))
   (g$memv$4885$1M&0Ej
     g$memv$4990$1M&0Ej
     (case-lambda
       ((g$obj$4938$1M&0Ej g$lst$4939$1M&0Ej)
        (if (null? g$lst$4939$1M&0Ej)
          '#f
          (if (eqv? g$obj$4938$1M&0Ej (car g$lst$4939$1M&0Ej))
            g$lst$4939$1M&0Ej
            (g$memv$4885$1M&0Ej g$obj$4938$1M&0Ej (cdr g$lst$4939$1M&0Ej)))))))
   (g$member$4886$1M&0Ej
     g$member$4991$1M&0Ej
     (case-lambda
       ((g$obj$4940$1M&0Ej g$lst$4941$1M&0Ej)
        (if (null? g$lst$4941$1M&0Ej)
          '#f
          (if (equal? g$obj$4940$1M&0Ej (car g$lst$4941$1M&0Ej))
            g$lst$4941$1M&0Ej
            (g$member$4886$1M&0Ej
              g$obj$4940$1M&0Ej
              (cdr g$lst$4941$1M&0Ej)))))))
   (g$memp$4887$1M&0Ej
     g$memp$4992$1M&0Ej
     (case-lambda
       ((g$p?$4942$1M&0Ej g$lst$4943$1M&0Ej)
        (if (null? g$lst$4943$1M&0Ej)
          '#f
          (if (g$p?$4942$1M&0Ej (car g$lst$4943$1M&0Ej))
            g$lst$4943$1M&0Ej
            (g$memp$4887$1M&0Ej g$p?$4942$1M&0Ej (cdr g$lst$4943$1M&0Ej)))))))
   (g$all-empty?$4888$1M&0Ej
     g$all-empty?$4993$1M&0Ej
     (case-lambda
       ((g$ls$4944$1M&0Ej)
        ((case-lambda
           ((g$t$4945$1M&0Ej)
            (if g$t$4945$1M&0Ej
              g$t$4945$1M&0Ej
              (begin
                '#f
                (if (null? (car g$ls$4944$1M&0Ej))
                  (begin '#f (g$all-empty?$4888$1M&0Ej (cdr g$ls$4944$1M&0Ej)))
                  '#f)))))
         (null? g$ls$4944$1M&0Ej)))))
   (g$split$4889$1M&0Ej
     g$split$4994$1M&0Ej
     (case-lambda
       ((g$ls$4946$1M&0Ej)
        (if (null? g$ls$4946$1M&0Ej)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$4889$1M&0Ej (cdr g$ls$4946$1M&0Ej))))
            (case-lambda
              ((g$cars$4947$1M&0Ej g$cdrs$4948$1M&0Ej)
               ((case-lambda
                  ((g$a$4949$1M&0Ej)
                   (values
                     (cons (car g$a$4949$1M&0Ej) g$cars$4947$1M&0Ej)
                     (cons (cdr g$a$4949$1M&0Ej) g$cdrs$4948$1M&0Ej))))
                (car g$ls$4946$1M&0Ej)))))))))
   (g$for-all$4890$1M&0Ej
     g$for-all$4995$1M&0Ej
     (case-lambda
       ((g$f$4950$1M&0Ej . g$args$4951$1M&0Ej)
        (if (g$all-empty?$4888$1M&0Ej g$args$4951$1M&0Ej)
          '#t
          (call-with-values
            (case-lambda (() (g$split$4889$1M&0Ej g$args$4951$1M&0Ej)))
            (case-lambda
              ((g$cars$4952$1M&0Ej g$cdrs$4953$1M&0Ej)
               (if (g$all-empty?$4888$1M&0Ej g$cdrs$4953$1M&0Ej)
                 (apply g$f$4950$1M&0Ej g$cars$4952$1M&0Ej)
                 (if (apply g$f$4950$1M&0Ej g$cars$4952$1M&0Ej)
                   (begin
                     '#f
                     (apply
                       g$for-all$4890$1M&0Ej
                       g$f$4950$1M&0Ej
                       g$cdrs$4953$1M&0Ej))
                   '#f)))))))))
   (g$exists$4891$1M&0Ej
     g$exists$4996$1M&0Ej
     (case-lambda
       ((g$f$4954$1M&0Ej . g$args$4955$1M&0Ej)
        (if (g$all-empty?$4888$1M&0Ej g$args$4955$1M&0Ej)
          '#f
          (call-with-values
            (case-lambda (() (g$split$4889$1M&0Ej g$args$4955$1M&0Ej)))
            (case-lambda
              ((g$cars$4956$1M&0Ej g$cdrs$4957$1M&0Ej)
               ((case-lambda
                  ((g$t$4958$1M&0Ej)
                   (if g$t$4958$1M&0Ej
                     g$t$4958$1M&0Ej
                     (begin
                       '#f
                       (apply
                         g$exists$4891$1M&0Ej
                         g$f$4954$1M&0Ej
                         g$cdrs$4957$1M&0Ej)))))
                (apply g$f$4954$1M&0Ej g$cars$4956$1M&0Ej)))))))))
   (g$cons*$4892$1M&0Ej
     g$cons*$4997$1M&0Ej
     (case-lambda
       ((g$a$4959$1M&0Ej . g$rest$4960$1M&0Ej)
        ((letrec ((g$f$4961$1M&0Ej
                    (case-lambda
                      ((g$a$4962$1M&0Ej g$rest$4963$1M&0Ej)
                       (if (null? g$rest$4963$1M&0Ej)
                         g$a$4962$1M&0Ej
                         (cons
                           g$a$4962$1M&0Ej
                           (g$f$4961$1M&0Ej
                             (car g$rest$4963$1M&0Ej)
                             (cdr g$rest$4963$1M&0Ej))))))))
           g$f$4961$1M&0Ej)
         g$a$4959$1M&0Ej
         g$rest$4960$1M&0Ej))))
   (g$fold-left$4893$1M&0Ej
     g$fold-left$4998$1M&0Ej
     (case-lambda
       ((g$combine$4964$1M&0Ej
          g$nil$4965$1M&0Ej
          g$list1$4966$1M&0Ej
          .
          g$lists$4967$1M&0Ej)
        (if (null? g$list1$4966$1M&0Ej)
          g$nil$4965$1M&0Ej
          (apply
            g$fold-left$4893$1M&0Ej
            (g$cons*$4892$1M&0Ej
              g$combine$4964$1M&0Ej
              (apply
                g$combine$4964$1M&0Ej
                (g$cons*$4892$1M&0Ej
                  g$nil$4965$1M&0Ej
                  (car g$list1$4966$1M&0Ej)
                  (map car g$lists$4967$1M&0Ej)))
              (cdr g$list1$4966$1M&0Ej)
              (map cdr g$lists$4967$1M&0Ej)))))))
   (g$fold-right$4894$1M&0Ej
     g$fold-right$4999$1M&0Ej
     (case-lambda
       ((g$combine$4968$1M&0Ej
          g$nil$4969$1M&0Ej
          g$list1$4970$1M&0Ej
          .
          g$lists$4971$1M&0Ej)
        (if (null? g$list1$4970$1M&0Ej)
          g$nil$4969$1M&0Ej
          (apply
            g$combine$4968$1M&0Ej
            (append
              (list (car g$list1$4970$1M&0Ej))
              (map car g$lists$4971$1M&0Ej)
              (list
                (apply
                  g$fold-right$4894$1M&0Ej
                  (g$cons*$4892$1M&0Ej
                    g$combine$4968$1M&0Ej
                    g$nil$4969$1M&0Ej
                    (cdr g$list1$4970$1M&0Ej)
                    (map cdr g$lists$4971$1M&0Ej))))))))))
   (g$remove$4895$1M&0Ej
     g$remove$5000$1M&0Ej
     (case-lambda
       ((g$obj$4972$1M&0Ej g$list$4973$1M&0Ej)
        (g$remp$4878$1M&0Ej
          (case-lambda
            ((g$x$4974$1M&0Ej) (equal? g$obj$4972$1M&0Ej g$x$4974$1M&0Ej)))
          g$list$4973$1M&0Ej))))
   (g$remv$4896$1M&0Ej
     g$remv$5001$1M&0Ej
     (case-lambda
       ((g$obj$4975$1M&0Ej g$list$4976$1M&0Ej)
        (g$remp$4878$1M&0Ej
          (case-lambda
            ((g$x$4977$1M&0Ej) (eqv? g$obj$4975$1M&0Ej g$x$4977$1M&0Ej)))
          g$list$4976$1M&0Ej))))
   (g$remq$4897$1M&0Ej
     g$remq$5002$1M&0Ej
     (case-lambda
       ((g$obj$4978$1M&0Ej g$list$4979$1M&0Ej)
        (g$remp$4878$1M&0Ej
          (case-lambda
            ((g$x$4980$1M&0Ej) (eq? g$obj$4978$1M&0Ej g$x$4980$1M&0Ej)))
          g$list$4979$1M&0Ej)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$caar$5003$1M&0Ej
     g$caar$5158$1M&0Ej
     (case-lambda ((g$x$5058$1M&0Ej) (car (car g$x$5058$1M&0Ej)))))
   (g$cadr$5004$1M&0Ej
     g$cadr$5159$1M&0Ej
     (case-lambda ((g$x$5059$1M&0Ej) (car (cdr g$x$5059$1M&0Ej)))))
   (g$cdar$5005$1M&0Ej
     g$cdar$5160$1M&0Ej
     (case-lambda ((g$x$5060$1M&0Ej) (cdr (car g$x$5060$1M&0Ej)))))
   (g$cddr$5006$1M&0Ej
     g$cddr$5161$1M&0Ej
     (case-lambda ((g$x$5061$1M&0Ej) (cdr (cdr g$x$5061$1M&0Ej)))))
   (g$caaar$5007$1M&0Ej
     g$caaar$5162$1M&0Ej
     (case-lambda
       ((g$x$5062$1M&0Ej) (g$caar$5003$1M&0Ej (car g$x$5062$1M&0Ej)))))
   (g$caadr$5008$1M&0Ej
     g$caadr$5163$1M&0Ej
     (case-lambda
       ((g$x$5063$1M&0Ej) (g$caar$5003$1M&0Ej (cdr g$x$5063$1M&0Ej)))))
   (g$cadar$5009$1M&0Ej
     g$cadar$5164$1M&0Ej
     (case-lambda
       ((g$x$5064$1M&0Ej) (g$cadr$5004$1M&0Ej (car g$x$5064$1M&0Ej)))))
   (g$caddr$5010$1M&0Ej
     g$caddr$5165$1M&0Ej
     (case-lambda
       ((g$x$5065$1M&0Ej) (g$cadr$5004$1M&0Ej (cdr g$x$5065$1M&0Ej)))))
   (g$cdaar$5011$1M&0Ej
     g$cdaar$5166$1M&0Ej
     (case-lambda
       ((g$x$5066$1M&0Ej) (g$cdar$5005$1M&0Ej (car g$x$5066$1M&0Ej)))))
   (g$cdadr$5012$1M&0Ej
     g$cdadr$5167$1M&0Ej
     (case-lambda
       ((g$x$5067$1M&0Ej) (g$cdar$5005$1M&0Ej (cdr g$x$5067$1M&0Ej)))))
   (g$cddar$5013$1M&0Ej
     g$cddar$5168$1M&0Ej
     (case-lambda
       ((g$x$5068$1M&0Ej) (g$cddr$5006$1M&0Ej (car g$x$5068$1M&0Ej)))))
   (g$cdddr$5014$1M&0Ej
     g$cdddr$5169$1M&0Ej
     (case-lambda
       ((g$x$5069$1M&0Ej) (g$cddr$5006$1M&0Ej (cdr g$x$5069$1M&0Ej)))))
   (g$caaaar$5015$1M&0Ej
     g$caaaar$5170$1M&0Ej
     (case-lambda
       ((g$x$5070$1M&0Ej) (g$caaar$5007$1M&0Ej (car g$x$5070$1M&0Ej)))))
   (g$caaadr$5016$1M&0Ej
     g$caaadr$5171$1M&0Ej
     (case-lambda
       ((g$x$5071$1M&0Ej) (g$caaar$5007$1M&0Ej (cdr g$x$5071$1M&0Ej)))))
   (g$caadar$5017$1M&0Ej
     g$caadar$5172$1M&0Ej
     (case-lambda
       ((g$x$5072$1M&0Ej) (g$caadr$5008$1M&0Ej (car g$x$5072$1M&0Ej)))))
   (g$caaddr$5018$1M&0Ej
     g$caaddr$5173$1M&0Ej
     (case-lambda
       ((g$x$5073$1M&0Ej) (g$caadr$5008$1M&0Ej (cdr g$x$5073$1M&0Ej)))))
   (g$cadaar$5019$1M&0Ej
     g$cadaar$5174$1M&0Ej
     (case-lambda
       ((g$x$5074$1M&0Ej) (g$cadar$5009$1M&0Ej (car g$x$5074$1M&0Ej)))))
   (g$cadadr$5020$1M&0Ej
     g$cadadr$5175$1M&0Ej
     (case-lambda
       ((g$x$5075$1M&0Ej) (g$cadar$5009$1M&0Ej (cdr g$x$5075$1M&0Ej)))))
   (g$caddar$5021$1M&0Ej
     g$caddar$5176$1M&0Ej
     (case-lambda
       ((g$x$5076$1M&0Ej) (g$caddr$5010$1M&0Ej (car g$x$5076$1M&0Ej)))))
   (g$cadddr$5022$1M&0Ej
     g$cadddr$5177$1M&0Ej
     (case-lambda
       ((g$x$5077$1M&0Ej) (g$caddr$5010$1M&0Ej (cdr g$x$5077$1M&0Ej)))))
   (g$cdaaar$5023$1M&0Ej
     g$cdaaar$5178$1M&0Ej
     (case-lambda
       ((g$x$5078$1M&0Ej) (g$cdaar$5011$1M&0Ej (car g$x$5078$1M&0Ej)))))
   (g$cdaadr$5024$1M&0Ej
     g$cdaadr$5179$1M&0Ej
     (case-lambda
       ((g$x$5079$1M&0Ej) (g$cdaar$5011$1M&0Ej (cdr g$x$5079$1M&0Ej)))))
   (g$cdadar$5025$1M&0Ej
     g$cdadar$5180$1M&0Ej
     (case-lambda
       ((g$x$5080$1M&0Ej) (g$cdadr$5012$1M&0Ej (car g$x$5080$1M&0Ej)))))
   (g$cdaddr$5026$1M&0Ej
     g$cdaddr$5181$1M&0Ej
     (case-lambda
       ((g$x$5081$1M&0Ej) (g$cdadr$5012$1M&0Ej (cdr g$x$5081$1M&0Ej)))))
   (g$cddaar$5027$1M&0Ej
     g$cddaar$5182$1M&0Ej
     (case-lambda
       ((g$x$5082$1M&0Ej) (g$cddar$5013$1M&0Ej (car g$x$5082$1M&0Ej)))))
   (g$cddadr$5028$1M&0Ej
     g$cddadr$5183$1M&0Ej
     (case-lambda
       ((g$x$5083$1M&0Ej) (g$cddar$5013$1M&0Ej (cdr g$x$5083$1M&0Ej)))))
   (g$cdddar$5029$1M&0Ej
     g$cdddar$5184$1M&0Ej
     (case-lambda
       ((g$x$5084$1M&0Ej) (g$cdddr$5014$1M&0Ej (car g$x$5084$1M&0Ej)))))
   (g$cddddr$5030$1M&0Ej
     g$cddddr$5185$1M&0Ej
     (case-lambda
       ((g$x$5085$1M&0Ej) (g$cdddr$5014$1M&0Ej (cdr g$x$5085$1M&0Ej)))))
   (g$string=?$5037$1M&0Ej
     g$string=?$5186$1M&0Ej
     (case-lambda
       ((g$a$5086$1M&0Ej g$b$5087$1M&0Ej . g$rest$5088$1M&0Ej)
        (begin
          (if (not (string? g$a$5086$1M&0Ej))
            (assertion-violation 'string=? '"not a string" g$a$5086$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5089$1M&0Ej)
               (begin
                 (if (not (string? g$x$5089$1M&0Ej))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5089$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5090$1M&0Ej)
                     (begin
                       (set! g$a$5086$1M&0Ej g$x$5089$1M&0Ej)
                       g$r$5090$1M&0Ej)))
                  (= (string-compare g$a$5086$1M&0Ej g$x$5089$1M&0Ej) '0)))))
            (cons g$b$5087$1M&0Ej g$rest$5088$1M&0Ej))))))
   (g$string<?$5038$1M&0Ej
     g$string<?$5187$1M&0Ej
     (case-lambda
       ((g$a$5091$1M&0Ej g$b$5092$1M&0Ej . g$rest$5093$1M&0Ej)
        (begin
          (if (not (string? g$a$5091$1M&0Ej))
            (assertion-violation 'string<? '"not a string" g$a$5091$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5094$1M&0Ej)
               (begin
                 (if (not (string? g$x$5094$1M&0Ej))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5094$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5095$1M&0Ej)
                     (begin
                       (set! g$a$5091$1M&0Ej g$x$5094$1M&0Ej)
                       g$r$5095$1M&0Ej)))
                  (< (string-compare g$a$5091$1M&0Ej g$x$5094$1M&0Ej) '0)))))
            (cons g$b$5092$1M&0Ej g$rest$5093$1M&0Ej))))))
   (g$string>?$5039$1M&0Ej
     g$string>?$5188$1M&0Ej
     (case-lambda
       ((g$a$5096$1M&0Ej g$b$5097$1M&0Ej . g$rest$5098$1M&0Ej)
        (begin
          (if (not (string? g$a$5096$1M&0Ej))
            (assertion-violation 'string>? '"not a string" g$a$5096$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5099$1M&0Ej)
               (begin
                 (if (not (string? g$x$5099$1M&0Ej))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5099$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5100$1M&0Ej)
                     (begin
                       (set! g$a$5096$1M&0Ej g$x$5099$1M&0Ej)
                       g$r$5100$1M&0Ej)))
                  (> (string-compare g$a$5096$1M&0Ej g$x$5099$1M&0Ej) '0)))))
            (cons g$b$5097$1M&0Ej g$rest$5098$1M&0Ej))))))
   (g$string<=?$5040$1M&0Ej
     g$string<=?$5189$1M&0Ej
     (case-lambda
       ((g$a$5101$1M&0Ej g$b$5102$1M&0Ej . g$rest$5103$1M&0Ej)
        (begin
          (if (not (string? g$a$5101$1M&0Ej))
            (assertion-violation 'string<=? '"not a string" g$a$5101$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5104$1M&0Ej)
               (begin
                 (if (not (string? g$x$5104$1M&0Ej))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5104$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5105$1M&0Ej)
                     (begin
                       (set! g$a$5101$1M&0Ej g$x$5104$1M&0Ej)
                       g$r$5105$1M&0Ej)))
                  (<= (string-compare g$a$5101$1M&0Ej g$x$5104$1M&0Ej) '0)))))
            (cons g$b$5102$1M&0Ej g$rest$5103$1M&0Ej))))))
   (g$string>=?$5041$1M&0Ej
     g$string>=?$5190$1M&0Ej
     (case-lambda
       ((g$a$5106$1M&0Ej g$b$5107$1M&0Ej . g$rest$5108$1M&0Ej)
        (begin
          (if (not (string? g$a$5106$1M&0Ej))
            (assertion-violation 'string>=? '"not a string" g$a$5106$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5109$1M&0Ej)
               (begin
                 (if (not (string? g$x$5109$1M&0Ej))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5109$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5110$1M&0Ej)
                     (begin
                       (set! g$a$5106$1M&0Ej g$x$5109$1M&0Ej)
                       g$r$5110$1M&0Ej)))
                  (>= (string-compare g$a$5106$1M&0Ej g$x$5109$1M&0Ej) '0)))))
            (cons g$b$5107$1M&0Ej g$rest$5108$1M&0Ej))))))
   (g$symbol=?$5042$1M&0Ej
     g$symbol=?$5191$1M&0Ej
     (case-lambda
       ((g$a$5111$1M&0Ej g$b$5112$1M&0Ej . g$rest$5113$1M&0Ej)
        (begin
          (if (not (symbol? g$a$5111$1M&0Ej))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5111$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5114$1M&0Ej)
               (begin
                 (if (not (symbol? g$x$5114$1M&0Ej))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5114$1M&0Ej)
                   (void))
                 (eq? g$a$5111$1M&0Ej g$x$5114$1M&0Ej))))
            (cons g$b$5112$1M&0Ej g$rest$5113$1M&0Ej))))))
   (g$boolean=?$5043$1M&0Ej
     g$boolean=?$5192$1M&0Ej
     (case-lambda
       ((g$a$5115$1M&0Ej g$b$5116$1M&0Ej . g$rest$5117$1M&0Ej)
        (begin
          (if (not (boolean? g$a$5115$1M&0Ej))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5115$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5118$1M&0Ej)
               (begin
                 (if (not (boolean? g$x$5118$1M&0Ej))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5118$1M&0Ej)
                   (void))
                 (eq? g$a$5115$1M&0Ej g$x$5118$1M&0Ej))))
            (cons g$b$5116$1M&0Ej g$rest$5117$1M&0Ej))))))
   (g$char=?$5050$1M&0Ej
     g$char=?$5193$1M&0Ej
     (case-lambda
       ((g$a$5119$1M&0Ej g$b$5120$1M&0Ej . g$rest$5121$1M&0Ej)
        (begin
          (if (not (char? g$a$5119$1M&0Ej))
            (assertion-violation 'char=? '"not a char" g$a$5119$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5122$1M&0Ej)
               (begin
                 (if (not (char? g$x$5122$1M&0Ej))
                   (assertion-violation 'char=? '"not a char" g$x$5122$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5123$1M&0Ej)
                     (begin
                       (set! g$a$5119$1M&0Ej g$x$5122$1M&0Ej)
                       g$r$5123$1M&0Ej)))
                  (= (char->integer g$a$5119$1M&0Ej)
                     (char->integer g$x$5122$1M&0Ej))))))
            (cons g$b$5120$1M&0Ej g$rest$5121$1M&0Ej))))))
   (g$char<?$5051$1M&0Ej
     g$char<?$5194$1M&0Ej
     (case-lambda
       ((g$a$5124$1M&0Ej g$b$5125$1M&0Ej . g$rest$5126$1M&0Ej)
        (begin
          (if (not (char? g$a$5124$1M&0Ej))
            (assertion-violation 'char<? '"not a char" g$a$5124$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5127$1M&0Ej)
               (begin
                 (if (not (char? g$x$5127$1M&0Ej))
                   (assertion-violation 'char<? '"not a char" g$x$5127$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5128$1M&0Ej)
                     (begin
                       (set! g$a$5124$1M&0Ej g$x$5127$1M&0Ej)
                       g$r$5128$1M&0Ej)))
                  (< (char->integer g$a$5124$1M&0Ej)
                     (char->integer g$x$5127$1M&0Ej))))))
            (cons g$b$5125$1M&0Ej g$rest$5126$1M&0Ej))))))
   (g$char>?$5052$1M&0Ej
     g$char>?$5195$1M&0Ej
     (case-lambda
       ((g$a$5129$1M&0Ej g$b$5130$1M&0Ej . g$rest$5131$1M&0Ej)
        (begin
          (if (not (char? g$a$5129$1M&0Ej))
            (assertion-violation 'char>? '"not a char" g$a$5129$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5132$1M&0Ej)
               (begin
                 (if (not (char? g$x$5132$1M&0Ej))
                   (assertion-violation 'char>? '"not a char" g$x$5132$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5133$1M&0Ej)
                     (begin
                       (set! g$a$5129$1M&0Ej g$x$5132$1M&0Ej)
                       g$r$5133$1M&0Ej)))
                  (> (char->integer g$a$5129$1M&0Ej)
                     (char->integer g$x$5132$1M&0Ej))))))
            (cons g$b$5130$1M&0Ej g$rest$5131$1M&0Ej))))))
   (g$char<=?$5053$1M&0Ej
     g$char<=?$5196$1M&0Ej
     (case-lambda
       ((g$a$5134$1M&0Ej g$b$5135$1M&0Ej . g$rest$5136$1M&0Ej)
        (begin
          (if (not (char? g$a$5134$1M&0Ej))
            (assertion-violation 'char<=? '"not a char" g$a$5134$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5137$1M&0Ej)
               (begin
                 (if (not (char? g$x$5137$1M&0Ej))
                   (assertion-violation 'char<=? '"not a char" g$x$5137$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5138$1M&0Ej)
                     (begin
                       (set! g$a$5134$1M&0Ej g$x$5137$1M&0Ej)
                       g$r$5138$1M&0Ej)))
                  (<= (char->integer g$a$5134$1M&0Ej)
                      (char->integer g$x$5137$1M&0Ej))))))
            (cons g$b$5135$1M&0Ej g$rest$5136$1M&0Ej))))))
   (g$char>=?$5054$1M&0Ej
     g$char>=?$5197$1M&0Ej
     (case-lambda
       ((g$a$5139$1M&0Ej g$b$5140$1M&0Ej . g$rest$5141$1M&0Ej)
        (begin
          (if (not (char? g$a$5139$1M&0Ej))
            (assertion-violation 'char>=? '"not a char" g$a$5139$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5142$1M&0Ej)
               (begin
                 (if (not (char? g$x$5142$1M&0Ej))
                   (assertion-violation 'char>=? '"not a char" g$x$5142$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5143$1M&0Ej)
                     (begin
                       (set! g$a$5139$1M&0Ej g$x$5142$1M&0Ej)
                       g$r$5143$1M&0Ej)))
                  (>= (char->integer g$a$5139$1M&0Ej)
                      (char->integer g$x$5142$1M&0Ej))))))
            (cons g$b$5140$1M&0Ej g$rest$5141$1M&0Ej))))))
   (g$rationalize$5055$1M&0Ej
     g$rationalize$5198$1M&0Ej
     (case-lambda
       ((g$x$5144$1M&0Ej g$e$5145$1M&0Ej)
        (if (if (infinite? g$x$5144$1M&0Ej)
              (begin '#f (infinite? g$e$5145$1M&0Ej))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5146$1M&0Ej)
              (if (if (exact? g$x$5144$1M&0Ej)
                    (begin '#f (exact? g$e$5145$1M&0Ej))
                    '#f)
                g$r$5146$1M&0Ej
                (inexact g$r$5146$1M&0Ej))))
           (apply
             /
             (g$find-ratio$5056$1M&0Ej g$x$5144$1M&0Ej g$e$5145$1M&0Ej)))))))
   (g$find-ratio$5056$1M&0Ej
     g$find-ratio$5199$1M&0Ej
     (case-lambda
       ((g$x$5147$1M&0Ej g$e$5148$1M&0Ej)
        (g$find-ratio-between$5057$1M&0Ej
          (- g$x$5147$1M&0Ej g$e$5148$1M&0Ej)
          (+ g$x$5147$1M&0Ej g$e$5148$1M&0Ej)))))
   (g$find-ratio-between$5057$1M&0Ej
     g$find-ratio-between$5200$1M&0Ej
     (case-lambda
       ((g$x$5149$1M&0Ej g$y$5150$1M&0Ej)
        (letrec* ((g$sr$5151$1M&0Ej
                    (case-lambda
                      ((g$x$5153$1M&0Ej g$y$5154$1M&0Ej)
                       ((case-lambda
                          ((g$fx$5155$1M&0Ej g$fy$5156$1M&0Ej)
                           (if (>= g$fx$5155$1M&0Ej g$x$5153$1M&0Ej)
                             (list g$fx$5155$1M&0Ej '1)
                             (if (= g$fx$5155$1M&0Ej g$fy$5156$1M&0Ej)
                               ((case-lambda
                                  ((g$rat$5157$1M&0Ej)
                                   (list
                                     (+ (g$cadr$5004$1M&0Ej g$rat$5157$1M&0Ej)
                                        (* g$fx$5155$1M&0Ej
                                           (car g$rat$5157$1M&0Ej)))
                                     (car g$rat$5157$1M&0Ej))))
                                (g$sr$5151$1M&0Ej
                                  (/ (- g$y$5154$1M&0Ej g$fy$5156$1M&0Ej))
                                  (/ (- g$x$5153$1M&0Ej g$fx$5155$1M&0Ej))))
                               (list (+ '1 g$fx$5155$1M&0Ej) '1)))))
                        (exact (floor g$x$5153$1M&0Ej))
                        (exact (floor g$y$5154$1M&0Ej)))))))
          (if (< g$y$5150$1M&0Ej g$x$5149$1M&0Ej)
            (g$find-ratio-between$5057$1M&0Ej g$y$5150$1M&0Ej g$x$5149$1M&0Ej)
            (if (>= g$x$5149$1M&0Ej g$y$5150$1M&0Ej)
              (list g$x$5149$1M&0Ej '1)
              (if (positive? g$x$5149$1M&0Ej)
                (g$sr$5151$1M&0Ej g$x$5149$1M&0Ej g$y$5150$1M&0Ej)
                (if (negative? g$y$5150$1M&0Ej)
                  ((case-lambda
                     ((g$rat$5152$1M&0Ej)
                      (list
                        (- (car g$rat$5152$1M&0Ej))
                        (g$cadr$5004$1M&0Ej g$rat$5152$1M&0Ej))))
                   (g$sr$5151$1M&0Ej (- g$y$5150$1M&0Ej) (- g$x$5149$1M&0Ej)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5396$1M&0Ej g$using$5431$1M&0Ej (clr-using-internal 'system))
   (g$using$5398$1M&0Ej
     g$using$5432$1M&0Ej
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5399$1M&0Ej
     g$make-eq-hashtable$5433$1M&0Ej
     (case-lambda
       (() (g$make-eq-hashtable$5399$1M&0Ej '32))
       ((g$k$5410$1M&0Ej)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5410$1M&0Ej)))))
   (g$make-eqv-hashtable$5400$1M&0Ej
     g$make-eqv-hashtable$5434$1M&0Ej
     (case-lambda
       (() (g$make-eqv-hashtable$5400$1M&0Ej '32))
       ((g$k$5411$1M&0Ej) (make-hashtable eqv-hash eqv? g$k$5411$1M&0Ej))))
   (g$hashtable-size$5401$1M&0Ej
     g$hashtable-size$5435$1M&0Ej
     (case-lambda
       ((g$ht$5412$1M&0Ej)
        (clr-call-internal 'hashtable 'get_count g$ht$5412$1M&0Ej))))
   (g$hashtable-ref$5402$1M&0Ej
     g$hashtable-ref$5436$1M&0Ej
     (case-lambda
       ((g$ht$5413$1M&0Ej g$key$5414$1M&0Ej g$default$5415$1M&0Ej)
        (letrec* ((g$r$5416$1M&0Ej
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5413$1M&0Ej
                      g$key$5414$1M&0Ej)))
          (if (not (null? g$r$5416$1M&0Ej))
            g$r$5416$1M&0Ej
            g$default$5415$1M&0Ej)))))
   (g$hashtable-set!$5403$1M&0Ej
     g$hashtable-set!$5437$1M&0Ej
     (case-lambda
       ((g$ht$5417$1M&0Ej g$key$5418$1M&0Ej g$obj$5419$1M&0Ej)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5417$1M&0Ej
          g$key$5418$1M&0Ej
          g$obj$5419$1M&0Ej))))
   (g$hashtable-delete!$5404$1M&0Ej
     g$hashtable-delete!$5438$1M&0Ej
     (case-lambda
       ((g$ht$5420$1M&0Ej g$key$5421$1M&0Ej)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5420$1M&0Ej
          g$key$5421$1M&0Ej))))
   (g$hashtable-contains?$5405$1M&0Ej
     g$hashtable-contains?$5439$1M&0Ej
     (case-lambda
       ((g$ht$5422$1M&0Ej g$key$5423$1M&0Ej)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5422$1M&0Ej
          g$key$5423$1M&0Ej))))
   (g$hashtable-update!$5406$1M&0Ej
     g$hashtable-update!$5440$1M&0Ej
     (case-lambda
       ((g$ht$5424$1M&0Ej
          g$key$5425$1M&0Ej
          g$proc$5426$1M&0Ej
          g$default$5427$1M&0Ej)
        (g$hashtable-set!$5403$1M&0Ej
          g$ht$5424$1M&0Ej
          g$key$5425$1M&0Ej
          (g$proc$5426$1M&0Ej
            (g$hashtable-ref$5402$1M&0Ej
              g$ht$5424$1M&0Ej
              g$key$5425$1M&0Ej
              g$default$5427$1M&0Ej))))))
   (g$hashtable-clear!$5407$1M&0Ej
     g$hashtable-clear!$5441$1M&0Ej
     (case-lambda
       ((g$ht$5428$1M&0Ej)
        (g$hashtable-clear!$5407$1M&0Ej g$ht$5428$1M&0Ej '32))
       ((g$ht$5429$1M&0Ej g$k$5430$1M&0Ej)
        (clr-call-internal 'hashtable 'clear g$ht$5429$1M&0Ej))))
   (g$clear-usings$5409$1M&0Ej
     g$clear-usings$5442$1M&0Ej
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5444$1M&0Ej
     g$using$5451$1M&0Ej
     (clr-using-internal 'system.io))
   (g$file-exists?$5445$1M&0Ej
     g$file-exists?$5452$1M&0Ej
     (case-lambda
       ((g$fn$5448$1M&0Ej)
        (clr-call-internal 'file 'exists '() g$fn$5448$1M&0Ej))))
   (g$delete-file$5446$1M&0Ej
     g$delete-file$5453$1M&0Ej
     (case-lambda
       ((g$fn$5449$1M&0Ej)
        (clr-call-internal 'file 'delete '() g$fn$5449$1M&0Ej))))
   (g$get-directory-name$5447$1M&0Ej
     g$get-directory-name$5454$1M&0Ej
     (case-lambda
       ((g$path$5450$1M&0Ej)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5450$1M&0Ej)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5455$1M&0Ej
     g$native-endianness$5566$1M&0Ej
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5456$1M&0Ej
     g$bytevector-u16-ref$5567$1M&0Ej
     (case-lambda
       ((g$bytevector$5484$1M&0Ej g$k$5485$1M&0Ej g$endianness$5486$1M&0Ej)
        (bytevector-uint-ref
          g$bytevector$5484$1M&0Ej
          g$k$5485$1M&0Ej
          g$endianness$5486$1M&0Ej
          '2))))
   (g$bytevector-s16-ref$5457$1M&0Ej
     g$bytevector-s16-ref$5568$1M&0Ej
     (case-lambda
       ((g$bytevector$5487$1M&0Ej g$k$5488$1M&0Ej g$endianness$5489$1M&0Ej)
        (bytevector-sint-ref
          g$bytevector$5487$1M&0Ej
          g$k$5488$1M&0Ej
          g$endianness$5489$1M&0Ej
          '2))))
   (g$bytevector-u16-native-ref$5458$1M&0Ej
     g$bytevector-u16-native-ref$5569$1M&0Ej
     (case-lambda
       ((g$bytevector$5490$1M&0Ej g$k$5491$1M&0Ej)
        (bytevector-uint-ref
          g$bytevector$5490$1M&0Ej
          g$k$5491$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '2))))
   (g$bytevector-s16-native-ref$5459$1M&0Ej
     g$bytevector-s16-native-ref$5570$1M&0Ej
     (case-lambda
       ((g$bytevector$5492$1M&0Ej g$k$5493$1M&0Ej)
        (bytevector-sint-ref
          g$bytevector$5492$1M&0Ej
          g$k$5493$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '2))))
   (g$bytevector-u16-set!$5460$1M&0Ej
     g$bytevector-u16-set!$5571$1M&0Ej
     (case-lambda
       ((g$bytevector$5494$1M&0Ej
          g$k$5495$1M&0Ej
          g$n$5496$1M&0Ej
          g$endianness$5497$1M&0Ej)
        (bytevector-uint-set!
          g$bytevector$5494$1M&0Ej
          g$k$5495$1M&0Ej
          g$n$5496$1M&0Ej
          g$endianness$5497$1M&0Ej
          '2))))
   (g$bytevector-s16-set!$5461$1M&0Ej
     g$bytevector-s16-set!$5572$1M&0Ej
     (case-lambda
       ((g$bytevector$5498$1M&0Ej
          g$k$5499$1M&0Ej
          g$n$5500$1M&0Ej
          g$endianness$5501$1M&0Ej)
        (bytevector-sint-set!
          g$bytevector$5498$1M&0Ej
          g$k$5499$1M&0Ej
          g$n$5500$1M&0Ej
          g$endianness$5501$1M&0Ej
          '2))))
   (g$bytevector-u16-native-set!$5462$1M&0Ej
     g$bytevector-u16-native-set!$5573$1M&0Ej
     (case-lambda
       ((g$bytevector$5502$1M&0Ej g$k$5503$1M&0Ej g$n$5504$1M&0Ej)
        (bytevector-uint-set!
          g$bytevector$5502$1M&0Ej
          g$k$5503$1M&0Ej
          g$n$5504$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '2))))
   (g$bytevector-s16-native-set!$5463$1M&0Ej
     g$bytevector-s16-native-set!$5574$1M&0Ej
     (case-lambda
       ((g$bytevector$5505$1M&0Ej g$k$5506$1M&0Ej g$n$5507$1M&0Ej)
        (bytevector-sint-set!
          g$bytevector$5505$1M&0Ej
          g$k$5506$1M&0Ej
          g$n$5507$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '2))))
   (g$bytevector-u32-ref$5464$1M&0Ej
     g$bytevector-u32-ref$5575$1M&0Ej
     (case-lambda
       ((g$bytevector$5508$1M&0Ej g$k$5509$1M&0Ej g$endianness$5510$1M&0Ej)
        (bytevector-uint-ref
          g$bytevector$5508$1M&0Ej
          g$k$5509$1M&0Ej
          g$endianness$5510$1M&0Ej
          '4))))
   (g$bytevector-s32-ref$5465$1M&0Ej
     g$bytevector-s32-ref$5576$1M&0Ej
     (case-lambda
       ((g$bytevector$5511$1M&0Ej g$k$5512$1M&0Ej g$endianness$5513$1M&0Ej)
        (bytevector-sint-ref
          g$bytevector$5511$1M&0Ej
          g$k$5512$1M&0Ej
          g$endianness$5513$1M&0Ej
          '4))))
   (g$bytevector-u32-native-ref$5466$1M&0Ej
     g$bytevector-u32-native-ref$5577$1M&0Ej
     (case-lambda
       ((g$bytevector$5514$1M&0Ej g$k$5515$1M&0Ej)
        (bytevector-uint-ref
          g$bytevector$5514$1M&0Ej
          g$k$5515$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '4))))
   (g$bytevector-s32-native-ref$5467$1M&0Ej
     g$bytevector-s32-native-ref$5578$1M&0Ej
     (case-lambda
       ((g$bytevector$5516$1M&0Ej g$k$5517$1M&0Ej)
        (bytevector-sint-ref
          g$bytevector$5516$1M&0Ej
          g$k$5517$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '4))))
   (g$bytevector-u32-set!$5468$1M&0Ej
     g$bytevector-u32-set!$5579$1M&0Ej
     (case-lambda
       ((g$bytevector$5518$1M&0Ej
          g$k$5519$1M&0Ej
          g$n$5520$1M&0Ej
          g$endianness$5521$1M&0Ej)
        (bytevector-uint-set!
          g$bytevector$5518$1M&0Ej
          g$k$5519$1M&0Ej
          g$n$5520$1M&0Ej
          g$endianness$5521$1M&0Ej
          '4))))
   (g$bytevector-s32-set!$5469$1M&0Ej
     g$bytevector-s32-set!$5580$1M&0Ej
     (case-lambda
       ((g$bytevector$5522$1M&0Ej
          g$k$5523$1M&0Ej
          g$n$5524$1M&0Ej
          g$endianness$5525$1M&0Ej)
        (bytevector-sint-set!
          g$bytevector$5522$1M&0Ej
          g$k$5523$1M&0Ej
          g$n$5524$1M&0Ej
          g$endianness$5525$1M&0Ej
          '4))))
   (g$bytevector-u32-native-set!$5470$1M&0Ej
     g$bytevector-u32-native-set!$5581$1M&0Ej
     (case-lambda
       ((g$bytevector$5526$1M&0Ej g$k$5527$1M&0Ej g$n$5528$1M&0Ej)
        (bytevector-uint-set!
          g$bytevector$5526$1M&0Ej
          g$k$5527$1M&0Ej
          g$n$5528$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '4))))
   (g$bytevector-s32-native-set!$5471$1M&0Ej
     g$bytevector-s32-native-set!$5582$1M&0Ej
     (case-lambda
       ((g$bytevector$5529$1M&0Ej g$k$5530$1M&0Ej g$n$5531$1M&0Ej)
        (bytevector-sint-set!
          g$bytevector$5529$1M&0Ej
          g$k$5530$1M&0Ej
          g$n$5531$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '4))))
   (g$bytevector-u64-ref$5472$1M&0Ej
     g$bytevector-u64-ref$5583$1M&0Ej
     (case-lambda
       ((g$bytevector$5532$1M&0Ej g$k$5533$1M&0Ej g$endianness$5534$1M&0Ej)
        (bytevector-uint-ref
          g$bytevector$5532$1M&0Ej
          g$k$5533$1M&0Ej
          g$endianness$5534$1M&0Ej
          '8))))
   (g$bytevector-s64-ref$5473$1M&0Ej
     g$bytevector-s64-ref$5584$1M&0Ej
     (case-lambda
       ((g$bytevector$5535$1M&0Ej g$k$5536$1M&0Ej g$endianness$5537$1M&0Ej)
        (bytevector-sint-ref
          g$bytevector$5535$1M&0Ej
          g$k$5536$1M&0Ej
          g$endianness$5537$1M&0Ej
          '8))))
   (g$bytevector-u64-native-ref$5474$1M&0Ej
     g$bytevector-u64-native-ref$5585$1M&0Ej
     (case-lambda
       ((g$bytevector$5538$1M&0Ej g$k$5539$1M&0Ej)
        (bytevector-uint-ref
          g$bytevector$5538$1M&0Ej
          g$k$5539$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '8))))
   (g$bytevector-s64-native-ref$5475$1M&0Ej
     g$bytevector-s64-native-ref$5586$1M&0Ej
     (case-lambda
       ((g$bytevector$5540$1M&0Ej g$k$5541$1M&0Ej)
        (bytevector-sint-ref
          g$bytevector$5540$1M&0Ej
          g$k$5541$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '8))))
   (g$bytevector-u64-set!$5476$1M&0Ej
     g$bytevector-u64-set!$5587$1M&0Ej
     (case-lambda
       ((g$bytevector$5542$1M&0Ej
          g$k$5543$1M&0Ej
          g$n$5544$1M&0Ej
          g$endianness$5545$1M&0Ej)
        (bytevector-uint-set!
          g$bytevector$5542$1M&0Ej
          g$k$5543$1M&0Ej
          g$n$5544$1M&0Ej
          g$endianness$5545$1M&0Ej
          '8))))
   (g$bytevector-s64-set!$5477$1M&0Ej
     g$bytevector-s64-set!$5588$1M&0Ej
     (case-lambda
       ((g$bytevector$5546$1M&0Ej
          g$k$5547$1M&0Ej
          g$n$5548$1M&0Ej
          g$endianness$5549$1M&0Ej)
        (bytevector-sint-set!
          g$bytevector$5546$1M&0Ej
          g$k$5547$1M&0Ej
          g$n$5548$1M&0Ej
          g$endianness$5549$1M&0Ej
          '8))))
   (g$bytevector-u64-native-set!$5478$1M&0Ej
     g$bytevector-u64-native-set!$5589$1M&0Ej
     (case-lambda
       ((g$bytevector$5550$1M&0Ej g$k$5551$1M&0Ej g$n$5552$1M&0Ej)
        (bytevector-uint-set!
          g$bytevector$5550$1M&0Ej
          g$k$5551$1M&0Ej
          g$n$5552$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '8))))
   (g$bytevector-s64-native-set!$5479$1M&0Ej
     g$bytevector-s64-native-set!$5590$1M&0Ej
     (case-lambda
       ((g$bytevector$5553$1M&0Ej g$k$5554$1M&0Ej g$n$5555$1M&0Ej)
        (bytevector-sint-set!
          g$bytevector$5553$1M&0Ej
          g$k$5554$1M&0Ej
          g$n$5555$1M&0Ej
          (g$native-endianness$5455$1M&0Ej)
          '8))))
   (g$bytevector-ieee-single-native-ref$5480$1M&0Ej
     g$bytevector-ieee-single-native-ref$5591$1M&0Ej
     (case-lambda
       ((g$bytevector$5556$1M&0Ej g$k$5557$1M&0Ej)
        (if (not (zero? (mod g$k$5557$1M&0Ej '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5557$1M&0Ej)
          (bytevector-ieee-single-ref
            g$bytevector$5556$1M&0Ej
            g$k$5557$1M&0Ej
            (g$native-endianness$5455$1M&0Ej))))))
   (g$bytevector-ieee-double-native-ref$5481$1M&0Ej
     g$bytevector-ieee-double-native-ref$5592$1M&0Ej
     (case-lambda
       ((g$bytevector$5558$1M&0Ej g$k$5559$1M&0Ej)
        (if (not (zero? (mod g$k$5559$1M&0Ej '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5559$1M&0Ej)
          (bytevector-ieee-double-ref
            g$bytevector$5558$1M&0Ej
            g$k$5559$1M&0Ej
            (g$native-endianness$5455$1M&0Ej))))))
   (g$bytevector-ieee-single-native-set!$5482$1M&0Ej
     g$bytevector-ieee-single-native-set!$5593$1M&0Ej
     (case-lambda
       ((g$bytevector$5560$1M&0Ej g$k$5561$1M&0Ej g$x$5562$1M&0Ej)
        (if (not (zero? (mod g$k$5561$1M&0Ej '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5561$1M&0Ej)
          (bytevector-ieee-single-set!
            g$bytevector$5560$1M&0Ej
            g$k$5561$1M&0Ej
            g$x$5562$1M&0Ej
            (g$native-endianness$5455$1M&0Ej))))))
   (g$bytevector-ieee-double-native-set!$5483$1M&0Ej
     g$bytevector-ieee-double-native-set!$5594$1M&0Ej
     (case-lambda
       ((g$bytevector$5563$1M&0Ej g$k$5564$1M&0Ej g$x$5565$1M&0Ej)
        (if (not (zero? (mod g$k$5564$1M&0Ej '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5564$1M&0Ej)
          (bytevector-ieee-double-set!
            g$bytevector$5563$1M&0Ej
            g$k$5564$1M&0Ej
            g$x$5565$1M&0Ej
            (g$native-endianness$5455$1M&0Ej)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6606$5595$1M&0Ej
     g$6606$5690$1M&0Ej
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6609$1M&0Ej
       '#f
       '#f
       '#()))
   (g$6608$5596$1M&0Ej g$6608$5691$1M&0Ej '#f)
   (g$6607$5597$1M&0Ej
     g$6607$5692$1M&0Ej
     (make-record-constructor-descriptor
       g$6606$5595$1M&0Ej
       '#f
       g$6608$5596$1M&0Ej))
   (g$&condition?$5598$1M&0Ej
     g$&condition?$5693$1M&0Ej
     (record-predicate g$6606$5595$1M&0Ej))
   (g$make-&condition$5599$1M&0Ej
     g$make-&condition$5694$1M&0Ej
     (record-constructor g$6607$5597$1M&0Ej))
   (g$&condition-rtd$5600$1M&0Ej
     g$&condition-rtd$5695$1M&0Ej
     g$6606$5595$1M&0Ej)
   (g$&condition-rcd$5601$1M&0Ej
     g$&condition-rcd$5696$1M&0Ej
     g$6607$5597$1M&0Ej)
   (g$6622$5602$1M&0Ej
     g$6622$5697$1M&0Ej
     (make-record-type-descriptor
       '&message
       g$6606$5595$1M&0Ej
       'g$6625$1M&0Ej
       '#f
       '#f
       '#((immutable message))))
   (g$6624$5603$1M&0Ej g$6624$5698$1M&0Ej '#f)
   (g$6623$5604$1M&0Ej
     g$6623$5699$1M&0Ej
     (make-record-constructor-descriptor
       g$6622$5602$1M&0Ej
       g$6607$5597$1M&0Ej
       g$6624$5603$1M&0Ej))
   (g$6621$5605$1M&0Ej
     g$6621$5700$1M&0Ej
     (record-predicate g$6622$5602$1M&0Ej))
   (g$make-message-condition$5606$1M&0Ej
     g$make-message-condition$5701$1M&0Ej
     (record-constructor g$6623$5604$1M&0Ej))
   (g$6620$5607$1M&0Ej
     g$6620$5702$1M&0Ej
     (record-accessor g$6622$5602$1M&0Ej '0))
   (g$message-condition?$5608$1M&0Ej
     g$message-condition?$5703$1M&0Ej
     (condition-predicate g$6622$5602$1M&0Ej))
   (g$condition-message$5609$1M&0Ej
     g$condition-message$5704$1M&0Ej
     (condition-accessor g$6622$5602$1M&0Ej g$6620$5607$1M&0Ej))
   (g$6638$5610$1M&0Ej
     g$6638$5705$1M&0Ej
     (make-record-type-descriptor
       '&warning
       g$6606$5595$1M&0Ej
       'g$6641$1M&0Ej
       '#f
       '#f
       '#()))
   (g$6640$5611$1M&0Ej g$6640$5706$1M&0Ej '#f)
   (g$6639$5612$1M&0Ej
     g$6639$5707$1M&0Ej
     (make-record-constructor-descriptor
       g$6638$5610$1M&0Ej
       g$6607$5597$1M&0Ej
       g$6640$5611$1M&0Ej))
   (g$6637$5613$1M&0Ej
     g$6637$5708$1M&0Ej
     (record-predicate g$6638$5610$1M&0Ej))
   (g$make-warning$5614$1M&0Ej
     g$make-warning$5709$1M&0Ej
     (record-constructor g$6639$5612$1M&0Ej))
   (g$warning?$5615$1M&0Ej
     g$warning?$5710$1M&0Ej
     (condition-predicate g$6638$5610$1M&0Ej))
   (g$6652$5616$1M&0Ej
     g$6652$5711$1M&0Ej
     (make-record-type-descriptor
       '&serious
       g$6606$5595$1M&0Ej
       'g$6655$1M&0Ej
       '#f
       '#f
       '#()))
   (g$6654$5617$1M&0Ej g$6654$5712$1M&0Ej '#f)
   (g$6653$5618$1M&0Ej
     g$6653$5713$1M&0Ej
     (make-record-constructor-descriptor
       g$6652$5616$1M&0Ej
       g$6607$5597$1M&0Ej
       g$6654$5617$1M&0Ej))
   (g$6651$5619$1M&0Ej
     g$6651$5714$1M&0Ej
     (record-predicate g$6652$5616$1M&0Ej))
   (g$make-serious-condition$5620$1M&0Ej
     g$make-serious-condition$5715$1M&0Ej
     (record-constructor g$6653$5618$1M&0Ej))
   (g$serious-condition?$5621$1M&0Ej
     g$serious-condition?$5716$1M&0Ej
     (condition-predicate g$6652$5616$1M&0Ej))
   (g$6666$5622$1M&0Ej
     g$6666$5717$1M&0Ej
     (make-record-type-descriptor
       '&error
       g$6652$5616$1M&0Ej
       'g$6669$1M&0Ej
       '#f
       '#f
       '#()))
   (g$6668$5623$1M&0Ej g$6668$5718$1M&0Ej '#f)
   (g$6667$5624$1M&0Ej
     g$6667$5719$1M&0Ej
     (make-record-constructor-descriptor
       g$6666$5622$1M&0Ej
       g$6653$5618$1M&0Ej
       g$6668$5623$1M&0Ej))
   (g$6665$5625$1M&0Ej
     g$6665$5720$1M&0Ej
     (record-predicate g$6666$5622$1M&0Ej))
   (g$make-error$5626$1M&0Ej
     g$make-error$5721$1M&0Ej
     (record-constructor g$6667$5624$1M&0Ej))
   (g$error?$5627$1M&0Ej
     g$error?$5722$1M&0Ej
     (condition-predicate g$6666$5622$1M&0Ej))
   (g$6680$5628$1M&0Ej
     g$6680$5723$1M&0Ej
     (make-record-type-descriptor
       '&violation
       g$6652$5616$1M&0Ej
       'g$6683$1M&0Ej
       '#f
       '#f
       '#()))
   (g$6682$5629$1M&0Ej g$6682$5724$1M&0Ej '#f)
   (g$6681$5630$1M&0Ej
     g$6681$5725$1M&0Ej
     (make-record-constructor-descriptor
       g$6680$5628$1M&0Ej
       g$6653$5618$1M&0Ej
       g$6682$5629$1M&0Ej))
   (g$6679$5631$1M&0Ej
     g$6679$5726$1M&0Ej
     (record-predicate g$6680$5628$1M&0Ej))
   (g$make-violation$5632$1M&0Ej
     g$make-violation$5727$1M&0Ej
     (record-constructor g$6681$5630$1M&0Ej))
   (g$violation?$5633$1M&0Ej
     g$violation?$5728$1M&0Ej
     (condition-predicate g$6680$5628$1M&0Ej))
   (g$6694$5634$1M&0Ej
     g$6694$5729$1M&0Ej
     (make-record-type-descriptor
       '&assertion
       g$6680$5628$1M&0Ej
       'g$6697$1M&0Ej
       '#f
       '#f
       '#()))
   (g$6696$5635$1M&0Ej g$6696$5730$1M&0Ej '#f)
   (g$6695$5636$1M&0Ej
     g$6695$5731$1M&0Ej
     (make-record-constructor-descriptor
       g$6694$5634$1M&0Ej
       g$6681$5630$1M&0Ej
       g$6696$5635$1M&0Ej))
   (g$6693$5637$1M&0Ej
     g$6693$5732$1M&0Ej
     (record-predicate g$6694$5634$1M&0Ej))
   (g$make-assertion-violation$5638$1M&0Ej
     g$make-assertion-violation$5733$1M&0Ej
     (record-constructor g$6695$5636$1M&0Ej))
   (g$assertion-violation?$5639$1M&0Ej
     g$assertion-violation?$5734$1M&0Ej
     (condition-predicate g$6694$5634$1M&0Ej))
   (g$6709$5640$1M&0Ej
     g$6709$5735$1M&0Ej
     (make-record-type-descriptor
       '&irritants
       g$6606$5595$1M&0Ej
       'g$6712$1M&0Ej
       '#f
       '#f
       '#((immutable irritants))))
   (g$6711$5641$1M&0Ej g$6711$5736$1M&0Ej '#f)
   (g$6710$5642$1M&0Ej
     g$6710$5737$1M&0Ej
     (make-record-constructor-descriptor
       g$6709$5640$1M&0Ej
       g$6607$5597$1M&0Ej
       g$6711$5641$1M&0Ej))
   (g$6708$5643$1M&0Ej
     g$6708$5738$1M&0Ej
     (record-predicate g$6709$5640$1M&0Ej))
   (g$make-irritants-condition$5644$1M&0Ej
     g$make-irritants-condition$5739$1M&0Ej
     (record-constructor g$6710$5642$1M&0Ej))
   (g$6707$5645$1M&0Ej
     g$6707$5740$1M&0Ej
     (record-accessor g$6709$5640$1M&0Ej '0))
   (g$irritants-condition?$5646$1M&0Ej
     g$irritants-condition?$5741$1M&0Ej
     (condition-predicate g$6709$5640$1M&0Ej))
   (g$condition-irritants$5647$1M&0Ej
     g$condition-irritants$5742$1M&0Ej
     (condition-accessor g$6709$5640$1M&0Ej g$6707$5645$1M&0Ej))
   (g$6726$5648$1M&0Ej
     g$6726$5743$1M&0Ej
     (make-record-type-descriptor
       '&who
       g$6606$5595$1M&0Ej
       'g$6729$1M&0Ej
       '#f
       '#f
       '#((immutable who))))
   (g$6728$5649$1M&0Ej g$6728$5744$1M&0Ej '#f)
   (g$6727$5650$1M&0Ej
     g$6727$5745$1M&0Ej
     (make-record-constructor-descriptor
       g$6726$5648$1M&0Ej
       g$6607$5597$1M&0Ej
       g$6728$5649$1M&0Ej))
   (g$6725$5651$1M&0Ej
     g$6725$5746$1M&0Ej
     (record-predicate g$6726$5648$1M&0Ej))
   (g$make-who-condition$5652$1M&0Ej
     g$make-who-condition$5747$1M&0Ej
     (record-constructor g$6727$5650$1M&0Ej))
   (g$6724$5653$1M&0Ej
     g$6724$5748$1M&0Ej
     (record-accessor g$6726$5648$1M&0Ej '0))
   (g$who-condition?$5654$1M&0Ej
     g$who-condition?$5749$1M&0Ej
     (condition-predicate g$6726$5648$1M&0Ej))
   (g$condition-who$5655$1M&0Ej
     g$condition-who$5750$1M&0Ej
     (condition-accessor g$6726$5648$1M&0Ej g$6724$5653$1M&0Ej))
   (g$6742$5656$1M&0Ej
     g$6742$5751$1M&0Ej
     (make-record-type-descriptor
       '&non-continuable
       g$6680$5628$1M&0Ej
       'g$6745$1M&0Ej
       '#f
       '#f
       '#()))
   (g$6744$5657$1M&0Ej g$6744$5752$1M&0Ej '#f)
   (g$6743$5658$1M&0Ej
     g$6743$5753$1M&0Ej
     (make-record-constructor-descriptor
       g$6742$5656$1M&0Ej
       g$6681$5630$1M&0Ej
       g$6744$5657$1M&0Ej))
   (g$6741$5659$1M&0Ej
     g$6741$5754$1M&0Ej
     (record-predicate g$6742$5656$1M&0Ej))
   (g$make-non-continuable-violation$5660$1M&0Ej
     g$make-non-continuable-violation$5755$1M&0Ej
     (record-constructor g$6743$5658$1M&0Ej))
   (g$non-continuable-violation?$5661$1M&0Ej
     g$non-continuable-violation?$5756$1M&0Ej
     (condition-predicate g$6742$5656$1M&0Ej))
   (g$6756$5662$1M&0Ej
     g$6756$5757$1M&0Ej
     (make-record-type-descriptor
       '&implementation-restriction
       g$6680$5628$1M&0Ej
       'g$6759$1M&0Ej
       '#f
       '#f
       '#()))
   (g$6758$5663$1M&0Ej g$6758$5758$1M&0Ej '#f)
   (g$6757$5664$1M&0Ej
     g$6757$5759$1M&0Ej
     (make-record-constructor-descriptor
       g$6756$5662$1M&0Ej
       g$6681$5630$1M&0Ej
       g$6758$5663$1M&0Ej))
   (g$6755$5665$1M&0Ej
     g$6755$5760$1M&0Ej
     (record-predicate g$6756$5662$1M&0Ej))
   (g$make-implementation-restriction-violation$5666$1M&0Ej
     g$make-implementation-restriction-violation$5761$1M&0Ej
     (record-constructor g$6757$5664$1M&0Ej))
   (g$implementation-restriction-violation?$5667$1M&0Ej
     g$implementation-restriction-violation?$5762$1M&0Ej
     (condition-predicate g$6756$5662$1M&0Ej))
   (g$6770$5668$1M&0Ej
     g$6770$5763$1M&0Ej
     (make-record-type-descriptor
       '&lexical
       g$6680$5628$1M&0Ej
       'g$6773$1M&0Ej
       '#f
       '#f
       '#()))
   (g$6772$5669$1M&0Ej g$6772$5764$1M&0Ej '#f)
   (g$6771$5670$1M&0Ej
     g$6771$5765$1M&0Ej
     (make-record-constructor-descriptor
       g$6770$5668$1M&0Ej
       g$6681$5630$1M&0Ej
       g$6772$5669$1M&0Ej))
   (g$6769$5671$1M&0Ej
     g$6769$5766$1M&0Ej
     (record-predicate g$6770$5668$1M&0Ej))
   (g$make-lexical-violation$5672$1M&0Ej
     g$make-lexical-violation$5767$1M&0Ej
     (record-constructor g$6771$5670$1M&0Ej))
   (g$lexical-violation?$5673$1M&0Ej
     g$lexical-violation?$5768$1M&0Ej
     (condition-predicate g$6770$5668$1M&0Ej))
   (g$6786$5674$1M&0Ej
     g$6786$5769$1M&0Ej
     (make-record-type-descriptor
       '&syntax
       g$6680$5628$1M&0Ej
       'g$6789$1M&0Ej
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6788$5675$1M&0Ej g$6788$5770$1M&0Ej '#f)
   (g$6787$5676$1M&0Ej
     g$6787$5771$1M&0Ej
     (make-record-constructor-descriptor
       g$6786$5674$1M&0Ej
       g$6681$5630$1M&0Ej
       g$6788$5675$1M&0Ej))
   (g$6785$5677$1M&0Ej
     g$6785$5772$1M&0Ej
     (record-predicate g$6786$5674$1M&0Ej))
   (g$make-syntax-violation$5678$1M&0Ej
     g$make-syntax-violation$5773$1M&0Ej
     (record-constructor g$6787$5676$1M&0Ej))
   (g$6783$5679$1M&0Ej
     g$6783$5774$1M&0Ej
     (record-accessor g$6786$5674$1M&0Ej '0))
   (g$6784$5680$1M&0Ej
     g$6784$5775$1M&0Ej
     (record-accessor g$6786$5674$1M&0Ej '1))
   (g$syntax-violation?$5681$1M&0Ej
     g$syntax-violation?$5776$1M&0Ej
     (condition-predicate g$6786$5674$1M&0Ej))
   (g$syntax-violation-form$5682$1M&0Ej
     g$syntax-violation-form$5777$1M&0Ej
     (condition-accessor g$6786$5674$1M&0Ej g$6783$5679$1M&0Ej))
   (g$syntax-violation-subform$5683$1M&0Ej
     g$syntax-violation-subform$5778$1M&0Ej
     (condition-accessor g$6786$5674$1M&0Ej g$6784$5680$1M&0Ej))
   (g$6804$5684$1M&0Ej
     g$6804$5779$1M&0Ej
     (make-record-type-descriptor
       '&undefined
       g$6680$5628$1M&0Ej
       'g$6807$1M&0Ej
       '#f
       '#f
       '#()))
   (g$6806$5685$1M&0Ej g$6806$5780$1M&0Ej '#f)
   (g$6805$5686$1M&0Ej
     g$6805$5781$1M&0Ej
     (make-record-constructor-descriptor
       g$6804$5684$1M&0Ej
       g$6681$5630$1M&0Ej
       g$6806$5685$1M&0Ej))
   (g$6803$5687$1M&0Ej
     g$6803$5782$1M&0Ej
     (record-predicate g$6804$5684$1M&0Ej))
   (g$make-undefined-violation$5688$1M&0Ej
     g$make-undefined-violation$5783$1M&0Ej
     (record-constructor g$6805$5686$1M&0Ej))
   (g$undefined-violation?$5689$1M&0Ej
     g$undefined-violation?$5784$1M&0Ej
     (condition-predicate g$6804$5684$1M&0Ej)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5785$1M&0Ej
     g$append!$5791$1M&0Ej
     (case-lambda
       ((g$a$5786$1M&0Ej . g$b$5787$1M&0Ej)
        (if (null? g$a$5786$1M&0Ej)
          g$b$5787$1M&0Ej
          (if (null? g$b$5787$1M&0Ej)
            g$a$5786$1M&0Ej
            (begin
              ((letrec ((g$f$5788$1M&0Ej
                          (case-lambda
                            ((g$a$5789$1M&0Ej)
                             ((case-lambda
                                ((g$n$5790$1M&0Ej)
                                 (if (null? g$n$5790$1M&0Ej)
                                   (set-cdr! g$a$5789$1M&0Ej g$b$5787$1M&0Ej)
                                   (g$f$5788$1M&0Ej g$n$5790$1M&0Ej))))
                              (cdr g$a$5789$1M&0Ej))))))
                 g$f$5788$1M&0Ej)
               g$a$5786$1M&0Ej)
              g$a$5786$1M&0Ej)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5792$1M&0Ej
     g$sign$5810$1M&0Ej
     (case-lambda
       ((g$n$5798$1M&0Ej)
        (if (> g$n$5798$1M&0Ej '0) '1 (if (< g$n$5798$1M&0Ej '0) '-1 '0)))))
   (g$quotient$5793$1M&0Ej
     g$quotient$5811$1M&0Ej
     (case-lambda
       ((g$n1$5799$1M&0Ej g$n2$5800$1M&0Ej)
        (begin
          (if (not (integer-valued? g$n1$5799$1M&0Ej))
            (assertion-violation 'quotient '"not an integer" g$n1$5799$1M&0Ej)
            (void))
          (if (not (integer-valued? g$n2$5800$1M&0Ej))
            (assertion-violation 'quotient '"not an integer" g$n2$5800$1M&0Ej)
            (void))
          (* (g$sign$5792$1M&0Ej g$n1$5799$1M&0Ej)
             (g$sign$5792$1M&0Ej g$n2$5800$1M&0Ej)
             (div (abs g$n1$5799$1M&0Ej) (abs g$n2$5800$1M&0Ej)))))))
   (g$remainder$5794$1M&0Ej
     g$remainder$5812$1M&0Ej
     (case-lambda
       ((g$n1$5801$1M&0Ej g$n2$5802$1M&0Ej)
        (begin
          (if (not (integer-valued? g$n1$5801$1M&0Ej))
            (assertion-violation 'remainder '"not an integer" g$n1$5801$1M&0Ej)
            (void))
          (if (not (integer-valued? g$n2$5802$1M&0Ej))
            (assertion-violation 'remainder '"not an integer" g$n2$5802$1M&0Ej)
            (void))
          (* (g$sign$5792$1M&0Ej g$n1$5801$1M&0Ej)
             (mod (abs g$n1$5801$1M&0Ej) (abs g$n2$5802$1M&0Ej)))))))
   (g$modulo$5795$1M&0Ej
     g$modulo$5813$1M&0Ej
     (case-lambda
       ((g$n1$5803$1M&0Ej g$n2$5804$1M&0Ej)
        (begin
          (if (not (integer-valued? g$n1$5803$1M&0Ej))
            (assertion-violation 'modulo '"not an integer" g$n1$5803$1M&0Ej)
            (void))
          (if (not (integer-valued? g$n2$5804$1M&0Ej))
            (assertion-violation 'modulo '"not an integer" g$n2$5804$1M&0Ej)
            (void))
          (* (g$sign$5792$1M&0Ej g$n2$5804$1M&0Ej)
             (mod (* (g$sign$5792$1M&0Ej g$n2$5804$1M&0Ej) g$n1$5803$1M&0Ej)
                  (abs g$n2$5804$1M&0Ej)))))))
   (g$make-promise$5796$1M&0Ej
     g$make-promise$5814$1M&0Ej
     (case-lambda
       ((g$proc$5805$1M&0Ej)
        ((case-lambda
           ((g$result-ready?$5806$1M&0Ej g$result$5807$1M&0Ej)
            (case-lambda
              (()
               (if g$result-ready?$5806$1M&0Ej
                 g$result$5807$1M&0Ej
                 ((case-lambda
                    ((g$x$5808$1M&0Ej)
                     (if g$result-ready?$5806$1M&0Ej
                       g$result$5807$1M&0Ej
                       (begin
                         (set! g$result-ready?$5806$1M&0Ej '#t)
                         (set! g$result$5807$1M&0Ej g$x$5808$1M&0Ej)
                         g$result$5807$1M&0Ej))))
                  (g$proc$5805$1M&0Ej)))))))
         '#f
         '#f))))
   (g$force$5797$1M&0Ej
     g$force$5815$1M&0Ej
     (case-lambda ((g$object$5809$1M&0Ej) (g$object$5809$1M&0Ej)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5816$1M&0Ej
     g$split$5842$1M&0Ej
     (case-lambda
       ((g$ls$5819$1M&0Ej)
        ((letrec ((g$loop$5820$1M&0Ej
                    (case-lambda
                      ((g$rest$5821$1M&0Ej
                         g$left$5822$1M&0Ej
                         g$right$5823$1M&0Ej)
                       (if (null? g$rest$5821$1M&0Ej)
                         (cons g$left$5822$1M&0Ej g$right$5823$1M&0Ej)
                         (if (null? (cdr g$rest$5821$1M&0Ej))
                           (cons
                             (cons (car g$rest$5821$1M&0Ej) g$left$5822$1M&0Ej)
                             g$right$5823$1M&0Ej)
                           (g$loop$5820$1M&0Ej
                             (g$cddr$5161$1M&0Ej g$rest$5821$1M&0Ej)
                             (cons (car g$rest$5821$1M&0Ej) g$left$5822$1M&0Ej)
                             (cons
                               (g$cadr$5159$1M&0Ej g$rest$5821$1M&0Ej)
                               g$right$5823$1M&0Ej))))))))
           g$loop$5820$1M&0Ej)
         g$ls$5819$1M&0Ej
         '()
         '()))))
   (g$reverse-it$5817$1M&0Ej
     g$reverse-it$5843$1M&0Ej
     (case-lambda
       ((g$head$5824$1M&0Ej g$tail$5825$1M&0Ej)
        (if (null? g$head$5824$1M&0Ej)
          g$tail$5825$1M&0Ej
          ((case-lambda
             ((g$hd$5826$1M&0Ej g$tl$5827$1M&0Ej)
              (g$reverse-it$5817$1M&0Ej
                g$tl$5827$1M&0Ej
                (cons g$hd$5826$1M&0Ej g$tail$5825$1M&0Ej))))
           (car g$head$5824$1M&0Ej)
           (cdr g$head$5824$1M&0Ej))))))
   (g$list-sort$5818$1M&0Ej
     g$list-sort$5844$1M&0Ej
     (case-lambda
       ((g$precedes?$5828$1M&0Ej g$ls$5829$1M&0Ej)
        ((case-lambda
           ((g$merge$5830$1M&0Ej)
            ((case-lambda
               (()
                (if (null? g$ls$5829$1M&0Ej)
                  '()
                  ((letrec ((g$helper$5831$1M&0Ej
                              (case-lambda
                                ((g$piece$5832$1M&0Ej)
                                 (if (null? (cdr g$piece$5832$1M&0Ej))
                                   g$piece$5832$1M&0Ej
                                   ((case-lambda
                                      ((g$parts$5833$1M&0Ej)
                                       (g$merge$5830$1M&0Ej
                                         (g$helper$5831$1M&0Ej
                                           (car g$parts$5833$1M&0Ej))
                                         (g$helper$5831$1M&0Ej
                                           (cdr g$parts$5833$1M&0Ej)))))
                                    (g$split$5816$1M&0Ej
                                      g$piece$5832$1M&0Ej)))))))
                     g$helper$5831$1M&0Ej)
                   g$ls$5829$1M&0Ej)))))))
         (case-lambda
           ((g$list-1$5834$1M&0Ej g$list-2$5835$1M&0Ej)
            ((letrec ((g$loop$5836$1M&0Ej
                        (case-lambda
                          ((g$source-1$5837$1M&0Ej
                             g$source-2$5838$1M&0Ej
                             g$so-far$5839$1M&0Ej)
                           (if (null? g$source-1$5837$1M&0Ej)
                             (g$reverse-it$5817$1M&0Ej
                               g$so-far$5839$1M&0Ej
                               g$source-2$5838$1M&0Ej)
                             (if (null? g$source-2$5838$1M&0Ej)
                               (g$reverse-it$5817$1M&0Ej
                                 g$so-far$5839$1M&0Ej
                                 g$source-1$5837$1M&0Ej)
                               ((case-lambda
                                  ((g$car-1$5840$1M&0Ej g$car-2$5841$1M&0Ej)
                                   (if (g$precedes?$5828$1M&0Ej
                                         g$car-2$5841$1M&0Ej
                                         g$car-1$5840$1M&0Ej)
                                     (g$loop$5836$1M&0Ej
                                       g$source-1$5837$1M&0Ej
                                       (cdr g$source-2$5838$1M&0Ej)
                                       (cons
                                         g$car-2$5841$1M&0Ej
                                         g$so-far$5839$1M&0Ej))
                                     (g$loop$5836$1M&0Ej
                                       g$source-2$5838$1M&0Ej
                                       (cdr g$source-1$5837$1M&0Ej)
                                       (cons
                                         g$car-1$5840$1M&0Ej
                                         g$so-far$5839$1M&0Ej)))))
                                (car g$source-1$5837$1M&0Ej)
                                (car g$source-2$5838$1M&0Ej))))))))
               g$loop$5836$1M&0Ej)
             g$list-1$5834$1M&0Ej
             g$list-2$5835$1M&0Ej
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$5851$1M&0Ej
     g$string-ci=?$5917$1M&0Ej
     (case-lambda
       ((g$a$5867$1M&0Ej g$b$5868$1M&0Ej . g$rest$5869$1M&0Ej)
        (begin
          (if (not (string? g$a$5867$1M&0Ej))
            (assertion-violation 'string-ci=? '"not a string" g$a$5867$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5870$1M&0Ej)
               (begin
                 (if (not (string? g$x$5870$1M&0Ej))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$5870$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5871$1M&0Ej)
                     (begin
                       (set! g$a$5867$1M&0Ej g$x$5870$1M&0Ej)
                       g$r$5871$1M&0Ej)))
                  (= (string-ci-compare g$a$5867$1M&0Ej g$x$5870$1M&0Ej) '0)))))
            (cons g$b$5868$1M&0Ej g$rest$5869$1M&0Ej))))))
   (g$string-ci<?$5852$1M&0Ej
     g$string-ci<?$5918$1M&0Ej
     (case-lambda
       ((g$a$5872$1M&0Ej g$b$5873$1M&0Ej . g$rest$5874$1M&0Ej)
        (begin
          (if (not (string? g$a$5872$1M&0Ej))
            (assertion-violation 'string-ci<? '"not a string" g$a$5872$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5875$1M&0Ej)
               (begin
                 (if (not (string? g$x$5875$1M&0Ej))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$5875$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5876$1M&0Ej)
                     (begin
                       (set! g$a$5872$1M&0Ej g$x$5875$1M&0Ej)
                       g$r$5876$1M&0Ej)))
                  (< (string-ci-compare g$a$5872$1M&0Ej g$x$5875$1M&0Ej) '0)))))
            (cons g$b$5873$1M&0Ej g$rest$5874$1M&0Ej))))))
   (g$string-ci>?$5853$1M&0Ej
     g$string-ci>?$5919$1M&0Ej
     (case-lambda
       ((g$a$5877$1M&0Ej g$b$5878$1M&0Ej . g$rest$5879$1M&0Ej)
        (begin
          (if (not (string? g$a$5877$1M&0Ej))
            (assertion-violation 'string-ci>? '"not a string" g$a$5877$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5880$1M&0Ej)
               (begin
                 (if (not (string? g$x$5880$1M&0Ej))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$5880$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5881$1M&0Ej)
                     (begin
                       (set! g$a$5877$1M&0Ej g$x$5880$1M&0Ej)
                       g$r$5881$1M&0Ej)))
                  (> (string-ci-compare g$a$5877$1M&0Ej g$x$5880$1M&0Ej) '0)))))
            (cons g$b$5878$1M&0Ej g$rest$5879$1M&0Ej))))))
   (g$string-ci<=?$5854$1M&0Ej
     g$string-ci<=?$5920$1M&0Ej
     (case-lambda
       ((g$a$5882$1M&0Ej g$b$5883$1M&0Ej . g$rest$5884$1M&0Ej)
        (begin
          (if (not (string? g$a$5882$1M&0Ej))
            (assertion-violation 'string-ci<=? '"not a string" g$a$5882$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5885$1M&0Ej)
               (begin
                 (if (not (string? g$x$5885$1M&0Ej))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$5885$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5886$1M&0Ej)
                     (begin
                       (set! g$a$5882$1M&0Ej g$x$5885$1M&0Ej)
                       g$r$5886$1M&0Ej)))
                  (<= (string-ci-compare g$a$5882$1M&0Ej g$x$5885$1M&0Ej)
                      '0)))))
            (cons g$b$5883$1M&0Ej g$rest$5884$1M&0Ej))))))
   (g$string-ci>=?$5855$1M&0Ej
     g$string-ci>=?$5921$1M&0Ej
     (case-lambda
       ((g$a$5887$1M&0Ej g$b$5888$1M&0Ej . g$rest$5889$1M&0Ej)
        (begin
          (if (not (string? g$a$5887$1M&0Ej))
            (assertion-violation 'string-ci>=? '"not a string" g$a$5887$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5890$1M&0Ej)
               (begin
                 (if (not (string? g$x$5890$1M&0Ej))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$5890$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5891$1M&0Ej)
                     (begin
                       (set! g$a$5887$1M&0Ej g$x$5890$1M&0Ej)
                       g$r$5891$1M&0Ej)))
                  (>= (string-ci-compare g$a$5887$1M&0Ej g$x$5890$1M&0Ej)
                      '0)))))
            (cons g$b$5888$1M&0Ej g$rest$5889$1M&0Ej))))))
   (g$char-ci=?$5862$1M&0Ej
     g$char-ci=?$5922$1M&0Ej
     (case-lambda
       ((g$a$5892$1M&0Ej g$b$5893$1M&0Ej . g$rest$5894$1M&0Ej)
        (begin
          (if (not (char? g$a$5892$1M&0Ej))
            (assertion-violation 'char-ci=? '"not a char" g$a$5892$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5895$1M&0Ej)
               (begin
                 (if (not (char? g$x$5895$1M&0Ej))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$5895$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5896$1M&0Ej)
                     (begin
                       (set! g$a$5892$1M&0Ej g$x$5895$1M&0Ej)
                       g$r$5896$1M&0Ej)))
                  (= (char->integer (char-upcase g$a$5892$1M&0Ej))
                     (char->integer (char-upcase g$x$5895$1M&0Ej)))))))
            (cons g$b$5893$1M&0Ej g$rest$5894$1M&0Ej))))))
   (g$char-ci<?$5863$1M&0Ej
     g$char-ci<?$5923$1M&0Ej
     (case-lambda
       ((g$a$5897$1M&0Ej g$b$5898$1M&0Ej . g$rest$5899$1M&0Ej)
        (begin
          (if (not (char? g$a$5897$1M&0Ej))
            (assertion-violation 'char-ci<? '"not a char" g$a$5897$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5900$1M&0Ej)
               (begin
                 (if (not (char? g$x$5900$1M&0Ej))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$5900$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5901$1M&0Ej)
                     (begin
                       (set! g$a$5897$1M&0Ej g$x$5900$1M&0Ej)
                       g$r$5901$1M&0Ej)))
                  (< (char->integer (char-upcase g$a$5897$1M&0Ej))
                     (char->integer (char-upcase g$x$5900$1M&0Ej)))))))
            (cons g$b$5898$1M&0Ej g$rest$5899$1M&0Ej))))))
   (g$char-ci>?$5864$1M&0Ej
     g$char-ci>?$5924$1M&0Ej
     (case-lambda
       ((g$a$5902$1M&0Ej g$b$5903$1M&0Ej . g$rest$5904$1M&0Ej)
        (begin
          (if (not (char? g$a$5902$1M&0Ej))
            (assertion-violation 'char-ci>? '"not a char" g$a$5902$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5905$1M&0Ej)
               (begin
                 (if (not (char? g$x$5905$1M&0Ej))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$5905$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5906$1M&0Ej)
                     (begin
                       (set! g$a$5902$1M&0Ej g$x$5905$1M&0Ej)
                       g$r$5906$1M&0Ej)))
                  (> (char->integer (char-upcase g$a$5902$1M&0Ej))
                     (char->integer (char-upcase g$x$5905$1M&0Ej)))))))
            (cons g$b$5903$1M&0Ej g$rest$5904$1M&0Ej))))))
   (g$char-ci<=?$5865$1M&0Ej
     g$char-ci<=?$5925$1M&0Ej
     (case-lambda
       ((g$a$5907$1M&0Ej g$b$5908$1M&0Ej . g$rest$5909$1M&0Ej)
        (begin
          (if (not (char? g$a$5907$1M&0Ej))
            (assertion-violation 'char-ci<=? '"not a char" g$a$5907$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5910$1M&0Ej)
               (begin
                 (if (not (char? g$x$5910$1M&0Ej))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$5910$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5911$1M&0Ej)
                     (begin
                       (set! g$a$5907$1M&0Ej g$x$5910$1M&0Ej)
                       g$r$5911$1M&0Ej)))
                  (<= (char->integer (char-upcase g$a$5907$1M&0Ej))
                      (char->integer (char-upcase g$x$5910$1M&0Ej)))))))
            (cons g$b$5908$1M&0Ej g$rest$5909$1M&0Ej))))))
   (g$char-ci>=?$5866$1M&0Ej
     g$char-ci>=?$5926$1M&0Ej
     (case-lambda
       ((g$a$5912$1M&0Ej g$b$5913$1M&0Ej . g$rest$5914$1M&0Ej)
        (begin
          (if (not (char? g$a$5912$1M&0Ej))
            (assertion-violation 'char-ci>=? '"not a char" g$a$5912$1M&0Ej)
            (void))
          (g$for-all$4995$1M&0Ej
            (case-lambda
              ((g$x$5915$1M&0Ej)
               (begin
                 (if (not (char? g$x$5915$1M&0Ej))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$5915$1M&0Ej)
                   (void))
                 ((case-lambda
                    ((g$r$5916$1M&0Ej)
                     (begin
                       (set! g$a$5912$1M&0Ej g$x$5915$1M&0Ej)
                       g$r$5916$1M&0Ej)))
                  (>= (char->integer (char-upcase g$a$5912$1M&0Ej))
                      (char->integer (char-upcase g$x$5915$1M&0Ej)))))))
            (cons g$b$5913$1M&0Ej g$rest$5914$1M&0Ej)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$5927$1M&0Ej
     g$bitwise-if$5974$1M&0Ej
     (case-lambda
       ((g$ei1$5934$1M&0Ej g$ei2$5935$1M&0Ej g$ei3$5936$1M&0Ej)
        (bitwise-ior
          (bitwise-and g$ei1$5934$1M&0Ej g$ei2$5935$1M&0Ej)
          (bitwise-and (bitwise-not g$ei1$5934$1M&0Ej) g$ei3$5936$1M&0Ej)))))
   (g$bitwise-copy-bit$5928$1M&0Ej
     g$bitwise-copy-bit$5975$1M&0Ej
     (case-lambda
       ((g$ei1$5937$1M&0Ej g$ei2$5938$1M&0Ej g$ei3$5939$1M&0Ej)
        ((case-lambda
           ((g$mask$5940$1M&0Ej)
            ((case-lambda
               (()
                (g$bitwise-if$5927$1M&0Ej
                  g$mask$5940$1M&0Ej
                  (g$bitwise-arithmetic-shift-left$5931$1M&0Ej
                    g$ei3$5939$1M&0Ej
                    g$ei2$5938$1M&0Ej)
                  g$ei1$5937$1M&0Ej))))))
         (g$bitwise-arithmetic-shift-left$5931$1M&0Ej '1 g$ei2$5938$1M&0Ej)))))
   (g$bitwise-bit-field$5929$1M&0Ej
     g$bitwise-bit-field$5976$1M&0Ej
     (case-lambda
       ((g$ei1$5941$1M&0Ej g$ei2$5942$1M&0Ej g$ei3$5943$1M&0Ej)
        ((case-lambda
           ((g$mask$5944$1M&0Ej)
            (g$bitwise-arithmetic-shift-right$5932$1M&0Ej
              (bitwise-and g$ei1$5941$1M&0Ej g$mask$5944$1M&0Ej)
              g$ei2$5942$1M&0Ej)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$5931$1M&0Ej
             '-1
             g$ei3$5943$1M&0Ej))))))
   (g$bitwise-copy-bit-field$5930$1M&0Ej
     g$bitwise-copy-bit-field$5977$1M&0Ej
     (case-lambda
       ((g$ei1$5945$1M&0Ej
          g$ei2$5946$1M&0Ej
          g$ei3$5947$1M&0Ej
          g$ei4$5948$1M&0Ej)
        ((case-lambda
           ((g$to$5949$1M&0Ej)
            ((case-lambda
               ((g$start$5950$1M&0Ej)
                ((case-lambda
                   ((g$end$5951$1M&0Ej)
                    ((case-lambda
                       ((g$from$5952$1M&0Ej)
                        ((case-lambda
                           ((g$mask1$5953$1M&0Ej)
                            ((case-lambda
                               ((g$mask2$5954$1M&0Ej)
                                ((case-lambda
                                   ((g$mask$5955$1M&0Ej)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$5927$1M&0Ej
                                          g$mask$5955$1M&0Ej
                                          (g$bitwise-arithmetic-shift-left$5931$1M&0Ej
                                            g$from$5952$1M&0Ej
                                            g$start$5950$1M&0Ej)
                                          g$to$5949$1M&0Ej))))))
                                 (bitwise-and
                                   g$mask1$5953$1M&0Ej
                                   g$mask2$5954$1M&0Ej))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$5931$1M&0Ej
                                 '-1
                                 g$end$5951$1M&0Ej)))))
                         (g$bitwise-arithmetic-shift-left$5931$1M&0Ej
                           '-1
                           g$start$5950$1M&0Ej))))
                     g$ei4$5948$1M&0Ej)))
                 g$ei3$5947$1M&0Ej)))
             g$ei2$5946$1M&0Ej)))
         g$ei1$5945$1M&0Ej))))
   (g$bitwise-arithmetic-shift-left$5931$1M&0Ej
     g$bitwise-arithmetic-shift-left$5978$1M&0Ej
     (case-lambda
       ((g$ei1$5956$1M&0Ej g$ei2$5957$1M&0Ej)
        (bitwise-arithmetic-shift g$ei1$5956$1M&0Ej g$ei2$5957$1M&0Ej))))
   (g$bitwise-arithmetic-shift-right$5932$1M&0Ej
     g$bitwise-arithmetic-shift-right$5979$1M&0Ej
     (case-lambda
       ((g$ei1$5958$1M&0Ej g$ei2$5959$1M&0Ej)
        (bitwise-arithmetic-shift g$ei1$5958$1M&0Ej (- g$ei2$5959$1M&0Ej)))))
   (g$bitwise-rotate-bit-field$5933$1M&0Ej
     g$bitwise-rotate-bit-field$5980$1M&0Ej
     (case-lambda
       ((g$ei1$5960$1M&0Ej
          g$ei2$5961$1M&0Ej
          g$ei3$5962$1M&0Ej
          g$ei4$5963$1M&0Ej)
        ((case-lambda
           ((g$n$5964$1M&0Ej)
            ((case-lambda
               ((g$start$5965$1M&0Ej)
                ((case-lambda
                   ((g$end$5966$1M&0Ej)
                    ((case-lambda
                       ((g$count$5967$1M&0Ej)
                        ((case-lambda
                           ((g$width$5968$1M&0Ej)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5968$1M&0Ej)
                                  ((case-lambda
                                     ((g$count$5969$1M&0Ej)
                                      ((case-lambda
                                         ((g$field0$5970$1M&0Ej)
                                          ((case-lambda
                                             ((g$field1$5971$1M&0Ej)
                                              ((case-lambda
                                                 ((g$field2$5972$1M&0Ej)
                                                  ((case-lambda
                                                     ((g$field$5973$1M&0Ej)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$5930$1M&0Ej
                                                            g$n$5964$1M&0Ej
                                                            g$start$5965$1M&0Ej
                                                            g$end$5966$1M&0Ej
                                                            g$field$5973$1M&0Ej))))))
                                                   (bitwise-ior
                                                     g$field1$5971$1M&0Ej
                                                     g$field2$5972$1M&0Ej))))
                                               (g$bitwise-arithmetic-shift-right$5932$1M&0Ej
                                                 g$field0$5970$1M&0Ej
                                                 (- g$width$5968$1M&0Ej
                                                    g$count$5969$1M&0Ej)))))
                                           (g$bitwise-arithmetic-shift-left$5931$1M&0Ej
                                             g$field0$5970$1M&0Ej
                                             g$count$5969$1M&0Ej))))
                                       (g$bitwise-bit-field$5929$1M&0Ej
                                         g$n$5964$1M&0Ej
                                         g$start$5965$1M&0Ej
                                         g$end$5966$1M&0Ej))))
                                   (mod g$count$5967$1M&0Ej
                                        g$width$5968$1M&0Ej))
                                  g$n$5964$1M&0Ej))))))
                         (- g$end$5966$1M&0Ej g$start$5965$1M&0Ej))))
                     g$ei4$5963$1M&0Ej)))
                 g$ei3$5962$1M&0Ej)))
             g$ei2$5961$1M&0Ej)))
         g$ei1$5960$1M&0Ej)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$5981$1M&0Ej
     g$fxif$6028$1M&0Ej
     (case-lambda
       ((g$fx1$5988$1M&0Ej g$fx2$5989$1M&0Ej g$fx3$5990$1M&0Ej)
        (fxior
          (fxand g$fx1$5988$1M&0Ej g$fx2$5989$1M&0Ej)
          (fxand (fxnot g$fx1$5988$1M&0Ej) g$fx3$5990$1M&0Ej)))))
   (g$fxcopy-bit$5982$1M&0Ej
     g$fxcopy-bit$6029$1M&0Ej
     (case-lambda
       ((g$fx1$5991$1M&0Ej g$fx2$5992$1M&0Ej g$fx3$5993$1M&0Ej)
        ((case-lambda
           ((g$mask$5994$1M&0Ej)
            ((case-lambda
               (()
                (g$fxif$5981$1M&0Ej
                  g$mask$5994$1M&0Ej
                  (g$fxarithmetic-shift-left$5985$1M&0Ej
                    g$fx3$5993$1M&0Ej
                    g$fx2$5992$1M&0Ej)
                  g$fx1$5991$1M&0Ej))))))
         (g$fxarithmetic-shift-left$5985$1M&0Ej '1 g$fx2$5992$1M&0Ej)))))
   (g$fxbit-field$5983$1M&0Ej
     g$fxbit-field$6030$1M&0Ej
     (case-lambda
       ((g$fx1$5995$1M&0Ej g$fx2$5996$1M&0Ej g$fx3$5997$1M&0Ej)
        ((case-lambda
           ((g$mask$5998$1M&0Ej)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$5986$1M&0Ej
                  (fxand g$fx1$5995$1M&0Ej g$mask$5998$1M&0Ej)
                  g$fx2$5996$1M&0Ej))))))
         (fxnot
           (g$fxarithmetic-shift-left$5985$1M&0Ej '-1 g$fx3$5997$1M&0Ej))))))
   (g$fxcopy-bit-field$5984$1M&0Ej
     g$fxcopy-bit-field$6031$1M&0Ej
     (case-lambda
       ((g$fx1$5999$1M&0Ej
          g$fx2$6000$1M&0Ej
          g$fx3$6001$1M&0Ej
          g$fx4$6002$1M&0Ej)
        ((case-lambda
           ((g$to$6003$1M&0Ej)
            ((case-lambda
               ((g$start$6004$1M&0Ej)
                ((case-lambda
                   ((g$end$6005$1M&0Ej)
                    ((case-lambda
                       ((g$from$6006$1M&0Ej)
                        ((case-lambda
                           ((g$mask1$6007$1M&0Ej)
                            ((case-lambda
                               ((g$mask2$6008$1M&0Ej)
                                ((case-lambda
                                   ((g$mask$6009$1M&0Ej)
                                    ((case-lambda
                                       (()
                                        (g$fxif$5981$1M&0Ej
                                          g$mask$6009$1M&0Ej
                                          (g$fxarithmetic-shift-left$5985$1M&0Ej
                                            g$from$6006$1M&0Ej
                                            g$start$6004$1M&0Ej)
                                          g$to$6003$1M&0Ej))))))
                                 (fxand
                                   g$mask1$6007$1M&0Ej
                                   g$mask2$6008$1M&0Ej))))
                             (fxnot
                               (g$fxarithmetic-shift-left$5985$1M&0Ej
                                 '-1
                                 g$end$6005$1M&0Ej)))))
                         (g$fxarithmetic-shift-left$5985$1M&0Ej
                           '-1
                           g$start$6004$1M&0Ej))))
                     g$fx4$6002$1M&0Ej)))
                 g$fx3$6001$1M&0Ej)))
             g$fx2$6000$1M&0Ej)))
         g$fx1$5999$1M&0Ej))))
   (g$fxarithmetic-shift-left$5985$1M&0Ej
     g$fxarithmetic-shift-left$6032$1M&0Ej
     (case-lambda
       ((g$fx1$6010$1M&0Ej g$fx2$6011$1M&0Ej)
        (fxarithmetic-shift g$fx1$6010$1M&0Ej g$fx2$6011$1M&0Ej))))
   (g$fxarithmetic-shift-right$5986$1M&0Ej
     g$fxarithmetic-shift-right$6033$1M&0Ej
     (case-lambda
       ((g$fx1$6012$1M&0Ej g$fx2$6013$1M&0Ej)
        (fxarithmetic-shift g$fx1$6012$1M&0Ej (- g$fx2$6013$1M&0Ej)))))
   (g$fxrotate-bit-field$5987$1M&0Ej
     g$fxrotate-bit-field$6034$1M&0Ej
     (case-lambda
       ((g$fx1$6014$1M&0Ej
          g$fx2$6015$1M&0Ej
          g$fx3$6016$1M&0Ej
          g$fx4$6017$1M&0Ej)
        ((case-lambda
           ((g$n$6018$1M&0Ej)
            ((case-lambda
               ((g$start$6019$1M&0Ej)
                ((case-lambda
                   ((g$end$6020$1M&0Ej)
                    ((case-lambda
                       ((g$count$6021$1M&0Ej)
                        ((case-lambda
                           ((g$width$6022$1M&0Ej)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6022$1M&0Ej)
                                  ((case-lambda
                                     ((g$count$6023$1M&0Ej)
                                      ((case-lambda
                                         ((g$field0$6024$1M&0Ej)
                                          ((case-lambda
                                             ((g$field1$6025$1M&0Ej)
                                              ((case-lambda
                                                 ((g$field2$6026$1M&0Ej)
                                                  ((case-lambda
                                                     ((g$field$6027$1M&0Ej)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$5984$1M&0Ej
                                                            g$n$6018$1M&0Ej
                                                            g$start$6019$1M&0Ej
                                                            g$end$6020$1M&0Ej
                                                            g$field$6027$1M&0Ej))))))
                                                   (fxior
                                                     g$field1$6025$1M&0Ej
                                                     g$field2$6026$1M&0Ej))))
                                               (g$fxarithmetic-shift-right$5986$1M&0Ej
                                                 g$field0$6024$1M&0Ej
                                                 (- g$width$6022$1M&0Ej
                                                    g$count$6023$1M&0Ej)))))
                                           (g$fxarithmetic-shift-left$5985$1M&0Ej
                                             g$field0$6024$1M&0Ej
                                             g$count$6023$1M&0Ej))))
                                       (g$fxbit-field$5983$1M&0Ej
                                         g$n$6018$1M&0Ej
                                         g$start$6019$1M&0Ej
                                         g$end$6020$1M&0Ej))))
                                   (mod g$count$6021$1M&0Ej
                                        g$width$6022$1M&0Ej))
                                  g$n$6018$1M&0Ej))))))
                         (- g$end$6020$1M&0Ej g$start$6019$1M&0Ej))))
                     g$fx4$6017$1M&0Ej)))
                 g$fx3$6016$1M&0Ej)))
             g$fx2$6015$1M&0Ej)))
         g$fx1$6014$1M&0Ej)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7102$6035$1M&0Ej
     g$7102$6047$1M&0Ej
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7105$1M&0Ej
       '#f
       '#f
       '#()))
   (g$7104$6036$1M&0Ej g$7104$6048$1M&0Ej '#f)
   (g$7103$6037$1M&0Ej
     g$7103$6049$1M&0Ej
     (make-record-constructor-descriptor
       g$7102$6035$1M&0Ej
       &implementation-restriction-rcd
       g$7104$6036$1M&0Ej))
   (g$7101$6038$1M&0Ej
     g$7101$6050$1M&0Ej
     (record-predicate g$7102$6035$1M&0Ej))
   (g$make-no-infinities-violation$6039$1M&0Ej
     g$make-no-infinities-violation$6051$1M&0Ej
     (record-constructor g$7103$6037$1M&0Ej))
   (g$no-infinities-violation?$6040$1M&0Ej
     g$no-infinities-violation?$6052$1M&0Ej
     (condition-predicate g$7102$6035$1M&0Ej))
   (g$7116$6041$1M&0Ej
     g$7116$6053$1M&0Ej
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7119$1M&0Ej
       '#f
       '#f
       '#()))
   (g$7118$6042$1M&0Ej g$7118$6054$1M&0Ej '#f)
   (g$7117$6043$1M&0Ej
     g$7117$6055$1M&0Ej
     (make-record-constructor-descriptor
       g$7116$6041$1M&0Ej
       &implementation-restriction-rcd
       g$7118$6042$1M&0Ej))
   (g$7115$6044$1M&0Ej
     g$7115$6056$1M&0Ej
     (record-predicate g$7116$6041$1M&0Ej))
   (g$make-no-nans-violation$6045$1M&0Ej
     g$make-no-nans-violation$6057$1M&0Ej
     (record-constructor g$7117$6043$1M&0Ej))
   (g$no-nans-violation?$6046$1M&0Ej
     g$no-nans-violation?$6058$1M&0Ej
     (condition-predicate g$7116$6041$1M&0Ej)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7131$6059$1M&0Ej
     g$7131$6139$1M&0Ej
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7134$1M&0Ej
       '#f
       '#f
       '#()))
   (g$7133$6060$1M&0Ej g$7133$6140$1M&0Ej '#f)
   (g$7132$6061$1M&0Ej
     g$7132$6141$1M&0Ej
     (make-record-constructor-descriptor
       g$7131$6059$1M&0Ej
       &error-rcd
       g$7133$6060$1M&0Ej))
   (g$7130$6062$1M&0Ej
     g$7130$6142$1M&0Ej
     (record-predicate g$7131$6059$1M&0Ej))
   (g$make-i/o-error$6063$1M&0Ej
     g$make-i/o-error$6143$1M&0Ej
     (record-constructor g$7132$6061$1M&0Ej))
   (g$i/o-error?$6064$1M&0Ej
     g$i/o-error?$6144$1M&0Ej
     (condition-predicate g$7131$6059$1M&0Ej))
   (g$7145$6065$1M&0Ej
     g$7145$6145$1M&0Ej
     (make-record-type-descriptor
       '&i/o-read
       g$7131$6059$1M&0Ej
       'g$7148$1M&0Ej
       '#f
       '#f
       '#()))
   (g$7147$6066$1M&0Ej g$7147$6146$1M&0Ej '#f)
   (g$7146$6067$1M&0Ej
     g$7146$6147$1M&0Ej
     (make-record-constructor-descriptor
       g$7145$6065$1M&0Ej
       g$7132$6061$1M&0Ej
       g$7147$6066$1M&0Ej))
   (g$7144$6068$1M&0Ej
     g$7144$6148$1M&0Ej
     (record-predicate g$7145$6065$1M&0Ej))
   (g$make-i/o-read-error$6069$1M&0Ej
     g$make-i/o-read-error$6149$1M&0Ej
     (record-constructor g$7146$6067$1M&0Ej))
   (g$i/o-read-error?$6070$1M&0Ej
     g$i/o-read-error?$6150$1M&0Ej
     (condition-predicate g$7145$6065$1M&0Ej))
   (g$7159$6071$1M&0Ej
     g$7159$6151$1M&0Ej
     (make-record-type-descriptor
       '&i/o-write
       g$7131$6059$1M&0Ej
       'g$7162$1M&0Ej
       '#f
       '#f
       '#()))
   (g$7161$6072$1M&0Ej g$7161$6152$1M&0Ej '#f)
   (g$7160$6073$1M&0Ej
     g$7160$6153$1M&0Ej
     (make-record-constructor-descriptor
       g$7159$6071$1M&0Ej
       g$7132$6061$1M&0Ej
       g$7161$6072$1M&0Ej))
   (g$7158$6074$1M&0Ej
     g$7158$6154$1M&0Ej
     (record-predicate g$7159$6071$1M&0Ej))
   (g$make-i/o-write-error$6075$1M&0Ej
     g$make-i/o-write-error$6155$1M&0Ej
     (record-constructor g$7160$6073$1M&0Ej))
   (g$i/o-write-error?$6076$1M&0Ej
     g$i/o-write-error?$6156$1M&0Ej
     (condition-predicate g$7159$6071$1M&0Ej))
   (g$7174$6077$1M&0Ej
     g$7174$6157$1M&0Ej
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7131$6059$1M&0Ej
       'g$7177$1M&0Ej
       '#f
       '#f
       '#((immutable position))))
   (g$7176$6078$1M&0Ej g$7176$6158$1M&0Ej '#f)
   (g$7175$6079$1M&0Ej
     g$7175$6159$1M&0Ej
     (make-record-constructor-descriptor
       g$7174$6077$1M&0Ej
       g$7132$6061$1M&0Ej
       g$7176$6078$1M&0Ej))
   (g$7173$6080$1M&0Ej
     g$7173$6160$1M&0Ej
     (record-predicate g$7174$6077$1M&0Ej))
   (g$make-i/o-invalid-position-error$6081$1M&0Ej
     g$make-i/o-invalid-position-error$6161$1M&0Ej
     (record-constructor g$7175$6079$1M&0Ej))
   (g$7172$6082$1M&0Ej
     g$7172$6162$1M&0Ej
     (record-accessor g$7174$6077$1M&0Ej '0))
   (g$i/o-invalid-position-error?$6083$1M&0Ej
     g$i/o-invalid-position-error?$6163$1M&0Ej
     (condition-predicate g$7174$6077$1M&0Ej))
   (g$i/o-error-position$6084$1M&0Ej
     g$i/o-error-position$6164$1M&0Ej
     (condition-accessor g$7174$6077$1M&0Ej g$7172$6082$1M&0Ej))
   (g$7191$6085$1M&0Ej
     g$7191$6165$1M&0Ej
     (make-record-type-descriptor
       '&i/o-filename
       g$7131$6059$1M&0Ej
       'g$7194$1M&0Ej
       '#f
       '#f
       '#((immutable filename))))
   (g$7193$6086$1M&0Ej g$7193$6166$1M&0Ej '#f)
   (g$7192$6087$1M&0Ej
     g$7192$6167$1M&0Ej
     (make-record-constructor-descriptor
       g$7191$6085$1M&0Ej
       g$7132$6061$1M&0Ej
       g$7193$6086$1M&0Ej))
   (g$7190$6088$1M&0Ej
     g$7190$6168$1M&0Ej
     (record-predicate g$7191$6085$1M&0Ej))
   (g$make-i/o-filename-error$6089$1M&0Ej
     g$make-i/o-filename-error$6169$1M&0Ej
     (record-constructor g$7192$6087$1M&0Ej))
   (g$7189$6090$1M&0Ej
     g$7189$6170$1M&0Ej
     (record-accessor g$7191$6085$1M&0Ej '0))
   (g$i/o-filename-error?$6091$1M&0Ej
     g$i/o-filename-error?$6171$1M&0Ej
     (condition-predicate g$7191$6085$1M&0Ej))
   (g$i/o-error-filename$6092$1M&0Ej
     g$i/o-error-filename$6172$1M&0Ej
     (condition-accessor g$7191$6085$1M&0Ej g$7189$6090$1M&0Ej))
   (g$7207$6093$1M&0Ej
     g$7207$6173$1M&0Ej
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7191$6085$1M&0Ej
       'g$7210$1M&0Ej
       '#f
       '#f
       '#()))
   (g$7209$6094$1M&0Ej g$7209$6174$1M&0Ej '#f)
   (g$7208$6095$1M&0Ej
     g$7208$6175$1M&0Ej
     (make-record-constructor-descriptor
       g$7207$6093$1M&0Ej
       g$7192$6087$1M&0Ej
       g$7209$6094$1M&0Ej))
   (g$7206$6096$1M&0Ej
     g$7206$6176$1M&0Ej
     (record-predicate g$7207$6093$1M&0Ej))
   (g$make-i/o-file-protection-error$6097$1M&0Ej
     g$make-i/o-file-protection-error$6177$1M&0Ej
     (record-constructor g$7208$6095$1M&0Ej))
   (g$i/o-file-protection-error?$6098$1M&0Ej
     g$i/o-file-protection-error?$6178$1M&0Ej
     (condition-predicate g$7207$6093$1M&0Ej))
   (g$7221$6099$1M&0Ej
     g$7221$6179$1M&0Ej
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7207$6093$1M&0Ej
       'g$7224$1M&0Ej
       '#f
       '#f
       '#()))
   (g$7223$6100$1M&0Ej g$7223$6180$1M&0Ej '#f)
   (g$7222$6101$1M&0Ej
     g$7222$6181$1M&0Ej
     (make-record-constructor-descriptor
       g$7221$6099$1M&0Ej
       g$7208$6095$1M&0Ej
       g$7223$6100$1M&0Ej))
   (g$7220$6102$1M&0Ej
     g$7220$6182$1M&0Ej
     (record-predicate g$7221$6099$1M&0Ej))
   (g$make-i/o-file-is-read-only-error$6103$1M&0Ej
     g$make-i/o-file-is-read-only-error$6183$1M&0Ej
     (record-constructor g$7222$6101$1M&0Ej))
   (g$i/o-file-is-read-only-error?$6104$1M&0Ej
     g$i/o-file-is-read-only-error?$6184$1M&0Ej
     (condition-predicate g$7221$6099$1M&0Ej))
   (g$7235$6105$1M&0Ej
     g$7235$6185$1M&0Ej
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7191$6085$1M&0Ej
       'g$7238$1M&0Ej
       '#f
       '#f
       '#()))
   (g$7237$6106$1M&0Ej g$7237$6186$1M&0Ej '#f)
   (g$7236$6107$1M&0Ej
     g$7236$6187$1M&0Ej
     (make-record-constructor-descriptor
       g$7235$6105$1M&0Ej
       g$7192$6087$1M&0Ej
       g$7237$6106$1M&0Ej))
   (g$7234$6108$1M&0Ej
     g$7234$6188$1M&0Ej
     (record-predicate g$7235$6105$1M&0Ej))
   (g$make-i/o-file-already-exists-error$6109$1M&0Ej
     g$make-i/o-file-already-exists-error$6189$1M&0Ej
     (record-constructor g$7236$6107$1M&0Ej))
   (g$i/o-file-already-exists-error?$6110$1M&0Ej
     g$i/o-file-already-exists-error?$6190$1M&0Ej
     (condition-predicate g$7235$6105$1M&0Ej))
   (g$7249$6111$1M&0Ej
     g$7249$6191$1M&0Ej
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7191$6085$1M&0Ej
       'g$7252$1M&0Ej
       '#f
       '#f
       '#()))
   (g$7251$6112$1M&0Ej g$7251$6192$1M&0Ej '#f)
   (g$7250$6113$1M&0Ej
     g$7250$6193$1M&0Ej
     (make-record-constructor-descriptor
       g$7249$6111$1M&0Ej
       g$7192$6087$1M&0Ej
       g$7251$6112$1M&0Ej))
   (g$7248$6114$1M&0Ej
     g$7248$6194$1M&0Ej
     (record-predicate g$7249$6111$1M&0Ej))
   (g$make-i/o-file-does-not-exist-error$6115$1M&0Ej
     g$make-i/o-file-does-not-exist-error$6195$1M&0Ej
     (record-constructor g$7250$6113$1M&0Ej))
   (g$i/o-file-does-not-exist-error?$6116$1M&0Ej
     g$i/o-file-does-not-exist-error?$6196$1M&0Ej
     (condition-predicate g$7249$6111$1M&0Ej))
   (g$7264$6117$1M&0Ej
     g$7264$6197$1M&0Ej
     (make-record-type-descriptor
       '&i/o-port
       g$7131$6059$1M&0Ej
       'g$7267$1M&0Ej
       '#f
       '#f
       '#((immutable port))))
   (g$7266$6118$1M&0Ej g$7266$6198$1M&0Ej '#f)
   (g$7265$6119$1M&0Ej
     g$7265$6199$1M&0Ej
     (make-record-constructor-descriptor
       g$7264$6117$1M&0Ej
       g$7132$6061$1M&0Ej
       g$7266$6118$1M&0Ej))
   (g$7263$6120$1M&0Ej
     g$7263$6200$1M&0Ej
     (record-predicate g$7264$6117$1M&0Ej))
   (g$make-i/o-port-error$6121$1M&0Ej
     g$make-i/o-port-error$6201$1M&0Ej
     (record-constructor g$7265$6119$1M&0Ej))
   (g$7262$6122$1M&0Ej
     g$7262$6202$1M&0Ej
     (record-accessor g$7264$6117$1M&0Ej '0))
   (g$i/o-port-error?$6123$1M&0Ej
     g$i/o-port-error?$6203$1M&0Ej
     (condition-predicate g$7264$6117$1M&0Ej))
   (g$i/o-error-port$6124$1M&0Ej
     g$i/o-error-port$6204$1M&0Ej
     (condition-accessor g$7264$6117$1M&0Ej g$7262$6122$1M&0Ej))
   (g$7280$6125$1M&0Ej
     g$7280$6205$1M&0Ej
     (make-record-type-descriptor
       '&i/o-decoding
       g$7264$6117$1M&0Ej
       'g$7283$1M&0Ej
       '#f
       '#f
       '#()))
   (g$7282$6126$1M&0Ej g$7282$6206$1M&0Ej '#f)
   (g$7281$6127$1M&0Ej
     g$7281$6207$1M&0Ej
     (make-record-constructor-descriptor
       g$7280$6125$1M&0Ej
       g$7265$6119$1M&0Ej
       g$7282$6126$1M&0Ej))
   (g$7279$6128$1M&0Ej
     g$7279$6208$1M&0Ej
     (record-predicate g$7280$6125$1M&0Ej))
   (g$make-i/o-decoding-error$6129$1M&0Ej
     g$make-i/o-decoding-error$6209$1M&0Ej
     (record-constructor g$7281$6127$1M&0Ej))
   (g$i/o-decoding-error?$6130$1M&0Ej
     g$i/o-decoding-error?$6210$1M&0Ej
     (condition-predicate g$7280$6125$1M&0Ej))
   (g$7295$6131$1M&0Ej
     g$7295$6211$1M&0Ej
     (make-record-type-descriptor
       '&i/o-encoding
       g$7264$6117$1M&0Ej
       'g$7298$1M&0Ej
       '#f
       '#f
       '#((immutable char))))
   (g$7297$6132$1M&0Ej g$7297$6212$1M&0Ej '#f)
   (g$7296$6133$1M&0Ej
     g$7296$6213$1M&0Ej
     (make-record-constructor-descriptor
       g$7295$6131$1M&0Ej
       g$7265$6119$1M&0Ej
       g$7297$6132$1M&0Ej))
   (g$7294$6134$1M&0Ej
     g$7294$6214$1M&0Ej
     (record-predicate g$7295$6131$1M&0Ej))
   (g$make-i/o-encoding-error$6135$1M&0Ej
     g$make-i/o-encoding-error$6215$1M&0Ej
     (record-constructor g$7296$6133$1M&0Ej))
   (g$7293$6136$1M&0Ej
     g$7293$6216$1M&0Ej
     (record-accessor g$7295$6131$1M&0Ej '0))
   (g$i/o-encoding-error?$6137$1M&0Ej
     g$i/o-encoding-error?$6217$1M&0Ej
     (condition-predicate g$7295$6131$1M&0Ej))
   (g$i/o-encoding-error-char$6138$1M&0Ej
     g$i/o-encoding-error-char$6218$1M&0Ej
     (condition-accessor g$7295$6131$1M&0Ej g$7293$6136$1M&0Ej)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6219$1M&0Ej
     g$get-output-string$6227$1M&0Ej
     (case-lambda
       ((g$port$6223$1M&0Ej)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6223$1M&0Ej))))
   (g$open-output-string$6220$1M&0Ej
     g$open-output-string$6228$1M&0Ej
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6221$1M&0Ej
     g$open-string-output-port$6229$1M&0Ej
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6224$1M&0Ej)
            (values
              g$p$6224$1M&0Ej
              (case-lambda
                (() (g$get-output-string$6219$1M&0Ej g$p$6224$1M&0Ej))))))
         (g$open-output-string$6220$1M&0Ej)))))
   (g$port?$6222$1M&0Ej
     g$port?$6230$1M&0Ej
     (case-lambda
       ((g$obj$6225$1M&0Ej)
        ((case-lambda
           ((g$t$6226$1M&0Ej)
            (if g$t$6226$1M&0Ej
              g$t$6226$1M&0Ej
              (begin '#f (binary-port? g$obj$6225$1M&0Ej)))))
         (textual-port? g$obj$6225$1M&0Ej))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6237$1M&0Ej
     g$with-input-from-file$6263$1M&0Ej
     (case-lambda
       ((g$filename$6241$1M&0Ej g$thunk$6242$1M&0Ej)
        ((case-lambda
           ((g$current-input-port$6245$1M&0Ej g$t$6246$1M&0Ej)
            ((case-lambda
               ((g$swap$6247$1M&0Ej)
                (dynamic-wind
                  g$swap$6247$1M&0Ej
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6242$1M&0Ej)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6247$1M&0Ej)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6248$1M&0Ej)
                    (begin
                      (g$current-input-port$6245$1M&0Ej g$t$6246$1M&0Ej)
                      (set! g$t$6246$1M&0Ej g$t$6248$1M&0Ej))))
                 (g$current-input-port$6245$1M&0Ej)))))))
         current-input-port
         (open-input-file g$filename$6241$1M&0Ej)))))
   (g$with-output-to-file$6238$1M&0Ej
     g$with-output-to-file$6264$1M&0Ej
     (case-lambda
       ((g$filename$6249$1M&0Ej g$thunk$6250$1M&0Ej)
        ((case-lambda
           ((g$current-output-port$6253$1M&0Ej g$t$6254$1M&0Ej)
            ((case-lambda
               ((g$swap$6255$1M&0Ej)
                (dynamic-wind
                  g$swap$6255$1M&0Ej
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6250$1M&0Ej)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6255$1M&0Ej)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6256$1M&0Ej)
                    (begin
                      (g$current-output-port$6253$1M&0Ej g$t$6254$1M&0Ej)
                      (set! g$t$6254$1M&0Ej g$t$6256$1M&0Ej))))
                 (g$current-output-port$6253$1M&0Ej)))))))
         current-output-port
         (open-output-file g$filename$6249$1M&0Ej)))))
   (g$call-with-input-file$6239$1M&0Ej
     g$call-with-input-file$6265$1M&0Ej
     (case-lambda
       ((g$filename$6257$1M&0Ej g$proc$6258$1M&0Ej)
        ((case-lambda
           ((g$p$6259$1M&0Ej)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6258$1M&0Ej g$p$6259$1M&0Ej)))
              (case-lambda (() (close-input-port g$p$6259$1M&0Ej))))))
         (open-input-file g$filename$6257$1M&0Ej)))))
   (g$call-with-output-file$6240$1M&0Ej
     g$call-with-output-file$6266$1M&0Ej
     (case-lambda
       ((g$filename$6260$1M&0Ej g$proc$6261$1M&0Ej)
        ((case-lambda
           ((g$p$6262$1M&0Ej)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6261$1M&0Ej g$p$6262$1M&0Ej)))
              (case-lambda (() (close-output-port g$p$6262$1M&0Ej))))))
         (open-output-file g$filename$6260$1M&0Ej))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7362$6267$1M&0Ej
     g$7362$6375$1M&0Ej
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7364$6268$1M&0Ej g$7364$6376$1M&0Ej '#f)
   (g$7363$6269$1M&0Ej
     g$7363$6377$1M&0Ej
     (make-record-constructor-descriptor
       g$7362$6267$1M&0Ej
       '#f
       g$7364$6268$1M&0Ej))
   (g$enum?$6270$1M&0Ej
     g$enum?$6378$1M&0Ej
     (record-predicate g$7362$6267$1M&0Ej))
   (g$make-enum$6271$1M&0Ej
     g$make-enum$6379$1M&0Ej
     (record-constructor g$7363$6269$1M&0Ej))
   (g$enum-value$6272$1M&0Ej
     g$enum-value$6380$1M&0Ej
     (record-accessor g$7362$6267$1M&0Ej '0))
   (g$enum-info$6273$1M&0Ej
     g$enum-info$6381$1M&0Ej
     (record-accessor g$7362$6267$1M&0Ej '1))
   (g$7375$6274$1M&0Ej
     g$7375$6382$1M&0Ej
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7377$6275$1M&0Ej g$7377$6383$1M&0Ej '#f)
   (g$7376$6276$1M&0Ej
     g$7376$6384$1M&0Ej
     (make-record-constructor-descriptor
       g$7375$6274$1M&0Ej
       '#f
       g$7377$6275$1M&0Ej))
   (g$enum-universe?$6277$1M&0Ej
     g$enum-universe?$6385$1M&0Ej
     (record-predicate g$7375$6274$1M&0Ej))
   (g$make-enum-universe$6278$1M&0Ej
     g$make-enum-universe$6386$1M&0Ej
     (record-constructor g$7376$6276$1M&0Ej))
   (g$enum-universe-id$6279$1M&0Ej
     g$enum-universe-id$6387$1M&0Ej
     (record-accessor g$7375$6274$1M&0Ej '0))
   (g$enum-universe-symbols$6280$1M&0Ej
     g$enum-universe-symbols$6388$1M&0Ej
     (record-accessor g$7375$6274$1M&0Ej '1))
   (g$enum-universe-mapping$6281$1M&0Ej
     g$enum-universe-mapping$6389$1M&0Ej
     (record-accessor g$7375$6274$1M&0Ej '2))
   (g$enum-universe-value$6282$1M&0Ej
     g$enum-universe-value$6390$1M&0Ej
     (record-accessor g$7375$6274$1M&0Ej '3))
   (g$enum-type=?$6283$1M&0Ej
     g$enum-type=?$6391$1M&0Ej
     (case-lambda
       ((g$enumset1$6304$1M&0Ej g$enumset2$6305$1M&0Ej)
        (eq? (g$enum-universe-id$6279$1M&0Ej
               (g$enum-info$6273$1M&0Ej g$enumset1$6304$1M&0Ej))
             (g$enum-universe-id$6279$1M&0Ej
               (g$enum-info$6273$1M&0Ej g$enumset2$6305$1M&0Ej))))))
   (g$get-symbols$6284$1M&0Ej
     g$get-symbols$6392$1M&0Ej
     (case-lambda
       ((g$enumset$6306$1M&0Ej)
        (g$enum-universe-symbols$6280$1M&0Ej
          (g$enum-info$6273$1M&0Ej g$enumset$6306$1M&0Ej)))))
   (g$get-value$6285$1M&0Ej
     g$get-value$6393$1M&0Ej
     (case-lambda
       ((g$enumset$6307$1M&0Ej g$s$6308$1M&0Ej)
        (g$hashtable-ref$5436$1M&0Ej
          (g$enum-universe-mapping$6281$1M&0Ej
            (g$enum-info$6273$1M&0Ej g$enumset$6307$1M&0Ej))
          g$s$6308$1M&0Ej
          '#f))))
   (g$assert-enum$6286$1M&0Ej
     g$assert-enum$6394$1M&0Ej
     (case-lambda
       ((g$who$6309$1M&0Ej g$enumset$6310$1M&0Ej)
        (if (not (g$enum?$6270$1M&0Ej g$enumset$6310$1M&0Ej))
          (assertion-violation
            g$who$6309$1M&0Ej
            '"not an enumeration"
            g$enumset$6310$1M&0Ej)
          (void)))))
   (g$make-info$6287$1M&0Ej
     g$make-info$6395$1M&0Ej
     (case-lambda
       ((g$symbols$6311$1M&0Ej)
        ((case-lambda
           ((g$ht$6312$1M&0Ej)
            ((letrec ((g$f$6313$1M&0Ej
                        (case-lambda
                          ((g$s$6314$1M&0Ej g$a$6315$1M&0Ej g$mask$6316$1M&0Ej)
                           (if (null? g$s$6314$1M&0Ej)
                             (values
                               (reverse! g$a$6315$1M&0Ej)
                               g$ht$6312$1M&0Ej
                               (- g$mask$6316$1M&0Ej '1))
                             ((case-lambda
                                ((g$n$6317$1M&0Ej)
                                 (if (symbol? g$n$6317$1M&0Ej)
                                   (if (g$hashtable-contains?$5439$1M&0Ej
                                         g$ht$6312$1M&0Ej
                                         g$n$6317$1M&0Ej)
                                     (g$f$6313$1M&0Ej
                                       (cdr g$s$6314$1M&0Ej)
                                       g$a$6315$1M&0Ej
                                       g$mask$6316$1M&0Ej)
                                     (begin
                                       (g$hashtable-set!$5437$1M&0Ej
                                         g$ht$6312$1M&0Ej
                                         g$n$6317$1M&0Ej
                                         g$mask$6316$1M&0Ej)
                                       (g$f$6313$1M&0Ej
                                         (cdr g$s$6314$1M&0Ej)
                                         (cons g$n$6317$1M&0Ej g$a$6315$1M&0Ej)
                                         (g$bitwise-arithmetic-shift-left$5978$1M&0Ej
                                           g$mask$6316$1M&0Ej
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6317$1M&0Ej))))
                              (car g$s$6314$1M&0Ej)))))))
               g$f$6313$1M&0Ej)
             g$symbols$6311$1M&0Ej
             '()
             '1)))
         (g$make-eq-hashtable$5433$1M&0Ej)))))
   (g$make-name$6288$1M&0Ej
     g$make-name$6396$1M&0Ej
     (case-lambda
       ((g$symbols$6318$1M&0Ej)
        (string->symbol (g$format$6435$1M&0Ej '"~a" g$symbols$6318$1M&0Ej)))))
   (g$make-enumeration$6289$1M&0Ej
     g$make-enumeration$6397$1M&0Ej
     (case-lambda
       ((g$symbols$6319$1M&0Ej)
        (call-with-values
          (case-lambda (() (g$make-info$6287$1M&0Ej g$symbols$6319$1M&0Ej)))
          (case-lambda
            ((g$s$6323$1M&0Ej g$mapping$6324$1M&0Ej g$mask$6325$1M&0Ej)
             ((case-lambda
                ((g$mask$6326$1M&0Ej g$mapping$6327$1M&0Ej g$s$6328$1M&0Ej)
                 (g$make-enum$6271$1M&0Ej
                   g$mask$6326$1M&0Ej
                   (g$make-enum-universe$6278$1M&0Ej
                     (g$make-name$6288$1M&0Ej g$s$6328$1M&0Ej)
                     g$s$6328$1M&0Ej
                     g$mapping$6327$1M&0Ej
                     g$mask$6326$1M&0Ej))))
              g$mask$6325$1M&0Ej
              g$mapping$6324$1M&0Ej
              g$s$6323$1M&0Ej)))))))
   (g$enum-set-universe$6290$1M&0Ej
     g$enum-set-universe$6398$1M&0Ej
     (case-lambda
       ((g$enumset$6329$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej 'enum-set-universe g$enumset$6329$1M&0Ej)
          ((case-lambda
             ((g$ei$6330$1M&0Ej)
              (g$make-enum$6271$1M&0Ej
                (g$enum-universe-value$6282$1M&0Ej g$ei$6330$1M&0Ej)
                g$ei$6330$1M&0Ej)))
           (g$enum-info$6273$1M&0Ej g$enumset$6329$1M&0Ej))))))
   (g$enum-set-indexer$6291$1M&0Ej
     g$enum-set-indexer$6399$1M&0Ej
     (case-lambda
       ((g$enumset$6331$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej 'enum-set-indexer g$enumset$6331$1M&0Ej)
          (case-lambda
            ((g$symbol$6332$1M&0Ej)
             (begin
               (if (not (symbol? g$symbol$6332$1M&0Ej))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6332$1M&0Ej)
                 (void))
               ((case-lambda
                  ((g$v$6333$1M&0Ej)
                   (if g$v$6333$1M&0Ej
                     (- (bitwise-length g$v$6333$1M&0Ej) '1)
                     '#f)))
                (g$get-value$6285$1M&0Ej
                  g$enumset$6331$1M&0Ej
                  g$symbol$6332$1M&0Ej)))))))))
   (g$enum-set-constructor$6292$1M&0Ej
     g$enum-set-constructor$6400$1M&0Ej
     (case-lambda
       ((g$enumset$6334$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej
            'enum-set-constructor
            g$enumset$6334$1M&0Ej)
          (case-lambda
            ((g$symbols$6335$1M&0Ej)
             ((letrec ((g$f$6336$1M&0Ej
                         (case-lambda
                           ((g$v$6337$1M&0Ej g$s$6338$1M&0Ej)
                            (if (null? g$s$6338$1M&0Ej)
                              (g$make-enum$6271$1M&0Ej
                                g$v$6337$1M&0Ej
                                (g$enum-info$6273$1M&0Ej g$enumset$6334$1M&0Ej))
                              ((case-lambda
                                 ((g$n$6339$1M&0Ej)
                                  (if (symbol? g$n$6339$1M&0Ej)
                                    ((case-lambda
                                       ((g$v*$6340$1M&0Ej)
                                        (if g$v*$6340$1M&0Ej
                                          (g$f$6336$1M&0Ej
                                            (bitwise-ior
                                              g$v$6337$1M&0Ej
                                              g$v*$6340$1M&0Ej)
                                            (cdr g$s$6338$1M&0Ej))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6339$1M&0Ej))))
                                     (g$get-value$6285$1M&0Ej
                                       g$enumset$6334$1M&0Ej
                                       g$n$6339$1M&0Ej))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6339$1M&0Ej))))
                               (car g$s$6338$1M&0Ej)))))))
                g$f$6336$1M&0Ej)
              '0
              g$symbols$6335$1M&0Ej)))))))
   (g$enum-set->list$6293$1M&0Ej
     g$enum-set->list$6401$1M&0Ej
     (case-lambda
       ((g$enumset$6341$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej 'enum-set->list g$enumset$6341$1M&0Ej)
          ((case-lambda
             ((g$value$6342$1M&0Ej)
              ((letrec ((g$f$6343$1M&0Ej
                          (case-lambda
                            ((g$s$6344$1M&0Ej g$l$6345$1M&0Ej)
                             (if (null? g$s$6344$1M&0Ej)
                               (reverse! g$l$6345$1M&0Ej)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6285$1M&0Ej
                                         g$enumset$6341$1M&0Ej
                                         (car g$s$6344$1M&0Ej))
                                       g$value$6342$1M&0Ej))
                                 (g$f$6343$1M&0Ej
                                   (cdr g$s$6344$1M&0Ej)
                                   g$l$6345$1M&0Ej)
                                 (g$f$6343$1M&0Ej
                                   (cdr g$s$6344$1M&0Ej)
                                   (cons
                                     (car g$s$6344$1M&0Ej)
                                     g$l$6345$1M&0Ej))))))))
                 g$f$6343$1M&0Ej)
               (g$get-symbols$6284$1M&0Ej g$enumset$6341$1M&0Ej)
               '())))
           (g$enum-value$6272$1M&0Ej g$enumset$6341$1M&0Ej))))))
   (g$enum-set-member?$6294$1M&0Ej
     g$enum-set-member?$6402$1M&0Ej
     (case-lambda
       ((g$symbol$6346$1M&0Ej g$enumset$6347$1M&0Ej)
        (begin
          (if (not (symbol? g$symbol$6346$1M&0Ej))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6346$1M&0Ej)
            (void))
          (g$assert-enum$6286$1M&0Ej 'enum-set-member? g$enumset$6347$1M&0Ej)
          ((case-lambda
             ((g$v$6348$1M&0Ej)
              (if g$v$6348$1M&0Ej
                (not (zero?
                       (bitwise-and
                         g$v$6348$1M&0Ej
                         (g$enum-value$6272$1M&0Ej g$enumset$6347$1M&0Ej))))
                '#f)))
           (g$get-value$6285$1M&0Ej
             g$enumset$6347$1M&0Ej
             g$symbol$6346$1M&0Ej))))))
   (g$enum-set-subset?$6295$1M&0Ej
     g$enum-set-subset?$6403$1M&0Ej
     (case-lambda
       ((g$enumset1$6349$1M&0Ej g$enumset2$6350$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej 'enum-set-subset? g$enumset1$6349$1M&0Ej)
          (g$assert-enum$6286$1M&0Ej 'enum-set-subset? g$enumset2$6350$1M&0Ej)
          ((case-lambda
             ((g$v1$6351$1M&0Ej g$v2$6352$1M&0Ej)
              (if (g$enum-type=?$6283$1M&0Ej
                    g$enumset1$6349$1M&0Ej
                    g$enumset2$6350$1M&0Ej)
                (= (bitwise-and g$v1$6351$1M&0Ej g$v2$6352$1M&0Ej)
                   g$v1$6351$1M&0Ej)
                ((letrec ((g$f$6353$1M&0Ej
                            (case-lambda
                              ((g$s$6354$1M&0Ej)
                               (if (null? g$s$6354$1M&0Ej)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6355$1M&0Ej g$v2*$6356$1M&0Ej)
                                     (if g$v2*$6356$1M&0Ej
                                       ((case-lambda
                                          ((g$has1$6357$1M&0Ej
                                             g$has2$6358$1M&0Ej)
                                           (if (if g$has1$6357$1M&0Ej
                                                 (begin
                                                   '#f
                                                   (not g$has2$6358$1M&0Ej))
                                                 '#f)
                                             '#f
                                             (g$f$6353$1M&0Ej
                                               (cdr g$s$6354$1M&0Ej)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6351$1M&0Ej
                                                 g$v1*$6355$1M&0Ej)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6352$1M&0Ej
                                                 g$v2*$6356$1M&0Ej))))
                                       '#f)))
                                  (g$get-value$6285$1M&0Ej
                                    g$enumset1$6349$1M&0Ej
                                    (car g$s$6354$1M&0Ej))
                                  (g$get-value$6285$1M&0Ej
                                    g$enumset2$6350$1M&0Ej
                                    (car g$s$6354$1M&0Ej))))))))
                   g$f$6353$1M&0Ej)
                 (g$get-symbols$6284$1M&0Ej g$enumset1$6349$1M&0Ej)))))
           (g$enum-value$6272$1M&0Ej g$enumset1$6349$1M&0Ej)
           (g$enum-value$6272$1M&0Ej g$enumset2$6350$1M&0Ej))))))
   (g$enum-set=?$6296$1M&0Ej
     g$enum-set=?$6404$1M&0Ej
     (case-lambda
       ((g$enumset1$6359$1M&0Ej g$enumset2$6360$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej 'enum-set=? g$enumset1$6359$1M&0Ej)
          (g$assert-enum$6286$1M&0Ej 'enum-set=? g$enumset2$6360$1M&0Ej)
          (if (g$enum-set-subset?$6295$1M&0Ej
                g$enumset1$6359$1M&0Ej
                g$enumset2$6360$1M&0Ej)
            (begin
              '#f
              (g$enum-set-subset?$6295$1M&0Ej
                g$enumset2$6360$1M&0Ej
                g$enumset1$6359$1M&0Ej))
            '#f)))))
   (g$enum-set-union$6297$1M&0Ej
     g$enum-set-union$6405$1M&0Ej
     (case-lambda
       ((g$enumset1$6361$1M&0Ej g$enumset2$6362$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej 'enum-set-union g$enumset1$6361$1M&0Ej)
          (g$assert-enum$6286$1M&0Ej 'enum-set-union g$enumset2$6362$1M&0Ej)
          (if (g$enum-type=?$6283$1M&0Ej
                g$enumset1$6361$1M&0Ej
                g$enumset2$6362$1M&0Ej)
            (g$make-enum$6271$1M&0Ej
              (bitwise-ior
                (g$enum-value$6272$1M&0Ej g$enumset1$6361$1M&0Ej)
                (g$enum-value$6272$1M&0Ej g$enumset2$6362$1M&0Ej))
              (g$enum-info$6273$1M&0Ej g$enumset1$6361$1M&0Ej))
            '#f)))))
   (g$enum-set-intersection$6298$1M&0Ej
     g$enum-set-intersection$6406$1M&0Ej
     (case-lambda
       ((g$enumset1$6363$1M&0Ej g$enumset2$6364$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej
            'enum-set-intersection
            g$enumset1$6363$1M&0Ej)
          (g$assert-enum$6286$1M&0Ej
            'enum-set-intersection
            g$enumset2$6364$1M&0Ej)
          (if (g$enum-type=?$6283$1M&0Ej
                g$enumset1$6363$1M&0Ej
                g$enumset2$6364$1M&0Ej)
            (g$make-enum$6271$1M&0Ej
              (bitwise-and
                (g$enum-value$6272$1M&0Ej g$enumset1$6363$1M&0Ej)
                (g$enum-value$6272$1M&0Ej g$enumset2$6364$1M&0Ej))
              (g$enum-info$6273$1M&0Ej g$enumset1$6363$1M&0Ej))
            '#f)))))
   (g$enum-set-difference$6299$1M&0Ej
     g$enum-set-difference$6407$1M&0Ej
     (case-lambda
       ((g$enumset1$6365$1M&0Ej g$enumset2$6366$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej
            'enum-set-difference
            g$enumset1$6365$1M&0Ej)
          (g$assert-enum$6286$1M&0Ej
            'enum-set-difference
            g$enumset2$6366$1M&0Ej)
          (if (g$enum-type=?$6283$1M&0Ej
                g$enumset1$6365$1M&0Ej
                g$enumset2$6366$1M&0Ej)
            (g$make-enum$6271$1M&0Ej
              (bitwise-and
                (g$enum-value$6272$1M&0Ej g$enumset1$6365$1M&0Ej)
                (bitwise-not (g$enum-value$6272$1M&0Ej g$enumset2$6366$1M&0Ej)))
              (g$enum-info$6273$1M&0Ej g$enumset1$6365$1M&0Ej))
            '#f)))))
   (g$enum-set-complement$6300$1M&0Ej
     g$enum-set-complement$6408$1M&0Ej
     (case-lambda
       ((g$enumset$6367$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej 'enum-set-complement g$enumset$6367$1M&0Ej)
          (g$make-enum$6271$1M&0Ej
            (bitwise-not (g$enum-value$6272$1M&0Ej g$enumset$6367$1M&0Ej))
            (g$enum-info$6273$1M&0Ej g$enumset$6367$1M&0Ej))))))
   (g$enum-set-projection$6301$1M&0Ej
     g$enum-set-projection$6409$1M&0Ej
     (case-lambda
       ((g$enumset1$6368$1M&0Ej g$enumset2$6369$1M&0Ej)
        (begin
          (g$assert-enum$6286$1M&0Ej
            'enum-set-projection
            g$enumset1$6368$1M&0Ej)
          (g$assert-enum$6286$1M&0Ej
            'enum-set-projection
            g$enumset2$6369$1M&0Ej)
          ((case-lambda
             ((g$v1$6370$1M&0Ej)
              ((letrec ((g$f$6371$1M&0Ej
                          (case-lambda
                            ((g$s$6372$1M&0Ej g$v$6373$1M&0Ej)
                             (if (null? g$s$6372$1M&0Ej)
                               (g$make-enum$6271$1M&0Ej
                                 g$v$6373$1M&0Ej
                                 (g$enum-info$6273$1M&0Ej
                                   g$enumset2$6369$1M&0Ej))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6370$1M&0Ej
                                       (g$get-value$6285$1M&0Ej
                                         g$enumset1$6368$1M&0Ej
                                         (car g$s$6372$1M&0Ej))))
                                 (g$f$6371$1M&0Ej
                                   (cdr g$s$6372$1M&0Ej)
                                   g$v$6373$1M&0Ej)
                                 ((case-lambda
                                    ((g$v2$6374$1M&0Ej)
                                     (if g$v2$6374$1M&0Ej
                                       (g$f$6371$1M&0Ej
                                         (cdr g$s$6372$1M&0Ej)
                                         (bitwise-ior
                                           g$v$6373$1M&0Ej
                                           g$v2$6374$1M&0Ej))
                                       (g$f$6371$1M&0Ej
                                         (cdr g$s$6372$1M&0Ej)
                                         g$v$6373$1M&0Ej))))
                                  (g$get-value$6285$1M&0Ej
                                    g$enumset2$6369$1M&0Ej
                                    (car g$s$6372$1M&0Ej)))))))))
                 g$f$6371$1M&0Ej)
               (g$get-symbols$6284$1M&0Ej g$enumset1$6368$1M&0Ej)
               '0)))
           (g$enum-value$6272$1M&0Ej g$enumset1$6368$1M&0Ej)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6302$1M&0Ej g$p$6303$1M&0Ej)
       (g$fprintf$6434$1M&0Ej
         g$p$6303$1M&0Ej
         '"#[enum-set ~a]"
         (g$enum-set->list$6293$1M&0Ej g$x$6302$1M&0Ej))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6410$1M&0Ej
     g$dofmt$6432$1M&0Ej
     (case-lambda
       ((g$p$6414$1M&0Ej g$cntl$6415$1M&0Ej g$args$6416$1M&0Ej)
        ((case-lambda
           ((g$nmax$6417$1M&0Ej)
            ((letrec ((g$loop$6418$1M&0Ej
                        (case-lambda
                          ((g$n$6419$1M&0Ej g$a$6420$1M&0Ej)
                           (if (fx<=? g$n$6419$1M&0Ej g$nmax$6417$1M&0Ej)
                             ((case-lambda
                                ((g$c$6421$1M&0Ej)
                                 (if (if (g$char=?$5193$1M&0Ej
                                           g$c$6421$1M&0Ej
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6419$1M&0Ej
                                           g$nmax$6417$1M&0Ej))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6422$1M&0Ej)
                                       (if (g$memv$4990$1M&0Ej
                                             g$t$6422$1M&0Ej
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6420$1M&0Ej)
                                             g$p$6414$1M&0Ej)
                                           (g$loop$6418$1M&0Ej
                                             (fx+ g$n$6419$1M&0Ej '2)
                                             (cdr g$a$6420$1M&0Ej)))
                                         (if (g$memv$4990$1M&0Ej
                                               g$t$6422$1M&0Ej
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6420$1M&0Ej)
                                               g$p$6414$1M&0Ej)
                                             (g$loop$6418$1M&0Ej
                                               (fx+ g$n$6419$1M&0Ej '2)
                                               (cdr g$a$6420$1M&0Ej)))
                                           (if (g$memv$4990$1M&0Ej
                                                 g$t$6422$1M&0Ej
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6420$1M&0Ej)
                                                   '2)
                                                 g$p$6414$1M&0Ej)
                                               (g$loop$6418$1M&0Ej
                                                 (fx+ g$n$6419$1M&0Ej '2)
                                                 (cdr g$a$6420$1M&0Ej)))
                                             (if (g$memv$4990$1M&0Ej
                                                   g$t$6422$1M&0Ej
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6420$1M&0Ej)
                                                     '8)
                                                   g$p$6414$1M&0Ej)
                                                 (g$loop$6418$1M&0Ej
                                                   (fx+ g$n$6419$1M&0Ej '2)
                                                   (cdr g$a$6420$1M&0Ej)))
                                               (if (g$memv$4990$1M&0Ej
                                                     g$t$6422$1M&0Ej
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6420$1M&0Ej)
                                                       '16)
                                                     g$p$6414$1M&0Ej)
                                                   (g$loop$6418$1M&0Ej
                                                     (fx+ g$n$6419$1M&0Ej '2)
                                                     (cdr g$a$6420$1M&0Ej)))
                                                 (if (g$memv$4990$1M&0Ej
                                                       g$t$6422$1M&0Ej
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6420$1M&0Ej)
                                                         '10)
                                                       g$p$6414$1M&0Ej)
                                                     (g$loop$6418$1M&0Ej
                                                       (fx+ g$n$6419$1M&0Ej '2)
                                                       (cdr g$a$6420$1M&0Ej)))
                                                   (if (g$memv$4990$1M&0Ej
                                                         g$t$6422$1M&0Ej
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6414$1M&0Ej)
                                                       (g$loop$6418$1M&0Ej
                                                         (fx+ g$n$6419$1M&0Ej
                                                              '2)
                                                         g$a$6420$1M&0Ej))
                                                     (begin
                                                       (write-char
                                                         g$c$6421$1M&0Ej
                                                         g$p$6414$1M&0Ej)
                                                       (g$loop$6418$1M&0Ej
                                                         (fx+ g$n$6419$1M&0Ej
                                                              '1)
                                                         g$a$6420$1M&0Ej)))))))))))
                                    (string-ref
                                      g$cntl$6415$1M&0Ej
                                      (fx+ g$n$6419$1M&0Ej '1)))
                                   (begin
                                     (write-char
                                       g$c$6421$1M&0Ej
                                       g$p$6414$1M&0Ej)
                                     (g$loop$6418$1M&0Ej
                                       (fx+ g$n$6419$1M&0Ej '1)
                                       g$a$6420$1M&0Ej)))))
                              (string-ref g$cntl$6415$1M&0Ej g$n$6419$1M&0Ej))
                             (void))))))
               g$loop$6418$1M&0Ej)
             '0
             g$args$6416$1M&0Ej)))
         (fx- (string-length g$cntl$6415$1M&0Ej) '1)))))
   (g$printf$6411$1M&0Ej
     g$printf$6433$1M&0Ej
     (case-lambda
       ((g$control$6423$1M&0Ej . g$args$6424$1M&0Ej)
        (g$dofmt$6410$1M&0Ej
          (current-output-port)
          g$control$6423$1M&0Ej
          g$args$6424$1M&0Ej))))
   (g$fprintf$6412$1M&0Ej
     g$fprintf$6434$1M&0Ej
     (case-lambda
       ((g$p$6425$1M&0Ej g$control$6426$1M&0Ej . g$args$6427$1M&0Ej)
        (g$dofmt$6410$1M&0Ej
          g$p$6425$1M&0Ej
          g$control$6426$1M&0Ej
          g$args$6427$1M&0Ej))))
   (g$format$6413$1M&0Ej
     g$format$6435$1M&0Ej
     (case-lambda
       ((g$control$6428$1M&0Ej . g$args$6429$1M&0Ej)
        (call-with-values
          g$open-string-output-port$6229$1M&0Ej
          (case-lambda
            ((g$p$6430$1M&0Ej g$c$6431$1M&0Ej)
             (begin
               (g$dofmt$6410$1M&0Ej
                 g$p$6430$1M&0Ej
                 g$control$6428$1M&0Ej
                 g$args$6429$1M&0Ej)
               (g$c$6431$1M&0Ej)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6436$1M&0Ej
     g$make-traced-macro$6439$1M&0Ej
     (case-lambda
       ((g$name$6437$1M&0Ej g$x$6438$1M&0Ej)
        (if (procedure? g$x$6438$1M&0Ej)
          (make-traced-procedure
            g$name$6437$1M&0Ej
            g$x$6438$1M&0Ej
            g$syntax->datum$11137$1M&0Ej)
          (if (g$variable-transformer?$10960$1M&0Ej g$x$6438$1M&0Ej)
            (g$make-variable-transformer$10959$1M&0Ej
              (make-traced-procedure
                g$name$6437$1M&0Ej
                (g$variable-transformer-procedure$10961$1M&0Ej g$x$6438$1M&0Ej)
                g$syntax->datum$11137$1M&0Ej))
            g$x$6438$1M&0Ej))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6440$1M&0Ej
     g$read-library-source-file$6519$1M&0Ej
     (case-lambda
       ((g$file-name$6511$1M&0Ej)
        (g$with-input-from-file$6263$1M&0Ej
          g$file-name$6511$1M&0Ej
          read-annotated))))
   (g$make-parameter$6441$1M&0Ej
     g$make-parameter$6520$1M&0Ej
     (case-lambda
       ((g$x$6512$1M&0Ej)
        (g$make-parameter$6441$1M&0Ej
          g$x$6512$1M&0Ej
          (case-lambda ((g$x$6513$1M&0Ej) g$x$6513$1M&0Ej))))
       ((g$x$6514$1M&0Ej g$fender$6515$1M&0Ej)
        (begin
          (if (not (procedure? g$fender$6515$1M&0Ej))
            (g$assertion-error$11130$1M&0Ej
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6516$1M&0Ej)
              (case-lambda
                (() g$x$6516$1M&0Ej)
                ((g$v$6517$1M&0Ej)
                 (set! g$x$6516$1M&0Ej
                   (g$fender$6515$1M&0Ej g$v$6517$1M&0Ej))))))
           (g$fender$6515$1M&0Ej g$x$6514$1M&0Ej))))))
   (g$file-options-constructor$6509$1M&0Ej
     g$file-options-constructor$6521$1M&0Ej
     (g$make-parameter$6441$1M&0Ej '#f))
   (g$file-options-spec$6510$1M&0Ej
     g$file-options-spec$6522$1M&0Ej
     (case-lambda
       ((g$x$6518$1M&0Ej)
        ((g$file-options-constructor$6509$1M&0Ej) g$x$6518$1M&0Ej)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6718$1M&0Ej
     g$current-primitive-locations$6763$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       (case-lambda ((g$x$6724$1M&0Ej) '#f))
       (case-lambda
         ((g$p$6725$1M&0Ej)
          (begin
            (if (not (procedure? g$p$6725$1M&0Ej))
              (g$assertion-error$11130$1M&0Ej
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6725$1M&0Ej)))))
   (g$mutable?$6719$1M&0Ej
     g$mutable?$6764$1M&0Ej
     (case-lambda
       ((g$x$6726$1M&0Ej)
        (letrec* ((g$simple?$6727$1M&0Ej
                    (case-lambda
                      ((g$x$6728$1M&0Ej)
                       ((case-lambda
                          ((g$t$6729$1M&0Ej)
                           (if g$t$6729$1M&0Ej
                             g$t$6729$1M&0Ej
                             ((case-lambda
                                ((g$t$6730$1M&0Ej)
                                 (if g$t$6730$1M&0Ej
                                   g$t$6730$1M&0Ej
                                   ((case-lambda
                                      ((g$t$6731$1M&0Ej)
                                       (if g$t$6731$1M&0Ej
                                         g$t$6731$1M&0Ej
                                         ((case-lambda
                                            ((g$t$6732$1M&0Ej)
                                             (if g$t$6732$1M&0Ej
                                               g$t$6732$1M&0Ej
                                               ((case-lambda
                                                  ((g$t$6733$1M&0Ej)
                                                   (if g$t$6733$1M&0Ej
                                                     g$t$6733$1M&0Ej
                                                     ((case-lambda
                                                        ((g$t$6734$1M&0Ej)
                                                         (if g$t$6734$1M&0Ej
                                                           g$t$6734$1M&0Ej
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6728$1M&0Ej)))))
                                                      (bytevector?
                                                        g$x$6728$1M&0Ej)))))
                                                (string? g$x$6728$1M&0Ej)))))
                                          (boolean? g$x$6728$1M&0Ej)))))
                                    (symbol? g$x$6728$1M&0Ej)))))
                              (char? g$x$6728$1M&0Ej)))))
                        (null? g$x$6728$1M&0Ej))))))
          (not (g$simple?$6727$1M&0Ej g$x$6726$1M&0Ej))))))
   (g$rewriter$6720$1M&0Ej
     g$rewriter$6765$1M&0Ej
     (case-lambda
       ((g$quote-hack?$6735$1M&0Ej)
        (letrec* ((g$f$6736$1M&0Ej
                    (case-lambda
                      ((g$x$6737$1M&0Ej)
                       (if (pair? g$x$6737$1M&0Ej)
                         ((case-lambda
                            ((g$t$6738$1M&0Ej)
                             (if (g$memv$4990$1M&0Ej g$t$6738$1M&0Ej '(quote))
                               (if (if g$quote-hack?$6735$1M&0Ej
                                     (begin
                                       '#f
                                       (g$mutable?$6719$1M&0Ej
                                         (g$cadr$5159$1M&0Ej g$x$6737$1M&0Ej)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6739$1M&0Ej)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6739$1M&0Ej
                                         (g$cadr$5159$1M&0Ej g$x$6737$1M&0Ej))
                                       g$g$6739$1M&0Ej)))
                                  (gensym))
                                 g$x$6737$1M&0Ej)
                               (if (g$memv$4990$1M&0Ej
                                     g$t$6738$1M&0Ej
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6740$1M&0Ej)
                                           (cons
                                             (car g$x$6740$1M&0Ej)
                                             (map g$f$6736$1M&0Ej
                                                  (cdr g$x$6740$1M&0Ej)))))
                                        (cdr g$x$6737$1M&0Ej)))
                                 (if (g$memv$4990$1M&0Ej
                                       g$t$6738$1M&0Ej
                                       '(lambda))
                                   (g$cons*$4997$1M&0Ej
                                     'lambda
                                     (g$cadr$5159$1M&0Ej g$x$6737$1M&0Ej)
                                     (map g$f$6736$1M&0Ej
                                          (g$cddr$5161$1M&0Ej g$x$6737$1M&0Ej)))
                                   (if (g$memv$4990$1M&0Ej
                                         g$t$6738$1M&0Ej
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6741$1M&0Ej
                                           g$body*$6742$1M&0Ej)
                                         ((case-lambda
                                            ((g$lhs*$6743$1M&0Ej
                                               g$rhs*$6744$1M&0Ej)
                                             (g$cons*$4997$1M&0Ej
                                               'letrec
                                               (map list
                                                    g$lhs*$6743$1M&0Ej
                                                    (map g$f$6736$1M&0Ej
                                                         g$rhs*$6744$1M&0Ej))
                                               (map g$f$6736$1M&0Ej
                                                    g$body*$6742$1M&0Ej))))
                                          (map car g$bindings$6741$1M&0Ej)
                                          (map g$cadr$5159$1M&0Ej
                                               g$bindings$6741$1M&0Ej))))
                                      (g$cadr$5159$1M&0Ej g$x$6737$1M&0Ej)
                                      (g$cddr$5161$1M&0Ej g$x$6737$1M&0Ej))
                                     (if (g$memv$4990$1M&0Ej
                                           g$t$6738$1M&0Ej
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6745$1M&0Ej
                                             g$body*$6746$1M&0Ej)
                                           ((case-lambda
                                              ((g$lhs*$6747$1M&0Ej
                                                 g$rhs*$6748$1M&0Ej)
                                               (g$cons*$4997$1M&0Ej
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6747$1M&0Ej
                                                      (map g$f$6736$1M&0Ej
                                                           g$rhs*$6748$1M&0Ej))
                                                 (map g$f$6736$1M&0Ej
                                                      g$body*$6746$1M&0Ej))))
                                            (map car g$bindings$6745$1M&0Ej)
                                            (map g$cadr$5159$1M&0Ej
                                                 g$bindings$6745$1M&0Ej))))
                                        (g$cadr$5159$1M&0Ej g$x$6737$1M&0Ej)
                                        (g$cddr$5161$1M&0Ej g$x$6737$1M&0Ej))
                                       (if (g$memv$4990$1M&0Ej
                                             g$t$6738$1M&0Ej
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6749$1M&0Ej
                                               g$x$6750$1M&0Ej)
                                             ((case-lambda
                                                ((g$bindings$6751$1M&0Ej
                                                   g$body*$6752$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$lhs*$6753$1M&0Ej
                                                       g$lhs**$6754$1M&0Ej
                                                       g$rhs*$6755$1M&0Ej)
                                                     (g$cons*$4997$1M&0Ej
                                                       'library-letrec*
                                                       g$name$6749$1M&0Ej
                                                       (map list
                                                            g$lhs*$6753$1M&0Ej
                                                            g$lhs**$6754$1M&0Ej
                                                            (map g$f$6736$1M&0Ej
                                                                 g$rhs*$6755$1M&0Ej))
                                                       (map g$f$6736$1M&0Ej
                                                            g$body*$6752$1M&0Ej))))
                                                  (map car
                                                       g$bindings$6751$1M&0Ej)
                                                  (map g$cadr$5159$1M&0Ej
                                                       g$bindings$6751$1M&0Ej)
                                                  (map g$caddr$5165$1M&0Ej
                                                       g$bindings$6751$1M&0Ej))))
                                              (g$cadr$5159$1M&0Ej
                                                g$x$6750$1M&0Ej)
                                              (g$cddr$5161$1M&0Ej
                                                g$x$6750$1M&0Ej))))
                                          (g$cadr$5159$1M&0Ej g$x$6737$1M&0Ej)
                                          (cdr g$x$6737$1M&0Ej))
                                         (if (g$memv$4990$1M&0Ej
                                               g$t$6738$1M&0Ej
                                               '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6736$1M&0Ej
                                                  (cdr g$x$6737$1M&0Ej)))
                                           (if (g$memv$4990$1M&0Ej
                                                 g$t$6738$1M&0Ej
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5159$1M&0Ej
                                                 g$x$6737$1M&0Ej)
                                               (g$f$6736$1M&0Ej
                                                 (g$caddr$5165$1M&0Ej
                                                   g$x$6737$1M&0Ej)))
                                             (if (g$memv$4990$1M&0Ej
                                                   g$t$6738$1M&0Ej
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6756$1M&0Ej)
                                                   ((case-lambda
                                                      ((g$t$6757$1M&0Ej)
                                                       (if g$t$6757$1M&0Ej
                                                         ((case-lambda
                                                            ((g$loc$6758$1M&0Ej)
                                                             g$loc$6758$1M&0Ej))
                                                          g$t$6757$1M&0Ej)
                                                         g$op$6756$1M&0Ej)))
                                                    ((g$current-primitive-locations$6718$1M&0Ej)
                                                     g$op$6756$1M&0Ej))))
                                                (g$cadr$5159$1M&0Ej
                                                  g$x$6737$1M&0Ej))
                                               (if (g$memv$4990$1M&0Ej
                                                     g$t$6738$1M&0Ej
                                                     '(define))
                                                 g$x$6737$1M&0Ej
                                                 (if (list? g$x$6737$1M&0Ej)
                                                   (map g$f$6736$1M&0Ej
                                                        g$x$6737$1M&0Ej)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6737$1M&0Ej
                                                     (list?
                                                       g$x$6737$1M&0Ej)))))))))))))))
                          (car g$x$6737$1M&0Ej))
                         g$x$6737$1M&0Ej)))))
          g$f$6736$1M&0Ej))))
   (g$expanded->core$6721$1M&0Ej
     g$expanded->core$6766$1M&0Ej
     (case-lambda
       ((g$x$6759$1M&0Ej) ((g$rewriter$6720$1M&0Ej '#t) g$x$6759$1M&0Ej))))
   (g$compile-core-expr$6722$1M&0Ej
     g$compile-core-expr$6767$1M&0Ej
     (case-lambda
       ((g$x$6760$1M&0Ej) ((g$rewriter$6720$1M&0Ej '#f) g$x$6760$1M&0Ej))))
   (g$compile-core-expr-to-port$6723$1M&0Ej
     g$compile-core-expr-to-port$6768$1M&0Ej
     (case-lambda
       ((g$x$6761$1M&0Ej g$p$6762$1M&0Ej)
        (g$pretty-print$6717$1M&0Ej
          ((g$rewriter$6720$1M&0Ej '#f) g$x$6761$1M&0Ej)
          g$p$6762$1M&0Ej)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6807$1M&0Ej
     g$make-collection$7011$1M&0Ej
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6868$1M&0Ej)
            (letrec* ((g$set-cons$6869$1M&0Ej
                        (case-lambda
                          ((g$x$6871$1M&0Ej g$ls$6872$1M&0Ej)
                           (if (g$memq$4989$1M&0Ej
                                 g$x$6871$1M&0Ej
                                 g$ls$6872$1M&0Ej)
                             g$ls$6872$1M&0Ej
                             (cons g$x$6871$1M&0Ej g$ls$6872$1M&0Ej))))))
              (case-lambda
                (() g$set$6868$1M&0Ej)
                ((g$x$6870$1M&0Ej)
                 (set! g$set$6868$1M&0Ej
                   (g$set-cons$6869$1M&0Ej
                     g$x$6870$1M&0Ej
                     g$set$6868$1M&0Ej)))))))
         '()))))
   (g$current-library-collection$6808$1M&0Ej
     g$current-library-collection$7012$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       (g$make-collection$6807$1M&0Ej)
       (case-lambda
         ((g$x$6873$1M&0Ej)
          (begin
            (if (not (procedure? g$x$6873$1M&0Ej))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6873$1M&0Ej)
              (void))
            g$x$6873$1M&0Ej)))))
   (g$7895$6809$1M&0Ej
     g$7895$7013$1M&0Ej
     (make-record-type-descriptor
       'library
       '#f
       'g$7898$1M&0Ej
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7897$6810$1M&0Ej g$7897$7014$1M&0Ej '#f)
   (g$7896$6811$1M&0Ej
     g$7896$7015$1M&0Ej
     (make-record-constructor-descriptor
       g$7895$6809$1M&0Ej
       '#f
       g$7897$6810$1M&0Ej))
   (g$library?$6812$1M&0Ej
     g$library?$7016$1M&0Ej
     (record-predicate g$7895$6809$1M&0Ej))
   (g$make-library$6813$1M&0Ej
     g$make-library$7017$1M&0Ej
     (record-constructor g$7896$6811$1M&0Ej))
   (g$library-id$6814$1M&0Ej
     g$library-id$7018$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '0))
   (g$library-name$6815$1M&0Ej
     g$library-name$7019$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '1))
   (g$library-version$6816$1M&0Ej
     g$library-version$7020$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '2))
   (g$library-imp*$6817$1M&0Ej
     g$library-imp*$7021$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '3))
   (g$library-vis*$6818$1M&0Ej
     g$library-vis*$7022$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '4))
   (g$library-inv*$6819$1M&0Ej
     g$library-inv*$7023$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '5))
   (g$library-subst$6820$1M&0Ej
     g$library-subst$7024$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '6))
   (g$library-env$6821$1M&0Ej
     g$library-env$7025$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '7))
   (g$library-visit-state$6822$1M&0Ej
     g$library-visit-state$7026$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '8))
   (g$library-invoke-state$6823$1M&0Ej
     g$library-invoke-state$7027$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '9))
   (g$library-visit-code$6824$1M&0Ej
     g$library-visit-code$7028$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '10))
   (g$library-invoke-code$6825$1M&0Ej
     g$library-invoke-code$7029$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '11))
   (g$library-visible?$6826$1M&0Ej
     g$library-visible?$7030$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '12))
   (g$library-source-file-name$6827$1M&0Ej
     g$library-source-file-name$7031$1M&0Ej
     (record-accessor g$7895$6809$1M&0Ej '13))
   (g$set-library-id!$6828$1M&0Ej
     g$set-library-id!$7032$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '0))
   (g$set-library-name!$6829$1M&0Ej
     g$set-library-name!$7033$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '1))
   (g$set-library-version!$6830$1M&0Ej
     g$set-library-version!$7034$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '2))
   (g$set-library-imp*!$6831$1M&0Ej
     g$set-library-imp*!$7035$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '3))
   (g$set-library-vis*!$6832$1M&0Ej
     g$set-library-vis*!$7036$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '4))
   (g$set-library-inv*!$6833$1M&0Ej
     g$set-library-inv*!$7037$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '5))
   (g$set-library-subst!$6834$1M&0Ej
     g$set-library-subst!$7038$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '6))
   (g$set-library-env!$6835$1M&0Ej
     g$set-library-env!$7039$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '7))
   (g$set-library-visit-state!$6836$1M&0Ej
     g$set-library-visit-state!$7040$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '8))
   (g$set-library-invoke-state!$6837$1M&0Ej
     g$set-library-invoke-state!$7041$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '9))
   (g$set-library-visit-code!$6838$1M&0Ej
     g$set-library-visit-code!$7042$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '10))
   (g$set-library-invoke-code!$6839$1M&0Ej
     g$set-library-invoke-code!$7043$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '11))
   (g$set-library-visible?!$6840$1M&0Ej
     g$set-library-visible?!$7044$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '12))
   (g$set-library-source-file-name!$6841$1M&0Ej
     g$set-library-source-file-name!$7045$1M&0Ej
     (record-mutator g$7895$6809$1M&0Ej '13))
   (g$rp$6842$1M&0Ej
     g$rp$7046$1M&0Ej
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6874$1M&0Ej g$p$6875$1M&0Ej)
          (begin
            (if (not (g$library?$6812$1M&0Ej g$x$6874$1M&0Ej))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6435$1M&0Ej
                '"#<library ~s>"
                (if (null? (g$library-version$6816$1M&0Ej g$x$6874$1M&0Ej))
                  (g$library-name$6815$1M&0Ej g$x$6874$1M&0Ej)
                  (append
                    (g$library-name$6815$1M&0Ej g$x$6874$1M&0Ej)
                    (list (g$library-version$6816$1M&0Ej g$x$6874$1M&0Ej)))))
              g$p$6875$1M&0Ej))))))
   (g$find-dependencies$6843$1M&0Ej
     g$find-dependencies$7047$1M&0Ej
     (case-lambda
       ((g$ls$6876$1M&0Ej)
        (if (null? g$ls$6876$1M&0Ej)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6844$1M&0Ej
     g$find-library-by$7048$1M&0Ej
     (case-lambda
       ((g$pred$6877$1M&0Ej)
        ((letrec ((g$f$6878$1M&0Ej
                    (case-lambda
                      ((g$ls$6879$1M&0Ej)
                       (if (null? g$ls$6879$1M&0Ej)
                         '#f
                         (if (g$pred$6877$1M&0Ej (car g$ls$6879$1M&0Ej))
                           (car g$ls$6879$1M&0Ej)
                           (g$f$6878$1M&0Ej (cdr g$ls$6879$1M&0Ej))))))))
           g$f$6878$1M&0Ej)
         ((g$current-library-collection$6808$1M&0Ej))))))
   (g$library-path$6845$1M&0Ej
     g$library-path$7049$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       '(".")
       (case-lambda
         ((g$x$6880$1M&0Ej)
          (if (if (list? g$x$6880$1M&0Ej)
                (begin '#f (g$for-all$4995$1M&0Ej string? g$x$6880$1M&0Ej))
                '#f)
            (map (case-lambda ((g$x$6881$1M&0Ej) g$x$6881$1M&0Ej))
                 g$x$6880$1M&0Ej)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6880$1M&0Ej))))))
   (g$library-extensions$6846$1M&0Ej
     g$library-extensions$7050$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6882$1M&0Ej)
          (if (if (list? g$x$6882$1M&0Ej)
                (begin '#f (g$for-all$4995$1M&0Ej string? g$x$6882$1M&0Ej))
                '#f)
            (map (case-lambda ((g$x$6883$1M&0Ej) g$x$6883$1M&0Ej))
                 g$x$6882$1M&0Ej)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6882$1M&0Ej))))))
   (g$library-name->file-name$6847$1M&0Ej
     g$library-name->file-name$7051$1M&0Ej
     (case-lambda
       ((g$x$6884$1M&0Ej)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6229$1M&0Ej)))
          (case-lambda
            ((g$p$6887$1M&0Ej g$extract$6888$1M&0Ej)
             ((case-lambda
                ((g$extract$6889$1M&0Ej g$p$6890$1M&0Ej)
                 (letrec* ((g$display-hex$6891$1M&0Ej
                             (case-lambda
                               ((g$n$6899$1M&0Ej)
                                (if (<= '0 g$n$6899$1M&0Ej '9)
                                  (display g$n$6899$1M&0Ej g$p$6890$1M&0Ej)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6899$1M&0Ej '10)))
                                    g$p$6890$1M&0Ej))))))
                   (begin
                     ((letrec ((g$f$6892$1M&0Ej
                                 (case-lambda
                                   ((g$ls$6893$1M&0Ej)
                                    (if (not (null? g$ls$6893$1M&0Ej))
                                      (begin
                                        (display '"/" g$p$6890$1M&0Ej)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6894$1M&0Ej)
                                             (if ((case-lambda
                                                    ((g$t$6895$1M&0Ej)
                                                     (if g$t$6895$1M&0Ej
                                                       g$t$6895$1M&0Ej
                                                       ((case-lambda
                                                          ((g$t$6896$1M&0Ej)
                                                           (if g$t$6896$1M&0Ej
                                                             g$t$6896$1M&0Ej
                                                             ((case-lambda
                                                                ((g$t$6897$1M&0Ej)
                                                                 (if g$t$6897$1M&0Ej
                                                                   g$t$6897$1M&0Ej
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$4990$1M&0Ej
                                                                       g$c$6894$1M&0Ej
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5196$1M&0Ej
                                                                '#\0
                                                                g$c$6894$1M&0Ej
                                                                '#\9)))))
                                                        (g$char<=?$5196$1M&0Ej
                                                          '#\A
                                                          g$c$6894$1M&0Ej
                                                          '#\Z)))))
                                                  (g$char<=?$5196$1M&0Ej
                                                    '#\a
                                                    g$c$6894$1M&0Ej
                                                    '#\z))
                                               (display
                                                 g$c$6894$1M&0Ej
                                                 g$p$6890$1M&0Ej)
                                               (begin
                                                 (display '"%" g$p$6890$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$n$6898$1M&0Ej)
                                                     (begin
                                                       (g$display-hex$6891$1M&0Ej
                                                         (g$quotient$5811$1M&0Ej
                                                           g$n$6898$1M&0Ej
                                                           '16))
                                                       (g$display-hex$6891$1M&0Ej
                                                         (g$remainder$5812$1M&0Ej
                                                           g$n$6898$1M&0Ej
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6894$1M&0Ej))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6893$1M&0Ej))))
                                        (g$f$6892$1M&0Ej
                                          (cdr g$ls$6893$1M&0Ej)))
                                      (void))))))
                        g$f$6892$1M&0Ej)
                      g$x$6884$1M&0Ej)
                     (g$extract$6889$1M&0Ej)))))
              g$extract$6888$1M&0Ej
              g$p$6887$1M&0Ej)))))))
   (g$file-locator$6848$1M&0Ej
     g$file-locator$7052$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       (case-lambda
         ((g$x$6900$1M&0Ej)
          ((case-lambda
             ((g$str$6901$1M&0Ej)
              ((letrec ((g$f$6902$1M&0Ej
                          (case-lambda
                            ((g$ls$6903$1M&0Ej
                               g$exts$6904$1M&0Ej
                               g$failed-list$6905$1M&0Ej)
                             (if (null? g$ls$6903$1M&0Ej)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8000$6906$1M&0Ej
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8003$1M&0Ej
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8002$6907$1M&0Ej '#f)
                                             (g$8001$6908$1M&0Ej
                                               (make-record-constructor-descriptor
                                                 g$8000$6906$1M&0Ej
                                                 &condition-rcd
                                                 g$8002$6907$1M&0Ej))
                                             (g$7999$6909$1M&0Ej
                                               (record-predicate
                                                 g$8000$6906$1M&0Ej))
                                             (g$make-library-resolution-condition$6910$1M&0Ej
                                               (record-constructor
                                                 g$8001$6908$1M&0Ej))
                                             (g$7997$6911$1M&0Ej
                                               (record-accessor
                                                 g$8000$6906$1M&0Ej
                                                 '0))
                                             (g$7998$6912$1M&0Ej
                                               (record-accessor
                                                 g$8000$6906$1M&0Ej
                                                 '1))
                                             (g$library-resolution-condition?$6913$1M&0Ej
                                               (condition-predicate
                                                 g$8000$6906$1M&0Ej))
                                             (g$condition-library$6914$1M&0Ej
                                               (condition-accessor
                                                 g$8000$6906$1M&0Ej
                                                 g$7997$6911$1M&0Ej))
                                             (g$condition-files$6915$1M&0Ej
                                               (condition-accessor
                                                 g$8000$6906$1M&0Ej
                                                 g$7998$6912$1M&0Ej)))
                                     (raise
                                       (condition
                                         (g$make-error$5721$1M&0Ej)
                                         (g$make-who-condition$5747$1M&0Ej
                                           'expander)
                                         (g$make-message-condition$5701$1M&0Ej
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6910$1M&0Ej
                                           g$x$6900$1M&0Ej
                                           (reverse
                                             g$failed-list$6905$1M&0Ej))))))))
                               (if (null? g$exts$6904$1M&0Ej)
                                 (g$f$6902$1M&0Ej
                                   (cdr g$ls$6903$1M&0Ej)
                                   (g$library-extensions$6846$1M&0Ej)
                                   g$failed-list$6905$1M&0Ej)
                                 ((case-lambda
                                    ((g$name$6916$1M&0Ej)
                                     (if (g$file-exists?$5452$1M&0Ej
                                           g$name$6916$1M&0Ej)
                                       g$name$6916$1M&0Ej
                                       (g$f$6902$1M&0Ej
                                         g$ls$6903$1M&0Ej
                                         (cdr g$exts$6904$1M&0Ej)
                                         (cons
                                           g$name$6916$1M&0Ej
                                           g$failed-list$6905$1M&0Ej)))))
                                  (string-append
                                    (car g$ls$6903$1M&0Ej)
                                    g$str$6901$1M&0Ej
                                    (car g$exts$6904$1M&0Ej)))))))))
                 g$f$6902$1M&0Ej)
               (g$library-path$6845$1M&0Ej)
               (g$library-extensions$6846$1M&0Ej)
               '())))
           (g$library-name->file-name$6847$1M&0Ej g$x$6900$1M&0Ej))))
       (case-lambda
         ((g$f$6917$1M&0Ej)
          (if (procedure? g$f$6917$1M&0Ej)
            g$f$6917$1M&0Ej
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6917$1M&0Ej))))))
   (g$serialize-all$6849$1M&0Ej
     g$serialize-all$7053$1M&0Ej
     (case-lambda
       ((g$serialize$6918$1M&0Ej g$compile$6919$1M&0Ej)
        (letrec* ((g$library-desc$6920$1M&0Ej
                    (case-lambda
                      ((g$x$6922$1M&0Ej)
                       (list
                         (g$library-id$6814$1M&0Ej g$x$6922$1M&0Ej)
                         (g$library-name$6815$1M&0Ej g$x$6922$1M&0Ej))))))
          (for-each
            (case-lambda
              ((g$x$6921$1M&0Ej)
               (if (g$library-source-file-name$6827$1M&0Ej g$x$6921$1M&0Ej)
                 (g$serialize$6918$1M&0Ej
                   (g$library-source-file-name$6827$1M&0Ej g$x$6921$1M&0Ej)
                   (list
                     (g$library-id$6814$1M&0Ej g$x$6921$1M&0Ej)
                     (g$library-name$6815$1M&0Ej g$x$6921$1M&0Ej)
                     (g$library-version$6816$1M&0Ej g$x$6921$1M&0Ej)
                     (map g$library-desc$6920$1M&0Ej
                          (g$library-imp*$6817$1M&0Ej g$x$6921$1M&0Ej))
                     (map g$library-desc$6920$1M&0Ej
                          (g$library-vis*$6818$1M&0Ej g$x$6921$1M&0Ej))
                     (map g$library-desc$6920$1M&0Ej
                          (g$library-inv*$6819$1M&0Ej g$x$6921$1M&0Ej))
                     (g$library-subst$6820$1M&0Ej g$x$6921$1M&0Ej)
                     (g$library-env$6821$1M&0Ej g$x$6921$1M&0Ej)
                     (g$compile$6919$1M&0Ej
                       (g$library-visit-code$6824$1M&0Ej g$x$6921$1M&0Ej))
                     (g$compile$6919$1M&0Ej
                       (g$library-invoke-code$6825$1M&0Ej g$x$6921$1M&0Ej))
                     (g$library-visible?$6826$1M&0Ej g$x$6921$1M&0Ej)))
                 (void))))
            ((g$current-library-collection$6808$1M&0Ej)))))))
   (g$current-precompiled-library-loader$6850$1M&0Ej
     g$current-precompiled-library-loader$7054$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       (case-lambda ((g$filename$6923$1M&0Ej g$sk$6924$1M&0Ej) '#f))))
   (g$try-load-from-file$6851$1M&0Ej
     g$try-load-from-file$7055$1M&0Ej
     (case-lambda
       ((g$filename$6925$1M&0Ej)
        ((g$current-precompiled-library-loader$6850$1M&0Ej)
         g$filename$6925$1M&0Ej
         (case-lambda
           ((g$id$6926$1M&0Ej
              g$name$6927$1M&0Ej
              g$ver$6928$1M&0Ej
              g$imp*$6929$1M&0Ej
              g$vis*$6930$1M&0Ej
              g$inv*$6931$1M&0Ej
              g$exp-subst$6932$1M&0Ej
              g$exp-env$6933$1M&0Ej
              g$visit-proc$6934$1M&0Ej
              g$invoke-proc$6935$1M&0Ej
              g$visible?$6936$1M&0Ej)
            ((letrec ((g$f$6937$1M&0Ej
                        (case-lambda
                          ((g$deps$6938$1M&0Ej)
                           (if (null? g$deps$6938$1M&0Ej)
                             (begin
                               (g$install-library$6861$1M&0Ej
                                 g$id$6926$1M&0Ej
                                 g$name$6927$1M&0Ej
                                 g$ver$6928$1M&0Ej
                                 g$imp*$6929$1M&0Ej
                                 g$vis*$6930$1M&0Ej
                                 g$inv*$6931$1M&0Ej
                                 g$exp-subst$6932$1M&0Ej
                                 g$exp-env$6933$1M&0Ej
                                 g$visit-proc$6934$1M&0Ej
                                 g$invoke-proc$6935$1M&0Ej
                                 '#f
                                 '#f
                                 g$visible?$6936$1M&0Ej
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$6939$1M&0Ej)
                                 ((case-lambda
                                    ((g$label$6940$1M&0Ej g$dname$6941$1M&0Ej)
                                     ((case-lambda
                                        ((g$l$6942$1M&0Ej)
                                         (if (if (g$library?$6812$1M&0Ej
                                                   g$l$6942$1M&0Ej)
                                               (begin
                                                 '#f
                                                 (eq? g$label$6940$1M&0Ej
                                                      (g$library-id$6814$1M&0Ej
                                                        g$l$6942$1M&0Ej)))
                                               '#f)
                                           (g$f$6937$1M&0Ej
                                             (cdr g$deps$6938$1M&0Ej))
                                           (begin
                                             (g$fprintf$6434$1M&0Ej
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$6927$1M&0Ej
                                               g$dname$6941$1M&0Ej
                                               g$filename$6925$1M&0Ej)
                                             '#f))))
                                      (g$find-library-by-name$6856$1M&0Ej
                                        g$dname$6941$1M&0Ej))))
                                  (car g$d$6939$1M&0Ej)
                                  (g$cadr$5159$1M&0Ej g$d$6939$1M&0Ej))))
                              (car g$deps$6938$1M&0Ej)))))))
               g$f$6937$1M&0Ej)
             (append g$imp*$6929$1M&0Ej g$vis*$6930$1M&0Ej g$inv*$6931$1M&0Ej)))
           (g$others$6943$1M&0Ej '#f))))))
   (g$library-loader$6852$1M&0Ej
     g$library-loader$7056$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       (case-lambda
         ((g$x$6944$1M&0Ej)
          ((case-lambda
             ((g$file-name$6945$1M&0Ej)
              (if (not g$file-name$6945$1M&0Ej)
                (assertion-violation '#f '"cannot file library" g$x$6944$1M&0Ej)
                ((case-lambda
                   ((g$t$6946$1M&0Ej)
                    (if g$t$6946$1M&0Ej
                      g$t$6946$1M&0Ej
                      (begin
                        '#f
                        ((g$current-library-expander$6853$1M&0Ej)
                         (g$read-library-source-file$6519$1M&0Ej
                           g$file-name$6945$1M&0Ej)
                         g$file-name$6945$1M&0Ej
                         (case-lambda
                           ((g$name$6947$1M&0Ej)
                            (if (not (equal?
                                       g$name$6947$1M&0Ej
                                       g$x$6944$1M&0Ej))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6229$1M&0Ej)))
                                  (case-lambda
                                    ((g$p$6950$1M&0Ej g$e$6951$1M&0Ej)
                                     ((case-lambda
                                        ((g$e$6952$1M&0Ej g$p$6953$1M&0Ej)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$6953$1M&0Ej)
                                           (write
                                             g$x$6944$1M&0Ej
                                             g$p$6953$1M&0Ej)
                                           (display
                                             '" in file "
                                             g$p$6953$1M&0Ej)
                                           (display
                                             g$file-name$6945$1M&0Ej
                                             g$p$6953$1M&0Ej)
                                           (display '", found " g$p$6953$1M&0Ej)
                                           (write
                                             g$name$6947$1M&0Ej
                                             g$p$6953$1M&0Ej)
                                           (display '" instead" g$p$6953$1M&0Ej)
                                           (g$e$6952$1M&0Ej))))
                                      g$e$6951$1M&0Ej
                                      g$p$6950$1M&0Ej)))))
                              (void)))))))))
                 (g$try-load-from-file$6851$1M&0Ej g$file-name$6945$1M&0Ej)))))
           ((g$file-locator$6848$1M&0Ej) g$x$6944$1M&0Ej))))
       (case-lambda
         ((g$f$6954$1M&0Ej)
          (if (procedure? g$f$6954$1M&0Ej)
            g$f$6954$1M&0Ej
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$6954$1M&0Ej))))))
   (g$current-library-expander$6853$1M&0Ej
     g$current-library-expander$7057$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       (case-lambda
         ((g$x$6955$1M&0Ej)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$6956$1M&0Ej)
          (if (procedure? g$f$6956$1M&0Ej)
            g$f$6956$1M&0Ej
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$6956$1M&0Ej))))))
   (g$external-pending-libraries$6854$1M&0Ej
     g$external-pending-libraries$7058$1M&0Ej
     (g$make-parameter$6520$1M&0Ej '()))
   (g$find-external-library$6855$1M&0Ej
     g$find-external-library$7059$1M&0Ej
     (case-lambda
       ((g$name$6957$1M&0Ej)
        (begin
          (if (g$member$4991$1M&0Ej
                g$name$6957$1M&0Ej
                (g$external-pending-libraries$6854$1M&0Ej))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$6957$1M&0Ej)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$6960$1M&0Ej
                g$external-pending-libraries$6961$1M&0Ej)
              ((case-lambda
                 ((g$swap$6962$1M&0Ej)
                  (dynamic-wind
                    g$swap$6962$1M&0Ej
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6852$1M&0Ej) g$name$6957$1M&0Ej)
                         ((case-lambda
                            ((g$t$6963$1M&0Ej)
                             (if g$t$6963$1M&0Ej
                               g$t$6963$1M&0Ej
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$6957$1M&0Ej)))))
                          (g$find-library-by$6844$1M&0Ej
                            (case-lambda
                              ((g$x$6964$1M&0Ej)
                               (equal?
                                 (g$library-name$6815$1M&0Ej g$x$6964$1M&0Ej)
                                 g$name$6957$1M&0Ej))))))))
                    g$swap$6962$1M&0Ej)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$6965$1M&0Ej)
                      (begin
                        (g$external-pending-libraries$6960$1M&0Ej
                          g$external-pending-libraries$6961$1M&0Ej)
                        (set! g$external-pending-libraries$6961$1M&0Ej
                          g$t$6965$1M&0Ej))))
                   (g$external-pending-libraries$6960$1M&0Ej)))))))
           g$external-pending-libraries$6854$1M&0Ej
           (cons
             g$name$6957$1M&0Ej
             (g$external-pending-libraries$6854$1M&0Ej)))))))
   (g$find-library-by-name$6856$1M&0Ej
     g$find-library-by-name$7060$1M&0Ej
     (case-lambda
       ((g$name$6966$1M&0Ej)
        ((case-lambda
           ((g$t$6967$1M&0Ej)
            (if g$t$6967$1M&0Ej
              g$t$6967$1M&0Ej
              (begin
                '#f
                (g$find-external-library$6855$1M&0Ej g$name$6966$1M&0Ej)))))
         (g$find-library-by$6844$1M&0Ej
           (case-lambda
             ((g$x$6968$1M&0Ej)
              (equal?
                (g$library-name$6815$1M&0Ej g$x$6968$1M&0Ej)
                g$name$6966$1M&0Ej))))))))
   (g$library-exists?$6857$1M&0Ej
     g$library-exists?$7061$1M&0Ej
     (case-lambda
       ((g$name$6969$1M&0Ej)
        (if (g$find-library-by$6844$1M&0Ej
              (case-lambda
                ((g$x$6970$1M&0Ej)
                 (equal?
                   (g$library-name$6815$1M&0Ej g$x$6970$1M&0Ej)
                   g$name$6969$1M&0Ej))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6858$1M&0Ej
     g$find-library-by-spec/die$7062$1M&0Ej
     (case-lambda
       ((g$spec$6971$1M&0Ej)
        ((case-lambda
           ((g$id$6972$1M&0Ej)
            ((case-lambda
               ((g$t$6973$1M&0Ej)
                (if g$t$6973$1M&0Ej
                  g$t$6973$1M&0Ej
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$6971$1M&0Ej)))))
             (g$find-library-by$6844$1M&0Ej
               (case-lambda
                 ((g$x$6974$1M&0Ej)
                  (eq? g$id$6972$1M&0Ej
                       (g$library-id$6814$1M&0Ej g$x$6974$1M&0Ej))))))))
         (car g$spec$6971$1M&0Ej)))))
   (g$label->binding-table$6859$1M&0Ej
     g$label->binding-table$7063$1M&0Ej
     (g$make-eq-hashtable$5433$1M&0Ej))
   (g$install-library-record$6860$1M&0Ej
     g$install-library-record$7064$1M&0Ej
     (case-lambda
       ((g$lib$6975$1M&0Ej)
        (begin
          ((case-lambda
             ((g$exp-env$6976$1M&0Ej)
              (for-each
                (case-lambda
                  ((g$x$6977$1M&0Ej)
                   ((case-lambda
                      ((g$label$6978$1M&0Ej g$binding$6979$1M&0Ej)
                       ((case-lambda
                          ((g$binding$6980$1M&0Ej)
                           (g$hashtable-set!$5437$1M&0Ej
                             g$label->binding-table$6859$1M&0Ej
                             g$label$6978$1M&0Ej
                             g$binding$6980$1M&0Ej)))
                        ((case-lambda
                           ((g$t$6981$1M&0Ej)
                            (if (g$memv$4990$1M&0Ej g$t$6981$1M&0Ej '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$6975$1M&0Ej
                                  (cdr g$binding$6979$1M&0Ej)))
                              (if (g$memv$4990$1M&0Ej
                                    g$t$6981$1M&0Ej
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$6975$1M&0Ej
                                    (cdr g$binding$6979$1M&0Ej)))
                                (if (g$memv$4990$1M&0Ej
                                      g$t$6981$1M&0Ej
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$6975$1M&0Ej
                                      (cdr g$binding$6979$1M&0Ej)))
                                  g$binding$6979$1M&0Ej)))))
                         (car g$binding$6979$1M&0Ej)))))
                    (car g$x$6977$1M&0Ej)
                    (cdr g$x$6977$1M&0Ej))))
                g$exp-env$6976$1M&0Ej)))
           (g$library-env$6821$1M&0Ej g$lib$6975$1M&0Ej))
          ((g$current-library-collection$6808$1M&0Ej) g$lib$6975$1M&0Ej)))))
   (g$install-library$6861$1M&0Ej
     g$install-library$7065$1M&0Ej
     (case-lambda
       ((g$id$6982$1M&0Ej
          g$name$6983$1M&0Ej
          g$ver$6984$1M&0Ej
          g$imp*$6985$1M&0Ej
          g$vis*$6986$1M&0Ej
          g$inv*$6987$1M&0Ej
          g$exp-subst$6988$1M&0Ej
          g$exp-env$6989$1M&0Ej
          g$visit-proc$6990$1M&0Ej
          g$invoke-proc$6991$1M&0Ej
          g$visit-code$6992$1M&0Ej
          g$invoke-code$6993$1M&0Ej
          g$visible?$6994$1M&0Ej
          g$source-file-name$6995$1M&0Ej)
        ((case-lambda
           ((g$imp-lib*$6996$1M&0Ej
              g$vis-lib*$6997$1M&0Ej
              g$inv-lib*$6998$1M&0Ej)
            (begin
              (if (not (if (symbol? g$id$6982$1M&0Ej)
                         (if (list? g$name$6983$1M&0Ej)
                           (begin '#f (list? g$ver$6984$1M&0Ej))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$6982$1M&0Ej
                  g$name$6983$1M&0Ej
                  g$ver$6984$1M&0Ej)
                (void))
              (if (g$library-exists?$6857$1M&0Ej g$name$6983$1M&0Ej)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$6983$1M&0Ej)
                (void))
              ((case-lambda
                 ((g$lib$6999$1M&0Ej)
                  (g$install-library-record$6860$1M&0Ej g$lib$6999$1M&0Ej)))
               (g$make-library$6813$1M&0Ej
                 g$id$6982$1M&0Ej
                 g$name$6983$1M&0Ej
                 g$ver$6984$1M&0Ej
                 g$imp-lib*$6996$1M&0Ej
                 g$vis-lib*$6997$1M&0Ej
                 g$inv-lib*$6998$1M&0Ej
                 g$exp-subst$6988$1M&0Ej
                 g$exp-env$6989$1M&0Ej
                 g$visit-proc$6990$1M&0Ej
                 g$invoke-proc$6991$1M&0Ej
                 g$visit-code$6992$1M&0Ej
                 g$invoke-code$6993$1M&0Ej
                 g$visible?$6994$1M&0Ej
                 g$source-file-name$6995$1M&0Ej)))))
         (map g$find-library-by-spec/die$6858$1M&0Ej g$imp*$6985$1M&0Ej)
         (map g$find-library-by-spec/die$6858$1M&0Ej g$vis*$6986$1M&0Ej)
         (map g$find-library-by-spec/die$6858$1M&0Ej g$inv*$6987$1M&0Ej)))))
   (g$imported-label->binding$6862$1M&0Ej
     g$imported-label->binding$7066$1M&0Ej
     (case-lambda
       ((g$lab$7000$1M&0Ej)
        (g$hashtable-ref$5436$1M&0Ej
          g$label->binding-table$6859$1M&0Ej
          g$lab$7000$1M&0Ej
          '#f))))
   (g$invoke-library$6863$1M&0Ej
     g$invoke-library$7067$1M&0Ej
     (case-lambda
       ((g$lib$7001$1M&0Ej)
        ((case-lambda
           ((g$invoke$7002$1M&0Ej)
            (if (procedure? g$invoke$7002$1M&0Ej)
              (begin
                (g$set-library-invoke-state!$6837$1M&0Ej
                  g$lib$7001$1M&0Ej
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7001$1M&0Ej))))
                (for-each
                  g$invoke-library$6863$1M&0Ej
                  (g$library-inv*$6819$1M&0Ej g$lib$7001$1M&0Ej))
                (g$set-library-invoke-state!$6837$1M&0Ej
                  g$lib$7001$1M&0Ej
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7001$1M&0Ej))))
                (g$invoke$7002$1M&0Ej)
                (g$set-library-invoke-state!$6837$1M&0Ej g$lib$7001$1M&0Ej '#t))
              (void))))
         (g$library-invoke-state$6823$1M&0Ej g$lib$7001$1M&0Ej)))))
   (g$visit-library$6864$1M&0Ej
     g$visit-library$7068$1M&0Ej
     (case-lambda
       ((g$lib$7003$1M&0Ej)
        ((case-lambda
           ((g$visit$7004$1M&0Ej)
            (if (procedure? g$visit$7004$1M&0Ej)
              (begin
                (g$set-library-visit-state!$6836$1M&0Ej
                  g$lib$7003$1M&0Ej
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7003$1M&0Ej))))
                (for-each
                  g$invoke-library$6863$1M&0Ej
                  (g$library-vis*$6818$1M&0Ej g$lib$7003$1M&0Ej))
                (g$set-library-visit-state!$6836$1M&0Ej
                  g$lib$7003$1M&0Ej
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7003$1M&0Ej))))
                (g$visit$7004$1M&0Ej)
                (g$set-library-visit-state!$6836$1M&0Ej g$lib$7003$1M&0Ej '#t))
              (void))))
         (g$library-visit-state$6822$1M&0Ej g$lib$7003$1M&0Ej)))))
   (g$invoke-library-by-spec$6865$1M&0Ej
     g$invoke-library-by-spec$7069$1M&0Ej
     (case-lambda
       ((g$spec$7005$1M&0Ej)
        (g$invoke-library$6863$1M&0Ej
          (g$find-library-by-spec/die$6858$1M&0Ej g$spec$7005$1M&0Ej)))))
   (g$installed-libraries$6866$1M&0Ej
     g$installed-libraries$7070$1M&0Ej
     (case-lambda
       ((g$all?$7006$1M&0Ej)
        ((letrec ((g$f$7007$1M&0Ej
                    (case-lambda
                      ((g$ls$7008$1M&0Ej)
                       (if (null? g$ls$7008$1M&0Ej)
                         '()
                         (if ((case-lambda
                                ((g$t$7009$1M&0Ej)
                                 (if g$t$7009$1M&0Ej
                                   g$t$7009$1M&0Ej
                                   (begin
                                     '#f
                                     (g$library-visible?$6826$1M&0Ej
                                       (car g$ls$7008$1M&0Ej))))))
                              g$all?$7006$1M&0Ej)
                           (cons
                             (car g$ls$7008$1M&0Ej)
                             (g$f$7007$1M&0Ej (cdr g$ls$7008$1M&0Ej)))
                           (g$f$7007$1M&0Ej (cdr g$ls$7008$1M&0Ej))))))))
           g$f$7007$1M&0Ej)
         ((g$current-library-collection$6808$1M&0Ej))))
       (() (g$installed-libraries$6866$1M&0Ej '#f))))
   (g$library-spec$6867$1M&0Ej
     g$library-spec$7071$1M&0Ej
     (case-lambda
       ((g$x$7010$1M&0Ej)
        (begin
          (if (not (g$library?$6812$1M&0Ej g$x$7010$1M&0Ej))
            (assertion-violation 'library-spec '"not a library" g$x$7010$1M&0Ej)
            (void))
          (list
            (g$library-id$6814$1M&0Ej g$x$7010$1M&0Ej)
            (g$library-name$6815$1M&0Ej g$x$7010$1M&0Ej)
            (g$library-version$6816$1M&0Ej g$x$7010$1M&0Ej)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7072$1M&0Ej
     g$build-global-define$7182$1M&0Ej
     (case-lambda ((g$x$7153$1M&0Ej) (g$build-void$7149$1M&0Ej))))
   (g$build-lambda$7121$1M&0Ej
     g$build-lambda$7183$1M&0Ej
     (case-lambda
       ((g$ae$7154$1M&0Ej g$vars$7155$1M&0Ej g$exp$7156$1M&0Ej)
        (list 'case-lambda (list g$vars$7155$1M&0Ej g$exp$7156$1M&0Ej)))))
   (g$build-case-lambda$7122$1M&0Ej
     g$build-case-lambda$7184$1M&0Ej
     (case-lambda
       ((g$ae$7157$1M&0Ej g$vars*$7158$1M&0Ej g$exp*$7159$1M&0Ej)
        (cons 'case-lambda (map list g$vars*$7158$1M&0Ej g$exp*$7159$1M&0Ej)))))
   (g$build-let$7123$1M&0Ej
     g$build-let$7185$1M&0Ej
     (case-lambda
       ((g$ae$7160$1M&0Ej
          g$lhs*$7161$1M&0Ej
          g$rhs*$7162$1M&0Ej
          g$body$7163$1M&0Ej)
        (cons
          (g$build-lambda$7121$1M&0Ej
            g$ae$7160$1M&0Ej
            g$lhs*$7161$1M&0Ej
            g$body$7163$1M&0Ej)
          g$rhs*$7162$1M&0Ej))))
   (g$build-sequence$7148$1M&0Ej
     g$build-sequence$7186$1M&0Ej
     (case-lambda
       ((g$ae$7164$1M&0Ej g$exps$7165$1M&0Ej)
        ((letrec ((g$loop$7166$1M&0Ej
                    (case-lambda
                      ((g$exps$7167$1M&0Ej)
                       (if (null? (cdr g$exps$7167$1M&0Ej))
                         (car g$exps$7167$1M&0Ej)
                         (if (equal?
                               (car g$exps$7167$1M&0Ej)
                               (g$build-void$7149$1M&0Ej))
                           (g$loop$7166$1M&0Ej (cdr g$exps$7167$1M&0Ej))
                           (cons 'begin g$exps$7167$1M&0Ej)))))))
           g$loop$7166$1M&0Ej)
         g$exps$7165$1M&0Ej))))
   (g$build-void$7149$1M&0Ej
     g$build-void$7187$1M&0Ej
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7150$1M&0Ej
     g$build-letrec$7188$1M&0Ej
     (case-lambda
       ((g$ae$7168$1M&0Ej
          g$vars$7169$1M&0Ej
          g$val-exps$7170$1M&0Ej
          g$body-exp$7171$1M&0Ej)
        (if (null? g$vars$7169$1M&0Ej)
          g$body-exp$7171$1M&0Ej
          (list
            'letrec
            (map list g$vars$7169$1M&0Ej g$val-exps$7170$1M&0Ej)
            g$body-exp$7171$1M&0Ej)))))
   (g$build-letrec*$7151$1M&0Ej
     g$build-letrec*$7189$1M&0Ej
     (case-lambda
       ((g$ae$7172$1M&0Ej
          g$vars$7173$1M&0Ej
          g$val-exps$7174$1M&0Ej
          g$body-exp$7175$1M&0Ej)
        (if (null? g$vars$7173$1M&0Ej)
          g$body-exp$7175$1M&0Ej
          (list
            'letrec*
            (map list g$vars$7173$1M&0Ej g$val-exps$7174$1M&0Ej)
            g$body-exp$7175$1M&0Ej)))))
   (g$build-library-letrec*$7152$1M&0Ej
     g$build-library-letrec*$7190$1M&0Ej
     (case-lambda
       ((g$ae$7176$1M&0Ej
          g$name$7177$1M&0Ej
          g$vars$7178$1M&0Ej
          g$locs$7179$1M&0Ej
          g$val-exps$7180$1M&0Ej
          g$body-exp$7181$1M&0Ej)
        (list
          'library-letrec*
          g$name$7177$1M&0Ej
          (map list
               g$vars$7178$1M&0Ej
               g$locs$7179$1M&0Ej
               g$val-exps$7180$1M&0Ej)
          g$body-exp$7181$1M&0Ej)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7191$1M&0Ej
     g$set-cons$10872$1M&0Ej
     (case-lambda
       ((g$x$7654$1M&0Ej g$ls$7655$1M&0Ej)
        (if (g$memq$4989$1M&0Ej g$x$7654$1M&0Ej g$ls$7655$1M&0Ej)
          g$ls$7655$1M&0Ej
          (cons g$x$7654$1M&0Ej g$ls$7655$1M&0Ej)))))
   (g$set-union$7192$1M&0Ej
     g$set-union$10873$1M&0Ej
     (case-lambda
       ((g$ls1$7656$1M&0Ej g$ls2$7657$1M&0Ej)
        (if (null? g$ls1$7656$1M&0Ej)
          g$ls2$7657$1M&0Ej
          (if (g$memq$4989$1M&0Ej (car g$ls1$7656$1M&0Ej) g$ls2$7657$1M&0Ej)
            (g$set-union$7192$1M&0Ej (cdr g$ls1$7656$1M&0Ej) g$ls2$7657$1M&0Ej)
            (cons
              (car g$ls1$7656$1M&0Ej)
              (g$set-union$7192$1M&0Ej
                (cdr g$ls1$7656$1M&0Ej)
                g$ls2$7657$1M&0Ej)))))))
   (g$top-mark*$7194$1M&0Ej g$top-mark*$10874$1M&0Ej '(top))
   (g$top-marked?$7195$1M&0Ej
     g$top-marked?$10875$1M&0Ej
     (case-lambda
       ((g$m*$7658$1M&0Ej) (g$memq$4989$1M&0Ej 'top g$m*$7658$1M&0Ej))))
   (g$gen-lexical$7196$1M&0Ej
     g$gen-lexical$10876$1M&0Ej
     (case-lambda
       ((g$sym$7659$1M&0Ej)
        (if (symbol? g$sym$7659$1M&0Ej)
          (gensym g$sym$7659$1M&0Ej)
          (if (g$stx?$7229$1M&0Ej g$sym$7659$1M&0Ej)
            (g$gen-lexical$7196$1M&0Ej
              (g$id->sym$7258$1M&0Ej g$sym$7659$1M&0Ej))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7659$1M&0Ej))))))
   (g$gen-global$7197$1M&0Ej
     g$gen-global$10877$1M&0Ej
     (case-lambda
       ((g$x$7660$1M&0Ej) (g$gen-lexical$7196$1M&0Ej g$x$7660$1M&0Ej))))
   (g$gen-label$7198$1M&0Ej
     g$gen-label$10878$1M&0Ej
     (case-lambda ((g$_$7661$1M&0Ej) (gensym))))
   (g$gen-top-level-label$7199$1M&0Ej
     g$gen-top-level-label$10879$1M&0Ej
     (case-lambda
       ((g$id$7662$1M&0Ej g$rib$7663$1M&0Ej)
        (letrec* ((g$find$7664$1M&0Ej
                    (case-lambda
                      ((g$sym$7670$1M&0Ej
                         g$mark*$7671$1M&0Ej
                         g$sym*$7672$1M&0Ej
                         g$mark**$7673$1M&0Ej
                         g$label*$7674$1M&0Ej)
                       (if (pair? g$sym*$7672$1M&0Ej)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7670$1M&0Ej
                                        (car g$sym*$7672$1M&0Ej))
                                 (begin
                                   '#f
                                   (g$same-marks?$7259$1M&0Ej
                                     g$mark*$7671$1M&0Ej
                                     (car g$mark**$7673$1M&0Ej)))
                                 '#f)
                             (car g$label*$7674$1M&0Ej)
                             (g$find$7664$1M&0Ej
                               g$sym$7670$1M&0Ej
                               g$mark*$7671$1M&0Ej
                               (cdr g$sym*$7672$1M&0Ej)
                               (cdr g$mark**$7673$1M&0Ej)
                               (cdr g$label*$7674$1M&0Ej))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7665$1M&0Ej g$mark*$7666$1M&0Ej)
              ((case-lambda
                 ((g$sym*$7667$1M&0Ej)
                  ((case-lambda
                     ((g$t$7668$1M&0Ej)
                      (if g$t$7668$1M&0Ej
                        ((case-lambda
                           ((g$label$7669$1M&0Ej)
                            (if (g$imported-label->binding$7066$1M&0Ej
                                  g$label$7669$1M&0Ej)
                              (gensym)
                              g$label$7669$1M&0Ej)))
                         g$t$7668$1M&0Ej)
                        (gensym))))
                   (if (g$memq$4989$1M&0Ej
                         g$sym$7665$1M&0Ej
                         (g$rib-sym*$7207$1M&0Ej g$rib$7663$1M&0Ej))
                     (begin
                       '#f
                       (g$find$7664$1M&0Ej
                         g$sym$7665$1M&0Ej
                         g$mark*$7666$1M&0Ej
                         g$sym*$7667$1M&0Ej
                         (g$rib-mark**$7208$1M&0Ej g$rib$7663$1M&0Ej)
                         (g$rib-label*$7209$1M&0Ej g$rib$7663$1M&0Ej)))
                     '#f))))
               (g$rib-sym*$7207$1M&0Ej g$rib$7663$1M&0Ej))))
           (g$id->sym$7258$1M&0Ej g$id$7662$1M&0Ej)
           (g$stx-mark*$7232$1M&0Ej g$id$7662$1M&0Ej))))))
   (g$gen-define-label+loc$7200$1M&0Ej
     g$gen-define-label+loc$10880$1M&0Ej
     (case-lambda
       ((g$id$7675$1M&0Ej g$rib$7676$1M&0Ej)
        ((case-lambda
           ((g$t$7677$1M&0Ej)
            (if g$t$7677$1M&0Ej
              ((case-lambda
                 ((g$env$7678$1M&0Ej)
                  ((case-lambda
                     ((g$label$7679$1M&0Ej g$locs$7680$1M&0Ej)
                      (values
                        g$label$7679$1M&0Ej
                        ((case-lambda
                           ((g$t$7681$1M&0Ej)
                            (if g$t$7681$1M&0Ej
                              (cdr g$t$7681$1M&0Ej)
                              ((case-lambda
                                 ((g$loc$7682$1M&0Ej)
                                  (begin
                                    (g$set-interaction-env-locs!$7618$1M&0Ej
                                      g$env$7678$1M&0Ej
                                      (cons
                                        (cons
                                          g$label$7679$1M&0Ej
                                          g$loc$7682$1M&0Ej)
                                        g$locs$7680$1M&0Ej))
                                    g$loc$7682$1M&0Ej)))
                               (g$gen-lexical$7196$1M&0Ej g$id$7675$1M&0Ej)))))
                         (g$assq$4985$1M&0Ej
                           g$label$7679$1M&0Ej
                           g$locs$7680$1M&0Ej)))))
                   (g$gen-top-level-label$7199$1M&0Ej
                     g$id$7675$1M&0Ej
                     g$rib$7676$1M&0Ej)
                   (g$interaction-env-locs$7615$1M&0Ej g$env$7678$1M&0Ej))))
               g$t$7677$1M&0Ej)
              (values (gensym) (g$gen-lexical$7196$1M&0Ej g$id$7675$1M&0Ej)))))
         (g$top-level-context$7653$1M&0Ej)))))
   (g$gen-define-label$7201$1M&0Ej
     g$gen-define-label$10881$1M&0Ej
     (case-lambda
       ((g$id$7683$1M&0Ej g$rib$7684$1M&0Ej)
        (if (g$top-level-context$7653$1M&0Ej)
          (g$gen-top-level-label$7199$1M&0Ej g$id$7683$1M&0Ej g$rib$7684$1M&0Ej)
          (gensym)))))
   (g$8298$7202$1M&0Ej
     g$8298$10882$1M&0Ej
     (make-record-type-descriptor
       'rib
       '#f
       'g$8301$1M&0Ej
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$8300$7203$1M&0Ej g$8300$10883$1M&0Ej '#f)
   (g$8299$7204$1M&0Ej
     g$8299$10884$1M&0Ej
     (make-record-constructor-descriptor
       g$8298$7202$1M&0Ej
       '#f
       g$8300$7203$1M&0Ej))
   (g$rib?$7205$1M&0Ej
     g$rib?$10885$1M&0Ej
     (record-predicate g$8298$7202$1M&0Ej))
   (g$make-rib$7206$1M&0Ej
     g$make-rib$10886$1M&0Ej
     (record-constructor g$8299$7204$1M&0Ej))
   (g$rib-sym*$7207$1M&0Ej
     g$rib-sym*$10887$1M&0Ej
     (record-accessor g$8298$7202$1M&0Ej '0))
   (g$rib-mark**$7208$1M&0Ej
     g$rib-mark**$10888$1M&0Ej
     (record-accessor g$8298$7202$1M&0Ej '1))
   (g$rib-label*$7209$1M&0Ej
     g$rib-label*$10889$1M&0Ej
     (record-accessor g$8298$7202$1M&0Ej '2))
   (g$rib-sealed/freq$7210$1M&0Ej
     g$rib-sealed/freq$10890$1M&0Ej
     (record-accessor g$8298$7202$1M&0Ej '3))
   (g$rib-cache$7211$1M&0Ej
     g$rib-cache$10891$1M&0Ej
     (record-accessor g$8298$7202$1M&0Ej '4))
   (g$set-rib-sym*!$7212$1M&0Ej
     g$set-rib-sym*!$10892$1M&0Ej
     (record-mutator g$8298$7202$1M&0Ej '0))
   (g$set-rib-mark**!$7213$1M&0Ej
     g$set-rib-mark**!$10893$1M&0Ej
     (record-mutator g$8298$7202$1M&0Ej '1))
   (g$set-rib-label*!$7214$1M&0Ej
     g$set-rib-label*!$10894$1M&0Ej
     (record-mutator g$8298$7202$1M&0Ej '2))
   (g$set-rib-sealed/freq!$7215$1M&0Ej
     g$set-rib-sealed/freq!$10895$1M&0Ej
     (record-mutator g$8298$7202$1M&0Ej '3))
   (g$set-rib-cache!$7216$1M&0Ej
     g$set-rib-cache!$10896$1M&0Ej
     (record-mutator g$8298$7202$1M&0Ej '4))
   (g$make-empty-rib$7217$1M&0Ej
     g$make-empty-rib$10897$1M&0Ej
     (case-lambda (() (g$make-rib$7206$1M&0Ej '() '() '() '#f '#f))))
   (g$make-cache-rib$7218$1M&0Ej
     g$make-cache-rib$10898$1M&0Ej
     (case-lambda
       (()
        (g$make-rib$7206$1M&0Ej
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$5433$1M&0Ej)))))
   (g$find-label$7219$1M&0Ej
     g$find-label$10899$1M&0Ej
     (case-lambda
       ((g$rib$7685$1M&0Ej g$sym$7686$1M&0Ej g$mark*$7687$1M&0Ej)
        ((case-lambda
           ((g$ht$7688$1M&0Ej)
            (if g$ht$7688$1M&0Ej
              (begin
                '#f
                ((case-lambda
                   ((g$cv$7689$1M&0Ej)
                    ((case-lambda
                       ((g$t$7690$1M&0Ej)
                        (if g$t$7690$1M&0Ej (cdr g$t$7690$1M&0Ej) '#f)))
                     (if g$cv$7689$1M&0Ej
                       (begin
                         '#f
                         (g$assp$4988$1M&0Ej
                           (case-lambda
                             ((g$m$7691$1M&0Ej)
                              (g$same-marks?$7259$1M&0Ej
                                g$mark*$7687$1M&0Ej
                                g$m$7691$1M&0Ej)))
                           g$cv$7689$1M&0Ej))
                       '#f))))
                 (g$hashtable-ref$5436$1M&0Ej
                   g$ht$7688$1M&0Ej
                   g$sym$7686$1M&0Ej
                   '#f)))
              '#f)))
         (g$rib-cache$7211$1M&0Ej g$rib$7685$1M&0Ej)))))
   (g$extend-rib!$7220$1M&0Ej
     g$extend-rib!$10900$1M&0Ej
     (case-lambda
       ((g$rib$7692$1M&0Ej g$id$7693$1M&0Ej g$label$7694$1M&0Ej)
        (letrec* ((g$find$7695$1M&0Ej
                    (case-lambda
                      ((g$sym$7704$1M&0Ej
                         g$mark*$7705$1M&0Ej
                         g$sym*$7706$1M&0Ej
                         g$mark**$7707$1M&0Ej
                         g$label*$7708$1M&0Ej)
                       (if (pair? g$sym*$7706$1M&0Ej)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7704$1M&0Ej
                                        (car g$sym*$7706$1M&0Ej))
                                 (begin
                                   '#f
                                   (g$same-marks?$7259$1M&0Ej
                                     g$mark*$7705$1M&0Ej
                                     (car g$mark**$7707$1M&0Ej)))
                                 '#f)
                             g$label*$7708$1M&0Ej
                             (g$find$7695$1M&0Ej
                               g$sym$7704$1M&0Ej
                               g$mark*$7705$1M&0Ej
                               (cdr g$sym*$7706$1M&0Ej)
                               (cdr g$mark**$7707$1M&0Ej)
                               (cdr g$label*$7708$1M&0Ej))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7210$1M&0Ej g$rib$7692$1M&0Ej)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7692$1M&0Ej)
              (void))
            ((case-lambda
               ((g$sym$7696$1M&0Ej g$mark*$7697$1M&0Ej)
                ((case-lambda
                   ((g$sym*$7698$1M&0Ej)
                    ((case-lambda
                       ((g$t$7699$1M&0Ej)
                        (if g$t$7699$1M&0Ej
                          ((case-lambda
                             ((g$p$7700$1M&0Ej)
                              (if (not (eq? g$label$7694$1M&0Ej
                                            g$p$7700$1M&0Ej))
                                (g$syntax-violation$7646$1M&0Ej
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$7693$1M&0Ej)
                                (void))))
                           g$t$7699$1M&0Ej)
                          ((case-lambda
                             ((g$t$7701$1M&0Ej)
                              (if g$t$7701$1M&0Ej
                                ((case-lambda
                                   ((g$p$7702$1M&0Ej)
                                    (if (not (eq? g$label$7694$1M&0Ej
                                                  (car g$p$7702$1M&0Ej)))
                                      (if (g$top-level-context$7653$1M&0Ej)
                                        (set-car!
                                          g$p$7702$1M&0Ej
                                          g$label$7694$1M&0Ej)
                                        (g$syntax-violation$7646$1M&0Ej
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$7693$1M&0Ej))
                                      (void))))
                                 g$t$7701$1M&0Ej)
                                (begin
                                  (if (g$rib-cache$7211$1M&0Ej
                                        g$rib$7692$1M&0Ej)
                                    (g$hashtable-update!$5440$1M&0Ej
                                      (g$rib-cache$7211$1M&0Ej
                                        g$rib$7692$1M&0Ej)
                                      g$sym$7696$1M&0Ej
                                      (case-lambda
                                        ((g$e$7703$1M&0Ej)
                                         (cons
                                           (cons
                                             g$mark*$7697$1M&0Ej
                                             g$label$7694$1M&0Ej)
                                           g$e$7703$1M&0Ej)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$7212$1M&0Ej
                                    g$rib$7692$1M&0Ej
                                    (cons g$sym$7696$1M&0Ej g$sym*$7698$1M&0Ej))
                                  (g$set-rib-mark**!$7213$1M&0Ej
                                    g$rib$7692$1M&0Ej
                                    (cons
                                      g$mark*$7697$1M&0Ej
                                      (g$rib-mark**$7208$1M&0Ej
                                        g$rib$7692$1M&0Ej)))
                                  (g$set-rib-label*!$7214$1M&0Ej
                                    g$rib$7692$1M&0Ej
                                    (cons
                                      g$label$7694$1M&0Ej
                                      (g$rib-label*$7209$1M&0Ej
                                        g$rib$7692$1M&0Ej)))))))
                           (if (g$memq$4989$1M&0Ej
                                 g$sym$7696$1M&0Ej
                                 (g$rib-sym*$7207$1M&0Ej g$rib$7692$1M&0Ej))
                             (begin
                               '#f
                               (g$find$7695$1M&0Ej
                                 g$sym$7696$1M&0Ej
                                 g$mark*$7697$1M&0Ej
                                 g$sym*$7698$1M&0Ej
                                 (g$rib-mark**$7208$1M&0Ej g$rib$7692$1M&0Ej)
                                 (g$rib-label*$7209$1M&0Ej g$rib$7692$1M&0Ej)))
                             '#f)))))
                     (g$find-label$7219$1M&0Ej
                       g$rib$7692$1M&0Ej
                       g$sym$7696$1M&0Ej
                       g$mark*$7697$1M&0Ej))))
                 (g$rib-sym*$7207$1M&0Ej g$rib$7692$1M&0Ej))))
             (g$id->sym$7258$1M&0Ej g$id$7693$1M&0Ej)
             (g$stx-mark*$7232$1M&0Ej g$id$7693$1M&0Ej)))))))
   (g$extend-rib/nc!$7221$1M&0Ej
     g$extend-rib/nc!$10901$1M&0Ej
     (case-lambda
       ((g$rib$7709$1M&0Ej g$id$7710$1M&0Ej g$label$7711$1M&0Ej)
        ((case-lambda
           ((g$sym$7712$1M&0Ej g$mark*$7713$1M&0Ej)
            ((case-lambda
               ((g$sym*$7714$1M&0Ej)
                (begin
                  (if (g$rib-cache$7211$1M&0Ej g$rib$7709$1M&0Ej)
                    (g$hashtable-update!$5440$1M&0Ej
                      (g$rib-cache$7211$1M&0Ej g$rib$7709$1M&0Ej)
                      g$sym$7712$1M&0Ej
                      (case-lambda
                        ((g$e$7715$1M&0Ej)
                         (cons
                           (cons g$mark*$7713$1M&0Ej g$label$7711$1M&0Ej)
                           g$e$7715$1M&0Ej)))
                      '())
                    (void))
                  (g$set-rib-sym*!$7212$1M&0Ej
                    g$rib$7709$1M&0Ej
                    (cons g$sym$7712$1M&0Ej g$sym*$7714$1M&0Ej))
                  (g$set-rib-mark**!$7213$1M&0Ej
                    g$rib$7709$1M&0Ej
                    (cons
                      g$mark*$7713$1M&0Ej
                      (g$rib-mark**$7208$1M&0Ej g$rib$7709$1M&0Ej)))
                  (g$set-rib-label*!$7214$1M&0Ej
                    g$rib$7709$1M&0Ej
                    (cons
                      g$label$7711$1M&0Ej
                      (g$rib-label*$7209$1M&0Ej g$rib$7709$1M&0Ej))))))
             (g$rib-sym*$7207$1M&0Ej g$rib$7709$1M&0Ej))))
         (g$id->sym$7258$1M&0Ej g$id$7710$1M&0Ej)
         (g$stx-mark*$7232$1M&0Ej g$id$7710$1M&0Ej)))))
   (g$make-rib-map$7222$1M&0Ej
     g$make-rib-map$10902$1M&0Ej
     (case-lambda
       ((g$sym*$7716$1M&0Ej)
        ((case-lambda
           ((g$ht$7717$1M&0Ej)
            ((letrec ((g$f$7718$1M&0Ej
                        (case-lambda
                          ((g$i$7719$1M&0Ej g$sym*$7720$1M&0Ej)
                           (if (null? g$sym*$7720$1M&0Ej)
                             g$ht$7717$1M&0Ej
                             (begin
                               (g$hashtable-update!$5440$1M&0Ej
                                 g$ht$7717$1M&0Ej
                                 (car g$sym*$7720$1M&0Ej)
                                 (case-lambda
                                   ((g$x$7721$1M&0Ej)
                                    (cons g$i$7719$1M&0Ej g$x$7721$1M&0Ej)))
                                 '())
                               (g$f$7718$1M&0Ej
                                 (+ g$i$7719$1M&0Ej '1)
                                 (cdr g$sym*$7720$1M&0Ej))))))))
               g$f$7718$1M&0Ej)
             '0
             g$sym*$7716$1M&0Ej)))
         (g$make-eq-hashtable$5433$1M&0Ej)))))
   (g$seal-rib!$7223$1M&0Ej
     g$seal-rib!$10903$1M&0Ej
     (case-lambda
       ((g$rib$7722$1M&0Ej)
        ((case-lambda
           ((g$sym*$7723$1M&0Ej)
            (if (not (null? g$sym*$7723$1M&0Ej))
              (begin
                (g$set-rib-sym*!$7212$1M&0Ej
                  g$rib$7722$1M&0Ej
                  (list->vector g$sym*$7723$1M&0Ej))
                (g$set-rib-mark**!$7213$1M&0Ej
                  g$rib$7722$1M&0Ej
                  (list->vector (g$rib-mark**$7208$1M&0Ej g$rib$7722$1M&0Ej)))
                (g$set-rib-label*!$7214$1M&0Ej
                  g$rib$7722$1M&0Ej
                  (list->vector (g$rib-label*$7209$1M&0Ej g$rib$7722$1M&0Ej)))
                (g$set-rib-sealed/freq!$7215$1M&0Ej
                  g$rib$7722$1M&0Ej
                  (g$make-rib-map$7222$1M&0Ej g$sym*$7723$1M&0Ej)))
              (void))))
         (g$rib-sym*$7207$1M&0Ej g$rib$7722$1M&0Ej)))))
   (g$unseal-rib!$7224$1M&0Ej
     g$unseal-rib!$10904$1M&0Ej
     (case-lambda
       ((g$rib$7724$1M&0Ej)
        (if (g$rib-sealed/freq$7210$1M&0Ej g$rib$7724$1M&0Ej)
          (begin
            (g$set-rib-sealed/freq!$7215$1M&0Ej g$rib$7724$1M&0Ej '#f)
            (g$set-rib-sym*!$7212$1M&0Ej
              g$rib$7724$1M&0Ej
              (vector->list (g$rib-sym*$7207$1M&0Ej g$rib$7724$1M&0Ej)))
            (g$set-rib-mark**!$7213$1M&0Ej
              g$rib$7724$1M&0Ej
              (vector->list (g$rib-mark**$7208$1M&0Ej g$rib$7724$1M&0Ej)))
            (g$set-rib-label*!$7214$1M&0Ej
              g$rib$7724$1M&0Ej
              (vector->list (g$rib-label*$7209$1M&0Ej g$rib$7724$1M&0Ej))))
          (void)))))
   (g$make-full-rib$7225$1M&0Ej
     g$make-full-rib$10905$1M&0Ej
     (case-lambda
       ((g$id*$7725$1M&0Ej g$label*$7726$1M&0Ej)
        ((case-lambda
           ((g$r$7727$1M&0Ej)
            (begin (g$seal-rib!$7223$1M&0Ej g$r$7727$1M&0Ej) g$r$7727$1M&0Ej)))
         (g$make-rib$7206$1M&0Ej
           (map g$id->sym$7258$1M&0Ej g$id*$7725$1M&0Ej)
           (map g$stx-mark*$7232$1M&0Ej g$id*$7725$1M&0Ej)
           g$label*$7726$1M&0Ej
           '#f
           '#f)))))
   (g$8329$7226$1M&0Ej
     g$8329$10906$1M&0Ej
     (make-record-type-descriptor
       'stx
       '#f
       'g$8332$1M&0Ej
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8331$7227$1M&0Ej g$8331$10907$1M&0Ej '#f)
   (g$8330$7228$1M&0Ej
     g$8330$10908$1M&0Ej
     (make-record-constructor-descriptor
       g$8329$7226$1M&0Ej
       '#f
       g$8331$7227$1M&0Ej))
   (g$stx?$7229$1M&0Ej
     g$stx?$10909$1M&0Ej
     (record-predicate g$8329$7226$1M&0Ej))
   (g$make-stx$7230$1M&0Ej
     g$make-stx$10910$1M&0Ej
     (record-constructor g$8330$7228$1M&0Ej))
   (g$stx-expr$7231$1M&0Ej
     g$stx-expr$10911$1M&0Ej
     (record-accessor g$8329$7226$1M&0Ej '0))
   (g$stx-mark*$7232$1M&0Ej
     g$stx-mark*$10912$1M&0Ej
     (record-accessor g$8329$7226$1M&0Ej '1))
   (g$stx-subst*$7233$1M&0Ej
     g$stx-subst*$10913$1M&0Ej
     (record-accessor g$8329$7226$1M&0Ej '2))
   (g$stx-ae*$7234$1M&0Ej
     g$stx-ae*$10914$1M&0Ej
     (record-accessor g$8329$7226$1M&0Ej '3))
   (g$set-stx-expr!$7235$1M&0Ej
     g$set-stx-expr!$10915$1M&0Ej
     (record-mutator g$8329$7226$1M&0Ej '0))
   (g$set-stx-mark*!$7236$1M&0Ej
     g$set-stx-mark*!$10916$1M&0Ej
     (record-mutator g$8329$7226$1M&0Ej '1))
   (g$set-stx-subst*!$7237$1M&0Ej
     g$set-stx-subst*!$10917$1M&0Ej
     (record-mutator g$8329$7226$1M&0Ej '2))
   (g$set-stx-ae*!$7238$1M&0Ej
     g$set-stx-ae*!$10918$1M&0Ej
     (record-mutator g$8329$7226$1M&0Ej '3))
   (g$rp$7239$1M&0Ej
     g$rp$10919$1M&0Ej
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7728$1M&0Ej g$p$7729$1M&0Ej)
          (begin
            (display '"#<syntax " g$p$7729$1M&0Ej)
            (write (g$stx->datum$7268$1M&0Ej g$x$7728$1M&0Ej) g$p$7729$1M&0Ej)
            ((case-lambda
               ((g$expr$7730$1M&0Ej)
                (if (annotation? g$expr$7730$1M&0Ej)
                  ((case-lambda
                     ((g$src$7731$1M&0Ej)
                      (if (pair? g$src$7731$1M&0Ej)
                        (begin
                          (display '" [" g$p$7729$1M&0Ej)
                          (display (cdr g$src$7731$1M&0Ej) g$p$7729$1M&0Ej)
                          (display '" of " g$p$7729$1M&0Ej)
                          (display (car g$src$7731$1M&0Ej) g$p$7729$1M&0Ej)
                          (display '"]" g$p$7729$1M&0Ej))
                        (void))))
                   (annotation-source g$expr$7730$1M&0Ej))
                  (void))))
             (g$stx-expr$7231$1M&0Ej g$x$7728$1M&0Ej))
            (display '">" g$p$7729$1M&0Ej))))))
   (g$datum->stx$7240$1M&0Ej
     g$datum->stx$10920$1M&0Ej
     (case-lambda
       ((g$id$7732$1M&0Ej g$datum$7733$1M&0Ej)
        (g$make-stx$7230$1M&0Ej
          g$datum$7733$1M&0Ej
          (g$stx-mark*$7232$1M&0Ej g$id$7732$1M&0Ej)
          (g$stx-subst*$7233$1M&0Ej g$id$7732$1M&0Ej)
          (g$stx-ae*$7234$1M&0Ej g$id$7732$1M&0Ej)))))
   (g$gen-mark$7241$1M&0Ej
     g$gen-mark$10921$1M&0Ej
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7242$1M&0Ej g$anti-mark$10922$1M&0Ej '#f)
   (g$anti-mark?$7243$1M&0Ej g$anti-mark?$10923$1M&0Ej not)
   (g$join-wraps$7244$1M&0Ej
     g$join-wraps$10924$1M&0Ej
     (case-lambda
       ((g$m1*$7734$1M&0Ej
          g$s1*$7735$1M&0Ej
          g$ae1*$7736$1M&0Ej
          g$e$7737$1M&0Ej)
        (letrec* ((g$cancel$7738$1M&0Ej
                    (case-lambda
                      ((g$ls1$7742$1M&0Ej g$ls2$7743$1M&0Ej)
                       ((letrec ((g$f$7744$1M&0Ej
                                   (case-lambda
                                     ((g$x$7745$1M&0Ej g$ls1$7746$1M&0Ej)
                                      (if (null? g$ls1$7746$1M&0Ej)
                                        (cdr g$ls2$7743$1M&0Ej)
                                        (cons
                                          g$x$7745$1M&0Ej
                                          (g$f$7744$1M&0Ej
                                            (car g$ls1$7746$1M&0Ej)
                                            (cdr g$ls1$7746$1M&0Ej))))))))
                          g$f$7744$1M&0Ej)
                        (car g$ls1$7742$1M&0Ej)
                        (cdr g$ls1$7742$1M&0Ej))))))
          ((case-lambda
             ((g$m2*$7739$1M&0Ej g$s2*$7740$1M&0Ej g$ae2*$7741$1M&0Ej)
              (if (if (not (null? g$m1*$7734$1M&0Ej))
                    (if (not (null? g$m2*$7739$1M&0Ej))
                      (begin
                        '#f
                        (g$anti-mark?$7243$1M&0Ej (car g$m2*$7739$1M&0Ej)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7738$1M&0Ej g$m1*$7734$1M&0Ej g$m2*$7739$1M&0Ej)
                  (g$cancel$7738$1M&0Ej g$s1*$7735$1M&0Ej g$s2*$7740$1M&0Ej)
                  (g$cancel$7738$1M&0Ej g$ae1*$7736$1M&0Ej g$ae2*$7741$1M&0Ej))
                (values
                  (append g$m1*$7734$1M&0Ej g$m2*$7739$1M&0Ej)
                  (append g$s1*$7735$1M&0Ej g$s2*$7740$1M&0Ej)
                  (append g$ae1*$7736$1M&0Ej g$ae2*$7741$1M&0Ej)))))
           (g$stx-mark*$7232$1M&0Ej g$e$7737$1M&0Ej)
           (g$stx-subst*$7233$1M&0Ej g$e$7737$1M&0Ej)
           (g$stx-ae*$7234$1M&0Ej g$e$7737$1M&0Ej))))))
   (g$mkstx$7245$1M&0Ej
     g$mkstx$10925$1M&0Ej
     (case-lambda
       ((g$e$7747$1M&0Ej g$m*$7748$1M&0Ej g$s*$7749$1M&0Ej g$ae*$7750$1M&0Ej)
        (if (if (g$stx?$7229$1M&0Ej g$e$7747$1M&0Ej)
              (begin '#f (not (g$top-marked?$7195$1M&0Ej g$m*$7748$1M&0Ej)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7244$1M&0Ej
                 g$m*$7748$1M&0Ej
                 g$s*$7749$1M&0Ej
                 g$ae*$7750$1M&0Ej
                 g$e$7747$1M&0Ej)))
            (case-lambda
              ((g$m*$7754$1M&0Ej g$s*$7755$1M&0Ej g$ae*$7756$1M&0Ej)
               ((case-lambda
                  ((g$ae*$7757$1M&0Ej g$s*$7758$1M&0Ej g$m*$7759$1M&0Ej)
                   (g$make-stx$7230$1M&0Ej
                     (g$stx-expr$7231$1M&0Ej g$e$7747$1M&0Ej)
                     g$m*$7759$1M&0Ej
                     g$s*$7758$1M&0Ej
                     g$ae*$7757$1M&0Ej)))
                g$ae*$7756$1M&0Ej
                g$s*$7755$1M&0Ej
                g$m*$7754$1M&0Ej))))
          (g$make-stx$7230$1M&0Ej
            g$e$7747$1M&0Ej
            g$m*$7748$1M&0Ej
            g$s*$7749$1M&0Ej
            g$ae*$7750$1M&0Ej)))))
   (g$add-mark$7246$1M&0Ej
     g$add-mark$10926$1M&0Ej
     (case-lambda
       ((g$m$7760$1M&0Ej g$e$7761$1M&0Ej g$ae$7762$1M&0Ej)
        (g$mkstx$7245$1M&0Ej
          g$e$7761$1M&0Ej
          (list g$m$7760$1M&0Ej)
          '(shift)
          (list g$ae$7762$1M&0Ej)))))
   (g$add-subst$7247$1M&0Ej
     g$add-subst$10927$1M&0Ej
     (case-lambda
       ((g$subst$7763$1M&0Ej g$e$7764$1M&0Ej)
        (g$mkstx$7245$1M&0Ej
          g$e$7764$1M&0Ej
          '()
          (list g$subst$7763$1M&0Ej)
          '()))))
   (g$syntax-kind?$7248$1M&0Ej
     g$syntax-kind?$10928$1M&0Ej
     (case-lambda
       ((g$x$7765$1M&0Ej g$p?$7766$1M&0Ej)
        (if (g$stx?$7229$1M&0Ej g$x$7765$1M&0Ej)
          (g$syntax-kind?$7248$1M&0Ej
            (g$stx-expr$7231$1M&0Ej g$x$7765$1M&0Ej)
            g$p?$7766$1M&0Ej)
          (if (annotation? g$x$7765$1M&0Ej)
            (g$syntax-kind?$7248$1M&0Ej
              (annotation-expression g$x$7765$1M&0Ej)
              g$p?$7766$1M&0Ej)
            (g$p?$7766$1M&0Ej g$x$7765$1M&0Ej))))))
   (g$syntax-vector->list$7249$1M&0Ej
     g$syntax-vector->list$10929$1M&0Ej
     (case-lambda
       ((g$x$7767$1M&0Ej)
        (if (g$stx?$7229$1M&0Ej g$x$7767$1M&0Ej)
          ((case-lambda
             ((g$ls$7768$1M&0Ej
                g$m*$7769$1M&0Ej
                g$s*$7770$1M&0Ej
                g$ae*$7771$1M&0Ej)
              (map (case-lambda
                     ((g$x$7772$1M&0Ej)
                      (g$mkstx$7245$1M&0Ej
                        g$x$7772$1M&0Ej
                        g$m*$7769$1M&0Ej
                        g$s*$7770$1M&0Ej
                        g$ae*$7771$1M&0Ej)))
                   g$ls$7768$1M&0Ej)))
           (g$syntax-vector->list$7249$1M&0Ej
             (g$stx-expr$7231$1M&0Ej g$x$7767$1M&0Ej))
           (g$stx-mark*$7232$1M&0Ej g$x$7767$1M&0Ej)
           (g$stx-subst*$7233$1M&0Ej g$x$7767$1M&0Ej)
           (g$stx-ae*$7234$1M&0Ej g$x$7767$1M&0Ej))
          (if (annotation? g$x$7767$1M&0Ej)
            (g$syntax-vector->list$7249$1M&0Ej
              (annotation-expression g$x$7767$1M&0Ej))
            (if (vector? g$x$7767$1M&0Ej)
              (vector->list g$x$7767$1M&0Ej)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7767$1M&0Ej)))))))
   (g$syntax-pair?$7250$1M&0Ej
     g$syntax-pair?$10930$1M&0Ej
     (case-lambda
       ((g$x$7773$1M&0Ej) (g$syntax-kind?$7248$1M&0Ej g$x$7773$1M&0Ej pair?))))
   (g$syntax-vector?$7251$1M&0Ej
     g$syntax-vector?$10931$1M&0Ej
     (case-lambda
       ((g$x$7774$1M&0Ej)
        (g$syntax-kind?$7248$1M&0Ej g$x$7774$1M&0Ej vector?))))
   (g$syntax-null?$7252$1M&0Ej
     g$syntax-null?$10932$1M&0Ej
     (case-lambda
       ((g$x$7775$1M&0Ej) (g$syntax-kind?$7248$1M&0Ej g$x$7775$1M&0Ej null?))))
   (g$syntax-list?$7253$1M&0Ej
     g$syntax-list?$10933$1M&0Ej
     (case-lambda
       ((g$x$7776$1M&0Ej)
        ((case-lambda
           ((g$t$7777$1M&0Ej)
            (if g$t$7777$1M&0Ej
              g$t$7777$1M&0Ej
              (begin
                '#f
                (if (g$syntax-pair?$7250$1M&0Ej g$x$7776$1M&0Ej)
                  (begin
                    '#f
                    (g$syntax-list?$7253$1M&0Ej
                      (g$syntax-cdr$7255$1M&0Ej g$x$7776$1M&0Ej)))
                  '#f)))))
         (g$syntax-null?$7252$1M&0Ej g$x$7776$1M&0Ej)))))
   (g$syntax-car$7254$1M&0Ej
     g$syntax-car$10934$1M&0Ej
     (case-lambda
       ((g$x$7778$1M&0Ej)
        (if (g$stx?$7229$1M&0Ej g$x$7778$1M&0Ej)
          (g$mkstx$7245$1M&0Ej
            (g$syntax-car$7254$1M&0Ej (g$stx-expr$7231$1M&0Ej g$x$7778$1M&0Ej))
            (g$stx-mark*$7232$1M&0Ej g$x$7778$1M&0Ej)
            (g$stx-subst*$7233$1M&0Ej g$x$7778$1M&0Ej)
            (g$stx-ae*$7234$1M&0Ej g$x$7778$1M&0Ej))
          (if (annotation? g$x$7778$1M&0Ej)
            (g$syntax-car$7254$1M&0Ej (annotation-expression g$x$7778$1M&0Ej))
            (if (pair? g$x$7778$1M&0Ej)
              (car g$x$7778$1M&0Ej)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7778$1M&0Ej)))))))
   (g$syntax-cdr$7255$1M&0Ej
     g$syntax-cdr$10935$1M&0Ej
     (case-lambda
       ((g$x$7779$1M&0Ej)
        (if (g$stx?$7229$1M&0Ej g$x$7779$1M&0Ej)
          (g$mkstx$7245$1M&0Ej
            (g$syntax-cdr$7255$1M&0Ej (g$stx-expr$7231$1M&0Ej g$x$7779$1M&0Ej))
            (g$stx-mark*$7232$1M&0Ej g$x$7779$1M&0Ej)
            (g$stx-subst*$7233$1M&0Ej g$x$7779$1M&0Ej)
            (g$stx-ae*$7234$1M&0Ej g$x$7779$1M&0Ej))
          (if (annotation? g$x$7779$1M&0Ej)
            (g$syntax-cdr$7255$1M&0Ej (annotation-expression g$x$7779$1M&0Ej))
            (if (pair? g$x$7779$1M&0Ej)
              (cdr g$x$7779$1M&0Ej)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7779$1M&0Ej)))))))
   (g$syntax->list$7256$1M&0Ej
     g$syntax->list$10936$1M&0Ej
     (case-lambda
       ((g$x$7780$1M&0Ej)
        (if (g$syntax-pair?$7250$1M&0Ej g$x$7780$1M&0Ej)
          (cons
            (g$syntax-car$7254$1M&0Ej g$x$7780$1M&0Ej)
            (g$syntax->list$7256$1M&0Ej
              (g$syntax-cdr$7255$1M&0Ej g$x$7780$1M&0Ej)))
          (if (g$syntax-null?$7252$1M&0Ej g$x$7780$1M&0Ej)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7780$1M&0Ej))))))
   (g$id?$7257$1M&0Ej
     g$id?$10937$1M&0Ej
     (case-lambda
       ((g$x$7781$1M&0Ej)
        (if (g$stx?$7229$1M&0Ej g$x$7781$1M&0Ej)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7782$1M&0Ej)
                (symbol?
                  (if (annotation? g$expr$7782$1M&0Ej)
                    (annotation-stripped g$expr$7782$1M&0Ej)
                    g$expr$7782$1M&0Ej))))
             (g$stx-expr$7231$1M&0Ej g$x$7781$1M&0Ej)))
          '#f))))
   (g$id->sym$7258$1M&0Ej
     g$id->sym$10938$1M&0Ej
     (case-lambda
       ((g$x$7783$1M&0Ej)
        (begin
          (if (not (g$stx?$7229$1M&0Ej g$x$7783$1M&0Ej))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7783$1M&0Ej)
            (void))
          ((case-lambda
             ((g$expr$7784$1M&0Ej)
              ((case-lambda
                 ((g$sym$7785$1M&0Ej)
                  (if (symbol? g$sym$7785$1M&0Ej)
                    g$sym$7785$1M&0Ej
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7783$1M&0Ej))))
               (if (annotation? g$expr$7784$1M&0Ej)
                 (annotation-stripped g$expr$7784$1M&0Ej)
                 g$expr$7784$1M&0Ej))))
           (g$stx-expr$7231$1M&0Ej g$x$7783$1M&0Ej))))))
   (g$same-marks?$7259$1M&0Ej
     g$same-marks?$10939$1M&0Ej
     (case-lambda
       ((g$x$7786$1M&0Ej g$y$7787$1M&0Ej)
        ((case-lambda
           ((g$t$7788$1M&0Ej)
            (if g$t$7788$1M&0Ej
              g$t$7788$1M&0Ej
              (begin
                '#f
                (if (pair? g$x$7786$1M&0Ej)
                  (if (pair? g$y$7787$1M&0Ej)
                    (if (eq? (car g$x$7786$1M&0Ej) (car g$y$7787$1M&0Ej))
                      (begin
                        '#f
                        (g$same-marks?$7259$1M&0Ej
                          (cdr g$x$7786$1M&0Ej)
                          (cdr g$y$7787$1M&0Ej)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7786$1M&0Ej)
           (begin '#f (null? g$y$7787$1M&0Ej))
           '#f)))))
   (g$bound-id=?$7260$1M&0Ej
     g$bound-id=?$10940$1M&0Ej
     (case-lambda
       ((g$x$7789$1M&0Ej g$y$7790$1M&0Ej)
        (if (eq? (g$id->sym$7258$1M&0Ej g$x$7789$1M&0Ej)
                 (g$id->sym$7258$1M&0Ej g$y$7790$1M&0Ej))
          (begin
            '#f
            (g$same-marks?$7259$1M&0Ej
              (g$stx-mark*$7232$1M&0Ej g$x$7789$1M&0Ej)
              (g$stx-mark*$7232$1M&0Ej g$y$7790$1M&0Ej)))
          '#f))))
   (g$free-id=?$7261$1M&0Ej
     g$free-id=?$10941$1M&0Ej
     (case-lambda
       ((g$i$7791$1M&0Ej g$j$7792$1M&0Ej)
        ((case-lambda
           ((g$t0$7793$1M&0Ej g$t1$7794$1M&0Ej)
            (if ((case-lambda
                   ((g$t$7795$1M&0Ej)
                    (if g$t$7795$1M&0Ej
                      g$t$7795$1M&0Ej
                      (begin '#f g$t1$7794$1M&0Ej))))
                 g$t0$7793$1M&0Ej)
              (eq? g$t0$7793$1M&0Ej g$t1$7794$1M&0Ej)
              (eq? (g$id->sym$7258$1M&0Ej g$i$7791$1M&0Ej)
                   (g$id->sym$7258$1M&0Ej g$j$7792$1M&0Ej)))))
         (g$id->real-label$7271$1M&0Ej g$i$7791$1M&0Ej)
         (g$id->real-label$7271$1M&0Ej g$j$7792$1M&0Ej)))))
   (g$valid-bound-ids?$7262$1M&0Ej
     g$valid-bound-ids?$10942$1M&0Ej
     (case-lambda
       ((g$id*$7796$1M&0Ej)
        (if (g$for-all$4995$1M&0Ej g$id?$7257$1M&0Ej g$id*$7796$1M&0Ej)
          (begin '#f (g$distinct-bound-ids?$7263$1M&0Ej g$id*$7796$1M&0Ej))
          '#f))))
   (g$distinct-bound-ids?$7263$1M&0Ej
     g$distinct-bound-ids?$10943$1M&0Ej
     (case-lambda
       ((g$id*$7797$1M&0Ej)
        ((case-lambda
           ((g$t$7798$1M&0Ej)
            (if g$t$7798$1M&0Ej
              g$t$7798$1M&0Ej
              (begin
                '#f
                (if (not (g$bound-id-member?$7264$1M&0Ej
                           (car g$id*$7797$1M&0Ej)
                           (cdr g$id*$7797$1M&0Ej)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7263$1M&0Ej (cdr g$id*$7797$1M&0Ej)))
                  '#f)))))
         (null? g$id*$7797$1M&0Ej)))))
   (g$bound-id-member?$7264$1M&0Ej
     g$bound-id-member?$10944$1M&0Ej
     (case-lambda
       ((g$id$7799$1M&0Ej g$id*$7800$1M&0Ej)
        (if (pair? g$id*$7800$1M&0Ej)
          (begin
            '#f
            ((case-lambda
               ((g$t$7801$1M&0Ej)
                (if g$t$7801$1M&0Ej
                  g$t$7801$1M&0Ej
                  (begin
                    '#f
                    (g$bound-id-member?$7264$1M&0Ej
                      g$id$7799$1M&0Ej
                      (cdr g$id*$7800$1M&0Ej))))))
             (g$bound-id=?$7260$1M&0Ej
               g$id$7799$1M&0Ej
               (car g$id*$7800$1M&0Ej))))
          '#f))))
   (g$self-evaluating?$7265$1M&0Ej
     g$self-evaluating?$10945$1M&0Ej
     (case-lambda
       ((g$x$7802$1M&0Ej)
        ((case-lambda
           ((g$t$7803$1M&0Ej)
            (if g$t$7803$1M&0Ej
              g$t$7803$1M&0Ej
              ((case-lambda
                 ((g$t$7804$1M&0Ej)
                  (if g$t$7804$1M&0Ej
                    g$t$7804$1M&0Ej
                    ((case-lambda
                       ((g$t$7805$1M&0Ej)
                        (if g$t$7805$1M&0Ej
                          g$t$7805$1M&0Ej
                          ((case-lambda
                             ((g$t$7806$1M&0Ej)
                              (if g$t$7806$1M&0Ej
                                g$t$7806$1M&0Ej
                                (begin '#f (bytevector? g$x$7802$1M&0Ej)))))
                           (boolean? g$x$7802$1M&0Ej)))))
                     (char? g$x$7802$1M&0Ej)))))
               (string? g$x$7802$1M&0Ej)))))
         (number? g$x$7802$1M&0Ej)))))
   (g$strip-annotations$7266$1M&0Ej
     g$strip-annotations$10946$1M&0Ej
     (case-lambda
       ((g$x$7807$1M&0Ej)
        (if (pair? g$x$7807$1M&0Ej)
          (cons
            (g$strip-annotations$7266$1M&0Ej (car g$x$7807$1M&0Ej))
            (g$strip-annotations$7266$1M&0Ej (cdr g$x$7807$1M&0Ej)))
          (if (vector? g$x$7807$1M&0Ej)
            (vector-map g$strip-annotations$7266$1M&0Ej g$x$7807$1M&0Ej)
            (if (annotation? g$x$7807$1M&0Ej)
              (annotation-stripped g$x$7807$1M&0Ej)
              g$x$7807$1M&0Ej))))))
   (g$strip$7267$1M&0Ej
     g$strip$10947$1M&0Ej
     (case-lambda
       ((g$x$7808$1M&0Ej g$m*$7809$1M&0Ej)
        (if (g$top-marked?$7195$1M&0Ej g$m*$7809$1M&0Ej)
          (if ((case-lambda
                 ((g$t$7810$1M&0Ej)
                  (if g$t$7810$1M&0Ej
                    g$t$7810$1M&0Ej
                    ((case-lambda
                       ((g$t$7811$1M&0Ej)
                        (if g$t$7811$1M&0Ej
                          g$t$7811$1M&0Ej
                          (begin
                            '#f
                            (if (vector? g$x$7808$1M&0Ej)
                              (if (> (vector-length g$x$7808$1M&0Ej) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7808$1M&0Ej '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7808$1M&0Ej)
                       (begin '#f (annotation? (car g$x$7808$1M&0Ej)))
                       '#f)))))
               (annotation? g$x$7808$1M&0Ej))
            (g$strip-annotations$7266$1M&0Ej g$x$7808$1M&0Ej)
            g$x$7808$1M&0Ej)
          ((letrec ((g$f$7812$1M&0Ej
                      (case-lambda
                        ((g$x$7813$1M&0Ej)
                         (if (g$stx?$7229$1M&0Ej g$x$7813$1M&0Ej)
                           (g$strip$7267$1M&0Ej
                             (g$stx-expr$7231$1M&0Ej g$x$7813$1M&0Ej)
                             (g$stx-mark*$7232$1M&0Ej g$x$7813$1M&0Ej))
                           (if (annotation? g$x$7813$1M&0Ej)
                             (annotation-stripped g$x$7813$1M&0Ej)
                             (if (pair? g$x$7813$1M&0Ej)
                               ((case-lambda
                                  ((g$a$7814$1M&0Ej g$d$7815$1M&0Ej)
                                   (if (if (eq? g$a$7814$1M&0Ej
                                                (car g$x$7813$1M&0Ej))
                                         (begin
                                           '#f
                                           (eq? g$d$7815$1M&0Ej
                                                (cdr g$x$7813$1M&0Ej)))
                                         '#f)
                                     g$x$7813$1M&0Ej
                                     (cons g$a$7814$1M&0Ej g$d$7815$1M&0Ej))))
                                (g$f$7812$1M&0Ej (car g$x$7813$1M&0Ej))
                                (g$f$7812$1M&0Ej (cdr g$x$7813$1M&0Ej)))
                               (if (vector? g$x$7813$1M&0Ej)
                                 ((case-lambda
                                    ((g$old$7816$1M&0Ej)
                                     ((case-lambda
                                        ((g$new$7817$1M&0Ej)
                                         (if (g$for-all$4995$1M&0Ej
                                               eq?
                                               g$old$7816$1M&0Ej
                                               g$new$7817$1M&0Ej)
                                           g$x$7813$1M&0Ej
                                           (list->vector g$new$7817$1M&0Ej))))
                                      (map g$f$7812$1M&0Ej g$old$7816$1M&0Ej))))
                                  (vector->list g$x$7813$1M&0Ej))
                                 g$x$7813$1M&0Ej))))))))
             g$f$7812$1M&0Ej)
           g$x$7808$1M&0Ej)))))
   (g$stx->datum$7268$1M&0Ej
     g$stx->datum$10948$1M&0Ej
     (case-lambda
       ((g$x$7818$1M&0Ej) (g$strip$7267$1M&0Ej g$x$7818$1M&0Ej '()))))
   (g$same-marks*?$7269$1M&0Ej
     g$same-marks*?$10949$1M&0Ej
     (case-lambda
       ((g$mark*$7819$1M&0Ej g$mark**$7820$1M&0Ej g$si$7821$1M&0Ej)
        (if (null? g$si$7821$1M&0Ej)
          '#f
          (if (g$same-marks?$7259$1M&0Ej
                g$mark*$7819$1M&0Ej
                (vector-ref g$mark**$7820$1M&0Ej (car g$si$7821$1M&0Ej)))
            (car g$si$7821$1M&0Ej)
            (g$same-marks*?$7269$1M&0Ej
              g$mark*$7819$1M&0Ej
              g$mark**$7820$1M&0Ej
              (cdr g$si$7821$1M&0Ej)))))))
   (g$id->label$7270$1M&0Ej
     g$id->label$10950$1M&0Ej
     (case-lambda
       ((g$id$7822$1M&0Ej)
        ((case-lambda
           ((g$t$7823$1M&0Ej)
            (if g$t$7823$1M&0Ej
              g$t$7823$1M&0Ej
              (begin
                '#f
                ((case-lambda
                   ((g$t$7824$1M&0Ej)
                    (if g$t$7824$1M&0Ej
                      ((case-lambda
                         ((g$env$7825$1M&0Ej)
                          ((case-lambda
                             ((g$rib$7826$1M&0Ej)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7200$1M&0Ej
                                     g$id$7822$1M&0Ej
                                     g$rib$7826$1M&0Ej)))
                                (case-lambda
                                  ((g$lab$7829$1M&0Ej g$loc_$7830$1M&0Ej)
                                   ((case-lambda
                                      ((g$loc_$7831$1M&0Ej g$lab$7832$1M&0Ej)
                                       (begin
                                         (g$extend-rib!$7220$1M&0Ej
                                           g$rib$7826$1M&0Ej
                                           g$id$7822$1M&0Ej
                                           g$lab$7832$1M&0Ej)
                                         g$lab$7832$1M&0Ej)))
                                    g$loc_$7830$1M&0Ej
                                    g$lab$7829$1M&0Ej))))))
                           (g$interaction-env-rib$7613$1M&0Ej
                             g$env$7825$1M&0Ej))))
                       g$t$7824$1M&0Ej)
                      '#f)))
                 (g$top-level-context$7653$1M&0Ej))))))
         (g$id->real-label$7271$1M&0Ej g$id$7822$1M&0Ej)))))
   (g$id->real-label$7271$1M&0Ej
     g$id->real-label$10951$1M&0Ej
     (case-lambda
       ((g$id$7833$1M&0Ej)
        ((case-lambda
           ((g$sym$7834$1M&0Ej)
            ((letrec ((g$search$7835$1M&0Ej
                        (case-lambda
                          ((g$subst*$7836$1M&0Ej g$mark*$7837$1M&0Ej)
                           (if (null? g$subst*$7836$1M&0Ej)
                             '#f
                             (if (eq? (car g$subst*$7836$1M&0Ej) 'shift)
                               (g$search$7835$1M&0Ej
                                 (cdr g$subst*$7836$1M&0Ej)
                                 (cdr g$mark*$7837$1M&0Ej))
                               ((case-lambda
                                  ((g$rib$7838$1M&0Ej)
                                   ((case-lambda
                                      ((g$t$7839$1M&0Ej)
                                       (if g$t$7839$1M&0Ej
                                         ((case-lambda
                                            ((g$ht$7840$1M&0Ej)
                                             ((case-lambda
                                                ((g$si$7841$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$i$7842$1M&0Ej)
                                                     (if g$i$7842$1M&0Ej
                                                       (vector-ref
                                                         (g$rib-label*$7209$1M&0Ej
                                                           g$rib$7838$1M&0Ej)
                                                         g$i$7842$1M&0Ej)
                                                       (g$search$7835$1M&0Ej
                                                         (cdr g$subst*$7836$1M&0Ej)
                                                         g$mark*$7837$1M&0Ej))))
                                                  (if g$si$7841$1M&0Ej
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7269$1M&0Ej
                                                        g$mark*$7837$1M&0Ej
                                                        (g$rib-mark**$7208$1M&0Ej
                                                          g$rib$7838$1M&0Ej)
                                                        (reverse
                                                          g$si$7841$1M&0Ej)))
                                                    '#f))))
                                              (g$hashtable-ref$5436$1M&0Ej
                                                g$ht$7840$1M&0Ej
                                                g$sym$7834$1M&0Ej
                                                '#f))))
                                          g$t$7839$1M&0Ej)
                                         ((case-lambda
                                            ((g$t$7843$1M&0Ej)
                                             (if g$t$7843$1M&0Ej
                                               g$t$7843$1M&0Ej
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$7844$1M&0Ej
                                                             (case-lambda
                                                               ((g$sym*$7845$1M&0Ej
                                                                  g$mark**$7846$1M&0Ej
                                                                  g$label*$7847$1M&0Ej)
                                                                (if (null?
                                                                      g$sym*$7845$1M&0Ej)
                                                                  (g$search$7835$1M&0Ej
                                                                    (cdr g$subst*$7836$1M&0Ej)
                                                                    g$mark*$7837$1M&0Ej)
                                                                  (if (if (eq? (car g$sym*$7845$1M&0Ej)
                                                                               g$sym$7834$1M&0Ej)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$7259$1M&0Ej
                                                                            (car g$mark**$7846$1M&0Ej)
                                                                            g$mark*$7837$1M&0Ej))
                                                                        '#f)
                                                                    (car g$label*$7847$1M&0Ej)
                                                                    (g$f$7844$1M&0Ej
                                                                      (cdr g$sym*$7845$1M&0Ej)
                                                                      (cdr g$mark**$7846$1M&0Ej)
                                                                      (cdr g$label*$7847$1M&0Ej))))))))
                                                    g$f$7844$1M&0Ej)
                                                  (g$rib-sym*$7207$1M&0Ej
                                                    g$rib$7838$1M&0Ej)
                                                  (g$rib-mark**$7208$1M&0Ej
                                                    g$rib$7838$1M&0Ej)
                                                  (g$rib-label*$7209$1M&0Ej
                                                    g$rib$7838$1M&0Ej))))))
                                          (g$find-label$7219$1M&0Ej
                                            g$rib$7838$1M&0Ej
                                            g$sym$7834$1M&0Ej
                                            g$mark*$7837$1M&0Ej)))))
                                    (g$rib-sealed/freq$7210$1M&0Ej
                                      g$rib$7838$1M&0Ej))))
                                (car g$subst*$7836$1M&0Ej))))))))
               g$search$7835$1M&0Ej)
             (g$stx-subst*$7233$1M&0Ej g$id$7833$1M&0Ej)
             (g$stx-mark*$7232$1M&0Ej g$id$7833$1M&0Ej))))
         (g$id->sym$7258$1M&0Ej g$id$7833$1M&0Ej)))))
   (g$label->binding$7272$1M&0Ej
     g$label->binding$10952$1M&0Ej
     (case-lambda
       ((g$x$7848$1M&0Ej g$r$7849$1M&0Ej)
        ((case-lambda
           ((g$t$7850$1M&0Ej)
            (if g$t$7850$1M&0Ej
              ((case-lambda
                 ((g$b$7851$1M&0Ej)
                  (if (if (pair? g$b$7851$1M&0Ej)
                        (begin '#f (eq? (car g$b$7851$1M&0Ej) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7498$1M&0Ej (cdr g$b$7851$1M&0Ej)))
                    (if (if (pair? g$b$7851$1M&0Ej)
                          (begin '#f (eq? (car g$b$7851$1M&0Ej) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7852$1M&0Ej g$loc$7853$1M&0Ej)
                          (cons '$rtd (symbol-value g$loc$7853$1M&0Ej))))
                       (g$cadr$5159$1M&0Ej g$b$7851$1M&0Ej)
                       (g$cddr$5161$1M&0Ej g$b$7851$1M&0Ej))
                      g$b$7851$1M&0Ej))))
               g$t$7850$1M&0Ej)
              ((case-lambda
                 ((g$t$7854$1M&0Ej)
                  (if g$t$7854$1M&0Ej
                    (cdr g$t$7854$1M&0Ej)
                    ((case-lambda
                       ((g$t$7855$1M&0Ej)
                        (if g$t$7855$1M&0Ej
                          ((case-lambda
                             ((g$env$7856$1M&0Ej)
                              ((case-lambda
                                 ((g$t$7857$1M&0Ej)
                                  (if g$t$7857$1M&0Ej
                                    ((case-lambda
                                       ((g$p$7858$1M&0Ej)
                                        (g$cons*$4997$1M&0Ej
                                          'lexical
                                          (cdr g$p$7858$1M&0Ej)
                                          '#f)))
                                     g$t$7857$1M&0Ej)
                                    '(displaced-lexical . #f))))
                               (g$assq$4985$1M&0Ej
                                 g$x$7848$1M&0Ej
                                 (g$interaction-env-locs$7615$1M&0Ej
                                   g$env$7856$1M&0Ej)))))
                           g$t$7855$1M&0Ej)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7653$1M&0Ej)))))
               (g$assq$4985$1M&0Ej g$x$7848$1M&0Ej g$r$7849$1M&0Ej)))))
         (g$imported-label->binding$7066$1M&0Ej g$x$7848$1M&0Ej)))))
   (g$make-binding$7273$1M&0Ej g$make-binding$10953$1M&0Ej cons)
   (g$binding-type$7274$1M&0Ej g$binding-type$10954$1M&0Ej car)
   (g$binding-value$7275$1M&0Ej g$binding-value$10955$1M&0Ej cdr)
   (g$raise-unbound-error$7276$1M&0Ej
     g$raise-unbound-error$10956$1M&0Ej
     (case-lambda
       ((g$id$7859$1M&0Ej)
        (g$syntax-violation*$7645$1M&0Ej
          '#f
          '"unbound identifier"
          g$id$7859$1M&0Ej
          (g$make-undefined-violation$5783$1M&0Ej)))))
   (g$syntax-type$7277$1M&0Ej
     g$syntax-type$10957$1M&0Ej
     (case-lambda
       ((g$e$7860$1M&0Ej g$r$7861$1M&0Ej)
        (if (g$id?$7257$1M&0Ej g$e$7860$1M&0Ej)
          ((case-lambda
             ((g$id$7862$1M&0Ej)
              ((case-lambda
                 ((g$label$7863$1M&0Ej)
                  ((case-lambda
                     ((g$b$7864$1M&0Ej)
                      ((case-lambda
                         ((g$type$7865$1M&0Ej)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7863$1M&0Ej)
                                  (g$raise-unbound-error$7276$1M&0Ej
                                    g$id$7862$1M&0Ej)
                                  (void))
                                ((case-lambda
                                   ((g$t$7866$1M&0Ej)
                                    (if (g$memv$4990$1M&0Ej
                                          g$t$7866$1M&0Ej
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             export
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7865$1M&0Ej
                                        (g$binding-value$7275$1M&0Ej
                                          g$b$7864$1M&0Ej)
                                        g$id$7862$1M&0Ej)
                                      (values 'other '#f '#f))))
                                 g$type$7865$1M&0Ej)))))))
                       (g$binding-type$7274$1M&0Ej g$b$7864$1M&0Ej))))
                   (g$label->binding$7272$1M&0Ej
                     g$label$7863$1M&0Ej
                     g$r$7861$1M&0Ej))))
               (g$id->label$7270$1M&0Ej g$id$7862$1M&0Ej))))
           g$e$7860$1M&0Ej)
          (if (g$syntax-pair?$7250$1M&0Ej g$e$7860$1M&0Ej)
            ((case-lambda
               ((g$id$7867$1M&0Ej)
                (if (g$id?$7257$1M&0Ej g$id$7867$1M&0Ej)
                  ((case-lambda
                     ((g$label$7868$1M&0Ej)
                      ((case-lambda
                         ((g$b$7869$1M&0Ej)
                          ((case-lambda
                             ((g$type$7870$1M&0Ej)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7868$1M&0Ej)
                                      (g$raise-unbound-error$7276$1M&0Ej
                                        g$id$7867$1M&0Ej)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7871$1M&0Ej)
                                        (if (g$memv$4990$1M&0Ej
                                              g$t$7871$1M&0Ej
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 export
                                                 $core-rtd))
                                          (values
                                            g$type$7870$1M&0Ej
                                            (g$binding-value$7275$1M&0Ej
                                              g$b$7869$1M&0Ej)
                                            g$id$7867$1M&0Ej)
                                          (values 'call '#f '#f))))
                                     g$type$7870$1M&0Ej)))))))
                           (g$binding-type$7274$1M&0Ej g$b$7869$1M&0Ej))))
                       (g$label->binding$7272$1M&0Ej
                         g$label$7868$1M&0Ej
                         g$r$7861$1M&0Ej))))
                   (g$id->label$7270$1M&0Ej g$id$7867$1M&0Ej))
                  (values 'call '#f '#f))))
             (g$syntax-car$7254$1M&0Ej g$e$7860$1M&0Ej))
            ((case-lambda
               ((g$d$7872$1M&0Ej)
                (if (g$self-evaluating?$7265$1M&0Ej g$d$7872$1M&0Ej)
                  (values 'constant g$d$7872$1M&0Ej '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7268$1M&0Ej g$e$7860$1M&0Ej)))))))
   (g$sanitize-binding$7285$1M&0Ej
     g$sanitize-binding$10958$1M&0Ej
     (case-lambda
       ((g$x$7873$1M&0Ej g$src$7874$1M&0Ej)
        (if (procedure? g$x$7873$1M&0Ej)
          (g$cons*$4997$1M&0Ej 'local-macro g$x$7873$1M&0Ej g$src$7874$1M&0Ej)
          (if (if (pair? g$x$7873$1M&0Ej)
                (if (eq? (car g$x$7873$1M&0Ej) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7873$1M&0Ej)))
                  '#f)
                '#f)
            (g$cons*$4997$1M&0Ej
              'local-macro!
              (cdr g$x$7873$1M&0Ej)
              g$src$7874$1M&0Ej)
            (if (if (pair? g$x$7873$1M&0Ej)
                  (begin '#f (eq? (car g$x$7873$1M&0Ej) '$rtd))
                  '#f)
              g$x$7873$1M&0Ej
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7873$1M&0Ej)))))))
   (g$make-variable-transformer$7286$1M&0Ej
     g$make-variable-transformer$10959$1M&0Ej
     (case-lambda
       ((g$x$7875$1M&0Ej)
        (if (procedure? g$x$7875$1M&0Ej)
          (cons 'macro! g$x$7875$1M&0Ej)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7875$1M&0Ej)))))
   (g$variable-transformer?$7287$1M&0Ej
     g$variable-transformer?$10960$1M&0Ej
     (case-lambda
       ((g$x$7876$1M&0Ej)
        (if (pair? g$x$7876$1M&0Ej)
          (if (eq? (car g$x$7876$1M&0Ej) 'macro!)
            (begin '#f (procedure? (cdr g$x$7876$1M&0Ej)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7288$1M&0Ej
     g$variable-transformer-procedure$10961$1M&0Ej
     (case-lambda
       ((g$x$7877$1M&0Ej)
        (if (g$variable-transformer?$7287$1M&0Ej g$x$7877$1M&0Ej)
          (cdr g$x$7877$1M&0Ej)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7877$1M&0Ej)))))
   (g$make-eval-transformer$7289$1M&0Ej
     g$make-eval-transformer$10962$1M&0Ej
     (case-lambda
       ((g$x$7878$1M&0Ej)
        (g$sanitize-binding$7285$1M&0Ej
          (eval-core (g$expanded->core$6766$1M&0Ej g$x$7878$1M&0Ej))
          g$x$7878$1M&0Ej))))
   (g$parse-define$7475$1M&0Ej
     g$parse-define$10963$1M&0Ej
     (case-lambda
       ((g$x$7879$1M&0Ej)
        ((case-lambda
           ((g$t$7880$1M&0Ej)
            ((case-lambda
               ((g$ls/false$7881$1M&0Ej)
                (if (if g$ls/false$7881$1M&0Ej
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7882$1M&0Ej
                               g$fmls$7883$1M&0Ej
                               g$b$7884$1M&0Ej
                               g$b*$7885$1M&0Ej)
                             (g$id?$7257$1M&0Ej g$id$7882$1M&0Ej)))
                          g$ls/false$7881$1M&0Ej))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7886$1M&0Ej
                         g$fmls$7887$1M&0Ej
                         g$b$7888$1M&0Ej
                         g$b*$7889$1M&0Ej)
                       (begin
                         (g$verify-formals$7555$1M&0Ej
                           g$fmls$7887$1M&0Ej
                           g$x$7879$1M&0Ej)
                         (values
                           g$id$7886$1M&0Ej
                           (cons
                             'defun
                             (cons
                               g$fmls$7887$1M&0Ej
                               (cons g$b$7888$1M&0Ej g$b*$7889$1M&0Ej)))))))
                    g$ls/false$7881$1M&0Ej)
                  ((case-lambda
                     ((g$t$7890$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$7891$1M&0Ej)
                          (if (if g$ls/false$7891$1M&0Ej
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7892$1M&0Ej g$val$7893$1M&0Ej)
                                       (g$id?$7257$1M&0Ej g$id$7892$1M&0Ej)))
                                    g$ls/false$7891$1M&0Ej))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7894$1M&0Ej g$val$7895$1M&0Ej)
                                 (values
                                   g$id$7894$1M&0Ej
                                   (cons 'expr g$val$7895$1M&0Ej))))
                              g$ls/false$7891$1M&0Ej)
                            ((case-lambda
                               ((g$t$7896$1M&0Ej)
                                ((case-lambda
                                   ((g$ls/false$7897$1M&0Ej)
                                    (if (if g$ls/false$7897$1M&0Ej
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7898$1M&0Ej)
                                                 (g$id?$7257$1M&0Ej
                                                   g$id$7898$1M&0Ej)))
                                              g$ls/false$7897$1M&0Ej))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7899$1M&0Ej)
                                           (values
                                             g$id$7899$1M&0Ej
                                             (cons
                                               'expr
                                               (g$bless$7498$1M&0Ej '(void))))))
                                        g$ls/false$7897$1M&0Ej)
                                      (g$syntax-violation$7646$1M&0Ej
                                        '#f
                                        '"invalid syntax"
                                        g$t$7896$1M&0Ej))))
                                 (g$syntax-dispatch$7535$1M&0Ej
                                   g$t$7896$1M&0Ej
                                   '(_ any)))))
                             g$t$7890$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$7890$1M&0Ej
                         '(_ any any)))))
                   g$t$7880$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$7880$1M&0Ej
               '(_ (any . any) any . each-any)))))
         g$x$7879$1M&0Ej))))
   (g$parse-define-syntax$7476$1M&0Ej
     g$parse-define-syntax$10964$1M&0Ej
     (case-lambda
       ((g$x$7900$1M&0Ej)
        ((case-lambda
           ((g$t$7901$1M&0Ej)
            ((case-lambda
               ((g$ls/false$7902$1M&0Ej)
                (if (if g$ls/false$7902$1M&0Ej
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7903$1M&0Ej g$val$7904$1M&0Ej)
                             (g$id?$7257$1M&0Ej g$id$7903$1M&0Ej)))
                          g$ls/false$7902$1M&0Ej))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7905$1M&0Ej g$val$7906$1M&0Ej)
                       (values g$id$7905$1M&0Ej g$val$7906$1M&0Ej)))
                    g$ls/false$7902$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$7901$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$7901$1M&0Ej '(_ any any)))))
         g$x$7900$1M&0Ej))))
   (g$scheme-stx-hashtable$7477$1M&0Ej
     g$scheme-stx-hashtable$10965$1M&0Ej
     (g$make-eq-hashtable$5433$1M&0Ej))
   (g$scheme-stx$7478$1M&0Ej
     g$scheme-stx$10966$1M&0Ej
     (case-lambda
       ((g$sym$7907$1M&0Ej)
        ((case-lambda
           ((g$t$7908$1M&0Ej)
            (if g$t$7908$1M&0Ej
              g$t$7908$1M&0Ej
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7909$1M&0Ej)
                    ((case-lambda
                       ((g$stx$7910$1M&0Ej)
                        ((case-lambda
                           ((g$stx$7911$1M&0Ej)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5437$1M&0Ej
                                    g$scheme-stx-hashtable$7477$1M&0Ej
                                    g$sym$7907$1M&0Ej
                                    g$stx$7911$1M&0Ej)
                                  g$stx$7911$1M&0Ej))))))
                         ((case-lambda
                            ((g$t$7912$1M&0Ej)
                             (if g$t$7912$1M&0Ej
                               ((case-lambda
                                  ((g$x$7913$1M&0Ej)
                                   ((case-lambda
                                      ((g$name$7914$1M&0Ej g$label$7915$1M&0Ej)
                                       (g$add-subst$7247$1M&0Ej
                                         (g$make-rib$7206$1M&0Ej
                                           (list g$name$7914$1M&0Ej)
                                           (list g$top-mark*$7194$1M&0Ej)
                                           (list g$label$7915$1M&0Ej)
                                           '#f
                                           '#f)
                                         g$stx$7910$1M&0Ej)))
                                    (car g$x$7913$1M&0Ej)
                                    (cdr g$x$7913$1M&0Ej))))
                                g$t$7912$1M&0Ej)
                               g$stx$7910$1M&0Ej)))
                          (g$assq$4985$1M&0Ej
                            g$sym$7907$1M&0Ej
                            g$subst$7909$1M&0Ej)))))
                     (g$make-stx$7230$1M&0Ej
                       g$sym$7907$1M&0Ej
                       g$top-mark*$7194$1M&0Ej
                       '()
                       '()))))
                 (g$library-subst$7024$1M&0Ej
                   (g$find-library-by-name$7060$1M&0Ej
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5436$1M&0Ej
           g$scheme-stx-hashtable$7477$1M&0Ej
           g$sym$7907$1M&0Ej
           '#f)))))
   (g$lexical-var$7479$1M&0Ej g$lexical-var$10967$1M&0Ej car)
   (g$lexical-mutable?$7480$1M&0Ej g$lexical-mutable?$10968$1M&0Ej cdr)
   (g$set-lexical-mutable!$7481$1M&0Ej
     g$set-lexical-mutable!$10969$1M&0Ej
     set-cdr!)
   (g$add-lexical$7482$1M&0Ej
     g$add-lexical$10970$1M&0Ej
     (case-lambda
       ((g$lab$7916$1M&0Ej g$lex$7917$1M&0Ej g$r$7918$1M&0Ej)
        (cons
          (g$cons*$4997$1M&0Ej g$lab$7916$1M&0Ej 'lexical g$lex$7917$1M&0Ej '#f)
          g$r$7918$1M&0Ej))))
   (g$add-lexicals$7483$1M&0Ej
     g$add-lexicals$10971$1M&0Ej
     (case-lambda
       ((g$lab*$7919$1M&0Ej g$lex*$7920$1M&0Ej g$r$7921$1M&0Ej)
        (if (null? g$lab*$7919$1M&0Ej)
          g$r$7921$1M&0Ej
          (g$add-lexicals$7483$1M&0Ej
            (cdr g$lab*$7919$1M&0Ej)
            (cdr g$lex*$7920$1M&0Ej)
            (g$add-lexical$7482$1M&0Ej
              (car g$lab*$7919$1M&0Ej)
              (car g$lex*$7920$1M&0Ej)
              g$r$7921$1M&0Ej))))))
   (g$letrec-helper$7484$1M&0Ej
     g$letrec-helper$10972$1M&0Ej
     (case-lambda
       ((g$e$7922$1M&0Ej g$r$7923$1M&0Ej g$mr$7924$1M&0Ej g$build$7925$1M&0Ej)
        ((case-lambda
           ((g$t$7926$1M&0Ej)
            ((case-lambda
               ((g$ls/false$7927$1M&0Ej)
                (if g$ls/false$7927$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$lhs*$7928$1M&0Ej
                         g$rhs*$7929$1M&0Ej
                         g$b$7930$1M&0Ej
                         g$b*$7931$1M&0Ej)
                       (if (not (g$valid-bound-ids?$7262$1M&0Ej
                                  g$lhs*$7928$1M&0Ej))
                         (g$invalid-fmls-error$7500$1M&0Ej
                           g$e$7922$1M&0Ej
                           g$lhs*$7928$1M&0Ej)
                         ((case-lambda
                            ((g$lex*$7932$1M&0Ej g$lab*$7933$1M&0Ej)
                             ((case-lambda
                                ((g$rib$7934$1M&0Ej g$r$7935$1M&0Ej)
                                 ((case-lambda
                                    ((g$body$7936$1M&0Ej g$rhs*$7937$1M&0Ej)
                                     (g$build$7925$1M&0Ej
                                       '#f
                                       g$lex*$7932$1M&0Ej
                                       g$rhs*$7937$1M&0Ej
                                       g$body$7936$1M&0Ej)))
                                  (g$chi-internal$7564$1M&0Ej
                                    (g$add-subst$7247$1M&0Ej
                                      g$rib$7934$1M&0Ej
                                      (cons g$b$7930$1M&0Ej g$b*$7931$1M&0Ej))
                                    g$r$7935$1M&0Ej
                                    g$mr$7924$1M&0Ej)
                                  (g$chi-expr*$7551$1M&0Ej
                                    (map (case-lambda
                                           ((g$x$7938$1M&0Ej)
                                            (g$add-subst$7247$1M&0Ej
                                              g$rib$7934$1M&0Ej
                                              g$x$7938$1M&0Ej)))
                                         g$rhs*$7929$1M&0Ej)
                                    g$r$7935$1M&0Ej
                                    g$mr$7924$1M&0Ej))))
                              (g$make-full-rib$7225$1M&0Ej
                                g$lhs*$7928$1M&0Ej
                                g$lab*$7933$1M&0Ej)
                              (g$add-lexicals$7483$1M&0Ej
                                g$lab*$7933$1M&0Ej
                                g$lex*$7932$1M&0Ej
                                g$r$7923$1M&0Ej))))
                          (map g$gen-lexical$7196$1M&0Ej g$lhs*$7928$1M&0Ej)
                          (map g$gen-label$7198$1M&0Ej g$lhs*$7928$1M&0Ej)))))
                    g$ls/false$7927$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$7926$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$7926$1M&0Ej
               '(_ #(each (any any)) any . each-any)))))
         g$e$7922$1M&0Ej))))
   (g$letrec-transformer$7485$1M&0Ej
     g$letrec-transformer$10973$1M&0Ej
     (case-lambda
       ((g$e$7939$1M&0Ej g$r$7940$1M&0Ej g$mr$7941$1M&0Ej)
        (g$letrec-helper$7484$1M&0Ej
          g$e$7939$1M&0Ej
          g$r$7940$1M&0Ej
          g$mr$7941$1M&0Ej
          g$build-letrec$7188$1M&0Ej))))
   (g$letrec*-transformer$7486$1M&0Ej
     g$letrec*-transformer$10974$1M&0Ej
     (case-lambda
       ((g$e$7942$1M&0Ej g$r$7943$1M&0Ej g$mr$7944$1M&0Ej)
        (g$letrec-helper$7484$1M&0Ej
          g$e$7942$1M&0Ej
          g$r$7943$1M&0Ej
          g$mr$7944$1M&0Ej
          g$build-letrec*$7189$1M&0Ej))))
   (g$fluid-let-syntax-transformer$7487$1M&0Ej
     g$fluid-let-syntax-transformer$10975$1M&0Ej
     (case-lambda
       ((g$e$7945$1M&0Ej g$r$7946$1M&0Ej g$mr$7947$1M&0Ej)
        (letrec* ((g$lookup$7948$1M&0Ej
                    (case-lambda
                      ((g$x$7958$1M&0Ej)
                       ((case-lambda
                          ((g$t$7959$1M&0Ej)
                           (if g$t$7959$1M&0Ej
                             g$t$7959$1M&0Ej
                             (begin
                               '#f
                               (g$syntax-violation$7646$1M&0Ej
                                 '#f
                                 '"unbound identifier"
                                 g$e$7945$1M&0Ej
                                 g$x$7958$1M&0Ej)))))
                        (g$id->label$7270$1M&0Ej g$x$7958$1M&0Ej))))))
          ((case-lambda
             ((g$t$7949$1M&0Ej)
              ((case-lambda
                 ((g$ls/false$7950$1M&0Ej)
                  (if g$ls/false$7950$1M&0Ej
                    (apply
                      (case-lambda
                        ((g$lhs*$7951$1M&0Ej
                           g$rhs*$7952$1M&0Ej
                           g$b$7953$1M&0Ej
                           g$b*$7954$1M&0Ej)
                         (if (not (g$valid-bound-ids?$7262$1M&0Ej
                                    g$lhs*$7951$1M&0Ej))
                           (g$invalid-fmls-error$7500$1M&0Ej
                             g$e$7945$1M&0Ej
                             g$lhs*$7951$1M&0Ej)
                           ((case-lambda
                              ((g$lab*$7955$1M&0Ej g$rhs*$7956$1M&0Ej)
                               (g$chi-internal$7564$1M&0Ej
                                 (cons g$b$7953$1M&0Ej g$b*$7954$1M&0Ej)
                                 (append
                                   (map cons
                                        g$lab*$7955$1M&0Ej
                                        g$rhs*$7956$1M&0Ej)
                                   g$r$7946$1M&0Ej)
                                 (append
                                   (map cons
                                        g$lab*$7955$1M&0Ej
                                        g$rhs*$7956$1M&0Ej)
                                   g$mr$7947$1M&0Ej))))
                            (map g$lookup$7948$1M&0Ej g$lhs*$7951$1M&0Ej)
                            (map (case-lambda
                                   ((g$x$7957$1M&0Ej)
                                    (g$make-eval-transformer$7289$1M&0Ej
                                      (g$expand-transformer$7580$1M&0Ej
                                        g$x$7957$1M&0Ej
                                        g$mr$7947$1M&0Ej))))
                                 g$rhs*$7952$1M&0Ej)))))
                      g$ls/false$7950$1M&0Ej)
                    (g$syntax-violation$7646$1M&0Ej
                      '#f
                      '"invalid syntax"
                      g$t$7949$1M&0Ej))))
               (g$syntax-dispatch$7535$1M&0Ej
                 g$t$7949$1M&0Ej
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7945$1M&0Ej)))))
   (g$type-descriptor-transformer$7488$1M&0Ej
     g$type-descriptor-transformer$10976$1M&0Ej
     (case-lambda
       ((g$e$7960$1M&0Ej g$r$7961$1M&0Ej g$mr$7962$1M&0Ej)
        ((case-lambda
           ((g$t$7963$1M&0Ej)
            ((case-lambda
               ((g$ls/false$7964$1M&0Ej)
                (if (if g$ls/false$7964$1M&0Ej
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7965$1M&0Ej)
                             (g$id?$7257$1M&0Ej g$id$7965$1M&0Ej)))
                          g$ls/false$7964$1M&0Ej))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7966$1M&0Ej)
                       ((case-lambda
                          ((g$lab$7967$1M&0Ej)
                           ((case-lambda
                              ((g$b$7968$1M&0Ej)
                               ((case-lambda
                                  ((g$type$7969$1M&0Ej)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7967$1M&0Ej)
                                           (g$raise-unbound-error$7276$1M&0Ej
                                             g$id$7966$1M&0Ej)
                                           (void))
                                         (if (not (if (eq? g$type$7969$1M&0Ej
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7275$1M&0Ej
                                                               g$b$7968$1M&0Ej))))
                                                    '#f))
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"not a record type"
                                             g$e$7960$1M&0Ej)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7275$1M&0Ej
                                             g$b$7968$1M&0Ej))))))))
                                (g$binding-type$7274$1M&0Ej g$b$7968$1M&0Ej))))
                            (g$label->binding$7272$1M&0Ej
                              g$lab$7967$1M&0Ej
                              g$r$7961$1M&0Ej))))
                        (g$id->label$7270$1M&0Ej g$id$7966$1M&0Ej))))
                    g$ls/false$7964$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$7963$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$7963$1M&0Ej '(_ any)))))
         g$e$7960$1M&0Ej))))
   (g$record-type-descriptor-transformer$7489$1M&0Ej
     g$record-type-descriptor-transformer$10977$1M&0Ej
     (case-lambda
       ((g$e$7970$1M&0Ej g$r$7971$1M&0Ej g$mr$7972$1M&0Ej)
        ((case-lambda
           ((g$t$7973$1M&0Ej)
            ((case-lambda
               ((g$ls/false$7974$1M&0Ej)
                (if (if g$ls/false$7974$1M&0Ej
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7975$1M&0Ej)
                             (g$id?$7257$1M&0Ej g$id$7975$1M&0Ej)))
                          g$ls/false$7974$1M&0Ej))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7976$1M&0Ej)
                       ((case-lambda
                          ((g$lab$7977$1M&0Ej)
                           ((case-lambda
                              ((g$b$7978$1M&0Ej)
                               ((case-lambda
                                  ((g$type$7979$1M&0Ej)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7977$1M&0Ej)
                                           (g$raise-unbound-error$7276$1M&0Ej
                                             g$id$7976$1M&0Ej)
                                           (void))
                                         (if (not (if (eq? g$type$7979$1M&0Ej
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7275$1M&0Ej
                                                          g$b$7978$1M&0Ej)))
                                                    '#f))
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"not a record type"
                                             g$e$7970$1M&0Ej)
                                           (void))
                                         (g$chi-expr$7553$1M&0Ej
                                           (car (g$binding-value$7275$1M&0Ej
                                                  g$b$7978$1M&0Ej))
                                           g$r$7971$1M&0Ej
                                           g$mr$7972$1M&0Ej)))))))
                                (g$binding-type$7274$1M&0Ej g$b$7978$1M&0Ej))))
                            (g$label->binding$7272$1M&0Ej
                              g$lab$7977$1M&0Ej
                              g$r$7971$1M&0Ej))))
                        (g$id->label$7270$1M&0Ej g$id$7976$1M&0Ej))))
                    g$ls/false$7974$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$7973$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$7973$1M&0Ej '(_ any)))))
         g$e$7970$1M&0Ej))))
   (g$record-constructor-descriptor-transformer$7490$1M&0Ej
     g$record-constructor-descriptor-transformer$10978$1M&0Ej
     (case-lambda
       ((g$e$7980$1M&0Ej g$r$7981$1M&0Ej g$mr$7982$1M&0Ej)
        ((case-lambda
           ((g$t$7983$1M&0Ej)
            ((case-lambda
               ((g$ls/false$7984$1M&0Ej)
                (if (if g$ls/false$7984$1M&0Ej
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7985$1M&0Ej)
                             (g$id?$7257$1M&0Ej g$id$7985$1M&0Ej)))
                          g$ls/false$7984$1M&0Ej))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7986$1M&0Ej)
                       ((case-lambda
                          ((g$lab$7987$1M&0Ej)
                           ((case-lambda
                              ((g$b$7988$1M&0Ej)
                               ((case-lambda
                                  ((g$type$7989$1M&0Ej)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7987$1M&0Ej)
                                           (g$raise-unbound-error$7276$1M&0Ej
                                             g$id$7986$1M&0Ej)
                                           (void))
                                         (if (not (if (eq? g$type$7989$1M&0Ej
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7275$1M&0Ej
                                                          g$b$7988$1M&0Ej)))
                                                    '#f))
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid type"
                                             g$e$7980$1M&0Ej)
                                           (void))
                                         (g$chi-expr$7553$1M&0Ej
                                           (g$cadr$5159$1M&0Ej
                                             (g$binding-value$7275$1M&0Ej
                                               g$b$7988$1M&0Ej))
                                           g$r$7981$1M&0Ej
                                           g$mr$7982$1M&0Ej)))))))
                                (g$binding-type$7274$1M&0Ej g$b$7988$1M&0Ej))))
                            (g$label->binding$7272$1M&0Ej
                              g$lab$7987$1M&0Ej
                              g$r$7981$1M&0Ej))))
                        (g$id->label$7270$1M&0Ej g$id$7986$1M&0Ej))))
                    g$ls/false$7984$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$7983$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$7983$1M&0Ej '(_ any)))))
         g$e$7980$1M&0Ej))))
   (g$when-macro$7491$1M&0Ej
     g$when-macro$10979$1M&0Ej
     (case-lambda
       ((g$e$7990$1M&0Ej)
        ((case-lambda
           ((g$t$7991$1M&0Ej)
            ((case-lambda
               ((g$ls/false$7992$1M&0Ej)
                (if g$ls/false$7992$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$test$7993$1M&0Ej g$e$7994$1M&0Ej g$e*$7995$1M&0Ej)
                       (g$bless$7498$1M&0Ej
                         (list
                           'if
                           g$test$7993$1M&0Ej
                           (cons
                             'begin
                             (cons g$e$7994$1M&0Ej g$e*$7995$1M&0Ej))))))
                    g$ls/false$7992$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$7991$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$7991$1M&0Ej
               '(_ any any . each-any)))))
         g$e$7990$1M&0Ej))))
   (g$unless-macro$7492$1M&0Ej
     g$unless-macro$10980$1M&0Ej
     (case-lambda
       ((g$e$7996$1M&0Ej)
        ((case-lambda
           ((g$t$7997$1M&0Ej)
            ((case-lambda
               ((g$ls/false$7998$1M&0Ej)
                (if g$ls/false$7998$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$test$7999$1M&0Ej g$e$8000$1M&0Ej g$e*$8001$1M&0Ej)
                       (g$bless$7498$1M&0Ej
                         (list
                           'if
                           (list 'not g$test$7999$1M&0Ej)
                           (cons
                             'begin
                             (cons g$e$8000$1M&0Ej g$e*$8001$1M&0Ej))))))
                    g$ls/false$7998$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$7997$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$7997$1M&0Ej
               '(_ any any . each-any)))))
         g$e$7996$1M&0Ej))))
   (g$if-transformer$7493$1M&0Ej
     g$if-transformer$10981$1M&0Ej
     (case-lambda
       ((g$e$8002$1M&0Ej g$r$8003$1M&0Ej g$mr$8004$1M&0Ej)
        ((case-lambda
           ((g$t$8005$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8006$1M&0Ej)
                (if g$ls/false$8006$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$e0$8007$1M&0Ej g$e1$8008$1M&0Ej g$e2$8009$1M&0Ej)
                       (list
                         'if
                         (g$chi-expr$7553$1M&0Ej
                           g$e0$8007$1M&0Ej
                           g$r$8003$1M&0Ej
                           g$mr$8004$1M&0Ej)
                         (g$chi-expr$7553$1M&0Ej
                           g$e1$8008$1M&0Ej
                           g$r$8003$1M&0Ej
                           g$mr$8004$1M&0Ej)
                         (g$chi-expr$7553$1M&0Ej
                           g$e2$8009$1M&0Ej
                           g$r$8003$1M&0Ej
                           g$mr$8004$1M&0Ej))))
                    g$ls/false$8006$1M&0Ej)
                  ((case-lambda
                     ((g$t$8010$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$8011$1M&0Ej)
                          (if g$ls/false$8011$1M&0Ej
                            (apply
                              (case-lambda
                                ((g$e0$8012$1M&0Ej g$e1$8013$1M&0Ej)
                                 (list
                                   'if
                                   (g$chi-expr$7553$1M&0Ej
                                     g$e0$8012$1M&0Ej
                                     g$r$8003$1M&0Ej
                                     g$mr$8004$1M&0Ej)
                                   (g$chi-expr$7553$1M&0Ej
                                     g$e1$8013$1M&0Ej
                                     g$r$8003$1M&0Ej
                                     g$mr$8004$1M&0Ej)
                                   (g$build-void$7187$1M&0Ej))))
                              g$ls/false$8011$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$8010$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$8010$1M&0Ej
                         '(_ any any)))))
                   g$t$8005$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8005$1M&0Ej '(_ any any any)))))
         g$e$8002$1M&0Ej))))
   (g$case-macro$7494$1M&0Ej
     g$case-macro$10982$1M&0Ej
     (case-lambda
       ((g$e$8014$1M&0Ej)
        (letrec* ((g$build-last$8015$1M&0Ej
                    (case-lambda
                      ((g$cls$8035$1M&0Ej)
                       ((case-lambda
                          ((g$t$8036$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$8037$1M&0Ej)
                               (if g$ls/false$8037$1M&0Ej
                                 (apply
                                   (case-lambda
                                     ((g$e$8038$1M&0Ej g$e*$8039$1M&0Ej)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$8038$1M&0Ej
                                          g$e*$8039$1M&0Ej))))
                                   g$ls/false$8037$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$8040$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$8041$1M&0Ej)
                                         (if g$ls/false$8041$1M&0Ej
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8016$1M&0Ej
                                                  g$cls$8035$1M&0Ej
                                                  '(if #f #f))))
                                             g$ls/false$8041$1M&0Ej)
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid syntax"
                                             g$t$8040$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$8040$1M&0Ej
                                        '_))))
                                  g$t$8036$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$8036$1M&0Ej
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8035$1M&0Ej))))
                  (g$build-one$8016$1M&0Ej
                    (case-lambda
                      ((g$cls$8028$1M&0Ej g$k$8029$1M&0Ej)
                       ((case-lambda
                          ((g$t$8030$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$8031$1M&0Ej)
                               (if g$ls/false$8031$1M&0Ej
                                 (apply
                                   (case-lambda
                                     ((g$d*$8032$1M&0Ej
                                        g$e$8033$1M&0Ej
                                        g$e*$8034$1M&0Ej)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8032$1M&0Ej))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$8033$1M&0Ej
                                            g$e*$8034$1M&0Ej))
                                        g$k$8029$1M&0Ej)))
                                   g$ls/false$8031$1M&0Ej)
                                 (g$syntax-violation$7646$1M&0Ej
                                   '#f
                                   '"invalid syntax"
                                   g$t$8030$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$8030$1M&0Ej
                              '(each-any any . each-any)))))
                        g$cls$8028$1M&0Ej)))))
          ((case-lambda
             ((g$t$8017$1M&0Ej)
              ((case-lambda
                 ((g$ls/false$8018$1M&0Ej)
                  (if g$ls/false$8018$1M&0Ej
                    (apply
                      (case-lambda
                        ((g$expr$8019$1M&0Ej)
                         (g$bless$7498$1M&0Ej
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8019$1M&0Ej))
                               '((if #f #f)))))))
                      g$ls/false$8018$1M&0Ej)
                    ((case-lambda
                       ((g$t$8020$1M&0Ej)
                        ((case-lambda
                           ((g$ls/false$8021$1M&0Ej)
                            (if g$ls/false$8021$1M&0Ej
                              (apply
                                (case-lambda
                                  ((g$expr$8022$1M&0Ej
                                     g$cls$8023$1M&0Ej
                                     g$cls*$8024$1M&0Ej)
                                   (g$bless$7498$1M&0Ej
                                     (list
                                       'let
                                       (list (list 't g$expr$8022$1M&0Ej))
                                       ((letrec ((g$f$8025$1M&0Ej
                                                   (case-lambda
                                                     ((g$cls$8026$1M&0Ej
                                                        g$cls*$8027$1M&0Ej)
                                                      (if (null?
                                                            g$cls*$8027$1M&0Ej)
                                                        (g$build-last$8015$1M&0Ej
                                                          g$cls$8026$1M&0Ej)
                                                        (g$build-one$8016$1M&0Ej
                                                          g$cls$8026$1M&0Ej
                                                          (g$f$8025$1M&0Ej
                                                            (car g$cls*$8027$1M&0Ej)
                                                            (cdr g$cls*$8027$1M&0Ej))))))))
                                          g$f$8025$1M&0Ej)
                                        g$cls$8023$1M&0Ej
                                        g$cls*$8024$1M&0Ej)))))
                                g$ls/false$8021$1M&0Ej)
                              (g$syntax-violation$7646$1M&0Ej
                                '#f
                                '"invalid syntax"
                                g$t$8020$1M&0Ej))))
                         (g$syntax-dispatch$7535$1M&0Ej
                           g$t$8020$1M&0Ej
                           '(_ any any . each-any)))))
                     g$t$8017$1M&0Ej))))
               (g$syntax-dispatch$7535$1M&0Ej g$t$8017$1M&0Ej '(_ any)))))
           g$e$8014$1M&0Ej)))))
   (g$quote-transformer$7495$1M&0Ej
     g$quote-transformer$10983$1M&0Ej
     (case-lambda
       ((g$e$8042$1M&0Ej g$r$8043$1M&0Ej g$mr$8044$1M&0Ej)
        ((case-lambda
           ((g$t$8045$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8046$1M&0Ej)
                (if g$ls/false$8046$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$datum$8047$1M&0Ej)
                       (list
                         'quote
                         (g$stx->datum$7268$1M&0Ej g$datum$8047$1M&0Ej))))
                    g$ls/false$8046$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8045$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8045$1M&0Ej '(_ any)))))
         g$e$8042$1M&0Ej))))
   (g$case-lambda-transformer$7496$1M&0Ej
     g$case-lambda-transformer$10984$1M&0Ej
     (case-lambda
       ((g$e$8048$1M&0Ej g$r$8049$1M&0Ej g$mr$8050$1M&0Ej)
        ((case-lambda
           ((g$t$8051$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8052$1M&0Ej)
                (if g$ls/false$8052$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$fmls*$8053$1M&0Ej g$b*$8054$1M&0Ej g$b**$8055$1M&0Ej)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7557$1M&0Ej
                              g$e$8048$1M&0Ej
                              g$fmls*$8053$1M&0Ej
                              (map cons g$b*$8054$1M&0Ej g$b**$8055$1M&0Ej)
                              g$r$8049$1M&0Ej
                              g$mr$8050$1M&0Ej)))
                         (case-lambda
                           ((g$fmls*$8058$1M&0Ej g$body*$8059$1M&0Ej)
                            ((case-lambda
                               ((g$body*$8060$1M&0Ej g$fmls*$8061$1M&0Ej)
                                (g$build-case-lambda$7184$1M&0Ej
                                  '#f
                                  g$fmls*$8061$1M&0Ej
                                  g$body*$8060$1M&0Ej)))
                             g$body*$8059$1M&0Ej
                             g$fmls*$8058$1M&0Ej))))))
                    g$ls/false$8052$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8051$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$8051$1M&0Ej
               '(_ . #(each (any any . each-any)))))))
         g$e$8048$1M&0Ej))))
   (g$lambda-transformer$7497$1M&0Ej
     g$lambda-transformer$10985$1M&0Ej
     (case-lambda
       ((g$e$8062$1M&0Ej g$r$8063$1M&0Ej g$mr$8064$1M&0Ej)
        ((case-lambda
           ((g$t$8065$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8066$1M&0Ej)
                (if g$ls/false$8066$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$fmls$8067$1M&0Ej g$b$8068$1M&0Ej g$b*$8069$1M&0Ej)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7556$1M&0Ej
                              g$e$8062$1M&0Ej
                              g$fmls$8067$1M&0Ej
                              (cons g$b$8068$1M&0Ej g$b*$8069$1M&0Ej)
                              g$r$8063$1M&0Ej
                              g$mr$8064$1M&0Ej)))
                         (case-lambda
                           ((g$fmls$8072$1M&0Ej g$body$8073$1M&0Ej)
                            ((case-lambda
                               ((g$body$8074$1M&0Ej g$fmls$8075$1M&0Ej)
                                (g$build-lambda$7183$1M&0Ej
                                  '#f
                                  g$fmls$8075$1M&0Ej
                                  g$body$8074$1M&0Ej)))
                             g$body$8073$1M&0Ej
                             g$fmls$8072$1M&0Ej))))))
                    g$ls/false$8066$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8065$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$8065$1M&0Ej
               '(_ any any . each-any)))))
         g$e$8062$1M&0Ej))))
   (g$bless$7498$1M&0Ej
     g$bless$10986$1M&0Ej
     (case-lambda
       ((g$x$8076$1M&0Ej)
        (g$mkstx$7245$1M&0Ej
          ((letrec ((g$f$8077$1M&0Ej
                      (case-lambda
                        ((g$x$8078$1M&0Ej)
                         (if (g$stx?$7229$1M&0Ej g$x$8078$1M&0Ej)
                           g$x$8078$1M&0Ej
                           (if (pair? g$x$8078$1M&0Ej)
                             (cons
                               (g$f$8077$1M&0Ej (car g$x$8078$1M&0Ej))
                               (g$f$8077$1M&0Ej (cdr g$x$8078$1M&0Ej)))
                             (if (symbol? g$x$8078$1M&0Ej)
                               (g$scheme-stx$7478$1M&0Ej g$x$8078$1M&0Ej)
                               (if (vector? g$x$8078$1M&0Ej)
                                 (vector-map g$f$8077$1M&0Ej g$x$8078$1M&0Ej)
                                 g$x$8078$1M&0Ej))))))))
             g$f$8077$1M&0Ej)
           g$x$8076$1M&0Ej)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7499$1M&0Ej
     g$with-syntax-macro$10987$1M&0Ej
     (case-lambda
       ((g$e$8079$1M&0Ej)
        ((case-lambda
           ((g$t$8080$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8081$1M&0Ej)
                (if g$ls/false$8081$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$pat*$8082$1M&0Ej
                         g$expr*$8083$1M&0Ej
                         g$b$8084$1M&0Ej
                         g$b*$8085$1M&0Ej)
                       ((case-lambda
                          ((g$idn*$8086$1M&0Ej)
                           (begin
                             (g$verify-formals$7555$1M&0Ej
                               (map car g$idn*$8086$1M&0Ej)
                               g$e$8079$1M&0Ej)
                             ((case-lambda
                                ((g$t*$8087$1M&0Ej)
                                 (g$bless$7498$1M&0Ej
                                   (list
                                     'let
                                     (map list
                                          g$t*$8087$1M&0Ej
                                          g$expr*$8083$1M&0Ej)
                                     ((letrec ((g$f$8088$1M&0Ej
                                                 (case-lambda
                                                   ((g$pat*$8089$1M&0Ej
                                                      g$t*$8090$1M&0Ej)
                                                    (if (null?
                                                          g$pat*$8089$1M&0Ej)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8084$1M&0Ej
                                                            g$b*$8085$1M&0Ej)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8090$1M&0Ej)
                                                        '()
                                                        (list
                                                          (car g$pat*$8089$1M&0Ej)
                                                          (g$f$8088$1M&0Ej
                                                            (cdr g$pat*$8089$1M&0Ej)
                                                            (cdr g$t*$8090$1M&0Ej)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8089$1M&0Ej))
                                                            (car g$t*$8090$1M&0Ej)))))))))
                                        g$f$8088$1M&0Ej)
                                      g$pat*$8082$1M&0Ej
                                      g$t*$8087$1M&0Ej)))))
                              (g$generate-temporaries$7636$1M&0Ej
                                g$expr*$8083$1M&0Ej)))))
                        ((letrec ((g$f$8091$1M&0Ej
                                    (case-lambda
                                      ((g$pat*$8092$1M&0Ej)
                                       (if (null? g$pat*$8092$1M&0Ej)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7534$1M&0Ej
                                                (car g$pat*$8092$1M&0Ej)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8095$1M&0Ej
                                                g$idn*$8096$1M&0Ej)
                                              ((case-lambda
                                                 ((g$idn*$8097$1M&0Ej
                                                    g$pat$8098$1M&0Ej)
                                                  (append
                                                    g$idn*$8097$1M&0Ej
                                                    (g$f$8091$1M&0Ej
                                                      (cdr g$pat*$8092$1M&0Ej)))))
                                               g$idn*$8096$1M&0Ej
                                               g$pat$8095$1M&0Ej)))))))))
                           g$f$8091$1M&0Ej)
                         g$pat*$8082$1M&0Ej))))
                    g$ls/false$8081$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8080$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$8080$1M&0Ej
               '(_ #(each (any any)) any . each-any)))))
         g$e$8079$1M&0Ej))))
   (g$invalid-fmls-error$7500$1M&0Ej
     g$invalid-fmls-error$10988$1M&0Ej
     (case-lambda
       ((g$stx$8099$1M&0Ej g$fmls$8100$1M&0Ej)
        ((case-lambda
           ((g$t$8101$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8102$1M&0Ej)
                (if g$ls/false$8102$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$id*$8103$1M&0Ej g$last$8104$1M&0Ej)
                       ((letrec ((g$f$8105$1M&0Ej
                                   (case-lambda
                                     ((g$id*$8106$1M&0Ej)
                                      (if (null? g$id*$8106$1M&0Ej)
                                        (values)
                                        (if (not (g$id?$7257$1M&0Ej
                                                   (car g$id*$8106$1M&0Ej)))
                                          (g$syntax-violation$7646$1M&0Ej
                                            '#f
                                            '"not an identifier"
                                            g$stx$8099$1M&0Ej
                                            (car g$id*$8106$1M&0Ej))
                                          (begin
                                            (g$f$8105$1M&0Ej
                                              (cdr g$id*$8106$1M&0Ej))
                                            (if (g$bound-id-member?$7264$1M&0Ej
                                                  (car g$id*$8106$1M&0Ej)
                                                  (cdr g$id*$8106$1M&0Ej))
                                              (g$syntax-violation$7646$1M&0Ej
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8099$1M&0Ej
                                                (car g$id*$8106$1M&0Ej))
                                              (void)))))))))
                          g$f$8105$1M&0Ej)
                        (if (g$id?$7257$1M&0Ej g$last$8104$1M&0Ej)
                          (cons g$last$8104$1M&0Ej g$id*$8103$1M&0Ej)
                          (if (g$syntax-null?$7252$1M&0Ej g$last$8104$1M&0Ej)
                            g$id*$8103$1M&0Ej
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"not an identifier"
                              g$stx$8099$1M&0Ej
                              g$last$8104$1M&0Ej))))))
                    g$ls/false$8102$1M&0Ej)
                  ((case-lambda
                     ((g$t$8107$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$8108$1M&0Ej)
                          (if g$ls/false$8108$1M&0Ej
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7646$1M&0Ej
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8099$1M&0Ej
                                   g$fmls$8100$1M&0Ej)))
                              g$ls/false$8108$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$8107$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej g$t$8107$1M&0Ej '_))))
                   g$t$8101$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$8101$1M&0Ej
               '#(each+ any () any)))))
         g$fmls$8100$1M&0Ej))))
   (g$let-macro$7501$1M&0Ej
     g$let-macro$10989$1M&0Ej
     (case-lambda
       ((g$stx$8109$1M&0Ej)
        ((case-lambda
           ((g$t$8110$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8111$1M&0Ej)
                (if g$ls/false$8111$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$lhs*$8112$1M&0Ej
                         g$rhs*$8113$1M&0Ej
                         g$b$8114$1M&0Ej
                         g$b*$8115$1M&0Ej)
                       (if (g$valid-bound-ids?$7262$1M&0Ej g$lhs*$8112$1M&0Ej)
                         (g$bless$7498$1M&0Ej
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8112$1M&0Ej
                                 (cons g$b$8114$1M&0Ej g$b*$8115$1M&0Ej)))
                             g$rhs*$8113$1M&0Ej))
                         (g$invalid-fmls-error$7500$1M&0Ej
                           g$stx$8109$1M&0Ej
                           g$lhs*$8112$1M&0Ej))))
                    g$ls/false$8111$1M&0Ej)
                  ((case-lambda
                     ((g$t$8116$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$8117$1M&0Ej)
                          (if (if g$ls/false$8117$1M&0Ej
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8118$1M&0Ej
                                         g$lhs*$8119$1M&0Ej
                                         g$rhs*$8120$1M&0Ej
                                         g$b$8121$1M&0Ej
                                         g$b*$8122$1M&0Ej)
                                       (g$id?$7257$1M&0Ej g$f$8118$1M&0Ej)))
                                    g$ls/false$8117$1M&0Ej))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8123$1M&0Ej
                                   g$lhs*$8124$1M&0Ej
                                   g$rhs*$8125$1M&0Ej
                                   g$b$8126$1M&0Ej
                                   g$b*$8127$1M&0Ej)
                                 (if (g$valid-bound-ids?$7262$1M&0Ej
                                       g$lhs*$8124$1M&0Ej)
                                   (g$bless$7498$1M&0Ej
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8123$1M&0Ej
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8124$1M&0Ej
                                                 (cons
                                                   g$b$8126$1M&0Ej
                                                   g$b*$8127$1M&0Ej)))))
                                         g$f$8123$1M&0Ej)
                                       g$rhs*$8125$1M&0Ej))
                                   (g$invalid-fmls-error$7500$1M&0Ej
                                     g$stx$8109$1M&0Ej
                                     g$lhs*$8124$1M&0Ej))))
                              g$ls/false$8117$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$8116$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$8116$1M&0Ej
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8110$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$8110$1M&0Ej
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8109$1M&0Ej))))
   (g$let-values-macro$7502$1M&0Ej
     g$let-values-macro$10990$1M&0Ej
     (case-lambda
       ((g$stx$8128$1M&0Ej)
        (letrec* ((g$rename$8129$1M&0Ej
                    (case-lambda
                      ((g$x$8180$1M&0Ej g$old*$8181$1M&0Ej g$new*$8182$1M&0Ej)
                       (begin
                         (if (not (g$id?$7257$1M&0Ej g$x$8180$1M&0Ej))
                           (g$syntax-violation$7646$1M&0Ej
                             '#f
                             '"not an indentifier"
                             g$stx$8128$1M&0Ej
                             g$x$8180$1M&0Ej)
                           (void))
                         (if (g$bound-id-member?$7264$1M&0Ej
                               g$x$8180$1M&0Ej
                               g$old*$8181$1M&0Ej)
                           (g$syntax-violation$7646$1M&0Ej
                             '#f
                             '"duplicate binding"
                             g$stx$8128$1M&0Ej
                             g$x$8180$1M&0Ej)
                           (void))
                         ((case-lambda
                            ((g$y$8183$1M&0Ej)
                             (values
                               g$y$8183$1M&0Ej
                               (cons g$x$8180$1M&0Ej g$old*$8181$1M&0Ej)
                               (cons g$y$8183$1M&0Ej g$new*$8182$1M&0Ej))))
                          (gensym
                            (g$syntax->datum$7649$1M&0Ej g$x$8180$1M&0Ej)))))))
                  (g$rename*$8130$1M&0Ej
                    (case-lambda
                      ((g$x*$8171$1M&0Ej g$old*$8172$1M&0Ej g$new*$8173$1M&0Ej)
                       (if (null? g$x*$8171$1M&0Ej)
                         (values '() g$old*$8172$1M&0Ej g$new*$8173$1M&0Ej)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8129$1M&0Ej
                                (car g$x*$8171$1M&0Ej)
                                g$old*$8172$1M&0Ej
                                g$new*$8173$1M&0Ej)))
                           (case-lambda
                             ((g$x$8174$1M&0Ej
                                g$old*$8175$1M&0Ej
                                g$new*$8176$1M&0Ej)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8130$1M&0Ej
                                     (cdr g$x*$8171$1M&0Ej)
                                     g$old*$8175$1M&0Ej
                                     g$new*$8176$1M&0Ej)))
                                (case-lambda
                                  ((g$x*$8177$1M&0Ej
                                     g$old*$8178$1M&0Ej
                                     g$new*$8179$1M&0Ej)
                                   (values
                                     (cons g$x$8174$1M&0Ej g$x*$8177$1M&0Ej)
                                     g$old*$8178$1M&0Ej
                                     g$new*$8179$1M&0Ej))))))))))))
          ((case-lambda
             ((g$t$8131$1M&0Ej)
              ((case-lambda
                 ((g$ls/false$8132$1M&0Ej)
                  (if g$ls/false$8132$1M&0Ej
                    (apply
                      (case-lambda
                        ((g$b$8133$1M&0Ej g$b*$8134$1M&0Ej)
                         (g$cons*$4997$1M&0Ej
                           (g$bless$7498$1M&0Ej 'let)
                           '()
                           g$b$8133$1M&0Ej
                           g$b*$8134$1M&0Ej)))
                      g$ls/false$8132$1M&0Ej)
                    ((case-lambda
                       ((g$t$8135$1M&0Ej)
                        ((case-lambda
                           ((g$ls/false$8136$1M&0Ej)
                            (if g$ls/false$8136$1M&0Ej
                              (apply
                                (case-lambda
                                  ((g$lhs*$8137$1M&0Ej
                                     g$rhs*$8138$1M&0Ej
                                     g$b$8139$1M&0Ej
                                     g$b*$8140$1M&0Ej)
                                   (g$bless$7498$1M&0Ej
                                     ((letrec ((g$f$8141$1M&0Ej
                                                 (case-lambda
                                                   ((g$lhs*$8142$1M&0Ej
                                                      g$rhs*$8143$1M&0Ej
                                                      g$old*$8144$1M&0Ej
                                                      g$new*$8145$1M&0Ej)
                                                    (if (null?
                                                          g$lhs*$8142$1M&0Ej)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8144$1M&0Ej
                                                               g$new*$8145$1M&0Ej)
                                                          (cons
                                                            g$b$8139$1M&0Ej
                                                            g$b*$8140$1M&0Ej)))
                                                      ((case-lambda
                                                         ((g$t$8146$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$ls/false$8147$1M&0Ej)
                                                              (if g$ls/false$8147$1M&0Ej
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8148$1M&0Ej)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8130$1M&0Ej
                                                                            g$x*$8148$1M&0Ej
                                                                            g$old*$8144$1M&0Ej
                                                                            g$new*$8145$1M&0Ej)))
                                                                       (case-lambda
                                                                         ((g$y*$8152$1M&0Ej
                                                                            g$old*$8153$1M&0Ej
                                                                            g$new*$8154$1M&0Ej)
                                                                          ((case-lambda
                                                                             ((g$new*$8155$1M&0Ej
                                                                                g$old*$8156$1M&0Ej
                                                                                g$y*$8157$1M&0Ej)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8143$1M&0Ej))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8157$1M&0Ej
                                                                                  (g$f$8141$1M&0Ej
                                                                                    (cdr g$lhs*$8142$1M&0Ej)
                                                                                    (cdr g$rhs*$8143$1M&0Ej)
                                                                                    g$old*$8156$1M&0Ej
                                                                                    g$new*$8155$1M&0Ej)))))
                                                                           g$new*$8154$1M&0Ej
                                                                           g$old*$8153$1M&0Ej
                                                                           g$y*$8152$1M&0Ej))))))
                                                                  g$ls/false$8147$1M&0Ej)
                                                                ((case-lambda
                                                                   ((g$t$8158$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8159$1M&0Ej)
                                                                        (if g$ls/false$8159$1M&0Ej
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8160$1M&0Ej
                                                                                 g$x$8161$1M&0Ej)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8129$1M&0Ej
                                                                                      g$x$8161$1M&0Ej
                                                                                      g$old*$8144$1M&0Ej
                                                                                      g$new*$8145$1M&0Ej)))
                                                                                 (case-lambda
                                                                                   ((g$y$8162$1M&0Ej
                                                                                      g$old*$8163$1M&0Ej
                                                                                      g$new*$8164$1M&0Ej)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8130$1M&0Ej
                                                                                           g$x*$8160$1M&0Ej
                                                                                           g$old*$8163$1M&0Ej
                                                                                           g$new*$8164$1M&0Ej)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8165$1M&0Ej
                                                                                           g$old*$8166$1M&0Ej
                                                                                           g$new*$8167$1M&0Ej)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8143$1M&0Ej))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8165$1M&0Ej
                                                                                               g$y$8162$1M&0Ej)
                                                                                             (g$f$8141$1M&0Ej
                                                                                               (cdr g$lhs*$8142$1M&0Ej)
                                                                                               (cdr g$rhs*$8143$1M&0Ej)
                                                                                               g$old*$8166$1M&0Ej
                                                                                               g$new*$8167$1M&0Ej)))))))))))
                                                                            g$ls/false$8159$1M&0Ej)
                                                                          ((case-lambda
                                                                             ((g$t$8168$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8169$1M&0Ej)
                                                                                  (if g$ls/false$8169$1M&0Ej
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8170$1M&0Ej)
                                                                                         (g$syntax-violation$7646$1M&0Ej
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8128$1M&0Ej
                                                                                           g$others$8170$1M&0Ej)))
                                                                                      g$ls/false$8169$1M&0Ej)
                                                                                    (g$syntax-violation$7646$1M&0Ej
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8168$1M&0Ej))))
                                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                                 g$t$8168$1M&0Ej
                                                                                 'any))))
                                                                           g$t$8158$1M&0Ej))))
                                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                                       g$t$8158$1M&0Ej
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8146$1M&0Ej))))
                                                           (g$syntax-dispatch$7535$1M&0Ej
                                                             g$t$8146$1M&0Ej
                                                             'each-any))))
                                                       (car g$lhs*$8142$1M&0Ej)))))))
                                        g$f$8141$1M&0Ej)
                                      g$lhs*$8137$1M&0Ej
                                      g$rhs*$8138$1M&0Ej
                                      '()
                                      '()))))
                                g$ls/false$8136$1M&0Ej)
                              (g$syntax-violation$7646$1M&0Ej
                                '#f
                                '"invalid syntax"
                                g$t$8135$1M&0Ej))))
                         (g$syntax-dispatch$7535$1M&0Ej
                           g$t$8135$1M&0Ej
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8131$1M&0Ej))))
               (g$syntax-dispatch$7535$1M&0Ej
                 g$t$8131$1M&0Ej
                 '(_ () any . each-any)))))
           g$stx$8128$1M&0Ej)))))
   (g$let*-values-macro$7503$1M&0Ej
     g$let*-values-macro$10991$1M&0Ej
     (case-lambda
       ((g$stx$8184$1M&0Ej)
        (letrec* ((g$check$8185$1M&0Ej
                    (case-lambda
                      ((g$x*$8209$1M&0Ej)
                       (if (not (null? g$x*$8209$1M&0Ej))
                         ((case-lambda
                            ((g$x$8210$1M&0Ej)
                             (begin
                               (if (not (g$id?$7257$1M&0Ej g$x$8210$1M&0Ej))
                                 (g$syntax-violation$7646$1M&0Ej
                                   '#f
                                   '"not an identifier"
                                   g$stx$8184$1M&0Ej
                                   g$x$8210$1M&0Ej)
                                 (void))
                               (g$check$8185$1M&0Ej (cdr g$x*$8209$1M&0Ej))
                               (if (g$bound-id-member?$7264$1M&0Ej
                                     g$x$8210$1M&0Ej
                                     (cdr g$x*$8209$1M&0Ej))
                                 (g$syntax-violation$7646$1M&0Ej
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8184$1M&0Ej
                                   g$x$8210$1M&0Ej)
                                 (void)))))
                          (car g$x*$8209$1M&0Ej))
                         (void))))))
          ((case-lambda
             ((g$t$8186$1M&0Ej)
              ((case-lambda
                 ((g$ls/false$8187$1M&0Ej)
                  (if g$ls/false$8187$1M&0Ej
                    (apply
                      (case-lambda
                        ((g$b$8188$1M&0Ej g$b*$8189$1M&0Ej)
                         (g$cons*$4997$1M&0Ej
                           (g$bless$7498$1M&0Ej 'let)
                           '()
                           g$b$8188$1M&0Ej
                           g$b*$8189$1M&0Ej)))
                      g$ls/false$8187$1M&0Ej)
                    ((case-lambda
                       ((g$t$8190$1M&0Ej)
                        ((case-lambda
                           ((g$ls/false$8191$1M&0Ej)
                            (if g$ls/false$8191$1M&0Ej
                              (apply
                                (case-lambda
                                  ((g$lhs*$8192$1M&0Ej
                                     g$rhs*$8193$1M&0Ej
                                     g$b$8194$1M&0Ej
                                     g$b*$8195$1M&0Ej)
                                   (g$bless$7498$1M&0Ej
                                     ((letrec ((g$f$8196$1M&0Ej
                                                 (case-lambda
                                                   ((g$lhs*$8197$1M&0Ej
                                                      g$rhs*$8198$1M&0Ej)
                                                    (if (null?
                                                          g$lhs*$8197$1M&0Ej)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8194$1M&0Ej
                                                          g$b*$8195$1M&0Ej))
                                                      ((case-lambda
                                                         ((g$t$8199$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$ls/false$8200$1M&0Ej)
                                                              (if g$ls/false$8200$1M&0Ej
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8201$1M&0Ej)
                                                                     (begin
                                                                       (g$check$8185$1M&0Ej
                                                                         g$x*$8201$1M&0Ej)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8198$1M&0Ej))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8201$1M&0Ej
                                                                           (g$f$8196$1M&0Ej
                                                                             (cdr g$lhs*$8197$1M&0Ej)
                                                                             (cdr g$rhs*$8198$1M&0Ej)))))))
                                                                  g$ls/false$8200$1M&0Ej)
                                                                ((case-lambda
                                                                   ((g$t$8202$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8203$1M&0Ej)
                                                                        (if g$ls/false$8203$1M&0Ej
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8204$1M&0Ej
                                                                                 g$x$8205$1M&0Ej)
                                                                               (begin
                                                                                 (g$check$8185$1M&0Ej
                                                                                   (cons
                                                                                     g$x$8205$1M&0Ej
                                                                                     g$x*$8204$1M&0Ej))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8198$1M&0Ej))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8204$1M&0Ej
                                                                                       g$x$8205$1M&0Ej)
                                                                                     (g$f$8196$1M&0Ej
                                                                                       (cdr g$lhs*$8197$1M&0Ej)
                                                                                       (cdr g$rhs*$8198$1M&0Ej)))))))
                                                                            g$ls/false$8203$1M&0Ej)
                                                                          ((case-lambda
                                                                             ((g$t$8206$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8207$1M&0Ej)
                                                                                  (if g$ls/false$8207$1M&0Ej
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8208$1M&0Ej)
                                                                                         (g$syntax-violation$7646$1M&0Ej
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8184$1M&0Ej
                                                                                           g$others$8208$1M&0Ej)))
                                                                                      g$ls/false$8207$1M&0Ej)
                                                                                    (g$syntax-violation$7646$1M&0Ej
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8206$1M&0Ej))))
                                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                                 g$t$8206$1M&0Ej
                                                                                 'any))))
                                                                           g$t$8202$1M&0Ej))))
                                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                                       g$t$8202$1M&0Ej
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8199$1M&0Ej))))
                                                           (g$syntax-dispatch$7535$1M&0Ej
                                                             g$t$8199$1M&0Ej
                                                             'each-any))))
                                                       (car g$lhs*$8197$1M&0Ej)))))))
                                        g$f$8196$1M&0Ej)
                                      g$lhs*$8192$1M&0Ej
                                      g$rhs*$8193$1M&0Ej))))
                                g$ls/false$8191$1M&0Ej)
                              (g$syntax-violation$7646$1M&0Ej
                                '#f
                                '"invalid syntax"
                                g$t$8190$1M&0Ej))))
                         (g$syntax-dispatch$7535$1M&0Ej
                           g$t$8190$1M&0Ej
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8186$1M&0Ej))))
               (g$syntax-dispatch$7535$1M&0Ej
                 g$t$8186$1M&0Ej
                 '(_ () any . each-any)))))
           g$stx$8184$1M&0Ej)))))
   (g$trace-lambda-macro$7504$1M&0Ej
     g$trace-lambda-macro$10992$1M&0Ej
     (case-lambda
       ((g$stx$8211$1M&0Ej)
        ((case-lambda
           ((g$t$8212$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8213$1M&0Ej)
                (if g$ls/false$8213$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$who$8214$1M&0Ej
                         g$fmls$8215$1M&0Ej
                         g$b$8216$1M&0Ej
                         g$b*$8217$1M&0Ej)
                       (if (g$valid-bound-ids?$7262$1M&0Ej g$fmls$8215$1M&0Ej)
                         (g$bless$7498$1M&0Ej
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8214$1M&0Ej)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8215$1M&0Ej
                                 (cons g$b$8216$1M&0Ej g$b*$8217$1M&0Ej)))))
                         (g$invalid-fmls-error$7500$1M&0Ej
                           g$stx$8211$1M&0Ej
                           g$fmls$8215$1M&0Ej))))
                    g$ls/false$8213$1M&0Ej)
                  ((case-lambda
                     ((g$t$8218$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$8219$1M&0Ej)
                          (if g$ls/false$8219$1M&0Ej
                            (apply
                              (case-lambda
                                ((g$who$8220$1M&0Ej
                                   g$fmls$8221$1M&0Ej
                                   g$last$8222$1M&0Ej
                                   g$b$8223$1M&0Ej
                                   g$b*$8224$1M&0Ej)
                                 (if (g$valid-bound-ids?$7262$1M&0Ej
                                       (cons
                                         g$last$8222$1M&0Ej
                                         g$fmls$8221$1M&0Ej))
                                   (g$bless$7498$1M&0Ej
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8220$1M&0Ej)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8221$1M&0Ej
                                             g$last$8222$1M&0Ej)
                                           (cons
                                             g$b$8223$1M&0Ej
                                             g$b*$8224$1M&0Ej)))))
                                   (g$invalid-fmls-error$7500$1M&0Ej
                                     g$stx$8211$1M&0Ej
                                     (append
                                       g$fmls$8221$1M&0Ej
                                       g$last$8222$1M&0Ej)))))
                              g$ls/false$8219$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$8218$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$8218$1M&0Ej
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8212$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$8212$1M&0Ej
               '(_ any each-any any . each-any)))))
         g$stx$8211$1M&0Ej))))
   (g$trace-define-macro$7505$1M&0Ej
     g$trace-define-macro$10993$1M&0Ej
     (case-lambda
       ((g$stx$8225$1M&0Ej)
        ((case-lambda
           ((g$t$8226$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8227$1M&0Ej)
                (if g$ls/false$8227$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$who$8228$1M&0Ej
                         g$fmls$8229$1M&0Ej
                         g$b$8230$1M&0Ej
                         g$b*$8231$1M&0Ej)
                       (if (g$valid-bound-ids?$7262$1M&0Ej g$fmls$8229$1M&0Ej)
                         (g$bless$7498$1M&0Ej
                           (list
                             'define
                             g$who$8228$1M&0Ej
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8228$1M&0Ej)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8229$1M&0Ej
                                   (cons g$b$8230$1M&0Ej g$b*$8231$1M&0Ej))))))
                         (g$invalid-fmls-error$7500$1M&0Ej
                           g$stx$8225$1M&0Ej
                           g$fmls$8229$1M&0Ej))))
                    g$ls/false$8227$1M&0Ej)
                  ((case-lambda
                     ((g$t$8232$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$8233$1M&0Ej)
                          (if g$ls/false$8233$1M&0Ej
                            (apply
                              (case-lambda
                                ((g$who$8234$1M&0Ej
                                   g$fmls$8235$1M&0Ej
                                   g$last$8236$1M&0Ej
                                   g$b$8237$1M&0Ej
                                   g$b*$8238$1M&0Ej)
                                 (if (g$valid-bound-ids?$7262$1M&0Ej
                                       (cons
                                         g$last$8236$1M&0Ej
                                         g$fmls$8235$1M&0Ej))
                                   (g$bless$7498$1M&0Ej
                                     (list
                                       'define
                                       g$who$8234$1M&0Ej
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8234$1M&0Ej)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8235$1M&0Ej
                                               g$last$8236$1M&0Ej)
                                             (cons
                                               g$b$8237$1M&0Ej
                                               g$b*$8238$1M&0Ej))))))
                                   (g$invalid-fmls-error$7500$1M&0Ej
                                     g$stx$8225$1M&0Ej
                                     (append
                                       g$fmls$8235$1M&0Ej
                                       g$last$8236$1M&0Ej)))))
                              g$ls/false$8233$1M&0Ej)
                            ((case-lambda
                               ((g$t$8239$1M&0Ej)
                                ((case-lambda
                                   ((g$ls/false$8240$1M&0Ej)
                                    (if g$ls/false$8240$1M&0Ej
                                      (apply
                                        (case-lambda
                                          ((g$who$8241$1M&0Ej
                                             g$expr$8242$1M&0Ej)
                                           (if (g$id?$7257$1M&0Ej
                                                 g$who$8241$1M&0Ej)
                                             (g$bless$7498$1M&0Ej
                                               (list
                                                 'define
                                                 g$who$8241$1M&0Ej
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8242$1M&0Ej))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8241$1M&0Ej)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7646$1M&0Ej
                                               '#f
                                               '"invalid name"
                                               g$stx$8225$1M&0Ej))))
                                        g$ls/false$8240$1M&0Ej)
                                      (g$syntax-violation$7646$1M&0Ej
                                        '#f
                                        '"invalid syntax"
                                        g$t$8239$1M&0Ej))))
                                 (g$syntax-dispatch$7535$1M&0Ej
                                   g$t$8239$1M&0Ej
                                   '(_ any any)))))
                             g$t$8232$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$8232$1M&0Ej
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8226$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$8226$1M&0Ej
               '(_ (any . each-any) any . each-any)))))
         g$stx$8225$1M&0Ej))))
   (g$trace-define-syntax-macro$7506$1M&0Ej
     g$trace-define-syntax-macro$10994$1M&0Ej
     (case-lambda
       ((g$stx$8243$1M&0Ej)
        ((case-lambda
           ((g$t$8244$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8245$1M&0Ej)
                (if g$ls/false$8245$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$who$8246$1M&0Ej g$expr$8247$1M&0Ej)
                       (if (g$id?$7257$1M&0Ej g$who$8246$1M&0Ej)
                         (g$bless$7498$1M&0Ej
                           (list
                             'define-syntax
                             g$who$8246$1M&0Ej
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8246$1M&0Ej)
                               g$expr$8247$1M&0Ej)))
                         (g$syntax-violation$7646$1M&0Ej
                           '#f
                           '"invalid name"
                           g$stx$8243$1M&0Ej))))
                    g$ls/false$8245$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8244$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8244$1M&0Ej '(_ any any)))))
         g$stx$8243$1M&0Ej))))
   (g$trace-let/rec-syntax$7507$1M&0Ej
     g$trace-let/rec-syntax$10995$1M&0Ej
     (case-lambda
       ((g$who$8248$1M&0Ej)
        (case-lambda
          ((g$stx$8249$1M&0Ej)
           ((case-lambda
              ((g$t$8250$1M&0Ej)
               ((case-lambda
                  ((g$ls/false$8251$1M&0Ej)
                   (if g$ls/false$8251$1M&0Ej
                     (apply
                       (case-lambda
                         ((g$lhs*$8252$1M&0Ej
                            g$rhs*$8253$1M&0Ej
                            g$b$8254$1M&0Ej
                            g$b*$8255$1M&0Ej)
                          (if (g$valid-bound-ids?$7262$1M&0Ej
                                g$lhs*$8252$1M&0Ej)
                            ((case-lambda
                               ((g$rhs*$8256$1M&0Ej)
                                (g$bless$7498$1M&0Ej
                                  (cons
                                    g$who$8248$1M&0Ej
                                    (cons
                                      (map list
                                           g$lhs*$8252$1M&0Ej
                                           g$rhs*$8256$1M&0Ej)
                                      (cons
                                        g$b$8254$1M&0Ej
                                        g$b*$8255$1M&0Ej))))))
                             (map (case-lambda
                                    ((g$lhs$8257$1M&0Ej g$rhs$8258$1M&0Ej)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8257$1M&0Ej)
                                       g$rhs$8258$1M&0Ej)))
                                  g$lhs*$8252$1M&0Ej
                                  g$rhs*$8253$1M&0Ej))
                            (g$invalid-fmls-error$7500$1M&0Ej
                              g$stx$8249$1M&0Ej
                              g$lhs*$8252$1M&0Ej))))
                       g$ls/false$8251$1M&0Ej)
                     (g$syntax-violation$7646$1M&0Ej
                       '#f
                       '"invalid syntax"
                       g$t$8250$1M&0Ej))))
                (g$syntax-dispatch$7535$1M&0Ej
                  g$t$8250$1M&0Ej
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8249$1M&0Ej))))))
   (g$trace-let-syntax-macro$7508$1M&0Ej
     g$trace-let-syntax-macro$10996$1M&0Ej
     (g$trace-let/rec-syntax$7507$1M&0Ej 'let-syntax))
   (g$trace-letrec-syntax-macro$7509$1M&0Ej
     g$trace-letrec-syntax-macro$10997$1M&0Ej
     (g$trace-let/rec-syntax$7507$1M&0Ej 'letrec-syntax))
   (g$guard-macro$7510$1M&0Ej
     g$guard-macro$10998$1M&0Ej
     (case-lambda
       ((g$x$8259$1M&0Ej)
        (letrec* ((g$gen-clauses$8260$1M&0Ej
                    (case-lambda
                      ((g$con$8272$1M&0Ej
                         g$outerk$8273$1M&0Ej
                         g$clause*$8274$1M&0Ej)
                       (letrec* ((g$f$8275$1M&0Ej
                                   (case-lambda
                                     ((g$x$8303$1M&0Ej g$k$8304$1M&0Ej)
                                      ((case-lambda
                                         ((g$t$8305$1M&0Ej)
                                          ((case-lambda
                                             ((g$ls/false$8306$1M&0Ej)
                                              (if g$ls/false$8306$1M&0Ej
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8307$1M&0Ej
                                                       g$p$8308$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$t$8309$1M&0Ej)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8309$1M&0Ej
                                                               g$e$8307$1M&0Ej))
                                                           (list
                                                             'if
                                                             g$t$8309$1M&0Ej
                                                             (list
                                                               g$p$8308$1M&0Ej
                                                               g$t$8309$1M&0Ej)
                                                             g$k$8304$1M&0Ej))))
                                                      (gensym))))
                                                  g$ls/false$8306$1M&0Ej)
                                                ((case-lambda
                                                   ((g$t$8310$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$ls/false$8311$1M&0Ej)
                                                        (if g$ls/false$8311$1M&0Ej
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8312$1M&0Ej)
                                                               ((case-lambda
                                                                  ((g$t$8313$1M&0Ej)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8313$1M&0Ej
                                                                         g$e$8312$1M&0Ej))
                                                                     (list
                                                                       'if
                                                                       g$t$8313$1M&0Ej
                                                                       g$t$8313$1M&0Ej
                                                                       g$k$8304$1M&0Ej))))
                                                                (gensym))))
                                                            g$ls/false$8311$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$t$8314$1M&0Ej)
                                                              ((case-lambda
                                                                 ((g$ls/false$8315$1M&0Ej)
                                                                  (if g$ls/false$8315$1M&0Ej
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8316$1M&0Ej
                                                                           g$v$8317$1M&0Ej
                                                                           g$v*$8318$1M&0Ej)
                                                                         (list
                                                                           'if
                                                                           g$e$8316$1M&0Ej
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8317$1M&0Ej
                                                                               g$v*$8318$1M&0Ej))
                                                                           g$k$8304$1M&0Ej)))
                                                                      g$ls/false$8315$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$t$8319$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8320$1M&0Ej)
                                                                            (if g$ls/false$8320$1M&0Ej
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7646$1M&0Ej
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8303$1M&0Ej)))
                                                                                g$ls/false$8320$1M&0Ej)
                                                                              (g$syntax-violation$7646$1M&0Ej
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8319$1M&0Ej))))
                                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                                           g$t$8319$1M&0Ej
                                                                           '_))))
                                                                     g$t$8314$1M&0Ej))))
                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                 g$t$8314$1M&0Ej
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8310$1M&0Ej))))
                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                       g$t$8310$1M&0Ej
                                                       '(any)))))
                                                 g$t$8305$1M&0Ej))))
                                           (g$syntax-dispatch$7535$1M&0Ej
                                             g$t$8305$1M&0Ej
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8303$1M&0Ej))))
                                 (g$f*$8276$1M&0Ej
                                   (case-lambda
                                     ((g$x*$8283$1M&0Ej)
                                      ((case-lambda
                                         ((g$t$8284$1M&0Ej)
                                          ((case-lambda
                                             ((g$ls/false$8285$1M&0Ej)
                                              (if g$ls/false$8285$1M&0Ej
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8272$1M&0Ej)
                                                       '#t)))
                                                  g$ls/false$8285$1M&0Ej)
                                                ((case-lambda
                                                   ((g$t$8286$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$ls/false$8287$1M&0Ej)
                                                        (if g$ls/false$8287$1M&0Ej
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8288$1M&0Ej
                                                                 g$e*$8289$1M&0Ej)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8288$1M&0Ej
                                                                     g$e*$8289$1M&0Ej))
                                                                 '#f)))
                                                            g$ls/false$8287$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$t$8290$1M&0Ej)
                                                              ((case-lambda
                                                                 ((g$ls/false$8291$1M&0Ej)
                                                                  (if g$ls/false$8291$1M&0Ej
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8292$1M&0Ej
                                                                           g$cls*$8293$1M&0Ej)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8276$1M&0Ej
                                                                                g$cls*$8293$1M&0Ej)))
                                                                           (case-lambda
                                                                             ((g$e$8296$1M&0Ej
                                                                                g$g$8297$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$g$8298$1M&0Ej
                                                                                    g$e$8299$1M&0Ej)
                                                                                  (values
                                                                                    (g$f$8275$1M&0Ej
                                                                                      g$cls$8292$1M&0Ej
                                                                                      g$e$8299$1M&0Ej)
                                                                                    g$g$8298$1M&0Ej)))
                                                                               g$g$8297$1M&0Ej
                                                                               g$e$8296$1M&0Ej))))))
                                                                      g$ls/false$8291$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$t$8300$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8301$1M&0Ej)
                                                                            (if g$ls/false$8301$1M&0Ej
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8302$1M&0Ej)
                                                                                   (g$syntax-violation$7646$1M&0Ej
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8302$1M&0Ej)))
                                                                                g$ls/false$8301$1M&0Ej)
                                                                              (g$syntax-violation$7646$1M&0Ej
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8300$1M&0Ej))))
                                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                                           g$t$8300$1M&0Ej
                                                                           'any))))
                                                                     g$t$8290$1M&0Ej))))
                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                 g$t$8290$1M&0Ej
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8286$1M&0Ej))))
                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                       g$t$8286$1M&0Ej
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8284$1M&0Ej))))
                                           (g$syntax-dispatch$7535$1M&0Ej
                                             g$t$8284$1M&0Ej
                                             '()))))
                                       g$x*$8283$1M&0Ej)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8276$1M&0Ej g$clause*$8274$1M&0Ej)))
                           (case-lambda
                             ((g$code$8279$1M&0Ej g$raisek$8280$1M&0Ej)
                              ((case-lambda
                                 ((g$raisek$8281$1M&0Ej g$code$8282$1M&0Ej)
                                  (if g$raisek$8281$1M&0Ej
                                    (list
                                      g$outerk$8273$1M&0Ej
                                      g$code$8282$1M&0Ej)
                                    g$code$8282$1M&0Ej)))
                               g$raisek$8280$1M&0Ej
                               g$code$8279$1M&0Ej)))))))))
          ((case-lambda
             ((g$t$8261$1M&0Ej)
              ((case-lambda
                 ((g$ls/false$8262$1M&0Ej)
                  (if (if g$ls/false$8262$1M&0Ej
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8263$1M&0Ej
                                 g$clause*$8264$1M&0Ej
                                 g$b$8265$1M&0Ej
                                 g$b*$8266$1M&0Ej)
                               (g$id?$7257$1M&0Ej g$con$8263$1M&0Ej)))
                            g$ls/false$8262$1M&0Ej))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8267$1M&0Ej
                           g$clause*$8268$1M&0Ej
                           g$b$8269$1M&0Ej
                           g$b*$8270$1M&0Ej)
                         ((case-lambda
                            ((g$outerk$8271$1M&0Ej)
                             (g$bless$7498$1M&0Ej
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8271$1M&0Ej)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8267$1M&0Ej)
                                           (g$gen-clauses$8260$1M&0Ej
                                             g$con$8267$1M&0Ej
                                             g$outerk$8271$1M&0Ej
                                             g$clause*$8268$1M&0Ej))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8269$1M&0Ej
                                                 g$b*$8270$1M&0Ej))))))))))))
                          (gensym))))
                      g$ls/false$8262$1M&0Ej)
                    (g$syntax-violation$7646$1M&0Ej
                      '#f
                      '"invalid syntax"
                      g$t$8261$1M&0Ej))))
               (g$syntax-dispatch$7535$1M&0Ej
                 g$t$8261$1M&0Ej
                 '(_ (any . each-any) any . each-any)))))
           g$x$8259$1M&0Ej)))))
   (g$define-enumeration-macro$7511$1M&0Ej
     g$define-enumeration-macro$10999$1M&0Ej
     (case-lambda
       ((g$stx$8321$1M&0Ej)
        (letrec* ((g$set?$8322$1M&0Ej
                    (case-lambda
                      ((g$x$8335$1M&0Ej)
                       ((case-lambda
                          ((g$t$8336$1M&0Ej)
                           (if g$t$8336$1M&0Ej
                             g$t$8336$1M&0Ej
                             (begin
                               '#f
                               (if (not (g$memq$4989$1M&0Ej
                                          (car g$x$8335$1M&0Ej)
                                          (cdr g$x$8335$1M&0Ej)))
                                 (begin
                                   '#f
                                   (g$set?$8322$1M&0Ej (cdr g$x$8335$1M&0Ej)))
                                 '#f)))))
                        (null? g$x$8335$1M&0Ej)))))
                  (g$remove-dups$8323$1M&0Ej
                    (case-lambda
                      ((g$ls$8334$1M&0Ej)
                       (if (null? g$ls$8334$1M&0Ej)
                         '()
                         (cons
                           (car g$ls$8334$1M&0Ej)
                           (g$remove-dups$8323$1M&0Ej
                             (g$remq$5002$1M&0Ej
                               (car g$ls$8334$1M&0Ej)
                               (cdr g$ls$8334$1M&0Ej)))))))))
          ((case-lambda
             ((g$t$8324$1M&0Ej)
              ((case-lambda
                 ((g$ls/false$8325$1M&0Ej)
                  (if (if g$ls/false$8325$1M&0Ej
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8326$1M&0Ej
                                 g$id*$8327$1M&0Ej
                                 g$maker$8328$1M&0Ej)
                               (if (g$id?$7257$1M&0Ej g$name$8326$1M&0Ej)
                                 (if (g$id?$7257$1M&0Ej g$maker$8328$1M&0Ej)
                                   (begin
                                     '#f
                                     (g$for-all$4995$1M&0Ej
                                       g$id?$7257$1M&0Ej
                                       g$id*$8327$1M&0Ej))
                                   '#f)
                                 '#f)))
                            g$ls/false$8325$1M&0Ej))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8329$1M&0Ej
                           g$id*$8330$1M&0Ej
                           g$maker$8331$1M&0Ej)
                         ((case-lambda
                            ((g$name*$8332$1M&0Ej g$mk$8333$1M&0Ej)
                             (g$bless$7498$1M&0Ej
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8333$1M&0Ej
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8332$1M&0Ej))))
                                 (list
                                   'define-syntax
                                   g$name$8329$1M&0Ej
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8332$1M&0Ej))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8329$1M&0Ej)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8331$1M&0Ej
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8331$1M&0Ej)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8332$1M&0Ej))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8331$1M&0Ej)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8333$1M&0Ej
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8323$1M&0Ej
                            (g$syntax->datum$7649$1M&0Ej g$id*$8330$1M&0Ej))
                          (gensym))))
                      g$ls/false$8325$1M&0Ej)
                    (g$syntax-violation$7646$1M&0Ej
                      '#f
                      '"invalid syntax"
                      g$t$8324$1M&0Ej))))
               (g$syntax-dispatch$7535$1M&0Ej
                 g$t$8324$1M&0Ej
                 '(_ any each-any any)))))
           g$stx$8321$1M&0Ej)))))
   (g$time-macro$7512$1M&0Ej
     g$time-macro$11000$1M&0Ej
     (case-lambda
       ((g$stx$8337$1M&0Ej)
        ((case-lambda
           ((g$t$8338$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8339$1M&0Ej)
                (if g$ls/false$8339$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$expr$8340$1M&0Ej)
                       ((case-lambda
                          ((g$str$8341$1M&0Ej)
                           (g$bless$7498$1M&0Ej
                             (list
                               'time-it
                               g$str$8341$1M&0Ej
                               (list 'lambda '() g$expr$8340$1M&0Ej)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6229$1M&0Ej)))
                          (case-lambda
                            ((g$p$8344$1M&0Ej g$e$8345$1M&0Ej)
                             ((case-lambda
                                ((g$e$8346$1M&0Ej g$p$8347$1M&0Ej)
                                 (begin
                                   (write
                                     (g$syntax->datum$7649$1M&0Ej
                                       g$expr$8340$1M&0Ej)
                                     g$p$8347$1M&0Ej)
                                   (g$e$8346$1M&0Ej))))
                              g$e$8345$1M&0Ej
                              g$p$8344$1M&0Ej)))))))
                    g$ls/false$8339$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8338$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8338$1M&0Ej '(_ any)))))
         g$stx$8337$1M&0Ej))))
   (g$delay-macro$7513$1M&0Ej
     g$delay-macro$11001$1M&0Ej
     (case-lambda
       ((g$stx$8348$1M&0Ej)
        ((case-lambda
           ((g$t$8349$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8350$1M&0Ej)
                (if g$ls/false$8350$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$expr$8351$1M&0Ej)
                       (g$bless$7498$1M&0Ej
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8351$1M&0Ej)))))
                    g$ls/false$8350$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8349$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8349$1M&0Ej '(_ any)))))
         g$stx$8348$1M&0Ej))))
   (g$assert-macro$7514$1M&0Ej
     g$assert-macro$11002$1M&0Ej
     (case-lambda
       ((g$stx$8352$1M&0Ej)
        ((case-lambda
           ((g$t$8353$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8354$1M&0Ej)
                (if g$ls/false$8354$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$expr$8355$1M&0Ej)
                       ((case-lambda
                          ((g$pos$8356$1M&0Ej)
                           (g$bless$7498$1M&0Ej
                             (list
                               'unless
                               g$expr$8355$1M&0Ej
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8355$1M&0Ej)
                                 (list 'quote g$pos$8356$1M&0Ej))))))
                        ((case-lambda
                           ((g$t$8357$1M&0Ej)
                            (if g$t$8357$1M&0Ej
                              g$t$8357$1M&0Ej
                              (begin
                                '#f
                                (g$expression-position$7641$1M&0Ej
                                  g$expr$8355$1M&0Ej)))))
                         (g$expression-position$7641$1M&0Ej
                           g$stx$8352$1M&0Ej)))))
                    g$ls/false$8354$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8353$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8353$1M&0Ej '(_ any)))))
         g$stx$8352$1M&0Ej))))
   (g$endianness-macro$7515$1M&0Ej
     g$endianness-macro$11003$1M&0Ej
     (case-lambda
       ((g$stx$8358$1M&0Ej)
        ((case-lambda
           ((g$t$8359$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8360$1M&0Ej)
                (if g$ls/false$8360$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$e$8361$1M&0Ej)
                       ((case-lambda
                          ((g$t$8362$1M&0Ej)
                           (if (g$memv$4990$1M&0Ej g$t$8362$1M&0Ej '(little))
                             (g$bless$7498$1M&0Ej ''little)
                             (if (g$memv$4990$1M&0Ej g$t$8362$1M&0Ej '(big))
                               (g$bless$7498$1M&0Ej ''big)
                               (g$syntax-violation$7646$1M&0Ej
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8358$1M&0Ej)))))
                        (g$syntax->datum$7649$1M&0Ej g$e$8361$1M&0Ej))))
                    g$ls/false$8360$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8359$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8359$1M&0Ej '(_ any)))))
         g$stx$8358$1M&0Ej))))
   (g$identifier-syntax-macro$7516$1M&0Ej
     g$identifier-syntax-macro$11004$1M&0Ej
     (case-lambda
       ((g$stx$8363$1M&0Ej)
        ((case-lambda
           ((g$t$8364$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8365$1M&0Ej)
                (if g$ls/false$8365$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$expr$8366$1M&0Ej)
                       (g$bless$7498$1M&0Ej
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8366$1M&0Ej))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8366$1M&0Ej)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8365$1M&0Ej)
                  ((case-lambda
                     ((g$t$8367$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$8368$1M&0Ej)
                          (if (if g$ls/false$8368$1M&0Ej
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8369$1M&0Ej
                                         g$expr1$8370$1M&0Ej
                                         g$id2$8371$1M&0Ej
                                         g$expr2$8372$1M&0Ej
                                         g$expr3$8373$1M&0Ej)
                                       (if (g$id?$7257$1M&0Ej g$id1$8369$1M&0Ej)
                                         (if (g$id?$7257$1M&0Ej
                                               g$id2$8371$1M&0Ej)
                                           (begin
                                             '#f
                                             (g$id?$7257$1M&0Ej
                                               g$expr2$8372$1M&0Ej))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8368$1M&0Ej))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8374$1M&0Ej
                                   g$expr1$8375$1M&0Ej
                                   g$id2$8376$1M&0Ej
                                   g$expr2$8377$1M&0Ej
                                   g$expr3$8378$1M&0Ej)
                                 (g$bless$7498$1M&0Ej
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8375$1M&0Ej))
                                         (list
                                           (list 'set! 'id g$expr2$8377$1M&0Ej)
                                           (list 'syntax g$expr3$8378$1M&0Ej))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8375$1M&0Ej
                                               '(e* ...))))))))))
                              g$ls/false$8368$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$8367$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$8367$1M&0Ej
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8364$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8364$1M&0Ej '(_ any)))))
         g$stx$8363$1M&0Ej))))
   (g$do-macro$7517$1M&0Ej
     g$do-macro$11005$1M&0Ej
     (case-lambda
       ((g$stx$8379$1M&0Ej)
        (letrec* ((g$bind$8380$1M&0Ej
                    (case-lambda
                      ((g$x$8392$1M&0Ej)
                       ((case-lambda
                          ((g$t$8393$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$8394$1M&0Ej)
                               (if g$ls/false$8394$1M&0Ej
                                 (apply
                                   (case-lambda
                                     ((g$x$8395$1M&0Ej g$init$8396$1M&0Ej)
                                      (list
                                        g$x$8395$1M&0Ej
                                        g$init$8396$1M&0Ej
                                        g$x$8395$1M&0Ej)))
                                   g$ls/false$8394$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$8397$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$8398$1M&0Ej)
                                         (if g$ls/false$8398$1M&0Ej
                                           (apply
                                             (case-lambda
                                               ((g$x$8399$1M&0Ej
                                                  g$init$8400$1M&0Ej
                                                  g$step$8401$1M&0Ej)
                                                (list
                                                  g$x$8399$1M&0Ej
                                                  g$init$8400$1M&0Ej
                                                  g$step$8401$1M&0Ej)))
                                             g$ls/false$8398$1M&0Ej)
                                           ((case-lambda
                                              ((g$t$8402$1M&0Ej)
                                               ((case-lambda
                                                  ((g$ls/false$8403$1M&0Ej)
                                                   (if g$ls/false$8403$1M&0Ej
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7646$1M&0Ej
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8379$1M&0Ej)))
                                                       g$ls/false$8403$1M&0Ej)
                                                     (g$syntax-violation$7646$1M&0Ej
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8402$1M&0Ej))))
                                                (g$syntax-dispatch$7535$1M&0Ej
                                                  g$t$8402$1M&0Ej
                                                  '_))))
                                            g$t$8397$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$8397$1M&0Ej
                                        '(any any any)))))
                                  g$t$8393$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$8393$1M&0Ej
                              '(any any)))))
                        g$x$8392$1M&0Ej)))))
          ((case-lambda
             ((g$t$8381$1M&0Ej)
              ((case-lambda
                 ((g$ls/false$8382$1M&0Ej)
                  (if g$ls/false$8382$1M&0Ej
                    (apply
                      (case-lambda
                        ((g$binding*$8383$1M&0Ej
                           g$test$8384$1M&0Ej
                           g$expr*$8385$1M&0Ej
                           g$command*$8386$1M&0Ej)
                         ((case-lambda
                            ((g$t$8387$1M&0Ej)
                             ((case-lambda
                                ((g$ls/false$8388$1M&0Ej)
                                 (if g$ls/false$8388$1M&0Ej
                                   (apply
                                     (case-lambda
                                       ((g$x*$8389$1M&0Ej
                                          g$init*$8390$1M&0Ej
                                          g$step*$8391$1M&0Ej)
                                        (if (g$valid-bound-ids?$7262$1M&0Ej
                                              g$x*$8389$1M&0Ej)
                                          (g$bless$7498$1M&0Ej
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8389$1M&0Ej
                                                    (list
                                                      'if
                                                      g$test$8384$1M&0Ej
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8385$1M&0Ej))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8386$1M&0Ej
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8391$1M&0Ej))))))))
                                              (cons 'loop g$init*$8390$1M&0Ej)))
                                          (g$syntax-violation$7646$1M&0Ej
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8379$1M&0Ej))))
                                     g$ls/false$8388$1M&0Ej)
                                   (g$syntax-violation$7646$1M&0Ej
                                     '#f
                                     '"invalid syntax"
                                     g$t$8387$1M&0Ej))))
                              (g$syntax-dispatch$7535$1M&0Ej
                                g$t$8387$1M&0Ej
                                '#(each (any any any))))))
                          (map g$bind$8380$1M&0Ej g$binding*$8383$1M&0Ej))))
                      g$ls/false$8382$1M&0Ej)
                    (g$syntax-violation$7646$1M&0Ej
                      '#f
                      '"invalid syntax"
                      g$t$8381$1M&0Ej))))
               (g$syntax-dispatch$7535$1M&0Ej
                 g$t$8381$1M&0Ej
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8379$1M&0Ej)))))
   (g$let*-macro$7518$1M&0Ej
     g$let*-macro$11006$1M&0Ej
     (case-lambda
       ((g$stx$8404$1M&0Ej)
        ((case-lambda
           ((g$t$8405$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8406$1M&0Ej)
                (if (if g$ls/false$8406$1M&0Ej
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8407$1M&0Ej
                               g$rhs*$8408$1M&0Ej
                               g$b$8409$1M&0Ej
                               g$b*$8410$1M&0Ej)
                             (g$for-all$4995$1M&0Ej
                               g$id?$7257$1M&0Ej
                               g$lhs*$8407$1M&0Ej)))
                          g$ls/false$8406$1M&0Ej))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8411$1M&0Ej
                         g$rhs*$8412$1M&0Ej
                         g$b$8413$1M&0Ej
                         g$b*$8414$1M&0Ej)
                       (g$bless$7498$1M&0Ej
                         ((letrec ((g$f$8415$1M&0Ej
                                     (case-lambda
                                       ((g$x*$8416$1M&0Ej)
                                        (if (null? g$x*$8416$1M&0Ej)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8413$1M&0Ej
                                                g$b*$8414$1M&0Ej)))
                                          (list
                                            'let
                                            (list (car g$x*$8416$1M&0Ej))
                                            (g$f$8415$1M&0Ej
                                              (cdr g$x*$8416$1M&0Ej))))))))
                            g$f$8415$1M&0Ej)
                          (map list g$lhs*$8411$1M&0Ej g$rhs*$8412$1M&0Ej)))))
                    g$ls/false$8406$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8405$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$8405$1M&0Ej
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8404$1M&0Ej))))
   (g$or-macro$7519$1M&0Ej
     g$or-macro$11007$1M&0Ej
     (case-lambda
       ((g$stx$8417$1M&0Ej)
        ((case-lambda
           ((g$t$8418$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8419$1M&0Ej)
                (if g$ls/false$8419$1M&0Ej
                  (apply (case-lambda (() '#f)) g$ls/false$8419$1M&0Ej)
                  ((case-lambda
                     ((g$t$8420$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$8421$1M&0Ej)
                          (if g$ls/false$8421$1M&0Ej
                            (apply
                              (case-lambda
                                ((g$e$8422$1M&0Ej g$e*$8423$1M&0Ej)
                                 (g$bless$7498$1M&0Ej
                                   ((letrec ((g$f$8424$1M&0Ej
                                               (case-lambda
                                                 ((g$e$8425$1M&0Ej
                                                    g$e*$8426$1M&0Ej)
                                                  (if (null? g$e*$8426$1M&0Ej)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8425$1M&0Ej)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8425$1M&0Ej))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8424$1M&0Ej
                                                          (car g$e*$8426$1M&0Ej)
                                                          (cdr g$e*$8426$1M&0Ej)))))))))
                                      g$f$8424$1M&0Ej)
                                    g$e$8422$1M&0Ej
                                    g$e*$8423$1M&0Ej))))
                              g$ls/false$8421$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$8420$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$8420$1M&0Ej
                         '(_ any . each-any)))))
                   g$t$8418$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8418$1M&0Ej '(_)))))
         g$stx$8417$1M&0Ej))))
   (g$and-macro$7520$1M&0Ej
     g$and-macro$11008$1M&0Ej
     (case-lambda
       ((g$stx$8427$1M&0Ej)
        ((case-lambda
           ((g$t$8428$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8429$1M&0Ej)
                (if g$ls/false$8429$1M&0Ej
                  (apply (case-lambda (() '#t)) g$ls/false$8429$1M&0Ej)
                  ((case-lambda
                     ((g$t$8430$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$8431$1M&0Ej)
                          (if g$ls/false$8431$1M&0Ej
                            (apply
                              (case-lambda
                                ((g$e$8432$1M&0Ej g$e*$8433$1M&0Ej)
                                 (g$bless$7498$1M&0Ej
                                   ((letrec ((g$f$8434$1M&0Ej
                                               (case-lambda
                                                 ((g$e$8435$1M&0Ej
                                                    g$e*$8436$1M&0Ej)
                                                  (if (null? g$e*$8436$1M&0Ej)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8435$1M&0Ej)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8435$1M&0Ej
                                                        (cons
                                                          (g$f$8434$1M&0Ej
                                                            (car g$e*$8436$1M&0Ej)
                                                            (cdr g$e*$8436$1M&0Ej))
                                                          '(#f)))))))))
                                      g$f$8434$1M&0Ej)
                                    g$e$8432$1M&0Ej
                                    g$e*$8433$1M&0Ej))))
                              g$ls/false$8431$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$8430$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$8430$1M&0Ej
                         '(_ any . each-any)))))
                   g$t$8428$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8428$1M&0Ej '(_)))))
         g$stx$8427$1M&0Ej))))
   (g$cond-macro$7521$1M&0Ej
     g$cond-macro$11009$1M&0Ej
     (case-lambda
       ((g$stx$8437$1M&0Ej)
        ((case-lambda
           ((g$t$8438$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8439$1M&0Ej)
                (if g$ls/false$8439$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$cls$8440$1M&0Ej g$cls*$8441$1M&0Ej)
                       (g$bless$7498$1M&0Ej
                         ((letrec ((g$f$8442$1M&0Ej
                                     (case-lambda
                                       ((g$cls$8443$1M&0Ej g$cls*$8444$1M&0Ej)
                                        (if (null? g$cls*$8444$1M&0Ej)
                                          ((case-lambda
                                             ((g$t$8445$1M&0Ej)
                                              ((case-lambda
                                                 ((g$ls/false$8446$1M&0Ej)
                                                  (if g$ls/false$8446$1M&0Ej
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8447$1M&0Ej
                                                           g$e*$8448$1M&0Ej)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8447$1M&0Ej
                                                             g$e*$8448$1M&0Ej))))
                                                      g$ls/false$8446$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$t$8449$1M&0Ej)
                                                        ((case-lambda
                                                           ((g$ls/false$8450$1M&0Ej)
                                                            (if g$ls/false$8450$1M&0Ej
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8451$1M&0Ej
                                                                     g$p$8452$1M&0Ej)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8451$1M&0Ej))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8452$1M&0Ej
                                                                         '(t))))))
                                                                g$ls/false$8450$1M&0Ej)
                                                              ((case-lambda
                                                                 ((g$t$8453$1M&0Ej)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8454$1M&0Ej)
                                                                      (if g$ls/false$8454$1M&0Ej
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8455$1M&0Ej)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8455$1M&0Ej
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8454$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$t$8456$1M&0Ej)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8457$1M&0Ej)
                                                                                (if g$ls/false$8457$1M&0Ej
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8458$1M&0Ej
                                                                                         g$e*$8459$1M&0Ej)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8458$1M&0Ej
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8459$1M&0Ej))))
                                                                                    g$ls/false$8457$1M&0Ej)
                                                                                  ((case-lambda
                                                                                     ((g$t$8460$1M&0Ej)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8461$1M&0Ej)
                                                                                          (if g$ls/false$8461$1M&0Ej
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7646$1M&0Ej
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8437$1M&0Ej)))
                                                                                              g$ls/false$8461$1M&0Ej)
                                                                                            (g$syntax-violation$7646$1M&0Ej
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8460$1M&0Ej))))
                                                                                       (g$syntax-dispatch$7535$1M&0Ej
                                                                                         g$t$8460$1M&0Ej
                                                                                         '_))))
                                                                                   g$t$8456$1M&0Ej))))
                                                                             (g$syntax-dispatch$7535$1M&0Ej
                                                                               g$t$8456$1M&0Ej
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8453$1M&0Ej))))
                                                                   (g$syntax-dispatch$7535$1M&0Ej
                                                                     g$t$8453$1M&0Ej
                                                                     '(any)))))
                                                               g$t$8449$1M&0Ej))))
                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                           g$t$8449$1M&0Ej
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8445$1M&0Ej))))
                                               (g$syntax-dispatch$7535$1M&0Ej
                                                 g$t$8445$1M&0Ej
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8443$1M&0Ej)
                                          ((case-lambda
                                             ((g$t$8462$1M&0Ej)
                                              ((case-lambda
                                                 ((g$ls/false$8463$1M&0Ej)
                                                  (if g$ls/false$8463$1M&0Ej
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8464$1M&0Ej
                                                           g$e*$8465$1M&0Ej)
                                                         (g$syntax-violation$7646$1M&0Ej
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8437$1M&0Ej)))
                                                      g$ls/false$8463$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$t$8466$1M&0Ej)
                                                        ((case-lambda
                                                           ((g$ls/false$8467$1M&0Ej)
                                                            (if g$ls/false$8467$1M&0Ej
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8468$1M&0Ej
                                                                     g$p$8469$1M&0Ej)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8468$1M&0Ej))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8469$1M&0Ej
                                                                         '(t))
                                                                       (g$f$8442$1M&0Ej
                                                                         (car g$cls*$8444$1M&0Ej)
                                                                         (cdr g$cls*$8444$1M&0Ej))))))
                                                                g$ls/false$8467$1M&0Ej)
                                                              ((case-lambda
                                                                 ((g$t$8470$1M&0Ej)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8471$1M&0Ej)
                                                                      (if g$ls/false$8471$1M&0Ej
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8472$1M&0Ej)
                                                                             (list
                                                                               'or
                                                                               g$e$8472$1M&0Ej
                                                                               (g$f$8442$1M&0Ej
                                                                                 (car g$cls*$8444$1M&0Ej)
                                                                                 (cdr g$cls*$8444$1M&0Ej)))))
                                                                          g$ls/false$8471$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$t$8473$1M&0Ej)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8474$1M&0Ej)
                                                                                (if g$ls/false$8474$1M&0Ej
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8475$1M&0Ej
                                                                                         g$e*$8476$1M&0Ej)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8475$1M&0Ej
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8476$1M&0Ej)
                                                                                         (g$f$8442$1M&0Ej
                                                                                           (car g$cls*$8444$1M&0Ej)
                                                                                           (cdr g$cls*$8444$1M&0Ej)))))
                                                                                    g$ls/false$8474$1M&0Ej)
                                                                                  ((case-lambda
                                                                                     ((g$t$8477$1M&0Ej)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8478$1M&0Ej)
                                                                                          (if g$ls/false$8478$1M&0Ej
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7646$1M&0Ej
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8437$1M&0Ej)))
                                                                                              g$ls/false$8478$1M&0Ej)
                                                                                            (g$syntax-violation$7646$1M&0Ej
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8477$1M&0Ej))))
                                                                                       (g$syntax-dispatch$7535$1M&0Ej
                                                                                         g$t$8477$1M&0Ej
                                                                                         '_))))
                                                                                   g$t$8473$1M&0Ej))))
                                                                             (g$syntax-dispatch$7535$1M&0Ej
                                                                               g$t$8473$1M&0Ej
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8470$1M&0Ej))))
                                                                   (g$syntax-dispatch$7535$1M&0Ej
                                                                     g$t$8470$1M&0Ej
                                                                     '(any)))))
                                                               g$t$8466$1M&0Ej))))
                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                           g$t$8466$1M&0Ej
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8462$1M&0Ej))))
                                               (g$syntax-dispatch$7535$1M&0Ej
                                                 g$t$8462$1M&0Ej
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8443$1M&0Ej))))))
                            g$f$8442$1M&0Ej)
                          g$cls$8440$1M&0Ej
                          g$cls*$8441$1M&0Ej))))
                    g$ls/false$8439$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8438$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$8438$1M&0Ej
               '(_ any . each-any)))))
         g$stx$8437$1M&0Ej))))
   (g$do-include$7522$1M&0Ej
     g$do-include$11010$1M&0Ej
     (case-lambda
       ((g$stx$8479$1M&0Ej g$id$8480$1M&0Ej g$filename$8481$1M&0Ej)
        ((case-lambda
           ((g$filename$8482$1M&0Ej)
            (begin
              (if (not (if (string? g$filename$8482$1M&0Ej)
                         (begin '#f (g$id?$7257$1M&0Ej g$id$8480$1M&0Ej))
                         '#f))
                (g$syntax-violation$7646$1M&0Ej
                  '#f
                  '"invalid syntax"
                  g$stx$8479$1M&0Ej)
                (void))
              (cons
                (g$bless$7498$1M&0Ej 'begin)
                (g$with-input-from-file$6263$1M&0Ej
                  g$filename$8482$1M&0Ej
                  (case-lambda
                    (()
                     ((letrec ((g$f$8483$1M&0Ej
                                 (case-lambda
                                   ((g$ls$8484$1M&0Ej)
                                    ((case-lambda
                                       ((g$x$8485$1M&0Ej)
                                        (if (eof-object? g$x$8485$1M&0Ej)
                                          (reverse g$ls$8484$1M&0Ej)
                                          (g$f$8483$1M&0Ej
                                            (cons
                                              (g$datum->stx$7240$1M&0Ej
                                                g$id$8480$1M&0Ej
                                                g$x$8485$1M&0Ej)
                                              g$ls$8484$1M&0Ej)))))
                                     (read-annotated))))))
                        g$f$8483$1M&0Ej)
                      '()))))))))
         (g$stx->datum$7268$1M&0Ej g$filename$8481$1M&0Ej)))))
   (g$include-macro$7523$1M&0Ej
     g$include-macro$11011$1M&0Ej
     (case-lambda
       ((g$e$8486$1M&0Ej)
        ((case-lambda
           ((g$t$8487$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8488$1M&0Ej)
                (if g$ls/false$8488$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$id$8489$1M&0Ej g$filename$8490$1M&0Ej)
                       (g$do-include$7522$1M&0Ej
                         g$e$8486$1M&0Ej
                         g$id$8489$1M&0Ej
                         g$filename$8490$1M&0Ej)))
                    g$ls/false$8488$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8487$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8487$1M&0Ej '(any any)))))
         g$e$8486$1M&0Ej))))
   (g$include-into-macro$7524$1M&0Ej
     g$include-into-macro$11012$1M&0Ej
     (case-lambda
       ((g$e$8491$1M&0Ej)
        ((case-lambda
           ((g$t$8492$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8493$1M&0Ej)
                (if g$ls/false$8493$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$id$8494$1M&0Ej g$filename$8495$1M&0Ej)
                       (g$do-include$7522$1M&0Ej
                         g$e$8491$1M&0Ej
                         g$id$8494$1M&0Ej
                         g$filename$8495$1M&0Ej)))
                    g$ls/false$8493$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8492$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$8492$1M&0Ej '(_ any any)))))
         g$e$8491$1M&0Ej))))
   (g$syntax-rules-macro$7525$1M&0Ej
     g$syntax-rules-macro$11013$1M&0Ej
     (case-lambda
       ((g$e$8496$1M&0Ej)
        ((case-lambda
           ((g$t$8497$1M&0Ej)
            ((case-lambda
               ((g$ls/false$8498$1M&0Ej)
                (if g$ls/false$8498$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$lits$8499$1M&0Ej
                         g$pat*$8500$1M&0Ej
                         g$tmp*$8501$1M&0Ej)
                       (begin
                         (g$verify-literals$7538$1M&0Ej
                           g$lits$8499$1M&0Ej
                           g$e$8496$1M&0Ej)
                         (g$bless$7498$1M&0Ej
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8499$1M&0Ej
                                   (map (case-lambda
                                          ((g$pat$8502$1M&0Ej g$tmp$8503$1M&0Ej)
                                           ((case-lambda
                                              ((g$t$8504$1M&0Ej)
                                               ((case-lambda
                                                  ((g$ls/false$8505$1M&0Ej)
                                                   (if g$ls/false$8505$1M&0Ej
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8506$1M&0Ej)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8506$1M&0Ej)
                                                            (list
                                                              'syntax
                                                              g$tmp$8503$1M&0Ej))))
                                                       g$ls/false$8505$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$t$8507$1M&0Ej)
                                                         ((case-lambda
                                                            ((g$ls/false$8508$1M&0Ej)
                                                             (if g$ls/false$8508$1M&0Ej
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7646$1M&0Ej
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8496$1M&0Ej
                                                                      g$pat$8502$1M&0Ej)))
                                                                 g$ls/false$8508$1M&0Ej)
                                                               (g$syntax-violation$7646$1M&0Ej
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8507$1M&0Ej))))
                                                          (g$syntax-dispatch$7535$1M&0Ej
                                                            g$t$8507$1M&0Ej
                                                            '_))))
                                                      g$t$8504$1M&0Ej))))
                                                (g$syntax-dispatch$7535$1M&0Ej
                                                  g$t$8504$1M&0Ej
                                                  '(_ . any)))))
                                            g$pat$8502$1M&0Ej)))
                                        g$pat*$8500$1M&0Ej
                                        g$tmp*$8501$1M&0Ej)))))))))
                    g$ls/false$8498$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$8497$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$8497$1M&0Ej
               '(_ each-any . #(each (any any)))))))
         g$e$8496$1M&0Ej))))
   (g$quasiquote-macro$7526$1M&0Ej
     g$quasiquote-macro$11014$1M&0Ej
     ((case-lambda
        (()
         (letrec* ((g$datum$8509$1M&0Ej
                     (case-lambda
                       ((g$x$8640$1M&0Ej)
                        (list
                          (g$scheme-stx$7478$1M&0Ej 'quote)
                          (g$mkstx$7245$1M&0Ej g$x$8640$1M&0Ej '() '() '())))))
                   (g$quasicons*$8525$1M&0Ej
                     (case-lambda
                       ((g$x$8636$1M&0Ej g$y$8637$1M&0Ej)
                        ((letrec ((g$f$8638$1M&0Ej
                                    (case-lambda
                                      ((g$x$8639$1M&0Ej)
                                       (if (null? g$x$8639$1M&0Ej)
                                         g$y$8637$1M&0Ej
                                         (g$quasicons$8526$1M&0Ej
                                           (car g$x$8639$1M&0Ej)
                                           (g$f$8638$1M&0Ej
                                             (cdr g$x$8639$1M&0Ej))))))))
                           g$f$8638$1M&0Ej)
                         g$x$8636$1M&0Ej))))
                   (g$quasicons$8526$1M&0Ej
                     (case-lambda
                       ((g$x$8617$1M&0Ej g$y$8618$1M&0Ej)
                        ((case-lambda
                           ((g$t$8619$1M&0Ej)
                            ((case-lambda
                               ((g$ls/false$8620$1M&0Ej)
                                (if g$ls/false$8620$1M&0Ej
                                  (apply
                                    (case-lambda
                                      ((g$dy$8621$1M&0Ej)
                                       ((case-lambda
                                          ((g$t$8622$1M&0Ej)
                                           ((case-lambda
                                              ((g$ls/false$8623$1M&0Ej)
                                               (if g$ls/false$8623$1M&0Ej
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8624$1M&0Ej)
                                                      (list
                                                        (g$scheme-stx$7478$1M&0Ej
                                                          'quote)
                                                        (cons
                                                          g$dx$8624$1M&0Ej
                                                          g$dy$8621$1M&0Ej))))
                                                   g$ls/false$8623$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$t$8625$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$ls/false$8626$1M&0Ej)
                                                         (if g$ls/false$8626$1M&0Ej
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8627$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8628$1M&0Ej)
                                                                        (if g$ls/false$8628$1M&0Ej
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7478$1M&0Ej
                                                                                   'list)
                                                                                 g$x$8617$1M&0Ej)))
                                                                            g$ls/false$8628$1M&0Ej)
                                                                          ((case-lambda
                                                                             ((g$t$8629$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8630$1M&0Ej)
                                                                                  (if g$ls/false$8630$1M&0Ej
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7478$1M&0Ej
                                                                                             'cons)
                                                                                           g$x$8617$1M&0Ej
                                                                                           g$y$8618$1M&0Ej)))
                                                                                      g$ls/false$8630$1M&0Ej)
                                                                                    (g$syntax-violation$7646$1M&0Ej
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8629$1M&0Ej))))
                                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                                 g$t$8629$1M&0Ej
                                                                                 '_))))
                                                                           g$t$8627$1M&0Ej))))
                                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                                       g$t$8627$1M&0Ej
                                                                       '()))))
                                                                 g$dy$8621$1M&0Ej)))
                                                             g$ls/false$8626$1M&0Ej)
                                                           (g$syntax-violation$7646$1M&0Ej
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8625$1M&0Ej))))
                                                      (g$syntax-dispatch$7535$1M&0Ej
                                                        g$t$8625$1M&0Ej
                                                        '_))))
                                                  g$t$8622$1M&0Ej))))
                                            (g$syntax-dispatch$7535$1M&0Ej
                                              g$t$8622$1M&0Ej
                                              '(#(scheme-id quote) any)))))
                                        g$x$8617$1M&0Ej)))
                                    g$ls/false$8620$1M&0Ej)
                                  ((case-lambda
                                     ((g$t$8631$1M&0Ej)
                                      ((case-lambda
                                         ((g$ls/false$8632$1M&0Ej)
                                          (if g$ls/false$8632$1M&0Ej
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8633$1M&0Ej)
                                                 (g$cons*$4997$1M&0Ej
                                                   (g$scheme-stx$7478$1M&0Ej
                                                     'list)
                                                   g$x$8617$1M&0Ej
                                                   g$stuff$8633$1M&0Ej)))
                                              g$ls/false$8632$1M&0Ej)
                                            ((case-lambda
                                               ((g$t$8634$1M&0Ej)
                                                ((case-lambda
                                                   ((g$ls/false$8635$1M&0Ej)
                                                    (if g$ls/false$8635$1M&0Ej
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7478$1M&0Ej
                                                               'cons)
                                                             g$x$8617$1M&0Ej
                                                             g$y$8618$1M&0Ej)))
                                                        g$ls/false$8635$1M&0Ej)
                                                      (g$syntax-violation$7646$1M&0Ej
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8634$1M&0Ej))))
                                                 (g$syntax-dispatch$7535$1M&0Ej
                                                   g$t$8634$1M&0Ej
                                                   '_))))
                                             g$t$8631$1M&0Ej))))
                                       (g$syntax-dispatch$7535$1M&0Ej
                                         g$t$8631$1M&0Ej
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8619$1M&0Ej))))
                             (g$syntax-dispatch$7535$1M&0Ej
                               g$t$8619$1M&0Ej
                               '(#(scheme-id quote) any)))))
                         g$y$8618$1M&0Ej))))
                   (g$quasiappend$8527$1M&0Ej
                     (case-lambda
                       ((g$x$8604$1M&0Ej g$y$8605$1M&0Ej)
                        ((case-lambda
                           ((g$ls$8606$1M&0Ej)
                            (if (null? g$ls$8606$1M&0Ej)
                              (list (g$scheme-stx$7478$1M&0Ej 'quote) '())
                              (if (null? (cdr g$ls$8606$1M&0Ej))
                                (car g$ls$8606$1M&0Ej)
                                (g$cons*$4997$1M&0Ej
                                  (g$scheme-stx$7478$1M&0Ej 'append)
                                  g$ls$8606$1M&0Ej)))))
                         ((letrec ((g$f$8607$1M&0Ej
                                     (case-lambda
                                       ((g$x$8608$1M&0Ej)
                                        (if (null? g$x$8608$1M&0Ej)
                                          ((case-lambda
                                             ((g$t$8609$1M&0Ej)
                                              ((case-lambda
                                                 ((g$ls/false$8610$1M&0Ej)
                                                  (if g$ls/false$8610$1M&0Ej
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8610$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$t$8611$1M&0Ej)
                                                        ((case-lambda
                                                           ((g$ls/false$8612$1M&0Ej)
                                                            (if g$ls/false$8612$1M&0Ej
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8605$1M&0Ej)))
                                                                g$ls/false$8612$1M&0Ej)
                                                              (g$syntax-violation$7646$1M&0Ej
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8611$1M&0Ej))))
                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                           g$t$8611$1M&0Ej
                                                           '_))))
                                                     g$t$8609$1M&0Ej))))
                                               (g$syntax-dispatch$7535$1M&0Ej
                                                 g$t$8609$1M&0Ej
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8605$1M&0Ej)
                                          ((case-lambda
                                             ((g$t$8613$1M&0Ej)
                                              ((case-lambda
                                                 ((g$ls/false$8614$1M&0Ej)
                                                  (if g$ls/false$8614$1M&0Ej
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8607$1M&0Ej
                                                           (cdr g$x$8608$1M&0Ej))))
                                                      g$ls/false$8614$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$t$8615$1M&0Ej)
                                                        ((case-lambda
                                                           ((g$ls/false$8616$1M&0Ej)
                                                            (if g$ls/false$8616$1M&0Ej
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8608$1M&0Ej)
                                                                     (g$f$8607$1M&0Ej
                                                                       (cdr g$x$8608$1M&0Ej)))))
                                                                g$ls/false$8616$1M&0Ej)
                                                              (g$syntax-violation$7646$1M&0Ej
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8615$1M&0Ej))))
                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                           g$t$8615$1M&0Ej
                                                           '_))))
                                                     g$t$8613$1M&0Ej))))
                                               (g$syntax-dispatch$7535$1M&0Ej
                                                 g$t$8613$1M&0Ej
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8608$1M&0Ej)))))))
                            g$f$8607$1M&0Ej)
                          g$x$8604$1M&0Ej)))))
                   (g$quasivector$8528$1M&0Ej
                     (case-lambda
                       ((g$x$8579$1M&0Ej)
                        ((case-lambda
                           ((g$pat-x$8580$1M&0Ej)
                            ((case-lambda
                               ((g$t$8581$1M&0Ej)
                                ((case-lambda
                                   ((g$ls/false$8582$1M&0Ej)
                                    (if g$ls/false$8582$1M&0Ej
                                      (apply
                                        (case-lambda
                                          ((g$x*$8583$1M&0Ej)
                                           (list
                                             (g$scheme-stx$7478$1M&0Ej 'quote)
                                             (list->vector g$x*$8583$1M&0Ej))))
                                        g$ls/false$8582$1M&0Ej)
                                      ((case-lambda
                                         ((g$t$8584$1M&0Ej)
                                          ((case-lambda
                                             ((g$ls/false$8585$1M&0Ej)
                                              (if g$ls/false$8585$1M&0Ej
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8586$1M&0Ej
                                                                 (case-lambda
                                                                   ((g$x$8587$1M&0Ej
                                                                      g$k$8588$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$t$8589$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8590$1M&0Ej)
                                                                            (if g$ls/false$8590$1M&0Ej
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8591$1M&0Ej)
                                                                                   (g$k$8588$1M&0Ej
                                                                                     (map (case-lambda
                                                                                            ((g$x$8592$1M&0Ej)
                                                                                             (list
                                                                                               (g$scheme-stx$7478$1M&0Ej
                                                                                                 'quote)
                                                                                               g$x$8592$1M&0Ej)))
                                                                                          g$x*$8591$1M&0Ej))))
                                                                                g$ls/false$8590$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$t$8593$1M&0Ej)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8594$1M&0Ej)
                                                                                      (if g$ls/false$8594$1M&0Ej
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8595$1M&0Ej)
                                                                                             (g$k$8588$1M&0Ej
                                                                                               g$x*$8595$1M&0Ej)))
                                                                                          g$ls/false$8594$1M&0Ej)
                                                                                        ((case-lambda
                                                                                           ((g$t$8596$1M&0Ej)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8597$1M&0Ej)
                                                                                                (if g$ls/false$8597$1M&0Ej
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8598$1M&0Ej
                                                                                                         g$y$8599$1M&0Ej)
                                                                                                       (g$f$8586$1M&0Ej
                                                                                                         g$y$8599$1M&0Ej
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8600$1M&0Ej)
                                                                                                            (g$k$8588$1M&0Ej
                                                                                                              (cons
                                                                                                                g$x$8598$1M&0Ej
                                                                                                                g$ls$8600$1M&0Ej)))))))
                                                                                                    g$ls/false$8597$1M&0Ej)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8601$1M&0Ej)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8602$1M&0Ej)
                                                                                                          (if g$ls/false$8602$1M&0Ej
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7478$1M&0Ej
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8580$1M&0Ej)))
                                                                                                              g$ls/false$8602$1M&0Ej)
                                                                                                            (g$syntax-violation$7646$1M&0Ej
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8601$1M&0Ej))))
                                                                                                       (g$syntax-dispatch$7535$1M&0Ej
                                                                                                         g$t$8601$1M&0Ej
                                                                                                         '_))))
                                                                                                   g$t$8596$1M&0Ej))))
                                                                                             (g$syntax-dispatch$7535$1M&0Ej
                                                                                               g$t$8596$1M&0Ej
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8593$1M&0Ej))))
                                                                                   (g$syntax-dispatch$7535$1M&0Ej
                                                                                     g$t$8593$1M&0Ej
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8589$1M&0Ej))))
                                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                                           g$t$8589$1M&0Ej
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8587$1M&0Ej)))))
                                                        g$f$8586$1M&0Ej)
                                                      g$x$8579$1M&0Ej
                                                      (case-lambda
                                                        ((g$ls$8603$1M&0Ej)
                                                         (g$cons*$4997$1M&0Ej
                                                           (g$scheme-stx$7478$1M&0Ej
                                                             'vector)
                                                           g$ls$8603$1M&0Ej))))))
                                                  g$ls/false$8585$1M&0Ej)
                                                (g$syntax-violation$7646$1M&0Ej
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8584$1M&0Ej))))
                                           (g$syntax-dispatch$7535$1M&0Ej
                                             g$t$8584$1M&0Ej
                                             '_))))
                                       g$t$8581$1M&0Ej))))
                                 (g$syntax-dispatch$7535$1M&0Ej
                                   g$t$8581$1M&0Ej
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8580$1M&0Ej)))
                         g$x$8579$1M&0Ej))))
                   (g$vquasi$8529$1M&0Ej
                     (case-lambda
                       ((g$p$8562$1M&0Ej g$lev$8563$1M&0Ej)
                        ((case-lambda
                           ((g$t$8564$1M&0Ej)
                            ((case-lambda
                               ((g$ls/false$8565$1M&0Ej)
                                (if g$ls/false$8565$1M&0Ej
                                  (apply
                                    (case-lambda
                                      ((g$p$8566$1M&0Ej g$q$8567$1M&0Ej)
                                       ((case-lambda
                                          ((g$t$8568$1M&0Ej)
                                           ((case-lambda
                                              ((g$ls/false$8569$1M&0Ej)
                                               (if g$ls/false$8569$1M&0Ej
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8570$1M&0Ej)
                                                      (if (= g$lev$8563$1M&0Ej
                                                             '0)
                                                        (g$quasicons*$8525$1M&0Ej
                                                          g$p$8570$1M&0Ej
                                                          (g$vquasi$8529$1M&0Ej
                                                            g$q$8567$1M&0Ej
                                                            g$lev$8563$1M&0Ej))
                                                        (g$quasicons$8526$1M&0Ej
                                                          (g$quasicons$8526$1M&0Ej
                                                            (g$datum$8509$1M&0Ej
                                                              'unquote)
                                                            (g$quasi$8530$1M&0Ej
                                                              g$p$8570$1M&0Ej
                                                              (- g$lev$8563$1M&0Ej
                                                                 '1)))
                                                          (g$vquasi$8529$1M&0Ej
                                                            g$q$8567$1M&0Ej
                                                            g$lev$8563$1M&0Ej)))))
                                                   g$ls/false$8569$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$t$8571$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$ls/false$8572$1M&0Ej)
                                                         (if g$ls/false$8572$1M&0Ej
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8573$1M&0Ej)
                                                                (if (= g$lev$8563$1M&0Ej
                                                                       '0)
                                                                  (g$quasiappend$8527$1M&0Ej
                                                                    g$p$8573$1M&0Ej
                                                                    (g$vquasi$8529$1M&0Ej
                                                                      g$q$8567$1M&0Ej
                                                                      g$lev$8563$1M&0Ej))
                                                                  (g$quasicons$8526$1M&0Ej
                                                                    (g$quasicons$8526$1M&0Ej
                                                                      (g$datum$8509$1M&0Ej
                                                                        'unquote-splicing)
                                                                      (g$quasi$8530$1M&0Ej
                                                                        g$p$8573$1M&0Ej
                                                                        (- g$lev$8563$1M&0Ej
                                                                           '1)))
                                                                    (g$vquasi$8529$1M&0Ej
                                                                      g$q$8567$1M&0Ej
                                                                      g$lev$8563$1M&0Ej)))))
                                                             g$ls/false$8572$1M&0Ej)
                                                           ((case-lambda
                                                              ((g$t$8574$1M&0Ej)
                                                               ((case-lambda
                                                                  ((g$ls/false$8575$1M&0Ej)
                                                                   (if g$ls/false$8575$1M&0Ej
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8576$1M&0Ej)
                                                                          (g$quasicons$8526$1M&0Ej
                                                                            (g$quasi$8530$1M&0Ej
                                                                              g$p$8576$1M&0Ej
                                                                              g$lev$8563$1M&0Ej)
                                                                            (g$vquasi$8529$1M&0Ej
                                                                              g$q$8567$1M&0Ej
                                                                              g$lev$8563$1M&0Ej))))
                                                                       g$ls/false$8575$1M&0Ej)
                                                                     (g$syntax-violation$7646$1M&0Ej
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8574$1M&0Ej))))
                                                                (g$syntax-dispatch$7535$1M&0Ej
                                                                  g$t$8574$1M&0Ej
                                                                  'any))))
                                                            g$t$8571$1M&0Ej))))
                                                      (g$syntax-dispatch$7535$1M&0Ej
                                                        g$t$8571$1M&0Ej
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8568$1M&0Ej))))
                                            (g$syntax-dispatch$7535$1M&0Ej
                                              g$t$8568$1M&0Ej
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8566$1M&0Ej)))
                                    g$ls/false$8565$1M&0Ej)
                                  ((case-lambda
                                     ((g$t$8577$1M&0Ej)
                                      ((case-lambda
                                         ((g$ls/false$8578$1M&0Ej)
                                          (if g$ls/false$8578$1M&0Ej
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7478$1M&0Ej
                                                     'quote)
                                                   '())))
                                              g$ls/false$8578$1M&0Ej)
                                            (g$syntax-violation$7646$1M&0Ej
                                              '#f
                                              '"invalid syntax"
                                              g$t$8577$1M&0Ej))))
                                       (g$syntax-dispatch$7535$1M&0Ej
                                         g$t$8577$1M&0Ej
                                         '()))))
                                   g$t$8564$1M&0Ej))))
                             (g$syntax-dispatch$7535$1M&0Ej
                               g$t$8564$1M&0Ej
                               '(any . any)))))
                         g$p$8562$1M&0Ej))))
                   (g$quasi$8530$1M&0Ej
                     (case-lambda
                       ((g$p$8535$1M&0Ej g$lev$8536$1M&0Ej)
                        ((case-lambda
                           ((g$t$8537$1M&0Ej)
                            ((case-lambda
                               ((g$ls/false$8538$1M&0Ej)
                                (if g$ls/false$8538$1M&0Ej
                                  (apply
                                    (case-lambda
                                      ((g$p$8539$1M&0Ej)
                                       (if (= g$lev$8536$1M&0Ej '0)
                                         g$p$8539$1M&0Ej
                                         (g$quasicons$8526$1M&0Ej
                                           (g$datum$8509$1M&0Ej 'unquote)
                                           (g$quasi$8530$1M&0Ej
                                             (list g$p$8539$1M&0Ej)
                                             (- g$lev$8536$1M&0Ej '1))))))
                                    g$ls/false$8538$1M&0Ej)
                                  ((case-lambda
                                     ((g$t$8540$1M&0Ej)
                                      ((case-lambda
                                         ((g$ls/false$8541$1M&0Ej)
                                          (if g$ls/false$8541$1M&0Ej
                                            (apply
                                              (case-lambda
                                                ((g$p$8542$1M&0Ej
                                                   g$q$8543$1M&0Ej)
                                                 (if (= g$lev$8536$1M&0Ej '0)
                                                   (g$quasicons*$8525$1M&0Ej
                                                     g$p$8542$1M&0Ej
                                                     (g$quasi$8530$1M&0Ej
                                                       g$q$8543$1M&0Ej
                                                       g$lev$8536$1M&0Ej))
                                                   (g$quasicons$8526$1M&0Ej
                                                     (g$quasicons$8526$1M&0Ej
                                                       (g$datum$8509$1M&0Ej
                                                         'unquote)
                                                       (g$quasi$8530$1M&0Ej
                                                         g$p$8542$1M&0Ej
                                                         (- g$lev$8536$1M&0Ej
                                                            '1)))
                                                     (g$quasi$8530$1M&0Ej
                                                       g$q$8543$1M&0Ej
                                                       g$lev$8536$1M&0Ej)))))
                                              g$ls/false$8541$1M&0Ej)
                                            ((case-lambda
                                               ((g$t$8544$1M&0Ej)
                                                ((case-lambda
                                                   ((g$ls/false$8545$1M&0Ej)
                                                    (if g$ls/false$8545$1M&0Ej
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8546$1M&0Ej
                                                             g$q$8547$1M&0Ej)
                                                           (if (= g$lev$8536$1M&0Ej
                                                                  '0)
                                                             (g$quasiappend$8527$1M&0Ej
                                                               g$p$8546$1M&0Ej
                                                               (g$quasi$8530$1M&0Ej
                                                                 g$q$8547$1M&0Ej
                                                                 g$lev$8536$1M&0Ej))
                                                             (g$quasicons$8526$1M&0Ej
                                                               (g$quasicons$8526$1M&0Ej
                                                                 (g$datum$8509$1M&0Ej
                                                                   'unquote-splicing)
                                                                 (g$quasi$8530$1M&0Ej
                                                                   g$p$8546$1M&0Ej
                                                                   (- g$lev$8536$1M&0Ej
                                                                      '1)))
                                                               (g$quasi$8530$1M&0Ej
                                                                 g$q$8547$1M&0Ej
                                                                 g$lev$8536$1M&0Ej)))))
                                                        g$ls/false$8545$1M&0Ej)
                                                      ((case-lambda
                                                         ((g$t$8548$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$ls/false$8549$1M&0Ej)
                                                              (if g$ls/false$8549$1M&0Ej
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8550$1M&0Ej)
                                                                     (g$quasicons$8526$1M&0Ej
                                                                       (g$datum$8509$1M&0Ej
                                                                         'quasiquote)
                                                                       (g$quasi$8530$1M&0Ej
                                                                         (list
                                                                           g$p$8550$1M&0Ej)
                                                                         (+ g$lev$8536$1M&0Ej
                                                                            '1)))))
                                                                  g$ls/false$8549$1M&0Ej)
                                                                ((case-lambda
                                                                   ((g$t$8551$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8552$1M&0Ej)
                                                                        (if g$ls/false$8552$1M&0Ej
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8553$1M&0Ej
                                                                                 g$q$8554$1M&0Ej)
                                                                               (g$quasicons$8526$1M&0Ej
                                                                                 (g$quasi$8530$1M&0Ej
                                                                                   g$p$8553$1M&0Ej
                                                                                   g$lev$8536$1M&0Ej)
                                                                                 (g$quasi$8530$1M&0Ej
                                                                                   g$q$8554$1M&0Ej
                                                                                   g$lev$8536$1M&0Ej))))
                                                                            g$ls/false$8552$1M&0Ej)
                                                                          ((case-lambda
                                                                             ((g$t$8555$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8556$1M&0Ej)
                                                                                  (if (if g$ls/false$8556$1M&0Ej
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8557$1M&0Ej)
                                                                                               (not (g$stx?$7229$1M&0Ej
                                                                                                      g$x$8557$1M&0Ej))))
                                                                                            g$ls/false$8556$1M&0Ej))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8558$1M&0Ej)
                                                                                         (g$quasivector$8528$1M&0Ej
                                                                                           (g$vquasi$8529$1M&0Ej
                                                                                             g$x$8558$1M&0Ej
                                                                                             g$lev$8536$1M&0Ej))))
                                                                                      g$ls/false$8556$1M&0Ej)
                                                                                    ((case-lambda
                                                                                       ((g$t$8559$1M&0Ej)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8560$1M&0Ej)
                                                                                            (if g$ls/false$8560$1M&0Ej
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8561$1M&0Ej)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7478$1M&0Ej
                                                                                                       'quote)
                                                                                                     g$p$8561$1M&0Ej)))
                                                                                                g$ls/false$8560$1M&0Ej)
                                                                                              (g$syntax-violation$7646$1M&0Ej
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8559$1M&0Ej))))
                                                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                                                           g$t$8559$1M&0Ej
                                                                                           'any))))
                                                                                     g$t$8555$1M&0Ej))))
                                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                                 g$t$8555$1M&0Ej
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8551$1M&0Ej))))
                                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                                       g$t$8551$1M&0Ej
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8548$1M&0Ej))))
                                                           (g$syntax-dispatch$7535$1M&0Ej
                                                             g$t$8548$1M&0Ej
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8544$1M&0Ej))))
                                                 (g$syntax-dispatch$7535$1M&0Ej
                                                   g$t$8544$1M&0Ej
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8540$1M&0Ej))))
                                       (g$syntax-dispatch$7535$1M&0Ej
                                         g$t$8540$1M&0Ej
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8537$1M&0Ej))))
                             (g$syntax-dispatch$7535$1M&0Ej
                               g$t$8537$1M&0Ej
                               '(#(scheme-id unquote) any)))))
                         g$p$8535$1M&0Ej)))))
           (case-lambda
             ((g$x$8531$1M&0Ej)
              ((case-lambda
                 ((g$t$8532$1M&0Ej)
                  ((case-lambda
                     ((g$ls/false$8533$1M&0Ej)
                      (if g$ls/false$8533$1M&0Ej
                        (apply
                          (case-lambda
                            ((g$e$8534$1M&0Ej)
                             (g$quasi$8530$1M&0Ej g$e$8534$1M&0Ej '0)))
                          g$ls/false$8533$1M&0Ej)
                        (g$syntax-violation$7646$1M&0Ej
                          '#f
                          '"invalid syntax"
                          g$t$8532$1M&0Ej))))
                   (g$syntax-dispatch$7535$1M&0Ej g$t$8532$1M&0Ej '(_ any)))))
               g$x$8531$1M&0Ej))))))))
   (g$quasisyntax-macro$7527$1M&0Ej
     g$quasisyntax-macro$11015$1M&0Ej
     ((case-lambda
        (()
         (letrec* ((g$quasi$8641$1M&0Ej
                     (case-lambda
                       ((g$p$8655$1M&0Ej g$lev$8656$1M&0Ej)
                        ((case-lambda
                           ((g$t$8657$1M&0Ej)
                            ((case-lambda
                               ((g$ls/false$8658$1M&0Ej)
                                (if g$ls/false$8658$1M&0Ej
                                  (apply
                                    (case-lambda
                                      ((g$p$8659$1M&0Ej)
                                       (if (= g$lev$8656$1M&0Ej '0)
                                         ((case-lambda
                                            ((g$g$8660$1M&0Ej)
                                             (values
                                               (list g$g$8660$1M&0Ej)
                                               (list g$p$8659$1M&0Ej)
                                               g$g$8660$1M&0Ej)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8641$1M&0Ej
                                                g$p$8659$1M&0Ej
                                                (- g$lev$8656$1M&0Ej '1))))
                                           (case-lambda
                                             ((g$lhs*$8664$1M&0Ej
                                                g$rhs*$8665$1M&0Ej
                                                g$p$8666$1M&0Ej)
                                              ((case-lambda
                                                 ((g$p$8667$1M&0Ej
                                                    g$rhs*$8668$1M&0Ej
                                                    g$lhs*$8669$1M&0Ej)
                                                  (values
                                                    g$lhs*$8669$1M&0Ej
                                                    g$rhs*$8668$1M&0Ej
                                                    (list
                                                      'unsyntax
                                                      g$p$8667$1M&0Ej))))
                                               g$p$8666$1M&0Ej
                                               g$rhs*$8665$1M&0Ej
                                               g$lhs*$8664$1M&0Ej)))))))
                                    g$ls/false$8658$1M&0Ej)
                                  ((case-lambda
                                     ((g$t$8670$1M&0Ej)
                                      ((case-lambda
                                         ((g$ls/false$8671$1M&0Ej)
                                          (if (if g$ls/false$8671$1M&0Ej
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8656$1M&0Ej
                                                          '0)))
                                                    g$ls/false$8671$1M&0Ej))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7646$1M&0Ej
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8655$1M&0Ej)))
                                              g$ls/false$8671$1M&0Ej)
                                            ((case-lambda
                                               ((g$t$8672$1M&0Ej)
                                                ((case-lambda
                                                   ((g$ls/false$8673$1M&0Ej)
                                                    (if g$ls/false$8673$1M&0Ej
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8674$1M&0Ej
                                                             g$q$8675$1M&0Ej)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8641$1M&0Ej
                                                                  g$q$8675$1M&0Ej
                                                                  g$lev$8656$1M&0Ej)))
                                                             (case-lambda
                                                               ((g$lhs*$8679$1M&0Ej
                                                                  g$rhs*$8680$1M&0Ej
                                                                  g$q$8681$1M&0Ej)
                                                                ((case-lambda
                                                                   ((g$q$8682$1M&0Ej
                                                                      g$rhs*$8683$1M&0Ej
                                                                      g$lhs*$8684$1M&0Ej)
                                                                    (if (= g$lev$8656$1M&0Ej
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8685$1M&0Ej)
                                                                          (values
                                                                            (append
                                                                              g$g*$8685$1M&0Ej
                                                                              g$lhs*$8684$1M&0Ej)
                                                                            (append
                                                                              g$p*$8674$1M&0Ej
                                                                              g$rhs*$8683$1M&0Ej)
                                                                            (append
                                                                              g$g*$8685$1M&0Ej
                                                                              g$q$8682$1M&0Ej))))
                                                                       (map (case-lambda
                                                                              ((g$x$8686$1M&0Ej)
                                                                               (gensym)))
                                                                            g$p*$8674$1M&0Ej))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8641$1M&0Ej
                                                                             g$p*$8674$1M&0Ej
                                                                             (- g$lev$8656$1M&0Ej
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8690$1M&0Ej
                                                                             g$rhs2*$8691$1M&0Ej
                                                                             g$p*$8692$1M&0Ej)
                                                                           ((case-lambda
                                                                              ((g$p*$8693$1M&0Ej
                                                                                 g$rhs2*$8694$1M&0Ej
                                                                                 g$lhs2*$8695$1M&0Ej)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8695$1M&0Ej
                                                                                   g$lhs*$8684$1M&0Ej)
                                                                                 (append
                                                                                   g$rhs2*$8694$1M&0Ej
                                                                                   g$rhs*$8683$1M&0Ej)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8693$1M&0Ej)
                                                                                   g$q$8682$1M&0Ej))))
                                                                            g$p*$8692$1M&0Ej
                                                                            g$rhs2*$8691$1M&0Ej
                                                                            g$lhs2*$8690$1M&0Ej)))))))
                                                                 g$q$8681$1M&0Ej
                                                                 g$rhs*$8680$1M&0Ej
                                                                 g$lhs*$8679$1M&0Ej))))))
                                                        g$ls/false$8673$1M&0Ej)
                                                      ((case-lambda
                                                         ((g$t$8696$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$ls/false$8697$1M&0Ej)
                                                              (if g$ls/false$8697$1M&0Ej
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8698$1M&0Ej
                                                                       g$q$8699$1M&0Ej)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8641$1M&0Ej
                                                                            g$q$8699$1M&0Ej
                                                                            g$lev$8656$1M&0Ej)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8703$1M&0Ej
                                                                            g$rhs*$8704$1M&0Ej
                                                                            g$q$8705$1M&0Ej)
                                                                          ((case-lambda
                                                                             ((g$q$8706$1M&0Ej
                                                                                g$rhs*$8707$1M&0Ej
                                                                                g$lhs*$8708$1M&0Ej)
                                                                              (if (= g$lev$8656$1M&0Ej
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8709$1M&0Ej)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8710$1M&0Ej)
                                                                                                (cons
                                                                                                  g$g$8710$1M&0Ej
                                                                                                  '(...))))
                                                                                             g$g*$8709$1M&0Ej)
                                                                                        g$lhs*$8708$1M&0Ej)
                                                                                      (append
                                                                                        g$p*$8698$1M&0Ej
                                                                                        g$rhs*$8707$1M&0Ej)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8711$1M&0Ej)
                                                                                                  (cons
                                                                                                    g$g$8711$1M&0Ej
                                                                                                    '(...))))
                                                                                               g$g*$8709$1M&0Ej))
                                                                                        g$q$8706$1M&0Ej))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8712$1M&0Ej)
                                                                                         (gensym)))
                                                                                      g$p*$8698$1M&0Ej))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8641$1M&0Ej
                                                                                       g$p*$8698$1M&0Ej
                                                                                       (- g$lev$8656$1M&0Ej
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8716$1M&0Ej
                                                                                       g$rhs2*$8717$1M&0Ej
                                                                                       g$p*$8718$1M&0Ej)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8719$1M&0Ej
                                                                                           g$rhs2*$8720$1M&0Ej
                                                                                           g$lhs2*$8721$1M&0Ej)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8721$1M&0Ej
                                                                                             g$lhs*$8708$1M&0Ej)
                                                                                           (append
                                                                                             g$rhs2*$8720$1M&0Ej
                                                                                             g$rhs*$8707$1M&0Ej)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8719$1M&0Ej)
                                                                                             g$q$8706$1M&0Ej))))
                                                                                      g$p*$8718$1M&0Ej
                                                                                      g$rhs2*$8717$1M&0Ej
                                                                                      g$lhs2*$8716$1M&0Ej)))))))
                                                                           g$q$8705$1M&0Ej
                                                                           g$rhs*$8704$1M&0Ej
                                                                           g$lhs*$8703$1M&0Ej))))))
                                                                  g$ls/false$8697$1M&0Ej)
                                                                ((case-lambda
                                                                   ((g$t$8722$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8723$1M&0Ej)
                                                                        (if (if g$ls/false$8723$1M&0Ej
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8656$1M&0Ej
                                                                                        '0)))
                                                                                  g$ls/false$8723$1M&0Ej))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7646$1M&0Ej
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8655$1M&0Ej)))
                                                                            g$ls/false$8723$1M&0Ej)
                                                                          ((case-lambda
                                                                             ((g$t$8724$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8725$1M&0Ej)
                                                                                  (if g$ls/false$8725$1M&0Ej
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8726$1M&0Ej)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8641$1M&0Ej
                                                                                                g$p$8726$1M&0Ej
                                                                                                (+ g$lev$8656$1M&0Ej
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8730$1M&0Ej
                                                                                                g$rhs*$8731$1M&0Ej
                                                                                                g$p$8732$1M&0Ej)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8733$1M&0Ej
                                                                                                    g$rhs*$8734$1M&0Ej
                                                                                                    g$lhs*$8735$1M&0Ej)
                                                                                                  (values
                                                                                                    g$lhs*$8735$1M&0Ej
                                                                                                    g$rhs*$8734$1M&0Ej
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8733$1M&0Ej))))
                                                                                               g$p$8732$1M&0Ej
                                                                                               g$rhs*$8731$1M&0Ej
                                                                                               g$lhs*$8730$1M&0Ej))))))
                                                                                      g$ls/false$8725$1M&0Ej)
                                                                                    ((case-lambda
                                                                                       ((g$t$8736$1M&0Ej)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8737$1M&0Ej)
                                                                                            (if g$ls/false$8737$1M&0Ej
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8738$1M&0Ej
                                                                                                     g$q$8739$1M&0Ej)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8641$1M&0Ej
                                                                                                          g$p$8738$1M&0Ej
                                                                                                          g$lev$8656$1M&0Ej)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8746$1M&0Ej
                                                                                                          g$rhs*$8747$1M&0Ej
                                                                                                          g$p$8748$1M&0Ej)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8641$1M&0Ej
                                                                                                               g$q$8739$1M&0Ej
                                                                                                               g$lev$8656$1M&0Ej)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8749$1M&0Ej
                                                                                                               g$rhs2*$8750$1M&0Ej
                                                                                                               g$q$8751$1M&0Ej)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8752$1M&0Ej
                                                                                                                   g$rhs2*$8753$1M&0Ej
                                                                                                                   g$lhs2*$8754$1M&0Ej
                                                                                                                   g$p$8755$1M&0Ej
                                                                                                                   g$rhs*$8756$1M&0Ej
                                                                                                                   g$lhs*$8757$1M&0Ej)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8754$1M&0Ej
                                                                                                                     g$lhs*$8757$1M&0Ej)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8753$1M&0Ej
                                                                                                                     g$rhs*$8756$1M&0Ej)
                                                                                                                   (cons
                                                                                                                     g$p$8755$1M&0Ej
                                                                                                                     g$q$8752$1M&0Ej))))
                                                                                                              g$q$8751$1M&0Ej
                                                                                                              g$rhs2*$8750$1M&0Ej
                                                                                                              g$lhs2*$8749$1M&0Ej
                                                                                                              g$p$8748$1M&0Ej
                                                                                                              g$rhs*$8747$1M&0Ej
                                                                                                              g$lhs*$8746$1M&0Ej)))))))))
                                                                                                g$ls/false$8737$1M&0Ej)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8758$1M&0Ej)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8759$1M&0Ej)
                                                                                                      (if g$ls/false$8759$1M&0Ej
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8760$1M&0Ej)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8641$1M&0Ej
                                                                                                                    g$x*$8760$1M&0Ej
                                                                                                                    g$lev$8656$1M&0Ej)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8764$1M&0Ej
                                                                                                                    g$rhs*$8765$1M&0Ej
                                                                                                                    g$x*$8766$1M&0Ej)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8767$1M&0Ej
                                                                                                                        g$rhs*$8768$1M&0Ej
                                                                                                                        g$lhs*$8769$1M&0Ej)
                                                                                                                      (values
                                                                                                                        g$lhs*$8769$1M&0Ej
                                                                                                                        g$rhs*$8768$1M&0Ej
                                                                                                                        (list->vector
                                                                                                                          g$x*$8767$1M&0Ej))))
                                                                                                                   g$x*$8766$1M&0Ej
                                                                                                                   g$rhs*$8765$1M&0Ej
                                                                                                                   g$lhs*$8764$1M&0Ej))))))
                                                                                                          g$ls/false$8759$1M&0Ej)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8770$1M&0Ej)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8771$1M&0Ej)
                                                                                                                (if g$ls/false$8771$1M&0Ej
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8655$1M&0Ej)))
                                                                                                                    g$ls/false$8771$1M&0Ej)
                                                                                                                  (g$syntax-violation$7646$1M&0Ej
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8770$1M&0Ej))))
                                                                                                             (g$syntax-dispatch$7535$1M&0Ej
                                                                                                               g$t$8770$1M&0Ej
                                                                                                               '_))))
                                                                                                         g$t$8758$1M&0Ej))))
                                                                                                   (g$syntax-dispatch$7535$1M&0Ej
                                                                                                     g$t$8758$1M&0Ej
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8736$1M&0Ej))))
                                                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                                                           g$t$8736$1M&0Ej
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8724$1M&0Ej))))
                                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                                 g$t$8724$1M&0Ej
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8722$1M&0Ej))))
                                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                                       g$t$8722$1M&0Ej
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8696$1M&0Ej))))
                                                           (g$syntax-dispatch$7535$1M&0Ej
                                                             g$t$8696$1M&0Ej
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8672$1M&0Ej))))
                                                 (g$syntax-dispatch$7535$1M&0Ej
                                                   g$t$8672$1M&0Ej
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8670$1M&0Ej))))
                                       (g$syntax-dispatch$7535$1M&0Ej
                                         g$t$8670$1M&0Ej
                                         '#(scheme-id unsyntax)))))
                                   g$t$8657$1M&0Ej))))
                             (g$syntax-dispatch$7535$1M&0Ej
                               g$t$8657$1M&0Ej
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8655$1M&0Ej)))))
           (case-lambda
             ((g$x$8642$1M&0Ej)
              ((case-lambda
                 ((g$t$8643$1M&0Ej)
                  ((case-lambda
                     ((g$ls/false$8644$1M&0Ej)
                      (if g$ls/false$8644$1M&0Ej
                        (apply
                          (case-lambda
                            ((g$e$8645$1M&0Ej)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8641$1M&0Ej g$e$8645$1M&0Ej '0)))
                               (case-lambda
                                 ((g$lhs*$8649$1M&0Ej
                                    g$rhs*$8650$1M&0Ej
                                    g$v$8651$1M&0Ej)
                                  ((case-lambda
                                     ((g$v$8652$1M&0Ej
                                        g$rhs*$8653$1M&0Ej
                                        g$lhs*$8654$1M&0Ej)
                                      (g$bless$7498$1M&0Ej
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8653$1M&0Ej)
                                          '()
                                          (list
                                            g$lhs*$8654$1M&0Ej
                                            (list 'syntax g$v$8652$1M&0Ej))))))
                                   g$v$8651$1M&0Ej
                                   g$rhs*$8650$1M&0Ej
                                   g$lhs*$8649$1M&0Ej))))))
                          g$ls/false$8644$1M&0Ej)
                        (g$syntax-violation$7646$1M&0Ej
                          '#f
                          '"invalid syntax"
                          g$t$8643$1M&0Ej))))
                   (g$syntax-dispatch$7535$1M&0Ej g$t$8643$1M&0Ej '(_ any)))))
               g$x$8642$1M&0Ej))))))))
   (g$define-struct-macro$7528$1M&0Ej
     g$define-struct-macro$11016$1M&0Ej
     (case-lambda
       ((g$stx$8772$1M&0Ej)
        (g$syntax-violation$7646$1M&0Ej
          '#f
          '"define-struct not supported"
          g$stx$8772$1M&0Ej))))
   (g$define-record-type-macro$7529$1M&0Ej
     g$define-record-type-macro$11017$1M&0Ej
     (case-lambda
       ((g$x$8773$1M&0Ej)
        (letrec* ((g$id$8774$1M&0Ej
                    (case-lambda
                      ((g$ctxt$9026$1M&0Ej . g$str*$9027$1M&0Ej)
                       (g$datum->syntax$7648$1M&0Ej
                         g$ctxt$9026$1M&0Ej
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9028$1M&0Ej)
                                     (if (symbol? g$x$9028$1M&0Ej)
                                       (symbol->string g$x$9028$1M&0Ej)
                                       (if (string? g$x$9028$1M&0Ej)
                                         g$x$9028$1M&0Ej
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9027$1M&0Ej)))))))
                  (g$get-record-name$8775$1M&0Ej
                    (case-lambda
                      ((g$spec$9017$1M&0Ej)
                       ((case-lambda
                          ((g$t$9018$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$9019$1M&0Ej)
                               (if g$ls/false$9019$1M&0Ej
                                 (apply
                                   (case-lambda
                                     ((g$foo$9020$1M&0Ej
                                        g$make-foo$9021$1M&0Ej
                                        g$foo?$9022$1M&0Ej)
                                      g$foo$9020$1M&0Ej))
                                   g$ls/false$9019$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$9023$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$9024$1M&0Ej)
                                         (if g$ls/false$9024$1M&0Ej
                                           (apply
                                             (case-lambda
                                               ((g$foo$9025$1M&0Ej)
                                                g$foo$9025$1M&0Ej))
                                             g$ls/false$9024$1M&0Ej)
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid syntax"
                                             g$t$9023$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$9023$1M&0Ej
                                        'any))))
                                  g$t$9018$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$9018$1M&0Ej
                              '(any any any)))))
                        g$spec$9017$1M&0Ej))))
                  (g$get-record-constructor-name$8776$1M&0Ej
                    (case-lambda
                      ((g$spec$9007$1M&0Ej)
                       ((case-lambda
                          ((g$t$9008$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$9009$1M&0Ej)
                               (if g$ls/false$9009$1M&0Ej
                                 (apply
                                   (case-lambda
                                     ((g$foo$9010$1M&0Ej
                                        g$make-foo$9011$1M&0Ej
                                        g$foo?$9012$1M&0Ej)
                                      g$make-foo$9011$1M&0Ej))
                                   g$ls/false$9009$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$9013$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$9014$1M&0Ej)
                                         (if (if g$ls/false$9014$1M&0Ej
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9015$1M&0Ej)
                                                      (g$id?$7257$1M&0Ej
                                                        g$foo$9015$1M&0Ej)))
                                                   g$ls/false$9014$1M&0Ej))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9016$1M&0Ej)
                                                (g$id$8774$1M&0Ej
                                                  g$foo$9016$1M&0Ej
                                                  '"make-"
                                                  (g$stx->datum$7268$1M&0Ej
                                                    g$foo$9016$1M&0Ej))))
                                             g$ls/false$9014$1M&0Ej)
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid syntax"
                                             g$t$9013$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$9013$1M&0Ej
                                        'any))))
                                  g$t$9008$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$9008$1M&0Ej
                              '(any any any)))))
                        g$spec$9007$1M&0Ej))))
                  (g$get-record-predicate-name$8777$1M&0Ej
                    (case-lambda
                      ((g$spec$8997$1M&0Ej)
                       ((case-lambda
                          ((g$t$8998$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$8999$1M&0Ej)
                               (if g$ls/false$8999$1M&0Ej
                                 (apply
                                   (case-lambda
                                     ((g$foo$9000$1M&0Ej
                                        g$make-foo$9001$1M&0Ej
                                        g$foo?$9002$1M&0Ej)
                                      g$foo?$9002$1M&0Ej))
                                   g$ls/false$8999$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$9003$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$9004$1M&0Ej)
                                         (if (if g$ls/false$9004$1M&0Ej
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9005$1M&0Ej)
                                                      (g$id?$7257$1M&0Ej
                                                        g$foo$9005$1M&0Ej)))
                                                   g$ls/false$9004$1M&0Ej))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9006$1M&0Ej)
                                                (g$id$8774$1M&0Ej
                                                  g$foo$9006$1M&0Ej
                                                  (g$stx->datum$7268$1M&0Ej
                                                    g$foo$9006$1M&0Ej)
                                                  '"?")))
                                             g$ls/false$9004$1M&0Ej)
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid syntax"
                                             g$t$9003$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$9003$1M&0Ej
                                        'any))))
                                  g$t$8998$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$8998$1M&0Ej
                              '(any any any)))))
                        g$spec$8997$1M&0Ej))))
                  (g$get-clause$8778$1M&0Ej
                    (case-lambda
                      ((g$id$8988$1M&0Ej g$ls$8989$1M&0Ej)
                       ((case-lambda
                          ((g$t$8990$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$8991$1M&0Ej)
                               (if g$ls/false$8991$1M&0Ej
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$8991$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$8992$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$8993$1M&0Ej)
                                         (if g$ls/false$8993$1M&0Ej
                                           (apply
                                             (case-lambda
                                               ((g$x$8994$1M&0Ej
                                                  g$rest$8995$1M&0Ej
                                                  g$ls$8996$1M&0Ej)
                                                (if (g$free-id=?$7261$1M&0Ej
                                                      (g$bless$7498$1M&0Ej
                                                        g$id$8988$1M&0Ej)
                                                      g$x$8994$1M&0Ej)
                                                  (cons
                                                    g$x$8994$1M&0Ej
                                                    g$rest$8995$1M&0Ej)
                                                  (g$get-clause$8778$1M&0Ej
                                                    g$id$8988$1M&0Ej
                                                    g$ls$8996$1M&0Ej))))
                                             g$ls/false$8993$1M&0Ej)
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid syntax"
                                             g$t$8992$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$8992$1M&0Ej
                                        '((any . any) . any)))))
                                  g$t$8990$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$8990$1M&0Ej
                              '()))))
                        g$ls$8989$1M&0Ej))))
                  (g$foo-rtd-code$8779$1M&0Ej
                    (case-lambda
                      ((g$name$8947$1M&0Ej
                         g$clause*$8948$1M&0Ej
                         g$parent-rtd-code$8949$1M&0Ej)
                       (letrec* ((g$convert-field-spec*$8950$1M&0Ej
                                   (case-lambda
                                     ((g$ls$8975$1M&0Ej)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$8976$1M&0Ej)
                                                ((case-lambda
                                                   ((g$t$8977$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$ls/false$8978$1M&0Ej)
                                                        (if g$ls/false$8978$1M&0Ej
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$8979$1M&0Ej
                                                                 g$rest$8980$1M&0Ej)
                                                               (list
                                                                 'mutable
                                                                 g$name$8979$1M&0Ej)))
                                                            g$ls/false$8978$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$t$8981$1M&0Ej)
                                                              ((case-lambda
                                                                 ((g$ls/false$8982$1M&0Ej)
                                                                  (if g$ls/false$8982$1M&0Ej
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$8983$1M&0Ej
                                                                           g$rest$8984$1M&0Ej)
                                                                         (list
                                                                           'immutable
                                                                           g$name$8983$1M&0Ej)))
                                                                      g$ls/false$8982$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$t$8985$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8986$1M&0Ej)
                                                                            (if g$ls/false$8986$1M&0Ej
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$8987$1M&0Ej)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$8987$1M&0Ej)))
                                                                                g$ls/false$8986$1M&0Ej)
                                                                              (g$syntax-violation$7646$1M&0Ej
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8985$1M&0Ej))))
                                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                                           g$t$8985$1M&0Ej
                                                                           'any))))
                                                                     g$t$8981$1M&0Ej))))
                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                 g$t$8981$1M&0Ej
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$8977$1M&0Ej))))
                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                       g$t$8977$1M&0Ej
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$8976$1M&0Ej)))
                                             g$ls$8975$1M&0Ej))))))
                         ((case-lambda
                            ((g$uid-code$8951$1M&0Ej
                               g$sealed?$8952$1M&0Ej
                               g$opaque?$8953$1M&0Ej
                               g$fields$8954$1M&0Ej)
                             (g$bless$7498$1M&0Ej
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8947$1M&0Ej)
                                 g$parent-rtd-code$8949$1M&0Ej
                                 g$uid-code$8951$1M&0Ej
                                 g$sealed?$8952$1M&0Ej
                                 g$opaque?$8953$1M&0Ej
                                 g$fields$8954$1M&0Ej))))
                          ((case-lambda
                             ((g$t$8955$1M&0Ej)
                              ((case-lambda
                                 ((g$ls/false$8956$1M&0Ej)
                                  (if g$ls/false$8956$1M&0Ej
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$8956$1M&0Ej)
                                    ((case-lambda
                                       ((g$t$8957$1M&0Ej)
                                        ((case-lambda
                                           ((g$ls/false$8958$1M&0Ej)
                                            (if g$ls/false$8958$1M&0Ej
                                              (apply
                                                (case-lambda
                                                  ((g$uid$8959$1M&0Ej)
                                                   (list
                                                     'quote
                                                     g$uid$8959$1M&0Ej)))
                                                g$ls/false$8958$1M&0Ej)
                                              ((case-lambda
                                                 ((g$t$8960$1M&0Ej)
                                                  ((case-lambda
                                                     ((g$ls/false$8961$1M&0Ej)
                                                      (if g$ls/false$8961$1M&0Ej
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$8961$1M&0Ej)
                                                        (g$syntax-violation$7646$1M&0Ej
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$8960$1M&0Ej))))
                                                   (g$syntax-dispatch$7535$1M&0Ej
                                                     g$t$8960$1M&0Ej
                                                     '_))))
                                               g$t$8957$1M&0Ej))))
                                         (g$syntax-dispatch$7535$1M&0Ej
                                           g$t$8957$1M&0Ej
                                           '(_ any)))))
                                     g$t$8955$1M&0Ej))))
                               (g$syntax-dispatch$7535$1M&0Ej
                                 g$t$8955$1M&0Ej
                                 '(_)))))
                           (g$get-clause$8778$1M&0Ej
                             'nongenerative
                             g$clause*$8948$1M&0Ej))
                          ((case-lambda
                             ((g$t$8962$1M&0Ej)
                              ((case-lambda
                                 ((g$ls/false$8963$1M&0Ej)
                                  (if g$ls/false$8963$1M&0Ej
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8963$1M&0Ej)
                                    ((case-lambda
                                       ((g$t$8964$1M&0Ej)
                                        ((case-lambda
                                           ((g$ls/false$8965$1M&0Ej)
                                            (if g$ls/false$8965$1M&0Ej
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8965$1M&0Ej)
                                              (g$syntax-violation$7646$1M&0Ej
                                                '#f
                                                '"invalid syntax"
                                                g$t$8964$1M&0Ej))))
                                         (g$syntax-dispatch$7535$1M&0Ej
                                           g$t$8964$1M&0Ej
                                           '_))))
                                     g$t$8962$1M&0Ej))))
                               (g$syntax-dispatch$7535$1M&0Ej
                                 g$t$8962$1M&0Ej
                                 '(_ #(atom #t))))))
                           (g$get-clause$8778$1M&0Ej
                             'sealed
                             g$clause*$8948$1M&0Ej))
                          ((case-lambda
                             ((g$t$8966$1M&0Ej)
                              ((case-lambda
                                 ((g$ls/false$8967$1M&0Ej)
                                  (if g$ls/false$8967$1M&0Ej
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8967$1M&0Ej)
                                    ((case-lambda
                                       ((g$t$8968$1M&0Ej)
                                        ((case-lambda
                                           ((g$ls/false$8969$1M&0Ej)
                                            (if g$ls/false$8969$1M&0Ej
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8969$1M&0Ej)
                                              (g$syntax-violation$7646$1M&0Ej
                                                '#f
                                                '"invalid syntax"
                                                g$t$8968$1M&0Ej))))
                                         (g$syntax-dispatch$7535$1M&0Ej
                                           g$t$8968$1M&0Ej
                                           '_))))
                                     g$t$8966$1M&0Ej))))
                               (g$syntax-dispatch$7535$1M&0Ej
                                 g$t$8966$1M&0Ej
                                 '(_ #(atom #t))))))
                           (g$get-clause$8778$1M&0Ej
                             'opaque
                             g$clause*$8948$1M&0Ej))
                          ((case-lambda
                             ((g$t$8970$1M&0Ej)
                              ((case-lambda
                                 ((g$ls/false$8971$1M&0Ej)
                                  (if g$ls/false$8971$1M&0Ej
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$8972$1M&0Ej)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8950$1M&0Ej
                                             g$field-spec*$8972$1M&0Ej))))
                                      g$ls/false$8971$1M&0Ej)
                                    ((case-lambda
                                       ((g$t$8973$1M&0Ej)
                                        ((case-lambda
                                           ((g$ls/false$8974$1M&0Ej)
                                            (if g$ls/false$8974$1M&0Ej
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$8974$1M&0Ej)
                                              (g$syntax-violation$7646$1M&0Ej
                                                '#f
                                                '"invalid syntax"
                                                g$t$8973$1M&0Ej))))
                                         (g$syntax-dispatch$7535$1M&0Ej
                                           g$t$8973$1M&0Ej
                                           '_))))
                                     g$t$8970$1M&0Ej))))
                               (g$syntax-dispatch$7535$1M&0Ej
                                 g$t$8970$1M&0Ej
                                 '(_ . each-any)))))
                           (g$get-clause$8778$1M&0Ej
                             'fields
                             g$clause*$8948$1M&0Ej)))))))
                  (g$parent-rtd-code$8780$1M&0Ej
                    (case-lambda
                      ((g$clause*$8935$1M&0Ej)
                       ((case-lambda
                          ((g$t$8936$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$8937$1M&0Ej)
                               (if g$ls/false$8937$1M&0Ej
                                 (apply
                                   (case-lambda
                                     ((g$name$8938$1M&0Ej)
                                      (list
                                        'record-type-descriptor
                                        g$name$8938$1M&0Ej)))
                                   g$ls/false$8937$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$8939$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$8940$1M&0Ej)
                                         (if g$ls/false$8940$1M&0Ej
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8941$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$ls/false$8942$1M&0Ej)
                                                        (if g$ls/false$8942$1M&0Ej
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8943$1M&0Ej
                                                                 g$rcd$8944$1M&0Ej)
                                                               g$rtd$8943$1M&0Ej))
                                                            g$ls/false$8942$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$t$8945$1M&0Ej)
                                                              ((case-lambda
                                                                 ((g$ls/false$8946$1M&0Ej)
                                                                  (if g$ls/false$8946$1M&0Ej
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8946$1M&0Ej)
                                                                    (g$syntax-violation$7646$1M&0Ej
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8945$1M&0Ej))))
                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                 g$t$8945$1M&0Ej
                                                                 '#(atom #f)))))
                                                           g$t$8941$1M&0Ej))))
                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                       g$t$8941$1M&0Ej
                                                       '(_ any any)))))
                                                 (g$get-clause$8778$1M&0Ej
                                                   'parent-rtd
                                                   g$clause*$8935$1M&0Ej))))
                                             g$ls/false$8940$1M&0Ej)
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid syntax"
                                             g$t$8939$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$8939$1M&0Ej
                                        '#(atom #f)))))
                                  g$t$8936$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$8936$1M&0Ej
                              '(_ any)))))
                        (g$get-clause$8778$1M&0Ej
                          'parent
                          g$clause*$8935$1M&0Ej)))))
                  (g$parent-rcd-code$8781$1M&0Ej
                    (case-lambda
                      ((g$clause*$8923$1M&0Ej)
                       ((case-lambda
                          ((g$t$8924$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$8925$1M&0Ej)
                               (if g$ls/false$8925$1M&0Ej
                                 (apply
                                   (case-lambda
                                     ((g$name$8926$1M&0Ej)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$8926$1M&0Ej)))
                                   g$ls/false$8925$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$8927$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$8928$1M&0Ej)
                                         (if g$ls/false$8928$1M&0Ej
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8929$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$ls/false$8930$1M&0Ej)
                                                        (if g$ls/false$8930$1M&0Ej
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8931$1M&0Ej
                                                                 g$rcd$8932$1M&0Ej)
                                                               g$rcd$8932$1M&0Ej))
                                                            g$ls/false$8930$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$t$8933$1M&0Ej)
                                                              ((case-lambda
                                                                 ((g$ls/false$8934$1M&0Ej)
                                                                  (if g$ls/false$8934$1M&0Ej
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8934$1M&0Ej)
                                                                    (g$syntax-violation$7646$1M&0Ej
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8933$1M&0Ej))))
                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                 g$t$8933$1M&0Ej
                                                                 '#(atom #f)))))
                                                           g$t$8929$1M&0Ej))))
                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                       g$t$8929$1M&0Ej
                                                       '(_ any any)))))
                                                 (g$get-clause$8778$1M&0Ej
                                                   'parent-rtd
                                                   g$clause*$8923$1M&0Ej))))
                                             g$ls/false$8928$1M&0Ej)
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid syntax"
                                             g$t$8927$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$8927$1M&0Ej
                                        '#(atom #f)))))
                                  g$t$8924$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$8924$1M&0Ej
                              '(_ any)))))
                        (g$get-clause$8778$1M&0Ej
                          'parent
                          g$clause*$8923$1M&0Ej)))))
                  (g$foo-rcd-code$8782$1M&0Ej
                    (case-lambda
                      ((g$clause*$8919$1M&0Ej
                         g$foo-rtd$8920$1M&0Ej
                         g$protocol$8921$1M&0Ej
                         g$parent-rcd-code$8922$1M&0Ej)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$8920$1M&0Ej
                         g$parent-rcd-code$8922$1M&0Ej
                         g$protocol$8921$1M&0Ej))))
                  (g$get-protocol-code$8783$1M&0Ej
                    (case-lambda
                      ((g$clause*$8913$1M&0Ej)
                       ((case-lambda
                          ((g$t$8914$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$8915$1M&0Ej)
                               (if g$ls/false$8915$1M&0Ej
                                 (apply
                                   (case-lambda
                                     ((g$expr$8916$1M&0Ej) g$expr$8916$1M&0Ej))
                                   g$ls/false$8915$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$8917$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$8918$1M&0Ej)
                                         (if g$ls/false$8918$1M&0Ej
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8918$1M&0Ej)
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid syntax"
                                             g$t$8917$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$8917$1M&0Ej
                                        '_))))
                                  g$t$8914$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$8914$1M&0Ej
                              '(_ any)))))
                        (g$get-clause$8778$1M&0Ej
                          'protocol
                          g$clause*$8913$1M&0Ej)))))
                  (g$get-fields$8784$1M&0Ej
                    (case-lambda
                      ((g$clause*$8904$1M&0Ej)
                       ((case-lambda
                          ((g$t$8905$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$8906$1M&0Ej)
                               (if g$ls/false$8906$1M&0Ej
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8906$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$8907$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$8908$1M&0Ej)
                                         (if g$ls/false$8908$1M&0Ej
                                           (apply
                                             (case-lambda
                                               ((g$f*$8909$1M&0Ej)
                                                g$f*$8909$1M&0Ej))
                                             g$ls/false$8908$1M&0Ej)
                                           ((case-lambda
                                              ((g$t$8910$1M&0Ej)
                                               ((case-lambda
                                                  ((g$ls/false$8911$1M&0Ej)
                                                   (if g$ls/false$8911$1M&0Ej
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8912$1M&0Ej)
                                                          (g$get-fields$8784$1M&0Ej
                                                            g$rest$8912$1M&0Ej)))
                                                       g$ls/false$8911$1M&0Ej)
                                                     (g$syntax-violation$7646$1M&0Ej
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8910$1M&0Ej))))
                                                (g$syntax-dispatch$7535$1M&0Ej
                                                  g$t$8910$1M&0Ej
                                                  '(_ . any)))))
                                            g$t$8907$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$8907$1M&0Ej
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8905$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$8905$1M&0Ej
                              '()))))
                        g$clause*$8904$1M&0Ej))))
                  (g$get-mutator-indices$8785$1M&0Ej
                    (case-lambda
                      ((g$fields$8892$1M&0Ej)
                       ((letrec ((g$f$8893$1M&0Ej
                                   (case-lambda
                                     ((g$fields$8894$1M&0Ej g$i$8895$1M&0Ej)
                                      ((case-lambda
                                         ((g$t$8896$1M&0Ej)
                                          ((case-lambda
                                             ((g$ls/false$8897$1M&0Ej)
                                              (if g$ls/false$8897$1M&0Ej
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8897$1M&0Ej)
                                                ((case-lambda
                                                   ((g$t$8898$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$ls/false$8899$1M&0Ej)
                                                        (if g$ls/false$8899$1M&0Ej
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8900$1M&0Ej)
                                                               (cons
                                                                 g$i$8895$1M&0Ej
                                                                 (g$f$8893$1M&0Ej
                                                                   g$rest$8900$1M&0Ej
                                                                   (+ g$i$8895$1M&0Ej
                                                                      '1)))))
                                                            g$ls/false$8899$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$t$8901$1M&0Ej)
                                                              ((case-lambda
                                                                 ((g$ls/false$8902$1M&0Ej)
                                                                  (if g$ls/false$8902$1M&0Ej
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8903$1M&0Ej)
                                                                         (g$f$8893$1M&0Ej
                                                                           g$rest$8903$1M&0Ej
                                                                           (+ g$i$8895$1M&0Ej
                                                                              '1))))
                                                                      g$ls/false$8902$1M&0Ej)
                                                                    (g$syntax-violation$7646$1M&0Ej
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8901$1M&0Ej))))
                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                 g$t$8901$1M&0Ej
                                                                 '(_ . any)))))
                                                           g$t$8898$1M&0Ej))))
                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                       g$t$8898$1M&0Ej
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8896$1M&0Ej))))
                                           (g$syntax-dispatch$7535$1M&0Ej
                                             g$t$8896$1M&0Ej
                                             '()))))
                                       g$fields$8894$1M&0Ej)))))
                          g$f$8893$1M&0Ej)
                        g$fields$8892$1M&0Ej
                        '0))))
                  (g$get-mutators$8786$1M&0Ej
                    (case-lambda
                      ((g$foo$8871$1M&0Ej g$fields$8872$1M&0Ej)
                       (letrec* ((g$gen-name$8873$1M&0Ej
                                   (case-lambda
                                     ((g$x$8891$1M&0Ej)
                                      (g$datum->syntax$7648$1M&0Ej
                                        g$foo$8871$1M&0Ej
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7649$1M&0Ej
                                                g$foo$8871$1M&0Ej))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7649$1M&0Ej
                                                g$x$8891$1M&0Ej))
                                            '"-set!")))))))
                         ((letrec ((g$f$8874$1M&0Ej
                                     (case-lambda
                                       ((g$fields$8875$1M&0Ej)
                                        ((case-lambda
                                           ((g$t$8876$1M&0Ej)
                                            ((case-lambda
                                               ((g$ls/false$8877$1M&0Ej)
                                                (if g$ls/false$8877$1M&0Ej
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8877$1M&0Ej)
                                                  ((case-lambda
                                                     ((g$t$8878$1M&0Ej)
                                                      ((case-lambda
                                                         ((g$ls/false$8879$1M&0Ej)
                                                          (if g$ls/false$8879$1M&0Ej
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8880$1M&0Ej
                                                                   g$accessor$8881$1M&0Ej
                                                                   g$mutator$8882$1M&0Ej
                                                                   g$rest$8883$1M&0Ej)
                                                                 (cons
                                                                   g$mutator$8882$1M&0Ej
                                                                   (g$f$8874$1M&0Ej
                                                                     g$rest$8883$1M&0Ej))))
                                                              g$ls/false$8879$1M&0Ej)
                                                            ((case-lambda
                                                               ((g$t$8884$1M&0Ej)
                                                                ((case-lambda
                                                                   ((g$ls/false$8885$1M&0Ej)
                                                                    (if g$ls/false$8885$1M&0Ej
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8886$1M&0Ej
                                                                             g$rest$8887$1M&0Ej)
                                                                           (cons
                                                                             (g$gen-name$8873$1M&0Ej
                                                                               g$name$8886$1M&0Ej)
                                                                             (g$f$8874$1M&0Ej
                                                                               g$rest$8887$1M&0Ej))))
                                                                        g$ls/false$8885$1M&0Ej)
                                                                      ((case-lambda
                                                                         ((g$t$8888$1M&0Ej)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8889$1M&0Ej)
                                                                              (if g$ls/false$8889$1M&0Ej
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8890$1M&0Ej)
                                                                                     (g$f$8874$1M&0Ej
                                                                                       g$rest$8890$1M&0Ej)))
                                                                                  g$ls/false$8889$1M&0Ej)
                                                                                (g$syntax-violation$7646$1M&0Ej
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8888$1M&0Ej))))
                                                                           (g$syntax-dispatch$7535$1M&0Ej
                                                                             g$t$8888$1M&0Ej
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8884$1M&0Ej))))
                                                                 (g$syntax-dispatch$7535$1M&0Ej
                                                                   g$t$8884$1M&0Ej
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8878$1M&0Ej))))
                                                       (g$syntax-dispatch$7535$1M&0Ej
                                                         g$t$8878$1M&0Ej
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8876$1M&0Ej))))
                                             (g$syntax-dispatch$7535$1M&0Ej
                                               g$t$8876$1M&0Ej
                                               '()))))
                                         g$fields$8875$1M&0Ej)))))
                            g$f$8874$1M&0Ej)
                          g$fields$8872$1M&0Ej)))))
                  (g$get-accessors$8787$1M&0Ej
                    (case-lambda
                      ((g$foo$8837$1M&0Ej g$fields$8838$1M&0Ej)
                       (letrec* ((g$gen-name$8839$1M&0Ej
                                   (case-lambda
                                     ((g$x$8870$1M&0Ej)
                                      (g$datum->syntax$7648$1M&0Ej
                                        g$foo$8837$1M&0Ej
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7649$1M&0Ej
                                                g$foo$8837$1M&0Ej))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7649$1M&0Ej
                                                g$x$8870$1M&0Ej)))))))))
                         (map (case-lambda
                                ((g$field$8840$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$8841$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$8842$1M&0Ej)
                                         (if (if g$ls/false$8842$1M&0Ej
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8843$1M&0Ej
                                                        g$accessor$8844$1M&0Ej
                                                        g$mutator$8845$1M&0Ej)
                                                      (g$id?$7257$1M&0Ej
                                                        g$accessor$8844$1M&0Ej)))
                                                   g$ls/false$8842$1M&0Ej))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8846$1M&0Ej
                                                  g$accessor$8847$1M&0Ej
                                                  g$mutator$8848$1M&0Ej)
                                                g$accessor$8847$1M&0Ej))
                                             g$ls/false$8842$1M&0Ej)
                                           ((case-lambda
                                              ((g$t$8849$1M&0Ej)
                                               ((case-lambda
                                                  ((g$ls/false$8850$1M&0Ej)
                                                   (if (if g$ls/false$8850$1M&0Ej
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8851$1M&0Ej
                                                                  g$accessor$8852$1M&0Ej)
                                                                (g$id?$7257$1M&0Ej
                                                                  g$accessor$8852$1M&0Ej)))
                                                             g$ls/false$8850$1M&0Ej))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8853$1M&0Ej
                                                            g$accessor$8854$1M&0Ej)
                                                          g$accessor$8854$1M&0Ej))
                                                       g$ls/false$8850$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$t$8855$1M&0Ej)
                                                         ((case-lambda
                                                            ((g$ls/false$8856$1M&0Ej)
                                                             (if (if g$ls/false$8856$1M&0Ej
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8857$1M&0Ej)
                                                                          (g$id?$7257$1M&0Ej
                                                                            g$name$8857$1M&0Ej)))
                                                                       g$ls/false$8856$1M&0Ej))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8858$1M&0Ej)
                                                                    (g$gen-name$8839$1M&0Ej
                                                                      g$name$8858$1M&0Ej)))
                                                                 g$ls/false$8856$1M&0Ej)
                                                               ((case-lambda
                                                                  ((g$t$8859$1M&0Ej)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8860$1M&0Ej)
                                                                       (if (if g$ls/false$8860$1M&0Ej
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8861$1M&0Ej)
                                                                                    (g$id?$7257$1M&0Ej
                                                                                      g$name$8861$1M&0Ej)))
                                                                                 g$ls/false$8860$1M&0Ej))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8862$1M&0Ej)
                                                                              (g$gen-name$8839$1M&0Ej
                                                                                g$name$8862$1M&0Ej)))
                                                                           g$ls/false$8860$1M&0Ej)
                                                                         ((case-lambda
                                                                            ((g$t$8863$1M&0Ej)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8864$1M&0Ej)
                                                                                 (if (if g$ls/false$8864$1M&0Ej
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8865$1M&0Ej)
                                                                                              (g$id?$7257$1M&0Ej
                                                                                                g$name$8865$1M&0Ej)))
                                                                                           g$ls/false$8864$1M&0Ej))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8866$1M&0Ej)
                                                                                        (g$gen-name$8839$1M&0Ej
                                                                                          g$name$8866$1M&0Ej)))
                                                                                     g$ls/false$8864$1M&0Ej)
                                                                                   ((case-lambda
                                                                                      ((g$t$8867$1M&0Ej)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8868$1M&0Ej)
                                                                                           (if g$ls/false$8868$1M&0Ej
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8869$1M&0Ej)
                                                                                                  (g$syntax-violation$7646$1M&0Ej
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8840$1M&0Ej)))
                                                                                               g$ls/false$8868$1M&0Ej)
                                                                                             (g$syntax-violation$7646$1M&0Ej
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8867$1M&0Ej))))
                                                                                        (g$syntax-dispatch$7535$1M&0Ej
                                                                                          g$t$8867$1M&0Ej
                                                                                          'any))))
                                                                                    g$t$8863$1M&0Ej))))
                                                                              (g$syntax-dispatch$7535$1M&0Ej
                                                                                g$t$8863$1M&0Ej
                                                                                'any))))
                                                                          g$t$8859$1M&0Ej))))
                                                                    (g$syntax-dispatch$7535$1M&0Ej
                                                                      g$t$8859$1M&0Ej
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8855$1M&0Ej))))
                                                          (g$syntax-dispatch$7535$1M&0Ej
                                                            g$t$8855$1M&0Ej
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8849$1M&0Ej))))
                                                (g$syntax-dispatch$7535$1M&0Ej
                                                  g$t$8849$1M&0Ej
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8841$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$8841$1M&0Ej
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8840$1M&0Ej)))
                              g$fields$8838$1M&0Ej)))))
                  (g$enumerate$8788$1M&0Ej
                    (case-lambda
                      ((g$ls$8833$1M&0Ej)
                       ((letrec ((g$f$8834$1M&0Ej
                                   (case-lambda
                                     ((g$ls$8835$1M&0Ej g$i$8836$1M&0Ej)
                                      (if (null? g$ls$8835$1M&0Ej)
                                        '()
                                        (cons
                                          g$i$8836$1M&0Ej
                                          (g$f$8834$1M&0Ej
                                            (cdr g$ls$8835$1M&0Ej)
                                            (+ g$i$8836$1M&0Ej '1))))))))
                          g$f$8834$1M&0Ej)
                        g$ls$8833$1M&0Ej
                        '0))))
                  (g$do-define-record$8789$1M&0Ej
                    (case-lambda
                      ((g$namespec$8813$1M&0Ej g$clause*$8814$1M&0Ej)
                       ((case-lambda
                          ((g$foo$8815$1M&0Ej)
                           ((case-lambda
                              ((g$foo-rtd$8816$1M&0Ej)
                               ((case-lambda
                                  ((g$foo-rcd$8817$1M&0Ej)
                                   ((case-lambda
                                      ((g$protocol$8818$1M&0Ej)
                                       ((case-lambda
                                          ((g$make-foo$8819$1M&0Ej)
                                           ((case-lambda
                                              ((g$fields$8820$1M&0Ej)
                                               ((case-lambda
                                                  ((g$idx*$8821$1M&0Ej)
                                                   ((case-lambda
                                                      ((g$foo-x*$8822$1M&0Ej)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8823$1M&0Ej)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8824$1M&0Ej)
                                                               ((case-lambda
                                                                  ((g$foo?$8825$1M&0Ej)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8826$1M&0Ej)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8827$1M&0Ej)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8828$1M&0Ej)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7498$1M&0Ej
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8816$1M&0Ej
                                                                                           g$foo-rtd-code$8826$1M&0Ej)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8818$1M&0Ej
                                                                                             g$protocol-code$8828$1M&0Ej)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8817$1M&0Ej
                                                                                               g$foo-rcd-code$8827$1M&0Ej)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8815$1M&0Ej
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8816$1M&0Ej)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8817$1M&0Ej)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8825$1M&0Ej
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8816$1M&0Ej))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8819$1M&0Ej
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8817$1M&0Ej))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8829$1M&0Ej
                                                                                                               g$idx$8830$1M&0Ej)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8829$1M&0Ej
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8816$1M&0Ej
                                                                                                                 g$idx$8830$1M&0Ej))))
                                                                                                          g$foo-x*$8822$1M&0Ej
                                                                                                          g$idx*$8821$1M&0Ej)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8831$1M&0Ej
                                                                                                               g$idx$8832$1M&0Ej)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8831$1M&0Ej
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8816$1M&0Ej
                                                                                                                 g$idx$8832$1M&0Ej))))
                                                                                                          g$set-foo-x!*$8823$1M&0Ej
                                                                                                          g$set-foo-idx*$8824$1M&0Ej)))))))))))))))
                                                                            (g$get-protocol-code$8783$1M&0Ej
                                                                              g$clause*$8814$1M&0Ej))))
                                                                        (g$foo-rcd-code$8782$1M&0Ej
                                                                          g$clause*$8814$1M&0Ej
                                                                          g$foo-rtd$8816$1M&0Ej
                                                                          g$protocol$8818$1M&0Ej
                                                                          (g$parent-rcd-code$8781$1M&0Ej
                                                                            g$clause*$8814$1M&0Ej)))))
                                                                    (g$foo-rtd-code$8779$1M&0Ej
                                                                      g$foo$8815$1M&0Ej
                                                                      g$clause*$8814$1M&0Ej
                                                                      (g$parent-rtd-code$8780$1M&0Ej
                                                                        g$clause*$8814$1M&0Ej)))))
                                                                (g$get-record-predicate-name$8777$1M&0Ej
                                                                  g$namespec$8813$1M&0Ej))))
                                                            (g$get-mutator-indices$8785$1M&0Ej
                                                              g$fields$8820$1M&0Ej))))
                                                        (g$get-mutators$8786$1M&0Ej
                                                          g$foo$8815$1M&0Ej
                                                          g$fields$8820$1M&0Ej))))
                                                    (g$get-accessors$8787$1M&0Ej
                                                      g$foo$8815$1M&0Ej
                                                      g$fields$8820$1M&0Ej))))
                                                (g$enumerate$8788$1M&0Ej
                                                  g$fields$8820$1M&0Ej))))
                                            (g$get-fields$8784$1M&0Ej
                                              g$clause*$8814$1M&0Ej))))
                                        (g$get-record-constructor-name$8776$1M&0Ej
                                          g$namespec$8813$1M&0Ej))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8775$1M&0Ej
                          g$namespec$8813$1M&0Ej)))))
                  (g$verify-clauses$8790$1M&0Ej
                    (case-lambda
                      ((g$x$8795$1M&0Ej g$cls*$8796$1M&0Ej)
                       (letrec* ((g$valid-kwds$8797$1M&0Ej
                                   (map g$bless$7498$1M&0Ej
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8798$1M&0Ej
                                   (case-lambda
                                     ((g$x$8810$1M&0Ej g$ls$8811$1M&0Ej)
                                      (if (pair? g$ls$8811$1M&0Ej)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8812$1M&0Ej)
                                              (if g$t$8812$1M&0Ej
                                                g$t$8812$1M&0Ej
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8798$1M&0Ej
                                                    g$x$8810$1M&0Ej
                                                    (cdr g$ls$8811$1M&0Ej))))))
                                           (g$free-id=?$7261$1M&0Ej
                                             g$x$8810$1M&0Ej
                                             (car g$ls$8811$1M&0Ej))))
                                        '#f)))))
                         ((letrec ((g$f$8799$1M&0Ej
                                     (case-lambda
                                       ((g$cls*$8800$1M&0Ej g$seen*$8801$1M&0Ej)
                                        (if (not (null? g$cls*$8800$1M&0Ej))
                                          ((case-lambda
                                             ((g$t$8802$1M&0Ej)
                                              ((case-lambda
                                                 ((g$ls/false$8803$1M&0Ej)
                                                  (if g$ls/false$8803$1M&0Ej
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8804$1M&0Ej
                                                           g$rest$8805$1M&0Ej)
                                                         (if ((case-lambda
                                                                ((g$t$8806$1M&0Ej)
                                                                 (if g$t$8806$1M&0Ej
                                                                   g$t$8806$1M&0Ej
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8798$1M&0Ej
                                                                            g$kwd$8804$1M&0Ej
                                                                            g$valid-kwds$8797$1M&0Ej))))))
                                                              (not (g$id?$7257$1M&0Ej
                                                                     g$kwd$8804$1M&0Ej)))
                                                           (g$syntax-violation$7646$1M&0Ej
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8804$1M&0Ej)
                                                           (if (g$bound-id-member?$7264$1M&0Ej
                                                                 g$kwd$8804$1M&0Ej
                                                                 g$seen*$8801$1M&0Ej)
                                                             (g$syntax-violation$7646$1M&0Ej
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8795$1M&0Ej
                                                               g$kwd$8804$1M&0Ej)
                                                             (g$f$8799$1M&0Ej
                                                               (cdr g$cls*$8800$1M&0Ej)
                                                               (cons
                                                                 g$kwd$8804$1M&0Ej
                                                                 g$seen*$8801$1M&0Ej))))))
                                                      g$ls/false$8803$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$t$8807$1M&0Ej)
                                                        ((case-lambda
                                                           ((g$ls/false$8808$1M&0Ej)
                                                            (if g$ls/false$8808$1M&0Ej
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8809$1M&0Ej)
                                                                   (g$syntax-violation$7646$1M&0Ej
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8809$1M&0Ej)))
                                                                g$ls/false$8808$1M&0Ej)
                                                              (g$syntax-violation$7646$1M&0Ej
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8807$1M&0Ej))))
                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                           g$t$8807$1M&0Ej
                                                           'any))))
                                                     g$t$8802$1M&0Ej))))
                                               (g$syntax-dispatch$7535$1M&0Ej
                                                 g$t$8802$1M&0Ej
                                                 '(any . any)))))
                                           (car g$cls*$8800$1M&0Ej))
                                          (void))))))
                            g$f$8799$1M&0Ej)
                          g$cls*$8796$1M&0Ej
                          '()))))))
          ((case-lambda
             ((g$t$8791$1M&0Ej)
              ((case-lambda
                 ((g$ls/false$8792$1M&0Ej)
                  (if g$ls/false$8792$1M&0Ej
                    (apply
                      (case-lambda
                        ((g$namespec$8793$1M&0Ej g$clause*$8794$1M&0Ej)
                         (begin
                           (g$verify-clauses$8790$1M&0Ej
                             g$x$8773$1M&0Ej
                             g$clause*$8794$1M&0Ej)
                           (g$do-define-record$8789$1M&0Ej
                             g$namespec$8793$1M&0Ej
                             g$clause*$8794$1M&0Ej))))
                      g$ls/false$8792$1M&0Ej)
                    (g$syntax-violation$7646$1M&0Ej
                      '#f
                      '"invalid syntax"
                      g$t$8791$1M&0Ej))))
               (g$syntax-dispatch$7535$1M&0Ej
                 g$t$8791$1M&0Ej
                 '(_ any . each-any)))))
           g$x$8773$1M&0Ej)))))
   (g$define-condition-type-macro$7530$1M&0Ej
     g$define-condition-type-macro$11018$1M&0Ej
     (case-lambda
       ((g$x$9029$1M&0Ej)
        (letrec* ((g$mkname$9030$1M&0Ej
                    (case-lambda
                      ((g$name$9053$1M&0Ej g$suffix$9054$1M&0Ej)
                       (g$datum->syntax$7648$1M&0Ej
                         g$name$9053$1M&0Ej
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7649$1M&0Ej g$name$9053$1M&0Ej))
                             g$suffix$9054$1M&0Ej)))))))
          ((case-lambda
             ((g$t$9031$1M&0Ej)
              ((case-lambda
                 ((g$ls/false$9032$1M&0Ej)
                  (if (if g$ls/false$9032$1M&0Ej
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9033$1M&0Ej
                                 g$name$9034$1M&0Ej
                                 g$super$9035$1M&0Ej
                                 g$constructor$9036$1M&0Ej
                                 g$predicate$9037$1M&0Ej
                                 g$field*$9038$1M&0Ej
                                 g$accessor*$9039$1M&0Ej)
                               (if (g$id?$7257$1M&0Ej g$name$9034$1M&0Ej)
                                 (if (g$id?$7257$1M&0Ej g$super$9035$1M&0Ej)
                                   (if (g$id?$7257$1M&0Ej
                                         g$constructor$9036$1M&0Ej)
                                     (if (g$id?$7257$1M&0Ej
                                           g$predicate$9037$1M&0Ej)
                                       (if (g$for-all$4995$1M&0Ej
                                             g$id?$7257$1M&0Ej
                                             g$field*$9038$1M&0Ej)
                                         (begin
                                           '#f
                                           (g$for-all$4995$1M&0Ej
                                             g$id?$7257$1M&0Ej
                                             g$accessor*$9039$1M&0Ej))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9032$1M&0Ej))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9040$1M&0Ej
                           g$name$9041$1M&0Ej
                           g$super$9042$1M&0Ej
                           g$constructor$9043$1M&0Ej
                           g$predicate$9044$1M&0Ej
                           g$field*$9045$1M&0Ej
                           g$accessor*$9046$1M&0Ej)
                         ((case-lambda
                            ((g$aux-accessor*$9047$1M&0Ej)
                             (g$bless$7498$1M&0Ej
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9041$1M&0Ej
                                         g$constructor$9043$1M&0Ej
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9042$1M&0Ej)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9048$1M&0Ej
                                                       g$aux$9049$1M&0Ej)
                                                     (list
                                                       'immutable
                                                       g$field$9048$1M&0Ej
                                                       g$aux$9049$1M&0Ej)))
                                                  g$field*$9045$1M&0Ej
                                                  g$aux-accessor*$9047$1M&0Ej))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9044$1M&0Ej
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9041$1M&0Ej)))
                                     (map (case-lambda
                                            ((g$accessor$9050$1M&0Ej
                                               g$aux$9051$1M&0Ej)
                                             (list
                                               'define
                                               g$accessor$9050$1M&0Ej
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9041$1M&0Ej)
                                                 g$aux$9051$1M&0Ej))))
                                          g$accessor*$9046$1M&0Ej
                                          g$aux-accessor*$9047$1M&0Ej)))))))
                          (map (case-lambda ((g$x$9052$1M&0Ej) (gensym)))
                               g$accessor*$9046$1M&0Ej))))
                      g$ls/false$9032$1M&0Ej)
                    (g$syntax-violation$7646$1M&0Ej
                      '#f
                      '"invalid syntax"
                      g$t$9031$1M&0Ej))))
               (g$syntax-dispatch$7535$1M&0Ej
                 g$t$9031$1M&0Ej
                 '(any any any any any . #(each (any any)))))))
           g$x$9029$1M&0Ej)))))
   (g$incorrect-usage-macro$7531$1M&0Ej
     g$incorrect-usage-macro$11019$1M&0Ej
     (case-lambda
       ((g$e$9055$1M&0Ej)
        (g$syntax-violation$7646$1M&0Ej
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9055$1M&0Ej))))
   (g$parameterize-macro$7532$1M&0Ej
     g$parameterize-macro$11020$1M&0Ej
     (case-lambda
       ((g$e$9056$1M&0Ej)
        ((case-lambda
           ((g$t$9057$1M&0Ej)
            ((case-lambda
               ((g$ls/false$9058$1M&0Ej)
                (if g$ls/false$9058$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$b$9059$1M&0Ej g$b*$9060$1M&0Ej)
                       (g$bless$7498$1M&0Ej
                         (cons
                           'let
                           (cons
                             '()
                             (cons g$b$9059$1M&0Ej g$b*$9060$1M&0Ej))))))
                    g$ls/false$9058$1M&0Ej)
                  ((case-lambda
                     ((g$t$9061$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$9062$1M&0Ej)
                          (if g$ls/false$9062$1M&0Ej
                            (apply
                              (case-lambda
                                ((g$olhs*$9063$1M&0Ej
                                   g$orhs*$9064$1M&0Ej
                                   g$b$9065$1M&0Ej
                                   g$b*$9066$1M&0Ej)
                                 ((case-lambda
                                    ((g$lhs*$9067$1M&0Ej g$rhs*$9068$1M&0Ej)
                                     (g$bless$7498$1M&0Ej
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9067$1M&0Ej
                                             g$rhs*$9068$1M&0Ej)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$9069$1M&0Ej
                                                               g$rhs$9070$1M&0Ej)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$9069$1M&0Ej)))
                                                               (list
                                                                 g$lhs$9069$1M&0Ej
                                                                 g$rhs$9070$1M&0Ej)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$9070$1M&0Ej
                                                                   '(t))))))
                                                          g$lhs*$9067$1M&0Ej
                                                          g$rhs*$9068$1M&0Ej)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9065$1M&0Ej
                                                         g$b*$9066$1M&0Ej)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9063$1M&0Ej
                                           g$orhs*$9064$1M&0Ej)))))
                                  (g$generate-temporaries$7636$1M&0Ej
                                    g$olhs*$9063$1M&0Ej)
                                  (g$generate-temporaries$7636$1M&0Ej
                                    g$orhs*$9064$1M&0Ej))))
                              g$ls/false$9062$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$9061$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$9061$1M&0Ej
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9057$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$9057$1M&0Ej
               '(_ () any . each-any)))))
         g$e$9056$1M&0Ej))))
   (g$foreign-call-transformer$7533$1M&0Ej
     g$foreign-call-transformer$11021$1M&0Ej
     (case-lambda
       ((g$e$9071$1M&0Ej g$r$9072$1M&0Ej g$mr$9073$1M&0Ej)
        ((case-lambda
           ((g$t$9074$1M&0Ej)
            ((case-lambda
               ((g$ls/false$9075$1M&0Ej)
                (if g$ls/false$9075$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$name$9076$1M&0Ej g$arg*$9077$1M&0Ej)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7553$1M&0Ej
                             g$name$9076$1M&0Ej
                             g$r$9072$1M&0Ej
                             g$mr$9073$1M&0Ej)
                           (g$chi-expr*$7551$1M&0Ej
                             g$arg*$9077$1M&0Ej
                             g$r$9072$1M&0Ej
                             g$mr$9073$1M&0Ej)))))
                    g$ls/false$9075$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$9074$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$9074$1M&0Ej
               '(_ any . each-any)))))
         g$e$9071$1M&0Ej))))
   (g$convert-pattern$7534$1M&0Ej
     g$convert-pattern$11022$1M&0Ej
     (case-lambda
       ((g$pattern$9078$1M&0Ej g$keys$9079$1M&0Ej)
        (letrec* ((g$cvt*$9080$1M&0Ej
                    (case-lambda
                      ((g$p*$9160$1M&0Ej g$n$9161$1M&0Ej g$ids$9162$1M&0Ej)
                       (if (null? g$p*$9160$1M&0Ej)
                         (values '() g$ids$9162$1M&0Ej)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9080$1M&0Ej
                                (cdr g$p*$9160$1M&0Ej)
                                g$n$9161$1M&0Ej
                                g$ids$9162$1M&0Ej)))
                           (case-lambda
                             ((g$y$9165$1M&0Ej g$ids$9166$1M&0Ej)
                              ((case-lambda
                                 ((g$ids$9167$1M&0Ej g$y$9168$1M&0Ej)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9081$1M&0Ej
                                         (car g$p*$9160$1M&0Ej)
                                         g$n$9161$1M&0Ej
                                         g$ids$9167$1M&0Ej)))
                                    (case-lambda
                                      ((g$x$9171$1M&0Ej g$ids$9172$1M&0Ej)
                                       ((case-lambda
                                          ((g$ids$9173$1M&0Ej g$x$9174$1M&0Ej)
                                           (values
                                             (cons
                                               g$x$9174$1M&0Ej
                                               g$y$9168$1M&0Ej)
                                             g$ids$9173$1M&0Ej)))
                                        g$ids$9172$1M&0Ej
                                        g$x$9171$1M&0Ej))))))
                               g$ids$9166$1M&0Ej
                               g$y$9165$1M&0Ej))))))))
                  (g$cvt$9081$1M&0Ej
                    (case-lambda
                      ((g$p$9082$1M&0Ej g$n$9083$1M&0Ej g$ids$9084$1M&0Ej)
                       ((case-lambda
                          ((g$t$9085$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$9086$1M&0Ej)
                               (if (if g$ls/false$9086$1M&0Ej
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9087$1M&0Ej)
                                            (g$id?$7257$1M&0Ej
                                              g$id$9087$1M&0Ej)))
                                         g$ls/false$9086$1M&0Ej))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9088$1M&0Ej)
                                      (if (g$bound-id-member?$7264$1M&0Ej
                                            g$p$9082$1M&0Ej
                                            g$keys$9079$1M&0Ej)
                                        (values
                                          (vector 'free-id g$p$9082$1M&0Ej)
                                          g$ids$9084$1M&0Ej)
                                        (if (g$free-id=?$7261$1M&0Ej
                                              g$p$9082$1M&0Ej
                                              (g$scheme-stx$7478$1M&0Ej '_))
                                          (values '_ g$ids$9084$1M&0Ej)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9082$1M&0Ej
                                                g$n$9083$1M&0Ej)
                                              g$ids$9084$1M&0Ej))))))
                                   g$ls/false$9086$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$9089$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$9090$1M&0Ej)
                                         (if (if g$ls/false$9090$1M&0Ej
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9091$1M&0Ej
                                                        g$dots$9092$1M&0Ej)
                                                      (g$ellipsis?$7536$1M&0Ej
                                                        g$dots$9092$1M&0Ej)))
                                                   g$ls/false$9090$1M&0Ej))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9093$1M&0Ej
                                                  g$dots$9094$1M&0Ej)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9081$1M&0Ej
                                                       g$p$9093$1M&0Ej
                                                       (+ g$n$9083$1M&0Ej '1)
                                                       g$ids$9084$1M&0Ej)))
                                                  (case-lambda
                                                    ((g$p$9097$1M&0Ej
                                                       g$ids$9098$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$ids$9099$1M&0Ej
                                                           g$p$9100$1M&0Ej)
                                                         (values
                                                           (if (eq? g$p$9100$1M&0Ej
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9100$1M&0Ej))
                                                           g$ids$9099$1M&0Ej)))
                                                      g$ids$9098$1M&0Ej
                                                      g$p$9097$1M&0Ej))))))
                                             g$ls/false$9090$1M&0Ej)
                                           ((case-lambda
                                              ((g$t$9101$1M&0Ej)
                                               ((case-lambda
                                                  ((g$ls/false$9102$1M&0Ej)
                                                   (if (if g$ls/false$9102$1M&0Ej
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9103$1M&0Ej
                                                                  g$dots$9104$1M&0Ej
                                                                  g$ys$9105$1M&0Ej
                                                                  g$z$9106$1M&0Ej)
                                                                (g$ellipsis?$7536$1M&0Ej
                                                                  g$dots$9104$1M&0Ej)))
                                                             g$ls/false$9102$1M&0Ej))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9107$1M&0Ej
                                                            g$dots$9108$1M&0Ej
                                                            g$ys$9109$1M&0Ej
                                                            g$z$9110$1M&0Ej)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9081$1M&0Ej
                                                                 g$z$9110$1M&0Ej
                                                                 g$n$9083$1M&0Ej
                                                                 g$ids$9084$1M&0Ej)))
                                                            (case-lambda
                                                              ((g$z$9113$1M&0Ej
                                                                 g$ids$9114$1M&0Ej)
                                                               ((case-lambda
                                                                  ((g$ids$9115$1M&0Ej
                                                                     g$z$9116$1M&0Ej)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9080$1M&0Ej
                                                                          g$ys$9109$1M&0Ej
                                                                          g$n$9083$1M&0Ej
                                                                          g$ids$9115$1M&0Ej)))
                                                                     (case-lambda
                                                                       ((g$ys$9119$1M&0Ej
                                                                          g$ids$9120$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$ids$9121$1M&0Ej
                                                                              g$ys$9122$1M&0Ej)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9081$1M&0Ej
                                                                                   g$x$9107$1M&0Ej
                                                                                   (+ g$n$9083$1M&0Ej
                                                                                      '1)
                                                                                   g$ids$9121$1M&0Ej)))
                                                                              (case-lambda
                                                                                ((g$x$9125$1M&0Ej
                                                                                   g$ids$9126$1M&0Ej)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9127$1M&0Ej
                                                                                       g$x$9128$1M&0Ej)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9128$1M&0Ej
                                                                                         (reverse
                                                                                           g$ys$9122$1M&0Ej)
                                                                                         g$z$9116$1M&0Ej)
                                                                                       g$ids$9127$1M&0Ej)))
                                                                                  g$ids$9126$1M&0Ej
                                                                                  g$x$9125$1M&0Ej))))))
                                                                         g$ids$9120$1M&0Ej
                                                                         g$ys$9119$1M&0Ej))))))
                                                                g$ids$9114$1M&0Ej
                                                                g$z$9113$1M&0Ej))))))
                                                       g$ls/false$9102$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$t$9129$1M&0Ej)
                                                         ((case-lambda
                                                            ((g$ls/false$9130$1M&0Ej)
                                                             (if g$ls/false$9130$1M&0Ej
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9131$1M&0Ej
                                                                      g$y$9132$1M&0Ej)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9081$1M&0Ej
                                                                           g$y$9132$1M&0Ej
                                                                           g$n$9083$1M&0Ej
                                                                           g$ids$9084$1M&0Ej)))
                                                                      (case-lambda
                                                                        ((g$y$9135$1M&0Ej
                                                                           g$ids$9136$1M&0Ej)
                                                                         ((case-lambda
                                                                            ((g$ids$9137$1M&0Ej
                                                                               g$y$9138$1M&0Ej)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9081$1M&0Ej
                                                                                    g$x$9131$1M&0Ej
                                                                                    g$n$9083$1M&0Ej
                                                                                    g$ids$9137$1M&0Ej)))
                                                                               (case-lambda
                                                                                 ((g$x$9141$1M&0Ej
                                                                                    g$ids$9142$1M&0Ej)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9143$1M&0Ej
                                                                                        g$x$9144$1M&0Ej)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9144$1M&0Ej
                                                                                          g$y$9138$1M&0Ej)
                                                                                        g$ids$9143$1M&0Ej)))
                                                                                   g$ids$9142$1M&0Ej
                                                                                   g$x$9141$1M&0Ej))))))
                                                                          g$ids$9136$1M&0Ej
                                                                          g$y$9135$1M&0Ej))))))
                                                                 g$ls/false$9130$1M&0Ej)
                                                               ((case-lambda
                                                                  ((g$t$9145$1M&0Ej)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9146$1M&0Ej)
                                                                       (if g$ls/false$9146$1M&0Ej
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9084$1M&0Ej)))
                                                                           g$ls/false$9146$1M&0Ej)
                                                                         ((case-lambda
                                                                            ((g$t$9147$1M&0Ej)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9148$1M&0Ej)
                                                                                 (if (if g$ls/false$9148$1M&0Ej
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9149$1M&0Ej)
                                                                                              (not (g$stx?$7229$1M&0Ej
                                                                                                     g$p$9149$1M&0Ej))))
                                                                                           g$ls/false$9148$1M&0Ej))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9150$1M&0Ej)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9081$1M&0Ej
                                                                                               g$p$9150$1M&0Ej
                                                                                               g$n$9083$1M&0Ej
                                                                                               g$ids$9084$1M&0Ej)))
                                                                                          (case-lambda
                                                                                            ((g$p$9153$1M&0Ej
                                                                                               g$ids$9154$1M&0Ej)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9155$1M&0Ej
                                                                                                   g$p$9156$1M&0Ej)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9156$1M&0Ej)
                                                                                                   g$ids$9155$1M&0Ej)))
                                                                                              g$ids$9154$1M&0Ej
                                                                                              g$p$9153$1M&0Ej))))))
                                                                                     g$ls/false$9148$1M&0Ej)
                                                                                   ((case-lambda
                                                                                      ((g$t$9157$1M&0Ej)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9158$1M&0Ej)
                                                                                           (if g$ls/false$9158$1M&0Ej
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9159$1M&0Ej)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7268$1M&0Ej
                                                                                                        g$datum$9159$1M&0Ej))
                                                                                                    g$ids$9084$1M&0Ej)))
                                                                                               g$ls/false$9158$1M&0Ej)
                                                                                             (g$syntax-violation$7646$1M&0Ej
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9157$1M&0Ej))))
                                                                                        (g$syntax-dispatch$7535$1M&0Ej
                                                                                          g$t$9157$1M&0Ej
                                                                                          'any))))
                                                                                    g$t$9147$1M&0Ej))))
                                                                              (g$syntax-dispatch$7535$1M&0Ej
                                                                                g$t$9147$1M&0Ej
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9145$1M&0Ej))))
                                                                    (g$syntax-dispatch$7535$1M&0Ej
                                                                      g$t$9145$1M&0Ej
                                                                      '()))))
                                                                g$t$9129$1M&0Ej))))
                                                          (g$syntax-dispatch$7535$1M&0Ej
                                                            g$t$9129$1M&0Ej
                                                            '(any . any)))))
                                                      g$t$9101$1M&0Ej))))
                                                (g$syntax-dispatch$7535$1M&0Ej
                                                  g$t$9101$1M&0Ej
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9089$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$9089$1M&0Ej
                                        '(any any)))))
                                  g$t$9085$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$9085$1M&0Ej
                              'any))))
                        g$p$9082$1M&0Ej)))))
          (g$cvt$9081$1M&0Ej g$pattern$9078$1M&0Ej '0 '())))))
   (g$syntax-dispatch$7535$1M&0Ej
     g$syntax-dispatch$11023$1M&0Ej
     (case-lambda
       ((g$e$9175$1M&0Ej g$p$9176$1M&0Ej)
        (letrec* ((g$stx^$9177$1M&0Ej
                    (case-lambda
                      ((g$e$9285$1M&0Ej
                         g$m*$9286$1M&0Ej
                         g$s*$9287$1M&0Ej
                         g$ae*$9288$1M&0Ej)
                       (if (if (null? g$m*$9286$1M&0Ej)
                             (if (null? g$s*$9287$1M&0Ej)
                               (begin '#f (null? g$ae*$9288$1M&0Ej))
                               '#f)
                             '#f)
                         g$e$9285$1M&0Ej
                         (g$mkstx$7245$1M&0Ej
                           g$e$9285$1M&0Ej
                           g$m*$9286$1M&0Ej
                           g$s*$9287$1M&0Ej
                           g$ae*$9288$1M&0Ej)))))
                  (g$match-each$9178$1M&0Ej
                    (case-lambda
                      ((g$e$9269$1M&0Ej
                         g$p$9270$1M&0Ej
                         g$m*$9271$1M&0Ej
                         g$s*$9272$1M&0Ej
                         g$ae*$9273$1M&0Ej)
                       (if (pair? g$e$9269$1M&0Ej)
                         ((case-lambda
                            ((g$first$9274$1M&0Ej)
                             (if g$first$9274$1M&0Ej
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9275$1M&0Ej)
                                     (if g$rest$9275$1M&0Ej
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9274$1M&0Ej
                                           g$rest$9275$1M&0Ej))
                                       '#f)))
                                  (g$match-each$9178$1M&0Ej
                                    (cdr g$e$9269$1M&0Ej)
                                    g$p$9270$1M&0Ej
                                    g$m*$9271$1M&0Ej
                                    g$s*$9272$1M&0Ej
                                    g$ae*$9273$1M&0Ej)))
                               '#f)))
                          (g$match$9184$1M&0Ej
                            (car g$e$9269$1M&0Ej)
                            g$p$9270$1M&0Ej
                            g$m*$9271$1M&0Ej
                            g$s*$9272$1M&0Ej
                            g$ae*$9273$1M&0Ej
                            '()))
                         (if (null? g$e$9269$1M&0Ej)
                           '()
                           (if (g$stx?$7229$1M&0Ej g$e$9269$1M&0Ej)
                             (if (not (g$top-marked?$7195$1M&0Ej
                                        g$m*$9271$1M&0Ej))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7244$1M&0Ej
                                        g$m*$9271$1M&0Ej
                                        g$s*$9272$1M&0Ej
                                        g$ae*$9273$1M&0Ej
                                        g$e$9269$1M&0Ej)))
                                   (case-lambda
                                     ((g$m*$9279$1M&0Ej
                                        g$s*$9280$1M&0Ej
                                        g$ae*$9281$1M&0Ej)
                                      ((case-lambda
                                         ((g$ae*$9282$1M&0Ej
                                            g$s*$9283$1M&0Ej
                                            g$m*$9284$1M&0Ej)
                                          (g$match-each$9178$1M&0Ej
                                            (g$stx-expr$7231$1M&0Ej
                                              g$e$9269$1M&0Ej)
                                            g$p$9270$1M&0Ej
                                            g$m*$9284$1M&0Ej
                                            g$s*$9283$1M&0Ej
                                            g$ae*$9282$1M&0Ej)))
                                       g$ae*$9281$1M&0Ej
                                       g$s*$9280$1M&0Ej
                                       g$m*$9279$1M&0Ej)))))
                               '#f)
                             (if (annotation? g$e$9269$1M&0Ej)
                               (g$match-each$9178$1M&0Ej
                                 (annotation-expression g$e$9269$1M&0Ej)
                                 g$p$9270$1M&0Ej
                                 g$m*$9271$1M&0Ej
                                 g$s*$9272$1M&0Ej
                                 g$ae*$9273$1M&0Ej)
                               '#f)))))))
                  (g$match-each+$9179$1M&0Ej
                    (case-lambda
                      ((g$e$9237$1M&0Ej
                         g$x-pat$9238$1M&0Ej
                         g$y-pat$9239$1M&0Ej
                         g$z-pat$9240$1M&0Ej
                         g$m*$9241$1M&0Ej
                         g$s*$9242$1M&0Ej
                         g$ae*$9243$1M&0Ej
                         g$r$9244$1M&0Ej)
                       ((letrec ((g$f$9245$1M&0Ej
                                   (case-lambda
                                     ((g$e$9246$1M&0Ej
                                        g$m*$9247$1M&0Ej
                                        g$s*$9248$1M&0Ej
                                        g$ae*$9249$1M&0Ej)
                                      (if (pair? g$e$9246$1M&0Ej)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9245$1M&0Ej
                                               (cdr g$e$9246$1M&0Ej)
                                               g$m*$9247$1M&0Ej
                                               g$s*$9248$1M&0Ej
                                               g$ae*$9249$1M&0Ej)))
                                          (case-lambda
                                            ((g$xr*$9253$1M&0Ej
                                               g$y-pat$9254$1M&0Ej
                                               g$r$9255$1M&0Ej)
                                             ((case-lambda
                                                ((g$r$9256$1M&0Ej
                                                   g$y-pat$9257$1M&0Ej
                                                   g$xr*$9258$1M&0Ej)
                                                 (if g$r$9256$1M&0Ej
                                                   (if (null?
                                                         g$y-pat$9257$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$xr$9259$1M&0Ej)
                                                         (if g$xr$9259$1M&0Ej
                                                           (values
                                                             (cons
                                                               g$xr$9259$1M&0Ej
                                                               g$xr*$9258$1M&0Ej)
                                                             g$y-pat$9257$1M&0Ej
                                                             g$r$9256$1M&0Ej)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9184$1M&0Ej
                                                        (car g$e$9246$1M&0Ej)
                                                        g$x-pat$9238$1M&0Ej
                                                        g$m*$9247$1M&0Ej
                                                        g$s*$9248$1M&0Ej
                                                        g$ae*$9249$1M&0Ej
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9257$1M&0Ej)
                                                       (g$match$9184$1M&0Ej
                                                         (car g$e$9246$1M&0Ej)
                                                         (car g$y-pat$9257$1M&0Ej)
                                                         g$m*$9247$1M&0Ej
                                                         g$s*$9248$1M&0Ej
                                                         g$ae*$9249$1M&0Ej
                                                         g$r$9256$1M&0Ej)))
                                                   (values '#f '#f '#f))))
                                              g$r$9255$1M&0Ej
                                              g$y-pat$9254$1M&0Ej
                                              g$xr*$9253$1M&0Ej))))
                                        (if (g$stx?$7229$1M&0Ej g$e$9246$1M&0Ej)
                                          (if (g$top-marked?$7195$1M&0Ej
                                                g$m*$9247$1M&0Ej)
                                            (values
                                              '()
                                              g$y-pat$9239$1M&0Ej
                                              (g$match$9184$1M&0Ej
                                                g$e$9246$1M&0Ej
                                                g$z-pat$9240$1M&0Ej
                                                g$m*$9247$1M&0Ej
                                                g$s*$9248$1M&0Ej
                                                g$ae*$9249$1M&0Ej
                                                g$r$9244$1M&0Ej))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7244$1M&0Ej
                                                   g$m*$9247$1M&0Ej
                                                   g$s*$9248$1M&0Ej
                                                   g$ae*$9249$1M&0Ej
                                                   g$e$9246$1M&0Ej)))
                                              (case-lambda
                                                ((g$m*$9263$1M&0Ej
                                                   g$s*$9264$1M&0Ej
                                                   g$ae*$9265$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$ae*$9266$1M&0Ej
                                                       g$s*$9267$1M&0Ej
                                                       g$m*$9268$1M&0Ej)
                                                     (g$f$9245$1M&0Ej
                                                       (g$stx-expr$7231$1M&0Ej
                                                         g$e$9246$1M&0Ej)
                                                       g$m*$9268$1M&0Ej
                                                       g$s*$9267$1M&0Ej
                                                       g$ae*$9266$1M&0Ej)))
                                                  g$ae*$9265$1M&0Ej
                                                  g$s*$9264$1M&0Ej
                                                  g$m*$9263$1M&0Ej)))))
                                          (if (annotation? g$e$9246$1M&0Ej)
                                            (g$f$9245$1M&0Ej
                                              (annotation-expression
                                                g$e$9246$1M&0Ej)
                                              g$m*$9247$1M&0Ej
                                              g$s*$9248$1M&0Ej
                                              g$ae*$9249$1M&0Ej)
                                            (values
                                              '()
                                              g$y-pat$9239$1M&0Ej
                                              (g$match$9184$1M&0Ej
                                                g$e$9246$1M&0Ej
                                                g$z-pat$9240$1M&0Ej
                                                g$m*$9247$1M&0Ej
                                                g$s*$9248$1M&0Ej
                                                g$ae*$9249$1M&0Ej
                                                g$r$9244$1M&0Ej)))))))))
                          g$f$9245$1M&0Ej)
                        g$e$9237$1M&0Ej
                        g$m*$9241$1M&0Ej
                        g$s*$9242$1M&0Ej
                        g$ae*$9243$1M&0Ej))))
                  (g$match-each-any$9180$1M&0Ej
                    (case-lambda
                      ((g$e$9223$1M&0Ej
                         g$m*$9224$1M&0Ej
                         g$s*$9225$1M&0Ej
                         g$ae*$9226$1M&0Ej)
                       (if (pair? g$e$9223$1M&0Ej)
                         ((case-lambda
                            ((g$l$9227$1M&0Ej)
                             (if g$l$9227$1M&0Ej
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9177$1M&0Ej
                                     (car g$e$9223$1M&0Ej)
                                     g$m*$9224$1M&0Ej
                                     g$s*$9225$1M&0Ej
                                     g$ae*$9226$1M&0Ej)
                                   g$l$9227$1M&0Ej))
                               '#f)))
                          (g$match-each-any$9180$1M&0Ej
                            (cdr g$e$9223$1M&0Ej)
                            g$m*$9224$1M&0Ej
                            g$s*$9225$1M&0Ej
                            g$ae*$9226$1M&0Ej))
                         (if (null? g$e$9223$1M&0Ej)
                           '()
                           (if (g$stx?$7229$1M&0Ej g$e$9223$1M&0Ej)
                             (if (not (g$top-marked?$7195$1M&0Ej
                                        g$m*$9224$1M&0Ej))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7244$1M&0Ej
                                        g$m*$9224$1M&0Ej
                                        g$s*$9225$1M&0Ej
                                        g$ae*$9226$1M&0Ej
                                        g$e$9223$1M&0Ej)))
                                   (case-lambda
                                     ((g$m*$9231$1M&0Ej
                                        g$s*$9232$1M&0Ej
                                        g$ae*$9233$1M&0Ej)
                                      ((case-lambda
                                         ((g$ae*$9234$1M&0Ej
                                            g$s*$9235$1M&0Ej
                                            g$m*$9236$1M&0Ej)
                                          (g$match-each-any$9180$1M&0Ej
                                            (g$stx-expr$7231$1M&0Ej
                                              g$e$9223$1M&0Ej)
                                            g$m*$9236$1M&0Ej
                                            g$s*$9235$1M&0Ej
                                            g$ae*$9234$1M&0Ej)))
                                       g$ae*$9233$1M&0Ej
                                       g$s*$9232$1M&0Ej
                                       g$m*$9231$1M&0Ej)))))
                               '#f)
                             (if (annotation? g$e$9223$1M&0Ej)
                               (g$match-each-any$9180$1M&0Ej
                                 (annotation-expression g$e$9223$1M&0Ej)
                                 g$m*$9224$1M&0Ej
                                 g$s*$9225$1M&0Ej
                                 g$ae*$9226$1M&0Ej)
                               '#f)))))))
                  (g$match-empty$9181$1M&0Ej
                    (case-lambda
                      ((g$p$9220$1M&0Ej g$r$9221$1M&0Ej)
                       (if (null? g$p$9220$1M&0Ej)
                         g$r$9221$1M&0Ej
                         (if (eq? g$p$9220$1M&0Ej '_)
                           g$r$9221$1M&0Ej
                           (if (eq? g$p$9220$1M&0Ej 'any)
                             (cons '() g$r$9221$1M&0Ej)
                             (if (pair? g$p$9220$1M&0Ej)
                               (g$match-empty$9181$1M&0Ej
                                 (car g$p$9220$1M&0Ej)
                                 (g$match-empty$9181$1M&0Ej
                                   (cdr g$p$9220$1M&0Ej)
                                   g$r$9221$1M&0Ej))
                               (if (eq? g$p$9220$1M&0Ej 'each-any)
                                 (cons '() g$r$9221$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$9222$1M&0Ej)
                                     (if (g$memv$4990$1M&0Ej
                                           g$t$9222$1M&0Ej
                                           '(each))
                                       (g$match-empty$9181$1M&0Ej
                                         (vector-ref g$p$9220$1M&0Ej '1)
                                         g$r$9221$1M&0Ej)
                                       (if (g$memv$4990$1M&0Ej
                                             g$t$9222$1M&0Ej
                                             '(each+))
                                         (g$match-empty$9181$1M&0Ej
                                           (vector-ref g$p$9220$1M&0Ej '1)
                                           (g$match-empty$9181$1M&0Ej
                                             (reverse
                                               (vector-ref g$p$9220$1M&0Ej '2))
                                             (g$match-empty$9181$1M&0Ej
                                               (vector-ref g$p$9220$1M&0Ej '3)
                                               g$r$9221$1M&0Ej)))
                                         (if (g$memv$4990$1M&0Ej
                                               g$t$9222$1M&0Ej
                                               '(free-id atom))
                                           g$r$9221$1M&0Ej
                                           (if (g$memv$4990$1M&0Ej
                                                 g$t$9222$1M&0Ej
                                                 '(scheme-id atom))
                                             g$r$9221$1M&0Ej
                                             (if (g$memv$4990$1M&0Ej
                                                   g$t$9222$1M&0Ej
                                                   '(vector))
                                               (g$match-empty$9181$1M&0Ej
                                                 (vector-ref g$p$9220$1M&0Ej '1)
                                                 g$r$9221$1M&0Ej)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9220$1M&0Ej))))))))
                                  (vector-ref g$p$9220$1M&0Ej '0))))))))))
                  (g$combine$9182$1M&0Ej
                    (case-lambda
                      ((g$r*$9218$1M&0Ej g$r$9219$1M&0Ej)
                       (if (null? (car g$r*$9218$1M&0Ej))
                         g$r$9219$1M&0Ej
                         (cons
                           (map car g$r*$9218$1M&0Ej)
                           (g$combine$9182$1M&0Ej
                             (map cdr g$r*$9218$1M&0Ej)
                             g$r$9219$1M&0Ej))))))
                  (g$match*$9183$1M&0Ej
                    (case-lambda
                      ((g$e$9200$1M&0Ej
                         g$p$9201$1M&0Ej
                         g$m*$9202$1M&0Ej
                         g$s*$9203$1M&0Ej
                         g$ae*$9204$1M&0Ej
                         g$r$9205$1M&0Ej)
                       (if (null? g$p$9201$1M&0Ej)
                         (if (null? g$e$9200$1M&0Ej)
                           (begin '#f g$r$9205$1M&0Ej)
                           '#f)
                         (if (pair? g$p$9201$1M&0Ej)
                           (if (pair? g$e$9200$1M&0Ej)
                             (begin
                               '#f
                               (g$match$9184$1M&0Ej
                                 (car g$e$9200$1M&0Ej)
                                 (car g$p$9201$1M&0Ej)
                                 g$m*$9202$1M&0Ej
                                 g$s*$9203$1M&0Ej
                                 g$ae*$9204$1M&0Ej
                                 (g$match$9184$1M&0Ej
                                   (cdr g$e$9200$1M&0Ej)
                                   (cdr g$p$9201$1M&0Ej)
                                   g$m*$9202$1M&0Ej
                                   g$s*$9203$1M&0Ej
                                   g$ae*$9204$1M&0Ej
                                   g$r$9205$1M&0Ej)))
                             '#f)
                           (if (eq? g$p$9201$1M&0Ej 'each-any)
                             ((case-lambda
                                ((g$l$9206$1M&0Ej)
                                 (if g$l$9206$1M&0Ej
                                   (begin
                                     '#f
                                     (cons g$l$9206$1M&0Ej g$r$9205$1M&0Ej))
                                   '#f)))
                              (g$match-each-any$9180$1M&0Ej
                                g$e$9200$1M&0Ej
                                g$m*$9202$1M&0Ej
                                g$s*$9203$1M&0Ej
                                g$ae*$9204$1M&0Ej))
                             ((case-lambda
                                ((g$t$9207$1M&0Ej)
                                 (if (g$memv$4990$1M&0Ej
                                       g$t$9207$1M&0Ej
                                       '(each))
                                   (if (null? g$e$9200$1M&0Ej)
                                     (g$match-empty$9181$1M&0Ej
                                       (vector-ref g$p$9201$1M&0Ej '1)
                                       g$r$9205$1M&0Ej)
                                     ((case-lambda
                                        ((g$r*$9208$1M&0Ej)
                                         (if g$r*$9208$1M&0Ej
                                           (begin
                                             '#f
                                             (g$combine$9182$1M&0Ej
                                               g$r*$9208$1M&0Ej
                                               g$r$9205$1M&0Ej))
                                           '#f)))
                                      (g$match-each$9178$1M&0Ej
                                        g$e$9200$1M&0Ej
                                        (vector-ref g$p$9201$1M&0Ej '1)
                                        g$m*$9202$1M&0Ej
                                        g$s*$9203$1M&0Ej
                                        g$ae*$9204$1M&0Ej)))
                                   (if (g$memv$4990$1M&0Ej
                                         g$t$9207$1M&0Ej
                                         '(free-id))
                                     (if (symbol? g$e$9200$1M&0Ej)
                                       (if (g$top-marked?$7195$1M&0Ej
                                             g$m*$9202$1M&0Ej)
                                         (if (g$free-id=?$7261$1M&0Ej
                                               (g$stx^$9177$1M&0Ej
                                                 g$e$9200$1M&0Ej
                                                 g$m*$9202$1M&0Ej
                                                 g$s*$9203$1M&0Ej
                                                 g$ae*$9204$1M&0Ej)
                                               (vector-ref g$p$9201$1M&0Ej '1))
                                           (begin '#f g$r$9205$1M&0Ej)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (g$memv$4990$1M&0Ej
                                           g$t$9207$1M&0Ej
                                           '(scheme-id))
                                       (if (symbol? g$e$9200$1M&0Ej)
                                         (if (g$top-marked?$7195$1M&0Ej
                                               g$m*$9202$1M&0Ej)
                                           (if (g$free-id=?$7261$1M&0Ej
                                                 (g$stx^$9177$1M&0Ej
                                                   g$e$9200$1M&0Ej
                                                   g$m*$9202$1M&0Ej
                                                   g$s*$9203$1M&0Ej
                                                   g$ae*$9204$1M&0Ej)
                                                 (g$scheme-stx$7478$1M&0Ej
                                                   (vector-ref
                                                     g$p$9201$1M&0Ej
                                                     '1)))
                                             (begin '#f g$r$9205$1M&0Ej)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (g$memv$4990$1M&0Ej
                                             g$t$9207$1M&0Ej
                                             '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9179$1M&0Ej
                                                g$e$9200$1M&0Ej
                                                (vector-ref g$p$9201$1M&0Ej '1)
                                                (vector-ref g$p$9201$1M&0Ej '2)
                                                (vector-ref g$p$9201$1M&0Ej '3)
                                                g$m*$9202$1M&0Ej
                                                g$s*$9203$1M&0Ej
                                                g$ae*$9204$1M&0Ej
                                                g$r$9205$1M&0Ej)))
                                           (case-lambda
                                             ((g$xr*$9212$1M&0Ej
                                                g$y-pat$9213$1M&0Ej
                                                g$r$9214$1M&0Ej)
                                              ((case-lambda
                                                 ((g$r$9215$1M&0Ej
                                                    g$y-pat$9216$1M&0Ej
                                                    g$xr*$9217$1M&0Ej)
                                                  (if g$r$9215$1M&0Ej
                                                    (if (null?
                                                          g$y-pat$9216$1M&0Ej)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9217$1M&0Ej)
                                                          (g$match-empty$9181$1M&0Ej
                                                            (vector-ref
                                                              g$p$9201$1M&0Ej
                                                              '1)
                                                            g$r$9215$1M&0Ej)
                                                          (g$combine$9182$1M&0Ej
                                                            g$xr*$9217$1M&0Ej
                                                            g$r$9215$1M&0Ej)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9214$1M&0Ej
                                               g$y-pat$9213$1M&0Ej
                                               g$xr*$9212$1M&0Ej))))
                                         (if (g$memv$4990$1M&0Ej
                                               g$t$9207$1M&0Ej
                                               '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9201$1M&0Ej '1)
                                                 (g$strip$7267$1M&0Ej
                                                   g$e$9200$1M&0Ej
                                                   g$m*$9202$1M&0Ej))
                                             (begin '#f g$r$9205$1M&0Ej)
                                             '#f)
                                           (if (g$memv$4990$1M&0Ej
                                                 g$t$9207$1M&0Ej
                                                 '(vector))
                                             (if (vector? g$e$9200$1M&0Ej)
                                               (begin
                                                 '#f
                                                 (g$match$9184$1M&0Ej
                                                   (vector->list
                                                     g$e$9200$1M&0Ej)
                                                   (vector-ref
                                                     g$p$9201$1M&0Ej
                                                     '1)
                                                   g$m*$9202$1M&0Ej
                                                   g$s*$9203$1M&0Ej
                                                   g$ae*$9204$1M&0Ej
                                                   g$r$9205$1M&0Ej))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9201$1M&0Ej)))))))))
                              (vector-ref g$p$9201$1M&0Ej '0))))))))
                  (g$match$9184$1M&0Ej
                    (case-lambda
                      ((g$e$9185$1M&0Ej
                         g$p$9186$1M&0Ej
                         g$m*$9187$1M&0Ej
                         g$s*$9188$1M&0Ej
                         g$ae*$9189$1M&0Ej
                         g$r$9190$1M&0Ej)
                       (if (not g$r$9190$1M&0Ej)
                         '#f
                         (if (eq? g$p$9186$1M&0Ej '_)
                           g$r$9190$1M&0Ej
                           (if (eq? g$p$9186$1M&0Ej 'any)
                             (cons
                               (g$stx^$9177$1M&0Ej
                                 g$e$9185$1M&0Ej
                                 g$m*$9187$1M&0Ej
                                 g$s*$9188$1M&0Ej
                                 g$ae*$9189$1M&0Ej)
                               g$r$9190$1M&0Ej)
                             (if (g$stx?$7229$1M&0Ej g$e$9185$1M&0Ej)
                               (if (not (g$top-marked?$7195$1M&0Ej
                                          g$m*$9187$1M&0Ej))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7244$1M&0Ej
                                          g$m*$9187$1M&0Ej
                                          g$s*$9188$1M&0Ej
                                          g$ae*$9189$1M&0Ej
                                          g$e$9185$1M&0Ej)))
                                     (case-lambda
                                       ((g$m*$9194$1M&0Ej
                                          g$s*$9195$1M&0Ej
                                          g$ae*$9196$1M&0Ej)
                                        ((case-lambda
                                           ((g$ae*$9197$1M&0Ej
                                              g$s*$9198$1M&0Ej
                                              g$m*$9199$1M&0Ej)
                                            (g$match$9184$1M&0Ej
                                              (g$stx-expr$7231$1M&0Ej
                                                g$e$9185$1M&0Ej)
                                              g$p$9186$1M&0Ej
                                              g$m*$9199$1M&0Ej
                                              g$s*$9198$1M&0Ej
                                              g$ae*$9197$1M&0Ej
                                              g$r$9190$1M&0Ej)))
                                         g$ae*$9196$1M&0Ej
                                         g$s*$9195$1M&0Ej
                                         g$m*$9194$1M&0Ej)))))
                                 '#f)
                               (if (annotation? g$e$9185$1M&0Ej)
                                 (g$match$9184$1M&0Ej
                                   (annotation-expression g$e$9185$1M&0Ej)
                                   g$p$9186$1M&0Ej
                                   g$m*$9187$1M&0Ej
                                   g$s*$9188$1M&0Ej
                                   g$ae*$9189$1M&0Ej
                                   g$r$9190$1M&0Ej)
                                 (g$match*$9183$1M&0Ej
                                   g$e$9185$1M&0Ej
                                   g$p$9186$1M&0Ej
                                   g$m*$9187$1M&0Ej
                                   g$s*$9188$1M&0Ej
                                   g$ae*$9189$1M&0Ej
                                   g$r$9190$1M&0Ej))))))))))
          (g$match$9184$1M&0Ej
            g$e$9175$1M&0Ej
            g$p$9176$1M&0Ej
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7536$1M&0Ej
     g$ellipsis?$11024$1M&0Ej
     (case-lambda
       ((g$x$9289$1M&0Ej)
        (if (g$id?$7257$1M&0Ej g$x$9289$1M&0Ej)
          (begin
            '#f
            (g$free-id=?$7261$1M&0Ej
              g$x$9289$1M&0Ej
              (g$scheme-stx$7478$1M&0Ej '...)))
          '#f))))
   (g$underscore?$7537$1M&0Ej
     g$underscore?$11025$1M&0Ej
     (case-lambda
       ((g$x$9290$1M&0Ej)
        (if (g$id?$7257$1M&0Ej g$x$9290$1M&0Ej)
          (begin
            '#f
            (g$free-id=?$7261$1M&0Ej
              g$x$9290$1M&0Ej
              (g$scheme-stx$7478$1M&0Ej '_)))
          '#f))))
   (g$verify-literals$7538$1M&0Ej
     g$verify-literals$11026$1M&0Ej
     (case-lambda
       ((g$lits$9291$1M&0Ej g$expr$9292$1M&0Ej)
        (for-each
          (case-lambda
            ((g$x$9293$1M&0Ej)
             (if ((case-lambda
                    ((g$t$9294$1M&0Ej)
                     (if g$t$9294$1M&0Ej
                       g$t$9294$1M&0Ej
                       ((case-lambda
                          ((g$t$9295$1M&0Ej)
                           (if g$t$9295$1M&0Ej
                             g$t$9295$1M&0Ej
                             (begin
                               '#f
                               (g$underscore?$7537$1M&0Ej g$x$9293$1M&0Ej)))))
                        (g$ellipsis?$7536$1M&0Ej g$x$9293$1M&0Ej)))))
                  (not (g$id?$7257$1M&0Ej g$x$9293$1M&0Ej)))
               (g$syntax-violation$7646$1M&0Ej
                 '#f
                 '"invalid literal"
                 g$expr$9292$1M&0Ej
                 g$x$9293$1M&0Ej)
               (void))))
          g$lits$9291$1M&0Ej))))
   (g$syntax-case-transformer$7539$1M&0Ej
     g$syntax-case-transformer$11027$1M&0Ej
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9296$1M&0Ej
                     (case-lambda
                       ((g$pvars$9353$1M&0Ej
                          g$expr$9354$1M&0Ej
                          g$y$9355$1M&0Ej
                          g$r$9356$1M&0Ej
                          g$mr$9357$1M&0Ej)
                        ((case-lambda
                           ((g$ids$9358$1M&0Ej g$levels$9359$1M&0Ej)
                            ((case-lambda
                               ((g$labels$9360$1M&0Ej g$new-vars$9361$1M&0Ej)
                                ((case-lambda
                                   ((g$body$9362$1M&0Ej)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7183$1M&0Ej
                                        '#f
                                        g$new-vars$9361$1M&0Ej
                                        g$body$9362$1M&0Ej)
                                      g$y$9355$1M&0Ej)))
                                 (g$chi-expr$7553$1M&0Ej
                                   (g$add-subst$7247$1M&0Ej
                                     (g$make-full-rib$7225$1M&0Ej
                                       g$ids$9358$1M&0Ej
                                       g$labels$9360$1M&0Ej)
                                     g$expr$9354$1M&0Ej)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9363$1M&0Ej
                                               g$var$9364$1M&0Ej
                                               g$level$9365$1M&0Ej)
                                             (cons
                                               g$label$9363$1M&0Ej
                                               (g$make-binding$7273$1M&0Ej
                                                 'syntax
                                                 (cons
                                                   g$var$9364$1M&0Ej
                                                   g$level$9365$1M&0Ej)))))
                                          g$labels$9360$1M&0Ej
                                          g$new-vars$9361$1M&0Ej
                                          (map cdr g$pvars$9353$1M&0Ej))
                                     g$r$9356$1M&0Ej)
                                   g$mr$9357$1M&0Ej))))
                             (map g$gen-label$7198$1M&0Ej g$ids$9358$1M&0Ej)
                             (map g$gen-lexical$7196$1M&0Ej
                                  g$ids$9358$1M&0Ej))))
                         (map car g$pvars$9353$1M&0Ej)
                         (map cdr g$pvars$9353$1M&0Ej)))))
                   (g$invalid-ids-error$9297$1M&0Ej
                     (case-lambda
                       ((g$id*$9347$1M&0Ej g$e$9348$1M&0Ej g$class$9349$1M&0Ej)
                        ((letrec ((g$find$9350$1M&0Ej
                                    (case-lambda
                                      ((g$id*$9351$1M&0Ej g$ok*$9352$1M&0Ej)
                                       (if (null? g$id*$9351$1M&0Ej)
                                         (g$syntax-violation$7646$1M&0Ej
                                           '#f
                                           '"invalid syntax"
                                           g$e$9348$1M&0Ej)
                                         (if (g$id?$7257$1M&0Ej
                                               (car g$id*$9351$1M&0Ej))
                                           (if (g$bound-id-member?$7264$1M&0Ej
                                                 (car g$id*$9351$1M&0Ej)
                                                 g$ok*$9352$1M&0Ej)
                                             (g$syntax-error$7643$1M&0Ej
                                               (car g$id*$9351$1M&0Ej)
                                               '"duplicate "
                                               g$class$9349$1M&0Ej)
                                             (g$find$9350$1M&0Ej
                                               (cdr g$id*$9351$1M&0Ej)
                                               (cons
                                                 (car g$id*$9351$1M&0Ej)
                                                 g$ok*$9352$1M&0Ej)))
                                           (g$syntax-error$7643$1M&0Ej
                                             (car g$id*$9351$1M&0Ej)
                                             '"invalid "
                                             g$class$9349$1M&0Ej)))))))
                           g$find$9350$1M&0Ej)
                         g$id*$9347$1M&0Ej
                         '()))))
                   (g$gen-clause$9298$1M&0Ej
                     (case-lambda
                       ((g$x$9327$1M&0Ej
                          g$keys$9328$1M&0Ej
                          g$clauses$9329$1M&0Ej
                          g$r$9330$1M&0Ej
                          g$mr$9331$1M&0Ej
                          g$pat$9332$1M&0Ej
                          g$fender$9333$1M&0Ej
                          g$expr$9334$1M&0Ej)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7534$1M&0Ej
                               g$pat$9332$1M&0Ej
                               g$keys$9328$1M&0Ej)))
                          (case-lambda
                            ((g$p$9337$1M&0Ej g$pvars$9338$1M&0Ej)
                             ((case-lambda
                                ((g$pvars$9339$1M&0Ej g$p$9340$1M&0Ej)
                                 (if (not (g$distinct-bound-ids?$7263$1M&0Ej
                                            (map car g$pvars$9339$1M&0Ej)))
                                   (g$invalid-ids-error$9297$1M&0Ej
                                     (map car g$pvars$9339$1M&0Ej)
                                     g$pat$9332$1M&0Ej
                                     '"pattern variable")
                                   (if (not (g$for-all$4995$1M&0Ej
                                              (case-lambda
                                                ((g$x$9341$1M&0Ej)
                                                 (not (g$ellipsis?$7536$1M&0Ej
                                                        (car g$x$9341$1M&0Ej)))))
                                              g$pvars$9339$1M&0Ej))
                                     (g$syntax-violation$7646$1M&0Ej
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9332$1M&0Ej)
                                     ((case-lambda
                                        ((g$y$9342$1M&0Ej)
                                         ((case-lambda
                                            ((g$test$9343$1M&0Ej)
                                             ((case-lambda
                                                ((g$conseq$9344$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$altern$9345$1M&0Ej)
                                                     (list
                                                       (g$build-lambda$7183$1M&0Ej
                                                         '#f
                                                         (list g$y$9342$1M&0Ej)
                                                         (list
                                                           'if
                                                           g$test$9343$1M&0Ej
                                                           g$conseq$9344$1M&0Ej
                                                           g$altern$9345$1M&0Ej))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9327$1M&0Ej
                                                         (list
                                                           'quote
                                                           g$p$9340$1M&0Ej)))))
                                                  (g$gen-syntax-case$9299$1M&0Ej
                                                    g$x$9327$1M&0Ej
                                                    g$keys$9328$1M&0Ej
                                                    g$clauses$9329$1M&0Ej
                                                    g$r$9330$1M&0Ej
                                                    g$mr$9331$1M&0Ej))))
                                              (g$build-dispatch-call$9296$1M&0Ej
                                                g$pvars$9339$1M&0Ej
                                                g$expr$9334$1M&0Ej
                                                g$y$9342$1M&0Ej
                                                g$r$9330$1M&0Ej
                                                g$mr$9331$1M&0Ej))))
                                          (if (eq? g$fender$9333$1M&0Ej '#t)
                                            g$y$9342$1M&0Ej
                                            ((case-lambda
                                               ((g$call$9346$1M&0Ej)
                                                (list
                                                  'if
                                                  g$y$9342$1M&0Ej
                                                  g$call$9346$1M&0Ej
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9296$1M&0Ej
                                               g$pvars$9339$1M&0Ej
                                               g$fender$9333$1M&0Ej
                                               g$y$9342$1M&0Ej
                                               g$r$9330$1M&0Ej
                                               g$mr$9331$1M&0Ej))))))
                                      (g$gen-lexical$7196$1M&0Ej 'tmp))))))
                              g$pvars$9338$1M&0Ej
                              g$p$9337$1M&0Ej)))))))
                   (g$gen-syntax-case$9299$1M&0Ej
                     (case-lambda
                       ((g$x$9310$1M&0Ej
                          g$keys$9311$1M&0Ej
                          g$clauses$9312$1M&0Ej
                          g$r$9313$1M&0Ej
                          g$mr$9314$1M&0Ej)
                        (if (null? g$clauses$9312$1M&0Ej)
                          (list '(primitive syntax-error) g$x$9310$1M&0Ej)
                          ((case-lambda
                             ((g$t$9315$1M&0Ej)
                              ((case-lambda
                                 ((g$ls/false$9316$1M&0Ej)
                                  (if g$ls/false$9316$1M&0Ej
                                    (apply
                                      (case-lambda
                                        ((g$pat$9317$1M&0Ej g$expr$9318$1M&0Ej)
                                         (if (if (g$id?$7257$1M&0Ej
                                                   g$pat$9317$1M&0Ej)
                                               (if (not (g$bound-id-member?$7264$1M&0Ej
                                                          g$pat$9317$1M&0Ej
                                                          g$keys$9311$1M&0Ej))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7536$1M&0Ej
                                                          g$pat$9317$1M&0Ej)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7261$1M&0Ej
                                                 g$pat$9317$1M&0Ej
                                                 (g$scheme-stx$7478$1M&0Ej '_))
                                             (g$chi-expr$7553$1M&0Ej
                                               g$expr$9318$1M&0Ej
                                               g$r$9313$1M&0Ej
                                               g$mr$9314$1M&0Ej)
                                             ((case-lambda
                                                ((g$lab$9319$1M&0Ej
                                                   g$lex$9320$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$body$9321$1M&0Ej)
                                                     (list
                                                       (g$build-lambda$7183$1M&0Ej
                                                         '#f
                                                         (list
                                                           g$lex$9320$1M&0Ej)
                                                         g$body$9321$1M&0Ej)
                                                       g$x$9310$1M&0Ej)))
                                                  (g$chi-expr$7553$1M&0Ej
                                                    (g$add-subst$7247$1M&0Ej
                                                      (g$make-full-rib$7225$1M&0Ej
                                                        (list g$pat$9317$1M&0Ej)
                                                        (list
                                                          g$lab$9319$1M&0Ej))
                                                      g$expr$9318$1M&0Ej)
                                                    (cons
                                                      (cons
                                                        g$lab$9319$1M&0Ej
                                                        (g$make-binding$7273$1M&0Ej
                                                          'syntax
                                                          (cons
                                                            g$lex$9320$1M&0Ej
                                                            '0)))
                                                      g$r$9313$1M&0Ej)
                                                    g$mr$9314$1M&0Ej))))
                                              (g$gen-label$7198$1M&0Ej
                                                g$pat$9317$1M&0Ej)
                                              (g$gen-lexical$7196$1M&0Ej
                                                g$pat$9317$1M&0Ej)))
                                           (g$gen-clause$9298$1M&0Ej
                                             g$x$9310$1M&0Ej
                                             g$keys$9311$1M&0Ej
                                             (cdr g$clauses$9312$1M&0Ej)
                                             g$r$9313$1M&0Ej
                                             g$mr$9314$1M&0Ej
                                             g$pat$9317$1M&0Ej
                                             '#t
                                             g$expr$9318$1M&0Ej))))
                                      g$ls/false$9316$1M&0Ej)
                                    ((case-lambda
                                       ((g$t$9322$1M&0Ej)
                                        ((case-lambda
                                           ((g$ls/false$9323$1M&0Ej)
                                            (if g$ls/false$9323$1M&0Ej
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9324$1M&0Ej
                                                     g$fender$9325$1M&0Ej
                                                     g$expr$9326$1M&0Ej)
                                                   (g$gen-clause$9298$1M&0Ej
                                                     g$x$9310$1M&0Ej
                                                     g$keys$9311$1M&0Ej
                                                     (cdr g$clauses$9312$1M&0Ej)
                                                     g$r$9313$1M&0Ej
                                                     g$mr$9314$1M&0Ej
                                                     g$pat$9324$1M&0Ej
                                                     g$fender$9325$1M&0Ej
                                                     g$expr$9326$1M&0Ej)))
                                                g$ls/false$9323$1M&0Ej)
                                              (g$syntax-violation$7646$1M&0Ej
                                                '#f
                                                '"invalid syntax"
                                                g$t$9322$1M&0Ej))))
                                         (g$syntax-dispatch$7535$1M&0Ej
                                           g$t$9322$1M&0Ej
                                           '(any any any)))))
                                     g$t$9315$1M&0Ej))))
                               (g$syntax-dispatch$7535$1M&0Ej
                                 g$t$9315$1M&0Ej
                                 '(any any)))))
                           (car g$clauses$9312$1M&0Ej)))))))
           (case-lambda
             ((g$e$9300$1M&0Ej g$r$9301$1M&0Ej g$mr$9302$1M&0Ej)
              ((case-lambda
                 ((g$t$9303$1M&0Ej)
                  ((case-lambda
                     ((g$ls/false$9304$1M&0Ej)
                      (if g$ls/false$9304$1M&0Ej
                        (apply
                          (case-lambda
                            ((g$expr$9305$1M&0Ej
                               g$keys$9306$1M&0Ej
                               g$clauses$9307$1M&0Ej)
                             (begin
                               (g$verify-literals$7538$1M&0Ej
                                 g$keys$9306$1M&0Ej
                                 g$e$9300$1M&0Ej)
                               ((case-lambda
                                  ((g$x$9308$1M&0Ej)
                                   ((case-lambda
                                      ((g$body$9309$1M&0Ej)
                                       (list
                                         (g$build-lambda$7183$1M&0Ej
                                           '#f
                                           (list g$x$9308$1M&0Ej)
                                           g$body$9309$1M&0Ej)
                                         (g$chi-expr$7553$1M&0Ej
                                           g$expr$9305$1M&0Ej
                                           g$r$9301$1M&0Ej
                                           g$mr$9302$1M&0Ej))))
                                    (g$gen-syntax-case$9299$1M&0Ej
                                      g$x$9308$1M&0Ej
                                      g$keys$9306$1M&0Ej
                                      g$clauses$9307$1M&0Ej
                                      g$r$9301$1M&0Ej
                                      g$mr$9302$1M&0Ej))))
                                (g$gen-lexical$7196$1M&0Ej 'tmp)))))
                          g$ls/false$9304$1M&0Ej)
                        (g$syntax-violation$7646$1M&0Ej
                          '#f
                          '"invalid syntax"
                          g$t$9303$1M&0Ej))))
                   (g$syntax-dispatch$7535$1M&0Ej
                     g$t$9303$1M&0Ej
                     '(_ any each-any . each-any)))))
               g$e$9300$1M&0Ej))))))))
   (g$ellipsis-map$7540$1M&0Ej
     g$ellipsis-map$11028$1M&0Ej
     (case-lambda
       ((g$proc$9366$1M&0Ej g$ls$9367$1M&0Ej . g$ls*$9368$1M&0Ej)
        (letrec* ((g$who$9369$1M&0Ej '...))
          (begin
            (if (not (list? g$ls$9367$1M&0Ej))
              (assertion-violation
                g$who$9369$1M&0Ej
                '"not a list"
                g$ls$9367$1M&0Ej)
              (void))
            (if (not (null? g$ls*$9368$1M&0Ej))
              ((case-lambda
                 ((g$n$9370$1M&0Ej)
                  (for-each
                    (case-lambda
                      ((g$x$9371$1M&0Ej)
                       (begin
                         (if (not (list? g$x$9371$1M&0Ej))
                           (assertion-violation
                             g$who$9369$1M&0Ej
                             '"not a list"
                             g$x$9371$1M&0Ej)
                           (void))
                         (if (not (= (length g$x$9371$1M&0Ej) g$n$9370$1M&0Ej))
                           (assertion-violation
                             g$who$9369$1M&0Ej
                             '"length mismatch"
                             g$ls$9367$1M&0Ej
                             g$x$9371$1M&0Ej)
                           (void)))))
                    g$ls*$9368$1M&0Ej)))
               (length g$ls$9367$1M&0Ej))
              (void))
            (apply
              map
              g$proc$9366$1M&0Ej
              g$ls$9367$1M&0Ej
              g$ls*$9368$1M&0Ej))))))
   (g$syntax-transformer$7541$1M&0Ej
     g$syntax-transformer$11029$1M&0Ej
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9372$1M&0Ej
                     (case-lambda
                       ((g$src$9432$1M&0Ej
                          g$e$9433$1M&0Ej
                          g$r$9434$1M&0Ej
                          g$maps$9435$1M&0Ej
                          g$ellipsis?$9436$1M&0Ej
                          g$vec?$9437$1M&0Ej)
                        ((case-lambda
                           ((g$t$9438$1M&0Ej)
                            ((case-lambda
                               ((g$ls/false$9439$1M&0Ej)
                                (if (if g$ls/false$9439$1M&0Ej
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9440$1M&0Ej)
                                             (g$ellipsis?$9436$1M&0Ej
                                               g$dots$9440$1M&0Ej)))
                                          g$ls/false$9439$1M&0Ej))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9441$1M&0Ej)
                                       (g$syntax-violation$7646$1M&0Ej
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9432$1M&0Ej)))
                                    g$ls/false$9439$1M&0Ej)
                                  ((case-lambda
                                     ((g$t$9442$1M&0Ej)
                                      ((case-lambda
                                         ((g$ls/false$9443$1M&0Ej)
                                          (if (if g$ls/false$9443$1M&0Ej
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9444$1M&0Ej)
                                                       (g$id?$7257$1M&0Ej
                                                         g$id$9444$1M&0Ej)))
                                                    g$ls/false$9443$1M&0Ej))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9445$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$label$9446$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$b$9447$1M&0Ej)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7274$1M&0Ej
                                                                        g$b$9447$1M&0Ej)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9450$1M&0Ej)
                                                                        (g$gen-ref$9373$1M&0Ej
                                                                          g$src$9432$1M&0Ej
                                                                          (car g$var.lev$9450$1M&0Ej)
                                                                          (cdr g$var.lev$9450$1M&0Ej)
                                                                          g$maps$9435$1M&0Ej)))
                                                                     (g$binding-value$7275$1M&0Ej
                                                                       g$b$9447$1M&0Ej))))
                                                                 (case-lambda
                                                                   ((g$var$9451$1M&0Ej
                                                                      g$maps$9452$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$maps$9453$1M&0Ej
                                                                          g$var$9454$1M&0Ej)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9454$1M&0Ej)
                                                                          g$maps$9453$1M&0Ej)))
                                                                     g$maps$9452$1M&0Ej
                                                                     g$var$9451$1M&0Ej))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9433$1M&0Ej)
                                                                 g$maps$9435$1M&0Ej)))))))
                                                      (g$label->binding$7272$1M&0Ej
                                                        g$label$9446$1M&0Ej
                                                        g$r$9434$1M&0Ej))))
                                                  (g$id->label$7270$1M&0Ej
                                                    g$e$9433$1M&0Ej))))
                                              g$ls/false$9443$1M&0Ej)
                                            ((case-lambda
                                               ((g$t$9455$1M&0Ej)
                                                ((case-lambda
                                                   ((g$ls/false$9456$1M&0Ej)
                                                    (if (if g$ls/false$9456$1M&0Ej
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9457$1M&0Ej
                                                                   g$e$9458$1M&0Ej)
                                                                 (g$ellipsis?$9436$1M&0Ej
                                                                   g$dots$9457$1M&0Ej)))
                                                              g$ls/false$9456$1M&0Ej))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9459$1M&0Ej
                                                             g$e$9460$1M&0Ej)
                                                           (if g$vec?$9437$1M&0Ej
                                                             (g$syntax-violation$7646$1M&0Ej
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9432$1M&0Ej)
                                                             (g$gen-syntax$9372$1M&0Ej
                                                               g$src$9432$1M&0Ej
                                                               g$e$9460$1M&0Ej
                                                               g$r$9434$1M&0Ej
                                                               g$maps$9435$1M&0Ej
                                                               (case-lambda
                                                                 ((g$x$9461$1M&0Ej)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9456$1M&0Ej)
                                                      ((case-lambda
                                                         ((g$t$9462$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$ls/false$9463$1M&0Ej)
                                                              (if (if g$ls/false$9463$1M&0Ej
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9464$1M&0Ej
                                                                             g$dots$9465$1M&0Ej
                                                                             g$y$9466$1M&0Ej)
                                                                           (g$ellipsis?$9436$1M&0Ej
                                                                             g$dots$9465$1M&0Ej)))
                                                                        g$ls/false$9463$1M&0Ej))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9467$1M&0Ej
                                                                       g$dots$9468$1M&0Ej
                                                                       g$y$9469$1M&0Ej)
                                                                     ((letrec ((g$f$9470$1M&0Ej
                                                                                 (case-lambda
                                                                                   ((g$y$9471$1M&0Ej
                                                                                      g$k$9472$1M&0Ej)
                                                                                    ((case-lambda
                                                                                       ((g$t$9473$1M&0Ej)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9474$1M&0Ej)
                                                                                            (if g$ls/false$9474$1M&0Ej
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9472$1M&0Ej
                                                                                                     g$maps$9435$1M&0Ej)))
                                                                                                g$ls/false$9474$1M&0Ej)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9475$1M&0Ej)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9476$1M&0Ej)
                                                                                                      (if (if g$ls/false$9476$1M&0Ej
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9477$1M&0Ej
                                                                                                                     g$y$9478$1M&0Ej)
                                                                                                                   (g$ellipsis?$9436$1M&0Ej
                                                                                                                     g$dots$9477$1M&0Ej)))
                                                                                                                g$ls/false$9476$1M&0Ej))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9479$1M&0Ej
                                                                                                               g$y$9480$1M&0Ej)
                                                                                                             (g$f$9470$1M&0Ej
                                                                                                               g$y$9480$1M&0Ej
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9481$1M&0Ej)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9472$1M&0Ej
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9481$1M&0Ej))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9484$1M&0Ej
                                                                                                                         g$maps$9485$1M&0Ej)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9486$1M&0Ej
                                                                                                                             g$x$9487$1M&0Ej)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9486$1M&0Ej))
                                                                                                                             (g$syntax-violation$7646$1M&0Ej
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9432$1M&0Ej)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9375$1M&0Ej
                                                                                                                                 g$x$9487$1M&0Ej
                                                                                                                                 (car g$maps$9486$1M&0Ej))
                                                                                                                               (cdr g$maps$9486$1M&0Ej)))))
                                                                                                                        g$maps$9485$1M&0Ej
                                                                                                                        g$x$9484$1M&0Ej)))))))))
                                                                                                          g$ls/false$9476$1M&0Ej)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9488$1M&0Ej)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9489$1M&0Ej)
                                                                                                                (if g$ls/false$9489$1M&0Ej
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9372$1M&0Ej
                                                                                                                              g$src$9432$1M&0Ej
                                                                                                                              g$y$9471$1M&0Ej
                                                                                                                              g$r$9434$1M&0Ej
                                                                                                                              g$maps$9435$1M&0Ej
                                                                                                                              g$ellipsis?$9436$1M&0Ej
                                                                                                                              g$vec?$9437$1M&0Ej)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9492$1M&0Ej
                                                                                                                              g$maps$9493$1M&0Ej)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9494$1M&0Ej
                                                                                                                                  g$y$9495$1M&0Ej)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9472$1M&0Ej
                                                                                                                                       g$maps$9494$1M&0Ej)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9498$1M&0Ej
                                                                                                                                       g$maps$9499$1M&0Ej)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9500$1M&0Ej
                                                                                                                                           g$x$9501$1M&0Ej)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9374$1M&0Ej
                                                                                                                                             g$x$9501$1M&0Ej
                                                                                                                                             g$y$9495$1M&0Ej)
                                                                                                                                           g$maps$9500$1M&0Ej)))
                                                                                                                                      g$maps$9499$1M&0Ej
                                                                                                                                      g$x$9498$1M&0Ej))))))
                                                                                                                             g$maps$9493$1M&0Ej
                                                                                                                             g$y$9492$1M&0Ej))))))
                                                                                                                    g$ls/false$9489$1M&0Ej)
                                                                                                                  (g$syntax-violation$7646$1M&0Ej
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9488$1M&0Ej))))
                                                                                                             (g$syntax-dispatch$7535$1M&0Ej
                                                                                                               g$t$9488$1M&0Ej
                                                                                                               '_))))
                                                                                                         g$t$9475$1M&0Ej))))
                                                                                                   (g$syntax-dispatch$7535$1M&0Ej
                                                                                                     g$t$9475$1M&0Ej
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9473$1M&0Ej))))
                                                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                                                           g$t$9473$1M&0Ej
                                                                                           '()))))
                                                                                     g$y$9471$1M&0Ej)))))
                                                                        g$f$9470$1M&0Ej)
                                                                      g$y$9469$1M&0Ej
                                                                      (case-lambda
                                                                        ((g$maps$9502$1M&0Ej)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9372$1M&0Ej
                                                                                g$src$9432$1M&0Ej
                                                                                g$x$9467$1M&0Ej
                                                                                g$r$9434$1M&0Ej
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9502$1M&0Ej)
                                                                                g$ellipsis?$9436$1M&0Ej
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9505$1M&0Ej
                                                                                g$maps$9506$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$maps$9507$1M&0Ej
                                                                                    g$x$9508$1M&0Ej)
                                                                                  (if (null?
                                                                                        (car g$maps$9507$1M&0Ej))
                                                                                    (g$syntax-violation$7646$1M&0Ej
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9432$1M&0Ej)
                                                                                    (values
                                                                                      (g$gen-map$9376$1M&0Ej
                                                                                        g$x$9508$1M&0Ej
                                                                                        (car g$maps$9507$1M&0Ej))
                                                                                      (cdr g$maps$9507$1M&0Ej)))))
                                                                               g$maps$9506$1M&0Ej
                                                                               g$x$9505$1M&0Ej)))))))))
                                                                  g$ls/false$9463$1M&0Ej)
                                                                ((case-lambda
                                                                   ((g$t$9509$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9510$1M&0Ej)
                                                                        (if g$ls/false$9510$1M&0Ej
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9511$1M&0Ej
                                                                                 g$y$9512$1M&0Ej)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9372$1M&0Ej
                                                                                      g$src$9432$1M&0Ej
                                                                                      g$x$9511$1M&0Ej
                                                                                      g$r$9434$1M&0Ej
                                                                                      g$maps$9435$1M&0Ej
                                                                                      g$ellipsis?$9436$1M&0Ej
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9515$1M&0Ej
                                                                                      g$maps$9516$1M&0Ej)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9517$1M&0Ej
                                                                                          g$xnew$9518$1M&0Ej)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9372$1M&0Ej
                                                                                               g$src$9432$1M&0Ej
                                                                                               g$y$9512$1M&0Ej
                                                                                               g$r$9434$1M&0Ej
                                                                                               g$maps$9517$1M&0Ej
                                                                                               g$ellipsis?$9436$1M&0Ej
                                                                                               g$vec?$9437$1M&0Ej)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9521$1M&0Ej
                                                                                               g$maps$9522$1M&0Ej)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9523$1M&0Ej
                                                                                                   g$ynew$9524$1M&0Ej)
                                                                                                 (values
                                                                                                   (g$gen-cons$9377$1M&0Ej
                                                                                                     g$e$9433$1M&0Ej
                                                                                                     g$x$9511$1M&0Ej
                                                                                                     g$y$9512$1M&0Ej
                                                                                                     g$xnew$9518$1M&0Ej
                                                                                                     g$ynew$9524$1M&0Ej)
                                                                                                   g$maps$9523$1M&0Ej)))
                                                                                              g$maps$9522$1M&0Ej
                                                                                              g$ynew$9521$1M&0Ej))))))
                                                                                     g$maps$9516$1M&0Ej
                                                                                     g$xnew$9515$1M&0Ej))))))
                                                                            g$ls/false$9510$1M&0Ej)
                                                                          ((case-lambda
                                                                             ((g$t$9525$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9526$1M&0Ej)
                                                                                  (if g$ls/false$9526$1M&0Ej
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9527$1M&0Ej)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9372$1M&0Ej
                                                                                                g$src$9432$1M&0Ej
                                                                                                g$ls$9527$1M&0Ej
                                                                                                g$r$9434$1M&0Ej
                                                                                                g$maps$9435$1M&0Ej
                                                                                                g$ellipsis?$9436$1M&0Ej
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9530$1M&0Ej
                                                                                                g$maps$9531$1M&0Ej)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9532$1M&0Ej
                                                                                                    g$lsnew$9533$1M&0Ej)
                                                                                                  (values
                                                                                                    (g$gen-vector$9378$1M&0Ej
                                                                                                      g$e$9433$1M&0Ej
                                                                                                      g$ls$9527$1M&0Ej
                                                                                                      g$lsnew$9533$1M&0Ej)
                                                                                                    g$maps$9532$1M&0Ej)))
                                                                                               g$maps$9531$1M&0Ej
                                                                                               g$lsnew$9530$1M&0Ej))))))
                                                                                      g$ls/false$9526$1M&0Ej)
                                                                                    ((case-lambda
                                                                                       ((g$t$9534$1M&0Ej)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9535$1M&0Ej)
                                                                                            (if g$ls/false$9535$1M&0Ej
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9433$1M&0Ej)
                                                                                                     g$maps$9435$1M&0Ej)))
                                                                                                g$ls/false$9535$1M&0Ej)
                                                                                              (g$syntax-violation$7646$1M&0Ej
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9534$1M&0Ej))))
                                                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                                                           g$t$9534$1M&0Ej
                                                                                           '_))))
                                                                                     g$t$9525$1M&0Ej))))
                                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                                 g$t$9525$1M&0Ej
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9509$1M&0Ej))))
                                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                                       g$t$9509$1M&0Ej
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9462$1M&0Ej))))
                                                           (g$syntax-dispatch$7535$1M&0Ej
                                                             g$t$9462$1M&0Ej
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9455$1M&0Ej))))
                                                 (g$syntax-dispatch$7535$1M&0Ej
                                                   g$t$9455$1M&0Ej
                                                   '(any any)))))
                                             g$t$9442$1M&0Ej))))
                                       (g$syntax-dispatch$7535$1M&0Ej
                                         g$t$9442$1M&0Ej
                                         'any))))
                                   g$t$9438$1M&0Ej))))
                             (g$syntax-dispatch$7535$1M&0Ej
                               g$t$9438$1M&0Ej
                               'any))))
                         g$e$9433$1M&0Ej))))
                   (g$gen-ref$9373$1M&0Ej
                     (case-lambda
                       ((g$src$9419$1M&0Ej
                          g$var$9420$1M&0Ej
                          g$level$9421$1M&0Ej
                          g$maps$9422$1M&0Ej)
                        (if (= g$level$9421$1M&0Ej '0)
                          (values g$var$9420$1M&0Ej g$maps$9422$1M&0Ej)
                          (if (null? g$maps$9422$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9419$1M&0Ej)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9373$1M&0Ej
                                   g$src$9419$1M&0Ej
                                   g$var$9420$1M&0Ej
                                   (- g$level$9421$1M&0Ej '1)
                                   (cdr g$maps$9422$1M&0Ej))))
                              (case-lambda
                                ((g$outer-var$9425$1M&0Ej
                                   g$outer-maps$9426$1M&0Ej)
                                 ((case-lambda
                                    ((g$outer-maps$9427$1M&0Ej
                                       g$outer-var$9428$1M&0Ej)
                                     ((case-lambda
                                        ((g$t$9429$1M&0Ej)
                                         (if g$t$9429$1M&0Ej
                                           ((case-lambda
                                              ((g$b$9430$1M&0Ej)
                                               (values
                                                 (cdr g$b$9430$1M&0Ej)
                                                 g$maps$9422$1M&0Ej)))
                                            g$t$9429$1M&0Ej)
                                           ((case-lambda
                                              ((g$inner-var$9431$1M&0Ej)
                                               (values
                                                 g$inner-var$9431$1M&0Ej
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9428$1M&0Ej
                                                       g$inner-var$9431$1M&0Ej)
                                                     (car g$maps$9422$1M&0Ej))
                                                   g$outer-maps$9427$1M&0Ej))))
                                            (g$gen-lexical$7196$1M&0Ej 'tmp)))))
                                      (g$assq$4985$1M&0Ej
                                        g$outer-var$9428$1M&0Ej
                                        (car g$maps$9422$1M&0Ej)))))
                                  g$outer-maps$9426$1M&0Ej
                                  g$outer-var$9425$1M&0Ej)))))))))
                   (g$gen-append$9374$1M&0Ej
                     (case-lambda
                       ((g$x$9417$1M&0Ej g$y$9418$1M&0Ej)
                        (if (equal? g$y$9418$1M&0Ej ''())
                          g$x$9417$1M&0Ej
                          (list 'append g$x$9417$1M&0Ej g$y$9418$1M&0Ej)))))
                   (g$gen-mappend$9375$1M&0Ej
                     (case-lambda
                       ((g$e$9415$1M&0Ej g$map-env$9416$1M&0Ej)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9376$1M&0Ej
                            g$e$9415$1M&0Ej
                            g$map-env$9416$1M&0Ej)))))
                   (g$gen-map$9376$1M&0Ej
                     (case-lambda
                       ((g$e$9406$1M&0Ej g$map-env$9407$1M&0Ej)
                        ((case-lambda
                           ((g$formals$9408$1M&0Ej g$actuals$9409$1M&0Ej)
                            (if (eq? (car g$e$9406$1M&0Ej) 'ref)
                              (car g$actuals$9409$1M&0Ej)
                              (if (g$for-all$4995$1M&0Ej
                                    (case-lambda
                                      ((g$x$9410$1M&0Ej)
                                       (if (eq? (car g$x$9410$1M&0Ej) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$4989$1M&0Ej
                                             (g$cadr$5159$1M&0Ej
                                               g$x$9410$1M&0Ej)
                                             g$formals$9408$1M&0Ej))
                                         '#f)))
                                    (cdr g$e$9406$1M&0Ej))
                                ((case-lambda
                                   ((g$args$9411$1M&0Ej)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9406$1M&0Ej))
                                        g$args$9411$1M&0Ej))))
                                 (map ((case-lambda
                                         ((g$r$9412$1M&0Ej)
                                          (case-lambda
                                            ((g$x$9413$1M&0Ej)
                                             (cdr (g$assq$4985$1M&0Ej
                                                    (g$cadr$5159$1M&0Ej
                                                      g$x$9413$1M&0Ej)
                                                    g$r$9412$1M&0Ej))))))
                                       (map cons
                                            g$formals$9408$1M&0Ej
                                            g$actuals$9409$1M&0Ej))
                                      (cdr g$e$9406$1M&0Ej)))
                                (g$cons*$4997$1M&0Ej
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9408$1M&0Ej
                                    g$e$9406$1M&0Ej)
                                  g$actuals$9409$1M&0Ej)))))
                         (map cdr g$map-env$9407$1M&0Ej)
                         (map (case-lambda
                                ((g$x$9414$1M&0Ej)
                                 (list 'ref (car g$x$9414$1M&0Ej))))
                              g$map-env$9407$1M&0Ej)))))
                   (g$gen-cons$9377$1M&0Ej
                     (case-lambda
                       ((g$e$9398$1M&0Ej
                          g$x$9399$1M&0Ej
                          g$y$9400$1M&0Ej
                          g$xnew$9401$1M&0Ej
                          g$ynew$9402$1M&0Ej)
                        ((case-lambda
                           ((g$t$9403$1M&0Ej)
                            (if (g$memv$4990$1M&0Ej g$t$9403$1M&0Ej '(quote))
                              (if (eq? (car g$xnew$9401$1M&0Ej) 'quote)
                                ((case-lambda
                                   ((g$xnew$9404$1M&0Ej g$ynew$9405$1M&0Ej)
                                    (if (if (eq? g$xnew$9404$1M&0Ej
                                                 g$x$9399$1M&0Ej)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9405$1M&0Ej
                                                 g$y$9400$1M&0Ej))
                                          '#f)
                                      (list 'quote g$e$9398$1M&0Ej)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9404$1M&0Ej
                                          g$ynew$9405$1M&0Ej)))))
                                 (g$cadr$5159$1M&0Ej g$xnew$9401$1M&0Ej)
                                 (g$cadr$5159$1M&0Ej g$ynew$9402$1M&0Ej))
                                (if (null?
                                      (g$cadr$5159$1M&0Ej g$ynew$9402$1M&0Ej))
                                  (list 'list g$xnew$9401$1M&0Ej)
                                  (list
                                    'cons
                                    g$xnew$9401$1M&0Ej
                                    g$ynew$9402$1M&0Ej)))
                              (if (g$memv$4990$1M&0Ej g$t$9403$1M&0Ej '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9401$1M&0Ej
                                    (cdr g$ynew$9402$1M&0Ej)))
                                (list
                                  'cons
                                  g$xnew$9401$1M&0Ej
                                  g$ynew$9402$1M&0Ej)))))
                         (car g$ynew$9402$1M&0Ej)))))
                   (g$gen-vector$9378$1M&0Ej
                     (case-lambda
                       ((g$e$9395$1M&0Ej g$ls$9396$1M&0Ej g$lsnew$9397$1M&0Ej)
                        (if (eq? (car g$lsnew$9397$1M&0Ej) 'quote)
                          (if (eq? (g$cadr$5159$1M&0Ej g$lsnew$9397$1M&0Ej)
                                   g$ls$9396$1M&0Ej)
                            (list 'quote g$e$9395$1M&0Ej)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5159$1M&0Ej g$lsnew$9397$1M&0Ej))))
                          (if (eq? (car g$lsnew$9397$1M&0Ej) 'list)
                            (cons 'vector (cdr g$lsnew$9397$1M&0Ej))
                            (list 'list->vector g$lsnew$9397$1M&0Ej))))))
                   (g$regen$9379$1M&0Ej
                     (case-lambda
                       ((g$x$9392$1M&0Ej)
                        ((case-lambda
                           ((g$t$9393$1M&0Ej)
                            (if (g$memv$4990$1M&0Ej g$t$9393$1M&0Ej '(ref))
                              (g$cadr$5159$1M&0Ej g$x$9392$1M&0Ej)
                              (if (g$memv$4990$1M&0Ej
                                    g$t$9393$1M&0Ej
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5159$1M&0Ej g$x$9392$1M&0Ej))
                                (if (g$memv$4990$1M&0Ej
                                      g$t$9393$1M&0Ej
                                      '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5159$1M&0Ej g$x$9392$1M&0Ej))
                                  (if (g$memv$4990$1M&0Ej
                                        g$t$9393$1M&0Ej
                                        '(lambda))
                                    (g$build-lambda$7183$1M&0Ej
                                      '#f
                                      (g$cadr$5159$1M&0Ej g$x$9392$1M&0Ej)
                                      (g$regen$9379$1M&0Ej
                                        (g$caddr$5165$1M&0Ej g$x$9392$1M&0Ej)))
                                    (if (g$memv$4990$1M&0Ej
                                          g$t$9393$1M&0Ej
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$9394$1M&0Ej)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9394$1M&0Ej)))
                                       (map g$regen$9379$1M&0Ej
                                            (cdr g$x$9392$1M&0Ej)))
                                      (cons
                                        (list 'primitive (car g$x$9392$1M&0Ej))
                                        (map g$regen$9379$1M&0Ej
                                             (cdr g$x$9392$1M&0Ej))))))))))
                         (car g$x$9392$1M&0Ej))))))
           (case-lambda
             ((g$e$9380$1M&0Ej g$r$9381$1M&0Ej g$mr$9382$1M&0Ej)
              ((case-lambda
                 ((g$t$9383$1M&0Ej)
                  ((case-lambda
                     ((g$ls/false$9384$1M&0Ej)
                      (if g$ls/false$9384$1M&0Ej
                        (apply
                          (case-lambda
                            ((g$x$9385$1M&0Ej)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9372$1M&0Ej
                                    g$e$9380$1M&0Ej
                                    g$x$9385$1M&0Ej
                                    g$r$9381$1M&0Ej
                                    '()
                                    g$ellipsis?$7536$1M&0Ej
                                    '#f)))
                               (case-lambda
                                 ((g$e$9388$1M&0Ej g$maps$9389$1M&0Ej)
                                  ((case-lambda
                                     ((g$maps$9390$1M&0Ej g$e$9391$1M&0Ej)
                                      (g$regen$9379$1M&0Ej g$e$9391$1M&0Ej)))
                                   g$maps$9389$1M&0Ej
                                   g$e$9388$1M&0Ej))))))
                          g$ls/false$9384$1M&0Ej)
                        (g$syntax-violation$7646$1M&0Ej
                          '#f
                          '"invalid syntax"
                          g$t$9383$1M&0Ej))))
                   (g$syntax-dispatch$7535$1M&0Ej g$t$9383$1M&0Ej '(_ any)))))
               g$e$9380$1M&0Ej))))))))
   (g$core-macro-transformer$7542$1M&0Ej
     g$core-macro-transformer$11030$1M&0Ej
     (case-lambda
       ((g$name$9536$1M&0Ej)
        ((case-lambda
           ((g$t$9537$1M&0Ej)
            (if (g$memv$4990$1M&0Ej g$t$9537$1M&0Ej '(quote))
              g$quote-transformer$7495$1M&0Ej
              (if (g$memv$4990$1M&0Ej g$t$9537$1M&0Ej '(lambda))
                g$lambda-transformer$7497$1M&0Ej
                (if (g$memv$4990$1M&0Ej g$t$9537$1M&0Ej '(case-lambda))
                  g$case-lambda-transformer$7496$1M&0Ej
                  (if (g$memv$4990$1M&0Ej g$t$9537$1M&0Ej '(letrec))
                    g$letrec-transformer$7485$1M&0Ej
                    (if (g$memv$4990$1M&0Ej g$t$9537$1M&0Ej '(letrec*))
                      g$letrec*-transformer$7486$1M&0Ej
                      (if (g$memv$4990$1M&0Ej g$t$9537$1M&0Ej '(if))
                        g$if-transformer$7493$1M&0Ej
                        (if (g$memv$4990$1M&0Ej g$t$9537$1M&0Ej '(foreign-call))
                          g$foreign-call-transformer$7533$1M&0Ej
                          (if (g$memv$4990$1M&0Ej
                                g$t$9537$1M&0Ej
                                '(syntax-case))
                            g$syntax-case-transformer$7539$1M&0Ej
                            (if (g$memv$4990$1M&0Ej g$t$9537$1M&0Ej '(syntax))
                              g$syntax-transformer$7541$1M&0Ej
                              (if (g$memv$4990$1M&0Ej
                                    g$t$9537$1M&0Ej
                                    '(type-descriptor))
                                g$type-descriptor-transformer$7488$1M&0Ej
                                (if (g$memv$4990$1M&0Ej
                                      g$t$9537$1M&0Ej
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7489$1M&0Ej
                                  (if (g$memv$4990$1M&0Ej
                                        g$t$9537$1M&0Ej
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7490$1M&0Ej
                                    (if (g$memv$4990$1M&0Ej
                                          g$t$9537$1M&0Ej
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7487$1M&0Ej
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9536$1M&0Ej))))))))))))))))
         g$name$9536$1M&0Ej))))
   (g$file-options-macro$7543$1M&0Ej
     g$file-options-macro$11031$1M&0Ej
     (case-lambda
       ((g$x$9538$1M&0Ej)
        (letrec* ((g$valid-option?$9539$1M&0Ej
                    (case-lambda
                      ((g$x$9544$1M&0Ej)
                       (if (g$id?$7257$1M&0Ej g$x$9544$1M&0Ej)
                         (begin
                           '#f
                           (g$memq$4989$1M&0Ej
                             (g$id->sym$7258$1M&0Ej g$x$9544$1M&0Ej)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9540$1M&0Ej)
              ((case-lambda
                 ((g$ls/false$9541$1M&0Ej)
                  (if (if g$ls/false$9541$1M&0Ej
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9542$1M&0Ej)
                               (if (g$for-all$4995$1M&0Ej
                                     g$valid-option?$9539$1M&0Ej
                                     g$opt*$9542$1M&0Ej)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6522$1M&0Ej
                                     (map g$id->sym$7258$1M&0Ej
                                          g$opt*$9542$1M&0Ej)))
                                 '#f)))
                            g$ls/false$9541$1M&0Ej))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9543$1M&0Ej)
                         (g$bless$7498$1M&0Ej
                           (list
                             'quote
                             (g$file-options-spec$6522$1M&0Ej
                               (map g$id->sym$7258$1M&0Ej
                                    g$opt*$9543$1M&0Ej))))))
                      g$ls/false$9541$1M&0Ej)
                    (g$syntax-violation$7646$1M&0Ej
                      '#f
                      '"invalid syntax"
                      g$t$9540$1M&0Ej))))
               (g$syntax-dispatch$7535$1M&0Ej
                 g$t$9540$1M&0Ej
                 '(_ . each-any)))))
           g$x$9538$1M&0Ej)))))
   (g$symbol-macro$7544$1M&0Ej
     g$symbol-macro$11032$1M&0Ej
     (case-lambda
       ((g$x$9545$1M&0Ej g$set$9546$1M&0Ej)
        ((case-lambda
           ((g$t$9547$1M&0Ej)
            ((case-lambda
               ((g$ls/false$9548$1M&0Ej)
                (if (if g$ls/false$9548$1M&0Ej
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9549$1M&0Ej)
                             (if (g$id?$7257$1M&0Ej g$name$9549$1M&0Ej)
                               (begin
                                 '#f
                                 (g$memq$4989$1M&0Ej
                                   (g$id->sym$7258$1M&0Ej g$name$9549$1M&0Ej)
                                   g$set$9546$1M&0Ej))
                               '#f)))
                          g$ls/false$9548$1M&0Ej))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9550$1M&0Ej)
                       (g$bless$7498$1M&0Ej (list 'quote g$name$9550$1M&0Ej))))
                    g$ls/false$9548$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$9547$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$9547$1M&0Ej '(_ any)))))
         g$x$9545$1M&0Ej))))
   (g$macro-transformer$7545$1M&0Ej
     g$macro-transformer$11033$1M&0Ej
     (case-lambda
       ((g$x$9551$1M&0Ej)
        (if (procedure? g$x$9551$1M&0Ej)
          g$x$9551$1M&0Ej
          (if (symbol? g$x$9551$1M&0Ej)
            ((case-lambda
               ((g$t$9552$1M&0Ej)
                (if (g$memv$4990$1M&0Ej g$t$9552$1M&0Ej '(define-record-type))
                  g$define-record-type-macro$7529$1M&0Ej
                  (if (g$memv$4990$1M&0Ej g$t$9552$1M&0Ej '(define-struct))
                    g$define-struct-macro$7528$1M&0Ej
                    (if (g$memv$4990$1M&0Ej g$t$9552$1M&0Ej '(include))
                      g$include-macro$7523$1M&0Ej
                      (if (g$memv$4990$1M&0Ej g$t$9552$1M&0Ej '(cond))
                        g$cond-macro$7521$1M&0Ej
                        (if (g$memv$4990$1M&0Ej g$t$9552$1M&0Ej '(let))
                          g$let-macro$7501$1M&0Ej
                          (if (g$memv$4990$1M&0Ej g$t$9552$1M&0Ej '(do))
                            g$do-macro$7517$1M&0Ej
                            (if (g$memv$4990$1M&0Ej g$t$9552$1M&0Ej '(or))
                              g$or-macro$7519$1M&0Ej
                              (if (g$memv$4990$1M&0Ej g$t$9552$1M&0Ej '(and))
                                g$and-macro$7520$1M&0Ej
                                (if (g$memv$4990$1M&0Ej g$t$9552$1M&0Ej '(let*))
                                  g$let*-macro$7518$1M&0Ej
                                  (if (g$memv$4990$1M&0Ej
                                        g$t$9552$1M&0Ej
                                        '(let-values))
                                    g$let-values-macro$7502$1M&0Ej
                                    (if (g$memv$4990$1M&0Ej
                                          g$t$9552$1M&0Ej
                                          '(let*-values))
                                      g$let*-values-macro$7503$1M&0Ej
                                      (if (g$memv$4990$1M&0Ej
                                            g$t$9552$1M&0Ej
                                            '(syntax-rules))
                                        g$syntax-rules-macro$7525$1M&0Ej
                                        (if (g$memv$4990$1M&0Ej
                                              g$t$9552$1M&0Ej
                                              '(quasiquote))
                                          g$quasiquote-macro$7526$1M&0Ej
                                          (if (g$memv$4990$1M&0Ej
                                                g$t$9552$1M&0Ej
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7527$1M&0Ej
                                            (if (g$memv$4990$1M&0Ej
                                                  g$t$9552$1M&0Ej
                                                  '(with-syntax))
                                              g$with-syntax-macro$7499$1M&0Ej
                                              (if (g$memv$4990$1M&0Ej
                                                    g$t$9552$1M&0Ej
                                                    '(when))
                                                g$when-macro$7491$1M&0Ej
                                                (if (g$memv$4990$1M&0Ej
                                                      g$t$9552$1M&0Ej
                                                      '(unless))
                                                  g$unless-macro$7492$1M&0Ej
                                                  (if (g$memv$4990$1M&0Ej
                                                        g$t$9552$1M&0Ej
                                                        '(case))
                                                    g$case-macro$7494$1M&0Ej
                                                    (if (g$memv$4990$1M&0Ej
                                                          g$t$9552$1M&0Ej
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7516$1M&0Ej
                                                      (if (g$memv$4990$1M&0Ej
                                                            g$t$9552$1M&0Ej
                                                            '(time))
                                                        g$time-macro$7512$1M&0Ej
                                                        (if (g$memv$4990$1M&0Ej
                                                              g$t$9552$1M&0Ej
                                                              '(delay))
                                                          g$delay-macro$7513$1M&0Ej
                                                          (if (g$memv$4990$1M&0Ej
                                                                g$t$9552$1M&0Ej
                                                                '(assert))
                                                            g$assert-macro$7514$1M&0Ej
                                                            (if (g$memv$4990$1M&0Ej
                                                                  g$t$9552$1M&0Ej
                                                                  '(endianness))
                                                              g$endianness-macro$7515$1M&0Ej
                                                              (if (g$memv$4990$1M&0Ej
                                                                    g$t$9552$1M&0Ej
                                                                    '(guard))
                                                                g$guard-macro$7510$1M&0Ej
                                                                (if (g$memv$4990$1M&0Ej
                                                                      g$t$9552$1M&0Ej
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7511$1M&0Ej
                                                                  (if (g$memv$4990$1M&0Ej
                                                                        g$t$9552$1M&0Ej
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7504$1M&0Ej
                                                                    (if (g$memv$4990$1M&0Ej
                                                                          g$t$9552$1M&0Ej
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7505$1M&0Ej
                                                                      (if (g$memv$4990$1M&0Ej
                                                                            g$t$9552$1M&0Ej
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7506$1M&0Ej
                                                                        (if (g$memv$4990$1M&0Ej
                                                                              g$t$9552$1M&0Ej
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7508$1M&0Ej
                                                                          (if (g$memv$4990$1M&0Ej
                                                                                g$t$9552$1M&0Ej
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7509$1M&0Ej
                                                                            (if (g$memv$4990$1M&0Ej
                                                                                  g$t$9552$1M&0Ej
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7530$1M&0Ej
                                                                              (if (g$memv$4990$1M&0Ej
                                                                                    g$t$9552$1M&0Ej
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7532$1M&0Ej
                                                                                (if (g$memv$4990$1M&0Ej
                                                                                      g$t$9552$1M&0Ej
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7524$1M&0Ej
                                                                                  (if (g$memv$4990$1M&0Ej
                                                                                        g$t$9552$1M&0Ej
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9553$1M&0Ej)
                                                                                       (g$symbol-macro$7544$1M&0Ej
                                                                                         g$x$9553$1M&0Ej
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$4990$1M&0Ej
                                                                                          g$t$9552$1M&0Ej
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9554$1M&0Ej)
                                                                                         (g$symbol-macro$7544$1M&0Ej
                                                                                           g$x$9554$1M&0Ej
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$4990$1M&0Ej
                                                                                            g$t$9552$1M&0Ej
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9555$1M&0Ej)
                                                                                           (g$symbol-macro$7544$1M&0Ej
                                                                                             g$x$9555$1M&0Ej
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$4990$1M&0Ej
                                                                                              g$t$9552$1M&0Ej
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7543$1M&0Ej
                                                                                          (if (g$memv$4990$1M&0Ej
                                                                                                g$t$9552$1M&0Ej
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7531$1M&0Ej
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9551$1M&0Ej)))))))))))))))))))))))))))))))))))))))))
             g$x$9551$1M&0Ej)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9551$1M&0Ej))))))
   (g$local-macro-transformer$7546$1M&0Ej
     g$local-macro-transformer$11034$1M&0Ej
     (case-lambda ((g$x$9556$1M&0Ej) (car g$x$9556$1M&0Ej))))
   (g$do-macro-call$7547$1M&0Ej
     g$do-macro-call$11035$1M&0Ej
     (case-lambda
       ((g$transformer$9557$1M&0Ej g$expr$9558$1M&0Ej)
        ((case-lambda
           ((g$out$9559$1M&0Ej)
            (begin
              ((letrec ((g$f$9560$1M&0Ej
                          (case-lambda
                            ((g$x$9561$1M&0Ej)
                             (if (not (g$stx?$7229$1M&0Ej g$x$9561$1M&0Ej))
                               (if (pair? g$x$9561$1M&0Ej)
                                 (begin
                                   (g$f$9560$1M&0Ej (car g$x$9561$1M&0Ej))
                                   (g$f$9560$1M&0Ej (cdr g$x$9561$1M&0Ej)))
                                 (if (vector? g$x$9561$1M&0Ej)
                                   (vector-for-each
                                     g$f$9560$1M&0Ej
                                     g$x$9561$1M&0Ej)
                                   (if (symbol? g$x$9561$1M&0Ej)
                                     (g$syntax-violation$7646$1M&0Ej
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9558$1M&0Ej
                                       g$x$9561$1M&0Ej)
                                     (void))))
                               (void))))))
                 g$f$9560$1M&0Ej)
               g$out$9559$1M&0Ej)
              (g$add-mark$7246$1M&0Ej
                (g$gen-mark$7241$1M&0Ej)
                g$out$9559$1M&0Ej
                g$expr$9558$1M&0Ej))))
         (g$transformer$9557$1M&0Ej
           (g$add-mark$7246$1M&0Ej
             g$anti-mark$7242$1M&0Ej
             g$expr$9558$1M&0Ej
             '#f))))))
   (g$chi-macro$7548$1M&0Ej
     g$chi-macro$11036$1M&0Ej
     (case-lambda
       ((g$p$9562$1M&0Ej g$e$9563$1M&0Ej)
        (g$do-macro-call$7547$1M&0Ej
          (g$macro-transformer$7545$1M&0Ej g$p$9562$1M&0Ej)
          g$e$9563$1M&0Ej))))
   (g$chi-local-macro$7549$1M&0Ej
     g$chi-local-macro$11037$1M&0Ej
     (case-lambda
       ((g$p$9564$1M&0Ej g$e$9565$1M&0Ej)
        (g$do-macro-call$7547$1M&0Ej
          (g$local-macro-transformer$7546$1M&0Ej g$p$9564$1M&0Ej)
          g$e$9565$1M&0Ej))))
   (g$chi-global-macro$7550$1M&0Ej
     g$chi-global-macro$11038$1M&0Ej
     (case-lambda
       ((g$p$9566$1M&0Ej g$e$9567$1M&0Ej)
        ((case-lambda
           ((g$lib$9568$1M&0Ej g$loc$9569$1M&0Ej)
            (begin
              (g$visit-library$7068$1M&0Ej g$lib$9568$1M&0Ej)
              ((case-lambda
                 ((g$x$9570$1M&0Ej)
                  ((case-lambda
                     ((g$transformer$9571$1M&0Ej)
                      (g$do-macro-call$7547$1M&0Ej
                        g$transformer$9571$1M&0Ej
                        g$e$9567$1M&0Ej)))
                   (if (procedure? g$x$9570$1M&0Ej)
                     g$x$9570$1M&0Ej
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9570$1M&0Ej)))))
               (symbol-value g$loc$9569$1M&0Ej)))))
         (car g$p$9566$1M&0Ej)
         (cdr g$p$9566$1M&0Ej)))))
   (g$chi-expr*$7551$1M&0Ej
     g$chi-expr*$11039$1M&0Ej
     (case-lambda
       ((g$e*$9572$1M&0Ej g$r$9573$1M&0Ej g$mr$9574$1M&0Ej)
        (if (null? g$e*$9572$1M&0Ej)
          '()
          ((case-lambda
             ((g$e$9575$1M&0Ej)
              (cons
                g$e$9575$1M&0Ej
                (g$chi-expr*$7551$1M&0Ej
                  (cdr g$e*$9572$1M&0Ej)
                  g$r$9573$1M&0Ej
                  g$mr$9574$1M&0Ej))))
           (g$chi-expr$7553$1M&0Ej
             (car g$e*$9572$1M&0Ej)
             g$r$9573$1M&0Ej
             g$mr$9574$1M&0Ej))))))
   (g$chi-application$7552$1M&0Ej
     g$chi-application$11040$1M&0Ej
     (case-lambda
       ((g$e$9576$1M&0Ej g$r$9577$1M&0Ej g$mr$9578$1M&0Ej)
        ((case-lambda
           ((g$t$9579$1M&0Ej)
            ((case-lambda
               ((g$ls/false$9580$1M&0Ej)
                (if g$ls/false$9580$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$rator$9581$1M&0Ej g$rands$9582$1M&0Ej)
                       ((case-lambda
                          ((g$rator$9583$1M&0Ej)
                           (cons
                             g$rator$9583$1M&0Ej
                             (g$chi-expr*$7551$1M&0Ej
                               g$rands$9582$1M&0Ej
                               g$r$9577$1M&0Ej
                               g$mr$9578$1M&0Ej))))
                        (g$chi-expr$7553$1M&0Ej
                          g$rator$9581$1M&0Ej
                          g$r$9577$1M&0Ej
                          g$mr$9578$1M&0Ej))))
                    g$ls/false$9580$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$9579$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$9579$1M&0Ej
               '(any . each-any)))))
         g$e$9576$1M&0Ej))))
   (g$chi-expr$7553$1M&0Ej
     g$chi-expr$11041$1M&0Ej
     (case-lambda
       ((g$e$9584$1M&0Ej g$r$9585$1M&0Ej g$mr$9586$1M&0Ej)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7277$1M&0Ej g$e$9584$1M&0Ej g$r$9585$1M&0Ej)))
          (case-lambda
            ((g$type$9590$1M&0Ej g$value$9591$1M&0Ej g$kwd$9592$1M&0Ej)
             ((case-lambda
                ((g$kwd$9593$1M&0Ej g$value$9594$1M&0Ej g$type$9595$1M&0Ej)
                 ((case-lambda
                    ((g$t$9596$1M&0Ej)
                     (if (g$memv$4990$1M&0Ej g$t$9596$1M&0Ej '(core-macro))
                       ((case-lambda
                          ((g$transformer$9597$1M&0Ej)
                           (g$transformer$9597$1M&0Ej
                             g$e$9584$1M&0Ej
                             g$r$9585$1M&0Ej
                             g$mr$9586$1M&0Ej)))
                        (g$core-macro-transformer$7542$1M&0Ej
                          g$value$9594$1M&0Ej))
                       (if (g$memv$4990$1M&0Ej g$t$9596$1M&0Ej '(global))
                         ((case-lambda
                            ((g$lib$9598$1M&0Ej)
                             ((case-lambda
                                ((g$loc$9599$1M&0Ej)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7587$1M&0Ej)
                                        g$lib$9598$1M&0Ej)
                                       g$loc$9599$1M&0Ej))))))
                              (cdr g$value$9594$1M&0Ej))))
                          (car g$value$9594$1M&0Ej))
                         (if (g$memv$4990$1M&0Ej g$t$9596$1M&0Ej '(core-prim))
                           ((case-lambda
                              ((g$name$9600$1M&0Ej)
                               (list 'primitive g$name$9600$1M&0Ej)))
                            g$value$9594$1M&0Ej)
                           (if (g$memv$4990$1M&0Ej g$t$9596$1M&0Ej '(call))
                             (g$chi-application$7552$1M&0Ej
                               g$e$9584$1M&0Ej
                               g$r$9585$1M&0Ej
                               g$mr$9586$1M&0Ej)
                             (if (g$memv$4990$1M&0Ej g$t$9596$1M&0Ej '(lexical))
                               ((case-lambda
                                  ((g$lex$9601$1M&0Ej) g$lex$9601$1M&0Ej))
                                (g$lexical-var$7479$1M&0Ej g$value$9594$1M&0Ej))
                               (if (g$memv$4990$1M&0Ej
                                     g$t$9596$1M&0Ej
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7553$1M&0Ej
                                   (g$chi-global-macro$7550$1M&0Ej
                                     g$value$9594$1M&0Ej
                                     g$e$9584$1M&0Ej)
                                   g$r$9585$1M&0Ej
                                   g$mr$9586$1M&0Ej)
                                 (if (g$memv$4990$1M&0Ej
                                       g$t$9596$1M&0Ej
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7553$1M&0Ej
                                     (g$chi-local-macro$7549$1M&0Ej
                                       g$value$9594$1M&0Ej
                                       g$e$9584$1M&0Ej)
                                     g$r$9585$1M&0Ej
                                     g$mr$9586$1M&0Ej)
                                   (if (g$memv$4990$1M&0Ej
                                         g$t$9596$1M&0Ej
                                         '(macro macro!))
                                     (g$chi-expr$7553$1M&0Ej
                                       (g$chi-macro$7548$1M&0Ej
                                         g$value$9594$1M&0Ej
                                         g$e$9584$1M&0Ej)
                                       g$r$9585$1M&0Ej
                                       g$mr$9586$1M&0Ej)
                                     (if (g$memv$4990$1M&0Ej
                                           g$t$9596$1M&0Ej
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$9602$1M&0Ej)
                                           (list 'quote g$datum$9602$1M&0Ej)))
                                        g$value$9594$1M&0Ej)
                                       (if (g$memv$4990$1M&0Ej
                                             g$t$9596$1M&0Ej
                                             '(set!))
                                         (g$chi-set!$7554$1M&0Ej
                                           g$e$9584$1M&0Ej
                                           g$r$9585$1M&0Ej
                                           g$mr$9586$1M&0Ej)
                                         (if (g$memv$4990$1M&0Ej
                                               g$t$9596$1M&0Ej
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$9603$1M&0Ej)
                                               ((case-lambda
                                                  ((g$ls/false$9604$1M&0Ej)
                                                   (if g$ls/false$9604$1M&0Ej
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9605$1M&0Ej
                                                            g$x*$9606$1M&0Ej)
                                                          (g$build-sequence$7186$1M&0Ej
                                                            '#f
                                                            (g$chi-expr*$7551$1M&0Ej
                                                              (cons
                                                                g$x$9605$1M&0Ej
                                                                g$x*$9606$1M&0Ej)
                                                              g$r$9585$1M&0Ej
                                                              g$mr$9586$1M&0Ej))))
                                                       g$ls/false$9604$1M&0Ej)
                                                     (g$syntax-violation$7646$1M&0Ej
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9603$1M&0Ej))))
                                                (g$syntax-dispatch$7535$1M&0Ej
                                                  g$t$9603$1M&0Ej
                                                  '(_ any . each-any)))))
                                            g$e$9584$1M&0Ej)
                                           (if (g$memv$4990$1M&0Ej
                                                 g$t$9596$1M&0Ej
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9607$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$ls/false$9608$1M&0Ej)
                                                     (if (if g$ls/false$9608$1M&0Ej
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9609$1M&0Ej
                                                                    g$xrhs*$9610$1M&0Ej
                                                                    g$xbody$9611$1M&0Ej
                                                                    g$xbody*$9612$1M&0Ej)
                                                                  (if (not (g$valid-bound-ids?$7262$1M&0Ej
                                                                             g$xlhs*$9609$1M&0Ej))
                                                                    (g$syntax-violation$7646$1M&0Ej
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9584$1M&0Ej)
                                                                    (void))))
                                                               g$ls/false$9608$1M&0Ej))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9613$1M&0Ej
                                                              g$xrhs*$9614$1M&0Ej
                                                              g$xbody$9615$1M&0Ej
                                                              g$xbody*$9616$1M&0Ej)
                                                            ((case-lambda
                                                               ((g$xlab*$9617$1M&0Ej)
                                                                ((case-lambda
                                                                   ((g$xrib$9618$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$xb*$9619$1M&0Ej)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7186$1M&0Ej
                                                                              '#f
                                                                              (g$chi-expr*$7551$1M&0Ej
                                                                                (map (case-lambda
                                                                                       ((g$x$9620$1M&0Ej)
                                                                                        (g$add-subst$7247$1M&0Ej
                                                                                          g$xrib$9618$1M&0Ej
                                                                                          g$x$9620$1M&0Ej)))
                                                                                     (cons
                                                                                       g$xbody$9615$1M&0Ej
                                                                                       g$xbody*$9616$1M&0Ej))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9617$1M&0Ej
                                                                                       g$xb*$9619$1M&0Ej)
                                                                                  g$r$9585$1M&0Ej)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9617$1M&0Ej
                                                                                       g$xb*$9619$1M&0Ej)
                                                                                  g$mr$9586$1M&0Ej))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9621$1M&0Ej)
                                                                             (g$make-eval-transformer$7289$1M&0Ej
                                                                               (g$expand-transformer$7580$1M&0Ej
                                                                                 (if (eq? g$type$9595$1M&0Ej
                                                                                          'let-syntax)
                                                                                   g$x$9621$1M&0Ej
                                                                                   (g$add-subst$7247$1M&0Ej
                                                                                     g$xrib$9618$1M&0Ej
                                                                                     g$x$9621$1M&0Ej))
                                                                                 g$mr$9586$1M&0Ej))))
                                                                          g$xrhs*$9614$1M&0Ej))))
                                                                 (g$make-full-rib$7225$1M&0Ej
                                                                   g$xlhs*$9613$1M&0Ej
                                                                   g$xlab*$9617$1M&0Ej))))
                                                             (map g$gen-label$7198$1M&0Ej
                                                                  g$xlhs*$9613$1M&0Ej))))
                                                         g$ls/false$9608$1M&0Ej)
                                                       (g$syntax-violation$7646$1M&0Ej
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9607$1M&0Ej))))
                                                  (g$syntax-dispatch$7535$1M&0Ej
                                                    g$t$9607$1M&0Ej
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9584$1M&0Ej)
                                             (if (g$memv$4990$1M&0Ej
                                                   g$t$9596$1M&0Ej
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7646$1M&0Ej
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9584$1M&0Ej)
                                               (if (g$memv$4990$1M&0Ej
                                                     g$t$9596$1M&0Ej
                                                     '(syntax))
                                                 (g$syntax-violation$7646$1M&0Ej
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9584$1M&0Ej)
                                                 (if (g$memv$4990$1M&0Ej
                                                       g$t$9596$1M&0Ej
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7646$1M&0Ej
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9622$1M&0Ej)
                                                           (if (g$memv$4990$1M&0Ej
                                                                 g$t$9622$1M&0Ej
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$4990$1M&0Ej
                                                                   g$t$9622$1M&0Ej
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$4990$1M&0Ej
                                                                     g$t$9622$1M&0Ej
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$4990$1M&0Ej
                                                                       g$t$9622$1M&0Ej
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$4990$1M&0Ej
                                                                         g$t$9622$1M&0Ej
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$4990$1M&0Ej
                                                                           g$t$9622$1M&0Ej
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$9595$1M&0Ej)
                                                       '" was found where an expression was expected")
                                                     g$e$9584$1M&0Ej)
                                                   (if (g$memv$4990$1M&0Ej
                                                         g$t$9596$1M&0Ej
                                                         '(mutable))
                                                     (g$syntax-violation$7646$1M&0Ej
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9584$1M&0Ej)
                                                     (g$syntax-violation$7646$1M&0Ej
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9584$1M&0Ej)))))))))))))))))))
                  g$type$9595$1M&0Ej)))
              g$kwd$9592$1M&0Ej
              g$value$9591$1M&0Ej
              g$type$9590$1M&0Ej)))))))
   (g$chi-set!$7554$1M&0Ej
     g$chi-set!$11042$1M&0Ej
     (case-lambda
       ((g$e$9623$1M&0Ej g$r$9624$1M&0Ej g$mr$9625$1M&0Ej)
        ((case-lambda
           ((g$t$9626$1M&0Ej)
            ((case-lambda
               ((g$ls/false$9627$1M&0Ej)
                (if (if g$ls/false$9627$1M&0Ej
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9628$1M&0Ej g$v$9629$1M&0Ej)
                             (g$id?$7257$1M&0Ej g$x$9628$1M&0Ej)))
                          g$ls/false$9627$1M&0Ej))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9630$1M&0Ej g$v$9631$1M&0Ej)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7277$1M&0Ej
                              g$x$9630$1M&0Ej
                              g$r$9624$1M&0Ej)))
                         (case-lambda
                           ((g$type$9635$1M&0Ej
                              g$value$9636$1M&0Ej
                              g$kwd$9637$1M&0Ej)
                            ((case-lambda
                               ((g$kwd$9638$1M&0Ej
                                  g$value$9639$1M&0Ej
                                  g$type$9640$1M&0Ej)
                                ((case-lambda
                                   ((g$t$9641$1M&0Ej)
                                    (if (g$memv$4990$1M&0Ej
                                          g$t$9641$1M&0Ej
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7481$1M&0Ej
                                          g$value$9639$1M&0Ej
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7479$1M&0Ej
                                            g$value$9639$1M&0Ej)
                                          (g$chi-expr$7553$1M&0Ej
                                            g$v$9631$1M&0Ej
                                            g$r$9624$1M&0Ej
                                            g$mr$9625$1M&0Ej)))
                                      (if (g$memv$4990$1M&0Ej
                                            g$t$9641$1M&0Ej
                                            '(core-prim))
                                        (g$syntax-violation$7646$1M&0Ej
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9623$1M&0Ej)
                                        (if (g$memv$4990$1M&0Ej
                                              g$t$9641$1M&0Ej
                                              '(global))
                                          (g$syntax-violation$7646$1M&0Ej
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9623$1M&0Ej)
                                          (if (g$memv$4990$1M&0Ej
                                                g$t$9641$1M&0Ej
                                                '(global-macro!))
                                            (g$chi-expr$7553$1M&0Ej
                                              (g$chi-global-macro$7550$1M&0Ej
                                                g$value$9639$1M&0Ej
                                                g$e$9623$1M&0Ej)
                                              g$r$9624$1M&0Ej
                                              g$mr$9625$1M&0Ej)
                                            (if (g$memv$4990$1M&0Ej
                                                  g$t$9641$1M&0Ej
                                                  '(local-macro!))
                                              (g$chi-expr$7553$1M&0Ej
                                                (g$chi-local-macro$7549$1M&0Ej
                                                  g$value$9639$1M&0Ej
                                                  g$e$9623$1M&0Ej)
                                                g$r$9624$1M&0Ej
                                                g$mr$9625$1M&0Ej)
                                              (if (g$memv$4990$1M&0Ej
                                                    g$t$9641$1M&0Ej
                                                    '(mutable))
                                                (g$syntax-violation$7646$1M&0Ej
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9623$1M&0Ej)
                                                (g$syntax-violation$7646$1M&0Ej
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9623$1M&0Ej)))))))))
                                 g$type$9640$1M&0Ej)))
                             g$kwd$9637$1M&0Ej
                             g$value$9636$1M&0Ej
                             g$type$9635$1M&0Ej))))))
                    g$ls/false$9627$1M&0Ej)
                  (g$syntax-violation$7646$1M&0Ej
                    '#f
                    '"invalid syntax"
                    g$t$9626$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$9626$1M&0Ej '(_ any any)))))
         g$e$9623$1M&0Ej))))
   (g$verify-formals$7555$1M&0Ej
     g$verify-formals$11043$1M&0Ej
     (case-lambda
       ((g$fmls$9642$1M&0Ej g$stx$9643$1M&0Ej)
        ((case-lambda
           ((g$t$9644$1M&0Ej)
            ((case-lambda
               ((g$ls/false$9645$1M&0Ej)
                (if g$ls/false$9645$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$x*$9646$1M&0Ej)
                       (if (not (g$valid-bound-ids?$7262$1M&0Ej
                                  g$x*$9646$1M&0Ej))
                         (g$invalid-fmls-error$7500$1M&0Ej
                           g$stx$9643$1M&0Ej
                           g$fmls$9642$1M&0Ej)
                         (void))))
                    g$ls/false$9645$1M&0Ej)
                  ((case-lambda
                     ((g$t$9647$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$9648$1M&0Ej)
                          (if g$ls/false$9648$1M&0Ej
                            (apply
                              (case-lambda
                                ((g$x*$9649$1M&0Ej g$x$9650$1M&0Ej)
                                 (if (not (g$valid-bound-ids?$7262$1M&0Ej
                                            (cons
                                              g$x$9650$1M&0Ej
                                              g$x*$9649$1M&0Ej)))
                                   (g$invalid-fmls-error$7500$1M&0Ej
                                     g$stx$9643$1M&0Ej
                                     g$fmls$9642$1M&0Ej)
                                   (void))))
                              g$ls/false$9648$1M&0Ej)
                            ((case-lambda
                               ((g$t$9651$1M&0Ej)
                                ((case-lambda
                                   ((g$ls/false$9652$1M&0Ej)
                                    (if g$ls/false$9652$1M&0Ej
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9643$1M&0Ej)))
                                        g$ls/false$9652$1M&0Ej)
                                      (g$syntax-violation$7646$1M&0Ej
                                        '#f
                                        '"invalid syntax"
                                        g$t$9651$1M&0Ej))))
                                 (g$syntax-dispatch$7535$1M&0Ej
                                   g$t$9651$1M&0Ej
                                   '_))))
                             g$t$9647$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$9647$1M&0Ej
                         '#(each+ any () any)))))
                   g$t$9644$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$9644$1M&0Ej 'each-any))))
         g$fmls$9642$1M&0Ej))))
   (g$chi-lambda-clause$7556$1M&0Ej
     g$chi-lambda-clause$11044$1M&0Ej
     (case-lambda
       ((g$stx$9653$1M&0Ej
          g$fmls$9654$1M&0Ej
          g$body*$9655$1M&0Ej
          g$r$9656$1M&0Ej
          g$mr$9657$1M&0Ej)
        ((case-lambda
           ((g$t$9658$1M&0Ej)
            ((case-lambda
               ((g$ls/false$9659$1M&0Ej)
                (if g$ls/false$9659$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$x*$9660$1M&0Ej)
                       (begin
                         (g$verify-formals$7555$1M&0Ej
                           g$fmls$9654$1M&0Ej
                           g$stx$9653$1M&0Ej)
                         ((case-lambda
                            ((g$lex*$9661$1M&0Ej g$lab*$9662$1M&0Ej)
                             (values
                               g$lex*$9661$1M&0Ej
                               (g$chi-internal$7564$1M&0Ej
                                 (g$add-subst$7247$1M&0Ej
                                   (g$make-full-rib$7225$1M&0Ej
                                     g$x*$9660$1M&0Ej
                                     g$lab*$9662$1M&0Ej)
                                   g$body*$9655$1M&0Ej)
                                 (g$add-lexicals$7483$1M&0Ej
                                   g$lab*$9662$1M&0Ej
                                   g$lex*$9661$1M&0Ej
                                   g$r$9656$1M&0Ej)
                                 g$mr$9657$1M&0Ej))))
                          (map g$gen-lexical$7196$1M&0Ej g$x*$9660$1M&0Ej)
                          (map g$gen-label$7198$1M&0Ej g$x*$9660$1M&0Ej)))))
                    g$ls/false$9659$1M&0Ej)
                  ((case-lambda
                     ((g$t$9663$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$9664$1M&0Ej)
                          (if g$ls/false$9664$1M&0Ej
                            (apply
                              (case-lambda
                                ((g$x*$9665$1M&0Ej g$x$9666$1M&0Ej)
                                 (begin
                                   (g$verify-formals$7555$1M&0Ej
                                     g$fmls$9654$1M&0Ej
                                     g$stx$9653$1M&0Ej)
                                   ((case-lambda
                                      ((g$lex*$9667$1M&0Ej
                                         g$lab*$9668$1M&0Ej
                                         g$lex$9669$1M&0Ej
                                         g$lab$9670$1M&0Ej)
                                       (values
                                         (append
                                           g$lex*$9667$1M&0Ej
                                           g$lex$9669$1M&0Ej)
                                         (g$chi-internal$7564$1M&0Ej
                                           (g$add-subst$7247$1M&0Ej
                                             (g$make-full-rib$7225$1M&0Ej
                                               (cons
                                                 g$x$9666$1M&0Ej
                                                 g$x*$9665$1M&0Ej)
                                               (cons
                                                 g$lab$9670$1M&0Ej
                                                 g$lab*$9668$1M&0Ej))
                                             g$body*$9655$1M&0Ej)
                                           (g$add-lexicals$7483$1M&0Ej
                                             (cons
                                               g$lab$9670$1M&0Ej
                                               g$lab*$9668$1M&0Ej)
                                             (cons
                                               g$lex$9669$1M&0Ej
                                               g$lex*$9667$1M&0Ej)
                                             g$r$9656$1M&0Ej)
                                           g$mr$9657$1M&0Ej))))
                                    (map g$gen-lexical$7196$1M&0Ej
                                         g$x*$9665$1M&0Ej)
                                    (map g$gen-label$7198$1M&0Ej
                                         g$x*$9665$1M&0Ej)
                                    (g$gen-lexical$7196$1M&0Ej g$x$9666$1M&0Ej)
                                    (g$gen-label$7198$1M&0Ej
                                      g$x$9666$1M&0Ej)))))
                              g$ls/false$9664$1M&0Ej)
                            ((case-lambda
                               ((g$t$9671$1M&0Ej)
                                ((case-lambda
                                   ((g$ls/false$9672$1M&0Ej)
                                    (if g$ls/false$9672$1M&0Ej
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7646$1M&0Ej
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9654$1M&0Ej)))
                                        g$ls/false$9672$1M&0Ej)
                                      (g$syntax-violation$7646$1M&0Ej
                                        '#f
                                        '"invalid syntax"
                                        g$t$9671$1M&0Ej))))
                                 (g$syntax-dispatch$7535$1M&0Ej
                                   g$t$9671$1M&0Ej
                                   '_))))
                             g$t$9663$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$9663$1M&0Ej
                         '#(each+ any () any)))))
                   g$t$9658$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$9658$1M&0Ej 'each-any))))
         g$fmls$9654$1M&0Ej))))
   (g$chi-lambda-clause*$7557$1M&0Ej
     g$chi-lambda-clause*$11045$1M&0Ej
     (case-lambda
       ((g$stx$9673$1M&0Ej
          g$fmls*$9674$1M&0Ej
          g$body**$9675$1M&0Ej
          g$r$9676$1M&0Ej
          g$mr$9677$1M&0Ej)
        (if (null? g$fmls*$9674$1M&0Ej)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7556$1M&0Ej
                 g$stx$9673$1M&0Ej
                 (car g$fmls*$9674$1M&0Ej)
                 (car g$body**$9675$1M&0Ej)
                 g$r$9676$1M&0Ej
                 g$mr$9677$1M&0Ej)))
            (case-lambda
              ((g$a$9680$1M&0Ej g$b$9681$1M&0Ej)
               ((case-lambda
                  ((g$b$9682$1M&0Ej g$a$9683$1M&0Ej)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7557$1M&0Ej
                          g$stx$9673$1M&0Ej
                          (cdr g$fmls*$9674$1M&0Ej)
                          (cdr g$body**$9675$1M&0Ej)
                          g$r$9676$1M&0Ej
                          g$mr$9677$1M&0Ej)))
                     (case-lambda
                       ((g$a*$9686$1M&0Ej g$b*$9687$1M&0Ej)
                        ((case-lambda
                           ((g$b*$9688$1M&0Ej g$a*$9689$1M&0Ej)
                            (values
                              (cons g$a$9683$1M&0Ej g$a*$9689$1M&0Ej)
                              (cons g$b$9682$1M&0Ej g$b*$9688$1M&0Ej))))
                         g$b*$9687$1M&0Ej
                         g$a*$9686$1M&0Ej))))))
                g$b$9681$1M&0Ej
                g$a$9680$1M&0Ej))))))))
   (g$chi-defun$7558$1M&0Ej
     g$chi-defun$11046$1M&0Ej
     (case-lambda
       ((g$x$9690$1M&0Ej g$r$9691$1M&0Ej g$mr$9692$1M&0Ej)
        ((case-lambda
           ((g$fmls$9693$1M&0Ej g$body*$9694$1M&0Ej)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7556$1M&0Ej
                   g$fmls$9693$1M&0Ej
                   g$fmls$9693$1M&0Ej
                   g$body*$9694$1M&0Ej
                   g$r$9691$1M&0Ej
                   g$mr$9692$1M&0Ej)))
              (case-lambda
                ((g$fmls$9697$1M&0Ej g$body$9698$1M&0Ej)
                 ((case-lambda
                    ((g$body$9699$1M&0Ej g$fmls$9700$1M&0Ej)
                     (g$build-lambda$7183$1M&0Ej
                       '#f
                       g$fmls$9700$1M&0Ej
                       g$body$9699$1M&0Ej)))
                  g$body$9698$1M&0Ej
                  g$fmls$9697$1M&0Ej))))))
         (car g$x$9690$1M&0Ej)
         (cdr g$x$9690$1M&0Ej)))))
   (g$chi-rhs$7559$1M&0Ej
     g$chi-rhs$11047$1M&0Ej
     (case-lambda
       ((g$rhs$9701$1M&0Ej g$r$9702$1M&0Ej g$mr$9703$1M&0Ej)
        ((case-lambda
           ((g$t$9704$1M&0Ej)
            (if (g$memv$4990$1M&0Ej g$t$9704$1M&0Ej '(defun))
              (g$chi-defun$7558$1M&0Ej
                (cdr g$rhs$9701$1M&0Ej)
                g$r$9702$1M&0Ej
                g$mr$9703$1M&0Ej)
              (if (g$memv$4990$1M&0Ej g$t$9704$1M&0Ej '(expr))
                ((case-lambda
                   ((g$expr$9705$1M&0Ej)
                    (g$chi-expr$7553$1M&0Ej
                      g$expr$9705$1M&0Ej
                      g$r$9702$1M&0Ej
                      g$mr$9703$1M&0Ej)))
                 (cdr g$rhs$9701$1M&0Ej))
                (if (g$memv$4990$1M&0Ej g$t$9704$1M&0Ej '(top-expr))
                  ((case-lambda
                     ((g$expr$9706$1M&0Ej)
                      (g$build-sequence$7186$1M&0Ej
                        '#f
                        (list
                          (g$chi-expr$7553$1M&0Ej
                            g$expr$9706$1M&0Ej
                            g$r$9702$1M&0Ej
                            g$mr$9703$1M&0Ej)
                          (g$build-void$7187$1M&0Ej)))))
                   (cdr g$rhs$9701$1M&0Ej))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9701$1M&0Ej))))))
         (car g$rhs$9701$1M&0Ej)))))
   (g$expand-interaction-rhs*/init*$7560$1M&0Ej
     g$expand-interaction-rhs*/init*$11048$1M&0Ej
     (case-lambda
       ((g$lhs*$9707$1M&0Ej
          g$rhs*$9708$1M&0Ej
          g$init*$9709$1M&0Ej
          g$r$9710$1M&0Ej
          g$mr$9711$1M&0Ej)
        ((letrec ((g$f$9712$1M&0Ej
                    (case-lambda
                      ((g$lhs*$9713$1M&0Ej g$rhs*$9714$1M&0Ej)
                       (if (null? g$lhs*$9713$1M&0Ej)
                         (map (case-lambda
                                ((g$x$9715$1M&0Ej)
                                 (g$chi-expr$7553$1M&0Ej
                                   g$x$9715$1M&0Ej
                                   g$r$9710$1M&0Ej
                                   g$mr$9711$1M&0Ej)))
                              g$init*$9709$1M&0Ej)
                         ((case-lambda
                            ((g$lhs$9716$1M&0Ej g$rhs$9717$1M&0Ej)
                             ((case-lambda
                                ((g$t$9718$1M&0Ej)
                                 (if (g$memv$4990$1M&0Ej
                                       g$t$9718$1M&0Ej
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$9719$1M&0Ej)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9716$1M&0Ej
                                           g$rhs$9719$1M&0Ej)
                                         (g$f$9712$1M&0Ej
                                           (cdr g$lhs*$9713$1M&0Ej)
                                           (cdr g$rhs*$9714$1M&0Ej)))))
                                    (g$chi-defun$7558$1M&0Ej
                                      (cdr g$rhs$9717$1M&0Ej)
                                      g$r$9710$1M&0Ej
                                      g$mr$9711$1M&0Ej))
                                   (if (g$memv$4990$1M&0Ej
                                         g$t$9718$1M&0Ej
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$9720$1M&0Ej)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9716$1M&0Ej
                                             g$rhs$9720$1M&0Ej)
                                           (g$f$9712$1M&0Ej
                                             (cdr g$lhs*$9713$1M&0Ej)
                                             (cdr g$rhs*$9714$1M&0Ej)))))
                                      (g$chi-expr$7553$1M&0Ej
                                        (cdr g$rhs$9717$1M&0Ej)
                                        g$r$9710$1M&0Ej
                                        g$mr$9711$1M&0Ej))
                                     (if (g$memv$4990$1M&0Ej
                                           g$t$9718$1M&0Ej
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$9721$1M&0Ej)
                                           (cons
                                             g$e$9721$1M&0Ej
                                             (g$f$9712$1M&0Ej
                                               (cdr g$lhs*$9713$1M&0Ej)
                                               (cdr g$rhs*$9714$1M&0Ej)))))
                                        (g$chi-expr$7553$1M&0Ej
                                          (cdr g$rhs$9717$1M&0Ej)
                                          g$r$9710$1M&0Ej
                                          g$mr$9711$1M&0Ej))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9717$1M&0Ej))))))
                              (car g$rhs$9717$1M&0Ej))))
                          (car g$lhs*$9713$1M&0Ej)
                          (car g$rhs*$9714$1M&0Ej)))))))
           g$f$9712$1M&0Ej)
         g$lhs*$9707$1M&0Ej
         g$rhs*$9708$1M&0Ej))))
   (g$chi-rhs*$7561$1M&0Ej
     g$chi-rhs*$11049$1M&0Ej
     (case-lambda
       ((g$rhs*$9722$1M&0Ej g$r$9723$1M&0Ej g$mr$9724$1M&0Ej)
        ((letrec ((g$f$9725$1M&0Ej
                    (case-lambda
                      ((g$ls$9726$1M&0Ej)
                       (if (null? g$ls$9726$1M&0Ej)
                         '()
                         ((case-lambda
                            ((g$a$9727$1M&0Ej)
                             (cons
                               g$a$9727$1M&0Ej
                               (g$f$9725$1M&0Ej (cdr g$ls$9726$1M&0Ej)))))
                          (g$chi-rhs$7559$1M&0Ej
                            (car g$ls$9726$1M&0Ej)
                            g$r$9723$1M&0Ej
                            g$mr$9724$1M&0Ej)))))))
           g$f$9725$1M&0Ej)
         g$rhs*$9722$1M&0Ej))))
   (g$find-bound=?$7562$1M&0Ej
     g$find-bound=?$11050$1M&0Ej
     (case-lambda
       ((g$x$9728$1M&0Ej g$lhs*$9729$1M&0Ej g$rhs*$9730$1M&0Ej)
        (if (null? g$lhs*$9729$1M&0Ej)
          '#f
          (if (g$bound-id=?$7260$1M&0Ej
                g$x$9728$1M&0Ej
                (car g$lhs*$9729$1M&0Ej))
            (car g$rhs*$9730$1M&0Ej)
            (g$find-bound=?$7562$1M&0Ej
              g$x$9728$1M&0Ej
              (cdr g$lhs*$9729$1M&0Ej)
              (cdr g$rhs*$9730$1M&0Ej)))))))
   (g$find-dups$7563$1M&0Ej
     g$find-dups$11051$1M&0Ej
     (case-lambda
       ((g$ls$9731$1M&0Ej)
        ((letrec ((g$f$9732$1M&0Ej
                    (case-lambda
                      ((g$ls$9733$1M&0Ej g$dups$9734$1M&0Ej)
                       (if (null? g$ls$9733$1M&0Ej)
                         g$dups$9734$1M&0Ej
                         ((case-lambda
                            ((g$t$9735$1M&0Ej)
                             (if g$t$9735$1M&0Ej
                               ((case-lambda
                                  ((g$x$9736$1M&0Ej)
                                   (g$f$9732$1M&0Ej
                                     (cdr g$ls$9733$1M&0Ej)
                                     (cons
                                       (list
                                         (car g$ls$9733$1M&0Ej)
                                         g$x$9736$1M&0Ej)
                                       g$dups$9734$1M&0Ej))))
                                g$t$9735$1M&0Ej)
                               (g$f$9732$1M&0Ej
                                 (cdr g$ls$9733$1M&0Ej)
                                 g$dups$9734$1M&0Ej))))
                          (g$find-bound=?$7562$1M&0Ej
                            (car g$ls$9733$1M&0Ej)
                            (cdr g$ls$9733$1M&0Ej)
                            (cdr g$ls$9733$1M&0Ej))))))))
           g$f$9732$1M&0Ej)
         g$ls$9731$1M&0Ej
         '()))))
   (g$chi-internal$7564$1M&0Ej
     g$chi-internal$11052$1M&0Ej
     (case-lambda
       ((g$e*$9737$1M&0Ej g$r$9738$1M&0Ej g$mr$9739$1M&0Ej)
        ((case-lambda
           ((g$rib$9740$1M&0Ej)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7579$1M&0Ej
                   (map (case-lambda
                          ((g$x$9749$1M&0Ej)
                           (g$add-subst$7247$1M&0Ej
                             g$rib$9740$1M&0Ej
                             g$x$9749$1M&0Ej)))
                        (g$syntax->list$7256$1M&0Ej g$e*$9737$1M&0Ej))
                   g$r$9738$1M&0Ej
                   g$mr$9739$1M&0Ej
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$9740$1M&0Ej
                   '#f)))
              (case-lambda
                ((g$e*$9750$1M&0Ej
                   g$r$9751$1M&0Ej
                   g$mr$9752$1M&0Ej
                   g$lex*$9753$1M&0Ej
                   g$rhs*$9754$1M&0Ej
                   g$mod**$9755$1M&0Ej
                   g$kwd*$9756$1M&0Ej
                   g$_exp*$9757$1M&0Ej)
                 ((case-lambda
                    ((g$_exp*$9758$1M&0Ej
                       g$kwd*$9759$1M&0Ej
                       g$mod**$9760$1M&0Ej
                       g$rhs*$9761$1M&0Ej
                       g$lex*$9762$1M&0Ej
                       g$mr$9763$1M&0Ej
                       g$r$9764$1M&0Ej
                       g$e*$9765$1M&0Ej)
                     (begin
                       (if (null? g$e*$9765$1M&0Ej)
                         (g$syntax-violation$7646$1M&0Ej
                           '#f
                           '"no expression in body"
                           g$e*$9765$1M&0Ej)
                         (void))
                       ((case-lambda
                          ((g$init*$9766$1M&0Ej)
                           ((case-lambda
                              ((g$rhs*$9767$1M&0Ej)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7189$1M&0Ej
                                     '#f
                                     (reverse g$lex*$9762$1M&0Ej)
                                     (reverse g$rhs*$9767$1M&0Ej)
                                     (g$build-sequence$7186$1M&0Ej
                                       '#f
                                       g$init*$9766$1M&0Ej)))))))
                            (g$chi-rhs*$7561$1M&0Ej
                              g$rhs*$9761$1M&0Ej
                              g$r$9764$1M&0Ej
                              g$mr$9763$1M&0Ej))))
                        (g$chi-expr*$7551$1M&0Ej
                          (append
                            (apply append (reverse g$mod**$9760$1M&0Ej))
                            g$e*$9765$1M&0Ej)
                          g$r$9764$1M&0Ej
                          g$mr$9763$1M&0Ej)))))
                  g$_exp*$9757$1M&0Ej
                  g$kwd*$9756$1M&0Ej
                  g$mod**$9755$1M&0Ej
                  g$rhs*$9754$1M&0Ej
                  g$lex*$9753$1M&0Ej
                  g$mr$9752$1M&0Ej
                  g$r$9751$1M&0Ej
                  g$e*$9750$1M&0Ej))))))
         (g$make-empty-rib$7217$1M&0Ej)))))
   (g$parse-module$7565$1M&0Ej
     g$parse-module$11053$1M&0Ej
     (case-lambda
       ((g$e$9768$1M&0Ej)
        ((case-lambda
           ((g$t$9769$1M&0Ej)
            ((case-lambda
               ((g$ls/false$9770$1M&0Ej)
                (if g$ls/false$9770$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$export*$9771$1M&0Ej g$b*$9772$1M&0Ej)
                       (begin
                         (if (not (g$for-all$4995$1M&0Ej
                                    g$id?$7257$1M&0Ej
                                    g$export*$9771$1M&0Ej))
                           (g$syntax-violation$7646$1M&0Ej
                             '#f
                             '"module exports must be identifiers"
                             g$e$9768$1M&0Ej)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9771$1M&0Ej)
                           g$b*$9772$1M&0Ej))))
                    g$ls/false$9770$1M&0Ej)
                  ((case-lambda
                     ((g$t$9773$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$9774$1M&0Ej)
                          (if g$ls/false$9774$1M&0Ej
                            (apply
                              (case-lambda
                                ((g$name$9775$1M&0Ej
                                   g$export*$9776$1M&0Ej
                                   g$b*$9777$1M&0Ej)
                                 (begin
                                   (if (not (g$id?$7257$1M&0Ej
                                              g$name$9775$1M&0Ej))
                                     (g$syntax-violation$7646$1M&0Ej
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9768$1M&0Ej)
                                     (void))
                                   (if (not (g$for-all$4995$1M&0Ej
                                              g$id?$7257$1M&0Ej
                                              g$export*$9776$1M&0Ej))
                                     (g$syntax-violation$7646$1M&0Ej
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9768$1M&0Ej)
                                     (void))
                                   (values
                                     g$name$9775$1M&0Ej
                                     (list->vector g$export*$9776$1M&0Ej)
                                     g$b*$9777$1M&0Ej))))
                              g$ls/false$9774$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$9773$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$9773$1M&0Ej
                         '(_ any each-any . each-any)))))
                   g$t$9769$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$9769$1M&0Ej
               '(_ each-any . each-any)))))
         g$e$9768$1M&0Ej))))
   (g$8699$7566$1M&0Ej
     g$8699$11054$1M&0Ej
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8702$1M&0Ej
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8701$7567$1M&0Ej g$8701$11055$1M&0Ej '#f)
   (g$8700$7568$1M&0Ej
     g$8700$11056$1M&0Ej
     (make-record-constructor-descriptor
       g$8699$7566$1M&0Ej
       '#f
       g$8701$7567$1M&0Ej))
   (g$module-interface?$7569$1M&0Ej
     g$module-interface?$11057$1M&0Ej
     (record-predicate g$8699$7566$1M&0Ej))
   (g$make-module-interface$7570$1M&0Ej
     g$make-module-interface$11058$1M&0Ej
     (record-constructor g$8700$7568$1M&0Ej))
   (g$module-interface-first-mark$7571$1M&0Ej
     g$module-interface-first-mark$11059$1M&0Ej
     (record-accessor g$8699$7566$1M&0Ej '0))
   (g$module-interface-exp-id-vec$7572$1M&0Ej
     g$module-interface-exp-id-vec$11060$1M&0Ej
     (record-accessor g$8699$7566$1M&0Ej '1))
   (g$module-interface-exp-lab-vec$7573$1M&0Ej
     g$module-interface-exp-lab-vec$11061$1M&0Ej
     (record-accessor g$8699$7566$1M&0Ej '2))
   (g$set-module-interface-first-mark!$7574$1M&0Ej
     g$set-module-interface-first-mark!$11062$1M&0Ej
     (record-mutator g$8699$7566$1M&0Ej '0))
   (g$set-module-interface-exp-id-vec!$7575$1M&0Ej
     g$set-module-interface-exp-id-vec!$11063$1M&0Ej
     (record-mutator g$8699$7566$1M&0Ej '1))
   (g$set-module-interface-exp-lab-vec!$7576$1M&0Ej
     g$set-module-interface-exp-lab-vec!$11064$1M&0Ej
     (record-mutator g$8699$7566$1M&0Ej '2))
   (g$module-interface-exp-id*$7577$1M&0Ej
     g$module-interface-exp-id*$11065$1M&0Ej
     (case-lambda
       ((g$iface$9778$1M&0Ej g$id$9779$1M&0Ej)
        (letrec* ((g$diff-marks$9780$1M&0Ej
                    (case-lambda
                      ((g$ls$9784$1M&0Ej g$x$9785$1M&0Ej)
                       (begin
                         (if (null? g$ls$9784$1M&0Ej)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9786$1M&0Ej)
                             (if (eq? g$a$9786$1M&0Ej g$x$9785$1M&0Ej)
                               '()
                               (cons
                                 g$a$9786$1M&0Ej
                                 (g$diff-marks$9780$1M&0Ej
                                   (cdr g$ls$9784$1M&0Ej)
                                   g$x$9785$1M&0Ej)))))
                          (car g$ls$9784$1M&0Ej)))))))
          ((case-lambda
             ((g$diff$9781$1M&0Ej g$id-vec$9782$1M&0Ej)
              (if (null? g$diff$9781$1M&0Ej)
                g$id-vec$9782$1M&0Ej
                (vector-map
                  (case-lambda
                    ((g$x$9783$1M&0Ej)
                     (g$make-stx$7230$1M&0Ej
                       (g$stx-expr$7231$1M&0Ej g$x$9783$1M&0Ej)
                       (append
                         g$diff$9781$1M&0Ej
                         (g$stx-mark*$7232$1M&0Ej g$x$9783$1M&0Ej))
                       '()
                       '())))
                  g$id-vec$9782$1M&0Ej))))
           (g$diff-marks$9780$1M&0Ej
             (g$stx-mark*$7232$1M&0Ej g$id$9779$1M&0Ej)
             (g$module-interface-first-mark$7571$1M&0Ej g$iface$9778$1M&0Ej))
           (g$module-interface-exp-id-vec$7572$1M&0Ej g$iface$9778$1M&0Ej))))))
   (g$chi-internal-module$7578$1M&0Ej
     g$chi-internal-module$11066$1M&0Ej
     (case-lambda
       ((g$e$9787$1M&0Ej
          g$r$9788$1M&0Ej
          g$mr$9789$1M&0Ej
          g$lex*$9790$1M&0Ej
          g$rhs*$9791$1M&0Ej
          g$mod**$9792$1M&0Ej
          g$kwd*$9793$1M&0Ej)
        (call-with-values
          (case-lambda (() (g$parse-module$7565$1M&0Ej g$e$9787$1M&0Ej)))
          (case-lambda
            ((g$name$9797$1M&0Ej g$exp-id*$9798$1M&0Ej g$e*$9799$1M&0Ej)
             ((case-lambda
                ((g$e*$9800$1M&0Ej g$exp-id*$9801$1M&0Ej g$name$9802$1M&0Ej)
                 ((case-lambda
                    ((g$rib$9803$1M&0Ej)
                     ((case-lambda
                        ((g$e*$9804$1M&0Ej)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7579$1M&0Ej
                                    g$e*$9804$1M&0Ej
                                    g$r$9788$1M&0Ej
                                    g$mr$9789$1M&0Ej
                                    g$lex*$9790$1M&0Ej
                                    g$rhs*$9791$1M&0Ej
                                    g$mod**$9792$1M&0Ej
                                    g$kwd*$9793$1M&0Ej
                                    '()
                                    g$rib$9803$1M&0Ej
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9813$1M&0Ej
                                    g$r$9814$1M&0Ej
                                    g$mr$9815$1M&0Ej
                                    g$lex*$9816$1M&0Ej
                                    g$rhs*$9817$1M&0Ej
                                    g$mod**$9818$1M&0Ej
                                    g$kwd*$9819$1M&0Ej
                                    g$_exp*$9820$1M&0Ej)
                                  ((case-lambda
                                     ((g$_exp*$9821$1M&0Ej
                                        g$kwd*$9822$1M&0Ej
                                        g$mod**$9823$1M&0Ej
                                        g$rhs*$9824$1M&0Ej
                                        g$lex*$9825$1M&0Ej
                                        g$mr$9826$1M&0Ej
                                        g$r$9827$1M&0Ej
                                        g$e*$9828$1M&0Ej)
                                      ((case-lambda
                                         ((g$exp-lab*$9829$1M&0Ej
                                            g$mod**$9830$1M&0Ej)
                                          (if (not g$name$9802$1M&0Ej)
                                            (values
                                              g$lex*$9825$1M&0Ej
                                              g$rhs*$9824$1M&0Ej
                                              g$exp-id*$9801$1M&0Ej
                                              g$exp-lab*$9829$1M&0Ej
                                              g$r$9827$1M&0Ej
                                              g$mr$9826$1M&0Ej
                                              g$mod**$9830$1M&0Ej
                                              g$kwd*$9822$1M&0Ej)
                                            ((case-lambda
                                               ((g$lab$9831$1M&0Ej
                                                  g$iface$9832$1M&0Ej)
                                                (values
                                                  g$lex*$9825$1M&0Ej
                                                  g$rhs*$9824$1M&0Ej
                                                  (vector g$name$9802$1M&0Ej)
                                                  (vector g$lab$9831$1M&0Ej)
                                                  (cons
                                                    (cons
                                                      g$lab$9831$1M&0Ej
                                                      (cons
                                                        '$module
                                                        g$iface$9832$1M&0Ej))
                                                    g$r$9827$1M&0Ej)
                                                  (cons
                                                    (cons
                                                      g$lab$9831$1M&0Ej
                                                      (cons
                                                        '$module
                                                        g$iface$9832$1M&0Ej))
                                                    g$mr$9826$1M&0Ej)
                                                  g$mod**$9830$1M&0Ej
                                                  g$kwd*$9822$1M&0Ej)))
                                             (g$gen-label$7198$1M&0Ej 'module)
                                             (g$make-module-interface$7570$1M&0Ej
                                               (car (g$stx-mark*$7232$1M&0Ej
                                                      g$name$9802$1M&0Ej))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9833$1M&0Ej)
                                                    (g$make-stx$7230$1M&0Ej
                                                      (g$stx-expr$7231$1M&0Ej
                                                        g$x$9833$1M&0Ej)
                                                      (g$stx-mark*$7232$1M&0Ej
                                                        g$x$9833$1M&0Ej)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9801$1M&0Ej)
                                               g$exp-lab*$9829$1M&0Ej)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9834$1M&0Ej)
                                            ((case-lambda
                                               ((g$t$9835$1M&0Ej)
                                                (if g$t$9835$1M&0Ej
                                                  g$t$9835$1M&0Ej
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7646$1M&0Ej
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9834$1M&0Ej)))))
                                             (g$id->label$7270$1M&0Ej
                                               (g$make-stx$7230$1M&0Ej
                                                 (g$id->sym$7258$1M&0Ej
                                                   g$x$9834$1M&0Ej)
                                                 (g$stx-mark*$7232$1M&0Ej
                                                   g$x$9834$1M&0Ej)
                                                 (list g$rib$9803$1M&0Ej)
                                                 '())))))
                                         g$exp-id*$9801$1M&0Ej)
                                       (cons
                                         g$e*$9828$1M&0Ej
                                         g$mod**$9823$1M&0Ej))))
                                   g$_exp*$9820$1M&0Ej
                                   g$kwd*$9819$1M&0Ej
                                   g$mod**$9818$1M&0Ej
                                   g$rhs*$9817$1M&0Ej
                                   g$lex*$9816$1M&0Ej
                                   g$mr$9815$1M&0Ej
                                   g$r$9814$1M&0Ej
                                   g$e*$9813$1M&0Ej)))))))))
                      (map (case-lambda
                             ((g$x$9836$1M&0Ej)
                              (g$add-subst$7247$1M&0Ej
                                g$rib$9803$1M&0Ej
                                g$x$9836$1M&0Ej)))
                           (g$syntax->list$7256$1M&0Ej g$e*$9800$1M&0Ej)))))
                  (g$make-empty-rib$7217$1M&0Ej))))
              g$e*$9799$1M&0Ej
              g$exp-id*$9798$1M&0Ej
              g$name$9797$1M&0Ej)))))))
   (g$chi-body*$7579$1M&0Ej
     g$chi-body*$11067$1M&0Ej
     (case-lambda
       ((g$e*$9837$1M&0Ej
          g$r$9838$1M&0Ej
          g$mr$9839$1M&0Ej
          g$lex*$9840$1M&0Ej
          g$rhs*$9841$1M&0Ej
          g$mod**$9842$1M&0Ej
          g$kwd*$9843$1M&0Ej
          g$exp*$9844$1M&0Ej
          g$rib$9845$1M&0Ej
          g$top?$9846$1M&0Ej)
        (if (null? g$e*$9837$1M&0Ej)
          (values
            g$e*$9837$1M&0Ej
            g$r$9838$1M&0Ej
            g$mr$9839$1M&0Ej
            g$lex*$9840$1M&0Ej
            g$rhs*$9841$1M&0Ej
            g$mod**$9842$1M&0Ej
            g$kwd*$9843$1M&0Ej
            g$exp*$9844$1M&0Ej)
          ((case-lambda
             ((g$e$9847$1M&0Ej)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7277$1M&0Ej g$e$9847$1M&0Ej g$r$9838$1M&0Ej)))
                (case-lambda
                  ((g$type$9851$1M&0Ej g$value$9852$1M&0Ej g$kwd$9853$1M&0Ej)
                   ((case-lambda
                      ((g$kwd$9854$1M&0Ej
                         g$value$9855$1M&0Ej
                         g$type$9856$1M&0Ej)
                       ((case-lambda
                          ((g$kwd*$9857$1M&0Ej)
                           ((case-lambda
                              ((g$t$9858$1M&0Ej)
                               (if (g$memv$4990$1M&0Ej
                                     g$t$9858$1M&0Ej
                                     '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7475$1M&0Ej
                                        g$e$9847$1M&0Ej)))
                                   (case-lambda
                                     ((g$id$9861$1M&0Ej g$rhs$9862$1M&0Ej)
                                      ((case-lambda
                                         ((g$rhs$9863$1M&0Ej g$id$9864$1M&0Ej)
                                          (begin
                                            (if (g$bound-id-member?$7264$1M&0Ej
                                                  g$id$9864$1M&0Ej
                                                  g$kwd*$9857$1M&0Ej)
                                              (g$syntax-violation$7646$1M&0Ej
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9847$1M&0Ej)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7200$1M&0Ej
                                                   g$id$9864$1M&0Ej
                                                   g$rib$9845$1M&0Ej)))
                                              (case-lambda
                                                ((g$lab$9867$1M&0Ej
                                                   g$lex$9868$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$lex$9869$1M&0Ej
                                                       g$lab$9870$1M&0Ej)
                                                     (begin
                                                       (g$extend-rib!$7220$1M&0Ej
                                                         g$rib$9845$1M&0Ej
                                                         g$id$9864$1M&0Ej
                                                         g$lab$9870$1M&0Ej)
                                                       (g$chi-body*$7579$1M&0Ej
                                                         (cdr g$e*$9837$1M&0Ej)
                                                         (g$add-lexical$7482$1M&0Ej
                                                           g$lab$9870$1M&0Ej
                                                           g$lex$9869$1M&0Ej
                                                           g$r$9838$1M&0Ej)
                                                         g$mr$9839$1M&0Ej
                                                         (cons
                                                           g$lex$9869$1M&0Ej
                                                           g$lex*$9840$1M&0Ej)
                                                         (cons
                                                           g$rhs$9863$1M&0Ej
                                                           g$rhs*$9841$1M&0Ej)
                                                         g$mod**$9842$1M&0Ej
                                                         g$kwd*$9857$1M&0Ej
                                                         g$exp*$9844$1M&0Ej
                                                         g$rib$9845$1M&0Ej
                                                         g$top?$9846$1M&0Ej))))
                                                  g$lex$9868$1M&0Ej
                                                  g$lab$9867$1M&0Ej)))))))
                                       g$rhs$9862$1M&0Ej
                                       g$id$9861$1M&0Ej))))
                                 (if (g$memv$4990$1M&0Ej
                                       g$t$9858$1M&0Ej
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7476$1M&0Ej
                                          g$e$9847$1M&0Ej)))
                                     (case-lambda
                                       ((g$id$9873$1M&0Ej g$rhs$9874$1M&0Ej)
                                        ((case-lambda
                                           ((g$rhs$9875$1M&0Ej g$id$9876$1M&0Ej)
                                            (begin
                                              (if (g$bound-id-member?$7264$1M&0Ej
                                                    g$id$9876$1M&0Ej
                                                    g$kwd*$9857$1M&0Ej)
                                                (g$syntax-violation$7646$1M&0Ej
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9847$1M&0Ej)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9877$1M&0Ej
                                                    g$expanded-rhs$9878$1M&0Ej)
                                                  (begin
                                                    (g$extend-rib!$7220$1M&0Ej
                                                      g$rib$9845$1M&0Ej
                                                      g$id$9876$1M&0Ej
                                                      g$lab$9877$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$b$9879$1M&0Ej)
                                                        (g$chi-body*$7579$1M&0Ej
                                                          (cdr g$e*$9837$1M&0Ej)
                                                          (cons
                                                            (cons
                                                              g$lab$9877$1M&0Ej
                                                              g$b$9879$1M&0Ej)
                                                            g$r$9838$1M&0Ej)
                                                          (cons
                                                            (cons
                                                              g$lab$9877$1M&0Ej
                                                              g$b$9879$1M&0Ej)
                                                            g$mr$9839$1M&0Ej)
                                                          g$lex*$9840$1M&0Ej
                                                          g$rhs*$9841$1M&0Ej
                                                          g$mod**$9842$1M&0Ej
                                                          g$kwd*$9857$1M&0Ej
                                                          g$exp*$9844$1M&0Ej
                                                          g$rib$9845$1M&0Ej
                                                          g$top?$9846$1M&0Ej)))
                                                     (g$make-eval-transformer$7289$1M&0Ej
                                                       g$expanded-rhs$9878$1M&0Ej)))))
                                               (g$gen-define-label$7201$1M&0Ej
                                                 g$id$9876$1M&0Ej
                                                 g$rib$9845$1M&0Ej)
                                               (g$expand-transformer$7580$1M&0Ej
                                                 g$rhs$9875$1M&0Ej
                                                 g$mr$9839$1M&0Ej)))))
                                         g$rhs$9874$1M&0Ej
                                         g$id$9873$1M&0Ej))))
                                   (if (g$memv$4990$1M&0Ej
                                         g$t$9858$1M&0Ej
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9880$1M&0Ej)
                                         ((case-lambda
                                            ((g$ls/false$9881$1M&0Ej)
                                             (if (if g$ls/false$9881$1M&0Ej
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9882$1M&0Ej
                                                            g$xrhs*$9883$1M&0Ej
                                                            g$xbody*$9884$1M&0Ej)
                                                          (if (not (g$valid-bound-ids?$7262$1M&0Ej
                                                                     g$xlhs*$9882$1M&0Ej))
                                                            (g$syntax-violation$7646$1M&0Ej
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9847$1M&0Ej)
                                                            (void))))
                                                       g$ls/false$9881$1M&0Ej))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9885$1M&0Ej
                                                      g$xrhs*$9886$1M&0Ej
                                                      g$xbody*$9887$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$xlab*$9888$1M&0Ej)
                                                        ((case-lambda
                                                           ((g$xrib$9889$1M&0Ej)
                                                            ((case-lambda
                                                               ((g$xb*$9890$1M&0Ej)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7579$1M&0Ej
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9891$1M&0Ej)
                                                                                (g$add-subst$7247$1M&0Ej
                                                                                  g$xrib$9889$1M&0Ej
                                                                                  g$x$9891$1M&0Ej)))
                                                                             g$xbody*$9887$1M&0Ej)
                                                                        (cdr g$e*$9837$1M&0Ej))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9888$1M&0Ej
                                                                             g$xb*$9890$1M&0Ej)
                                                                        g$r$9838$1M&0Ej)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9888$1M&0Ej
                                                                             g$xb*$9890$1M&0Ej)
                                                                        g$mr$9839$1M&0Ej)
                                                                      g$lex*$9840$1M&0Ej
                                                                      g$rhs*$9841$1M&0Ej
                                                                      g$mod**$9842$1M&0Ej
                                                                      g$kwd*$9857$1M&0Ej
                                                                      g$exp*$9844$1M&0Ej
                                                                      g$rib$9845$1M&0Ej
                                                                      g$top?$9846$1M&0Ej))))))
                                                             (map (case-lambda
                                                                    ((g$x$9892$1M&0Ej)
                                                                     (g$make-eval-transformer$7289$1M&0Ej
                                                                       (g$expand-transformer$7580$1M&0Ej
                                                                         (if (eq? g$type$9856$1M&0Ej
                                                                                  'let-syntax)
                                                                           g$x$9892$1M&0Ej
                                                                           (g$add-subst$7247$1M&0Ej
                                                                             g$xrib$9889$1M&0Ej
                                                                             g$x$9892$1M&0Ej))
                                                                         g$mr$9839$1M&0Ej))))
                                                                  g$xrhs*$9886$1M&0Ej))))
                                                         (g$make-full-rib$7225$1M&0Ej
                                                           g$xlhs*$9885$1M&0Ej
                                                           g$xlab*$9888$1M&0Ej))))
                                                     (map g$gen-label$7198$1M&0Ej
                                                          g$xlhs*$9885$1M&0Ej))))
                                                 g$ls/false$9881$1M&0Ej)
                                               (g$syntax-violation$7646$1M&0Ej
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9880$1M&0Ej))))
                                          (g$syntax-dispatch$7535$1M&0Ej
                                            g$t$9880$1M&0Ej
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9847$1M&0Ej)
                                     (if (g$memv$4990$1M&0Ej
                                           g$t$9858$1M&0Ej
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$9893$1M&0Ej)
                                           ((case-lambda
                                              ((g$ls/false$9894$1M&0Ej)
                                               (if g$ls/false$9894$1M&0Ej
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9895$1M&0Ej)
                                                      (g$chi-body*$7579$1M&0Ej
                                                        (append
                                                          g$x*$9895$1M&0Ej
                                                          (cdr g$e*$9837$1M&0Ej))
                                                        g$r$9838$1M&0Ej
                                                        g$mr$9839$1M&0Ej
                                                        g$lex*$9840$1M&0Ej
                                                        g$rhs*$9841$1M&0Ej
                                                        g$mod**$9842$1M&0Ej
                                                        g$kwd*$9857$1M&0Ej
                                                        g$exp*$9844$1M&0Ej
                                                        g$rib$9845$1M&0Ej
                                                        g$top?$9846$1M&0Ej)))
                                                   g$ls/false$9894$1M&0Ej)
                                                 (g$syntax-violation$7646$1M&0Ej
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9893$1M&0Ej))))
                                            (g$syntax-dispatch$7535$1M&0Ej
                                              g$t$9893$1M&0Ej
                                              '(_ . each-any)))))
                                        g$e$9847$1M&0Ej)
                                       (if (g$memv$4990$1M&0Ej
                                             g$t$9858$1M&0Ej
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7579$1M&0Ej
                                           (cons
                                             (g$add-subst$7247$1M&0Ej
                                               g$rib$9845$1M&0Ej
                                               (g$chi-global-macro$7550$1M&0Ej
                                                 g$value$9855$1M&0Ej
                                                 g$e$9847$1M&0Ej))
                                             (cdr g$e*$9837$1M&0Ej))
                                           g$r$9838$1M&0Ej
                                           g$mr$9839$1M&0Ej
                                           g$lex*$9840$1M&0Ej
                                           g$rhs*$9841$1M&0Ej
                                           g$mod**$9842$1M&0Ej
                                           g$kwd*$9857$1M&0Ej
                                           g$exp*$9844$1M&0Ej
                                           g$rib$9845$1M&0Ej
                                           g$top?$9846$1M&0Ej)
                                         (if (g$memv$4990$1M&0Ej
                                               g$t$9858$1M&0Ej
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7579$1M&0Ej
                                             (cons
                                               (g$add-subst$7247$1M&0Ej
                                                 g$rib$9845$1M&0Ej
                                                 (g$chi-local-macro$7549$1M&0Ej
                                                   g$value$9855$1M&0Ej
                                                   g$e$9847$1M&0Ej))
                                               (cdr g$e*$9837$1M&0Ej))
                                             g$r$9838$1M&0Ej
                                             g$mr$9839$1M&0Ej
                                             g$lex*$9840$1M&0Ej
                                             g$rhs*$9841$1M&0Ej
                                             g$mod**$9842$1M&0Ej
                                             g$kwd*$9857$1M&0Ej
                                             g$exp*$9844$1M&0Ej
                                             g$rib$9845$1M&0Ej
                                             g$top?$9846$1M&0Ej)
                                           (if (g$memv$4990$1M&0Ej
                                                 g$t$9858$1M&0Ej
                                                 '(macro macro!))
                                             (g$chi-body*$7579$1M&0Ej
                                               (cons
                                                 (g$add-subst$7247$1M&0Ej
                                                   g$rib$9845$1M&0Ej
                                                   (g$chi-macro$7548$1M&0Ej
                                                     g$value$9855$1M&0Ej
                                                     g$e$9847$1M&0Ej))
                                                 (cdr g$e*$9837$1M&0Ej))
                                               g$r$9838$1M&0Ej
                                               g$mr$9839$1M&0Ej
                                               g$lex*$9840$1M&0Ej
                                               g$rhs*$9841$1M&0Ej
                                               g$mod**$9842$1M&0Ej
                                               g$kwd*$9857$1M&0Ej
                                               g$exp*$9844$1M&0Ej
                                               g$rib$9845$1M&0Ej
                                               g$top?$9846$1M&0Ej)
                                             (if (g$memv$4990$1M&0Ej
                                                   g$t$9858$1M&0Ej
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7578$1M&0Ej
                                                      g$e$9847$1M&0Ej
                                                      g$r$9838$1M&0Ej
                                                      g$mr$9839$1M&0Ej
                                                      g$lex*$9840$1M&0Ej
                                                      g$rhs*$9841$1M&0Ej
                                                      g$mod**$9842$1M&0Ej
                                                      g$kwd*$9857$1M&0Ej)))
                                                 (case-lambda
                                                   ((g$lex*$9904$1M&0Ej
                                                      g$rhs*$9905$1M&0Ej
                                                      g$m-exp-id*$9906$1M&0Ej
                                                      g$m-exp-lab*$9907$1M&0Ej
                                                      g$r$9908$1M&0Ej
                                                      g$mr$9909$1M&0Ej
                                                      g$mod**$9910$1M&0Ej
                                                      g$kwd*$9911$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$kwd*$9912$1M&0Ej
                                                          g$mod**$9913$1M&0Ej
                                                          g$mr$9914$1M&0Ej
                                                          g$r$9915$1M&0Ej
                                                          g$m-exp-lab*$9916$1M&0Ej
                                                          g$m-exp-id*$9917$1M&0Ej
                                                          g$rhs*$9918$1M&0Ej
                                                          g$lex*$9919$1M&0Ej)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9920$1M&0Ej
                                                                 g$lab$9921$1M&0Ej)
                                                               (g$extend-rib!$7220$1M&0Ej
                                                                 g$rib$9845$1M&0Ej
                                                                 g$id$9920$1M&0Ej
                                                                 g$lab$9921$1M&0Ej)))
                                                            g$m-exp-id*$9917$1M&0Ej
                                                            g$m-exp-lab*$9916$1M&0Ej)
                                                          (g$chi-body*$7579$1M&0Ej
                                                            (cdr g$e*$9837$1M&0Ej)
                                                            g$r$9915$1M&0Ej
                                                            g$mr$9914$1M&0Ej
                                                            g$lex*$9919$1M&0Ej
                                                            g$rhs*$9918$1M&0Ej
                                                            g$mod**$9913$1M&0Ej
                                                            g$kwd*$9912$1M&0Ej
                                                            g$exp*$9844$1M&0Ej
                                                            g$rib$9845$1M&0Ej
                                                            g$top?$9846$1M&0Ej))))
                                                     g$kwd*$9911$1M&0Ej
                                                     g$mod**$9910$1M&0Ej
                                                     g$mr$9909$1M&0Ej
                                                     g$r$9908$1M&0Ej
                                                     g$m-exp-lab*$9907$1M&0Ej
                                                     g$m-exp-id*$9906$1M&0Ej
                                                     g$rhs*$9905$1M&0Ej
                                                     g$lex*$9904$1M&0Ej))))
                                               (if (g$memv$4990$1M&0Ej
                                                     g$t$9858$1M&0Ej
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7630$1M&0Ej
                                                     (g$stx->datum$7268$1M&0Ej
                                                       g$e$9847$1M&0Ej))
                                                   (g$chi-body*$7579$1M&0Ej
                                                     (cdr g$e*$9837$1M&0Ej)
                                                     g$r$9838$1M&0Ej
                                                     g$mr$9839$1M&0Ej
                                                     g$lex*$9840$1M&0Ej
                                                     g$rhs*$9841$1M&0Ej
                                                     g$mod**$9842$1M&0Ej
                                                     g$kwd*$9857$1M&0Ej
                                                     g$exp*$9844$1M&0Ej
                                                     g$rib$9845$1M&0Ej
                                                     g$top?$9846$1M&0Ej))
                                                 (if (g$memv$4990$1M&0Ej
                                                       g$t$9858$1M&0Ej
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$9922$1M&0Ej)
                                                       ((case-lambda
                                                          ((g$ls/false$9923$1M&0Ej)
                                                           (if g$ls/false$9923$1M&0Ej
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$9924$1M&0Ej)
                                                                  (g$chi-body*$7579$1M&0Ej
                                                                    (cdr g$e*$9837$1M&0Ej)
                                                                    g$r$9838$1M&0Ej
                                                                    g$mr$9839$1M&0Ej
                                                                    g$lex*$9840$1M&0Ej
                                                                    g$rhs*$9841$1M&0Ej
                                                                    g$mod**$9842$1M&0Ej
                                                                    g$kwd*$9857$1M&0Ej
                                                                    (append
                                                                      g$exp-decl*$9924$1M&0Ej
                                                                      g$exp*$9844$1M&0Ej)
                                                                    g$rib$9845$1M&0Ej
                                                                    g$top?$9846$1M&0Ej)))
                                                               g$ls/false$9923$1M&0Ej)
                                                             (g$syntax-violation$7646$1M&0Ej
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$9922$1M&0Ej))))
                                                        (g$syntax-dispatch$7535$1M&0Ej
                                                          g$t$9922$1M&0Ej
                                                          '(_ . each-any)))))
                                                    g$e$9847$1M&0Ej)
                                                   (if (g$memv$4990$1M&0Ej
                                                         g$t$9858$1M&0Ej
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$9925$1M&0Ej
                                                                     (case-lambda
                                                                       ((g$e$9967$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$t$9968$1M&0Ej)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9969$1M&0Ej)
                                                                                (if (if g$ls/false$9969$1M&0Ej
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9970$1M&0Ej)
                                                                                             (g$id?$7257$1M&0Ej
                                                                                               g$id$9970$1M&0Ej)))
                                                                                          g$ls/false$9969$1M&0Ej))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9971$1M&0Ej)
                                                                                       '#t))
                                                                                    g$ls/false$9969$1M&0Ej)
                                                                                  ((case-lambda
                                                                                     ((g$t$9972$1M&0Ej)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9973$1M&0Ej)
                                                                                          (if g$ls/false$9973$1M&0Ej
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$9974$1M&0Ej)
                                                                                                 '#f))
                                                                                              g$ls/false$9973$1M&0Ej)
                                                                                            ((case-lambda
                                                                                               ((g$t$9975$1M&0Ej)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$9976$1M&0Ej)
                                                                                                    (if g$ls/false$9976$1M&0Ej
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7646$1M&0Ej
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$9967$1M&0Ej)))
                                                                                                        g$ls/false$9976$1M&0Ej)
                                                                                                      (g$syntax-violation$7646$1M&0Ej
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$9975$1M&0Ej))))
                                                                                                 (g$syntax-dispatch$7535$1M&0Ej
                                                                                                   g$t$9975$1M&0Ej
                                                                                                   '_))))
                                                                                             g$t$9972$1M&0Ej))))
                                                                                       (g$syntax-dispatch$7535$1M&0Ej
                                                                                         g$t$9972$1M&0Ej
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$9968$1M&0Ej))))
                                                                             (g$syntax-dispatch$7535$1M&0Ej
                                                                               g$t$9968$1M&0Ej
                                                                               '(_ any)))))
                                                                         g$e$9967$1M&0Ej))))
                                                                   (g$module-import$9926$1M&0Ej
                                                                     (case-lambda
                                                                       ((g$e$9950$1M&0Ej
                                                                          g$r$9951$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$t$9952$1M&0Ej)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9953$1M&0Ej)
                                                                                (if (if g$ls/false$9953$1M&0Ej
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$9954$1M&0Ej)
                                                                                             (g$id?$7257$1M&0Ej
                                                                                               g$id$9954$1M&0Ej)))
                                                                                          g$ls/false$9953$1M&0Ej))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$9955$1M&0Ej)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7277$1M&0Ej
                                                                                              g$id$9955$1M&0Ej
                                                                                              g$r$9951$1M&0Ej)))
                                                                                         (case-lambda
                                                                                           ((g$type$9959$1M&0Ej
                                                                                              g$value$9960$1M&0Ej
                                                                                              g$kwd$9961$1M&0Ej)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$9962$1M&0Ej
                                                                                                  g$value$9963$1M&0Ej
                                                                                                  g$type$9964$1M&0Ej)
                                                                                                ((case-lambda
                                                                                                   ((g$t$9965$1M&0Ej)
                                                                                                    (if (g$memv$4990$1M&0Ej
                                                                                                          g$t$9965$1M&0Ej
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$9966$1M&0Ej)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7577$1M&0Ej
                                                                                                              g$iface$9966$1M&0Ej
                                                                                                              g$id$9955$1M&0Ej)
                                                                                                            (g$module-interface-exp-lab-vec$7573$1M&0Ej
                                                                                                              g$iface$9966$1M&0Ej))))
                                                                                                       g$value$9963$1M&0Ej)
                                                                                                      (g$syntax-violation$7646$1M&0Ej
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$9950$1M&0Ej))))
                                                                                                 g$type$9964$1M&0Ej)))
                                                                                             g$kwd$9961$1M&0Ej
                                                                                             g$value$9960$1M&0Ej
                                                                                             g$type$9959$1M&0Ej))))))
                                                                                    g$ls/false$9953$1M&0Ej)
                                                                                  (g$syntax-violation$7646$1M&0Ej
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$9952$1M&0Ej))))
                                                                             (g$syntax-dispatch$7535$1M&0Ej
                                                                               g$t$9952$1M&0Ej
                                                                               '(_ any)))))
                                                                         g$e$9950$1M&0Ej))))
                                                                   (g$library-import$9927$1M&0Ej
                                                                     (case-lambda
                                                                       ((g$e$9936$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$t$9937$1M&0Ej)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9938$1M&0Ej)
                                                                                (if g$ls/false$9938$1M&0Ej
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$9939$1M&0Ej
                                                                                         g$imp*$9940$1M&0Ej)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7584$1M&0Ej
                                                                                              (g$syntax->datum$7649$1M&0Ej
                                                                                                g$imp*$9940$1M&0Ej))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$9943$1M&0Ej
                                                                                              g$subst-labels$9944$1M&0Ej)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$9945$1M&0Ej
                                                                                                  g$subst-names$9946$1M&0Ej)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$9947$1M&0Ej)
                                                                                                       (g$datum->stx$7240$1M&0Ej
                                                                                                         g$ctxt$9939$1M&0Ej
                                                                                                         g$name$9947$1M&0Ej)))
                                                                                                    g$subst-names$9946$1M&0Ej)
                                                                                                  g$subst-labels$9945$1M&0Ej)))
                                                                                             g$subst-labels$9944$1M&0Ej
                                                                                             g$subst-names$9943$1M&0Ej))))))
                                                                                    g$ls/false$9938$1M&0Ej)
                                                                                  ((case-lambda
                                                                                     ((g$t$9948$1M&0Ej)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9949$1M&0Ej)
                                                                                          (if g$ls/false$9949$1M&0Ej
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7646$1M&0Ej
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$9936$1M&0Ej)))
                                                                                              g$ls/false$9949$1M&0Ej)
                                                                                            (g$syntax-violation$7646$1M&0Ej
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9948$1M&0Ej))))
                                                                                       (g$syntax-dispatch$7535$1M&0Ej
                                                                                         g$t$9948$1M&0Ej
                                                                                         '_))))
                                                                                   g$t$9937$1M&0Ej))))
                                                                             (g$syntax-dispatch$7535$1M&0Ej
                                                                               g$t$9937$1M&0Ej
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$9936$1M&0Ej)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$9925$1M&0Ej
                                                                        g$e$9847$1M&0Ej)
                                                                    (g$module-import$9926$1M&0Ej
                                                                      g$e$9847$1M&0Ej
                                                                      g$r$9838$1M&0Ej)
                                                                    (g$library-import$9927$1M&0Ej
                                                                      g$e$9847$1M&0Ej))))
                                                               (case-lambda
                                                                 ((g$id*$9930$1M&0Ej
                                                                    g$lab*$9931$1M&0Ej)
                                                                  ((case-lambda
                                                                     ((g$lab*$9932$1M&0Ej
                                                                        g$id*$9933$1M&0Ej)
                                                                      (vector-for-each
                                                                        (case-lambda
                                                                          ((g$id$9934$1M&0Ej
                                                                             g$lab$9935$1M&0Ej)
                                                                           (g$extend-rib!$7220$1M&0Ej
                                                                             g$rib$9845$1M&0Ej
                                                                             g$id$9934$1M&0Ej
                                                                             g$lab$9935$1M&0Ej)))
                                                                        g$id*$9933$1M&0Ej
                                                                        g$lab*$9932$1M&0Ej)))
                                                                   g$lab*$9931$1M&0Ej
                                                                   g$id*$9930$1M&0Ej))))
                                                             (g$chi-body*$7579$1M&0Ej
                                                               (cdr g$e*$9837$1M&0Ej)
                                                               g$r$9838$1M&0Ej
                                                               g$mr$9839$1M&0Ej
                                                               g$lex*$9840$1M&0Ej
                                                               g$rhs*$9841$1M&0Ej
                                                               g$mod**$9842$1M&0Ej
                                                               g$kwd*$9857$1M&0Ej
                                                               g$exp*$9844$1M&0Ej
                                                               g$rib$9845$1M&0Ej
                                                               g$top?$9846$1M&0Ej))))))
                                                     (if g$top?$9846$1M&0Ej
                                                       (g$chi-body*$7579$1M&0Ej
                                                         (cdr g$e*$9837$1M&0Ej)
                                                         g$r$9838$1M&0Ej
                                                         g$mr$9839$1M&0Ej
                                                         (cons
                                                           (g$gen-lexical$7196$1M&0Ej
                                                             'dummy)
                                                           g$lex*$9840$1M&0Ej)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$9847$1M&0Ej)
                                                           g$rhs*$9841$1M&0Ej)
                                                         g$mod**$9842$1M&0Ej
                                                         g$kwd*$9857$1M&0Ej
                                                         g$exp*$9844$1M&0Ej
                                                         g$rib$9845$1M&0Ej
                                                         g$top?$9846$1M&0Ej)
                                                       (values
                                                         g$e*$9837$1M&0Ej
                                                         g$r$9838$1M&0Ej
                                                         g$mr$9839$1M&0Ej
                                                         g$lex*$9840$1M&0Ej
                                                         g$rhs*$9841$1M&0Ej
                                                         g$mod**$9842$1M&0Ej
                                                         g$kwd*$9857$1M&0Ej
                                                         g$exp*$9844$1M&0Ej)))))))))))))))
                            g$type$9856$1M&0Ej)))
                        (if (g$id?$7257$1M&0Ej g$kwd$9854$1M&0Ej)
                          (cons g$kwd$9854$1M&0Ej g$kwd*$9843$1M&0Ej)
                          g$kwd*$9843$1M&0Ej))))
                    g$kwd$9853$1M&0Ej
                    g$value$9852$1M&0Ej
                    g$type$9851$1M&0Ej))))))
           (car g$e*$9837$1M&0Ej))))))
   (g$expand-transformer$7580$1M&0Ej
     g$expand-transformer$11068$1M&0Ej
     (case-lambda
       ((g$expr$9977$1M&0Ej g$r$9978$1M&0Ej)
        ((case-lambda
           ((g$rtc$9979$1M&0Ej)
            ((case-lambda
               ((g$expanded-rhs$9980$1M&0Ej)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$9981$1M&0Ej)
                        (case-lambda
                          ((g$x$9982$1M&0Ej)
                           (begin
                             (g$invoke-library$7067$1M&0Ej g$x$9982$1M&0Ej)
                             (g$mark-visit$9981$1M&0Ej g$x$9982$1M&0Ej))))))
                     (g$vis-collector$7588$1M&0Ej))
                    (g$rtc$9979$1M&0Ej))
                  g$expanded-rhs$9980$1M&0Ej)))
             ((case-lambda
                ((g$inv-collector$9987$1M&0Ej
                   g$vis-collector$9988$1M&0Ej
                   g$inv-collector$9989$1M&0Ej
                   g$vis-collector$9990$1M&0Ej)
                 ((case-lambda
                    ((g$swap$9991$1M&0Ej)
                     (dynamic-wind
                       g$swap$9991$1M&0Ej
                       (case-lambda
                         (()
                          (g$chi-expr$7553$1M&0Ej
                            g$expr$9977$1M&0Ej
                            g$r$9978$1M&0Ej
                            g$r$9978$1M&0Ej)))
                       g$swap$9991$1M&0Ej)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$9992$1M&0Ej)
                           (begin
                             (g$inv-collector$9987$1M&0Ej
                               g$inv-collector$9989$1M&0Ej)
                             (set! g$inv-collector$9989$1M&0Ej
                               g$t$9992$1M&0Ej))))
                        (g$inv-collector$9987$1M&0Ej))
                       ((case-lambda
                          ((g$t$9993$1M&0Ej)
                           (begin
                             (g$vis-collector$9988$1M&0Ej
                               g$vis-collector$9990$1M&0Ej)
                             (set! g$vis-collector$9990$1M&0Ej
                               g$t$9993$1M&0Ej))))
                        (g$vis-collector$9988$1M&0Ej))))))))
              g$inv-collector$7587$1M&0Ej
              g$vis-collector$7588$1M&0Ej
              g$rtc$9979$1M&0Ej
              (case-lambda ((g$x$9994$1M&0Ej) (values)))))))
         (g$make-collector$7586$1M&0Ej)))))
   (g$parse-exports$7581$1M&0Ej
     g$parse-exports$11069$1M&0Ej
     (case-lambda
       ((g$exp*$9995$1M&0Ej)
        ((letrec ((g$f$9996$1M&0Ej
                    (case-lambda
                      ((g$exp*$9997$1M&0Ej
                         g$int*$9998$1M&0Ej
                         g$ext*$9999$1M&0Ej)
                       (if (null? g$exp*$9997$1M&0Ej)
                         (begin
                           (if (not (g$valid-bound-ids?$7262$1M&0Ej
                                      g$ext*$9999$1M&0Ej))
                             (g$syntax-violation$7646$1M&0Ej
                               'export
                               '"invalid exports"
                               (g$find-dups$7563$1M&0Ej g$ext*$9999$1M&0Ej))
                             (void))
                           (values
                             (map g$syntax->datum$7649$1M&0Ej
                                  g$ext*$9999$1M&0Ej)
                             g$int*$9998$1M&0Ej))
                         ((case-lambda
                            ((g$t$10000$1M&0Ej)
                             ((case-lambda
                                ((g$ls/false$10001$1M&0Ej)
                                 (if g$ls/false$10001$1M&0Ej
                                   (apply
                                     (case-lambda
                                       ((g$rename$10002$1M&0Ej
                                          g$i*$10003$1M&0Ej
                                          g$e*$10004$1M&0Ej)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$7649$1M&0Ej
                                                              g$rename$10002$1M&0Ej)
                                                            'rename)
                                                     (if (g$for-all$4995$1M&0Ej
                                                           g$id?$7257$1M&0Ej
                                                           g$i*$10003$1M&0Ej)
                                                       (begin
                                                         '#f
                                                         (g$for-all$4995$1M&0Ej
                                                           g$id?$7257$1M&0Ej
                                                           g$e*$10004$1M&0Ej))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$7646$1M&0Ej
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$9997$1M&0Ej))
                                            (void))
                                          (g$f$9996$1M&0Ej
                                            (cdr g$exp*$9997$1M&0Ej)
                                            (append
                                              g$i*$10003$1M&0Ej
                                              g$int*$9998$1M&0Ej)
                                            (append
                                              g$e*$10004$1M&0Ej
                                              g$ext*$9999$1M&0Ej)))))
                                     g$ls/false$10001$1M&0Ej)
                                   ((case-lambda
                                      ((g$t$10005$1M&0Ej)
                                       ((case-lambda
                                          ((g$ls/false$10006$1M&0Ej)
                                           (if g$ls/false$10006$1M&0Ej
                                             (apply
                                               (case-lambda
                                                 ((g$ie$10007$1M&0Ej)
                                                  (begin
                                                    (if (not (g$id?$7257$1M&0Ej
                                                               g$ie$10007$1M&0Ej))
                                                      (g$syntax-violation$7646$1M&0Ej
                                                        'export
                                                        '"invalid export"
                                                        g$ie$10007$1M&0Ej)
                                                      (void))
                                                    (g$f$9996$1M&0Ej
                                                      (cdr g$exp*$9997$1M&0Ej)
                                                      (cons
                                                        g$ie$10007$1M&0Ej
                                                        g$int*$9998$1M&0Ej)
                                                      (cons
                                                        g$ie$10007$1M&0Ej
                                                        g$ext*$9999$1M&0Ej)))))
                                               g$ls/false$10006$1M&0Ej)
                                             (g$syntax-violation$7646$1M&0Ej
                                               '#f
                                               '"invalid syntax"
                                               g$t$10005$1M&0Ej))))
                                        (g$syntax-dispatch$7535$1M&0Ej
                                          g$t$10005$1M&0Ej
                                          'any))))
                                    g$t$10000$1M&0Ej))))
                              (g$syntax-dispatch$7535$1M&0Ej
                                g$t$10000$1M&0Ej
                                '(any . #(each (any any)))))))
                          (car g$exp*$9997$1M&0Ej)))))))
           g$f$9996$1M&0Ej)
         g$exp*$9995$1M&0Ej
         '()
         '()))))
   (g$parse-library-name$7582$1M&0Ej
     g$parse-library-name$11070$1M&0Ej
     (case-lambda
       ((g$spec$10008$1M&0Ej)
        (letrec* ((g$parse$10009$1M&0Ej
                    (case-lambda
                      ((g$x$10016$1M&0Ej)
                       ((case-lambda
                          ((g$t$10017$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$10018$1M&0Ej)
                               (if (if g$ls/false$10018$1M&0Ej
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10019$1M&0Ej)
                                            (g$for-all$4995$1M&0Ej
                                              (case-lambda
                                                ((g$x$10020$1M&0Ej)
                                                 ((case-lambda
                                                    ((g$x$10021$1M&0Ej)
                                                     (if (integer?
                                                           g$x$10021$1M&0Ej)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10021$1M&0Ej))
                                                       '#f)))
                                                  (g$syntax->datum$7649$1M&0Ej
                                                    g$x$10020$1M&0Ej))))
                                              g$v*$10019$1M&0Ej)))
                                         g$ls/false$10018$1M&0Ej))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10022$1M&0Ej)
                                      (values
                                        '()
                                        (map g$syntax->datum$7649$1M&0Ej
                                             g$v*$10022$1M&0Ej))))
                                   g$ls/false$10018$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$10023$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$10024$1M&0Ej)
                                         (if (if g$ls/false$10024$1M&0Ej
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10025$1M&0Ej
                                                        g$rest$10026$1M&0Ej)
                                                      (symbol?
                                                        (g$syntax->datum$7649$1M&0Ej
                                                          g$x$10025$1M&0Ej))))
                                                   g$ls/false$10024$1M&0Ej))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10027$1M&0Ej
                                                  g$rest$10028$1M&0Ej)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10009$1M&0Ej
                                                       g$rest$10028$1M&0Ej)))
                                                  (case-lambda
                                                    ((g$x*$10031$1M&0Ej
                                                       g$v*$10032$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$v*$10033$1M&0Ej
                                                           g$x*$10034$1M&0Ej)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7649$1M&0Ej
                                                               g$x$10027$1M&0Ej)
                                                             g$x*$10034$1M&0Ej)
                                                           g$v*$10033$1M&0Ej)))
                                                      g$v*$10032$1M&0Ej
                                                      g$x*$10031$1M&0Ej))))))
                                             g$ls/false$10024$1M&0Ej)
                                           ((case-lambda
                                              ((g$t$10035$1M&0Ej)
                                               ((case-lambda
                                                  ((g$ls/false$10036$1M&0Ej)
                                                   (if g$ls/false$10036$1M&0Ej
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10036$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$t$10037$1M&0Ej)
                                                         ((case-lambda
                                                            ((g$ls/false$10038$1M&0Ej)
                                                             (if g$ls/false$10038$1M&0Ej
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7646$1M&0Ej
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10008$1M&0Ej)))
                                                                 g$ls/false$10038$1M&0Ej)
                                                               (g$syntax-violation$7646$1M&0Ej
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10037$1M&0Ej))))
                                                          (g$syntax-dispatch$7535$1M&0Ej
                                                            g$t$10037$1M&0Ej
                                                            '_))))
                                                      g$t$10035$1M&0Ej))))
                                                (g$syntax-dispatch$7535$1M&0Ej
                                                  g$t$10035$1M&0Ej
                                                  '()))))
                                            g$t$10023$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$10023$1M&0Ej
                                        '(any . any)))))
                                  g$t$10017$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$10017$1M&0Ej
                              '(each-any)))))
                        g$x$10016$1M&0Ej)))))
          (call-with-values
            (case-lambda (() (g$parse$10009$1M&0Ej g$spec$10008$1M&0Ej)))
            (case-lambda
              ((g$name*$10012$1M&0Ej g$ver*$10013$1M&0Ej)
               ((case-lambda
                  ((g$ver*$10014$1M&0Ej g$name*$10015$1M&0Ej)
                   (begin
                     (if (null? g$name*$10015$1M&0Ej)
                       (g$syntax-violation$7646$1M&0Ej
                         '#f
                         '"empty library name"
                         g$spec$10008$1M&0Ej)
                       (void))
                     (values g$name*$10015$1M&0Ej g$ver*$10014$1M&0Ej))))
                g$ver*$10013$1M&0Ej
                g$name*$10012$1M&0Ej))))))))
   (g$parse-library$7583$1M&0Ej
     g$parse-library$11071$1M&0Ej
     (case-lambda
       ((g$e$10039$1M&0Ej)
        ((case-lambda
           ((g$t$10040$1M&0Ej)
            ((case-lambda
               ((g$ls/false$10041$1M&0Ej)
                (if (if g$ls/false$10041$1M&0Ej
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10042$1M&0Ej
                               g$name*$10043$1M&0Ej
                               g$export$10044$1M&0Ej
                               g$exp*$10045$1M&0Ej
                               g$import$10046$1M&0Ej
                               g$imp*$10047$1M&0Ej
                               g$b*$10048$1M&0Ej)
                             (if (eq? (g$syntax->datum$7649$1M&0Ej
                                        g$export$10044$1M&0Ej)
                                      'export)
                               (if (eq? (g$syntax->datum$7649$1M&0Ej
                                          g$import$10046$1M&0Ej)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7649$1M&0Ej
                                          g$library$10042$1M&0Ej)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10041$1M&0Ej))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10049$1M&0Ej
                         g$name*$10050$1M&0Ej
                         g$export$10051$1M&0Ej
                         g$exp*$10052$1M&0Ej
                         g$import$10053$1M&0Ej
                         g$imp*$10054$1M&0Ej
                         g$b*$10055$1M&0Ej)
                       (values
                         g$name*$10050$1M&0Ej
                         g$exp*$10052$1M&0Ej
                         g$imp*$10054$1M&0Ej
                         g$b*$10055$1M&0Ej)))
                    g$ls/false$10041$1M&0Ej)
                  ((case-lambda
                     ((g$t$10056$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$10057$1M&0Ej)
                          (if g$ls/false$10057$1M&0Ej
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7646$1M&0Ej
                                   '#f
                                   '"malformed library"
                                   g$e$10039$1M&0Ej)))
                              g$ls/false$10057$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$10056$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej g$t$10056$1M&0Ej '_))))
                   g$t$10040$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$10040$1M&0Ej
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10039$1M&0Ej))))
   (g$parse-import-spec*$7584$1M&0Ej
     g$parse-import-spec*$11072$1M&0Ej
     (case-lambda
       ((g$imp*$10058$1M&0Ej)
        (letrec* ((g$idsyn?$10059$1M&0Ej
                    (case-lambda
                      ((g$x$10319$1M&0Ej)
                       (symbol?
                         (g$syntax->datum$7649$1M&0Ej g$x$10319$1M&0Ej)))))
                  (g$dup-error$10060$1M&0Ej
                    (case-lambda
                      ((g$name$10318$1M&0Ej)
                       (g$syntax-violation$7646$1M&0Ej
                         'import
                         '"two imports with different bindings"
                         g$name$10318$1M&0Ej))))
                  (g$merge-substs$10061$1M&0Ej
                    (case-lambda
                      ((g$s$10309$1M&0Ej g$subst$10310$1M&0Ej)
                       (letrec* ((g$insert-to-subst$10311$1M&0Ej
                                   (case-lambda
                                     ((g$a$10312$1M&0Ej g$subst$10313$1M&0Ej)
                                      ((case-lambda
                                         ((g$name$10314$1M&0Ej
                                            g$label$10315$1M&0Ej)
                                          ((case-lambda
                                             ((g$t$10316$1M&0Ej)
                                              (if g$t$10316$1M&0Ej
                                                ((case-lambda
                                                   ((g$x$10317$1M&0Ej)
                                                    (if (eq? (cdr g$x$10317$1M&0Ej)
                                                             g$label$10315$1M&0Ej)
                                                      g$subst$10313$1M&0Ej
                                                      (g$dup-error$10060$1M&0Ej
                                                        g$name$10314$1M&0Ej))))
                                                 g$t$10316$1M&0Ej)
                                                (cons
                                                  g$a$10312$1M&0Ej
                                                  g$subst$10313$1M&0Ej))))
                                           (g$assq$4985$1M&0Ej
                                             g$name$10314$1M&0Ej
                                             g$subst$10313$1M&0Ej))))
                                       (car g$a$10312$1M&0Ej)
                                       (cdr g$a$10312$1M&0Ej))))))
                         (if (null? g$s$10309$1M&0Ej)
                           g$subst$10310$1M&0Ej
                           (g$insert-to-subst$10311$1M&0Ej
                             (car g$s$10309$1M&0Ej)
                             (g$merge-substs$10061$1M&0Ej
                               (cdr g$s$10309$1M&0Ej)
                               g$subst$10310$1M&0Ej)))))))
                  (g$exclude*$10062$1M&0Ej
                    (case-lambda
                      ((g$sym*$10285$1M&0Ej g$subst$10286$1M&0Ej)
                       (letrec* ((g$exclude$10287$1M&0Ej
                                   (case-lambda
                                     ((g$sym$10300$1M&0Ej g$subst$10301$1M&0Ej)
                                      (if (null? g$subst$10301$1M&0Ej)
                                        (g$syntax-violation$7646$1M&0Ej
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10300$1M&0Ej)
                                        (if (eq? g$sym$10300$1M&0Ej
                                                 (g$caar$5158$1M&0Ej
                                                   g$subst$10301$1M&0Ej))
                                          (values
                                            (g$cdar$5160$1M&0Ej
                                              g$subst$10301$1M&0Ej)
                                            (cdr g$subst$10301$1M&0Ej))
                                          ((case-lambda
                                             ((g$a$10302$1M&0Ej)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10287$1M&0Ej
                                                     g$sym$10300$1M&0Ej
                                                     (cdr g$subst$10301$1M&0Ej))))
                                                (case-lambda
                                                  ((g$old$10305$1M&0Ej
                                                     g$subst$10306$1M&0Ej)
                                                   ((case-lambda
                                                      ((g$subst$10307$1M&0Ej
                                                         g$old$10308$1M&0Ej)
                                                       (values
                                                         g$old$10308$1M&0Ej
                                                         (cons
                                                           g$a$10302$1M&0Ej
                                                           g$subst$10307$1M&0Ej))))
                                                    g$subst$10306$1M&0Ej
                                                    g$old$10305$1M&0Ej))))))
                                           (car g$subst$10301$1M&0Ej))))))))
                         (if (null? g$sym*$10285$1M&0Ej)
                           (values '() g$subst$10286$1M&0Ej)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10287$1M&0Ej
                                  (car g$sym*$10285$1M&0Ej)
                                  g$subst$10286$1M&0Ej)))
                             (case-lambda
                               ((g$old$10290$1M&0Ej g$subst$10291$1M&0Ej)
                                ((case-lambda
                                   ((g$subst$10292$1M&0Ej g$old$10293$1M&0Ej)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10062$1M&0Ej
                                           (cdr g$sym*$10285$1M&0Ej)
                                           g$subst$10292$1M&0Ej)))
                                      (case-lambda
                                        ((g$old*$10296$1M&0Ej
                                           g$subst$10297$1M&0Ej)
                                         ((case-lambda
                                            ((g$subst$10298$1M&0Ej
                                               g$old*$10299$1M&0Ej)
                                             (values
                                               (cons
                                                 g$old$10293$1M&0Ej
                                                 g$old*$10299$1M&0Ej)
                                               g$subst$10298$1M&0Ej)))
                                          g$subst$10297$1M&0Ej
                                          g$old*$10296$1M&0Ej))))))
                                 g$subst$10291$1M&0Ej
                                 g$old$10290$1M&0Ej)))))))))
                  (g$find*$10063$1M&0Ej
                    (case-lambda
                      ((g$sym*$10281$1M&0Ej g$subst$10282$1M&0Ej)
                       (map (case-lambda
                              ((g$x$10283$1M&0Ej)
                               ((case-lambda
                                  ((g$t$10284$1M&0Ej)
                                   (if g$t$10284$1M&0Ej
                                     (cdr g$t$10284$1M&0Ej)
                                     (g$syntax-violation$7646$1M&0Ej
                                       'import
                                       '"cannot find identifier"
                                       g$x$10283$1M&0Ej))))
                                (g$assq$4985$1M&0Ej
                                  g$x$10283$1M&0Ej
                                  g$subst$10282$1M&0Ej))))
                            g$sym*$10281$1M&0Ej))))
                  (g$rem*$10064$1M&0Ej
                    (case-lambda
                      ((g$sym*$10277$1M&0Ej g$subst$10278$1M&0Ej)
                       ((letrec ((g$f$10279$1M&0Ej
                                   (case-lambda
                                     ((g$subst$10280$1M&0Ej)
                                      (if (null? g$subst$10280$1M&0Ej)
                                        '()
                                        (if (g$memq$4989$1M&0Ej
                                              (g$caar$5158$1M&0Ej
                                                g$subst$10280$1M&0Ej)
                                              g$sym*$10277$1M&0Ej)
                                          (g$f$10279$1M&0Ej
                                            (cdr g$subst$10280$1M&0Ej))
                                          (cons
                                            (car g$subst$10280$1M&0Ej)
                                            (g$f$10279$1M&0Ej
                                              (cdr g$subst$10280$1M&0Ej)))))))))
                          g$f$10279$1M&0Ej)
                        g$subst$10278$1M&0Ej))))
                  (g$remove-dups$10065$1M&0Ej
                    (case-lambda
                      ((g$ls$10276$1M&0Ej)
                       (if (null? g$ls$10276$1M&0Ej)
                         '()
                         (if (g$memq$4989$1M&0Ej
                               (car g$ls$10276$1M&0Ej)
                               (cdr g$ls$10276$1M&0Ej))
                           (g$remove-dups$10065$1M&0Ej (cdr g$ls$10276$1M&0Ej))
                           (cons
                             (car g$ls$10276$1M&0Ej)
                             (g$remove-dups$10065$1M&0Ej
                               (cdr g$ls$10276$1M&0Ej))))))))
                  (g$parse-library-name$10066$1M&0Ej
                    (case-lambda
                      ((g$spec$10160$1M&0Ej)
                       (letrec* ((g$subversion?$10161$1M&0Ej
                                   (case-lambda
                                     ((g$x$10274$1M&0Ej)
                                      ((case-lambda
                                         ((g$x$10275$1M&0Ej)
                                          (if (integer? g$x$10275$1M&0Ej)
                                            (if (exact? g$x$10275$1M&0Ej)
                                              (begin
                                                '#f
                                                (>= g$x$10275$1M&0Ej '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$7649$1M&0Ej
                                         g$x$10274$1M&0Ej)))))
                                 (g$subversion-pred$10162$1M&0Ej
                                   (case-lambda
                                     ((g$x*$10226$1M&0Ej)
                                      ((case-lambda
                                         ((g$t$10227$1M&0Ej)
                                          ((case-lambda
                                             ((g$ls/false$10228$1M&0Ej)
                                              (if (if g$ls/false$10228$1M&0Ej
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10229$1M&0Ej)
                                                           (g$subversion?$10161$1M&0Ej
                                                             g$n$10229$1M&0Ej)))
                                                        g$ls/false$10228$1M&0Ej))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10230$1M&0Ej)
                                                     (case-lambda
                                                       ((g$x$10231$1M&0Ej)
                                                        (= g$x$10231$1M&0Ej
                                                           (g$syntax->datum$7649$1M&0Ej
                                                             g$n$10230$1M&0Ej))))))
                                                  g$ls/false$10228$1M&0Ej)
                                                ((case-lambda
                                                   ((g$t$10232$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$ls/false$10233$1M&0Ej)
                                                        (if (if g$ls/false$10233$1M&0Ej
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10234$1M&0Ej
                                                                       g$sub*$10235$1M&0Ej)
                                                                     (eq? (g$syntax->datum$7649$1M&0Ej
                                                                            g$p?$10234$1M&0Ej)
                                                                          'and)))
                                                                  g$ls/false$10233$1M&0Ej))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10236$1M&0Ej
                                                                 g$sub*$10237$1M&0Ej)
                                                               ((case-lambda
                                                                  ((g$p*$10238$1M&0Ej)
                                                                   (case-lambda
                                                                     ((g$x$10239$1M&0Ej)
                                                                      (g$for-all$4995$1M&0Ej
                                                                        (case-lambda
                                                                          ((g$p$10240$1M&0Ej)
                                                                           (g$p$10240$1M&0Ej
                                                                             g$x$10239$1M&0Ej)))
                                                                        g$p*$10238$1M&0Ej)))))
                                                                (map g$subversion-pred$10162$1M&0Ej
                                                                     g$sub*$10237$1M&0Ej))))
                                                            g$ls/false$10233$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$t$10241$1M&0Ej)
                                                              ((case-lambda
                                                                 ((g$ls/false$10242$1M&0Ej)
                                                                  (if (if g$ls/false$10242$1M&0Ej
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10243$1M&0Ej
                                                                                 g$sub*$10244$1M&0Ej)
                                                                               (eq? (g$syntax->datum$7649$1M&0Ej
                                                                                      g$p?$10243$1M&0Ej)
                                                                                    'or)))
                                                                            g$ls/false$10242$1M&0Ej))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10245$1M&0Ej
                                                                           g$sub*$10246$1M&0Ej)
                                                                         ((case-lambda
                                                                            ((g$p*$10247$1M&0Ej)
                                                                             (case-lambda
                                                                               ((g$x$10248$1M&0Ej)
                                                                                (g$exists$4996$1M&0Ej
                                                                                  (case-lambda
                                                                                    ((g$p$10249$1M&0Ej)
                                                                                     (g$p$10249$1M&0Ej
                                                                                       g$x$10248$1M&0Ej)))
                                                                                  g$p*$10247$1M&0Ej)))))
                                                                          (map g$subversion-pred$10162$1M&0Ej
                                                                               g$sub*$10246$1M&0Ej))))
                                                                      g$ls/false$10242$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$t$10250$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10251$1M&0Ej)
                                                                            (if (if g$ls/false$10251$1M&0Ej
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10252$1M&0Ej
                                                                                           g$sub$10253$1M&0Ej)
                                                                                         (eq? (g$syntax->datum$7649$1M&0Ej
                                                                                                g$p?$10252$1M&0Ej)
                                                                                              'not)))
                                                                                      g$ls/false$10251$1M&0Ej))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10254$1M&0Ej
                                                                                     g$sub$10255$1M&0Ej)
                                                                                   ((case-lambda
                                                                                      ((g$p$10256$1M&0Ej)
                                                                                       (case-lambda
                                                                                         ((g$x$10257$1M&0Ej)
                                                                                          (not (g$p$10256$1M&0Ej
                                                                                                 g$x$10257$1M&0Ej))))))
                                                                                    (g$subversion-pred$10162$1M&0Ej
                                                                                      g$sub$10255$1M&0Ej))))
                                                                                g$ls/false$10251$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$t$10258$1M&0Ej)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10259$1M&0Ej)
                                                                                      (if (if g$ls/false$10259$1M&0Ej
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10260$1M&0Ej
                                                                                                     g$n$10261$1M&0Ej)
                                                                                                   (if (eq? (g$syntax->datum$7649$1M&0Ej
                                                                                                              g$p?$10260$1M&0Ej)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10161$1M&0Ej
                                                                                                         g$n$10261$1M&0Ej))
                                                                                                     '#f)))
                                                                                                g$ls/false$10259$1M&0Ej))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10262$1M&0Ej
                                                                                               g$n$10263$1M&0Ej)
                                                                                             (case-lambda
                                                                                               ((g$x$10264$1M&0Ej)
                                                                                                (<= g$x$10264$1M&0Ej
                                                                                                    (g$syntax->datum$7649$1M&0Ej
                                                                                                      g$n$10263$1M&0Ej))))))
                                                                                          g$ls/false$10259$1M&0Ej)
                                                                                        ((case-lambda
                                                                                           ((g$t$10265$1M&0Ej)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10266$1M&0Ej)
                                                                                                (if (if g$ls/false$10266$1M&0Ej
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10267$1M&0Ej
                                                                                                               g$n$10268$1M&0Ej)
                                                                                                             (if (eq? (g$syntax->datum$7649$1M&0Ej
                                                                                                                        g$p?$10267$1M&0Ej)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10161$1M&0Ej
                                                                                                                   g$n$10268$1M&0Ej))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10266$1M&0Ej))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10269$1M&0Ej
                                                                                                         g$n$10270$1M&0Ej)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10271$1M&0Ej)
                                                                                                          (>= g$x$10271$1M&0Ej
                                                                                                              (g$syntax->datum$7649$1M&0Ej
                                                                                                                g$n$10270$1M&0Ej))))))
                                                                                                    g$ls/false$10266$1M&0Ej)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10272$1M&0Ej)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10273$1M&0Ej)
                                                                                                          (if g$ls/false$10273$1M&0Ej
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7646$1M&0Ej
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10160$1M&0Ej
                                                                                                                   g$x*$10226$1M&0Ej)))
                                                                                                              g$ls/false$10273$1M&0Ej)
                                                                                                            (g$syntax-violation$7646$1M&0Ej
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10272$1M&0Ej))))
                                                                                                       (g$syntax-dispatch$7535$1M&0Ej
                                                                                                         g$t$10272$1M&0Ej
                                                                                                         '_))))
                                                                                                   g$t$10265$1M&0Ej))))
                                                                                             (g$syntax-dispatch$7535$1M&0Ej
                                                                                               g$t$10265$1M&0Ej
                                                                                               '(any any)))))
                                                                                         g$t$10258$1M&0Ej))))
                                                                                   (g$syntax-dispatch$7535$1M&0Ej
                                                                                     g$t$10258$1M&0Ej
                                                                                     '(any any)))))
                                                                               g$t$10250$1M&0Ej))))
                                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                                           g$t$10250$1M&0Ej
                                                                           '(any any)))))
                                                                     g$t$10241$1M&0Ej))))
                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                 g$t$10241$1M&0Ej
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10232$1M&0Ej))))
                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                       g$t$10232$1M&0Ej
                                                       '(any . each-any)))))
                                                 g$t$10227$1M&0Ej))))
                                           (g$syntax-dispatch$7535$1M&0Ej
                                             g$t$10227$1M&0Ej
                                             'any))))
                                       g$x*$10226$1M&0Ej))))
                                 (g$version-pred$10163$1M&0Ej
                                   (case-lambda
                                     ((g$x*$10186$1M&0Ej)
                                      ((case-lambda
                                         ((g$t$10187$1M&0Ej)
                                          ((case-lambda
                                             ((g$ls/false$10188$1M&0Ej)
                                              (if g$ls/false$10188$1M&0Ej
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10189$1M&0Ej)
                                                        '#t))))
                                                  g$ls/false$10188$1M&0Ej)
                                                ((case-lambda
                                                   ((g$t$10190$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$ls/false$10191$1M&0Ej)
                                                        (if (if g$ls/false$10191$1M&0Ej
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10192$1M&0Ej
                                                                       g$ver*$10193$1M&0Ej)
                                                                     (eq? (g$syntax->datum$7649$1M&0Ej
                                                                            g$c$10192$1M&0Ej)
                                                                          'and)))
                                                                  g$ls/false$10191$1M&0Ej))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10194$1M&0Ej
                                                                 g$ver*$10195$1M&0Ej)
                                                               ((case-lambda
                                                                  ((g$p*$10196$1M&0Ej)
                                                                   (case-lambda
                                                                     ((g$x$10197$1M&0Ej)
                                                                      (g$for-all$4995$1M&0Ej
                                                                        (case-lambda
                                                                          ((g$p$10198$1M&0Ej)
                                                                           (g$p$10198$1M&0Ej
                                                                             g$x$10197$1M&0Ej)))
                                                                        g$p*$10196$1M&0Ej)))))
                                                                (map g$version-pred$10163$1M&0Ej
                                                                     g$ver*$10195$1M&0Ej))))
                                                            g$ls/false$10191$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$t$10199$1M&0Ej)
                                                              ((case-lambda
                                                                 ((g$ls/false$10200$1M&0Ej)
                                                                  (if (if g$ls/false$10200$1M&0Ej
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10201$1M&0Ej
                                                                                 g$ver*$10202$1M&0Ej)
                                                                               (eq? (g$syntax->datum$7649$1M&0Ej
                                                                                      g$c$10201$1M&0Ej)
                                                                                    'or)))
                                                                            g$ls/false$10200$1M&0Ej))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10203$1M&0Ej
                                                                           g$ver*$10204$1M&0Ej)
                                                                         ((case-lambda
                                                                            ((g$p*$10205$1M&0Ej)
                                                                             (case-lambda
                                                                               ((g$x$10206$1M&0Ej)
                                                                                (g$exists$4996$1M&0Ej
                                                                                  (case-lambda
                                                                                    ((g$p$10207$1M&0Ej)
                                                                                     (g$p$10207$1M&0Ej
                                                                                       g$x$10206$1M&0Ej)))
                                                                                  g$p*$10205$1M&0Ej)))))
                                                                          (map g$version-pred$10163$1M&0Ej
                                                                               g$ver*$10204$1M&0Ej))))
                                                                      g$ls/false$10200$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$t$10208$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10209$1M&0Ej)
                                                                            (if (if g$ls/false$10209$1M&0Ej
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10210$1M&0Ej
                                                                                           g$ver$10211$1M&0Ej)
                                                                                         (eq? (g$syntax->datum$7649$1M&0Ej
                                                                                                g$c$10210$1M&0Ej)
                                                                                              'not)))
                                                                                      g$ls/false$10209$1M&0Ej))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10212$1M&0Ej
                                                                                     g$ver$10213$1M&0Ej)
                                                                                   ((case-lambda
                                                                                      ((g$p$10214$1M&0Ej)
                                                                                       (case-lambda
                                                                                         ((g$x$10215$1M&0Ej)
                                                                                          (not (g$p$10214$1M&0Ej
                                                                                                 g$x$10215$1M&0Ej))))))
                                                                                    (g$version-pred$10163$1M&0Ej
                                                                                      g$ver$10213$1M&0Ej))))
                                                                                g$ls/false$10209$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$t$10216$1M&0Ej)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10217$1M&0Ej)
                                                                                      (if g$ls/false$10217$1M&0Ej
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10218$1M&0Ej)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10219$1M&0Ej)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10220$1M&0Ej)
                                                                                                    ((letrec ((g$f$10221$1M&0Ej
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10222$1M&0Ej
                                                                                                                     g$x$10223$1M&0Ej)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10222$1M&0Ej)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10223$1M&0Ej)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10222$1M&0Ej)
                                                                                                                            (car g$x$10223$1M&0Ej))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10221$1M&0Ej
                                                                                                                             (cdr g$p*$10222$1M&0Ej)
                                                                                                                             (cdr g$x$10223$1M&0Ej)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10221$1M&0Ej)
                                                                                                     g$p*$10219$1M&0Ej
                                                                                                     g$x$10220$1M&0Ej)))))
                                                                                              (map g$subversion-pred$10162$1M&0Ej
                                                                                                   g$sub*$10218$1M&0Ej))))
                                                                                          g$ls/false$10217$1M&0Ej)
                                                                                        ((case-lambda
                                                                                           ((g$t$10224$1M&0Ej)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10225$1M&0Ej)
                                                                                                (if g$ls/false$10225$1M&0Ej
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7646$1M&0Ej
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10160$1M&0Ej
                                                                                                         g$x*$10186$1M&0Ej)))
                                                                                                    g$ls/false$10225$1M&0Ej)
                                                                                                  (g$syntax-violation$7646$1M&0Ej
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10224$1M&0Ej))))
                                                                                             (g$syntax-dispatch$7535$1M&0Ej
                                                                                               g$t$10224$1M&0Ej
                                                                                               '_))))
                                                                                         g$t$10216$1M&0Ej))))
                                                                                   (g$syntax-dispatch$7535$1M&0Ej
                                                                                     g$t$10216$1M&0Ej
                                                                                     'each-any))))
                                                                               g$t$10208$1M&0Ej))))
                                                                         (g$syntax-dispatch$7535$1M&0Ej
                                                                           g$t$10208$1M&0Ej
                                                                           '(any any)))))
                                                                     g$t$10199$1M&0Ej))))
                                                               (g$syntax-dispatch$7535$1M&0Ej
                                                                 g$t$10199$1M&0Ej
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10190$1M&0Ej))))
                                                     (g$syntax-dispatch$7535$1M&0Ej
                                                       g$t$10190$1M&0Ej
                                                       '(any . each-any)))))
                                                 g$t$10187$1M&0Ej))))
                                           (g$syntax-dispatch$7535$1M&0Ej
                                             g$t$10187$1M&0Ej
                                             '()))))
                                       g$x*$10186$1M&0Ej)))))
                         ((letrec ((g$f$10164$1M&0Ej
                                     (case-lambda
                                       ((g$x$10165$1M&0Ej)
                                        ((case-lambda
                                           ((g$t$10166$1M&0Ej)
                                            ((case-lambda
                                               ((g$ls/false$10167$1M&0Ej)
                                                (if g$ls/false$10167$1M&0Ej
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10168$1M&0Ej)
                                                       (values
                                                         '()
                                                         (g$version-pred$10163$1M&0Ej
                                                           g$version-spec*$10168$1M&0Ej))))
                                                    g$ls/false$10167$1M&0Ej)
                                                  ((case-lambda
                                                     ((g$t$10169$1M&0Ej)
                                                      ((case-lambda
                                                         ((g$ls/false$10170$1M&0Ej)
                                                          (if (if g$ls/false$10170$1M&0Ej
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10171$1M&0Ej
                                                                         g$x*$10172$1M&0Ej)
                                                                       (g$idsyn?$10059$1M&0Ej
                                                                         g$x$10171$1M&0Ej)))
                                                                    g$ls/false$10170$1M&0Ej))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10173$1M&0Ej
                                                                   g$x*$10174$1M&0Ej)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10164$1M&0Ej
                                                                        g$x*$10174$1M&0Ej)))
                                                                   (case-lambda
                                                                     ((g$name$10177$1M&0Ej
                                                                        g$pred$10178$1M&0Ej)
                                                                      ((case-lambda
                                                                         ((g$pred$10179$1M&0Ej
                                                                            g$name$10180$1M&0Ej)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7649$1M&0Ej
                                                                                g$x$10173$1M&0Ej)
                                                                              g$name$10180$1M&0Ej)
                                                                            g$pred$10179$1M&0Ej)))
                                                                       g$pred$10178$1M&0Ej
                                                                       g$name$10177$1M&0Ej))))))
                                                              g$ls/false$10170$1M&0Ej)
                                                            ((case-lambda
                                                               ((g$t$10181$1M&0Ej)
                                                                ((case-lambda
                                                                   ((g$ls/false$10182$1M&0Ej)
                                                                    (if g$ls/false$10182$1M&0Ej
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10183$1M&0Ej)
                                                                                '#t)))))
                                                                        g$ls/false$10182$1M&0Ej)
                                                                      ((case-lambda
                                                                         ((g$t$10184$1M&0Ej)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10185$1M&0Ej)
                                                                              (if g$ls/false$10185$1M&0Ej
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7646$1M&0Ej
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10160$1M&0Ej)))
                                                                                  g$ls/false$10185$1M&0Ej)
                                                                                (g$syntax-violation$7646$1M&0Ej
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10184$1M&0Ej))))
                                                                           (g$syntax-dispatch$7535$1M&0Ej
                                                                             g$t$10184$1M&0Ej
                                                                             '_))))
                                                                       g$t$10181$1M&0Ej))))
                                                                 (g$syntax-dispatch$7535$1M&0Ej
                                                                   g$t$10181$1M&0Ej
                                                                   '()))))
                                                             g$t$10169$1M&0Ej))))
                                                       (g$syntax-dispatch$7535$1M&0Ej
                                                         g$t$10169$1M&0Ej
                                                         '(any . any)))))
                                                   g$t$10166$1M&0Ej))))
                                             (g$syntax-dispatch$7535$1M&0Ej
                                               g$t$10166$1M&0Ej
                                               '(each-any)))))
                                         g$x$10165$1M&0Ej)))))
                            g$f$10164$1M&0Ej)
                          g$spec$10160$1M&0Ej)))))
                  (g$import-library$10067$1M&0Ej
                    (case-lambda
                      ((g$spec*$10152$1M&0Ej)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10066$1M&0Ej
                              g$spec*$10152$1M&0Ej)))
                         (case-lambda
                           ((g$name$10155$1M&0Ej g$pred$10156$1M&0Ej)
                            ((case-lambda
                               ((g$pred$10157$1M&0Ej g$name$10158$1M&0Ej)
                                (begin
                                  (if (null? g$name$10158$1M&0Ej)
                                    (g$syntax-violation$7646$1M&0Ej
                                      'import
                                      '"empty library name"
                                      g$spec*$10152$1M&0Ej)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10159$1M&0Ej)
                                      (begin
                                        (if (not g$lib$10159$1M&0Ej)
                                          (g$syntax-violation$7646$1M&0Ej
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10158$1M&0Ej)
                                          (void))
                                        (if (not (g$pred$10157$1M&0Ej
                                                   (g$library-version$7020$1M&0Ej
                                                     g$lib$10159$1M&0Ej)))
                                          (g$syntax-violation$7646$1M&0Ej
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10152$1M&0Ej
                                            g$lib$10159$1M&0Ej)
                                          (void))
                                        ((g$imp-collector$7589$1M&0Ej)
                                         g$lib$10159$1M&0Ej)
                                        (g$library-subst$7024$1M&0Ej
                                          g$lib$10159$1M&0Ej))))
                                   (g$find-library-by-name$7060$1M&0Ej
                                     g$name$10158$1M&0Ej)))))
                             g$pred$10156$1M&0Ej
                             g$name$10155$1M&0Ej)))))))
                  (g$get-import$10068$1M&0Ej
                    (case-lambda
                      ((g$spec$10081$1M&0Ej)
                       ((case-lambda
                          ((g$t$10082$1M&0Ej)
                           ((case-lambda
                              ((g$ls/false$10083$1M&0Ej)
                               (if (if g$ls/false$10083$1M&0Ej
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10084$1M&0Ej g$x*$10085$1M&0Ej)
                                            (not (g$memq$4989$1M&0Ej
                                                   (g$syntax->datum$7649$1M&0Ej
                                                     g$x$10084$1M&0Ej)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10083$1M&0Ej))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10086$1M&0Ej g$x*$10087$1M&0Ej)
                                      (g$import-library$10067$1M&0Ej
                                        (cons
                                          g$x$10086$1M&0Ej
                                          g$x*$10087$1M&0Ej))))
                                   g$ls/false$10083$1M&0Ej)
                                 ((case-lambda
                                    ((g$t$10088$1M&0Ej)
                                     ((case-lambda
                                        ((g$ls/false$10089$1M&0Ej)
                                         (if (if g$ls/false$10089$1M&0Ej
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10090$1M&0Ej
                                                        g$isp$10091$1M&0Ej
                                                        g$old*$10092$1M&0Ej
                                                        g$new*$10093$1M&0Ej)
                                                      (if (eq? (g$syntax->datum$7649$1M&0Ej
                                                                 g$rename$10090$1M&0Ej)
                                                               'rename)
                                                        (if (g$for-all$4995$1M&0Ej
                                                              g$idsyn?$10059$1M&0Ej
                                                              g$old*$10092$1M&0Ej)
                                                          (begin
                                                            '#f
                                                            (g$for-all$4995$1M&0Ej
                                                              g$idsyn?$10059$1M&0Ej
                                                              g$new*$10093$1M&0Ej))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10089$1M&0Ej))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10094$1M&0Ej
                                                  g$isp$10095$1M&0Ej
                                                  g$old*$10096$1M&0Ej
                                                  g$new*$10097$1M&0Ej)
                                                ((case-lambda
                                                   ((g$subst$10098$1M&0Ej
                                                      g$old*$10099$1M&0Ej
                                                      g$new*$10100$1M&0Ej)
                                                    ((case-lambda
                                                       ((g$old-label*$10101$1M&0Ej)
                                                        ((case-lambda
                                                           ((g$subst$10102$1M&0Ej)
                                                            (g$merge-substs$10061$1M&0Ej
                                                              (map cons
                                                                   g$new*$10100$1M&0Ej
                                                                   g$old-label*$10101$1M&0Ej)
                                                              g$subst$10102$1M&0Ej)))
                                                         (g$rem*$10064$1M&0Ej
                                                           g$old*$10099$1M&0Ej
                                                           g$subst$10098$1M&0Ej))))
                                                     (g$find*$10063$1M&0Ej
                                                       g$old*$10099$1M&0Ej
                                                       g$subst$10098$1M&0Ej))))
                                                 (g$get-import$10068$1M&0Ej
                                                   g$isp$10095$1M&0Ej)
                                                 (map g$syntax->datum$7649$1M&0Ej
                                                      g$old*$10096$1M&0Ej)
                                                 (map g$syntax->datum$7649$1M&0Ej
                                                      g$new*$10097$1M&0Ej))))
                                             g$ls/false$10089$1M&0Ej)
                                           ((case-lambda
                                              ((g$t$10103$1M&0Ej)
                                               ((case-lambda
                                                  ((g$ls/false$10104$1M&0Ej)
                                                   (if (if g$ls/false$10104$1M&0Ej
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10105$1M&0Ej
                                                                  g$isp$10106$1M&0Ej
                                                                  g$sym*$10107$1M&0Ej)
                                                                (if (eq? (g$syntax->datum$7649$1M&0Ej
                                                                           g$except$10105$1M&0Ej)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$4995$1M&0Ej
                                                                      g$idsyn?$10059$1M&0Ej
                                                                      g$sym*$10107$1M&0Ej))
                                                                  '#f)))
                                                             g$ls/false$10104$1M&0Ej))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10108$1M&0Ej
                                                            g$isp$10109$1M&0Ej
                                                            g$sym*$10110$1M&0Ej)
                                                          ((case-lambda
                                                             ((g$subst$10111$1M&0Ej)
                                                              (g$rem*$10064$1M&0Ej
                                                                (map g$syntax->datum$7649$1M&0Ej
                                                                     g$sym*$10110$1M&0Ej)
                                                                g$subst$10111$1M&0Ej)))
                                                           (g$get-import$10068$1M&0Ej
                                                             g$isp$10109$1M&0Ej))))
                                                       g$ls/false$10104$1M&0Ej)
                                                     ((case-lambda
                                                        ((g$t$10112$1M&0Ej)
                                                         ((case-lambda
                                                            ((g$ls/false$10113$1M&0Ej)
                                                             (if (if g$ls/false$10113$1M&0Ej
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10114$1M&0Ej
                                                                            g$isp$10115$1M&0Ej
                                                                            g$sym*$10116$1M&0Ej)
                                                                          (if (eq? (g$syntax->datum$7649$1M&0Ej
                                                                                     g$only$10114$1M&0Ej)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$4995$1M&0Ej
                                                                                g$idsyn?$10059$1M&0Ej
                                                                                g$sym*$10116$1M&0Ej))
                                                                            '#f)))
                                                                       g$ls/false$10113$1M&0Ej))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10117$1M&0Ej
                                                                      g$isp$10118$1M&0Ej
                                                                      g$sym*$10119$1M&0Ej)
                                                                    ((case-lambda
                                                                       ((g$subst$10120$1M&0Ej
                                                                          g$sym*$10121$1M&0Ej)
                                                                        ((case-lambda
                                                                           ((g$sym*$10122$1M&0Ej)
                                                                            ((case-lambda
                                                                               ((g$lab*$10123$1M&0Ej)
                                                                                (map cons
                                                                                     g$sym*$10122$1M&0Ej
                                                                                     g$lab*$10123$1M&0Ej)))
                                                                             (g$find*$10063$1M&0Ej
                                                                               g$sym*$10122$1M&0Ej
                                                                               g$subst$10120$1M&0Ej))))
                                                                         (g$remove-dups$10065$1M&0Ej
                                                                           g$sym*$10121$1M&0Ej))))
                                                                     (g$get-import$10068$1M&0Ej
                                                                       g$isp$10118$1M&0Ej)
                                                                     (map g$syntax->datum$7649$1M&0Ej
                                                                          g$sym*$10119$1M&0Ej))))
                                                                 g$ls/false$10113$1M&0Ej)
                                                               ((case-lambda
                                                                  ((g$t$10124$1M&0Ej)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10125$1M&0Ej)
                                                                       (if (if g$ls/false$10125$1M&0Ej
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10126$1M&0Ej
                                                                                      g$isp$10127$1M&0Ej
                                                                                      g$p$10128$1M&0Ej)
                                                                                    (if (eq? (g$syntax->datum$7649$1M&0Ej
                                                                                               g$prefix$10126$1M&0Ej)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10059$1M&0Ej
                                                                                          g$p$10128$1M&0Ej))
                                                                                      '#f)))
                                                                                 g$ls/false$10125$1M&0Ej))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10129$1M&0Ej
                                                                                g$isp$10130$1M&0Ej
                                                                                g$p$10131$1M&0Ej)
                                                                              ((case-lambda
                                                                                 ((g$subst$10132$1M&0Ej
                                                                                    g$prefix$10133$1M&0Ej)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10134$1M&0Ej)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10133$1M&0Ej
                                                                                                (symbol->string
                                                                                                  (car g$x$10134$1M&0Ej))))
                                                                                            (cdr g$x$10134$1M&0Ej))))
                                                                                       g$subst$10132$1M&0Ej)))
                                                                               (g$get-import$10068$1M&0Ej
                                                                                 g$isp$10130$1M&0Ej)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7649$1M&0Ej
                                                                                   g$p$10131$1M&0Ej)))))
                                                                           g$ls/false$10125$1M&0Ej)
                                                                         ((case-lambda
                                                                            ((g$t$10135$1M&0Ej)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10136$1M&0Ej)
                                                                                 (if (if g$ls/false$10136$1M&0Ej
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10137$1M&0Ej
                                                                                                g$spec*$10138$1M&0Ej)
                                                                                              (eq? (g$syntax->datum$7649$1M&0Ej
                                                                                                     g$library$10137$1M&0Ej)
                                                                                                   'library)))
                                                                                           g$ls/false$10136$1M&0Ej))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10139$1M&0Ej
                                                                                          g$spec*$10140$1M&0Ej)
                                                                                        (g$import-library$10067$1M&0Ej
                                                                                          g$spec*$10140$1M&0Ej)))
                                                                                     g$ls/false$10136$1M&0Ej)
                                                                                   ((case-lambda
                                                                                      ((g$t$10141$1M&0Ej)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10142$1M&0Ej)
                                                                                           (if (if g$ls/false$10142$1M&0Ej
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10143$1M&0Ej
                                                                                                          g$isp$10144$1M&0Ej
                                                                                                          g$rest$10145$1M&0Ej)
                                                                                                        (eq? (g$syntax->datum$7649$1M&0Ej
                                                                                                               g$for$10143$1M&0Ej)
                                                                                                             'for)))
                                                                                                     g$ls/false$10142$1M&0Ej))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10146$1M&0Ej
                                                                                                    g$isp$10147$1M&0Ej
                                                                                                    g$rest$10148$1M&0Ej)
                                                                                                  (g$get-import$10068$1M&0Ej
                                                                                                    g$isp$10147$1M&0Ej)))
                                                                                               g$ls/false$10142$1M&0Ej)
                                                                                             ((case-lambda
                                                                                                ((g$t$10149$1M&0Ej)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10150$1M&0Ej)
                                                                                                     (if g$ls/false$10150$1M&0Ej
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10151$1M&0Ej)
                                                                                                            (g$syntax-violation$7646$1M&0Ej
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10151$1M&0Ej)))
                                                                                                         g$ls/false$10150$1M&0Ej)
                                                                                                       (g$syntax-violation$7646$1M&0Ej
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10149$1M&0Ej))))
                                                                                                  (g$syntax-dispatch$7535$1M&0Ej
                                                                                                    g$t$10149$1M&0Ej
                                                                                                    'any))))
                                                                                              g$t$10141$1M&0Ej))))
                                                                                        (g$syntax-dispatch$7535$1M&0Ej
                                                                                          g$t$10141$1M&0Ej
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10135$1M&0Ej))))
                                                                              (g$syntax-dispatch$7535$1M&0Ej
                                                                                g$t$10135$1M&0Ej
                                                                                '(any each-any)))))
                                                                          g$t$10124$1M&0Ej))))
                                                                    (g$syntax-dispatch$7535$1M&0Ej
                                                                      g$t$10124$1M&0Ej
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10112$1M&0Ej))))
                                                          (g$syntax-dispatch$7535$1M&0Ej
                                                            g$t$10112$1M&0Ej
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10103$1M&0Ej))))
                                                (g$syntax-dispatch$7535$1M&0Ej
                                                  g$t$10103$1M&0Ej
                                                  '(any any . each-any)))))
                                            g$t$10088$1M&0Ej))))
                                      (g$syntax-dispatch$7535$1M&0Ej
                                        g$t$10088$1M&0Ej
                                        '(any any . #(each (any any)))))))
                                  g$t$10082$1M&0Ej))))
                            (g$syntax-dispatch$7535$1M&0Ej
                              g$t$10082$1M&0Ej
                              '(any . each-any)))))
                        g$spec$10081$1M&0Ej))))
                  (g$add-imports!$10069$1M&0Ej
                    (case-lambda
                      ((g$imp$10073$1M&0Ej g$h$10074$1M&0Ej)
                       ((case-lambda
                          ((g$subst$10075$1M&0Ej)
                           (for-each
                             (case-lambda
                               ((g$x$10076$1M&0Ej)
                                ((case-lambda
                                   ((g$name$10077$1M&0Ej g$label$10078$1M&0Ej)
                                    ((case-lambda
                                       ((g$t$10079$1M&0Ej)
                                        (if g$t$10079$1M&0Ej
                                          ((case-lambda
                                             ((g$l$10080$1M&0Ej)
                                              (if (not (eq? g$l$10080$1M&0Ej
                                                            g$label$10078$1M&0Ej))
                                                (g$dup-error$10060$1M&0Ej
                                                  g$name$10077$1M&0Ej)
                                                (void))))
                                           g$t$10079$1M&0Ej)
                                          (g$hashtable-set!$5437$1M&0Ej
                                            g$h$10074$1M&0Ej
                                            g$name$10077$1M&0Ej
                                            g$label$10078$1M&0Ej))))
                                     (g$hashtable-ref$5436$1M&0Ej
                                       g$h$10074$1M&0Ej
                                       g$name$10077$1M&0Ej
                                       '#f))))
                                 (car g$x$10076$1M&0Ej)
                                 (cdr g$x$10076$1M&0Ej))))
                             g$subst$10075$1M&0Ej)))
                        (g$get-import$10068$1M&0Ej g$imp$10073$1M&0Ej))))))
          ((letrec ((g$f$10070$1M&0Ej
                      (case-lambda
                        ((g$imp*$10071$1M&0Ej g$h$10072$1M&0Ej)
                         (if (null? g$imp*$10071$1M&0Ej)
                           (hashtable-entries g$h$10072$1M&0Ej)
                           (begin
                             (g$add-imports!$10069$1M&0Ej
                               (car g$imp*$10071$1M&0Ej)
                               g$h$10072$1M&0Ej)
                             (g$f$10070$1M&0Ej
                               (cdr g$imp*$10071$1M&0Ej)
                               g$h$10072$1M&0Ej)))))))
             g$f$10070$1M&0Ej)
           g$imp*$10058$1M&0Ej
           (g$make-eq-hashtable$5433$1M&0Ej))))))
   (g$make-top-rib$7585$1M&0Ej
     g$make-top-rib$11073$1M&0Ej
     (case-lambda
       ((g$names$10320$1M&0Ej g$labels$10321$1M&0Ej)
        ((case-lambda
           ((g$rib$10322$1M&0Ej)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10323$1M&0Ej g$label$10324$1M&0Ej)
                   (begin
                     (if (not (symbol? g$name$10323$1M&0Ej))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10323$1M&0Ej)
                       (void))
                     (g$extend-rib/nc!$7221$1M&0Ej
                       g$rib$10322$1M&0Ej
                       (g$make-stx$7230$1M&0Ej
                         g$name$10323$1M&0Ej
                         g$top-mark*$7194$1M&0Ej
                         '()
                         '())
                       g$label$10324$1M&0Ej))))
                g$names$10320$1M&0Ej
                g$labels$10321$1M&0Ej)
              g$rib$10322$1M&0Ej)))
         (g$make-cache-rib$7218$1M&0Ej)))))
   (g$make-collector$7586$1M&0Ej
     g$make-collector$11074$1M&0Ej
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10325$1M&0Ej)
            (case-lambda
              (() g$ls$10325$1M&0Ej)
              ((g$x$10326$1M&0Ej)
               (set! g$ls$10325$1M&0Ej
                 (g$set-cons$7191$1M&0Ej
                   g$x$10326$1M&0Ej
                   g$ls$10325$1M&0Ej))))))
         '()))))
   (g$inv-collector$7587$1M&0Ej
     g$inv-collector$11075$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       (case-lambda
         (g$args$10327$1M&0Ej
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10328$1M&0Ej)
          (begin
            (if (not (procedure? g$x$10328$1M&0Ej))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10328$1M&0Ej)
              (void))
            g$x$10328$1M&0Ej)))))
   (g$vis-collector$7588$1M&0Ej
     g$vis-collector$11076$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       (case-lambda
         (g$args$10329$1M&0Ej
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10330$1M&0Ej)
          (begin
            (if (not (procedure? g$x$10330$1M&0Ej))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10330$1M&0Ej)
              (void))
            g$x$10330$1M&0Ej)))))
   (g$imp-collector$7589$1M&0Ej
     g$imp-collector$11077$1M&0Ej
     (g$make-parameter$6520$1M&0Ej
       (case-lambda
         (g$args$10331$1M&0Ej
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10332$1M&0Ej)
          (begin
            (if (not (procedure? g$x$10332$1M&0Ej))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10332$1M&0Ej)
              (void))
            g$x$10332$1M&0Ej)))))
   (g$chi-library-internal$7590$1M&0Ej
     g$chi-library-internal$11078$1M&0Ej
     (case-lambda
       ((g$e*$10333$1M&0Ej g$rib$10334$1M&0Ej g$top?$10335$1M&0Ej)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7579$1M&0Ej
               g$e*$10333$1M&0Ej
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10334$1M&0Ej
               g$top?$10335$1M&0Ej)))
          (case-lambda
            ((g$e*$10344$1M&0Ej
               g$r$10345$1M&0Ej
               g$mr$10346$1M&0Ej
               g$lex*$10347$1M&0Ej
               g$rhs*$10348$1M&0Ej
               g$mod**$10349$1M&0Ej
               g$_kwd*$10350$1M&0Ej
               g$exp*$10351$1M&0Ej)
             ((case-lambda
                ((g$exp*$10352$1M&0Ej
                   g$_kwd*$10353$1M&0Ej
                   g$mod**$10354$1M&0Ej
                   g$rhs*$10355$1M&0Ej
                   g$lex*$10356$1M&0Ej
                   g$mr$10357$1M&0Ej
                   g$r$10358$1M&0Ej
                   g$e*$10359$1M&0Ej)
                 (values
                   (append
                     (apply append (reverse g$mod**$10354$1M&0Ej))
                     g$e*$10359$1M&0Ej)
                   g$r$10358$1M&0Ej
                   g$mr$10357$1M&0Ej
                   (reverse g$lex*$10356$1M&0Ej)
                   (reverse g$rhs*$10355$1M&0Ej)
                   g$exp*$10352$1M&0Ej)))
              g$exp*$10351$1M&0Ej
              g$_kwd*$10350$1M&0Ej
              g$mod**$10349$1M&0Ej
              g$rhs*$10348$1M&0Ej
              g$lex*$10347$1M&0Ej
              g$mr$10346$1M&0Ej
              g$r$10345$1M&0Ej
              g$e*$10344$1M&0Ej)))))))
   (g$chi-interaction-expr$7591$1M&0Ej
     g$chi-interaction-expr$11079$1M&0Ej
     (case-lambda
       ((g$e$10360$1M&0Ej g$rib$10361$1M&0Ej g$r$10362$1M&0Ej)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7579$1M&0Ej
               (list g$e$10360$1M&0Ej)
               g$r$10362$1M&0Ej
               g$r$10362$1M&0Ej
               '()
               '()
               '()
               '()
               '()
               g$rib$10361$1M&0Ej
               '#t)))
          (case-lambda
            ((g$e*$10371$1M&0Ej
               g$r$10372$1M&0Ej
               g$mr$10373$1M&0Ej
               g$lex*$10374$1M&0Ej
               g$rhs*$10375$1M&0Ej
               g$mod**$10376$1M&0Ej
               g$_kwd*$10377$1M&0Ej
               g$_exp*$10378$1M&0Ej)
             ((case-lambda
                ((g$_exp*$10379$1M&0Ej
                   g$_kwd*$10380$1M&0Ej
                   g$mod**$10381$1M&0Ej
                   g$rhs*$10382$1M&0Ej
                   g$lex*$10383$1M&0Ej
                   g$mr$10384$1M&0Ej
                   g$r$10385$1M&0Ej
                   g$e*$10386$1M&0Ej)
                 ((case-lambda
                    ((g$e*$10387$1M&0Ej)
                     ((case-lambda
                        ((g$e$10388$1M&0Ej)
                         (values g$e$10388$1M&0Ej g$r$10385$1M&0Ej)))
                      (if (null? g$e*$10387$1M&0Ej)
                        (g$build-void$7187$1M&0Ej)
                        (if (null? (cdr g$e*$10387$1M&0Ej))
                          (car g$e*$10387$1M&0Ej)
                          (g$build-sequence$7186$1M&0Ej
                            '#f
                            g$e*$10387$1M&0Ej))))))
                  (g$expand-interaction-rhs*/init*$7560$1M&0Ej
                    (reverse g$lex*$10383$1M&0Ej)
                    (reverse g$rhs*$10382$1M&0Ej)
                    (append
                      (apply append (reverse g$mod**$10381$1M&0Ej))
                      g$e*$10386$1M&0Ej)
                    g$r$10385$1M&0Ej
                    g$mr$10384$1M&0Ej))))
              g$_exp*$10378$1M&0Ej
              g$_kwd*$10377$1M&0Ej
              g$mod**$10376$1M&0Ej
              g$rhs*$10375$1M&0Ej
              g$lex*$10374$1M&0Ej
              g$mr$10373$1M&0Ej
              g$r$10372$1M&0Ej
              g$e*$10371$1M&0Ej)))))))
   (g$library-body-expander$7592$1M&0Ej
     g$library-body-expander$11080$1M&0Ej
     (case-lambda
       ((g$name$10389$1M&0Ej
          g$main-exp*$10390$1M&0Ej
          g$imp*$10391$1M&0Ej
          g$b*$10392$1M&0Ej
          g$top?$10393$1M&0Ej)
        (letrec* ((g$itc$10394$1M&0Ej (g$make-collector$7586$1M&0Ej)))
          ((case-lambda
             ((g$imp-collector$10399$1M&0Ej
                g$top-level-context$10400$1M&0Ej
                g$imp-collector$10401$1M&0Ej
                g$top-level-context$10402$1M&0Ej)
              ((case-lambda
                 ((g$swap$10403$1M&0Ej)
                  (dynamic-wind
                    g$swap$10403$1M&0Ej
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$7584$1M&0Ej
                              g$imp*$10391$1M&0Ej)))
                         (case-lambda
                           ((g$subst-names$10406$1M&0Ej
                              g$subst-labels$10407$1M&0Ej)
                            ((case-lambda
                               ((g$subst-labels$10408$1M&0Ej
                                  g$subst-names$10409$1M&0Ej)
                                ((case-lambda
                                   ((g$rib$10410$1M&0Ej)
                                    (letrec* ((g$wrap$10411$1M&0Ej
                                                (case-lambda
                                                  ((g$x$10473$1M&0Ej)
                                                   (g$make-stx$7230$1M&0Ej
                                                     g$x$10473$1M&0Ej
                                                     g$top-mark*$7194$1M&0Ej
                                                     (list g$rib$10410$1M&0Ej)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$10412$1M&0Ej
                                            g$main-exp*$10413$1M&0Ej
                                            g$rtc$10414$1M&0Ej
                                            g$vtc$10415$1M&0Ej)
                                          ((case-lambda
                                             ((g$inv-collector$10420$1M&0Ej
                                                g$vis-collector$10421$1M&0Ej
                                                g$inv-collector$10422$1M&0Ej
                                                g$vis-collector$10423$1M&0Ej)
                                              ((case-lambda
                                                 ((g$swap$10424$1M&0Ej)
                                                  (dynamic-wind
                                                    g$swap$10424$1M&0Ej
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$7590$1M&0Ej
                                                              g$b*$10412$1M&0Ej
                                                              g$rib$10410$1M&0Ej
                                                              g$top?$10393$1M&0Ej)))
                                                         (case-lambda
                                                           ((g$init*$10431$1M&0Ej
                                                              g$r$10432$1M&0Ej
                                                              g$mr$10433$1M&0Ej
                                                              g$lex*$10434$1M&0Ej
                                                              g$rhs*$10435$1M&0Ej
                                                              g$internal-exp*$10436$1M&0Ej)
                                                            ((case-lambda
                                                               ((g$internal-exp*$10437$1M&0Ej
                                                                  g$rhs*$10438$1M&0Ej
                                                                  g$lex*$10439$1M&0Ej
                                                                  g$mr$10440$1M&0Ej
                                                                  g$r$10441$1M&0Ej
                                                                  g$init*$10442$1M&0Ej)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$7581$1M&0Ej
                                                                       (append
                                                                         g$main-exp*$10413$1M&0Ej
                                                                         g$internal-exp*$10437$1M&0Ej))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$10445$1M&0Ej
                                                                       g$exp-id*$10446$1M&0Ej)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$10447$1M&0Ej
                                                                           g$exp-name*$10448$1M&0Ej)
                                                                         (begin
                                                                           (g$seal-rib!$7223$1M&0Ej
                                                                             g$rib$10410$1M&0Ej)
                                                                           ((case-lambda
                                                                              ((g$init*$10449$1M&0Ej)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$10450$1M&0Ej)
                                                                                   ((case-lambda
                                                                                      (()
                                                                                       (begin
                                                                                         (g$unseal-rib!$7224$1M&0Ej
                                                                                           g$rib$10410$1M&0Ej)
                                                                                         ((case-lambda
                                                                                            ((g$loc*$10451$1M&0Ej
                                                                                               g$export-subst$10452$1M&0Ej)
                                                                                             (letrec* ((g$errstr$10453$1M&0Ej
                                                                                                         '"attempt to export mutated variable"))
                                                                                               (call-with-values
                                                                                                 (case-lambda
                                                                                                   (()
                                                                                                    (g$make-export-env/macros$7635$1M&0Ej
                                                                                                      g$lex*$10439$1M&0Ej
                                                                                                      g$loc*$10451$1M&0Ej
                                                                                                      g$r$10441$1M&0Ej)))
                                                                                                 (case-lambda
                                                                                                   ((g$export-env$10457$1M&0Ej
                                                                                                      g$global*$10458$1M&0Ej
                                                                                                      g$macro*$10459$1M&0Ej)
                                                                                                    ((case-lambda
                                                                                                       ((g$macro*$10460$1M&0Ej
                                                                                                          g$global*$10461$1M&0Ej
                                                                                                          g$export-env$10462$1M&0Ej)
                                                                                                        (begin
                                                                                                          (for-each
                                                                                                            (case-lambda
                                                                                                              ((g$s$10463$1M&0Ej)
                                                                                                               ((case-lambda
                                                                                                                  ((g$name$10464$1M&0Ej
                                                                                                                     g$label$10465$1M&0Ej)
                                                                                                                   ((case-lambda
                                                                                                                      ((g$p$10466$1M&0Ej)
                                                                                                                       (if g$p$10466$1M&0Ej
                                                                                                                         ((case-lambda
                                                                                                                            ((g$b$10467$1M&0Ej)
                                                                                                                             ((case-lambda
                                                                                                                                ((g$type$10468$1M&0Ej)
                                                                                                                                 (if (eq? g$type$10468$1M&0Ej
                                                                                                                                          'mutable)
                                                                                                                                   (g$syntax-violation$7646$1M&0Ej
                                                                                                                                     'export
                                                                                                                                     g$errstr$10453$1M&0Ej
                                                                                                                                     g$name$10464$1M&0Ej)
                                                                                                                                   (void))))
                                                                                                                              (car g$b$10467$1M&0Ej))))
                                                                                                                          (cdr g$p$10466$1M&0Ej))
                                                                                                                         (void))))
                                                                                                                    (g$assq$4985$1M&0Ej
                                                                                                                      g$label$10465$1M&0Ej
                                                                                                                      g$export-env$10462$1M&0Ej))))
                                                                                                                (car g$s$10463$1M&0Ej)
                                                                                                                (cdr g$s$10463$1M&0Ej))))
                                                                                                            g$export-subst$10452$1M&0Ej)
                                                                                                          ((case-lambda
                                                                                                             ((g$invoke-body$10469$1M&0Ej
                                                                                                                g$invoke-definitions$10470$1M&0Ej)
                                                                                                              (values
                                                                                                                (g$itc$10394$1M&0Ej)
                                                                                                                (g$rtc$10414$1M&0Ej)
                                                                                                                (g$vtc$10415$1M&0Ej)
                                                                                                                (g$build-sequence$7186$1M&0Ej
                                                                                                                  '#f
                                                                                                                  (append
                                                                                                                    g$invoke-definitions$10470$1M&0Ej
                                                                                                                    (list
                                                                                                                      g$invoke-body$10469$1M&0Ej)))
                                                                                                                g$macro*$10460$1M&0Ej
                                                                                                                g$export-subst$10452$1M&0Ej
                                                                                                                g$export-env$10462$1M&0Ej)))
                                                                                                           (g$build-library-letrec*$7190$1M&0Ej
                                                                                                             '#f
                                                                                                             g$name$10389$1M&0Ej
                                                                                                             g$lex*$10439$1M&0Ej
                                                                                                             g$loc*$10451$1M&0Ej
                                                                                                             g$rhs*$10450$1M&0Ej
                                                                                                             (if (null?
                                                                                                                   g$init*$10449$1M&0Ej)
                                                                                                               (g$build-void$7187$1M&0Ej)
                                                                                                               (g$build-sequence$7186$1M&0Ej
                                                                                                                 '#f
                                                                                                                 g$init*$10449$1M&0Ej)))
                                                                                                           (map g$build-global-define$7182$1M&0Ej
                                                                                                                (map cdr
                                                                                                                     g$global*$10461$1M&0Ej))))))
                                                                                                     g$macro*$10459$1M&0Ej
                                                                                                     g$global*$10458$1M&0Ej
                                                                                                     g$export-env$10457$1M&0Ej)))))))
                                                                                          (map g$gen-global$7197$1M&0Ej
                                                                                               g$lex*$10439$1M&0Ej)
                                                                                          (g$make-export-subst$7634$1M&0Ej
                                                                                            g$exp-name*$10448$1M&0Ej
                                                                                            g$exp-id*$10447$1M&0Ej))))))))
                                                                                (g$chi-rhs*$7561$1M&0Ej
                                                                                  g$rhs*$10438$1M&0Ej
                                                                                  g$r$10441$1M&0Ej
                                                                                  g$mr$10440$1M&0Ej))))
                                                                            (g$chi-expr*$7551$1M&0Ej
                                                                              g$init*$10442$1M&0Ej
                                                                              g$r$10441$1M&0Ej
                                                                              g$mr$10440$1M&0Ej)))))
                                                                      g$exp-id*$10446$1M&0Ej
                                                                      g$exp-name*$10445$1M&0Ej))))))
                                                             g$internal-exp*$10436$1M&0Ej
                                                             g$rhs*$10435$1M&0Ej
                                                             g$lex*$10434$1M&0Ej
                                                             g$mr$10433$1M&0Ej
                                                             g$r$10432$1M&0Ej
                                                             g$init*$10431$1M&0Ej))))))
                                                    g$swap$10424$1M&0Ej)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$10471$1M&0Ej)
                                                        (begin
                                                          (g$inv-collector$10420$1M&0Ej
                                                            g$inv-collector$10422$1M&0Ej)
                                                          (set! g$inv-collector$10422$1M&0Ej
                                                            g$t$10471$1M&0Ej))))
                                                     (g$inv-collector$10420$1M&0Ej))
                                                    ((case-lambda
                                                       ((g$t$10472$1M&0Ej)
                                                        (begin
                                                          (g$vis-collector$10421$1M&0Ej
                                                            g$vis-collector$10423$1M&0Ej)
                                                          (set! g$vis-collector$10423$1M&0Ej
                                                            g$t$10472$1M&0Ej))))
                                                     (g$vis-collector$10421$1M&0Ej))))))))
                                           g$inv-collector$7587$1M&0Ej
                                           g$vis-collector$7588$1M&0Ej
                                           g$rtc$10414$1M&0Ej
                                           g$vtc$10415$1M&0Ej)))
                                       (map g$wrap$10411$1M&0Ej
                                            g$b*$10392$1M&0Ej)
                                       (map g$wrap$10411$1M&0Ej
                                            g$main-exp*$10390$1M&0Ej)
                                       (g$make-collector$7586$1M&0Ej)
                                       (g$make-collector$7586$1M&0Ej)))))
                                 (g$make-top-rib$7585$1M&0Ej
                                   g$subst-names$10409$1M&0Ej
                                   g$subst-labels$10408$1M&0Ej))))
                             g$subst-labels$10407$1M&0Ej
                             g$subst-names$10406$1M&0Ej))))))
                    g$swap$10403$1M&0Ej)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10474$1M&0Ej)
                        (begin
                          (g$imp-collector$10399$1M&0Ej
                            g$imp-collector$10401$1M&0Ej)
                          (set! g$imp-collector$10401$1M&0Ej
                            g$t$10474$1M&0Ej))))
                     (g$imp-collector$10399$1M&0Ej))
                    ((case-lambda
                       ((g$t$10475$1M&0Ej)
                        (begin
                          (g$top-level-context$10400$1M&0Ej
                            g$top-level-context$10402$1M&0Ej)
                          (set! g$top-level-context$10402$1M&0Ej
                            g$t$10475$1M&0Ej))))
                     (g$top-level-context$10400$1M&0Ej))))))))
           g$imp-collector$7589$1M&0Ej
           g$top-level-context$7653$1M&0Ej
           g$itc$10394$1M&0Ej
           '#f)))))
   (g$core-library-expander$7593$1M&0Ej
     g$core-library-expander$11081$1M&0Ej
     (case-lambda
       ((g$e$10476$1M&0Ej g$verify-name$10477$1M&0Ej)
        (call-with-values
          (case-lambda (() (g$parse-library$7583$1M&0Ej g$e$10476$1M&0Ej)))
          (case-lambda
            ((g$name*$10482$1M&0Ej
               g$exp*$10483$1M&0Ej
               g$imp*$10484$1M&0Ej
               g$b*$10485$1M&0Ej)
             ((case-lambda
                ((g$b*$10486$1M&0Ej
                   g$imp*$10487$1M&0Ej
                   g$exp*$10488$1M&0Ej
                   g$name*$10489$1M&0Ej)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7582$1M&0Ej g$name*$10489$1M&0Ej)))
                   (case-lambda
                     ((g$name$10492$1M&0Ej g$ver$10493$1M&0Ej)
                      ((case-lambda
                         ((g$ver$10494$1M&0Ej g$name$10495$1M&0Ej)
                          (begin
                            (g$verify-name$10477$1M&0Ej g$name$10495$1M&0Ej)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7592$1M&0Ej
                                   g$name$10495$1M&0Ej
                                   g$exp*$10488$1M&0Ej
                                   g$imp*$10487$1M&0Ej
                                   g$b*$10486$1M&0Ej
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10503$1M&0Ej
                                   g$invoke-req*$10504$1M&0Ej
                                   g$visit-req*$10505$1M&0Ej
                                   g$invoke-code$10506$1M&0Ej
                                   g$visit-code$10507$1M&0Ej
                                   g$export-subst$10508$1M&0Ej
                                   g$export-env$10509$1M&0Ej)
                                 ((case-lambda
                                    ((g$export-env$10510$1M&0Ej
                                       g$export-subst$10511$1M&0Ej
                                       g$visit-code$10512$1M&0Ej
                                       g$invoke-code$10513$1M&0Ej
                                       g$visit-req*$10514$1M&0Ej
                                       g$invoke-req*$10515$1M&0Ej
                                       g$imp*$10516$1M&0Ej)
                                     (values
                                       g$name$10495$1M&0Ej
                                       g$ver$10494$1M&0Ej
                                       g$imp*$10516$1M&0Ej
                                       g$invoke-req*$10515$1M&0Ej
                                       g$visit-req*$10514$1M&0Ej
                                       g$invoke-code$10513$1M&0Ej
                                       g$visit-code$10512$1M&0Ej
                                       g$export-subst$10511$1M&0Ej
                                       g$export-env$10510$1M&0Ej)))
                                  g$export-env$10509$1M&0Ej
                                  g$export-subst$10508$1M&0Ej
                                  g$visit-code$10507$1M&0Ej
                                  g$invoke-code$10506$1M&0Ej
                                  g$visit-req*$10505$1M&0Ej
                                  g$invoke-req*$10504$1M&0Ej
                                  g$imp*$10503$1M&0Ej)))))))
                       g$ver$10493$1M&0Ej
                       g$name$10492$1M&0Ej))))))
              g$b*$10485$1M&0Ej
              g$imp*$10484$1M&0Ej
              g$exp*$10483$1M&0Ej
              g$name*$10482$1M&0Ej)))))))
   (g$parse-top-level-program$7594$1M&0Ej
     g$parse-top-level-program$11082$1M&0Ej
     (case-lambda
       ((g$e*$10517$1M&0Ej)
        ((case-lambda
           ((g$t$10518$1M&0Ej)
            ((case-lambda
               ((g$ls/false$10519$1M&0Ej)
                (if (if g$ls/false$10519$1M&0Ej
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10520$1M&0Ej
                               g$imp*$10521$1M&0Ej
                               g$b*$10522$1M&0Ej)
                             (eq? (g$syntax->datum$7649$1M&0Ej
                                    g$import$10520$1M&0Ej)
                                  'import)))
                          g$ls/false$10519$1M&0Ej))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10523$1M&0Ej
                         g$imp*$10524$1M&0Ej
                         g$b*$10525$1M&0Ej)
                       (values g$imp*$10524$1M&0Ej g$b*$10525$1M&0Ej)))
                    g$ls/false$10519$1M&0Ej)
                  ((case-lambda
                     ((g$t$10526$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$10527$1M&0Ej)
                          (if (if g$ls/false$10527$1M&0Ej
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10528$1M&0Ej
                                         g$x$10529$1M&0Ej
                                         g$y$10530$1M&0Ej)
                                       (eq? (g$syntax->datum$7649$1M&0Ej
                                              g$import$10528$1M&0Ej)
                                            'import)))
                                    g$ls/false$10527$1M&0Ej))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10531$1M&0Ej
                                   g$x$10532$1M&0Ej
                                   g$y$10533$1M&0Ej)
                                 (g$syntax-violation$7646$1M&0Ej
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7254$1M&0Ej
                                     g$e*$10517$1M&0Ej))))
                              g$ls/false$10527$1M&0Ej)
                            ((case-lambda
                               ((g$t$10534$1M&0Ej)
                                ((case-lambda
                                   ((g$ls/false$10535$1M&0Ej)
                                    (if g$ls/false$10535$1M&0Ej
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10535$1M&0Ej)
                                      (g$syntax-violation$7646$1M&0Ej
                                        '#f
                                        '"invalid syntax"
                                        g$t$10534$1M&0Ej))))
                                 (g$syntax-dispatch$7535$1M&0Ej
                                   g$t$10534$1M&0Ej
                                   '_))))
                             g$t$10526$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej
                         g$t$10526$1M&0Ej
                         '((any . any) . any)))))
                   g$t$10518$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej
               g$t$10518$1M&0Ej
               '((any . each-any) . each-any)))))
         g$e*$10517$1M&0Ej))))
   (g$top-level-expander$7595$1M&0Ej
     g$top-level-expander$11083$1M&0Ej
     (case-lambda
       ((g$e*$10536$1M&0Ej)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7594$1M&0Ej g$e*$10536$1M&0Ej)))
          (case-lambda
            ((g$imp*$10539$1M&0Ej g$b*$10540$1M&0Ej)
             ((case-lambda
                ((g$b*$10541$1M&0Ej g$imp*$10542$1M&0Ej)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7592$1M&0Ej
                        '()
                        '()
                        g$imp*$10542$1M&0Ej
                        g$b*$10541$1M&0Ej
                        '#t)))
                   (case-lambda
                     ((g$imp*$10550$1M&0Ej
                        g$invoke-req*$10551$1M&0Ej
                        g$visit-req*$10552$1M&0Ej
                        g$invoke-code$10553$1M&0Ej
                        g$visit-code$10554$1M&0Ej
                        g$export-subst$10555$1M&0Ej
                        g$export-env$10556$1M&0Ej)
                      ((case-lambda
                         ((g$export-env$10557$1M&0Ej
                            g$export-subst$10558$1M&0Ej
                            g$visit-code$10559$1M&0Ej
                            g$invoke-code$10560$1M&0Ej
                            g$visit-req*$10561$1M&0Ej
                            g$invoke-req*$10562$1M&0Ej
                            g$imp*$10563$1M&0Ej)
                          (values
                            g$invoke-req*$10562$1M&0Ej
                            g$invoke-code$10560$1M&0Ej)))
                       g$export-env$10556$1M&0Ej
                       g$export-subst$10555$1M&0Ej
                       g$visit-code$10554$1M&0Ej
                       g$invoke-code$10553$1M&0Ej
                       g$visit-req*$10552$1M&0Ej
                       g$invoke-req*$10551$1M&0Ej
                       g$imp*$10550$1M&0Ej))))))
              g$b*$10540$1M&0Ej
              g$imp*$10539$1M&0Ej)))))))
   (g$8736$7596$1M&0Ej
     g$8736$11084$1M&0Ej
     (make-record-type-descriptor
       'env
       '#f
       'g$8739$1M&0Ej
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8738$7597$1M&0Ej g$8738$11085$1M&0Ej '#f)
   (g$8737$7598$1M&0Ej
     g$8737$11086$1M&0Ej
     (make-record-constructor-descriptor
       g$8736$7596$1M&0Ej
       '#f
       g$8738$7597$1M&0Ej))
   (g$env?$7599$1M&0Ej
     g$env?$11087$1M&0Ej
     (record-predicate g$8736$7596$1M&0Ej))
   (g$make-env$7600$1M&0Ej
     g$make-env$11088$1M&0Ej
     (record-constructor g$8737$7598$1M&0Ej))
   (g$env-names$7601$1M&0Ej
     g$env-names$11089$1M&0Ej
     (record-accessor g$8736$7596$1M&0Ej '0))
   (g$env-labels$7602$1M&0Ej
     g$env-labels$11090$1M&0Ej
     (record-accessor g$8736$7596$1M&0Ej '1))
   (g$env-itc$7603$1M&0Ej
     g$env-itc$11091$1M&0Ej
     (record-accessor g$8736$7596$1M&0Ej '2))
   (g$set-env-names!$7604$1M&0Ej
     g$set-env-names!$11092$1M&0Ej
     (record-mutator g$8736$7596$1M&0Ej '0))
   (g$set-env-labels!$7605$1M&0Ej
     g$set-env-labels!$11093$1M&0Ej
     (record-mutator g$8736$7596$1M&0Ej '1))
   (g$set-env-itc!$7606$1M&0Ej
     g$set-env-itc!$11094$1M&0Ej
     (record-mutator g$8736$7596$1M&0Ej '2))
   (g$rp$7607$1M&0Ej
     g$rp$11095$1M&0Ej
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10564$1M&0Ej g$p$10565$1M&0Ej)
          (display '"#<environment>" g$p$10565$1M&0Ej)))))
   (g$8755$7608$1M&0Ej
     g$8755$11096$1M&0Ej
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8758$1M&0Ej
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8757$7609$1M&0Ej g$8757$11097$1M&0Ej '#f)
   (g$8756$7610$1M&0Ej
     g$8756$11098$1M&0Ej
     (make-record-constructor-descriptor
       g$8755$7608$1M&0Ej
       '#f
       g$8757$7609$1M&0Ej))
   (g$interaction-env?$7611$1M&0Ej
     g$interaction-env?$11099$1M&0Ej
     (record-predicate g$8755$7608$1M&0Ej))
   (g$make-interaction-env$7612$1M&0Ej
     g$make-interaction-env$11100$1M&0Ej
     (record-constructor g$8756$7610$1M&0Ej))
   (g$interaction-env-rib$7613$1M&0Ej
     g$interaction-env-rib$11101$1M&0Ej
     (record-accessor g$8755$7608$1M&0Ej '0))
   (g$interaction-env-r$7614$1M&0Ej
     g$interaction-env-r$11102$1M&0Ej
     (record-accessor g$8755$7608$1M&0Ej '1))
   (g$interaction-env-locs$7615$1M&0Ej
     g$interaction-env-locs$11103$1M&0Ej
     (record-accessor g$8755$7608$1M&0Ej '2))
   (g$set-interaction-env-rib!$7616$1M&0Ej
     g$set-interaction-env-rib!$11104$1M&0Ej
     (record-mutator g$8755$7608$1M&0Ej '0))
   (g$set-interaction-env-r!$7617$1M&0Ej
     g$set-interaction-env-r!$11105$1M&0Ej
     (record-mutator g$8755$7608$1M&0Ej '1))
   (g$set-interaction-env-locs!$7618$1M&0Ej
     g$set-interaction-env-locs!$11106$1M&0Ej
     (record-mutator g$8755$7608$1M&0Ej '2))
   (g$rp$7619$1M&0Ej
     g$rp$11107$1M&0Ej
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10566$1M&0Ej g$p$10567$1M&0Ej)
          (display '"#<environment>" g$p$10567$1M&0Ej)))))
   (g$interaction-environment-symbols$7620$1M&0Ej
     g$interaction-environment-symbols$11108$1M&0Ej
     (case-lambda
       (()
        (g$environment-symbols$7624$1M&0Ej
          (g$interaction-environment$7652$1M&0Ej)))))
   (g$environment-bindings$7621$1M&0Ej
     g$environment-bindings$11109$1M&0Ej
     (case-lambda
       ((g$e$10568$1M&0Ej)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$10569$1M&0Ej g$label$10570$1M&0Ej)
               (g$parse-binding$7622$1M&0Ej
                 (cons
                   g$name$10569$1M&0Ej
                   (g$imported-label->binding$7066$1M&0Ej
                     g$label$10570$1M&0Ej)))))
            (g$env-names$7601$1M&0Ej g$e$10568$1M&0Ej)
            (g$env-labels$7602$1M&0Ej g$e$10568$1M&0Ej))))))
   (g$parse-binding$7622$1M&0Ej
     g$parse-binding$11110$1M&0Ej
     (case-lambda
       ((g$b$10571$1M&0Ej)
        (cons
          (car g$b$10571$1M&0Ej)
          ((case-lambda
             ((g$t$10572$1M&0Ej)
              (if (g$memv$4990$1M&0Ej g$t$10572$1M&0Ej '(core-prim global))
                'procedure
                (if (g$memv$4990$1M&0Ej
                      g$t$10572$1M&0Ej
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$4990$1M&0Ej g$t$10572$1M&0Ej '($core-rtd))
                    'record
                    (if (eq? (car g$b$10571$1M&0Ej)
                             (g$cadr$5159$1M&0Ej g$b$10571$1M&0Ej))
                      'syntax
                      'unknown))))))
           (g$cadr$5159$1M&0Ej g$b$10571$1M&0Ej))))))
   (g$environment?$7623$1M&0Ej
     g$environment?$11111$1M&0Ej
     (case-lambda
       ((g$x$10573$1M&0Ej)
        ((case-lambda
           ((g$t$10574$1M&0Ej)
            (if g$t$10574$1M&0Ej
              g$t$10574$1M&0Ej
              (begin '#f (g$interaction-env?$7611$1M&0Ej g$x$10573$1M&0Ej)))))
         (g$env?$7599$1M&0Ej g$x$10573$1M&0Ej)))))
   (g$environment-symbols$7624$1M&0Ej
     g$environment-symbols$11112$1M&0Ej
     (case-lambda
       ((g$x$10575$1M&0Ej)
        (if (g$env?$7599$1M&0Ej g$x$10575$1M&0Ej)
          (vector->list (g$env-names$7601$1M&0Ej g$x$10575$1M&0Ej))
          (if (g$interaction-env?$7611$1M&0Ej g$x$10575$1M&0Ej)
            (map values
                 (g$rib-sym*$7207$1M&0Ej
                   (g$interaction-env-rib$7613$1M&0Ej g$x$10575$1M&0Ej)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$10575$1M&0Ej))))))
   (g$environment$7625$1M&0Ej
     g$environment$11113$1M&0Ej
     (case-lambda
       (g$imp*$10576$1M&0Ej
        ((case-lambda
           ((g$itc$10577$1M&0Ej)
            ((case-lambda
               ((g$imp-collector$10580$1M&0Ej g$imp-collector$10581$1M&0Ej)
                ((case-lambda
                   ((g$swap$10582$1M&0Ej)
                    (dynamic-wind
                      g$swap$10582$1M&0Ej
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7584$1M&0Ej
                                g$imp*$10576$1M&0Ej)))
                           (case-lambda
                             ((g$subst-names$10585$1M&0Ej
                                g$subst-labels$10586$1M&0Ej)
                              ((case-lambda
                                 ((g$subst-labels$10587$1M&0Ej
                                    g$subst-names$10588$1M&0Ej)
                                  (g$make-env$7600$1M&0Ej
                                    g$subst-names$10588$1M&0Ej
                                    g$subst-labels$10587$1M&0Ej
                                    g$itc$10577$1M&0Ej)))
                               g$subst-labels$10586$1M&0Ej
                               g$subst-names$10585$1M&0Ej))))))
                      g$swap$10582$1M&0Ej)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10589$1M&0Ej)
                        (begin
                          (g$imp-collector$10580$1M&0Ej
                            g$imp-collector$10581$1M&0Ej)
                          (set! g$imp-collector$10581$1M&0Ej
                            g$t$10589$1M&0Ej))))
                     (g$imp-collector$10580$1M&0Ej)))))))
             g$imp-collector$7589$1M&0Ej
             g$itc$10577$1M&0Ej)))
         (g$make-collector$7586$1M&0Ej)))))
   (g$null-environment$7626$1M&0Ej
     g$null-environment$11114$1M&0Ej
     (case-lambda
       ((g$n$10590$1M&0Ej)
        (begin
          (if (not (eqv? g$n$10590$1M&0Ej '5))
            (assertion-violation 'null-environment '"not 5" g$n$10590$1M&0Ej)
            (void))
          (g$environment$7625$1M&0Ej '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7627$1M&0Ej
     g$scheme-report-environment$11115$1M&0Ej
     (case-lambda
       ((g$n$10591$1M&0Ej)
        (begin
          (if (not (eqv? g$n$10591$1M&0Ej '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10591$1M&0Ej)
            (void))
          (g$environment$7625$1M&0Ej '(psyntax scheme-report-environment-5))))))
   (g$expand$7628$1M&0Ej
     g$expand$11116$1M&0Ej
     (case-lambda
       ((g$x$10592$1M&0Ej g$env$10593$1M&0Ej)
        (if (g$env?$7599$1M&0Ej g$env$10593$1M&0Ej)
          ((case-lambda
             ((g$rib$10594$1M&0Ej)
              ((case-lambda
                 ((g$x$10595$1M&0Ej
                    g$itc$10596$1M&0Ej
                    g$rtc$10597$1M&0Ej
                    g$vtc$10598$1M&0Ej)
                  ((case-lambda
                     ((g$x$10599$1M&0Ej)
                      (begin
                        (g$seal-rib!$7223$1M&0Ej g$rib$10594$1M&0Ej)
                        (values g$x$10599$1M&0Ej (g$rtc$10597$1M&0Ej)))))
                   ((case-lambda
                      ((g$top-level-context$10608$1M&0Ej
                         g$inv-collector$10609$1M&0Ej
                         g$vis-collector$10610$1M&0Ej
                         g$imp-collector$10611$1M&0Ej
                         g$top-level-context$10612$1M&0Ej
                         g$inv-collector$10613$1M&0Ej
                         g$vis-collector$10614$1M&0Ej
                         g$imp-collector$10615$1M&0Ej)
                       ((case-lambda
                          ((g$swap$10616$1M&0Ej)
                           (dynamic-wind
                             g$swap$10616$1M&0Ej
                             (case-lambda
                               (()
                                (g$chi-expr$7553$1M&0Ej
                                  g$x$10595$1M&0Ej
                                  '()
                                  '())))
                             g$swap$10616$1M&0Ej)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10617$1M&0Ej)
                                 (begin
                                   (g$top-level-context$10608$1M&0Ej
                                     g$top-level-context$10612$1M&0Ej)
                                   (set! g$top-level-context$10612$1M&0Ej
                                     g$t$10617$1M&0Ej))))
                              (g$top-level-context$10608$1M&0Ej))
                             ((case-lambda
                                ((g$t$10618$1M&0Ej)
                                 (begin
                                   (g$inv-collector$10609$1M&0Ej
                                     g$inv-collector$10613$1M&0Ej)
                                   (set! g$inv-collector$10613$1M&0Ej
                                     g$t$10618$1M&0Ej))))
                              (g$inv-collector$10609$1M&0Ej))
                             ((case-lambda
                                ((g$t$10619$1M&0Ej)
                                 (begin
                                   (g$vis-collector$10610$1M&0Ej
                                     g$vis-collector$10614$1M&0Ej)
                                   (set! g$vis-collector$10614$1M&0Ej
                                     g$t$10619$1M&0Ej))))
                              (g$vis-collector$10610$1M&0Ej))
                             ((case-lambda
                                ((g$t$10620$1M&0Ej)
                                 (begin
                                   (g$imp-collector$10611$1M&0Ej
                                     g$imp-collector$10615$1M&0Ej)
                                   (set! g$imp-collector$10615$1M&0Ej
                                     g$t$10620$1M&0Ej))))
                              (g$imp-collector$10611$1M&0Ej))))))))
                    g$top-level-context$7653$1M&0Ej
                    g$inv-collector$7587$1M&0Ej
                    g$vis-collector$7588$1M&0Ej
                    g$imp-collector$7589$1M&0Ej
                    '#f
                    g$rtc$10597$1M&0Ej
                    g$vtc$10598$1M&0Ej
                    g$itc$10596$1M&0Ej))))
               (g$make-stx$7230$1M&0Ej
                 g$x$10592$1M&0Ej
                 g$top-mark*$7194$1M&0Ej
                 (list g$rib$10594$1M&0Ej)
                 '())
               (g$env-itc$7603$1M&0Ej g$env$10593$1M&0Ej)
               (g$make-collector$7586$1M&0Ej)
               (g$make-collector$7586$1M&0Ej))))
           (g$make-top-rib$7585$1M&0Ej
             (g$env-names$7601$1M&0Ej g$env$10593$1M&0Ej)
             (g$env-labels$7602$1M&0Ej g$env$10593$1M&0Ej)))
          (if (g$interaction-env?$7611$1M&0Ej g$env$10593$1M&0Ej)
            ((case-lambda
               ((g$rib$10621$1M&0Ej g$r$10622$1M&0Ej g$rtc$10623$1M&0Ej)
                ((case-lambda
                   ((g$x$10624$1M&0Ej)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10635$1M&0Ej
                               g$inv-collector$10636$1M&0Ej
                               g$vis-collector$10637$1M&0Ej
                               g$imp-collector$10638$1M&0Ej
                               g$top-level-context$10639$1M&0Ej
                               g$inv-collector$10640$1M&0Ej
                               g$vis-collector$10641$1M&0Ej
                               g$imp-collector$10642$1M&0Ej)
                             ((case-lambda
                                ((g$swap$10643$1M&0Ej)
                                 (dynamic-wind
                                   g$swap$10643$1M&0Ej
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7591$1M&0Ej
                                        g$x$10624$1M&0Ej
                                        g$rib$10621$1M&0Ej
                                        g$r$10622$1M&0Ej)))
                                   g$swap$10643$1M&0Ej)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10644$1M&0Ej)
                                       (begin
                                         (g$top-level-context$10635$1M&0Ej
                                           g$top-level-context$10639$1M&0Ej)
                                         (set! g$top-level-context$10639$1M&0Ej
                                           g$t$10644$1M&0Ej))))
                                    (g$top-level-context$10635$1M&0Ej))
                                   ((case-lambda
                                      ((g$t$10645$1M&0Ej)
                                       (begin
                                         (g$inv-collector$10636$1M&0Ej
                                           g$inv-collector$10640$1M&0Ej)
                                         (set! g$inv-collector$10640$1M&0Ej
                                           g$t$10645$1M&0Ej))))
                                    (g$inv-collector$10636$1M&0Ej))
                                   ((case-lambda
                                      ((g$t$10646$1M&0Ej)
                                       (begin
                                         (g$vis-collector$10637$1M&0Ej
                                           g$vis-collector$10641$1M&0Ej)
                                         (set! g$vis-collector$10641$1M&0Ej
                                           g$t$10646$1M&0Ej))))
                                    (g$vis-collector$10637$1M&0Ej))
                                   ((case-lambda
                                      ((g$t$10647$1M&0Ej)
                                       (begin
                                         (g$imp-collector$10638$1M&0Ej
                                           g$imp-collector$10642$1M&0Ej)
                                         (set! g$imp-collector$10642$1M&0Ej
                                           g$t$10647$1M&0Ej))))
                                    (g$imp-collector$10638$1M&0Ej))))))))
                          g$top-level-context$7653$1M&0Ej
                          g$inv-collector$7587$1M&0Ej
                          g$vis-collector$7588$1M&0Ej
                          g$imp-collector$7589$1M&0Ej
                          g$env$10593$1M&0Ej
                          g$rtc$10623$1M&0Ej
                          (g$make-collector$7586$1M&0Ej)
                          (g$make-collector$7586$1M&0Ej))))
                      (case-lambda
                        ((g$e$10648$1M&0Ej g$r^$10649$1M&0Ej)
                         ((case-lambda
                            ((g$r^$10650$1M&0Ej g$e$10651$1M&0Ej)
                             (begin
                               (g$set-interaction-env-r!$7617$1M&0Ej
                                 g$env$10593$1M&0Ej
                                 g$r^$10650$1M&0Ej)
                               (values g$e$10651$1M&0Ej (g$rtc$10623$1M&0Ej)))))
                          g$r^$10649$1M&0Ej
                          g$e$10648$1M&0Ej))))))
                 (g$make-stx$7230$1M&0Ej
                   g$x$10592$1M&0Ej
                   g$top-mark*$7194$1M&0Ej
                   (list g$rib$10621$1M&0Ej)
                   '()))))
             (g$interaction-env-rib$7613$1M&0Ej g$env$10593$1M&0Ej)
             (g$interaction-env-r$7614$1M&0Ej g$env$10593$1M&0Ej)
             (g$make-collector$7586$1M&0Ej))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10593$1M&0Ej))))))
   (g$eval$7629$1M&0Ej
     g$eval$11117$1M&0Ej
     (case-lambda
       ((g$x$10652$1M&0Ej g$env$10653$1M&0Ej)
        (begin
          (if (not (g$environment?$7623$1M&0Ej g$env$10653$1M&0Ej))
            (error 'eval '"not an environment" g$env$10653$1M&0Ej)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7628$1M&0Ej g$x$10652$1M&0Ej g$env$10653$1M&0Ej)))
            (case-lambda
              ((g$x$10656$1M&0Ej g$invoke-req*$10657$1M&0Ej)
               ((case-lambda
                  ((g$invoke-req*$10658$1M&0Ej g$x$10659$1M&0Ej)
                   (begin
                     (for-each
                       g$invoke-library$7067$1M&0Ej
                       g$invoke-req*$10658$1M&0Ej)
                     (eval-core
                       (g$expanded->core$6766$1M&0Ej g$x$10659$1M&0Ej)))))
                g$invoke-req*$10657$1M&0Ej
                g$x$10656$1M&0Ej))))))))
   (g$library-expander$7630$1M&0Ej
     g$library-expander$11118$1M&0Ej
     (case-lambda
       ((g$x$10660$1M&0Ej g$filename$10661$1M&0Ej g$verify-name$10662$1M&0Ej)
        (letrec* ((g$build-visit-code$10663$1M&0Ej
                    (case-lambda
                      ((g$macro*$10706$1M&0Ej)
                       (if (null? g$macro*$10706$1M&0Ej)
                         (g$build-void$7187$1M&0Ej)
                         (g$build-sequence$7186$1M&0Ej
                           '#f
                           (map (case-lambda
                                  ((g$x$10707$1M&0Ej)
                                   ((case-lambda
                                      ((g$loc$10708$1M&0Ej g$src$10709$1M&0Ej)
                                       (list
                                         'set!
                                         g$loc$10708$1M&0Ej
                                         g$src$10709$1M&0Ej)))
                                    (car g$x$10707$1M&0Ej)
                                    (g$cddr$5161$1M&0Ej g$x$10707$1M&0Ej))))
                                g$macro*$10706$1M&0Ej))))))
                  (g$visit!$10664$1M&0Ej
                    (case-lambda
                      ((g$macro*$10702$1M&0Ej)
                       (for-each
                         (case-lambda
                           ((g$x$10703$1M&0Ej)
                            ((case-lambda
                               ((g$loc$10704$1M&0Ej g$proc$10705$1M&0Ej)
                                (set-symbol-value!
                                  g$loc$10704$1M&0Ej
                                  g$proc$10705$1M&0Ej)))
                             (car g$x$10703$1M&0Ej)
                             (g$cadr$5159$1M&0Ej g$x$10703$1M&0Ej))))
                         g$macro*$10702$1M&0Ej)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7593$1M&0Ej
                 g$x$10660$1M&0Ej
                 g$verify-name$10662$1M&0Ej)))
            (case-lambda
              ((g$name$10674$1M&0Ej
                 g$ver$10675$1M&0Ej
                 g$imp*$10676$1M&0Ej
                 g$inv*$10677$1M&0Ej
                 g$vis*$10678$1M&0Ej
                 g$invoke-code$10679$1M&0Ej
                 g$macro*$10680$1M&0Ej
                 g$export-subst$10681$1M&0Ej
                 g$export-env$10682$1M&0Ej)
               ((case-lambda
                  ((g$export-env$10683$1M&0Ej
                     g$export-subst$10684$1M&0Ej
                     g$macro*$10685$1M&0Ej
                     g$invoke-code$10686$1M&0Ej
                     g$vis*$10687$1M&0Ej
                     g$inv*$10688$1M&0Ej
                     g$imp*$10689$1M&0Ej
                     g$ver$10690$1M&0Ej
                     g$name$10691$1M&0Ej)
                   ((case-lambda
                      ((g$id$10692$1M&0Ej
                         g$name$10693$1M&0Ej
                         g$ver$10694$1M&0Ej
                         g$imp*$10695$1M&0Ej
                         g$vis*$10696$1M&0Ej
                         g$inv*$10697$1M&0Ej
                         g$visit-proc$10698$1M&0Ej
                         g$invoke-proc$10699$1M&0Ej
                         g$visit-code$10700$1M&0Ej
                         g$invoke-code$10701$1M&0Ej)
                       (begin
                         (g$install-library$7065$1M&0Ej
                           g$id$10692$1M&0Ej
                           g$name$10693$1M&0Ej
                           g$ver$10694$1M&0Ej
                           g$imp*$10695$1M&0Ej
                           g$vis*$10696$1M&0Ej
                           g$inv*$10697$1M&0Ej
                           g$export-subst$10684$1M&0Ej
                           g$export-env$10683$1M&0Ej
                           g$visit-proc$10698$1M&0Ej
                           g$invoke-proc$10699$1M&0Ej
                           g$visit-code$10700$1M&0Ej
                           g$invoke-code$10701$1M&0Ej
                           '#t
                           g$filename$10661$1M&0Ej)
                         (values
                           g$id$10692$1M&0Ej
                           g$name$10693$1M&0Ej
                           g$ver$10694$1M&0Ej
                           g$imp*$10695$1M&0Ej
                           g$vis*$10696$1M&0Ej
                           g$inv*$10697$1M&0Ej
                           g$invoke-code$10701$1M&0Ej
                           g$visit-code$10700$1M&0Ej
                           g$export-subst$10684$1M&0Ej
                           g$export-env$10683$1M&0Ej))))
                    (gensym)
                    g$name$10691$1M&0Ej
                    g$ver$10690$1M&0Ej
                    (map g$library-spec$7071$1M&0Ej g$imp*$10689$1M&0Ej)
                    (map g$library-spec$7071$1M&0Ej g$vis*$10687$1M&0Ej)
                    (map g$library-spec$7071$1M&0Ej g$inv*$10688$1M&0Ej)
                    (case-lambda
                      (() (g$visit!$10664$1M&0Ej g$macro*$10685$1M&0Ej)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6766$1M&0Ej
                           g$invoke-code$10686$1M&0Ej))))
                    (g$build-visit-code$10663$1M&0Ej g$macro*$10685$1M&0Ej)
                    g$invoke-code$10686$1M&0Ej)))
                g$export-env$10682$1M&0Ej
                g$export-subst$10681$1M&0Ej
                g$macro*$10680$1M&0Ej
                g$invoke-code$10679$1M&0Ej
                g$vis*$10678$1M&0Ej
                g$inv*$10677$1M&0Ej
                g$imp*$10676$1M&0Ej
                g$ver$10675$1M&0Ej
                g$name$10674$1M&0Ej))))))
       ((g$x$10710$1M&0Ej g$filename$10711$1M&0Ej)
        (g$library-expander$7630$1M&0Ej
          g$x$10710$1M&0Ej
          g$filename$10711$1M&0Ej
          (case-lambda ((g$x$10712$1M&0Ej) (values)))))
       ((g$x$10713$1M&0Ej)
        (g$library-expander$7630$1M&0Ej
          g$x$10713$1M&0Ej
          '#f
          (case-lambda ((g$x$10714$1M&0Ej) (values)))))))
   (g$boot-library-expand$7631$1M&0Ej
     g$boot-library-expand$11119$1M&0Ej
     (case-lambda
       ((g$x$10715$1M&0Ej)
        (call-with-values
          (case-lambda (() (g$library-expander$7630$1M&0Ej g$x$10715$1M&0Ej)))
          (case-lambda
            ((g$id$10726$1M&0Ej
               g$name$10727$1M&0Ej
               g$ver$10728$1M&0Ej
               g$imp*$10729$1M&0Ej
               g$vis*$10730$1M&0Ej
               g$inv*$10731$1M&0Ej
               g$invoke-code$10732$1M&0Ej
               g$visit-code$10733$1M&0Ej
               g$export-subst$10734$1M&0Ej
               g$export-env$10735$1M&0Ej)
             ((case-lambda
                ((g$export-env$10736$1M&0Ej
                   g$export-subst$10737$1M&0Ej
                   g$visit-code$10738$1M&0Ej
                   g$invoke-code$10739$1M&0Ej
                   g$inv*$10740$1M&0Ej
                   g$vis*$10741$1M&0Ej
                   g$imp*$10742$1M&0Ej
                   g$ver$10743$1M&0Ej
                   g$name$10744$1M&0Ej
                   g$id$10745$1M&0Ej)
                 (values
                   g$name$10744$1M&0Ej
                   g$invoke-code$10739$1M&0Ej
                   g$export-subst$10737$1M&0Ej
                   g$export-env$10736$1M&0Ej)))
              g$export-env$10735$1M&0Ej
              g$export-subst$10734$1M&0Ej
              g$visit-code$10733$1M&0Ej
              g$invoke-code$10732$1M&0Ej
              g$inv*$10731$1M&0Ej
              g$vis*$10730$1M&0Ej
              g$imp*$10729$1M&0Ej
              g$ver$10728$1M&0Ej
              g$name$10727$1M&0Ej
              g$id$10726$1M&0Ej)))))))
   (g$rev-map-append$7632$1M&0Ej
     g$rev-map-append$11120$1M&0Ej
     (case-lambda
       ((g$f$10746$1M&0Ej g$ls$10747$1M&0Ej g$ac$10748$1M&0Ej)
        (if (null? g$ls$10747$1M&0Ej)
          g$ac$10748$1M&0Ej
          (g$rev-map-append$7632$1M&0Ej
            g$f$10746$1M&0Ej
            (cdr g$ls$10747$1M&0Ej)
            (cons
              (g$f$10746$1M&0Ej (car g$ls$10747$1M&0Ej))
              g$ac$10748$1M&0Ej))))))
   (g$build-exports$7633$1M&0Ej
     g$build-exports$11121$1M&0Ej
     (case-lambda
       ((g$lex*+loc*$10749$1M&0Ej g$init*$10750$1M&0Ej)
        (g$build-sequence$7186$1M&0Ej
          '#f
          (cons
            (g$build-void$7187$1M&0Ej)
            (g$rev-map-append$7632$1M&0Ej
              (case-lambda
                ((g$x$10751$1M&0Ej)
                 (list 'set! (cdr g$x$10751$1M&0Ej) (car g$x$10751$1M&0Ej))))
              g$lex*+loc*$10749$1M&0Ej
              g$init*$10750$1M&0Ej))))))
   (g$make-export-subst$7634$1M&0Ej
     g$make-export-subst$11122$1M&0Ej
     (case-lambda
       ((g$name*$10752$1M&0Ej g$id*$10753$1M&0Ej)
        (map (case-lambda
               ((g$name$10754$1M&0Ej g$id$10755$1M&0Ej)
                ((case-lambda
                   ((g$label$10756$1M&0Ej)
                    (begin
                      (if (not g$label$10756$1M&0Ej)
                        (g$syntax-violation$7646$1M&0Ej
                          '#f
                          '"cannot export unbound identifier"
                          g$id$10755$1M&0Ej)
                        (void))
                      (cons g$name$10754$1M&0Ej g$label$10756$1M&0Ej))))
                 (g$id->label$7270$1M&0Ej g$id$10755$1M&0Ej))))
             g$name*$10752$1M&0Ej
             g$id*$10753$1M&0Ej))))
   (g$make-export-env/macros$7635$1M&0Ej
     g$make-export-env/macros$11123$1M&0Ej
     (case-lambda
       ((g$lex*$10757$1M&0Ej g$loc*$10758$1M&0Ej g$r$10759$1M&0Ej)
        (letrec* ((g$lookup$10760$1M&0Ej
                    (case-lambda
                      ((g$x$10775$1M&0Ej)
                       ((letrec ((g$f$10776$1M&0Ej
                                   (case-lambda
                                     ((g$x$10777$1M&0Ej
                                        g$lex*$10778$1M&0Ej
                                        g$loc*$10779$1M&0Ej)
                                      (if (pair? g$lex*$10778$1M&0Ej)
                                        (if (eq? g$x$10777$1M&0Ej
                                                 (car g$lex*$10778$1M&0Ej))
                                          (car g$loc*$10779$1M&0Ej)
                                          (g$f$10776$1M&0Ej
                                            g$x$10777$1M&0Ej
                                            (cdr g$lex*$10778$1M&0Ej)
                                            (cdr g$loc*$10779$1M&0Ej)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10776$1M&0Ej)
                        g$x$10775$1M&0Ej
                        g$lex*$10757$1M&0Ej
                        g$loc*$10758$1M&0Ej)))))
          ((letrec ((g$f$10761$1M&0Ej
                      (case-lambda
                        ((g$r$10762$1M&0Ej
                           g$env$10763$1M&0Ej
                           g$global*$10764$1M&0Ej
                           g$macro*$10765$1M&0Ej)
                         (if (null? g$r$10762$1M&0Ej)
                           (values
                             g$env$10763$1M&0Ej
                             g$global*$10764$1M&0Ej
                             g$macro*$10765$1M&0Ej)
                           ((case-lambda
                              ((g$x$10766$1M&0Ej)
                               ((case-lambda
                                  ((g$label$10767$1M&0Ej g$b$10768$1M&0Ej)
                                   ((case-lambda
                                      ((g$t$10769$1M&0Ej)
                                       (if (g$memv$4990$1M&0Ej
                                             g$t$10769$1M&0Ej
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$10770$1M&0Ej)
                                             ((case-lambda
                                                ((g$loc$10771$1M&0Ej
                                                   g$type$10772$1M&0Ej)
                                                 (g$f$10761$1M&0Ej
                                                   (cdr g$r$10762$1M&0Ej)
                                                   (cons
                                                     (g$cons*$4997$1M&0Ej
                                                       g$label$10767$1M&0Ej
                                                       g$type$10772$1M&0Ej
                                                       g$loc$10771$1M&0Ej)
                                                     g$env$10763$1M&0Ej)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7479$1M&0Ej
                                                         g$v$10770$1M&0Ej)
                                                       g$loc$10771$1M&0Ej)
                                                     g$global*$10764$1M&0Ej)
                                                   g$macro*$10765$1M&0Ej)))
                                              (g$lookup$10760$1M&0Ej
                                                (g$lexical-var$7479$1M&0Ej
                                                  g$v$10770$1M&0Ej))
                                              (if (g$lexical-mutable?$7480$1M&0Ej
                                                    g$v$10770$1M&0Ej)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7275$1M&0Ej
                                            g$b$10768$1M&0Ej))
                                         (if (g$memv$4990$1M&0Ej
                                               g$t$10769$1M&0Ej
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10773$1M&0Ej)
                                               (g$f$10761$1M&0Ej
                                                 (cdr g$r$10762$1M&0Ej)
                                                 (cons
                                                   (g$cons*$4997$1M&0Ej
                                                     g$label$10767$1M&0Ej
                                                     'global-macro
                                                     g$loc$10773$1M&0Ej)
                                                   g$env$10763$1M&0Ej)
                                                 g$global*$10764$1M&0Ej
                                                 (cons
                                                   (cons
                                                     g$loc$10773$1M&0Ej
                                                     (g$binding-value$7275$1M&0Ej
                                                       g$b$10768$1M&0Ej))
                                                   g$macro*$10765$1M&0Ej))))
                                            (gensym))
                                           (if (g$memv$4990$1M&0Ej
                                                 g$t$10769$1M&0Ej
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10774$1M&0Ej)
                                                 (g$f$10761$1M&0Ej
                                                   (cdr g$r$10762$1M&0Ej)
                                                   (cons
                                                     (g$cons*$4997$1M&0Ej
                                                       g$label$10767$1M&0Ej
                                                       'global-macro!
                                                       g$loc$10774$1M&0Ej)
                                                     g$env$10763$1M&0Ej)
                                                   g$global*$10764$1M&0Ej
                                                   (cons
                                                     (cons
                                                       g$loc$10774$1M&0Ej
                                                       (g$binding-value$7275$1M&0Ej
                                                         g$b$10768$1M&0Ej))
                                                     g$macro*$10765$1M&0Ej))))
                                              (gensym))
                                             (if (g$memv$4990$1M&0Ej
                                                   g$t$10769$1M&0Ej
                                                   '($rtd $module))
                                               (g$f$10761$1M&0Ej
                                                 (cdr g$r$10762$1M&0Ej)
                                                 (cons
                                                   g$x$10766$1M&0Ej
                                                   g$env$10763$1M&0Ej)
                                                 g$global*$10764$1M&0Ej
                                                 g$macro*$10765$1M&0Ej)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7274$1M&0Ej
                                                   g$b$10768$1M&0Ej)
                                                 (g$binding-value$7275$1M&0Ej
                                                   g$b$10768$1M&0Ej))))))))
                                    (g$binding-type$7274$1M&0Ej
                                      g$b$10768$1M&0Ej))))
                                (car g$x$10766$1M&0Ej)
                                (cdr g$x$10766$1M&0Ej))))
                            (car g$r$10762$1M&0Ej)))))))
             g$f$10761$1M&0Ej)
           g$r$10759$1M&0Ej
           '()
           '()
           '())))))
   (g$generate-temporaries$7636$1M&0Ej
     g$generate-temporaries$11124$1M&0Ej
     (case-lambda
       ((g$ls$10780$1M&0Ej)
        ((case-lambda
           ((g$t$10781$1M&0Ej)
            ((case-lambda
               ((g$ls/false$10782$1M&0Ej)
                (if g$ls/false$10782$1M&0Ej
                  (apply
                    (case-lambda
                      ((g$ls$10783$1M&0Ej)
                       (map (case-lambda
                              ((g$x$10784$1M&0Ej)
                               (g$make-stx$7230$1M&0Ej
                                 ((case-lambda
                                    ((g$x$10785$1M&0Ej)
                                     (if ((case-lambda
                                            ((g$t$10786$1M&0Ej)
                                             (if g$t$10786$1M&0Ej
                                               g$t$10786$1M&0Ej
                                               (begin
                                                 '#f
                                                 (string? g$x$10785$1M&0Ej)))))
                                          (symbol? g$x$10785$1M&0Ej))
                                       (gensym g$x$10785$1M&0Ej)
                                       (gensym 't))))
                                  (g$syntax->datum$7649$1M&0Ej
                                    g$x$10784$1M&0Ej))
                                 g$top-mark*$7194$1M&0Ej
                                 '()
                                 '())))
                            g$ls$10783$1M&0Ej)))
                    g$ls/false$10782$1M&0Ej)
                  ((case-lambda
                     ((g$t$10787$1M&0Ej)
                      ((case-lambda
                         ((g$ls/false$10788$1M&0Ej)
                          (if g$ls/false$10788$1M&0Ej
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10788$1M&0Ej)
                            (g$syntax-violation$7646$1M&0Ej
                              '#f
                              '"invalid syntax"
                              g$t$10787$1M&0Ej))))
                       (g$syntax-dispatch$7535$1M&0Ej g$t$10787$1M&0Ej '_))))
                   g$t$10781$1M&0Ej))))
             (g$syntax-dispatch$7535$1M&0Ej g$t$10781$1M&0Ej 'each-any))))
         g$ls$10780$1M&0Ej))))
   (g$free-identifier=?$7637$1M&0Ej
     g$free-identifier=?$11125$1M&0Ej
     (case-lambda
       ((g$x$10789$1M&0Ej g$y$10790$1M&0Ej)
        (if (g$id?$7257$1M&0Ej g$x$10789$1M&0Ej)
          (if (g$id?$7257$1M&0Ej g$y$10790$1M&0Ej)
            (g$free-id=?$7261$1M&0Ej g$x$10789$1M&0Ej g$y$10790$1M&0Ej)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10790$1M&0Ej))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10789$1M&0Ej)))))
   (g$bound-identifier=?$7638$1M&0Ej
     g$bound-identifier=?$11126$1M&0Ej
     (case-lambda
       ((g$x$10791$1M&0Ej g$y$10792$1M&0Ej)
        (if (g$id?$7257$1M&0Ej g$x$10791$1M&0Ej)
          (if (g$id?$7257$1M&0Ej g$y$10792$1M&0Ej)
            (g$bound-id=?$7260$1M&0Ej g$x$10791$1M&0Ej g$y$10792$1M&0Ej)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10792$1M&0Ej))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10791$1M&0Ej)))))
   (g$make-source-condition$7639$1M&0Ej
     g$make-source-condition$11127$1M&0Ej
     (case-lambda
       ((g$x$10793$1M&0Ej)
        (letrec* ((g$11677$10794$1M&0Ej
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11680$1M&0Ej
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11679$10795$1M&0Ej '#f)
                  (g$11678$10796$1M&0Ej
                    (make-record-constructor-descriptor
                      g$11677$10794$1M&0Ej
                      &condition-rcd
                      g$11679$10795$1M&0Ej))
                  (g$11676$10797$1M&0Ej (record-predicate g$11677$10794$1M&0Ej))
                  (g$make-source-condition$10798$1M&0Ej
                    (record-constructor g$11678$10796$1M&0Ej))
                  (g$11674$10799$1M&0Ej
                    (record-accessor g$11677$10794$1M&0Ej '0))
                  (g$11675$10800$1M&0Ej
                    (record-accessor g$11677$10794$1M&0Ej '1))
                  (g$source-condition?$10801$1M&0Ej
                    (condition-predicate g$11677$10794$1M&0Ej))
                  (g$source-filename$10802$1M&0Ej
                    (condition-accessor
                      g$11677$10794$1M&0Ej
                      g$11674$10799$1M&0Ej))
                  (g$source-character$10803$1M&0Ej
                    (condition-accessor
                      g$11677$10794$1M&0Ej
                      g$11675$10800$1M&0Ej)))
          (if (pair? g$x$10793$1M&0Ej)
            (g$make-source-condition$10798$1M&0Ej
              (car g$x$10793$1M&0Ej)
              (cdr g$x$10793$1M&0Ej))
            (condition))))))
   (g$extract-position-condition$7640$1M&0Ej
     g$extract-position-condition$11128$1M&0Ej
     (case-lambda
       ((g$x$10804$1M&0Ej)
        (g$make-source-condition$7639$1M&0Ej
          (g$expression-position$7641$1M&0Ej g$x$10804$1M&0Ej)))))
   (g$expression-position$7641$1M&0Ej
     g$expression-position$11129$1M&0Ej
     (case-lambda
       ((g$x$10805$1M&0Ej)
        (if (g$stx?$7229$1M&0Ej g$x$10805$1M&0Ej)
          (begin
            '#f
            ((case-lambda
               ((g$x$10806$1M&0Ej)
                (if (annotation? g$x$10806$1M&0Ej)
                  (begin '#f (annotation-source g$x$10806$1M&0Ej))
                  '#f)))
             (g$stx-expr$7231$1M&0Ej g$x$10805$1M&0Ej)))
          '#f))))
   (g$assertion-error$7642$1M&0Ej
     g$assertion-error$11130$1M&0Ej
     (case-lambda
       ((g$expr$10807$1M&0Ej g$pos$10808$1M&0Ej)
        (raise
          (condition
            (g$make-assertion-violation$5733$1M&0Ej)
            (g$make-who-condition$5747$1M&0Ej 'assert)
            (g$make-message-condition$5701$1M&0Ej '"assertion failed")
            (g$make-irritants-condition$5739$1M&0Ej (list g$expr$10807$1M&0Ej))
            (g$make-source-condition$7639$1M&0Ej g$pos$10808$1M&0Ej))))))
   (g$syntax-error$7643$1M&0Ej
     g$syntax-error$11131$1M&0Ej
     (case-lambda
       ((g$x$10809$1M&0Ej . g$args$10810$1M&0Ej)
        (begin
          (if (not (g$for-all$4995$1M&0Ej string? g$args$10810$1M&0Ej))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10810$1M&0Ej)
            (void))
          (raise
            (condition
              (g$make-message-condition$5701$1M&0Ej
                (if (null? g$args$10810$1M&0Ej)
                  '"invalid syntax"
                  (apply string-append g$args$10810$1M&0Ej)))
              (g$make-syntax-violation$5773$1M&0Ej
                (g$syntax->datum$7649$1M&0Ej g$x$10809$1M&0Ej)
                '#f)
              (g$extract-position-condition$7640$1M&0Ej g$x$10809$1M&0Ej)
              (g$extract-trace$7644$1M&0Ej g$x$10809$1M&0Ej)))))))
   (g$extract-trace$7644$1M&0Ej
     g$extract-trace$11132$1M&0Ej
     (case-lambda
       ((g$x$10811$1M&0Ej)
        (letrec* ((g$11704$10812$1M&0Ej
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11707$1M&0Ej
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11706$10813$1M&0Ej '#f)
                  (g$11705$10814$1M&0Ej
                    (make-record-constructor-descriptor
                      g$11704$10812$1M&0Ej
                      &condition-rcd
                      g$11706$10813$1M&0Ej))
                  (g$11703$10815$1M&0Ej (record-predicate g$11704$10812$1M&0Ej))
                  (g$make-trace$10816$1M&0Ej
                    (record-constructor g$11705$10814$1M&0Ej))
                  (g$11702$10817$1M&0Ej
                    (record-accessor g$11704$10812$1M&0Ej '0))
                  (g$trace?$10818$1M&0Ej
                    (condition-predicate g$11704$10812$1M&0Ej))
                  (g$trace-form$10819$1M&0Ej
                    (condition-accessor
                      g$11704$10812$1M&0Ej
                      g$11702$10817$1M&0Ej)))
          ((letrec ((g$f$10820$1M&0Ej
                      (case-lambda
                        ((g$x$10821$1M&0Ej)
                         (if (g$stx?$7229$1M&0Ej g$x$10821$1M&0Ej)
                           (apply
                             condition
                             (g$make-trace$10816$1M&0Ej g$x$10821$1M&0Ej)
                             (map g$f$10820$1M&0Ej
                                  (g$stx-ae*$7234$1M&0Ej g$x$10821$1M&0Ej)))
                           (if (annotation? g$x$10821$1M&0Ej)
                             (g$make-trace$10816$1M&0Ej
                               (g$make-stx$7230$1M&0Ej
                                 g$x$10821$1M&0Ej
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10820$1M&0Ej)
           g$x$10811$1M&0Ej)))))
   (g$syntax-violation*$7645$1M&0Ej
     g$syntax-violation*$11133$1M&0Ej
     (case-lambda
       ((g$who$10822$1M&0Ej
          g$msg$10823$1M&0Ej
          g$form$10824$1M&0Ej
          g$condition-object$10825$1M&0Ej)
        (begin
          (if (not (string? g$msg$10823$1M&0Ej))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10823$1M&0Ej)
            (void))
          ((case-lambda
             ((g$who$10826$1M&0Ej)
              (raise
                (condition
                  (if g$who$10826$1M&0Ej
                    (g$make-who-condition$5747$1M&0Ej g$who$10826$1M&0Ej)
                    (condition))
                  (g$make-message-condition$5701$1M&0Ej g$msg$10823$1M&0Ej)
                  g$condition-object$10825$1M&0Ej
                  (g$extract-position-condition$7640$1M&0Ej g$form$10824$1M&0Ej)
                  (g$extract-trace$7644$1M&0Ej g$form$10824$1M&0Ej)))))
           (if ((case-lambda
                  ((g$t$10827$1M&0Ej)
                   (if g$t$10827$1M&0Ej
                     g$t$10827$1M&0Ej
                     (begin '#f (symbol? g$who$10822$1M&0Ej)))))
                (string? g$who$10822$1M&0Ej))
             g$who$10822$1M&0Ej
             (if (not g$who$10822$1M&0Ej)
               ((case-lambda
                  ((g$t$10828$1M&0Ej)
                   ((case-lambda
                      ((g$ls/false$10829$1M&0Ej)
                       (if (if g$ls/false$10829$1M&0Ej
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10830$1M&0Ej)
                                    (g$id?$7257$1M&0Ej g$id$10830$1M&0Ej)))
                                 g$ls/false$10829$1M&0Ej))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10831$1M&0Ej)
                              (g$syntax->datum$7649$1M&0Ej g$id$10831$1M&0Ej)))
                           g$ls/false$10829$1M&0Ej)
                         ((case-lambda
                            ((g$t$10832$1M&0Ej)
                             ((case-lambda
                                ((g$ls/false$10833$1M&0Ej)
                                 (if (if g$ls/false$10833$1M&0Ej
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10834$1M&0Ej
                                                g$rest$10835$1M&0Ej)
                                              (g$id?$7257$1M&0Ej
                                                g$id$10834$1M&0Ej)))
                                           g$ls/false$10833$1M&0Ej))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10836$1M&0Ej g$rest$10837$1M&0Ej)
                                        (g$syntax->datum$7649$1M&0Ej
                                          g$id$10836$1M&0Ej)))
                                     g$ls/false$10833$1M&0Ej)
                                   ((case-lambda
                                      ((g$t$10838$1M&0Ej)
                                       ((case-lambda
                                          ((g$ls/false$10839$1M&0Ej)
                                           (if g$ls/false$10839$1M&0Ej
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10839$1M&0Ej)
                                             (g$syntax-violation$7646$1M&0Ej
                                               '#f
                                               '"invalid syntax"
                                               g$t$10838$1M&0Ej))))
                                        (g$syntax-dispatch$7535$1M&0Ej
                                          g$t$10838$1M&0Ej
                                          '_))))
                                    g$t$10832$1M&0Ej))))
                              (g$syntax-dispatch$7535$1M&0Ej
                                g$t$10832$1M&0Ej
                                '(any . any)))))
                          g$t$10828$1M&0Ej))))
                    (g$syntax-dispatch$7535$1M&0Ej g$t$10828$1M&0Ej 'any))))
                g$form$10824$1M&0Ej)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10822$1M&0Ej))))))))
   (g$syntax-violation$7646$1M&0Ej
     g$syntax-violation$11134$1M&0Ej
     (case-lambda
       ((g$who$10840$1M&0Ej g$msg$10841$1M&0Ej g$form$10842$1M&0Ej)
        (g$syntax-violation$7646$1M&0Ej
          g$who$10840$1M&0Ej
          g$msg$10841$1M&0Ej
          g$form$10842$1M&0Ej
          '#f))
       ((g$who$10843$1M&0Ej
          g$msg$10844$1M&0Ej
          g$form$10845$1M&0Ej
          g$subform$10846$1M&0Ej)
        (g$syntax-violation*$7645$1M&0Ej
          g$who$10843$1M&0Ej
          g$msg$10844$1M&0Ej
          g$form$10845$1M&0Ej
          (g$make-syntax-violation$5773$1M&0Ej
            (g$syntax->datum$7649$1M&0Ej g$form$10845$1M&0Ej)
            (g$syntax->datum$7649$1M&0Ej g$subform$10846$1M&0Ej))))))
   (g$identifier?$7647$1M&0Ej
     g$identifier?$11135$1M&0Ej
     (case-lambda ((g$x$10847$1M&0Ej) (g$id?$7257$1M&0Ej g$x$10847$1M&0Ej))))
   (g$datum->syntax$7648$1M&0Ej
     g$datum->syntax$11136$1M&0Ej
     (case-lambda
       ((g$id$10848$1M&0Ej g$datum$10849$1M&0Ej)
        (if (g$id?$7257$1M&0Ej g$id$10848$1M&0Ej)
          (g$datum->stx$7240$1M&0Ej g$id$10848$1M&0Ej g$datum$10849$1M&0Ej)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10848$1M&0Ej)))))
   (g$syntax->datum$7649$1M&0Ej
     g$syntax->datum$11137$1M&0Ej
     (case-lambda
       ((g$x$10850$1M&0Ej) (g$stx->datum$7268$1M&0Ej g$x$10850$1M&0Ej))))
   (g$compile-r6rs-top-level$7650$1M&0Ej
     g$compile-r6rs-top-level$11138$1M&0Ej
     (case-lambda
       ((g$x*$10851$1M&0Ej)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7595$1M&0Ej g$x*$10851$1M&0Ej)))
          (case-lambda
            ((g$lib*$10854$1M&0Ej g$invoke-code$10855$1M&0Ej)
             ((case-lambda
                ((g$invoke-code$10856$1M&0Ej g$lib*$10857$1M&0Ej)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$7067$1M&0Ej
                        g$lib*$10857$1M&0Ej)
                      (eval-core
                        (g$expanded->core$6766$1M&0Ej
                          g$invoke-code$10856$1M&0Ej)))))))
              g$invoke-code$10855$1M&0Ej
              g$lib*$10854$1M&0Ej)))))))
   (g$pre-compile-r6rs-top-level$7651$1M&0Ej
     g$pre-compile-r6rs-top-level$11139$1M&0Ej
     (case-lambda
       ((g$x*$10858$1M&0Ej)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7595$1M&0Ej g$x*$10858$1M&0Ej)))
          (case-lambda
            ((g$lib*$10861$1M&0Ej g$invoke-code$10862$1M&0Ej)
             ((case-lambda
                ((g$invoke-code$10863$1M&0Ej g$lib*$10864$1M&0Ej)
                 (begin
                   (for-each g$invoke-library$7067$1M&0Ej g$lib*$10864$1M&0Ej)
                   (compile-core
                     (g$expanded->core$6766$1M&0Ej
                       g$invoke-code$10863$1M&0Ej)))))
              g$invoke-code$10862$1M&0Ej
              g$lib*$10861$1M&0Ej)))))))
   (g$interaction-environment$7652$1M&0Ej
     g$interaction-environment$11140$1M&0Ej
     ((case-lambda
        ((g$the-env$10865$1M&0Ej)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10866$1M&0Ej)
                (if g$t$10866$1M&0Ej
                  g$t$10866$1M&0Ej
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10867$1M&0Ej g$rib$10868$1M&0Ej)
                        (begin
                          ((case-lambda
                             ((g$subst$10869$1M&0Ej)
                              (begin
                                (g$set-rib-sym*!$7212$1M&0Ej
                                  g$rib$10868$1M&0Ej
                                  (map car g$subst$10869$1M&0Ej))
                                (g$set-rib-mark**!$7213$1M&0Ej
                                  g$rib$10868$1M&0Ej
                                  (map (case-lambda
                                         ((g$x$10870$1M&0Ej)
                                          g$top-mark*$7194$1M&0Ej))
                                       g$subst$10869$1M&0Ej))
                                (g$set-rib-label*!$7214$1M&0Ej
                                  g$rib$10868$1M&0Ej
                                  (map cdr g$subst$10869$1M&0Ej)))))
                           (g$library-subst$7024$1M&0Ej g$lib$10867$1M&0Ej))
                          ((case-lambda
                             ((g$env$10871$1M&0Ej)
                              (begin
                                (set! g$the-env$10865$1M&0Ej g$env$10871$1M&0Ej)
                                g$env$10871$1M&0Ej)))
                           (g$make-interaction-env$7612$1M&0Ej
                             g$rib$10868$1M&0Ej
                             '()
                             '())))))
                     (g$find-library-by-name$7060$1M&0Ej '(ironscheme))
                     (g$make-cache-rib$7218$1M&0Ej))))))
             g$the-env$10865$1M&0Ej)))))
      '#f))
   (g$top-level-context$7653$1M&0Ej
     g$top-level-context$11141$1M&0Ej
     (g$make-parameter$6520$1M&0Ej '#f)))
  (g$current-library-expander$7057$1M&0Ej g$library-expander$7630$1M&0Ej))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6763$1M&0Ej
      (case-lambda
        ((g$x$11194$1M&0Ej)
         ((case-lambda
            ((g$t$11195$1M&0Ej)
             (if g$t$11195$1M&0Ej (cdr g$t$11195$1M&0Ej) '#f)))
          (g$assq$4985$1M&0Ej
            g$x$11194$1M&0Ej
            '((ellipsis-map . g$ellipsis-map$11028$1M&0Ej)
              (ironscheme-build . g$ironscheme-build$11187$1M&0Ej)
              (syntax-error . g$syntax-error$11131$1M&0Ej)
              (syntax-dispatch . g$syntax-dispatch$11023$1M&0Ej)
              (compile-system-libraries
                .
                g$compile-system-libraries$11189$1M&0Ej)
              (compile->closure . g$compile->closure$11191$1M&0Ej)
              (compile . g$compile$11190$1M&0Ej)
              (load . g$load$11186$1M&0Ej)
              (interaction-environment . g$interaction-environment$11140$1M&0Ej)
              (string-ci>? . g$string-ci>?$5919$1M&0Ej)
              (string-ci>=? . g$string-ci>=?$5921$1M&0Ej)
              (string-ci=? . g$string-ci=?$5917$1M&0Ej)
              (string-ci<? . g$string-ci<?$5918$1M&0Ej)
              (string-ci<=? . g$string-ci<=?$5920$1M&0Ej)
              (char-ci>? . g$char-ci>?$5924$1M&0Ej)
              (char-ci>=? . g$char-ci>=?$5926$1M&0Ej)
              (char-ci=? . g$char-ci=?$5922$1M&0Ej)
              (char-ci<? . g$char-ci<?$5923$1M&0Ej)
              (char-ci<=? . g$char-ci<=?$5925$1M&0Ej)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10961$1M&0Ej)
              (variable-transformer? . g$variable-transformer?$10960$1M&0Ej)
              (make-variable-transformer
                .
                g$make-variable-transformer$10959$1M&0Ej)
              (identifier? . g$identifier?$11135$1M&0Ej)
              (generate-temporaries . g$generate-temporaries$11124$1M&0Ej)
              (free-identifier=? . g$free-identifier=?$11125$1M&0Ej)
              (syntax->datum . g$syntax->datum$11137$1M&0Ej)
              (datum->syntax . g$datum->syntax$11136$1M&0Ej)
              (bound-identifier=? . g$bound-identifier=?$11126$1M&0Ej)
              (delete-file . g$delete-file$5453$1M&0Ej)
              (file-exists? . g$file-exists?$5452$1M&0Ej)
              (list-sort . g$list-sort$5844$1M&0Ej)
              (make-eqv-hashtable . g$make-eqv-hashtable$5434$1M&0Ej)
              (make-eq-hashtable . g$make-eq-hashtable$5433$1M&0Ej)
              (hashtable-update! . g$hashtable-update!$5440$1M&0Ej)
              (hashtable-size . g$hashtable-size$5435$1M&0Ej)
              (hashtable-set! . g$hashtable-set!$5437$1M&0Ej)
              (hashtable-ref . g$hashtable-ref$5436$1M&0Ej)
              (hashtable-delete! . g$hashtable-delete!$5438$1M&0Ej)
              (hashtable-contains? . g$hashtable-contains?$5439$1M&0Ej)
              (hashtable-clear! . g$hashtable-clear!$5441$1M&0Ej)
              (call-with-output-file . g$call-with-output-file$6266$1M&0Ej)
              (call-with-input-file . g$call-with-input-file$6265$1M&0Ej)
              (with-output-to-file . g$with-output-to-file$6264$1M&0Ej)
              (with-input-from-file . g$with-input-from-file$6263$1M&0Ej)
              (port? . g$port?$6230$1M&0Ej)
              (open-string-output-port . g$open-string-output-port$6229$1M&0Ej)
              (make-i/o-write-error . g$make-i/o-write-error$6155$1M&0Ej)
              (make-i/o-read-error . g$make-i/o-read-error$6149$1M&0Ej)
              (make-i/o-port-error . g$make-i/o-port-error$6201$1M&0Ej)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6161$1M&0Ej)
              (make-i/o-filename-error . g$make-i/o-filename-error$6169$1M&0Ej)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6177$1M&0Ej)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6183$1M&0Ej)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6195$1M&0Ej)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6189$1M&0Ej)
              (make-i/o-error . g$make-i/o-error$6143$1M&0Ej)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6215$1M&0Ej)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6209$1M&0Ej)
              (i/o-write-error? . g$i/o-write-error?$6156$1M&0Ej)
              (i/o-read-error? . g$i/o-read-error?$6150$1M&0Ej)
              (i/o-port-error? . g$i/o-port-error?$6203$1M&0Ej)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6163$1M&0Ej)
              (i/o-error-position . g$i/o-error-position$6164$1M&0Ej)
              (i/o-filename-error? . g$i/o-filename-error?$6171$1M&0Ej)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6178$1M&0Ej)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6184$1M&0Ej)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6196$1M&0Ej)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6190$1M&0Ej)
              (i/o-error? . g$i/o-error?$6144$1M&0Ej)
              (i/o-error-port . g$i/o-error-port$6204$1M&0Ej)
              (i/o-error-filename . g$i/o-error-filename$6172$1M&0Ej)
              (i/o-encoding-error? . g$i/o-encoding-error?$6217$1M&0Ej)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6218$1M&0Ej)
              (i/o-decoding-error? . g$i/o-decoding-error?$6210$1M&0Ej)
              (scheme-report-environment
                .
                g$scheme-report-environment$11115$1M&0Ej)
              (quotient . g$quotient$5811$1M&0Ej)
              (null-environment . g$null-environment$11114$1M&0Ej)
              (remainder . g$remainder$5812$1M&0Ej)
              (modulo . g$modulo$5813$1M&0Ej)
              (force . g$force$5815$1M&0Ej)
              (command-line . g$command-line$11183$1M&0Ej)
              (remove . g$remove$5000$1M&0Ej)
              (remv . g$remv$5001$1M&0Ej)
              (remp . g$remp$4983$1M&0Ej)
              (remq . g$remq$5002$1M&0Ej)
              (partition . g$partition$4982$1M&0Ej)
              (memv . g$memv$4990$1M&0Ej)
              (memq . g$memq$4989$1M&0Ej)
              (memp . g$memp$4992$1M&0Ej)
              (member . g$member$4991$1M&0Ej)
              (exists . g$exists$4996$1M&0Ej)
              (for-all . g$for-all$4995$1M&0Ej)
              (fold-right . g$fold-right$4999$1M&0Ej)
              (fold-left . g$fold-left$4998$1M&0Ej)
              (find . g$find$4981$1M&0Ej)
              (filter . g$filter$4984$1M&0Ej)
              (cons* . g$cons*$4997$1M&0Ej)
              (assv . g$assv$4986$1M&0Ej)
              (assq . g$assq$4985$1M&0Ej)
              (assp . g$assp$4988$1M&0Ej)
              (assoc . g$assoc$4987$1M&0Ej)
              (eval . g$eval$11117$1M&0Ej)
              (environment . g$environment$11113$1M&0Ej)
              (make-enumeration . g$make-enumeration$6397$1M&0Ej)
              (enum-set=? . g$enum-set=?$6404$1M&0Ej)
              (enum-set-universe . g$enum-set-universe$6398$1M&0Ej)
              (enum-set-union . g$enum-set-union$6405$1M&0Ej)
              (enum-set-subset? . g$enum-set-subset?$6403$1M&0Ej)
              (enum-set-projection . g$enum-set-projection$6409$1M&0Ej)
              (enum-set-member? . g$enum-set-member?$6402$1M&0Ej)
              (enum-set-intersection . g$enum-set-intersection$6406$1M&0Ej)
              (enum-set-indexer . g$enum-set-indexer$6399$1M&0Ej)
              (enum-set-difference . g$enum-set-difference$6407$1M&0Ej)
              (enum-set-constructor . g$enum-set-constructor$6400$1M&0Ej)
              (enum-set-complement . g$enum-set-complement$6408$1M&0Ej)
              (enum-set->list . g$enum-set->list$6401$1M&0Ej)
              (who-condition? . g$who-condition?$5749$1M&0Ej)
              (warning? . g$warning?$5710$1M&0Ej)
              (violation? . g$violation?$5728$1M&0Ej)
              (undefined-violation? . g$undefined-violation?$5784$1M&0Ej)
              (syntax-violation? . g$syntax-violation?$5776$1M&0Ej)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5778$1M&0Ej)
              (syntax-violation-form . g$syntax-violation-form$5777$1M&0Ej)
              (syntax-violation . g$syntax-violation$11134$1M&0Ej)
              (serious-condition? . g$serious-condition?$5716$1M&0Ej)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5756$1M&0Ej)
              (message-condition? . g$message-condition?$5703$1M&0Ej)
              (make-who-condition . g$make-who-condition$5747$1M&0Ej)
              (make-warning . g$make-warning$5709$1M&0Ej)
              (make-violation . g$make-violation$5727$1M&0Ej)
              (make-undefined-violation
                .
                g$make-undefined-violation$5783$1M&0Ej)
              (make-syntax-violation . g$make-syntax-violation$5773$1M&0Ej)
              (make-serious-condition . g$make-serious-condition$5715$1M&0Ej)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5755$1M&0Ej)
              (make-message-condition . g$make-message-condition$5701$1M&0Ej)
              (make-lexical-violation . g$make-lexical-violation$5767$1M&0Ej)
              (make-irritants-condition
                .
                g$make-irritants-condition$5739$1M&0Ej)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5761$1M&0Ej)
              (make-error . g$make-error$5721$1M&0Ej)
              (make-assertion-violation
                .
                g$make-assertion-violation$5733$1M&0Ej)
              (lexical-violation? . g$lexical-violation?$5768$1M&0Ej)
              (irritants-condition? . g$irritants-condition?$5741$1M&0Ej)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5762$1M&0Ej)
              (error? . g$error?$5722$1M&0Ej)
              (condition-who . g$condition-who$5750$1M&0Ej)
              (condition-message . g$condition-message$5704$1M&0Ej)
              (condition-irritants . g$condition-irritants$5742$1M&0Ej)
              (assertion-violation? . g$assertion-violation?$5734$1M&0Ej)
              (native-endianness . g$native-endianness$5566$1M&0Ej)
              (bytevector-u64-set! . g$bytevector-u64-set!$5587$1M&0Ej)
              (bytevector-u64-ref . g$bytevector-u64-ref$5583$1M&0Ej)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5589$1M&0Ej)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5585$1M&0Ej)
              (bytevector-u32-set! . g$bytevector-u32-set!$5579$1M&0Ej)
              (bytevector-u32-ref . g$bytevector-u32-ref$5575$1M&0Ej)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5581$1M&0Ej)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5577$1M&0Ej)
              (bytevector-u16-set! . g$bytevector-u16-set!$5571$1M&0Ej)
              (bytevector-u16-ref . g$bytevector-u16-ref$5567$1M&0Ej)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5573$1M&0Ej)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5569$1M&0Ej)
              (bytevector-s64-set! . g$bytevector-s64-set!$5588$1M&0Ej)
              (bytevector-s64-ref . g$bytevector-s64-ref$5584$1M&0Ej)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5590$1M&0Ej)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5586$1M&0Ej)
              (bytevector-s32-set! . g$bytevector-s32-set!$5580$1M&0Ej)
              (bytevector-s32-ref . g$bytevector-s32-ref$5576$1M&0Ej)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5582$1M&0Ej)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5578$1M&0Ej)
              (bytevector-s16-set! . g$bytevector-s16-set!$5572$1M&0Ej)
              (bytevector-s16-ref . g$bytevector-s16-ref$5568$1M&0Ej)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5574$1M&0Ej)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5570$1M&0Ej)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5593$1M&0Ej)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5591$1M&0Ej)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5594$1M&0Ej)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5592$1M&0Ej)
              (no-nans-violation? . g$no-nans-violation?$6058$1M&0Ej)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$6052$1M&0Ej)
              (make-no-nans-violation . g$make-no-nans-violation$6057$1M&0Ej)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6051$1M&0Ej)
              (fxrotate-bit-field . g$fxrotate-bit-field$6034$1M&0Ej)
              (fxif . g$fxif$6028$1M&0Ej)
              (fxcopy-bit-field . g$fxcopy-bit-field$6031$1M&0Ej)
              (fxcopy-bit . g$fxcopy-bit$6029$1M&0Ej)
              (fxbit-field . g$fxbit-field$6030$1M&0Ej)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$6033$1M&0Ej)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6032$1M&0Ej)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$5980$1M&0Ej)
              (bitwise-if . g$bitwise-if$5974$1M&0Ej)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$5977$1M&0Ej)
              (bitwise-copy-bit . g$bitwise-copy-bit$5975$1M&0Ej)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$5979$1M&0Ej)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$5978$1M&0Ej)
              (symbol=? . g$symbol=?$5191$1M&0Ej)
              (string>? . g$string>?$5188$1M&0Ej)
              (string>=? . g$string>=?$5190$1M&0Ej)
              (string=? . g$string=?$5186$1M&0Ej)
              (string<? . g$string<?$5187$1M&0Ej)
              (string<=? . g$string<=?$5189$1M&0Ej)
              (rationalize . g$rationalize$5198$1M&0Ej)
              (char>? . g$char>?$5195$1M&0Ej)
              (char>=? . g$char>=?$5197$1M&0Ej)
              (char=? . g$char=?$5193$1M&0Ej)
              (char<? . g$char<?$5194$1M&0Ej)
              (char<=? . g$char<=?$5196$1M&0Ej)
              (cddddr . g$cddddr$5185$1M&0Ej)
              (cdddar . g$cdddar$5184$1M&0Ej)
              (cddadr . g$cddadr$5183$1M&0Ej)
              (cddaar . g$cddaar$5182$1M&0Ej)
              (cdaddr . g$cdaddr$5181$1M&0Ej)
              (cdadar . g$cdadar$5180$1M&0Ej)
              (cdaadr . g$cdaadr$5179$1M&0Ej)
              (cdaaar . g$cdaaar$5178$1M&0Ej)
              (cadddr . g$cadddr$5177$1M&0Ej)
              (caddar . g$caddar$5176$1M&0Ej)
              (cadadr . g$cadadr$5175$1M&0Ej)
              (cadaar . g$cadaar$5174$1M&0Ej)
              (caaddr . g$caaddr$5173$1M&0Ej)
              (caadar . g$caadar$5172$1M&0Ej)
              (caaadr . g$caaadr$5171$1M&0Ej)
              (caaaar . g$caaaar$5170$1M&0Ej)
              (cdddr . g$cdddr$5169$1M&0Ej)
              (cddar . g$cddar$5168$1M&0Ej)
              (cdadr . g$cdadr$5167$1M&0Ej)
              (cdaar . g$cdaar$5166$1M&0Ej)
              (caddr . g$caddr$5165$1M&0Ej)
              (cadar . g$cadar$5164$1M&0Ej)
              (caadr . g$caadr$5163$1M&0Ej)
              (caaar . g$caaar$5162$1M&0Ej)
              (cddr . g$cddr$5161$1M&0Ej)
              (cdar . g$cdar$5160$1M&0Ej)
              (cadr . g$cadr$5159$1M&0Ej)
              (caar . g$caar$5158$1M&0Ej)
              (boolean=? . g$boolean=?$5192$1M&0Ej)
              (enum-set? . g$enum?$6378$1M&0Ej)
              (make-promise . g$make-promise$5814$1M&0Ej)
              (load/args . g$load/args$11185$1M&0Ej)
              (printf . g$printf$6433$1M&0Ej)
              (fprintf . g$fprintf$6434$1M&0Ej)
              (format . g$format$6435$1M&0Ej)
              (trace-printer . g$trace-printer$11182$1M&0Ej)
              (make-traced-macro . g$make-traced-macro$6439$1M&0Ej)
              (assertion-error . g$assertion-error$11130$1M&0Ej)
              (make-parameter . g$make-parameter$6520$1M&0Ej)
              (environment-bindings . g$environment-bindings$11109$1M&0Ej)
              (environment-symbols . g$environment-symbols$11112$1M&0Ej)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11108$1M&0Ej)
              (library-path . g$library-path$7049$1M&0Ej)))))))
    (g$install-library$7065$1M&0Ej
      'g$12427$1M&0Ej
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12364$1M&0Ej)
        (cosh . g$12363$1M&0Ej)
        (sinh . g$12362$1M&0Ej)
        (make-guid . g$12361$1M&0Ej)
        (unspecified? . g$12360$1M&0Ej)
        (make-trace . g$12359$1M&0Ej)
        (make-list . g$12358$1M&0Ej)
        (last-pair . g$12357$1M&0Ej)
        (load-r5rs . g$12356$1M&0Ej)
        (license . g$12355$1M&0Ej)
        (stacktrace . g$12354$1M&0Ej)
        (ironscheme-build . g$11776$1M&0Ej)
        (set-symbol-value! . g$12340$1M&0Ej)
        (symbol-value . g$12339$1M&0Ej)
        (ungensym . g$12338$1M&0Ej)
        (gensym . g$12337$1M&0Ej)
        (void . g$12336$1M&0Ej)
        (compile-system-libraries . g$11778$1M&0Ej)
        (compile->closure . g$11780$1M&0Ej)
        (compile . g$11779$1M&0Ej)
        (load . g$11775$1M&0Ej)
        (interaction-environment . g$8806$1M&0Ej)
        (string-upcase . g$12332$1M&0Ej)
        (string-titlecase . g$12331$1M&0Ej)
        (string-normalize-nfkd . g$12330$1M&0Ej)
        (string-normalize-nfkc . g$12329$1M&0Ej)
        (string-normalize-nfd . g$12328$1M&0Ej)
        (string-normalize-nfc . g$12327$1M&0Ej)
        (string-foldcase . g$12326$1M&0Ej)
        (string-downcase . g$12325$1M&0Ej)
        (string-ci>? . g$6910$1M&0Ej)
        (string-ci>=? . g$6912$1M&0Ej)
        (string-ci=? . g$6908$1M&0Ej)
        (string-ci<? . g$6909$1M&0Ej)
        (string-ci<=? . g$6911$1M&0Ej)
        (char-whitespace? . g$12324$1M&0Ej)
        (char-upper-case? . g$12323$1M&0Ej)
        (char-title-case? . g$12322$1M&0Ej)
        (char-numeric? . g$12321$1M&0Ej)
        (char-lower-case? . g$12320$1M&0Ej)
        (char-general-category . g$12319$1M&0Ej)
        (char-upcase . g$12318$1M&0Ej)
        (char-titlecase . g$12317$1M&0Ej)
        (char-foldcase . g$12316$1M&0Ej)
        (char-downcase . g$12315$1M&0Ej)
        (char-ci>? . g$6949$1M&0Ej)
        (char-ci>=? . g$6951$1M&0Ej)
        (char-ci=? . g$6947$1M&0Ej)
        (char-ci<? . g$6948$1M&0Ej)
        (char-ci<=? . g$6950$1M&0Ej)
        (char-alphabetic? . g$12314$1M&0Ej)
        (make-variable-transformer . g$8403$1M&0Ej)
        (identifier? . g$8801$1M&0Ej)
        (generate-temporaries . g$8790$1M&0Ej)
        (free-identifier=? . g$8791$1M&0Ej)
        (syntax->datum . g$8803$1M&0Ej)
        (datum->syntax . g$8802$1M&0Ej)
        (bound-identifier=? . g$8792$1M&0Ej)
        (record-type-descriptor? . g$12313$1M&0Ej)
        (record-predicate . g$12312$1M&0Ej)
        (record-mutator . g$12311$1M&0Ej)
        (record-constructor . g$12310$1M&0Ej)
        (record-accessor . g$12309$1M&0Ej)
        (make-record-type-descriptor . g$12308$1M&0Ej)
        (make-record-constructor-descriptor . g$12307$1M&0Ej)
        (record? . g$12306$1M&0Ej)
        (record-type-uid . g$12305$1M&0Ej)
        (record-type-sealed? . g$12304$1M&0Ej)
        (record-type-parent . g$12303$1M&0Ej)
        (record-type-opaque? . g$12302$1M&0Ej)
        (record-type-name . g$12301$1M&0Ej)
        (record-type-generative? . g$12300$1M&0Ej)
        (record-type-field-names . g$12299$1M&0Ej)
        (record-rtd . g$12298$1M&0Ej)
        (record-field-mutable? . g$12297$1M&0Ej)
        (delete-file . g$6485$1M&0Ej)
        (file-exists? . g$6484$1M&0Ej)
        (vector-sort! . g$12296$1M&0Ej)
        (vector-sort . g$12295$1M&0Ej)
        (list-sort . g$6848$1M&0Ej)
        (symbol-hash . g$12294$1M&0Ej)
        (string-ci-hash . g$12293$1M&0Ej)
        (string-hash . g$12292$1M&0Ej)
        (equal-hash . g$12291$1M&0Ej)
        (hashtable-equivalence-function . g$12290$1M&0Ej)
        (make-hashtable . g$12289$1M&0Ej)
        (hashtable-hash-function . g$12288$1M&0Ej)
        (make-eqv-hashtable . g$6452$1M&0Ej)
        (make-eq-hashtable . g$6451$1M&0Ej)
        (hashtable? . g$12287$1M&0Ej)
        (hashtable-update! . g$6458$1M&0Ej)
        (hashtable-size . g$6453$1M&0Ej)
        (hashtable-set! . g$6455$1M&0Ej)
        (hashtable-ref . g$6454$1M&0Ej)
        (hashtable-mutable? . g$12286$1M&0Ej)
        (hashtable-keys . g$12285$1M&0Ej)
        (hashtable-entries . g$12284$1M&0Ej)
        (hashtable-delete! . g$6456$1M&0Ej)
        (hashtable-copy . g$12283$1M&0Ej)
        (hashtable-contains? . g$6457$1M&0Ej)
        (hashtable-clear! . g$6459$1M&0Ej)
        (call-with-output-file . g$7338$1M&0Ej)
        (call-with-input-file . g$7337$1M&0Ej)
        (write-char . g$12282$1M&0Ej)
        (write . g$12281$1M&0Ej)
        (with-output-to-file . g$7336$1M&0Ej)
        (with-input-from-file . g$7335$1M&0Ej)
        (read-char . g$12280$1M&0Ej)
        (read . g$12279$1M&0Ej)
        (peek-char . g$12278$1M&0Ej)
        (open-output-file . g$12277$1M&0Ej)
        (open-input-file . g$12276$1M&0Ej)
        (newline . g$12275$1M&0Ej)
        (display . g$12274$1M&0Ej)
        (close-output-port . g$12273$1M&0Ej)
        (close-input-port . g$12272$1M&0Ej)
        (eof-object? . g$12271$1M&0Ej)
        (eof-object . g$12270$1M&0Ej)
        (current-error-port . g$12269$1M&0Ej)
        (current-output-port . g$12268$1M&0Ej)
        (current-input-port . g$12267$1M&0Ej)
        (output-port? . g$12266$1M&0Ej)
        (input-port? . g$12265$1M&0Ej)
        (utf-8-codec . g$12264$1M&0Ej)
        (utf-16-codec . g$12263$1M&0Ej)
        (transcoder-error-handling-mode . g$12262$1M&0Ej)
        (transcoder-eol-style . g$12261$1M&0Ej)
        (transcoder-codec . g$12260$1M&0Ej)
        (transcoded-port . g$12259$1M&0Ej)
        (textual-port? . g$12258$1M&0Ej)
        (string->bytevector . g$12257$1M&0Ej)
        (standard-output-port . g$12256$1M&0Ej)
        (standard-input-port . g$12255$1M&0Ej)
        (standard-error-port . g$12254$1M&0Ej)
        (set-port-position! . g$12253$1M&0Ej)
        (put-u8 . g$12252$1M&0Ej)
        (put-string . g$12251$1M&0Ej)
        (put-datum . g$12250$1M&0Ej)
        (put-char . g$12249$1M&0Ej)
        (put-bytevector . g$12248$1M&0Ej)
        (port? . g$7314$1M&0Ej)
        (port-transcoder . g$12247$1M&0Ej)
        (port-position . g$12246$1M&0Ej)
        (port-has-set-port-position!? . g$12245$1M&0Ej)
        (port-has-port-position? . g$12244$1M&0Ej)
        (port-eof? . g$12243$1M&0Ej)
        (output-port-buffer-mode . g$12242$1M&0Ej)
        (open-string-output-port . g$7313$1M&0Ej)
        (open-string-input-port . g$12241$1M&0Ej)
        (open-file-output-port . g$12240$1M&0Ej)
        (open-file-input/output-port . g$12239$1M&0Ej)
        (open-file-input-port . g$12238$1M&0Ej)
        (open-bytevector-output-port . g$12237$1M&0Ej)
        (open-bytevector-input-port . g$12236$1M&0Ej)
        (native-transcoder . g$12235$1M&0Ej)
        (native-eol-style . g$12234$1M&0Ej)
        (make-transcoder . g$12233$1M&0Ej)
        (latin-1-codec . g$12232$1M&0Ej)
        (make-i/o-write-error . g$7170$1M&0Ej)
        (make-i/o-read-error . g$7156$1M&0Ej)
        (make-i/o-port-error . g$7275$1M&0Ej)
        (make-i/o-invalid-position-error . g$7185$1M&0Ej)
        (make-i/o-filename-error . g$7202$1M&0Ej)
        (make-i/o-file-protection-error . g$7218$1M&0Ej)
        (make-i/o-file-is-read-only-error . g$7232$1M&0Ej)
        (make-i/o-file-does-not-exist-error . g$7260$1M&0Ej)
        (make-i/o-file-already-exists-error . g$7246$1M&0Ej)
        (make-i/o-error . g$7142$1M&0Ej)
        (make-i/o-encoding-error . g$7306$1M&0Ej)
        (make-i/o-decoding-error . g$7291$1M&0Ej)
        (make-custom-textual-output-port . g$12231$1M&0Ej)
        (make-custom-textual-input/output-port . g$12230$1M&0Ej)
        (make-custom-textual-input-port . g$12229$1M&0Ej)
        (make-custom-binary-output-port . g$12228$1M&0Ej)
        (make-custom-binary-input/output-port . g$12227$1M&0Ej)
        (make-custom-binary-input-port . g$12226$1M&0Ej)
        (make-bytevector . g$12225$1M&0Ej)
        (lookahead-u8 . g$12224$1M&0Ej)
        (lookahead-char . g$12223$1M&0Ej)
        (i/o-write-error? . g$7171$1M&0Ej)
        (i/o-read-error? . g$7157$1M&0Ej)
        (i/o-port-error? . g$7277$1M&0Ej)
        (i/o-invalid-position-error? . g$7187$1M&0Ej)
        (i/o-error-position . g$7188$1M&0Ej)
        (i/o-filename-error? . g$7204$1M&0Ej)
        (i/o-file-protection-error? . g$7219$1M&0Ej)
        (i/o-file-is-read-only-error? . g$7233$1M&0Ej)
        (i/o-file-does-not-exist-error? . g$7261$1M&0Ej)
        (i/o-file-already-exists-error? . g$7247$1M&0Ej)
        (i/o-error? . g$7143$1M&0Ej)
        (i/o-error-port . g$7278$1M&0Ej)
        (i/o-error-filename . g$7205$1M&0Ej)
        (i/o-encoding-error? . g$7308$1M&0Ej)
        (i/o-encoding-error-char . g$7309$1M&0Ej)
        (i/o-decoding-error? . g$7292$1M&0Ej)
        (get-u8 . g$12222$1M&0Ej)
        (get-string-n! . g$12221$1M&0Ej)
        (get-string-n . g$12220$1M&0Ej)
        (get-string-all . g$12219$1M&0Ej)
        (get-line . g$12218$1M&0Ej)
        (get-datum . g$12217$1M&0Ej)
        (get-char . g$12216$1M&0Ej)
        (get-bytevector-some . g$12215$1M&0Ej)
        (get-bytevector-n! . g$12214$1M&0Ej)
        (get-bytevector-n . g$12213$1M&0Ej)
        (get-bytevector-all . g$12212$1M&0Ej)
        (flush-output-port . g$12211$1M&0Ej)
        (close-port . g$12210$1M&0Ej)
        (call-with-string-output-port . g$12209$1M&0Ej)
        (call-with-port . g$12208$1M&0Ej)
        (call-with-bytevector-output-port . g$12207$1M&0Ej)
        (bytevector->string . g$12206$1M&0Ej)
        (buffer-mode? . g$12205$1M&0Ej)
        (binary-port? . g$12204$1M&0Ej)
        (scheme-report-environment . g$8781$1M&0Ej)
        (quotient . g$6828$1M&0Ej)
        (null-environment . g$8780$1M&0Ej)
        (remainder . g$6829$1M&0Ej)
        (modulo . g$6830$1M&0Ej)
        (inexact->exact . g$12203$1M&0Ej)
        (force . g$6832$1M&0Ej)
        (exact->inexact . g$12202$1M&0Ej)
        (exit . g$12201$1M&0Ej)
        (command-line . g$11772$1M&0Ej)
        (string-fill! . g$12200$1M&0Ej)
        (string-set! . g$12199$1M&0Ej)
        (set-cdr! . g$12198$1M&0Ej)
        (set-car! . g$12197$1M&0Ej)
        (remove . g$5846$1M&0Ej)
        (remv . g$5847$1M&0Ej)
        (remp . g$5829$1M&0Ej)
        (remq . g$5848$1M&0Ej)
        (partition . g$5828$1M&0Ej)
        (memv . g$5836$1M&0Ej)
        (memq . g$5835$1M&0Ej)
        (memp . g$5838$1M&0Ej)
        (member . g$5837$1M&0Ej)
        (exists . g$5842$1M&0Ej)
        (for-all . g$5841$1M&0Ej)
        (fold-right . g$5845$1M&0Ej)
        (fold-left . g$5844$1M&0Ej)
        (find . g$5827$1M&0Ej)
        (filter . g$5830$1M&0Ej)
        (cons* . g$5843$1M&0Ej)
        (assv . g$5832$1M&0Ej)
        (assq . g$5831$1M&0Ej)
        (assp . g$5834$1M&0Ej)
        (assoc . g$5833$1M&0Ej)
        (with-exception-handler . g$12196$1M&0Ej)
        (raise-continuable . g$12195$1M&0Ej)
        (raise . g$12194$1M&0Ej)
        (eval . g$8783$1M&0Ej)
        (environment . g$8779$1M&0Ej)
        (make-enumeration . g$7396$1M&0Ej)
        (enum-set=? . g$7403$1M&0Ej)
        (enum-set-universe . g$7397$1M&0Ej)
        (enum-set-union . g$7404$1M&0Ej)
        (enum-set-subset? . g$7402$1M&0Ej)
        (enum-set-projection . g$7408$1M&0Ej)
        (enum-set-member? . g$7401$1M&0Ej)
        (enum-set-intersection . g$7405$1M&0Ej)
        (enum-set-indexer . g$7398$1M&0Ej)
        (enum-set-difference . g$7406$1M&0Ej)
        (enum-set-constructor . g$7399$1M&0Ej)
        (enum-set-complement . g$7407$1M&0Ej)
        (enum-set->list . g$7400$1M&0Ej)
        (who-condition? . g$6739$1M&0Ej)
        (warning? . g$6650$1M&0Ej)
        (violation? . g$6692$1M&0Ej)
        (undefined-violation? . g$6816$1M&0Ej)
        (syntax-violation? . g$6800$1M&0Ej)
        (syntax-violation-subform . g$6802$1M&0Ej)
        (syntax-violation-form . g$6801$1M&0Ej)
        (syntax-violation . g$8800$1M&0Ej)
        (simple-conditions . g$12193$1M&0Ej)
        (serious-condition? . g$6664$1M&0Ej)
        (non-continuable-violation? . g$6754$1M&0Ej)
        (message-condition? . g$6635$1M&0Ej)
        (make-who-condition . g$6737$1M&0Ej)
        (make-warning . g$6649$1M&0Ej)
        (make-violation . g$6691$1M&0Ej)
        (make-undefined-violation . g$6815$1M&0Ej)
        (make-syntax-violation . g$6797$1M&0Ej)
        (make-serious-condition . g$6663$1M&0Ej)
        (make-non-continuable-violation . g$6753$1M&0Ej)
        (make-message-condition . g$6633$1M&0Ej)
        (make-lexical-violation . g$6781$1M&0Ej)
        (make-irritants-condition . g$6720$1M&0Ej)
        (make-implementation-restriction-violation . g$6767$1M&0Ej)
        (make-error . g$6677$1M&0Ej)
        (make-assertion-violation . g$6705$1M&0Ej)
        (lexical-violation? . g$6782$1M&0Ej)
        (irritants-condition? . g$6722$1M&0Ej)
        (implementation-restriction-violation? . g$6768$1M&0Ej)
        (error? . g$6678$1M&0Ej)
        (condition-who . g$6740$1M&0Ej)
        (condition-predicate . g$12192$1M&0Ej)
        (condition-message . g$6636$1M&0Ej)
        (condition-irritants . g$6723$1M&0Ej)
        (condition-accessor . g$12191$1M&0Ej)
        (condition . g$12190$1M&0Ej)
        (assertion-violation? . g$6706$1M&0Ej)
        (condition? . g$12189$1M&0Ej)
        (utf32->string . g$12188$1M&0Ej)
        (utf16->string . g$12187$1M&0Ej)
        (utf8->string . g$12186$1M&0Ej)
        (uint-list->bytevector . g$12185$1M&0Ej)
        (u8-list->bytevector . g$12184$1M&0Ej)
        (string->utf8 . g$12183$1M&0Ej)
        (string->utf32 . g$12182$1M&0Ej)
        (string->utf16 . g$12181$1M&0Ej)
        (sint-list->bytevector . g$12180$1M&0Ej)
        (native-endianness . g$6491$1M&0Ej)
        (bytevector? . g$12179$1M&0Ej)
        (bytevector=? . g$12178$1M&0Ej)
        (bytevector-uint-set! . g$12177$1M&0Ej)
        (bytevector-uint-ref . g$12176$1M&0Ej)
        (bytevector-u8-set! . g$12175$1M&0Ej)
        (bytevector-u8-ref . g$12174$1M&0Ej)
        (bytevector-u64-set! . g$6512$1M&0Ej)
        (bytevector-u64-ref . g$6508$1M&0Ej)
        (bytevector-u64-native-set! . g$6514$1M&0Ej)
        (bytevector-u64-native-ref . g$6510$1M&0Ej)
        (bytevector-u32-set! . g$6504$1M&0Ej)
        (bytevector-u32-ref . g$6500$1M&0Ej)
        (bytevector-u32-native-set! . g$6506$1M&0Ej)
        (bytevector-u32-native-ref . g$6502$1M&0Ej)
        (bytevector-u16-set! . g$6496$1M&0Ej)
        (bytevector-u16-ref . g$6492$1M&0Ej)
        (bytevector-u16-native-set! . g$6498$1M&0Ej)
        (bytevector-u16-native-ref . g$6494$1M&0Ej)
        (bytevector-sint-set! . g$12173$1M&0Ej)
        (bytevector-sint-ref . g$12172$1M&0Ej)
        (bytevector-s8-set! . g$12171$1M&0Ej)
        (bytevector-s8-ref . g$12170$1M&0Ej)
        (bytevector-s64-set! . g$6513$1M&0Ej)
        (bytevector-s64-ref . g$6509$1M&0Ej)
        (bytevector-s64-native-set! . g$6515$1M&0Ej)
        (bytevector-s64-native-ref . g$6511$1M&0Ej)
        (bytevector-s32-set! . g$6505$1M&0Ej)
        (bytevector-s32-ref . g$6501$1M&0Ej)
        (bytevector-s32-native-set! . g$6507$1M&0Ej)
        (bytevector-s32-native-ref . g$6503$1M&0Ej)
        (bytevector-s16-set! . g$6497$1M&0Ej)
        (bytevector-s16-ref . g$6493$1M&0Ej)
        (bytevector-s16-native-set! . g$6499$1M&0Ej)
        (bytevector-s16-native-ref . g$6495$1M&0Ej)
        (bytevector-length . g$12169$1M&0Ej)
        (bytevector-ieee-single-set! . g$12168$1M&0Ej)
        (bytevector-ieee-single-ref . g$12167$1M&0Ej)
        (bytevector-ieee-single-native-set! . g$6518$1M&0Ej)
        (bytevector-ieee-single-native-ref . g$6516$1M&0Ej)
        (bytevector-ieee-double-set! . g$12166$1M&0Ej)
        (bytevector-ieee-double-ref . g$12165$1M&0Ej)
        (bytevector-ieee-double-native-set! . g$6519$1M&0Ej)
        (bytevector-ieee-double-native-ref . g$6517$1M&0Ej)
        (bytevector-fill! . g$12164$1M&0Ej)
        (bytevector-copy! . g$12163$1M&0Ej)
        (bytevector-copy . g$12162$1M&0Ej)
        (bytevector->uint-list . g$12161$1M&0Ej)
        (bytevector->u8-list . g$12160$1M&0Ej)
        (bytevector->sint-list . g$12159$1M&0Ej)
        (no-nans-violation? . g$7128$1M&0Ej)
        (no-infinities-violation? . g$7114$1M&0Ej)
        (make-no-nans-violation . g$7127$1M&0Ej)
        (make-no-infinities-violation . g$7113$1M&0Ej)
        (real->flonum . g$12158$1M&0Ej)
        (flzero? . g$12157$1M&0Ej)
        (fltruncate . g$12156$1M&0Ej)
        (fltan . g$12155$1M&0Ej)
        (flsqrt . g$12154$1M&0Ej)
        (flsin . g$12153$1M&0Ej)
        (flround . g$12152$1M&0Ej)
        (flpositive? . g$12151$1M&0Ej)
        (flonum? . g$12150$1M&0Ej)
        (flodd? . g$12149$1M&0Ej)
        (flnumerator . g$12148$1M&0Ej)
        (flnegative? . g$12147$1M&0Ej)
        (flnan? . g$12146$1M&0Ej)
        (flmod0 . g$12145$1M&0Ej)
        (flmod . g$12144$1M&0Ej)
        (flmin . g$12143$1M&0Ej)
        (flmax . g$12142$1M&0Ej)
        (fllog . g$12141$1M&0Ej)
        (flinteger? . g$12140$1M&0Ej)
        (flinfinite? . g$12139$1M&0Ej)
        (flfloor . g$12138$1M&0Ej)
        (flfinite? . g$12137$1M&0Ej)
        (flexpt . g$12136$1M&0Ej)
        (flexp . g$12135$1M&0Ej)
        (fleven? . g$12134$1M&0Ej)
        (fldiv0-and-mod0 . g$12133$1M&0Ej)
        (fldiv0 . g$12132$1M&0Ej)
        (fldiv-and-mod . g$12131$1M&0Ej)
        (fldiv . g$12130$1M&0Ej)
        (fldenominator . g$12129$1M&0Ej)
        (flcos . g$12128$1M&0Ej)
        (flceiling . g$12127$1M&0Ej)
        (flatan . g$12126$1M&0Ej)
        (flasin . g$12125$1M&0Ej)
        (flacos . g$12124$1M&0Ej)
        (flabs . g$12123$1M&0Ej)
        (fl>? . g$12122$1M&0Ej)
        (fl>=? . g$12121$1M&0Ej)
        (fl=? . g$12120$1M&0Ej)
        (fl<? . g$12119$1M&0Ej)
        (fl<=? . g$12118$1M&0Ej)
        (fl/ . g$12117$1M&0Ej)
        (fl- . g$12116$1M&0Ej)
        (fl+ . g$12115$1M&0Ej)
        (fl* . g$12114$1M&0Ej)
        (fixnum->flonum . g$12113$1M&0Ej)
        (fxzero? . g$12112$1M&0Ej)
        (fxxor . g$12111$1M&0Ej)
        (fxrotate-bit-field . g$7059$1M&0Ej)
        (fxreverse-bit-field . g$12110$1M&0Ej)
        (fxpositive? . g$12109$1M&0Ej)
        (fxodd? . g$12108$1M&0Ej)
        (fxnot . g$12107$1M&0Ej)
        (fxnegative? . g$12106$1M&0Ej)
        (fxmod0 . g$12105$1M&0Ej)
        (fxmod . g$12104$1M&0Ej)
        (fxmin . g$12103$1M&0Ej)
        (fxmax . g$12102$1M&0Ej)
        (fxlength . g$12101$1M&0Ej)
        (fxior . g$12100$1M&0Ej)
        (fxif . g$7053$1M&0Ej)
        (fxfirst-bit-set . g$12099$1M&0Ej)
        (fxeven? . g$12098$1M&0Ej)
        (fxdiv0-and-mod0 . g$12097$1M&0Ej)
        (fxdiv0 . g$12096$1M&0Ej)
        (fxdiv-and-mod . g$12095$1M&0Ej)
        (fxdiv . g$12094$1M&0Ej)
        (fxcopy-bit-field . g$7056$1M&0Ej)
        (fxcopy-bit . g$7054$1M&0Ej)
        (fxbit-set? . g$12093$1M&0Ej)
        (fxbit-field . g$7055$1M&0Ej)
        (fxbit-count . g$12092$1M&0Ej)
        (fxarithmetic-shift-right . g$7058$1M&0Ej)
        (fxarithmetic-shift-left . g$7057$1M&0Ej)
        (fxarithmetic-shift . g$12091$1M&0Ej)
        (fxand . g$12090$1M&0Ej)
        (fx>? . g$12089$1M&0Ej)
        (fx>=? . g$12088$1M&0Ej)
        (fx=? . g$12087$1M&0Ej)
        (fx<? . g$12086$1M&0Ej)
        (fx<=? . g$12085$1M&0Ej)
        (fx-/carry . g$12084$1M&0Ej)
        (fx- . g$12083$1M&0Ej)
        (fx+/carry . g$12082$1M&0Ej)
        (fx+ . g$12081$1M&0Ej)
        (fx*/carry . g$12080$1M&0Ej)
        (fx* . g$12079$1M&0Ej)
        (greatest-fixnum . g$12078$1M&0Ej)
        (least-fixnum . g$12077$1M&0Ej)
        (fixnum-width . g$12076$1M&0Ej)
        (fixnum? . g$12075$1M&0Ej)
        (bitwise-rotate-bit-field . g$7011$1M&0Ej)
        (bitwise-reverse-bit-field . g$12074$1M&0Ej)
        (bitwise-length . g$12073$1M&0Ej)
        (bitwise-if . g$7005$1M&0Ej)
        (bitwise-first-bit-set . g$12072$1M&0Ej)
        (bitwise-copy-bit-field . g$7008$1M&0Ej)
        (bitwise-copy-bit . g$7006$1M&0Ej)
        (bitwise-bit-set? . g$12071$1M&0Ej)
        (bitwise-bit-field . g$12070$1M&0Ej)
        (bitwise-bit-count . g$12069$1M&0Ej)
        (bitwise-xor . g$12068$1M&0Ej)
        (bitwise-ior . g$12067$1M&0Ej)
        (bitwise-and . g$12066$1M&0Ej)
        (bitwise-not . g$12065$1M&0Ej)
        (bitwise-arithmetic-shift-right . g$7010$1M&0Ej)
        (bitwise-arithmetic-shift-left . g$7009$1M&0Ej)
        (bitwise-arithmetic-shift . g$12064$1M&0Ej)
        (zero? . g$12063$1M&0Ej)
        (vector? . g$12062$1M&0Ej)
        (vector-set! . g$12061$1M&0Ej)
        (vector-ref . g$12060$1M&0Ej)
        (vector-map . g$12059$1M&0Ej)
        (vector-length . g$12058$1M&0Ej)
        (vector-for-each . g$12057$1M&0Ej)
        (vector-fill! . g$12056$1M&0Ej)
        (vector->list . g$12055$1M&0Ej)
        (vector . g$12054$1M&0Ej)
        (values . g$12053$1M&0Ej)
        (truncate . g$12052$1M&0Ej)
        (tan . g$12051$1M&0Ej)
        (symbol? . g$12050$1M&0Ej)
        (symbol=? . g$6000$1M&0Ej)
        (symbol->string . g$12049$1M&0Ej)
        (substring . g$12048$1M&0Ej)
        (string? . g$12047$1M&0Ej)
        (string>? . g$5997$1M&0Ej)
        (string>=? . g$5999$1M&0Ej)
        (string=? . g$5995$1M&0Ej)
        (string<? . g$5996$1M&0Ej)
        (string<=? . g$5998$1M&0Ej)
        (string-ref . g$12046$1M&0Ej)
        (string-length . g$12045$1M&0Ej)
        (string-for-each . g$12044$1M&0Ej)
        (string-copy . g$12043$1M&0Ej)
        (string-append . g$12042$1M&0Ej)
        (string->symbol . g$12041$1M&0Ej)
        (string->number . g$12040$1M&0Ej)
        (string->list . g$12039$1M&0Ej)
        (string . g$12038$1M&0Ej)
        (sqrt . g$12037$1M&0Ej)
        (sin . g$12036$1M&0Ej)
        (round . g$12035$1M&0Ej)
        (reverse . g$12034$1M&0Ej)
        (real? . g$12033$1M&0Ej)
        (real-valued? . g$12032$1M&0Ej)
        (real-part . g$12031$1M&0Ej)
        (rationalize . g$6041$1M&0Ej)
        (rational? . g$12030$1M&0Ej)
        (rational-valued? . g$12029$1M&0Ej)
        (procedure? . g$12028$1M&0Ej)
        (positive? . g$12027$1M&0Ej)
        (pair? . g$12026$1M&0Ej)
        (odd? . g$12025$1M&0Ej)
        (numerator . g$12024$1M&0Ej)
        (number? . g$12023$1M&0Ej)
        (number->string . g$12022$1M&0Ej)
        (null? . g$12021$1M&0Ej)
        (not . g$12020$1M&0Ej)
        (negative? . g$12019$1M&0Ej)
        (nan? . g$12018$1M&0Ej)
        (min . g$12017$1M&0Ej)
        (max . g$12016$1M&0Ej)
        (map . g$12015$1M&0Ej)
        (make-vector . g$12014$1M&0Ej)
        (make-string . g$12013$1M&0Ej)
        (make-rectangular . g$12012$1M&0Ej)
        (make-polar . g$12011$1M&0Ej)
        (magnitude . g$12010$1M&0Ej)
        (log . g$12009$1M&0Ej)
        (list? . g$12008$1M&0Ej)
        (list-tail . g$12007$1M&0Ej)
        (list-ref . g$12006$1M&0Ej)
        (list->vector . g$12005$1M&0Ej)
        (list->string . g$12004$1M&0Ej)
        (list . g$12003$1M&0Ej)
        (length . g$12002$1M&0Ej)
        (lcm . g$12001$1M&0Ej)
        (integer? . g$12000$1M&0Ej)
        (integer-valued? . g$11999$1M&0Ej)
        (integer->char . g$11998$1M&0Ej)
        (infinite? . g$11997$1M&0Ej)
        (inexact? . g$11996$1M&0Ej)
        (inexact . g$11995$1M&0Ej)
        (imag-part . g$11994$1M&0Ej)
        (gcd . g$11993$1M&0Ej)
        (for-each . g$11992$1M&0Ej)
        (floor . g$11991$1M&0Ej)
        (finite? . g$11990$1M&0Ej)
        (expt . g$11989$1M&0Ej)
        (exp . g$11988$1M&0Ej)
        (exact? . g$11987$1M&0Ej)
        (exact-integer-sqrt . g$11986$1M&0Ej)
        (exact . g$11985$1M&0Ej)
        (even? . g$11984$1M&0Ej)
        (error . g$11983$1M&0Ej)
        (eqv? . g$11982$1M&0Ej)
        (equal? . g$11981$1M&0Ej)
        (eq? . g$11980$1M&0Ej)
        (dynamic-wind . g$11979$1M&0Ej)
        (div0-and-mod0 . g$11978$1M&0Ej)
        (mod0 . g$11977$1M&0Ej)
        (div0 . g$11976$1M&0Ej)
        (div-and-mod . g$11975$1M&0Ej)
        (mod . g$11974$1M&0Ej)
        (div . g$11973$1M&0Ej)
        (denominator . g$11972$1M&0Ej)
        (cos . g$11971$1M&0Ej)
        (cons . g$11970$1M&0Ej)
        (complex? . g$11969$1M&0Ej)
        (char? . g$11968$1M&0Ej)
        (char>? . g$6038$1M&0Ej)
        (char>=? . g$6040$1M&0Ej)
        (char=? . g$6036$1M&0Ej)
        (char<? . g$6037$1M&0Ej)
        (char<=? . g$6039$1M&0Ej)
        (char->integer . g$11967$1M&0Ej)
        (ceiling . g$11966$1M&0Ej)
        (call-with-values . g$11965$1M&0Ej)
        (call/cc . g$11964$1M&0Ej)
        (call-with-current-continuation . g$11963$1M&0Ej)
        (cddddr . g$5960$1M&0Ej)
        (cdddar . g$5959$1M&0Ej)
        (cddadr . g$5958$1M&0Ej)
        (cddaar . g$5957$1M&0Ej)
        (cdaddr . g$5956$1M&0Ej)
        (cdadar . g$5955$1M&0Ej)
        (cdaadr . g$5954$1M&0Ej)
        (cdaaar . g$5953$1M&0Ej)
        (cadddr . g$5952$1M&0Ej)
        (caddar . g$5951$1M&0Ej)
        (cadadr . g$5950$1M&0Ej)
        (cadaar . g$5949$1M&0Ej)
        (caaddr . g$5948$1M&0Ej)
        (caadar . g$5947$1M&0Ej)
        (caaadr . g$5946$1M&0Ej)
        (caaaar . g$5945$1M&0Ej)
        (cdddr . g$5944$1M&0Ej)
        (cddar . g$5943$1M&0Ej)
        (cdadr . g$5942$1M&0Ej)
        (cdaar . g$5941$1M&0Ej)
        (caddr . g$5940$1M&0Ej)
        (cadar . g$5939$1M&0Ej)
        (caadr . g$5938$1M&0Ej)
        (caaar . g$5937$1M&0Ej)
        (cddr . g$5936$1M&0Ej)
        (cdar . g$5935$1M&0Ej)
        (cadr . g$5934$1M&0Ej)
        (caar . g$5933$1M&0Ej)
        (cdr . g$11962$1M&0Ej)
        (car . g$11961$1M&0Ej)
        (boolean? . g$11960$1M&0Ej)
        (boolean=? . g$6001$1M&0Ej)
        (atan . g$11959$1M&0Ej)
        (assertion-violation . g$11958$1M&0Ej)
        (asin . g$11957$1M&0Ej)
        (apply . g$11956$1M&0Ej)
        (append . g$11955$1M&0Ej)
        (angle . g$11954$1M&0Ej)
        (acos . g$11953$1M&0Ej)
        (abs . g$11952$1M&0Ej)
        (/ . g$11951$1M&0Ej)
        (* . g$11950$1M&0Ej)
        (- . g$11949$1M&0Ej)
        (+ . g$11948$1M&0Ej)
        (>= . g$11947$1M&0Ej)
        (> . g$11946$1M&0Ej)
        (= . g$11945$1M&0Ej)
        (<= . g$11944$1M&0Ej)
        (< . g$11943$1M&0Ej)
        (deserialize-port . g$11939$1M&0Ej)
        (serialize-port . g$11938$1M&0Ej)
        (enum-set? . g$7371$1M&0Ej)
        (load/args . g$11774$1M&0Ej)
        (printf . g$7481$1M&0Ej)
        (fprintf . g$7482$1M&0Ej)
        (format . g$7483$1M&0Ej)
        (procedure-form . g$11937$1M&0Ej)
        (procedure-environment . g$11936$1M&0Ej)
        (procedure-name . g$11935$1M&0Ej)
        (procedure-arity . g$11934$1M&0Ej)
        (gc-collect . g$11933$1M&0Ej)
        (clr-type? . g$11932$1M&0Ej)
        (get-clr-type . g$11931$1M&0Ej)
        (vector-append . g$11929$1M&0Ej)
        (vector-filter . g$11928$1M&0Ej)
        (vector-reverse! . g$11927$1M&0Ej)
        (vector-contains? . g$11926$1M&0Ej)
        (vector-index-of . g$11925$1M&0Ej)
        (vector-copy . g$11924$1M&0Ej)
        (vector-binary-search . g$11923$1M&0Ej)
        (string-ci-compare . g$11922$1M&0Ej)
        (string-compare . g$11921$1M&0Ej)
        (string-format . g$11920$1M&0Ej)
        (trace-printer . g$11771$1M&0Ej)
        (pmap . g$11918$1M&0Ej)
        (time-it . g$11917$1M&0Ej)
        (make-parameter . g$7508$1M&0Ej)
        (environment-bindings . g$8775$1M&0Ej)
        (environment-symbols . g$8778$1M&0Ej)
        (interaction-environment-symbols . g$8774$1M&0Ej)
        (optimization-level . g$11914$1M&0Ej)
        (library-path . g$7938$1M&0Ej)
        (&no-nans . g$11913$1M&0Ej)
        (&no-infinities . g$11912$1M&0Ej)
        (&i/o-encoding . g$11911$1M&0Ej)
        (&i/o-decoding . g$11910$1M&0Ej)
        (&i/o-port . g$11909$1M&0Ej)
        (&i/o-file-does-not-exist . g$11908$1M&0Ej)
        (&i/o-file-already-exists . g$11907$1M&0Ej)
        (&i/o-file-is-read-only . g$11906$1M&0Ej)
        (&i/o-file-protection . g$11905$1M&0Ej)
        (&i/o-filename . g$11904$1M&0Ej)
        (&i/o-invalid-position . g$11903$1M&0Ej)
        (&i/o-write . g$11902$1M&0Ej)
        (&i/o-read . g$11901$1M&0Ej)
        (&i/o . g$11900$1M&0Ej)
        (&non-continuable . g$11899$1M&0Ej)
        (&undefined . g$11898$1M&0Ej)
        (&syntax . g$11897$1M&0Ej)
        (&lexical . g$11896$1M&0Ej)
        (&implementation-restriction . g$11895$1M&0Ej)
        (&who . g$11893$1M&0Ej)
        (&irritants . g$11892$1M&0Ej)
        (&assertion . g$11891$1M&0Ej)
        (&violation . g$11890$1M&0Ej)
        (&error . g$11889$1M&0Ej)
        (&serious . g$11888$1M&0Ej)
        (&warning . g$11887$1M&0Ej)
        (&message . g$11886$1M&0Ej)
        (&condition . g$11885$1M&0Ej)
        (define-condition-type . g$11884$1M&0Ej)
        (define-enumeration . g$11883$1M&0Ej)
        (define-record-type . g$11882$1M&0Ej)
        (parent-rtd . g$11881$1M&0Ej)
        (nongenerative . g$11880$1M&0Ej)
        (opaque . g$11879$1M&0Ej)
        (sealed . g$11878$1M&0Ej)
        (protocol . g$11877$1M&0Ej)
        (parent . g$11876$1M&0Ej)
        (immutable . g$11875$1M&0Ej)
        (mutable . g$11874$1M&0Ej)
        (fields . g$11873$1M&0Ej)
        (error-handling-mode . g$11872$1M&0Ej)
        (file-options . g$11871$1M&0Ej)
        (buffer-mode . g$11870$1M&0Ej)
        (eol-style . g$11869$1M&0Ej)
        (guard . g$11868$1M&0Ej)
        (trace-letrec-syntax . g$11867$1M&0Ej)
        (trace-let-syntax . g$11866$1M&0Ej)
        (trace-define-syntax . g$11865$1M&0Ej)
        (trace-define . g$11864$1M&0Ej)
        (trace-lambda . g$11863$1M&0Ej)
        (unsyntax-splicing . g$11862$1M&0Ej)
        (unsyntax . g$11861$1M&0Ej)
        (unquote-splicing . g$11860$1M&0Ej)
        (unquote . g$11859$1M&0Ej)
        (_ . g$11858$1M&0Ej)
        (else . g$11857$1M&0Ej)
        (=> . g$11856$1M&0Ej)
        (... . g$11855$1M&0Ej)
        (assert . g$11854$1M&0Ej)
        (endianness . g$11853$1M&0Ej)
        (delay . g$11852$1M&0Ej)
        (time . g$11851$1M&0Ej)
        (or . g$11850$1M&0Ej)
        (and . g$11849$1M&0Ej)
        (do . g$11848$1M&0Ej)
        (cond . g$11847$1M&0Ej)
        (let* . g$11846$1M&0Ej)
        (let . g$11845$1M&0Ej)
        (identifier-syntax . g$11844$1M&0Ej)
        (with-syntax . g$11843$1M&0Ej)
        (quasisyntax . g$11842$1M&0Ej)
        (quasiquote . g$11841$1M&0Ej)
        (syntax-rules . g$11840$1M&0Ej)
        (include-into . g$11839$1M&0Ej)
        (include . g$11838$1M&0Ej)
        (let-values . g$11836$1M&0Ej)
        (let*-values . g$11835$1M&0Ej)
        (record-constructor-descriptor . g$11834$1M&0Ej)
        (record-type-descriptor . g$11833$1M&0Ej)
        (fluid-let-syntax . g$11832$1M&0Ej)
        (case . g$11831$1M&0Ej)
        (parameterize . g$11830$1M&0Ej)
        (unless . g$11829$1M&0Ej)
        (when . g$11828$1M&0Ej)
        (if . g$11827$1M&0Ej)
        (letrec* . g$11826$1M&0Ej)
        (letrec . g$11825$1M&0Ej)
        (case-lambda . g$11823$1M&0Ej)
        (lambda . g$11822$1M&0Ej)
        (syntax . g$11821$1M&0Ej)
        (syntax-case . g$11820$1M&0Ej)
        (quote . g$11819$1M&0Ej)
        (letrec-syntax . g$11817$1M&0Ej)
        (let-syntax . g$11816$1M&0Ej)
        (set! . g$11815$1M&0Ej)
        (export . g$11814$1M&0Ej)
        (import . g$11813$1M&0Ej)
        (library . g$11812$1M&0Ej)
        (begin . g$11811$1M&0Ej)
        (module . g$11810$1M&0Ej)
        (define-syntax . g$11809$1M&0Ej)
        (define . g$11808$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12428$1M&0Ej
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11915$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12429$1M&0Ej
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12369$1M&0Ej)
        (annotation-source . g$12368$1M&0Ej)
        (annotation-expression . g$12367$1M&0Ej)
        (annotation? . g$12366$1M&0Ej)
        (read-annotated . g$12365$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12430$1M&0Ej
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12335$1M&0Ej)
        (serialize-library . g$12334$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12431$1M&0Ej
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8405$1M&0Ej)
        (variable-transformer? . g$8404$1M&0Ej)
        (eqv-hash . g$11941$1M&0Ej)
        (reverse! . g$11940$1M&0Ej)
        (make-promise . g$6831$1M&0Ej)
        (format . g$7483$1M&0Ej)
        (get-command-line . g$11930$1M&0Ej)
        (make-traced-procedure . g$11919$1M&0Ej)
        (make-traced-macro . g$7503$1M&0Ej)
        (assertion-error . g$8796$1M&0Ej)
        (library-locator . g$11916$1M&0Ej)
        (get-library-paths . g$11915$1M&0Ej)
        (library-path . g$7938$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12432$1M&0Ej
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11942$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12433$1M&0Ej
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12353$1M&0Ej)
        (clr-field-set!-internal . g$12352$1M&0Ej)
        (clr-field-get-internal . g$12351$1M&0Ej)
        (clr-cast-internal . g$12350$1M&0Ej)
        (clr-call-internal . g$12349$1M&0Ej)
        (clr-new-internal . g$12348$1M&0Ej)
        (clr-new-array-internal . g$12347$1M&0Ej)
        (clr-is-internal . g$12346$1M&0Ej)
        (clr-reference-internal . g$12345$1M&0Ej)
        (clr-using-internal . g$12344$1M&0Ej)
        (clr-clear-usings-internal . g$12343$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12434$1M&0Ej
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11860$1M&0Ej)
        (unquote . g$11859$1M&0Ej)
        (else . g$11857$1M&0Ej)
        (=> . g$11856$1M&0Ej)
        (delay . g$11852$1M&0Ej)
        (or . g$11850$1M&0Ej)
        (and . g$11849$1M&0Ej)
        (do . g$11848$1M&0Ej)
        (cond . g$11847$1M&0Ej)
        (let* . g$11846$1M&0Ej)
        (let . g$11845$1M&0Ej)
        (quasiquote . g$11841$1M&0Ej)
        (syntax-rules . g$11840$1M&0Ej)
        (case . g$11831$1M&0Ej)
        (if . g$11827$1M&0Ej)
        (letrec . g$11825$1M&0Ej)
        (lambda . g$11822$1M&0Ej)
        (quote . g$11819$1M&0Ej)
        (letrec-syntax . g$11817$1M&0Ej)
        (let-syntax . g$11816$1M&0Ej)
        (set! . g$11815$1M&0Ej)
        (begin . g$11811$1M&0Ej)
        (define-syntax . g$11809$1M&0Ej)
        (define . g$11808$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12435$1M&0Ej
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8806$1M&0Ej)
        (char-ready? . g$12333$1M&0Ej)
        (string-ci>? . g$6910$1M&0Ej)
        (string-ci>=? . g$6912$1M&0Ej)
        (string-ci=? . g$6908$1M&0Ej)
        (string-ci<? . g$6909$1M&0Ej)
        (string-ci<=? . g$6911$1M&0Ej)
        (char-whitespace? . g$12324$1M&0Ej)
        (char-upper-case? . g$12323$1M&0Ej)
        (char-numeric? . g$12321$1M&0Ej)
        (char-lower-case? . g$12320$1M&0Ej)
        (char-upcase . g$12318$1M&0Ej)
        (char-downcase . g$12315$1M&0Ej)
        (char-ci>? . g$6949$1M&0Ej)
        (char-ci>=? . g$6951$1M&0Ej)
        (char-ci=? . g$6947$1M&0Ej)
        (char-ci<? . g$6948$1M&0Ej)
        (char-ci<=? . g$6950$1M&0Ej)
        (char-alphabetic? . g$12314$1M&0Ej)
        (call-with-output-file . g$7338$1M&0Ej)
        (call-with-input-file . g$7337$1M&0Ej)
        (write-char . g$12282$1M&0Ej)
        (write . g$12281$1M&0Ej)
        (with-output-to-file . g$7336$1M&0Ej)
        (with-input-from-file . g$7335$1M&0Ej)
        (read-char . g$12280$1M&0Ej)
        (read . g$12279$1M&0Ej)
        (peek-char . g$12278$1M&0Ej)
        (open-output-file . g$12277$1M&0Ej)
        (open-input-file . g$12276$1M&0Ej)
        (newline . g$12275$1M&0Ej)
        (display . g$12274$1M&0Ej)
        (close-output-port . g$12273$1M&0Ej)
        (close-input-port . g$12272$1M&0Ej)
        (eof-object? . g$12271$1M&0Ej)
        (eof-object . g$12270$1M&0Ej)
        (current-error-port . g$12269$1M&0Ej)
        (current-output-port . g$12268$1M&0Ej)
        (current-input-port . g$12267$1M&0Ej)
        (output-port? . g$12266$1M&0Ej)
        (input-port? . g$12265$1M&0Ej)
        (scheme-report-environment . g$8781$1M&0Ej)
        (quotient . g$6828$1M&0Ej)
        (null-environment . g$8780$1M&0Ej)
        (remainder . g$6829$1M&0Ej)
        (modulo . g$6830$1M&0Ej)
        (inexact->exact . g$12203$1M&0Ej)
        (force . g$6832$1M&0Ej)
        (exact->inexact . g$12202$1M&0Ej)
        (string-fill! . g$12200$1M&0Ej)
        (string-set! . g$12199$1M&0Ej)
        (set-cdr! . g$12198$1M&0Ej)
        (set-car! . g$12197$1M&0Ej)
        (memv . g$5836$1M&0Ej)
        (memq . g$5835$1M&0Ej)
        (member . g$5837$1M&0Ej)
        (assv . g$5832$1M&0Ej)
        (assq . g$5831$1M&0Ej)
        (assoc . g$5833$1M&0Ej)
        (eval . g$8783$1M&0Ej)
        (zero? . g$12063$1M&0Ej)
        (vector? . g$12062$1M&0Ej)
        (vector-set! . g$12061$1M&0Ej)
        (vector-ref . g$12060$1M&0Ej)
        (vector-length . g$12058$1M&0Ej)
        (vector-fill! . g$12056$1M&0Ej)
        (vector->list . g$12055$1M&0Ej)
        (vector . g$12054$1M&0Ej)
        (values . g$12053$1M&0Ej)
        (truncate . g$12052$1M&0Ej)
        (tan . g$12051$1M&0Ej)
        (symbol? . g$12050$1M&0Ej)
        (symbol->string . g$12049$1M&0Ej)
        (substring . g$12048$1M&0Ej)
        (string? . g$12047$1M&0Ej)
        (string>? . g$5997$1M&0Ej)
        (string>=? . g$5999$1M&0Ej)
        (string=? . g$5995$1M&0Ej)
        (string<? . g$5996$1M&0Ej)
        (string<=? . g$5998$1M&0Ej)
        (string-ref . g$12046$1M&0Ej)
        (string-length . g$12045$1M&0Ej)
        (string-copy . g$12043$1M&0Ej)
        (string-append . g$12042$1M&0Ej)
        (string->symbol . g$12041$1M&0Ej)
        (string->number . g$12040$1M&0Ej)
        (string->list . g$12039$1M&0Ej)
        (string . g$12038$1M&0Ej)
        (sqrt . g$12037$1M&0Ej)
        (sin . g$12036$1M&0Ej)
        (round . g$12035$1M&0Ej)
        (reverse . g$12034$1M&0Ej)
        (real? . g$12033$1M&0Ej)
        (real-part . g$12031$1M&0Ej)
        (rationalize . g$6041$1M&0Ej)
        (rational? . g$12030$1M&0Ej)
        (procedure? . g$12028$1M&0Ej)
        (positive? . g$12027$1M&0Ej)
        (pair? . g$12026$1M&0Ej)
        (odd? . g$12025$1M&0Ej)
        (numerator . g$12024$1M&0Ej)
        (number? . g$12023$1M&0Ej)
        (number->string . g$12022$1M&0Ej)
        (null? . g$12021$1M&0Ej)
        (not . g$12020$1M&0Ej)
        (negative? . g$12019$1M&0Ej)
        (min . g$12017$1M&0Ej)
        (max . g$12016$1M&0Ej)
        (map . g$12015$1M&0Ej)
        (make-vector . g$12014$1M&0Ej)
        (make-string . g$12013$1M&0Ej)
        (make-rectangular . g$12012$1M&0Ej)
        (make-polar . g$12011$1M&0Ej)
        (magnitude . g$12010$1M&0Ej)
        (log . g$12009$1M&0Ej)
        (list? . g$12008$1M&0Ej)
        (list-tail . g$12007$1M&0Ej)
        (list-ref . g$12006$1M&0Ej)
        (list->vector . g$12005$1M&0Ej)
        (list->string . g$12004$1M&0Ej)
        (list . g$12003$1M&0Ej)
        (length . g$12002$1M&0Ej)
        (lcm . g$12001$1M&0Ej)
        (integer? . g$12000$1M&0Ej)
        (integer->char . g$11998$1M&0Ej)
        (inexact? . g$11996$1M&0Ej)
        (imag-part . g$11994$1M&0Ej)
        (gcd . g$11993$1M&0Ej)
        (for-each . g$11992$1M&0Ej)
        (floor . g$11991$1M&0Ej)
        (expt . g$11989$1M&0Ej)
        (exp . g$11988$1M&0Ej)
        (exact? . g$11987$1M&0Ej)
        (even? . g$11984$1M&0Ej)
        (eqv? . g$11982$1M&0Ej)
        (equal? . g$11981$1M&0Ej)
        (eq? . g$11980$1M&0Ej)
        (dynamic-wind . g$11979$1M&0Ej)
        (denominator . g$11972$1M&0Ej)
        (cos . g$11971$1M&0Ej)
        (cons . g$11970$1M&0Ej)
        (complex? . g$11969$1M&0Ej)
        (char? . g$11968$1M&0Ej)
        (char>? . g$6038$1M&0Ej)
        (char>=? . g$6040$1M&0Ej)
        (char=? . g$6036$1M&0Ej)
        (char<? . g$6037$1M&0Ej)
        (char<=? . g$6039$1M&0Ej)
        (char->integer . g$11967$1M&0Ej)
        (ceiling . g$11966$1M&0Ej)
        (call-with-values . g$11965$1M&0Ej)
        (call-with-current-continuation . g$11963$1M&0Ej)
        (cddddr . g$5960$1M&0Ej)
        (cdddar . g$5959$1M&0Ej)
        (cddadr . g$5958$1M&0Ej)
        (cddaar . g$5957$1M&0Ej)
        (cdaddr . g$5956$1M&0Ej)
        (cdadar . g$5955$1M&0Ej)
        (cdaadr . g$5954$1M&0Ej)
        (cdaaar . g$5953$1M&0Ej)
        (cadddr . g$5952$1M&0Ej)
        (caddar . g$5951$1M&0Ej)
        (cadadr . g$5950$1M&0Ej)
        (cadaar . g$5949$1M&0Ej)
        (caaddr . g$5948$1M&0Ej)
        (caadar . g$5947$1M&0Ej)
        (caaadr . g$5946$1M&0Ej)
        (caaaar . g$5945$1M&0Ej)
        (cdddr . g$5944$1M&0Ej)
        (cddar . g$5943$1M&0Ej)
        (cdadr . g$5942$1M&0Ej)
        (cdaar . g$5941$1M&0Ej)
        (caddr . g$5940$1M&0Ej)
        (cadar . g$5939$1M&0Ej)
        (caadr . g$5938$1M&0Ej)
        (caaar . g$5937$1M&0Ej)
        (cddr . g$5936$1M&0Ej)
        (cdar . g$5935$1M&0Ej)
        (cadr . g$5934$1M&0Ej)
        (caar . g$5933$1M&0Ej)
        (cdr . g$11962$1M&0Ej)
        (car . g$11961$1M&0Ej)
        (boolean? . g$11960$1M&0Ej)
        (atan . g$11959$1M&0Ej)
        (asin . g$11957$1M&0Ej)
        (apply . g$11956$1M&0Ej)
        (append . g$11955$1M&0Ej)
        (angle . g$11954$1M&0Ej)
        (acos . g$11953$1M&0Ej)
        (abs . g$11952$1M&0Ej)
        (/ . g$11951$1M&0Ej)
        (* . g$11950$1M&0Ej)
        (- . g$11949$1M&0Ej)
        (+ . g$11948$1M&0Ej)
        (>= . g$11947$1M&0Ej)
        (> . g$11946$1M&0Ej)
        (= . g$11945$1M&0Ej)
        (<= . g$11944$1M&0Ej)
        (< . g$11943$1M&0Ej)
        (unquote-splicing . g$11860$1M&0Ej)
        (unquote . g$11859$1M&0Ej)
        (else . g$11857$1M&0Ej)
        (=> . g$11856$1M&0Ej)
        (... . g$11855$1M&0Ej)
        (delay . g$11852$1M&0Ej)
        (or . g$11850$1M&0Ej)
        (and . g$11849$1M&0Ej)
        (do . g$11848$1M&0Ej)
        (cond . g$11847$1M&0Ej)
        (let* . g$11846$1M&0Ej)
        (let . g$11845$1M&0Ej)
        (quasiquote . g$11841$1M&0Ej)
        (syntax-rules . g$11840$1M&0Ej)
        (case . g$11831$1M&0Ej)
        (if . g$11827$1M&0Ej)
        (letrec . g$11825$1M&0Ej)
        (lambda . g$11822$1M&0Ej)
        (quote . g$11819$1M&0Ej)
        (letrec-syntax . g$11817$1M&0Ej)
        (let-syntax . g$11816$1M&0Ej)
        (set! . g$11815$1M&0Ej)
        (begin . g$11811$1M&0Ej)
        (define-syntax . g$11809$1M&0Ej)
        (define . g$11808$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12436$1M&0Ej
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12332$1M&0Ej)
        (string-titlecase . g$12331$1M&0Ej)
        (string-normalize-nfkd . g$12330$1M&0Ej)
        (string-normalize-nfkc . g$12329$1M&0Ej)
        (string-normalize-nfd . g$12328$1M&0Ej)
        (string-normalize-nfc . g$12327$1M&0Ej)
        (string-foldcase . g$12326$1M&0Ej)
        (string-downcase . g$12325$1M&0Ej)
        (string-ci>? . g$6910$1M&0Ej)
        (string-ci>=? . g$6912$1M&0Ej)
        (string-ci=? . g$6908$1M&0Ej)
        (string-ci<? . g$6909$1M&0Ej)
        (string-ci<=? . g$6911$1M&0Ej)
        (char-whitespace? . g$12324$1M&0Ej)
        (char-upper-case? . g$12323$1M&0Ej)
        (char-title-case? . g$12322$1M&0Ej)
        (char-numeric? . g$12321$1M&0Ej)
        (char-lower-case? . g$12320$1M&0Ej)
        (char-general-category . g$12319$1M&0Ej)
        (char-upcase . g$12318$1M&0Ej)
        (char-titlecase . g$12317$1M&0Ej)
        (char-foldcase . g$12316$1M&0Ej)
        (char-downcase . g$12315$1M&0Ej)
        (char-ci>? . g$6949$1M&0Ej)
        (char-ci>=? . g$6951$1M&0Ej)
        (char-ci=? . g$6947$1M&0Ej)
        (char-ci<? . g$6948$1M&0Ej)
        (char-ci<=? . g$6950$1M&0Ej)
        (char-alphabetic? . g$12314$1M&0Ej)
        (make-variable-transformer . g$8403$1M&0Ej)
        (identifier? . g$8801$1M&0Ej)
        (generate-temporaries . g$8790$1M&0Ej)
        (free-identifier=? . g$8791$1M&0Ej)
        (syntax->datum . g$8803$1M&0Ej)
        (datum->syntax . g$8802$1M&0Ej)
        (bound-identifier=? . g$8792$1M&0Ej)
        (record-type-descriptor? . g$12313$1M&0Ej)
        (record-predicate . g$12312$1M&0Ej)
        (record-mutator . g$12311$1M&0Ej)
        (record-constructor . g$12310$1M&0Ej)
        (record-accessor . g$12309$1M&0Ej)
        (make-record-type-descriptor . g$12308$1M&0Ej)
        (make-record-constructor-descriptor . g$12307$1M&0Ej)
        (record? . g$12306$1M&0Ej)
        (record-type-uid . g$12305$1M&0Ej)
        (record-type-sealed? . g$12304$1M&0Ej)
        (record-type-parent . g$12303$1M&0Ej)
        (record-type-opaque? . g$12302$1M&0Ej)
        (record-type-name . g$12301$1M&0Ej)
        (record-type-generative? . g$12300$1M&0Ej)
        (record-type-field-names . g$12299$1M&0Ej)
        (record-rtd . g$12298$1M&0Ej)
        (record-field-mutable? . g$12297$1M&0Ej)
        (delete-file . g$6485$1M&0Ej)
        (file-exists? . g$6484$1M&0Ej)
        (vector-sort! . g$12296$1M&0Ej)
        (vector-sort . g$12295$1M&0Ej)
        (list-sort . g$6848$1M&0Ej)
        (symbol-hash . g$12294$1M&0Ej)
        (string-ci-hash . g$12293$1M&0Ej)
        (string-hash . g$12292$1M&0Ej)
        (equal-hash . g$12291$1M&0Ej)
        (hashtable-equivalence-function . g$12290$1M&0Ej)
        (make-hashtable . g$12289$1M&0Ej)
        (hashtable-hash-function . g$12288$1M&0Ej)
        (make-eqv-hashtable . g$6452$1M&0Ej)
        (make-eq-hashtable . g$6451$1M&0Ej)
        (hashtable? . g$12287$1M&0Ej)
        (hashtable-update! . g$6458$1M&0Ej)
        (hashtable-size . g$6453$1M&0Ej)
        (hashtable-set! . g$6455$1M&0Ej)
        (hashtable-ref . g$6454$1M&0Ej)
        (hashtable-mutable? . g$12286$1M&0Ej)
        (hashtable-keys . g$12285$1M&0Ej)
        (hashtable-entries . g$12284$1M&0Ej)
        (hashtable-delete! . g$6456$1M&0Ej)
        (hashtable-copy . g$12283$1M&0Ej)
        (hashtable-contains? . g$6457$1M&0Ej)
        (hashtable-clear! . g$6459$1M&0Ej)
        (call-with-output-file . g$7338$1M&0Ej)
        (call-with-input-file . g$7337$1M&0Ej)
        (write-char . g$12282$1M&0Ej)
        (write . g$12281$1M&0Ej)
        (with-output-to-file . g$7336$1M&0Ej)
        (with-input-from-file . g$7335$1M&0Ej)
        (read-char . g$12280$1M&0Ej)
        (read . g$12279$1M&0Ej)
        (peek-char . g$12278$1M&0Ej)
        (open-output-file . g$12277$1M&0Ej)
        (open-input-file . g$12276$1M&0Ej)
        (newline . g$12275$1M&0Ej)
        (display . g$12274$1M&0Ej)
        (close-output-port . g$12273$1M&0Ej)
        (close-input-port . g$12272$1M&0Ej)
        (eof-object? . g$12271$1M&0Ej)
        (eof-object . g$12270$1M&0Ej)
        (current-error-port . g$12269$1M&0Ej)
        (current-output-port . g$12268$1M&0Ej)
        (current-input-port . g$12267$1M&0Ej)
        (output-port? . g$12266$1M&0Ej)
        (input-port? . g$12265$1M&0Ej)
        (utf-8-codec . g$12264$1M&0Ej)
        (utf-16-codec . g$12263$1M&0Ej)
        (transcoder-error-handling-mode . g$12262$1M&0Ej)
        (transcoder-eol-style . g$12261$1M&0Ej)
        (transcoder-codec . g$12260$1M&0Ej)
        (transcoded-port . g$12259$1M&0Ej)
        (textual-port? . g$12258$1M&0Ej)
        (string->bytevector . g$12257$1M&0Ej)
        (standard-output-port . g$12256$1M&0Ej)
        (standard-input-port . g$12255$1M&0Ej)
        (standard-error-port . g$12254$1M&0Ej)
        (set-port-position! . g$12253$1M&0Ej)
        (put-u8 . g$12252$1M&0Ej)
        (put-string . g$12251$1M&0Ej)
        (put-datum . g$12250$1M&0Ej)
        (put-char . g$12249$1M&0Ej)
        (put-bytevector . g$12248$1M&0Ej)
        (port? . g$7314$1M&0Ej)
        (port-transcoder . g$12247$1M&0Ej)
        (port-position . g$12246$1M&0Ej)
        (port-has-set-port-position!? . g$12245$1M&0Ej)
        (port-has-port-position? . g$12244$1M&0Ej)
        (port-eof? . g$12243$1M&0Ej)
        (output-port-buffer-mode . g$12242$1M&0Ej)
        (open-string-output-port . g$7313$1M&0Ej)
        (open-string-input-port . g$12241$1M&0Ej)
        (open-file-output-port . g$12240$1M&0Ej)
        (open-file-input/output-port . g$12239$1M&0Ej)
        (open-file-input-port . g$12238$1M&0Ej)
        (open-bytevector-output-port . g$12237$1M&0Ej)
        (open-bytevector-input-port . g$12236$1M&0Ej)
        (native-transcoder . g$12235$1M&0Ej)
        (native-eol-style . g$12234$1M&0Ej)
        (make-transcoder . g$12233$1M&0Ej)
        (latin-1-codec . g$12232$1M&0Ej)
        (make-i/o-write-error . g$7170$1M&0Ej)
        (make-i/o-read-error . g$7156$1M&0Ej)
        (make-i/o-port-error . g$7275$1M&0Ej)
        (make-i/o-invalid-position-error . g$7185$1M&0Ej)
        (make-i/o-filename-error . g$7202$1M&0Ej)
        (make-i/o-file-protection-error . g$7218$1M&0Ej)
        (make-i/o-file-is-read-only-error . g$7232$1M&0Ej)
        (make-i/o-file-does-not-exist-error . g$7260$1M&0Ej)
        (make-i/o-file-already-exists-error . g$7246$1M&0Ej)
        (make-i/o-error . g$7142$1M&0Ej)
        (make-i/o-encoding-error . g$7306$1M&0Ej)
        (make-i/o-decoding-error . g$7291$1M&0Ej)
        (make-custom-textual-output-port . g$12231$1M&0Ej)
        (make-custom-textual-input/output-port . g$12230$1M&0Ej)
        (make-custom-textual-input-port . g$12229$1M&0Ej)
        (make-custom-binary-output-port . g$12228$1M&0Ej)
        (make-custom-binary-input/output-port . g$12227$1M&0Ej)
        (make-custom-binary-input-port . g$12226$1M&0Ej)
        (make-bytevector . g$12225$1M&0Ej)
        (lookahead-u8 . g$12224$1M&0Ej)
        (lookahead-char . g$12223$1M&0Ej)
        (i/o-write-error? . g$7171$1M&0Ej)
        (i/o-read-error? . g$7157$1M&0Ej)
        (i/o-port-error? . g$7277$1M&0Ej)
        (i/o-invalid-position-error? . g$7187$1M&0Ej)
        (i/o-error-position . g$7188$1M&0Ej)
        (i/o-filename-error? . g$7204$1M&0Ej)
        (i/o-file-protection-error? . g$7219$1M&0Ej)
        (i/o-file-is-read-only-error? . g$7233$1M&0Ej)
        (i/o-file-does-not-exist-error? . g$7261$1M&0Ej)
        (i/o-file-already-exists-error? . g$7247$1M&0Ej)
        (i/o-error? . g$7143$1M&0Ej)
        (i/o-error-port . g$7278$1M&0Ej)
        (i/o-error-filename . g$7205$1M&0Ej)
        (i/o-encoding-error? . g$7308$1M&0Ej)
        (i/o-encoding-error-char . g$7309$1M&0Ej)
        (i/o-decoding-error? . g$7292$1M&0Ej)
        (get-u8 . g$12222$1M&0Ej)
        (get-string-n! . g$12221$1M&0Ej)
        (get-string-n . g$12220$1M&0Ej)
        (get-string-all . g$12219$1M&0Ej)
        (get-line . g$12218$1M&0Ej)
        (get-datum . g$12217$1M&0Ej)
        (get-char . g$12216$1M&0Ej)
        (get-bytevector-some . g$12215$1M&0Ej)
        (get-bytevector-n! . g$12214$1M&0Ej)
        (get-bytevector-n . g$12213$1M&0Ej)
        (get-bytevector-all . g$12212$1M&0Ej)
        (flush-output-port . g$12211$1M&0Ej)
        (close-port . g$12210$1M&0Ej)
        (call-with-string-output-port . g$12209$1M&0Ej)
        (call-with-port . g$12208$1M&0Ej)
        (call-with-bytevector-output-port . g$12207$1M&0Ej)
        (bytevector->string . g$12206$1M&0Ej)
        (buffer-mode? . g$12205$1M&0Ej)
        (binary-port? . g$12204$1M&0Ej)
        (exit . g$12201$1M&0Ej)
        (command-line . g$11772$1M&0Ej)
        (remove . g$5846$1M&0Ej)
        (remv . g$5847$1M&0Ej)
        (remp . g$5829$1M&0Ej)
        (remq . g$5848$1M&0Ej)
        (partition . g$5828$1M&0Ej)
        (memv . g$5836$1M&0Ej)
        (memq . g$5835$1M&0Ej)
        (memp . g$5838$1M&0Ej)
        (member . g$5837$1M&0Ej)
        (exists . g$5842$1M&0Ej)
        (for-all . g$5841$1M&0Ej)
        (fold-right . g$5845$1M&0Ej)
        (fold-left . g$5844$1M&0Ej)
        (find . g$5827$1M&0Ej)
        (filter . g$5830$1M&0Ej)
        (cons* . g$5843$1M&0Ej)
        (assv . g$5832$1M&0Ej)
        (assq . g$5831$1M&0Ej)
        (assp . g$5834$1M&0Ej)
        (assoc . g$5833$1M&0Ej)
        (with-exception-handler . g$12196$1M&0Ej)
        (raise-continuable . g$12195$1M&0Ej)
        (raise . g$12194$1M&0Ej)
        (make-enumeration . g$7396$1M&0Ej)
        (enum-set=? . g$7403$1M&0Ej)
        (enum-set-universe . g$7397$1M&0Ej)
        (enum-set-union . g$7404$1M&0Ej)
        (enum-set-subset? . g$7402$1M&0Ej)
        (enum-set-projection . g$7408$1M&0Ej)
        (enum-set-member? . g$7401$1M&0Ej)
        (enum-set-intersection . g$7405$1M&0Ej)
        (enum-set-indexer . g$7398$1M&0Ej)
        (enum-set-difference . g$7406$1M&0Ej)
        (enum-set-constructor . g$7399$1M&0Ej)
        (enum-set-complement . g$7407$1M&0Ej)
        (enum-set->list . g$7400$1M&0Ej)
        (who-condition? . g$6739$1M&0Ej)
        (warning? . g$6650$1M&0Ej)
        (violation? . g$6692$1M&0Ej)
        (undefined-violation? . g$6816$1M&0Ej)
        (syntax-violation? . g$6800$1M&0Ej)
        (syntax-violation-subform . g$6802$1M&0Ej)
        (syntax-violation-form . g$6801$1M&0Ej)
        (syntax-violation . g$8800$1M&0Ej)
        (simple-conditions . g$12193$1M&0Ej)
        (serious-condition? . g$6664$1M&0Ej)
        (non-continuable-violation? . g$6754$1M&0Ej)
        (message-condition? . g$6635$1M&0Ej)
        (make-who-condition . g$6737$1M&0Ej)
        (make-warning . g$6649$1M&0Ej)
        (make-violation . g$6691$1M&0Ej)
        (make-undefined-violation . g$6815$1M&0Ej)
        (make-syntax-violation . g$6797$1M&0Ej)
        (make-serious-condition . g$6663$1M&0Ej)
        (make-non-continuable-violation . g$6753$1M&0Ej)
        (make-message-condition . g$6633$1M&0Ej)
        (make-lexical-violation . g$6781$1M&0Ej)
        (make-irritants-condition . g$6720$1M&0Ej)
        (make-implementation-restriction-violation . g$6767$1M&0Ej)
        (make-error . g$6677$1M&0Ej)
        (make-assertion-violation . g$6705$1M&0Ej)
        (lexical-violation? . g$6782$1M&0Ej)
        (irritants-condition? . g$6722$1M&0Ej)
        (implementation-restriction-violation? . g$6768$1M&0Ej)
        (error? . g$6678$1M&0Ej)
        (condition-who . g$6740$1M&0Ej)
        (condition-predicate . g$12192$1M&0Ej)
        (condition-message . g$6636$1M&0Ej)
        (condition-irritants . g$6723$1M&0Ej)
        (condition-accessor . g$12191$1M&0Ej)
        (condition . g$12190$1M&0Ej)
        (assertion-violation? . g$6706$1M&0Ej)
        (condition? . g$12189$1M&0Ej)
        (utf32->string . g$12188$1M&0Ej)
        (utf16->string . g$12187$1M&0Ej)
        (utf8->string . g$12186$1M&0Ej)
        (uint-list->bytevector . g$12185$1M&0Ej)
        (u8-list->bytevector . g$12184$1M&0Ej)
        (string->utf8 . g$12183$1M&0Ej)
        (string->utf32 . g$12182$1M&0Ej)
        (string->utf16 . g$12181$1M&0Ej)
        (sint-list->bytevector . g$12180$1M&0Ej)
        (native-endianness . g$6491$1M&0Ej)
        (bytevector? . g$12179$1M&0Ej)
        (bytevector=? . g$12178$1M&0Ej)
        (bytevector-uint-set! . g$12177$1M&0Ej)
        (bytevector-uint-ref . g$12176$1M&0Ej)
        (bytevector-u8-set! . g$12175$1M&0Ej)
        (bytevector-u8-ref . g$12174$1M&0Ej)
        (bytevector-u64-set! . g$6512$1M&0Ej)
        (bytevector-u64-ref . g$6508$1M&0Ej)
        (bytevector-u64-native-set! . g$6514$1M&0Ej)
        (bytevector-u64-native-ref . g$6510$1M&0Ej)
        (bytevector-u32-set! . g$6504$1M&0Ej)
        (bytevector-u32-ref . g$6500$1M&0Ej)
        (bytevector-u32-native-set! . g$6506$1M&0Ej)
        (bytevector-u32-native-ref . g$6502$1M&0Ej)
        (bytevector-u16-set! . g$6496$1M&0Ej)
        (bytevector-u16-ref . g$6492$1M&0Ej)
        (bytevector-u16-native-set! . g$6498$1M&0Ej)
        (bytevector-u16-native-ref . g$6494$1M&0Ej)
        (bytevector-sint-set! . g$12173$1M&0Ej)
        (bytevector-sint-ref . g$12172$1M&0Ej)
        (bytevector-s8-set! . g$12171$1M&0Ej)
        (bytevector-s8-ref . g$12170$1M&0Ej)
        (bytevector-s64-set! . g$6513$1M&0Ej)
        (bytevector-s64-ref . g$6509$1M&0Ej)
        (bytevector-s64-native-set! . g$6515$1M&0Ej)
        (bytevector-s64-native-ref . g$6511$1M&0Ej)
        (bytevector-s32-set! . g$6505$1M&0Ej)
        (bytevector-s32-ref . g$6501$1M&0Ej)
        (bytevector-s32-native-set! . g$6507$1M&0Ej)
        (bytevector-s32-native-ref . g$6503$1M&0Ej)
        (bytevector-s16-set! . g$6497$1M&0Ej)
        (bytevector-s16-ref . g$6493$1M&0Ej)
        (bytevector-s16-native-set! . g$6499$1M&0Ej)
        (bytevector-s16-native-ref . g$6495$1M&0Ej)
        (bytevector-length . g$12169$1M&0Ej)
        (bytevector-ieee-single-set! . g$12168$1M&0Ej)
        (bytevector-ieee-single-ref . g$12167$1M&0Ej)
        (bytevector-ieee-single-native-set! . g$6518$1M&0Ej)
        (bytevector-ieee-single-native-ref . g$6516$1M&0Ej)
        (bytevector-ieee-double-set! . g$12166$1M&0Ej)
        (bytevector-ieee-double-ref . g$12165$1M&0Ej)
        (bytevector-ieee-double-native-set! . g$6519$1M&0Ej)
        (bytevector-ieee-double-native-ref . g$6517$1M&0Ej)
        (bytevector-fill! . g$12164$1M&0Ej)
        (bytevector-copy! . g$12163$1M&0Ej)
        (bytevector-copy . g$12162$1M&0Ej)
        (bytevector->uint-list . g$12161$1M&0Ej)
        (bytevector->u8-list . g$12160$1M&0Ej)
        (bytevector->sint-list . g$12159$1M&0Ej)
        (no-nans-violation? . g$7128$1M&0Ej)
        (no-infinities-violation? . g$7114$1M&0Ej)
        (make-no-nans-violation . g$7127$1M&0Ej)
        (make-no-infinities-violation . g$7113$1M&0Ej)
        (real->flonum . g$12158$1M&0Ej)
        (flzero? . g$12157$1M&0Ej)
        (fltruncate . g$12156$1M&0Ej)
        (fltan . g$12155$1M&0Ej)
        (flsqrt . g$12154$1M&0Ej)
        (flsin . g$12153$1M&0Ej)
        (flround . g$12152$1M&0Ej)
        (flpositive? . g$12151$1M&0Ej)
        (flonum? . g$12150$1M&0Ej)
        (flodd? . g$12149$1M&0Ej)
        (flnumerator . g$12148$1M&0Ej)
        (flnegative? . g$12147$1M&0Ej)
        (flnan? . g$12146$1M&0Ej)
        (flmod0 . g$12145$1M&0Ej)
        (flmod . g$12144$1M&0Ej)
        (flmin . g$12143$1M&0Ej)
        (flmax . g$12142$1M&0Ej)
        (fllog . g$12141$1M&0Ej)
        (flinteger? . g$12140$1M&0Ej)
        (flinfinite? . g$12139$1M&0Ej)
        (flfloor . g$12138$1M&0Ej)
        (flfinite? . g$12137$1M&0Ej)
        (flexpt . g$12136$1M&0Ej)
        (flexp . g$12135$1M&0Ej)
        (fleven? . g$12134$1M&0Ej)
        (fldiv0-and-mod0 . g$12133$1M&0Ej)
        (fldiv0 . g$12132$1M&0Ej)
        (fldiv-and-mod . g$12131$1M&0Ej)
        (fldiv . g$12130$1M&0Ej)
        (fldenominator . g$12129$1M&0Ej)
        (flcos . g$12128$1M&0Ej)
        (flceiling . g$12127$1M&0Ej)
        (flatan . g$12126$1M&0Ej)
        (flasin . g$12125$1M&0Ej)
        (flacos . g$12124$1M&0Ej)
        (flabs . g$12123$1M&0Ej)
        (fl>? . g$12122$1M&0Ej)
        (fl>=? . g$12121$1M&0Ej)
        (fl=? . g$12120$1M&0Ej)
        (fl<? . g$12119$1M&0Ej)
        (fl<=? . g$12118$1M&0Ej)
        (fl/ . g$12117$1M&0Ej)
        (fl- . g$12116$1M&0Ej)
        (fl+ . g$12115$1M&0Ej)
        (fl* . g$12114$1M&0Ej)
        (fixnum->flonum . g$12113$1M&0Ej)
        (fxzero? . g$12112$1M&0Ej)
        (fxxor . g$12111$1M&0Ej)
        (fxrotate-bit-field . g$7059$1M&0Ej)
        (fxreverse-bit-field . g$12110$1M&0Ej)
        (fxpositive? . g$12109$1M&0Ej)
        (fxodd? . g$12108$1M&0Ej)
        (fxnot . g$12107$1M&0Ej)
        (fxnegative? . g$12106$1M&0Ej)
        (fxmod0 . g$12105$1M&0Ej)
        (fxmod . g$12104$1M&0Ej)
        (fxmin . g$12103$1M&0Ej)
        (fxmax . g$12102$1M&0Ej)
        (fxlength . g$12101$1M&0Ej)
        (fxior . g$12100$1M&0Ej)
        (fxif . g$7053$1M&0Ej)
        (fxfirst-bit-set . g$12099$1M&0Ej)
        (fxeven? . g$12098$1M&0Ej)
        (fxdiv0-and-mod0 . g$12097$1M&0Ej)
        (fxdiv0 . g$12096$1M&0Ej)
        (fxdiv-and-mod . g$12095$1M&0Ej)
        (fxdiv . g$12094$1M&0Ej)
        (fxcopy-bit-field . g$7056$1M&0Ej)
        (fxcopy-bit . g$7054$1M&0Ej)
        (fxbit-set? . g$12093$1M&0Ej)
        (fxbit-field . g$7055$1M&0Ej)
        (fxbit-count . g$12092$1M&0Ej)
        (fxarithmetic-shift-right . g$7058$1M&0Ej)
        (fxarithmetic-shift-left . g$7057$1M&0Ej)
        (fxarithmetic-shift . g$12091$1M&0Ej)
        (fxand . g$12090$1M&0Ej)
        (fx>? . g$12089$1M&0Ej)
        (fx>=? . g$12088$1M&0Ej)
        (fx=? . g$12087$1M&0Ej)
        (fx<? . g$12086$1M&0Ej)
        (fx<=? . g$12085$1M&0Ej)
        (fx-/carry . g$12084$1M&0Ej)
        (fx- . g$12083$1M&0Ej)
        (fx+/carry . g$12082$1M&0Ej)
        (fx+ . g$12081$1M&0Ej)
        (fx*/carry . g$12080$1M&0Ej)
        (fx* . g$12079$1M&0Ej)
        (greatest-fixnum . g$12078$1M&0Ej)
        (least-fixnum . g$12077$1M&0Ej)
        (fixnum-width . g$12076$1M&0Ej)
        (fixnum? . g$12075$1M&0Ej)
        (bitwise-rotate-bit-field . g$7011$1M&0Ej)
        (bitwise-reverse-bit-field . g$12074$1M&0Ej)
        (bitwise-length . g$12073$1M&0Ej)
        (bitwise-if . g$7005$1M&0Ej)
        (bitwise-first-bit-set . g$12072$1M&0Ej)
        (bitwise-copy-bit-field . g$7008$1M&0Ej)
        (bitwise-copy-bit . g$7006$1M&0Ej)
        (bitwise-bit-set? . g$12071$1M&0Ej)
        (bitwise-bit-field . g$12070$1M&0Ej)
        (bitwise-bit-count . g$12069$1M&0Ej)
        (bitwise-xor . g$12068$1M&0Ej)
        (bitwise-ior . g$12067$1M&0Ej)
        (bitwise-and . g$12066$1M&0Ej)
        (bitwise-not . g$12065$1M&0Ej)
        (bitwise-arithmetic-shift-right . g$7010$1M&0Ej)
        (bitwise-arithmetic-shift-left . g$7009$1M&0Ej)
        (bitwise-arithmetic-shift . g$12064$1M&0Ej)
        (zero? . g$12063$1M&0Ej)
        (vector? . g$12062$1M&0Ej)
        (vector-set! . g$12061$1M&0Ej)
        (vector-ref . g$12060$1M&0Ej)
        (vector-map . g$12059$1M&0Ej)
        (vector-length . g$12058$1M&0Ej)
        (vector-for-each . g$12057$1M&0Ej)
        (vector-fill! . g$12056$1M&0Ej)
        (vector->list . g$12055$1M&0Ej)
        (vector . g$12054$1M&0Ej)
        (values . g$12053$1M&0Ej)
        (truncate . g$12052$1M&0Ej)
        (tan . g$12051$1M&0Ej)
        (symbol? . g$12050$1M&0Ej)
        (symbol=? . g$6000$1M&0Ej)
        (symbol->string . g$12049$1M&0Ej)
        (substring . g$12048$1M&0Ej)
        (string? . g$12047$1M&0Ej)
        (string>? . g$5997$1M&0Ej)
        (string>=? . g$5999$1M&0Ej)
        (string=? . g$5995$1M&0Ej)
        (string<? . g$5996$1M&0Ej)
        (string<=? . g$5998$1M&0Ej)
        (string-ref . g$12046$1M&0Ej)
        (string-length . g$12045$1M&0Ej)
        (string-for-each . g$12044$1M&0Ej)
        (string-copy . g$12043$1M&0Ej)
        (string-append . g$12042$1M&0Ej)
        (string->symbol . g$12041$1M&0Ej)
        (string->number . g$12040$1M&0Ej)
        (string->list . g$12039$1M&0Ej)
        (string . g$12038$1M&0Ej)
        (sqrt . g$12037$1M&0Ej)
        (sin . g$12036$1M&0Ej)
        (round . g$12035$1M&0Ej)
        (reverse . g$12034$1M&0Ej)
        (real? . g$12033$1M&0Ej)
        (real-valued? . g$12032$1M&0Ej)
        (real-part . g$12031$1M&0Ej)
        (rationalize . g$6041$1M&0Ej)
        (rational? . g$12030$1M&0Ej)
        (rational-valued? . g$12029$1M&0Ej)
        (procedure? . g$12028$1M&0Ej)
        (positive? . g$12027$1M&0Ej)
        (pair? . g$12026$1M&0Ej)
        (odd? . g$12025$1M&0Ej)
        (numerator . g$12024$1M&0Ej)
        (number? . g$12023$1M&0Ej)
        (number->string . g$12022$1M&0Ej)
        (null? . g$12021$1M&0Ej)
        (not . g$12020$1M&0Ej)
        (negative? . g$12019$1M&0Ej)
        (nan? . g$12018$1M&0Ej)
        (min . g$12017$1M&0Ej)
        (max . g$12016$1M&0Ej)
        (map . g$12015$1M&0Ej)
        (make-vector . g$12014$1M&0Ej)
        (make-string . g$12013$1M&0Ej)
        (make-rectangular . g$12012$1M&0Ej)
        (make-polar . g$12011$1M&0Ej)
        (magnitude . g$12010$1M&0Ej)
        (log . g$12009$1M&0Ej)
        (list? . g$12008$1M&0Ej)
        (list-tail . g$12007$1M&0Ej)
        (list-ref . g$12006$1M&0Ej)
        (list->vector . g$12005$1M&0Ej)
        (list->string . g$12004$1M&0Ej)
        (list . g$12003$1M&0Ej)
        (length . g$12002$1M&0Ej)
        (lcm . g$12001$1M&0Ej)
        (integer? . g$12000$1M&0Ej)
        (integer-valued? . g$11999$1M&0Ej)
        (integer->char . g$11998$1M&0Ej)
        (infinite? . g$11997$1M&0Ej)
        (inexact? . g$11996$1M&0Ej)
        (inexact . g$11995$1M&0Ej)
        (imag-part . g$11994$1M&0Ej)
        (gcd . g$11993$1M&0Ej)
        (for-each . g$11992$1M&0Ej)
        (floor . g$11991$1M&0Ej)
        (finite? . g$11990$1M&0Ej)
        (expt . g$11989$1M&0Ej)
        (exp . g$11988$1M&0Ej)
        (exact? . g$11987$1M&0Ej)
        (exact-integer-sqrt . g$11986$1M&0Ej)
        (exact . g$11985$1M&0Ej)
        (even? . g$11984$1M&0Ej)
        (error . g$11983$1M&0Ej)
        (eqv? . g$11982$1M&0Ej)
        (equal? . g$11981$1M&0Ej)
        (eq? . g$11980$1M&0Ej)
        (dynamic-wind . g$11979$1M&0Ej)
        (div0-and-mod0 . g$11978$1M&0Ej)
        (mod0 . g$11977$1M&0Ej)
        (div0 . g$11976$1M&0Ej)
        (div-and-mod . g$11975$1M&0Ej)
        (mod . g$11974$1M&0Ej)
        (div . g$11973$1M&0Ej)
        (denominator . g$11972$1M&0Ej)
        (cos . g$11971$1M&0Ej)
        (cons . g$11970$1M&0Ej)
        (complex? . g$11969$1M&0Ej)
        (char? . g$11968$1M&0Ej)
        (char>? . g$6038$1M&0Ej)
        (char>=? . g$6040$1M&0Ej)
        (char=? . g$6036$1M&0Ej)
        (char<? . g$6037$1M&0Ej)
        (char<=? . g$6039$1M&0Ej)
        (char->integer . g$11967$1M&0Ej)
        (ceiling . g$11966$1M&0Ej)
        (call-with-values . g$11965$1M&0Ej)
        (call/cc . g$11964$1M&0Ej)
        (call-with-current-continuation . g$11963$1M&0Ej)
        (cddddr . g$5960$1M&0Ej)
        (cdddar . g$5959$1M&0Ej)
        (cddadr . g$5958$1M&0Ej)
        (cddaar . g$5957$1M&0Ej)
        (cdaddr . g$5956$1M&0Ej)
        (cdadar . g$5955$1M&0Ej)
        (cdaadr . g$5954$1M&0Ej)
        (cdaaar . g$5953$1M&0Ej)
        (cadddr . g$5952$1M&0Ej)
        (caddar . g$5951$1M&0Ej)
        (cadadr . g$5950$1M&0Ej)
        (cadaar . g$5949$1M&0Ej)
        (caaddr . g$5948$1M&0Ej)
        (caadar . g$5947$1M&0Ej)
        (caaadr . g$5946$1M&0Ej)
        (caaaar . g$5945$1M&0Ej)
        (cdddr . g$5944$1M&0Ej)
        (cddar . g$5943$1M&0Ej)
        (cdadr . g$5942$1M&0Ej)
        (cdaar . g$5941$1M&0Ej)
        (caddr . g$5940$1M&0Ej)
        (cadar . g$5939$1M&0Ej)
        (caadr . g$5938$1M&0Ej)
        (caaar . g$5937$1M&0Ej)
        (cddr . g$5936$1M&0Ej)
        (cdar . g$5935$1M&0Ej)
        (cadr . g$5934$1M&0Ej)
        (caar . g$5933$1M&0Ej)
        (cdr . g$11962$1M&0Ej)
        (car . g$11961$1M&0Ej)
        (boolean? . g$11960$1M&0Ej)
        (boolean=? . g$6001$1M&0Ej)
        (atan . g$11959$1M&0Ej)
        (assertion-violation . g$11958$1M&0Ej)
        (asin . g$11957$1M&0Ej)
        (apply . g$11956$1M&0Ej)
        (append . g$11955$1M&0Ej)
        (angle . g$11954$1M&0Ej)
        (acos . g$11953$1M&0Ej)
        (abs . g$11952$1M&0Ej)
        (/ . g$11951$1M&0Ej)
        (* . g$11950$1M&0Ej)
        (- . g$11949$1M&0Ej)
        (+ . g$11948$1M&0Ej)
        (>= . g$11947$1M&0Ej)
        (> . g$11946$1M&0Ej)
        (= . g$11945$1M&0Ej)
        (<= . g$11944$1M&0Ej)
        (< . g$11943$1M&0Ej)
        (&no-nans . g$11913$1M&0Ej)
        (&no-infinities . g$11912$1M&0Ej)
        (&i/o-encoding . g$11911$1M&0Ej)
        (&i/o-decoding . g$11910$1M&0Ej)
        (&i/o-port . g$11909$1M&0Ej)
        (&i/o-file-does-not-exist . g$11908$1M&0Ej)
        (&i/o-file-already-exists . g$11907$1M&0Ej)
        (&i/o-file-is-read-only . g$11906$1M&0Ej)
        (&i/o-file-protection . g$11905$1M&0Ej)
        (&i/o-filename . g$11904$1M&0Ej)
        (&i/o-invalid-position . g$11903$1M&0Ej)
        (&i/o-write . g$11902$1M&0Ej)
        (&i/o-read . g$11901$1M&0Ej)
        (&i/o . g$11900$1M&0Ej)
        (&non-continuable . g$11899$1M&0Ej)
        (&undefined . g$11898$1M&0Ej)
        (&syntax . g$11897$1M&0Ej)
        (&lexical . g$11896$1M&0Ej)
        (&implementation-restriction . g$11895$1M&0Ej)
        (&who . g$11893$1M&0Ej)
        (&irritants . g$11892$1M&0Ej)
        (&assertion . g$11891$1M&0Ej)
        (&violation . g$11890$1M&0Ej)
        (&error . g$11889$1M&0Ej)
        (&serious . g$11888$1M&0Ej)
        (&warning . g$11887$1M&0Ej)
        (&message . g$11886$1M&0Ej)
        (&condition . g$11885$1M&0Ej)
        (define-condition-type . g$11884$1M&0Ej)
        (define-enumeration . g$11883$1M&0Ej)
        (define-record-type . g$11882$1M&0Ej)
        (parent-rtd . g$11881$1M&0Ej)
        (nongenerative . g$11880$1M&0Ej)
        (opaque . g$11879$1M&0Ej)
        (sealed . g$11878$1M&0Ej)
        (protocol . g$11877$1M&0Ej)
        (parent . g$11876$1M&0Ej)
        (immutable . g$11875$1M&0Ej)
        (mutable . g$11874$1M&0Ej)
        (fields . g$11873$1M&0Ej)
        (error-handling-mode . g$11872$1M&0Ej)
        (file-options . g$11871$1M&0Ej)
        (buffer-mode . g$11870$1M&0Ej)
        (eol-style . g$11869$1M&0Ej)
        (guard . g$11868$1M&0Ej)
        (unsyntax-splicing . g$11862$1M&0Ej)
        (unsyntax . g$11861$1M&0Ej)
        (unquote-splicing . g$11860$1M&0Ej)
        (unquote . g$11859$1M&0Ej)
        (_ . g$11858$1M&0Ej)
        (else . g$11857$1M&0Ej)
        (=> . g$11856$1M&0Ej)
        (... . g$11855$1M&0Ej)
        (assert . g$11854$1M&0Ej)
        (endianness . g$11853$1M&0Ej)
        (or . g$11850$1M&0Ej)
        (and . g$11849$1M&0Ej)
        (do . g$11848$1M&0Ej)
        (cond . g$11847$1M&0Ej)
        (let* . g$11846$1M&0Ej)
        (let . g$11845$1M&0Ej)
        (identifier-syntax . g$11844$1M&0Ej)
        (with-syntax . g$11843$1M&0Ej)
        (quasisyntax . g$11842$1M&0Ej)
        (quasiquote . g$11841$1M&0Ej)
        (syntax-rules . g$11840$1M&0Ej)
        (let-values . g$11836$1M&0Ej)
        (let*-values . g$11835$1M&0Ej)
        (record-constructor-descriptor . g$11834$1M&0Ej)
        (record-type-descriptor . g$11833$1M&0Ej)
        (case . g$11831$1M&0Ej)
        (unless . g$11829$1M&0Ej)
        (when . g$11828$1M&0Ej)
        (if . g$11827$1M&0Ej)
        (letrec* . g$11826$1M&0Ej)
        (letrec . g$11825$1M&0Ej)
        (case-lambda . g$11823$1M&0Ej)
        (lambda . g$11822$1M&0Ej)
        (syntax . g$11821$1M&0Ej)
        (syntax-case . g$11820$1M&0Ej)
        (quote . g$11819$1M&0Ej)
        (letrec-syntax . g$11817$1M&0Ej)
        (let-syntax . g$11816$1M&0Ej)
        (set! . g$11815$1M&0Ej)
        (begin . g$11811$1M&0Ej)
        (define-syntax . g$11809$1M&0Ej)
        (define . g$11808$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12437$1M&0Ej
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8806$1M&0Ej)
        (scheme-report-environment . g$8781$1M&0Ej)
        (quotient . g$6828$1M&0Ej)
        (null-environment . g$8780$1M&0Ej)
        (remainder . g$6829$1M&0Ej)
        (modulo . g$6830$1M&0Ej)
        (inexact->exact . g$12203$1M&0Ej)
        (force . g$6832$1M&0Ej)
        (exact->inexact . g$12202$1M&0Ej)
        (delay . g$11852$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12438$1M&0Ej
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11848$1M&0Ej)
        (unless . g$11829$1M&0Ej)
        (when . g$11828$1M&0Ej)
        (case-lambda . g$11823$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12439$1M&0Ej
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8783$1M&0Ej) (environment . g$8779$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12440$1M&0Ej
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12198$1M&0Ej) (set-car! . g$12197$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12441$1M&0Ej
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12200$1M&0Ej) (string-set! . g$12199$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12442$1M&0Ej
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12201$1M&0Ej) (command-line . g$11772$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12443$1M&0Ej
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8403$1M&0Ej)
        (identifier? . g$8801$1M&0Ej)
        (generate-temporaries . g$8790$1M&0Ej)
        (free-identifier=? . g$8791$1M&0Ej)
        (syntax->datum . g$8803$1M&0Ej)
        (datum->syntax . g$8802$1M&0Ej)
        (bound-identifier=? . g$8792$1M&0Ej)
        (syntax-violation . g$8800$1M&0Ej)
        (unsyntax-splicing . g$11862$1M&0Ej)
        (unsyntax . g$11861$1M&0Ej)
        (_ . g$11858$1M&0Ej)
        (... . g$11855$1M&0Ej)
        (with-syntax . g$11843$1M&0Ej)
        (quasisyntax . g$11842$1M&0Ej)
        (syntax . g$11821$1M&0Ej)
        (syntax-case . g$11820$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12444$1M&0Ej
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6485$1M&0Ej)
        (file-exists? . g$6484$1M&0Ej)
        (make-i/o-write-error . g$7170$1M&0Ej)
        (make-i/o-read-error . g$7156$1M&0Ej)
        (make-i/o-port-error . g$7275$1M&0Ej)
        (make-i/o-invalid-position-error . g$7185$1M&0Ej)
        (make-i/o-filename-error . g$7202$1M&0Ej)
        (make-i/o-file-protection-error . g$7218$1M&0Ej)
        (make-i/o-file-is-read-only-error . g$7232$1M&0Ej)
        (make-i/o-file-does-not-exist-error . g$7260$1M&0Ej)
        (make-i/o-file-already-exists-error . g$7246$1M&0Ej)
        (make-i/o-error . g$7142$1M&0Ej)
        (i/o-write-error? . g$7171$1M&0Ej)
        (i/o-read-error? . g$7157$1M&0Ej)
        (i/o-port-error? . g$7277$1M&0Ej)
        (i/o-invalid-position-error? . g$7187$1M&0Ej)
        (i/o-error-position . g$7188$1M&0Ej)
        (i/o-filename-error? . g$7204$1M&0Ej)
        (i/o-file-protection-error? . g$7219$1M&0Ej)
        (i/o-file-is-read-only-error? . g$7233$1M&0Ej)
        (i/o-file-does-not-exist-error? . g$7261$1M&0Ej)
        (i/o-file-already-exists-error? . g$7247$1M&0Ej)
        (i/o-error? . g$7143$1M&0Ej)
        (i/o-error-port . g$7278$1M&0Ej)
        (i/o-error-filename . g$7205$1M&0Ej)
        (&i/o-port . g$11909$1M&0Ej)
        (&i/o-file-does-not-exist . g$11908$1M&0Ej)
        (&i/o-file-already-exists . g$11907$1M&0Ej)
        (&i/o-file-is-read-only . g$11906$1M&0Ej)
        (&i/o-file-protection . g$11905$1M&0Ej)
        (&i/o-filename . g$11904$1M&0Ej)
        (&i/o-invalid-position . g$11903$1M&0Ej)
        (&i/o-write . g$11902$1M&0Ej)
        (&i/o-read . g$11901$1M&0Ej)
        (&i/o . g$11900$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12445$1M&0Ej
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12296$1M&0Ej)
        (vector-sort . g$12295$1M&0Ej)
        (list-sort . g$6848$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12446$1M&0Ej
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12063$1M&0Ej)
        (vector? . g$12062$1M&0Ej)
        (vector-set! . g$12061$1M&0Ej)
        (vector-ref . g$12060$1M&0Ej)
        (vector-map . g$12059$1M&0Ej)
        (vector-length . g$12058$1M&0Ej)
        (vector-for-each . g$12057$1M&0Ej)
        (vector-fill! . g$12056$1M&0Ej)
        (vector->list . g$12055$1M&0Ej)
        (vector . g$12054$1M&0Ej)
        (values . g$12053$1M&0Ej)
        (truncate . g$12052$1M&0Ej)
        (tan . g$12051$1M&0Ej)
        (symbol? . g$12050$1M&0Ej)
        (symbol=? . g$6000$1M&0Ej)
        (symbol->string . g$12049$1M&0Ej)
        (substring . g$12048$1M&0Ej)
        (string? . g$12047$1M&0Ej)
        (string>? . g$5997$1M&0Ej)
        (string>=? . g$5999$1M&0Ej)
        (string=? . g$5995$1M&0Ej)
        (string<? . g$5996$1M&0Ej)
        (string<=? . g$5998$1M&0Ej)
        (string-ref . g$12046$1M&0Ej)
        (string-length . g$12045$1M&0Ej)
        (string-for-each . g$12044$1M&0Ej)
        (string-copy . g$12043$1M&0Ej)
        (string-append . g$12042$1M&0Ej)
        (string->symbol . g$12041$1M&0Ej)
        (string->number . g$12040$1M&0Ej)
        (string->list . g$12039$1M&0Ej)
        (string . g$12038$1M&0Ej)
        (sqrt . g$12037$1M&0Ej)
        (sin . g$12036$1M&0Ej)
        (round . g$12035$1M&0Ej)
        (reverse . g$12034$1M&0Ej)
        (real? . g$12033$1M&0Ej)
        (real-valued? . g$12032$1M&0Ej)
        (real-part . g$12031$1M&0Ej)
        (rationalize . g$6041$1M&0Ej)
        (rational? . g$12030$1M&0Ej)
        (rational-valued? . g$12029$1M&0Ej)
        (procedure? . g$12028$1M&0Ej)
        (positive? . g$12027$1M&0Ej)
        (pair? . g$12026$1M&0Ej)
        (odd? . g$12025$1M&0Ej)
        (numerator . g$12024$1M&0Ej)
        (number? . g$12023$1M&0Ej)
        (number->string . g$12022$1M&0Ej)
        (null? . g$12021$1M&0Ej)
        (not . g$12020$1M&0Ej)
        (negative? . g$12019$1M&0Ej)
        (nan? . g$12018$1M&0Ej)
        (min . g$12017$1M&0Ej)
        (max . g$12016$1M&0Ej)
        (map . g$12015$1M&0Ej)
        (make-vector . g$12014$1M&0Ej)
        (make-string . g$12013$1M&0Ej)
        (make-rectangular . g$12012$1M&0Ej)
        (make-polar . g$12011$1M&0Ej)
        (magnitude . g$12010$1M&0Ej)
        (log . g$12009$1M&0Ej)
        (list? . g$12008$1M&0Ej)
        (list-tail . g$12007$1M&0Ej)
        (list-ref . g$12006$1M&0Ej)
        (list->vector . g$12005$1M&0Ej)
        (list->string . g$12004$1M&0Ej)
        (list . g$12003$1M&0Ej)
        (length . g$12002$1M&0Ej)
        (lcm . g$12001$1M&0Ej)
        (integer? . g$12000$1M&0Ej)
        (integer-valued? . g$11999$1M&0Ej)
        (integer->char . g$11998$1M&0Ej)
        (infinite? . g$11997$1M&0Ej)
        (inexact? . g$11996$1M&0Ej)
        (inexact . g$11995$1M&0Ej)
        (imag-part . g$11994$1M&0Ej)
        (gcd . g$11993$1M&0Ej)
        (for-each . g$11992$1M&0Ej)
        (floor . g$11991$1M&0Ej)
        (finite? . g$11990$1M&0Ej)
        (expt . g$11989$1M&0Ej)
        (exp . g$11988$1M&0Ej)
        (exact? . g$11987$1M&0Ej)
        (exact-integer-sqrt . g$11986$1M&0Ej)
        (exact . g$11985$1M&0Ej)
        (even? . g$11984$1M&0Ej)
        (error . g$11983$1M&0Ej)
        (eqv? . g$11982$1M&0Ej)
        (equal? . g$11981$1M&0Ej)
        (eq? . g$11980$1M&0Ej)
        (dynamic-wind . g$11979$1M&0Ej)
        (div0-and-mod0 . g$11978$1M&0Ej)
        (mod0 . g$11977$1M&0Ej)
        (div0 . g$11976$1M&0Ej)
        (div-and-mod . g$11975$1M&0Ej)
        (mod . g$11974$1M&0Ej)
        (div . g$11973$1M&0Ej)
        (denominator . g$11972$1M&0Ej)
        (cos . g$11971$1M&0Ej)
        (cons . g$11970$1M&0Ej)
        (complex? . g$11969$1M&0Ej)
        (char? . g$11968$1M&0Ej)
        (char>? . g$6038$1M&0Ej)
        (char>=? . g$6040$1M&0Ej)
        (char=? . g$6036$1M&0Ej)
        (char<? . g$6037$1M&0Ej)
        (char<=? . g$6039$1M&0Ej)
        (char->integer . g$11967$1M&0Ej)
        (ceiling . g$11966$1M&0Ej)
        (call-with-values . g$11965$1M&0Ej)
        (call/cc . g$11964$1M&0Ej)
        (call-with-current-continuation . g$11963$1M&0Ej)
        (cddddr . g$5960$1M&0Ej)
        (cdddar . g$5959$1M&0Ej)
        (cddadr . g$5958$1M&0Ej)
        (cddaar . g$5957$1M&0Ej)
        (cdaddr . g$5956$1M&0Ej)
        (cdadar . g$5955$1M&0Ej)
        (cdaadr . g$5954$1M&0Ej)
        (cdaaar . g$5953$1M&0Ej)
        (cadddr . g$5952$1M&0Ej)
        (caddar . g$5951$1M&0Ej)
        (cadadr . g$5950$1M&0Ej)
        (cadaar . g$5949$1M&0Ej)
        (caaddr . g$5948$1M&0Ej)
        (caadar . g$5947$1M&0Ej)
        (caaadr . g$5946$1M&0Ej)
        (caaaar . g$5945$1M&0Ej)
        (cdddr . g$5944$1M&0Ej)
        (cddar . g$5943$1M&0Ej)
        (cdadr . g$5942$1M&0Ej)
        (cdaar . g$5941$1M&0Ej)
        (caddr . g$5940$1M&0Ej)
        (cadar . g$5939$1M&0Ej)
        (caadr . g$5938$1M&0Ej)
        (caaar . g$5937$1M&0Ej)
        (cddr . g$5936$1M&0Ej)
        (cdar . g$5935$1M&0Ej)
        (cadr . g$5934$1M&0Ej)
        (caar . g$5933$1M&0Ej)
        (cdr . g$11962$1M&0Ej)
        (car . g$11961$1M&0Ej)
        (boolean? . g$11960$1M&0Ej)
        (boolean=? . g$6001$1M&0Ej)
        (atan . g$11959$1M&0Ej)
        (assertion-violation . g$11958$1M&0Ej)
        (asin . g$11957$1M&0Ej)
        (apply . g$11956$1M&0Ej)
        (append . g$11955$1M&0Ej)
        (angle . g$11954$1M&0Ej)
        (acos . g$11953$1M&0Ej)
        (abs . g$11952$1M&0Ej)
        (/ . g$11951$1M&0Ej)
        (* . g$11950$1M&0Ej)
        (- . g$11949$1M&0Ej)
        (+ . g$11948$1M&0Ej)
        (>= . g$11947$1M&0Ej)
        (> . g$11946$1M&0Ej)
        (= . g$11945$1M&0Ej)
        (<= . g$11944$1M&0Ej)
        (< . g$11943$1M&0Ej)
        (unquote-splicing . g$11860$1M&0Ej)
        (unquote . g$11859$1M&0Ej)
        (_ . g$11858$1M&0Ej)
        (else . g$11857$1M&0Ej)
        (=> . g$11856$1M&0Ej)
        (... . g$11855$1M&0Ej)
        (assert . g$11854$1M&0Ej)
        (or . g$11850$1M&0Ej)
        (and . g$11849$1M&0Ej)
        (cond . g$11847$1M&0Ej)
        (let* . g$11846$1M&0Ej)
        (let . g$11845$1M&0Ej)
        (identifier-syntax . g$11844$1M&0Ej)
        (quasiquote . g$11841$1M&0Ej)
        (syntax-rules . g$11840$1M&0Ej)
        (let-values . g$11836$1M&0Ej)
        (let*-values . g$11835$1M&0Ej)
        (case . g$11831$1M&0Ej)
        (if . g$11827$1M&0Ej)
        (letrec* . g$11826$1M&0Ej)
        (letrec . g$11825$1M&0Ej)
        (lambda . g$11822$1M&0Ej)
        (quote . g$11819$1M&0Ej)
        (letrec-syntax . g$11817$1M&0Ej)
        (let-syntax . g$11816$1M&0Ej)
        (set! . g$11815$1M&0Ej)
        (begin . g$11811$1M&0Ej)
        (define-syntax . g$11809$1M&0Ej)
        (define . g$11808$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12447$1M&0Ej
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5846$1M&0Ej)
        (remv . g$5847$1M&0Ej)
        (remp . g$5829$1M&0Ej)
        (remq . g$5848$1M&0Ej)
        (partition . g$5828$1M&0Ej)
        (memv . g$5836$1M&0Ej)
        (memq . g$5835$1M&0Ej)
        (memp . g$5838$1M&0Ej)
        (member . g$5837$1M&0Ej)
        (exists . g$5842$1M&0Ej)
        (for-all . g$5841$1M&0Ej)
        (fold-right . g$5845$1M&0Ej)
        (fold-left . g$5844$1M&0Ej)
        (find . g$5827$1M&0Ej)
        (filter . g$5830$1M&0Ej)
        (cons* . g$5843$1M&0Ej)
        (assv . g$5832$1M&0Ej)
        (assq . g$5831$1M&0Ej)
        (assp . g$5834$1M&0Ej)
        (assoc . g$5833$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12448$1M&0Ej
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7338$1M&0Ej)
        (call-with-input-file . g$7337$1M&0Ej)
        (write-char . g$12282$1M&0Ej)
        (write . g$12281$1M&0Ej)
        (with-output-to-file . g$7336$1M&0Ej)
        (with-input-from-file . g$7335$1M&0Ej)
        (read-char . g$12280$1M&0Ej)
        (read . g$12279$1M&0Ej)
        (peek-char . g$12278$1M&0Ej)
        (open-output-file . g$12277$1M&0Ej)
        (open-input-file . g$12276$1M&0Ej)
        (newline . g$12275$1M&0Ej)
        (display . g$12274$1M&0Ej)
        (close-output-port . g$12273$1M&0Ej)
        (close-input-port . g$12272$1M&0Ej)
        (eof-object? . g$12271$1M&0Ej)
        (eof-object . g$12270$1M&0Ej)
        (current-error-port . g$12269$1M&0Ej)
        (current-output-port . g$12268$1M&0Ej)
        (current-input-port . g$12267$1M&0Ej)
        (output-port? . g$12266$1M&0Ej)
        (input-port? . g$12265$1M&0Ej)
        (make-i/o-write-error . g$7170$1M&0Ej)
        (make-i/o-read-error . g$7156$1M&0Ej)
        (make-i/o-port-error . g$7275$1M&0Ej)
        (make-i/o-invalid-position-error . g$7185$1M&0Ej)
        (make-i/o-filename-error . g$7202$1M&0Ej)
        (make-i/o-file-protection-error . g$7218$1M&0Ej)
        (make-i/o-file-is-read-only-error . g$7232$1M&0Ej)
        (make-i/o-file-does-not-exist-error . g$7260$1M&0Ej)
        (make-i/o-file-already-exists-error . g$7246$1M&0Ej)
        (make-i/o-error . g$7142$1M&0Ej)
        (i/o-write-error? . g$7171$1M&0Ej)
        (i/o-read-error? . g$7157$1M&0Ej)
        (i/o-port-error? . g$7277$1M&0Ej)
        (i/o-invalid-position-error? . g$7187$1M&0Ej)
        (i/o-error-position . g$7188$1M&0Ej)
        (i/o-filename-error? . g$7204$1M&0Ej)
        (i/o-file-protection-error? . g$7219$1M&0Ej)
        (i/o-file-is-read-only-error? . g$7233$1M&0Ej)
        (i/o-file-does-not-exist-error? . g$7261$1M&0Ej)
        (i/o-file-already-exists-error? . g$7247$1M&0Ej)
        (i/o-error? . g$7143$1M&0Ej)
        (i/o-error-port . g$7278$1M&0Ej)
        (i/o-error-filename . g$7205$1M&0Ej)
        (&i/o-port . g$11909$1M&0Ej)
        (&i/o-file-does-not-exist . g$11908$1M&0Ej)
        (&i/o-file-already-exists . g$11907$1M&0Ej)
        (&i/o-file-is-read-only . g$11906$1M&0Ej)
        (&i/o-file-protection . g$11905$1M&0Ej)
        (&i/o-filename . g$11904$1M&0Ej)
        (&i/o-invalid-position . g$11903$1M&0Ej)
        (&i/o-write . g$11902$1M&0Ej)
        (&i/o-read . g$11901$1M&0Ej)
        (&i/o . g$11900$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12449$1M&0Ej
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12225$1M&0Ej)
        (utf32->string . g$12188$1M&0Ej)
        (utf16->string . g$12187$1M&0Ej)
        (utf8->string . g$12186$1M&0Ej)
        (uint-list->bytevector . g$12185$1M&0Ej)
        (u8-list->bytevector . g$12184$1M&0Ej)
        (string->utf8 . g$12183$1M&0Ej)
        (string->utf32 . g$12182$1M&0Ej)
        (string->utf16 . g$12181$1M&0Ej)
        (sint-list->bytevector . g$12180$1M&0Ej)
        (native-endianness . g$6491$1M&0Ej)
        (bytevector? . g$12179$1M&0Ej)
        (bytevector=? . g$12178$1M&0Ej)
        (bytevector-uint-set! . g$12177$1M&0Ej)
        (bytevector-uint-ref . g$12176$1M&0Ej)
        (bytevector-u8-set! . g$12175$1M&0Ej)
        (bytevector-u8-ref . g$12174$1M&0Ej)
        (bytevector-u64-set! . g$6512$1M&0Ej)
        (bytevector-u64-ref . g$6508$1M&0Ej)
        (bytevector-u64-native-set! . g$6514$1M&0Ej)
        (bytevector-u64-native-ref . g$6510$1M&0Ej)
        (bytevector-u32-set! . g$6504$1M&0Ej)
        (bytevector-u32-ref . g$6500$1M&0Ej)
        (bytevector-u32-native-set! . g$6506$1M&0Ej)
        (bytevector-u32-native-ref . g$6502$1M&0Ej)
        (bytevector-u16-set! . g$6496$1M&0Ej)
        (bytevector-u16-ref . g$6492$1M&0Ej)
        (bytevector-u16-native-set! . g$6498$1M&0Ej)
        (bytevector-u16-native-ref . g$6494$1M&0Ej)
        (bytevector-sint-set! . g$12173$1M&0Ej)
        (bytevector-sint-ref . g$12172$1M&0Ej)
        (bytevector-s8-set! . g$12171$1M&0Ej)
        (bytevector-s8-ref . g$12170$1M&0Ej)
        (bytevector-s64-set! . g$6513$1M&0Ej)
        (bytevector-s64-ref . g$6509$1M&0Ej)
        (bytevector-s64-native-set! . g$6515$1M&0Ej)
        (bytevector-s64-native-ref . g$6511$1M&0Ej)
        (bytevector-s32-set! . g$6505$1M&0Ej)
        (bytevector-s32-ref . g$6501$1M&0Ej)
        (bytevector-s32-native-set! . g$6507$1M&0Ej)
        (bytevector-s32-native-ref . g$6503$1M&0Ej)
        (bytevector-s16-set! . g$6497$1M&0Ej)
        (bytevector-s16-ref . g$6493$1M&0Ej)
        (bytevector-s16-native-set! . g$6499$1M&0Ej)
        (bytevector-s16-native-ref . g$6495$1M&0Ej)
        (bytevector-length . g$12169$1M&0Ej)
        (bytevector-ieee-single-set! . g$12168$1M&0Ej)
        (bytevector-ieee-single-ref . g$12167$1M&0Ej)
        (bytevector-ieee-single-native-set! . g$6518$1M&0Ej)
        (bytevector-ieee-single-native-ref . g$6516$1M&0Ej)
        (bytevector-ieee-double-set! . g$12166$1M&0Ej)
        (bytevector-ieee-double-ref . g$12165$1M&0Ej)
        (bytevector-ieee-double-native-set! . g$6519$1M&0Ej)
        (bytevector-ieee-double-native-ref . g$6517$1M&0Ej)
        (bytevector-fill! . g$12164$1M&0Ej)
        (bytevector-copy! . g$12163$1M&0Ej)
        (bytevector-copy . g$12162$1M&0Ej)
        (bytevector->uint-list . g$12161$1M&0Ej)
        (bytevector->u8-list . g$12160$1M&0Ej)
        (bytevector->sint-list . g$12159$1M&0Ej)
        (endianness . g$11853$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12450$1M&0Ej
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12332$1M&0Ej)
        (string-titlecase . g$12331$1M&0Ej)
        (string-normalize-nfkd . g$12330$1M&0Ej)
        (string-normalize-nfkc . g$12329$1M&0Ej)
        (string-normalize-nfd . g$12328$1M&0Ej)
        (string-normalize-nfc . g$12327$1M&0Ej)
        (string-foldcase . g$12326$1M&0Ej)
        (string-downcase . g$12325$1M&0Ej)
        (string-ci>? . g$6910$1M&0Ej)
        (string-ci>=? . g$6912$1M&0Ej)
        (string-ci=? . g$6908$1M&0Ej)
        (string-ci<? . g$6909$1M&0Ej)
        (string-ci<=? . g$6911$1M&0Ej)
        (char-whitespace? . g$12324$1M&0Ej)
        (char-upper-case? . g$12323$1M&0Ej)
        (char-title-case? . g$12322$1M&0Ej)
        (char-numeric? . g$12321$1M&0Ej)
        (char-lower-case? . g$12320$1M&0Ej)
        (char-general-category . g$12319$1M&0Ej)
        (char-upcase . g$12318$1M&0Ej)
        (char-titlecase . g$12317$1M&0Ej)
        (char-foldcase . g$12316$1M&0Ej)
        (char-downcase . g$12315$1M&0Ej)
        (char-ci>? . g$6949$1M&0Ej)
        (char-ci>=? . g$6951$1M&0Ej)
        (char-ci=? . g$6947$1M&0Ej)
        (char-ci<? . g$6948$1M&0Ej)
        (char-ci<=? . g$6950$1M&0Ej)
        (char-alphabetic? . g$12314$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12451$1M&0Ej
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12196$1M&0Ej)
        (raise-continuable . g$12195$1M&0Ej)
        (raise . g$12194$1M&0Ej)
        (guard . g$11868$1M&0Ej)
        (else . g$11857$1M&0Ej)
        (=> . g$11856$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12452$1M&0Ej
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7011$1M&0Ej)
        (bitwise-reverse-bit-field . g$12074$1M&0Ej)
        (bitwise-length . g$12073$1M&0Ej)
        (bitwise-if . g$7005$1M&0Ej)
        (bitwise-first-bit-set . g$12072$1M&0Ej)
        (bitwise-copy-bit-field . g$7008$1M&0Ej)
        (bitwise-copy-bit . g$7006$1M&0Ej)
        (bitwise-bit-set? . g$12071$1M&0Ej)
        (bitwise-bit-field . g$12070$1M&0Ej)
        (bitwise-bit-count . g$12069$1M&0Ej)
        (bitwise-xor . g$12068$1M&0Ej)
        (bitwise-ior . g$12067$1M&0Ej)
        (bitwise-and . g$12066$1M&0Ej)
        (bitwise-not . g$12065$1M&0Ej)
        (bitwise-arithmetic-shift-right . g$7010$1M&0Ej)
        (bitwise-arithmetic-shift-left . g$7009$1M&0Ej)
        (bitwise-arithmetic-shift . g$12064$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12453$1M&0Ej
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12112$1M&0Ej)
        (fxxor . g$12111$1M&0Ej)
        (fxrotate-bit-field . g$7059$1M&0Ej)
        (fxreverse-bit-field . g$12110$1M&0Ej)
        (fxpositive? . g$12109$1M&0Ej)
        (fxodd? . g$12108$1M&0Ej)
        (fxnot . g$12107$1M&0Ej)
        (fxnegative? . g$12106$1M&0Ej)
        (fxmod0 . g$12105$1M&0Ej)
        (fxmod . g$12104$1M&0Ej)
        (fxmin . g$12103$1M&0Ej)
        (fxmax . g$12102$1M&0Ej)
        (fxlength . g$12101$1M&0Ej)
        (fxior . g$12100$1M&0Ej)
        (fxif . g$7053$1M&0Ej)
        (fxfirst-bit-set . g$12099$1M&0Ej)
        (fxeven? . g$12098$1M&0Ej)
        (fxdiv0-and-mod0 . g$12097$1M&0Ej)
        (fxdiv0 . g$12096$1M&0Ej)
        (fxdiv-and-mod . g$12095$1M&0Ej)
        (fxdiv . g$12094$1M&0Ej)
        (fxcopy-bit-field . g$7056$1M&0Ej)
        (fxcopy-bit . g$7054$1M&0Ej)
        (fxbit-set? . g$12093$1M&0Ej)
        (fxbit-field . g$7055$1M&0Ej)
        (fxbit-count . g$12092$1M&0Ej)
        (fxarithmetic-shift-right . g$7058$1M&0Ej)
        (fxarithmetic-shift-left . g$7057$1M&0Ej)
        (fxarithmetic-shift . g$12091$1M&0Ej)
        (fxand . g$12090$1M&0Ej)
        (fx>? . g$12089$1M&0Ej)
        (fx>=? . g$12088$1M&0Ej)
        (fx=? . g$12087$1M&0Ej)
        (fx<? . g$12086$1M&0Ej)
        (fx<=? . g$12085$1M&0Ej)
        (fx-/carry . g$12084$1M&0Ej)
        (fx- . g$12083$1M&0Ej)
        (fx+/carry . g$12082$1M&0Ej)
        (fx+ . g$12081$1M&0Ej)
        (fx*/carry . g$12080$1M&0Ej)
        (fx* . g$12079$1M&0Ej)
        (greatest-fixnum . g$12078$1M&0Ej)
        (least-fixnum . g$12077$1M&0Ej)
        (fixnum-width . g$12076$1M&0Ej)
        (fixnum? . g$12075$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12454$1M&0Ej
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7128$1M&0Ej)
        (no-infinities-violation? . g$7114$1M&0Ej)
        (make-no-nans-violation . g$7127$1M&0Ej)
        (make-no-infinities-violation . g$7113$1M&0Ej)
        (real->flonum . g$12158$1M&0Ej)
        (flzero? . g$12157$1M&0Ej)
        (fltruncate . g$12156$1M&0Ej)
        (fltan . g$12155$1M&0Ej)
        (flsqrt . g$12154$1M&0Ej)
        (flsin . g$12153$1M&0Ej)
        (flround . g$12152$1M&0Ej)
        (flpositive? . g$12151$1M&0Ej)
        (flonum? . g$12150$1M&0Ej)
        (flodd? . g$12149$1M&0Ej)
        (flnumerator . g$12148$1M&0Ej)
        (flnegative? . g$12147$1M&0Ej)
        (flnan? . g$12146$1M&0Ej)
        (flmod0 . g$12145$1M&0Ej)
        (flmod . g$12144$1M&0Ej)
        (flmin . g$12143$1M&0Ej)
        (flmax . g$12142$1M&0Ej)
        (fllog . g$12141$1M&0Ej)
        (flinteger? . g$12140$1M&0Ej)
        (flinfinite? . g$12139$1M&0Ej)
        (flfloor . g$12138$1M&0Ej)
        (flfinite? . g$12137$1M&0Ej)
        (flexpt . g$12136$1M&0Ej)
        (flexp . g$12135$1M&0Ej)
        (fleven? . g$12134$1M&0Ej)
        (fldiv0-and-mod0 . g$12133$1M&0Ej)
        (fldiv0 . g$12132$1M&0Ej)
        (fldiv-and-mod . g$12131$1M&0Ej)
        (fldiv . g$12130$1M&0Ej)
        (fldenominator . g$12129$1M&0Ej)
        (flcos . g$12128$1M&0Ej)
        (flceiling . g$12127$1M&0Ej)
        (flatan . g$12126$1M&0Ej)
        (flasin . g$12125$1M&0Ej)
        (flacos . g$12124$1M&0Ej)
        (flabs . g$12123$1M&0Ej)
        (fl>? . g$12122$1M&0Ej)
        (fl>=? . g$12121$1M&0Ej)
        (fl=? . g$12120$1M&0Ej)
        (fl<? . g$12119$1M&0Ej)
        (fl<=? . g$12118$1M&0Ej)
        (fl/ . g$12117$1M&0Ej)
        (fl- . g$12116$1M&0Ej)
        (fl+ . g$12115$1M&0Ej)
        (fl* . g$12114$1M&0Ej)
        (fixnum->flonum . g$12113$1M&0Ej)
        (&no-nans . g$11913$1M&0Ej)
        (&no-infinities . g$11912$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12455$1M&0Ej
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12294$1M&0Ej)
        (string-ci-hash . g$12293$1M&0Ej)
        (string-hash . g$12292$1M&0Ej)
        (equal-hash . g$12291$1M&0Ej)
        (hashtable-equivalence-function . g$12290$1M&0Ej)
        (make-hashtable . g$12289$1M&0Ej)
        (hashtable-hash-function . g$12288$1M&0Ej)
        (make-eqv-hashtable . g$6452$1M&0Ej)
        (make-eq-hashtable . g$6451$1M&0Ej)
        (hashtable? . g$12287$1M&0Ej)
        (hashtable-update! . g$6458$1M&0Ej)
        (hashtable-size . g$6453$1M&0Ej)
        (hashtable-set! . g$6455$1M&0Ej)
        (hashtable-ref . g$6454$1M&0Ej)
        (hashtable-mutable? . g$12286$1M&0Ej)
        (hashtable-keys . g$12285$1M&0Ej)
        (hashtable-entries . g$12284$1M&0Ej)
        (hashtable-delete! . g$6456$1M&0Ej)
        (hashtable-copy . g$12283$1M&0Ej)
        (hashtable-contains? . g$6457$1M&0Ej)
        (hashtable-clear! . g$6459$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12456$1M&0Ej
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12271$1M&0Ej)
        (eof-object . g$12270$1M&0Ej)
        (current-error-port . g$12269$1M&0Ej)
        (current-output-port . g$12268$1M&0Ej)
        (current-input-port . g$12267$1M&0Ej)
        (output-port? . g$12266$1M&0Ej)
        (input-port? . g$12265$1M&0Ej)
        (utf-8-codec . g$12264$1M&0Ej)
        (utf-16-codec . g$12263$1M&0Ej)
        (transcoder-error-handling-mode . g$12262$1M&0Ej)
        (transcoder-eol-style . g$12261$1M&0Ej)
        (transcoder-codec . g$12260$1M&0Ej)
        (transcoded-port . g$12259$1M&0Ej)
        (textual-port? . g$12258$1M&0Ej)
        (string->bytevector . g$12257$1M&0Ej)
        (standard-output-port . g$12256$1M&0Ej)
        (standard-input-port . g$12255$1M&0Ej)
        (standard-error-port . g$12254$1M&0Ej)
        (set-port-position! . g$12253$1M&0Ej)
        (put-u8 . g$12252$1M&0Ej)
        (put-string . g$12251$1M&0Ej)
        (put-datum . g$12250$1M&0Ej)
        (put-char . g$12249$1M&0Ej)
        (put-bytevector . g$12248$1M&0Ej)
        (port? . g$7314$1M&0Ej)
        (port-transcoder . g$12247$1M&0Ej)
        (port-position . g$12246$1M&0Ej)
        (port-has-set-port-position!? . g$12245$1M&0Ej)
        (port-has-port-position? . g$12244$1M&0Ej)
        (port-eof? . g$12243$1M&0Ej)
        (output-port-buffer-mode . g$12242$1M&0Ej)
        (open-string-output-port . g$7313$1M&0Ej)
        (open-string-input-port . g$12241$1M&0Ej)
        (open-file-output-port . g$12240$1M&0Ej)
        (open-file-input/output-port . g$12239$1M&0Ej)
        (open-file-input-port . g$12238$1M&0Ej)
        (open-bytevector-output-port . g$12237$1M&0Ej)
        (open-bytevector-input-port . g$12236$1M&0Ej)
        (native-transcoder . g$12235$1M&0Ej)
        (native-eol-style . g$12234$1M&0Ej)
        (make-transcoder . g$12233$1M&0Ej)
        (latin-1-codec . g$12232$1M&0Ej)
        (make-i/o-write-error . g$7170$1M&0Ej)
        (make-i/o-read-error . g$7156$1M&0Ej)
        (make-i/o-port-error . g$7275$1M&0Ej)
        (make-i/o-invalid-position-error . g$7185$1M&0Ej)
        (make-i/o-filename-error . g$7202$1M&0Ej)
        (make-i/o-file-protection-error . g$7218$1M&0Ej)
        (make-i/o-file-is-read-only-error . g$7232$1M&0Ej)
        (make-i/o-file-does-not-exist-error . g$7260$1M&0Ej)
        (make-i/o-file-already-exists-error . g$7246$1M&0Ej)
        (make-i/o-error . g$7142$1M&0Ej)
        (make-i/o-encoding-error . g$7306$1M&0Ej)
        (make-i/o-decoding-error . g$7291$1M&0Ej)
        (make-custom-textual-output-port . g$12231$1M&0Ej)
        (make-custom-textual-input/output-port . g$12230$1M&0Ej)
        (make-custom-textual-input-port . g$12229$1M&0Ej)
        (make-custom-binary-output-port . g$12228$1M&0Ej)
        (make-custom-binary-input/output-port . g$12227$1M&0Ej)
        (make-custom-binary-input-port . g$12226$1M&0Ej)
        (lookahead-u8 . g$12224$1M&0Ej)
        (lookahead-char . g$12223$1M&0Ej)
        (i/o-write-error? . g$7171$1M&0Ej)
        (i/o-read-error? . g$7157$1M&0Ej)
        (i/o-port-error? . g$7277$1M&0Ej)
        (i/o-invalid-position-error? . g$7187$1M&0Ej)
        (i/o-error-position . g$7188$1M&0Ej)
        (i/o-filename-error? . g$7204$1M&0Ej)
        (i/o-file-protection-error? . g$7219$1M&0Ej)
        (i/o-file-is-read-only-error? . g$7233$1M&0Ej)
        (i/o-file-does-not-exist-error? . g$7261$1M&0Ej)
        (i/o-file-already-exists-error? . g$7247$1M&0Ej)
        (i/o-error? . g$7143$1M&0Ej)
        (i/o-error-port . g$7278$1M&0Ej)
        (i/o-error-filename . g$7205$1M&0Ej)
        (i/o-encoding-error? . g$7308$1M&0Ej)
        (i/o-encoding-error-char . g$7309$1M&0Ej)
        (i/o-decoding-error? . g$7292$1M&0Ej)
        (get-u8 . g$12222$1M&0Ej)
        (get-string-n! . g$12221$1M&0Ej)
        (get-string-n . g$12220$1M&0Ej)
        (get-string-all . g$12219$1M&0Ej)
        (get-line . g$12218$1M&0Ej)
        (get-datum . g$12217$1M&0Ej)
        (get-char . g$12216$1M&0Ej)
        (get-bytevector-some . g$12215$1M&0Ej)
        (get-bytevector-n! . g$12214$1M&0Ej)
        (get-bytevector-n . g$12213$1M&0Ej)
        (get-bytevector-all . g$12212$1M&0Ej)
        (flush-output-port . g$12211$1M&0Ej)
        (close-port . g$12210$1M&0Ej)
        (call-with-string-output-port . g$12209$1M&0Ej)
        (call-with-port . g$12208$1M&0Ej)
        (call-with-bytevector-output-port . g$12207$1M&0Ej)
        (bytevector->string . g$12206$1M&0Ej)
        (buffer-mode? . g$12205$1M&0Ej)
        (binary-port? . g$12204$1M&0Ej)
        (&i/o-encoding . g$11911$1M&0Ej)
        (&i/o-decoding . g$11910$1M&0Ej)
        (&i/o-port . g$11909$1M&0Ej)
        (&i/o-file-does-not-exist . g$11908$1M&0Ej)
        (&i/o-file-already-exists . g$11907$1M&0Ej)
        (&i/o-file-is-read-only . g$11906$1M&0Ej)
        (&i/o-file-protection . g$11905$1M&0Ej)
        (&i/o-filename . g$11904$1M&0Ej)
        (&i/o-invalid-position . g$11903$1M&0Ej)
        (&i/o-write . g$11902$1M&0Ej)
        (&i/o-read . g$11901$1M&0Ej)
        (&i/o . g$11900$1M&0Ej)
        (error-handling-mode . g$11872$1M&0Ej)
        (file-options . g$11871$1M&0Ej)
        (buffer-mode . g$11870$1M&0Ej)
        (eol-style . g$11869$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12457$1M&0Ej
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7396$1M&0Ej)
        (enum-set=? . g$7403$1M&0Ej)
        (enum-set-universe . g$7397$1M&0Ej)
        (enum-set-union . g$7404$1M&0Ej)
        (enum-set-subset? . g$7402$1M&0Ej)
        (enum-set-projection . g$7408$1M&0Ej)
        (enum-set-member? . g$7401$1M&0Ej)
        (enum-set-intersection . g$7405$1M&0Ej)
        (enum-set-indexer . g$7398$1M&0Ej)
        (enum-set-difference . g$7406$1M&0Ej)
        (enum-set-constructor . g$7399$1M&0Ej)
        (enum-set-complement . g$7407$1M&0Ej)
        (enum-set->list . g$7400$1M&0Ej)
        (define-enumeration . g$11883$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12458$1M&0Ej
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6739$1M&0Ej)
        (warning? . g$6650$1M&0Ej)
        (violation? . g$6692$1M&0Ej)
        (undefined-violation? . g$6816$1M&0Ej)
        (syntax-violation? . g$6800$1M&0Ej)
        (syntax-violation-subform . g$6802$1M&0Ej)
        (syntax-violation-form . g$6801$1M&0Ej)
        (syntax-violation . g$8800$1M&0Ej)
        (simple-conditions . g$12193$1M&0Ej)
        (serious-condition? . g$6664$1M&0Ej)
        (non-continuable-violation? . g$6754$1M&0Ej)
        (message-condition? . g$6635$1M&0Ej)
        (make-who-condition . g$6737$1M&0Ej)
        (make-warning . g$6649$1M&0Ej)
        (make-violation . g$6691$1M&0Ej)
        (make-undefined-violation . g$6815$1M&0Ej)
        (make-syntax-violation . g$6797$1M&0Ej)
        (make-serious-condition . g$6663$1M&0Ej)
        (make-non-continuable-violation . g$6753$1M&0Ej)
        (make-message-condition . g$6633$1M&0Ej)
        (make-lexical-violation . g$6781$1M&0Ej)
        (make-irritants-condition . g$6720$1M&0Ej)
        (make-implementation-restriction-violation . g$6767$1M&0Ej)
        (make-error . g$6677$1M&0Ej)
        (make-assertion-violation . g$6705$1M&0Ej)
        (lexical-violation? . g$6782$1M&0Ej)
        (irritants-condition? . g$6722$1M&0Ej)
        (implementation-restriction-violation? . g$6768$1M&0Ej)
        (error? . g$6678$1M&0Ej)
        (condition-who . g$6740$1M&0Ej)
        (condition-predicate . g$12192$1M&0Ej)
        (condition-message . g$6636$1M&0Ej)
        (condition-irritants . g$6723$1M&0Ej)
        (condition-accessor . g$12191$1M&0Ej)
        (condition . g$12190$1M&0Ej)
        (assertion-violation? . g$6706$1M&0Ej)
        (condition? . g$12189$1M&0Ej)
        (&non-continuable . g$11899$1M&0Ej)
        (&undefined . g$11898$1M&0Ej)
        (&syntax . g$11897$1M&0Ej)
        (&lexical . g$11896$1M&0Ej)
        (&implementation-restriction . g$11895$1M&0Ej)
        (&who . g$11893$1M&0Ej)
        (&irritants . g$11892$1M&0Ej)
        (&assertion . g$11891$1M&0Ej)
        (&violation . g$11890$1M&0Ej)
        (&error . g$11889$1M&0Ej)
        (&serious . g$11888$1M&0Ej)
        (&warning . g$11887$1M&0Ej)
        (&message . g$11886$1M&0Ej)
        (&condition . g$11885$1M&0Ej)
        (define-condition-type . g$11884$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12459$1M&0Ej
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12306$1M&0Ej)
        (record-type-uid . g$12305$1M&0Ej)
        (record-type-sealed? . g$12304$1M&0Ej)
        (record-type-parent . g$12303$1M&0Ej)
        (record-type-opaque? . g$12302$1M&0Ej)
        (record-type-name . g$12301$1M&0Ej)
        (record-type-generative? . g$12300$1M&0Ej)
        (record-type-field-names . g$12299$1M&0Ej)
        (record-rtd . g$12298$1M&0Ej)
        (record-field-mutable? . g$12297$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12460$1M&0Ej
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12313$1M&0Ej)
        (record-predicate . g$12312$1M&0Ej)
        (record-mutator . g$12311$1M&0Ej)
        (record-constructor . g$12310$1M&0Ej)
        (record-accessor . g$12309$1M&0Ej)
        (make-record-type-descriptor . g$12308$1M&0Ej)
        (make-record-constructor-descriptor . g$12307$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12461$1M&0Ej
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11882$1M&0Ej)
        (parent-rtd . g$11881$1M&0Ej)
        (nongenerative . g$11880$1M&0Ej)
        (opaque . g$11879$1M&0Ej)
        (sealed . g$11878$1M&0Ej)
        (protocol . g$11877$1M&0Ej)
        (parent . g$11876$1M&0Ej)
        (immutable . g$11875$1M&0Ej)
        (mutable . g$11874$1M&0Ej)
        (fields . g$11873$1M&0Ej)
        (record-constructor-descriptor . g$11834$1M&0Ej)
        (record-type-descriptor . g$11833$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12462$1M&0Ej
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8673$1M&0Ej)
        (&no-nans-rcd . g$12426$1M&0Ej)
        (&no-nans-rtd . g$12425$1M&0Ej)
        (&no-infinities-rcd . g$12424$1M&0Ej)
        (&no-infinities-rtd . g$12423$1M&0Ej)
        (&i/o-encoding-rcd . g$12422$1M&0Ej)
        (&i/o-encoding-rtd . g$12421$1M&0Ej)
        (&i/o-decoding-rcd . g$12420$1M&0Ej)
        (&i/o-decoding-rtd . g$12419$1M&0Ej)
        (&i/o-port-rcd . g$12418$1M&0Ej)
        (&i/o-port-rtd . g$12417$1M&0Ej)
        (&i/o-file-does-not-exist-rcd . g$12416$1M&0Ej)
        (&i/o-file-does-not-exist-rtd . g$12415$1M&0Ej)
        (&i/o-file-already-exists-rcd . g$12414$1M&0Ej)
        (&i/o-file-already-exists-rtd . g$12413$1M&0Ej)
        (&i/o-file-is-read-only-rcd . g$12412$1M&0Ej)
        (&i/o-file-is-read-only-rtd . g$12411$1M&0Ej)
        (&i/o-file-protection-rcd . g$12410$1M&0Ej)
        (&i/o-file-protection-rtd . g$12409$1M&0Ej)
        (&i/o-filename-rcd . g$12408$1M&0Ej)
        (&i/o-filename-rtd . g$12407$1M&0Ej)
        (&i/o-invalid-position-rcd . g$12406$1M&0Ej)
        (&i/o-invalid-position-rtd . g$12405$1M&0Ej)
        (&i/o-write-rcd . g$12404$1M&0Ej)
        (&i/o-write-rtd . g$12403$1M&0Ej)
        (&i/o-read-rcd . g$12402$1M&0Ej)
        (&i/o-read-rtd . g$12401$1M&0Ej)
        (&i/o-rcd . g$12400$1M&0Ej)
        (&i/o-rtd . g$12399$1M&0Ej)
        (&undefined-rcd . g$12398$1M&0Ej)
        (&undefined-rtd . g$12397$1M&0Ej)
        (&syntax-rcd . g$12396$1M&0Ej)
        (&syntax-rtd . g$12395$1M&0Ej)
        (&lexical-rcd . g$12394$1M&0Ej)
        (&lexical-rtd . g$12393$1M&0Ej)
        (&implementation-restriction-rcd . g$12392$1M&0Ej)
        (&implementation-restriction-rtd . g$12391$1M&0Ej)
        (&non-continuable-rcd . g$12390$1M&0Ej)
        (&non-continuable-rtd . g$12389$1M&0Ej)
        (&who-rcd . g$12388$1M&0Ej)
        (&who-rtd . g$12387$1M&0Ej)
        (&irritants-rcd . g$12386$1M&0Ej)
        (&irritants-rtd . g$12385$1M&0Ej)
        (&assertion-rcd . g$12384$1M&0Ej)
        (&assertion-rtd . g$12383$1M&0Ej)
        (&violation-rcd . g$12382$1M&0Ej)
        (&violation-rtd . g$12381$1M&0Ej)
        (&error-rcd . g$12380$1M&0Ej)
        (&error-rtd . g$12379$1M&0Ej)
        (&serious-rcd . g$12378$1M&0Ej)
        (&serious-rtd . g$12377$1M&0Ej)
        (&warning-rcd . g$12376$1M&0Ej)
        (&warning-rtd . g$12375$1M&0Ej)
        (&message-rcd . g$12374$1M&0Ej)
        (&message-rtd . g$12373$1M&0Ej)
        (&condition-rcd . g$12372$1M&0Ej)
        (&condition-rtd . g$12371$1M&0Ej)
        (library-letrec* . g$12370$1M&0Ej)
        (annotation-stripped . g$12369$1M&0Ej)
        (annotation-source . g$12368$1M&0Ej)
        (annotation-expression . g$12367$1M&0Ej)
        (annotation? . g$12366$1M&0Ej)
        (read-annotated . g$12365$1M&0Ej)
        (tanh . g$12364$1M&0Ej)
        (cosh . g$12363$1M&0Ej)
        (sinh . g$12362$1M&0Ej)
        (make-guid . g$12361$1M&0Ej)
        (unspecified? . g$12360$1M&0Ej)
        (make-trace . g$12359$1M&0Ej)
        (make-list . g$12358$1M&0Ej)
        (last-pair . g$12357$1M&0Ej)
        (load-r5rs . g$12356$1M&0Ej)
        (license . g$12355$1M&0Ej)
        (stacktrace . g$12354$1M&0Ej)
        (ironscheme-build . g$11776$1M&0Ej)
        (define-clr-class-internal . g$12353$1M&0Ej)
        (clr-field-set!-internal . g$12352$1M&0Ej)
        (clr-field-get-internal . g$12351$1M&0Ej)
        (clr-cast-internal . g$12350$1M&0Ej)
        (clr-call-internal . g$12349$1M&0Ej)
        (clr-new-internal . g$12348$1M&0Ej)
        (clr-new-array-internal . g$12347$1M&0Ej)
        (clr-is-internal . g$12346$1M&0Ej)
        (clr-reference-internal . g$12345$1M&0Ej)
        (clr-using-internal . g$12344$1M&0Ej)
        (clr-clear-usings-internal . g$12343$1M&0Ej)
        (syntax-error . g$8797$1M&0Ej)
        (syntax-dispatch . g$8668$1M&0Ej)
        (compile-core . g$12342$1M&0Ej)
        (eval-core . g$12341$1M&0Ej)
        (set-symbol-value! . g$12340$1M&0Ej)
        (symbol-value . g$12339$1M&0Ej)
        (ungensym . g$12338$1M&0Ej)
        (gensym . g$12337$1M&0Ej)
        (void . g$12336$1M&0Ej)
        (load-serialized-library . g$12335$1M&0Ej)
        (serialize-library . g$12334$1M&0Ej)
        (compile-system-libraries . g$11778$1M&0Ej)
        (compile->closure . g$11780$1M&0Ej)
        (compile . g$11779$1M&0Ej)
        (load . g$11775$1M&0Ej)
        (interaction-environment . g$8806$1M&0Ej)
        (char-ready? . g$12333$1M&0Ej)
        (string-upcase . g$12332$1M&0Ej)
        (string-titlecase . g$12331$1M&0Ej)
        (string-normalize-nfkd . g$12330$1M&0Ej)
        (string-normalize-nfkc . g$12329$1M&0Ej)
        (string-normalize-nfd . g$12328$1M&0Ej)
        (string-normalize-nfc . g$12327$1M&0Ej)
        (string-foldcase . g$12326$1M&0Ej)
        (string-downcase . g$12325$1M&0Ej)
        (string-ci>? . g$6910$1M&0Ej)
        (string-ci>=? . g$6912$1M&0Ej)
        (string-ci=? . g$6908$1M&0Ej)
        (string-ci<? . g$6909$1M&0Ej)
        (string-ci<=? . g$6911$1M&0Ej)
        (char-whitespace? . g$12324$1M&0Ej)
        (char-upper-case? . g$12323$1M&0Ej)
        (char-title-case? . g$12322$1M&0Ej)
        (char-numeric? . g$12321$1M&0Ej)
        (char-lower-case? . g$12320$1M&0Ej)
        (char-general-category . g$12319$1M&0Ej)
        (char-upcase . g$12318$1M&0Ej)
        (char-titlecase . g$12317$1M&0Ej)
        (char-foldcase . g$12316$1M&0Ej)
        (char-downcase . g$12315$1M&0Ej)
        (char-ci>? . g$6949$1M&0Ej)
        (char-ci>=? . g$6951$1M&0Ej)
        (char-ci=? . g$6947$1M&0Ej)
        (char-ci<? . g$6948$1M&0Ej)
        (char-ci<=? . g$6950$1M&0Ej)
        (char-alphabetic? . g$12314$1M&0Ej)
        (variable-transformer-procedure . g$8405$1M&0Ej)
        (variable-transformer? . g$8404$1M&0Ej)
        (make-variable-transformer . g$8403$1M&0Ej)
        (identifier? . g$8801$1M&0Ej)
        (generate-temporaries . g$8790$1M&0Ej)
        (free-identifier=? . g$8791$1M&0Ej)
        (syntax->datum . g$8803$1M&0Ej)
        (datum->syntax . g$8802$1M&0Ej)
        (bound-identifier=? . g$8792$1M&0Ej)
        (record-type-descriptor? . g$12313$1M&0Ej)
        (record-predicate . g$12312$1M&0Ej)
        (record-mutator . g$12311$1M&0Ej)
        (record-constructor . g$12310$1M&0Ej)
        (record-accessor . g$12309$1M&0Ej)
        (make-record-type-descriptor . g$12308$1M&0Ej)
        (make-record-constructor-descriptor . g$12307$1M&0Ej)
        (record? . g$12306$1M&0Ej)
        (record-type-uid . g$12305$1M&0Ej)
        (record-type-sealed? . g$12304$1M&0Ej)
        (record-type-parent . g$12303$1M&0Ej)
        (record-type-opaque? . g$12302$1M&0Ej)
        (record-type-name . g$12301$1M&0Ej)
        (record-type-generative? . g$12300$1M&0Ej)
        (record-type-field-names . g$12299$1M&0Ej)
        (record-rtd . g$12298$1M&0Ej)
        (record-field-mutable? . g$12297$1M&0Ej)
        (delete-file . g$6485$1M&0Ej)
        (file-exists? . g$6484$1M&0Ej)
        (vector-sort! . g$12296$1M&0Ej)
        (vector-sort . g$12295$1M&0Ej)
        (list-sort . g$6848$1M&0Ej)
        (symbol-hash . g$12294$1M&0Ej)
        (string-ci-hash . g$12293$1M&0Ej)
        (string-hash . g$12292$1M&0Ej)
        (equal-hash . g$12291$1M&0Ej)
        (hashtable-equivalence-function . g$12290$1M&0Ej)
        (make-hashtable . g$12289$1M&0Ej)
        (hashtable-hash-function . g$12288$1M&0Ej)
        (make-eqv-hashtable . g$6452$1M&0Ej)
        (make-eq-hashtable . g$6451$1M&0Ej)
        (hashtable? . g$12287$1M&0Ej)
        (hashtable-update! . g$6458$1M&0Ej)
        (hashtable-size . g$6453$1M&0Ej)
        (hashtable-set! . g$6455$1M&0Ej)
        (hashtable-ref . g$6454$1M&0Ej)
        (hashtable-mutable? . g$12286$1M&0Ej)
        (hashtable-keys . g$12285$1M&0Ej)
        (hashtable-entries . g$12284$1M&0Ej)
        (hashtable-delete! . g$6456$1M&0Ej)
        (hashtable-copy . g$12283$1M&0Ej)
        (hashtable-contains? . g$6457$1M&0Ej)
        (hashtable-clear! . g$6459$1M&0Ej)
        (call-with-output-file . g$7338$1M&0Ej)
        (call-with-input-file . g$7337$1M&0Ej)
        (write-char . g$12282$1M&0Ej)
        (write . g$12281$1M&0Ej)
        (with-output-to-file . g$7336$1M&0Ej)
        (with-input-from-file . g$7335$1M&0Ej)
        (read-char . g$12280$1M&0Ej)
        (read . g$12279$1M&0Ej)
        (peek-char . g$12278$1M&0Ej)
        (open-output-file . g$12277$1M&0Ej)
        (open-input-file . g$12276$1M&0Ej)
        (newline . g$12275$1M&0Ej)
        (display . g$12274$1M&0Ej)
        (close-output-port . g$12273$1M&0Ej)
        (close-input-port . g$12272$1M&0Ej)
        (eof-object? . g$12271$1M&0Ej)
        (eof-object . g$12270$1M&0Ej)
        (current-error-port . g$12269$1M&0Ej)
        (current-output-port . g$12268$1M&0Ej)
        (current-input-port . g$12267$1M&0Ej)
        (output-port? . g$12266$1M&0Ej)
        (input-port? . g$12265$1M&0Ej)
        (utf-8-codec . g$12264$1M&0Ej)
        (utf-16-codec . g$12263$1M&0Ej)
        (transcoder-error-handling-mode . g$12262$1M&0Ej)
        (transcoder-eol-style . g$12261$1M&0Ej)
        (transcoder-codec . g$12260$1M&0Ej)
        (transcoded-port . g$12259$1M&0Ej)
        (textual-port? . g$12258$1M&0Ej)
        (string->bytevector . g$12257$1M&0Ej)
        (standard-output-port . g$12256$1M&0Ej)
        (standard-input-port . g$12255$1M&0Ej)
        (standard-error-port . g$12254$1M&0Ej)
        (set-port-position! . g$12253$1M&0Ej)
        (put-u8 . g$12252$1M&0Ej)
        (put-string . g$12251$1M&0Ej)
        (put-datum . g$12250$1M&0Ej)
        (put-char . g$12249$1M&0Ej)
        (put-bytevector . g$12248$1M&0Ej)
        (port? . g$7314$1M&0Ej)
        (port-transcoder . g$12247$1M&0Ej)
        (port-position . g$12246$1M&0Ej)
        (port-has-set-port-position!? . g$12245$1M&0Ej)
        (port-has-port-position? . g$12244$1M&0Ej)
        (port-eof? . g$12243$1M&0Ej)
        (output-port-buffer-mode . g$12242$1M&0Ej)
        (open-string-output-port . g$7313$1M&0Ej)
        (open-string-input-port . g$12241$1M&0Ej)
        (open-file-output-port . g$12240$1M&0Ej)
        (open-file-input/output-port . g$12239$1M&0Ej)
        (open-file-input-port . g$12238$1M&0Ej)
        (open-bytevector-output-port . g$12237$1M&0Ej)
        (open-bytevector-input-port . g$12236$1M&0Ej)
        (native-transcoder . g$12235$1M&0Ej)
        (native-eol-style . g$12234$1M&0Ej)
        (make-transcoder . g$12233$1M&0Ej)
        (latin-1-codec . g$12232$1M&0Ej)
        (make-i/o-write-error . g$7170$1M&0Ej)
        (make-i/o-read-error . g$7156$1M&0Ej)
        (make-i/o-port-error . g$7275$1M&0Ej)
        (make-i/o-invalid-position-error . g$7185$1M&0Ej)
        (make-i/o-filename-error . g$7202$1M&0Ej)
        (make-i/o-file-protection-error . g$7218$1M&0Ej)
        (make-i/o-file-is-read-only-error . g$7232$1M&0Ej)
        (make-i/o-file-does-not-exist-error . g$7260$1M&0Ej)
        (make-i/o-file-already-exists-error . g$7246$1M&0Ej)
        (make-i/o-error . g$7142$1M&0Ej)
        (make-i/o-encoding-error . g$7306$1M&0Ej)
        (make-i/o-decoding-error . g$7291$1M&0Ej)
        (make-custom-textual-output-port . g$12231$1M&0Ej)
        (make-custom-textual-input/output-port . g$12230$1M&0Ej)
        (make-custom-textual-input-port . g$12229$1M&0Ej)
        (make-custom-binary-output-port . g$12228$1M&0Ej)
        (make-custom-binary-input/output-port . g$12227$1M&0Ej)
        (make-custom-binary-input-port . g$12226$1M&0Ej)
        (make-bytevector . g$12225$1M&0Ej)
        (lookahead-u8 . g$12224$1M&0Ej)
        (lookahead-char . g$12223$1M&0Ej)
        (i/o-write-error? . g$7171$1M&0Ej)
        (i/o-read-error? . g$7157$1M&0Ej)
        (i/o-port-error? . g$7277$1M&0Ej)
        (i/o-invalid-position-error? . g$7187$1M&0Ej)
        (i/o-error-position . g$7188$1M&0Ej)
        (i/o-filename-error? . g$7204$1M&0Ej)
        (i/o-file-protection-error? . g$7219$1M&0Ej)
        (i/o-file-is-read-only-error? . g$7233$1M&0Ej)
        (i/o-file-does-not-exist-error? . g$7261$1M&0Ej)
        (i/o-file-already-exists-error? . g$7247$1M&0Ej)
        (i/o-error? . g$7143$1M&0Ej)
        (i/o-error-port . g$7278$1M&0Ej)
        (i/o-error-filename . g$7205$1M&0Ej)
        (i/o-encoding-error? . g$7308$1M&0Ej)
        (i/o-encoding-error-char . g$7309$1M&0Ej)
        (i/o-decoding-error? . g$7292$1M&0Ej)
        (get-u8 . g$12222$1M&0Ej)
        (get-string-n! . g$12221$1M&0Ej)
        (get-string-n . g$12220$1M&0Ej)
        (get-string-all . g$12219$1M&0Ej)
        (get-line . g$12218$1M&0Ej)
        (get-datum . g$12217$1M&0Ej)
        (get-char . g$12216$1M&0Ej)
        (get-bytevector-some . g$12215$1M&0Ej)
        (get-bytevector-n! . g$12214$1M&0Ej)
        (get-bytevector-n . g$12213$1M&0Ej)
        (get-bytevector-all . g$12212$1M&0Ej)
        (flush-output-port . g$12211$1M&0Ej)
        (close-port . g$12210$1M&0Ej)
        (call-with-string-output-port . g$12209$1M&0Ej)
        (call-with-port . g$12208$1M&0Ej)
        (call-with-bytevector-output-port . g$12207$1M&0Ej)
        (bytevector->string . g$12206$1M&0Ej)
        (buffer-mode? . g$12205$1M&0Ej)
        (binary-port? . g$12204$1M&0Ej)
        (scheme-report-environment . g$8781$1M&0Ej)
        (quotient . g$6828$1M&0Ej)
        (null-environment . g$8780$1M&0Ej)
        (remainder . g$6829$1M&0Ej)
        (modulo . g$6830$1M&0Ej)
        (inexact->exact . g$12203$1M&0Ej)
        (force . g$6832$1M&0Ej)
        (exact->inexact . g$12202$1M&0Ej)
        (exit . g$12201$1M&0Ej)
        (command-line . g$11772$1M&0Ej)
        (string-fill! . g$12200$1M&0Ej)
        (string-set! . g$12199$1M&0Ej)
        (set-cdr! . g$12198$1M&0Ej)
        (set-car! . g$12197$1M&0Ej)
        (remove . g$5846$1M&0Ej)
        (remv . g$5847$1M&0Ej)
        (remp . g$5829$1M&0Ej)
        (remq . g$5848$1M&0Ej)
        (partition . g$5828$1M&0Ej)
        (memv . g$5836$1M&0Ej)
        (memq . g$5835$1M&0Ej)
        (memp . g$5838$1M&0Ej)
        (member . g$5837$1M&0Ej)
        (exists . g$5842$1M&0Ej)
        (for-all . g$5841$1M&0Ej)
        (fold-right . g$5845$1M&0Ej)
        (fold-left . g$5844$1M&0Ej)
        (find . g$5827$1M&0Ej)
        (filter . g$5830$1M&0Ej)
        (cons* . g$5843$1M&0Ej)
        (assv . g$5832$1M&0Ej)
        (assq . g$5831$1M&0Ej)
        (assp . g$5834$1M&0Ej)
        (assoc . g$5833$1M&0Ej)
        (with-exception-handler . g$12196$1M&0Ej)
        (raise-continuable . g$12195$1M&0Ej)
        (raise . g$12194$1M&0Ej)
        (eval . g$8783$1M&0Ej)
        (environment . g$8779$1M&0Ej)
        (make-enumeration . g$7396$1M&0Ej)
        (enum-set=? . g$7403$1M&0Ej)
        (enum-set-universe . g$7397$1M&0Ej)
        (enum-set-union . g$7404$1M&0Ej)
        (enum-set-subset? . g$7402$1M&0Ej)
        (enum-set-projection . g$7408$1M&0Ej)
        (enum-set-member? . g$7401$1M&0Ej)
        (enum-set-intersection . g$7405$1M&0Ej)
        (enum-set-indexer . g$7398$1M&0Ej)
        (enum-set-difference . g$7406$1M&0Ej)
        (enum-set-constructor . g$7399$1M&0Ej)
        (enum-set-complement . g$7407$1M&0Ej)
        (enum-set->list . g$7400$1M&0Ej)
        (who-condition? . g$6739$1M&0Ej)
        (warning? . g$6650$1M&0Ej)
        (violation? . g$6692$1M&0Ej)
        (undefined-violation? . g$6816$1M&0Ej)
        (syntax-violation? . g$6800$1M&0Ej)
        (syntax-violation-subform . g$6802$1M&0Ej)
        (syntax-violation-form . g$6801$1M&0Ej)
        (syntax-violation . g$8800$1M&0Ej)
        (simple-conditions . g$12193$1M&0Ej)
        (serious-condition? . g$6664$1M&0Ej)
        (non-continuable-violation? . g$6754$1M&0Ej)
        (message-condition? . g$6635$1M&0Ej)
        (make-who-condition . g$6737$1M&0Ej)
        (make-warning . g$6649$1M&0Ej)
        (make-violation . g$6691$1M&0Ej)
        (make-undefined-violation . g$6815$1M&0Ej)
        (make-syntax-violation . g$6797$1M&0Ej)
        (make-serious-condition . g$6663$1M&0Ej)
        (make-non-continuable-violation . g$6753$1M&0Ej)
        (make-message-condition . g$6633$1M&0Ej)
        (make-lexical-violation . g$6781$1M&0Ej)
        (make-irritants-condition . g$6720$1M&0Ej)
        (make-implementation-restriction-violation . g$6767$1M&0Ej)
        (make-error . g$6677$1M&0Ej)
        (make-assertion-violation . g$6705$1M&0Ej)
        (lexical-violation? . g$6782$1M&0Ej)
        (irritants-condition? . g$6722$1M&0Ej)
        (implementation-restriction-violation? . g$6768$1M&0Ej)
        (error? . g$6678$1M&0Ej)
        (condition-who . g$6740$1M&0Ej)
        (condition-predicate . g$12192$1M&0Ej)
        (condition-message . g$6636$1M&0Ej)
        (condition-irritants . g$6723$1M&0Ej)
        (condition-accessor . g$12191$1M&0Ej)
        (condition . g$12190$1M&0Ej)
        (assertion-violation? . g$6706$1M&0Ej)
        (condition? . g$12189$1M&0Ej)
        (utf32->string . g$12188$1M&0Ej)
        (utf16->string . g$12187$1M&0Ej)
        (utf8->string . g$12186$1M&0Ej)
        (uint-list->bytevector . g$12185$1M&0Ej)
        (u8-list->bytevector . g$12184$1M&0Ej)
        (string->utf8 . g$12183$1M&0Ej)
        (string->utf32 . g$12182$1M&0Ej)
        (string->utf16 . g$12181$1M&0Ej)
        (sint-list->bytevector . g$12180$1M&0Ej)
        (native-endianness . g$6491$1M&0Ej)
        (bytevector? . g$12179$1M&0Ej)
        (bytevector=? . g$12178$1M&0Ej)
        (bytevector-uint-set! . g$12177$1M&0Ej)
        (bytevector-uint-ref . g$12176$1M&0Ej)
        (bytevector-u8-set! . g$12175$1M&0Ej)
        (bytevector-u8-ref . g$12174$1M&0Ej)
        (bytevector-u64-set! . g$6512$1M&0Ej)
        (bytevector-u64-ref . g$6508$1M&0Ej)
        (bytevector-u64-native-set! . g$6514$1M&0Ej)
        (bytevector-u64-native-ref . g$6510$1M&0Ej)
        (bytevector-u32-set! . g$6504$1M&0Ej)
        (bytevector-u32-ref . g$6500$1M&0Ej)
        (bytevector-u32-native-set! . g$6506$1M&0Ej)
        (bytevector-u32-native-ref . g$6502$1M&0Ej)
        (bytevector-u16-set! . g$6496$1M&0Ej)
        (bytevector-u16-ref . g$6492$1M&0Ej)
        (bytevector-u16-native-set! . g$6498$1M&0Ej)
        (bytevector-u16-native-ref . g$6494$1M&0Ej)
        (bytevector-sint-set! . g$12173$1M&0Ej)
        (bytevector-sint-ref . g$12172$1M&0Ej)
        (bytevector-s8-set! . g$12171$1M&0Ej)
        (bytevector-s8-ref . g$12170$1M&0Ej)
        (bytevector-s64-set! . g$6513$1M&0Ej)
        (bytevector-s64-ref . g$6509$1M&0Ej)
        (bytevector-s64-native-set! . g$6515$1M&0Ej)
        (bytevector-s64-native-ref . g$6511$1M&0Ej)
        (bytevector-s32-set! . g$6505$1M&0Ej)
        (bytevector-s32-ref . g$6501$1M&0Ej)
        (bytevector-s32-native-set! . g$6507$1M&0Ej)
        (bytevector-s32-native-ref . g$6503$1M&0Ej)
        (bytevector-s16-set! . g$6497$1M&0Ej)
        (bytevector-s16-ref . g$6493$1M&0Ej)
        (bytevector-s16-native-set! . g$6499$1M&0Ej)
        (bytevector-s16-native-ref . g$6495$1M&0Ej)
        (bytevector-length . g$12169$1M&0Ej)
        (bytevector-ieee-single-set! . g$12168$1M&0Ej)
        (bytevector-ieee-single-ref . g$12167$1M&0Ej)
        (bytevector-ieee-single-native-set! . g$6518$1M&0Ej)
        (bytevector-ieee-single-native-ref . g$6516$1M&0Ej)
        (bytevector-ieee-double-set! . g$12166$1M&0Ej)
        (bytevector-ieee-double-ref . g$12165$1M&0Ej)
        (bytevector-ieee-double-native-set! . g$6519$1M&0Ej)
        (bytevector-ieee-double-native-ref . g$6517$1M&0Ej)
        (bytevector-fill! . g$12164$1M&0Ej)
        (bytevector-copy! . g$12163$1M&0Ej)
        (bytevector-copy . g$12162$1M&0Ej)
        (bytevector->uint-list . g$12161$1M&0Ej)
        (bytevector->u8-list . g$12160$1M&0Ej)
        (bytevector->sint-list . g$12159$1M&0Ej)
        (no-nans-violation? . g$7128$1M&0Ej)
        (no-infinities-violation? . g$7114$1M&0Ej)
        (make-no-nans-violation . g$7127$1M&0Ej)
        (make-no-infinities-violation . g$7113$1M&0Ej)
        (real->flonum . g$12158$1M&0Ej)
        (flzero? . g$12157$1M&0Ej)
        (fltruncate . g$12156$1M&0Ej)
        (fltan . g$12155$1M&0Ej)
        (flsqrt . g$12154$1M&0Ej)
        (flsin . g$12153$1M&0Ej)
        (flround . g$12152$1M&0Ej)
        (flpositive? . g$12151$1M&0Ej)
        (flonum? . g$12150$1M&0Ej)
        (flodd? . g$12149$1M&0Ej)
        (flnumerator . g$12148$1M&0Ej)
        (flnegative? . g$12147$1M&0Ej)
        (flnan? . g$12146$1M&0Ej)
        (flmod0 . g$12145$1M&0Ej)
        (flmod . g$12144$1M&0Ej)
        (flmin . g$12143$1M&0Ej)
        (flmax . g$12142$1M&0Ej)
        (fllog . g$12141$1M&0Ej)
        (flinteger? . g$12140$1M&0Ej)
        (flinfinite? . g$12139$1M&0Ej)
        (flfloor . g$12138$1M&0Ej)
        (flfinite? . g$12137$1M&0Ej)
        (flexpt . g$12136$1M&0Ej)
        (flexp . g$12135$1M&0Ej)
        (fleven? . g$12134$1M&0Ej)
        (fldiv0-and-mod0 . g$12133$1M&0Ej)
        (fldiv0 . g$12132$1M&0Ej)
        (fldiv-and-mod . g$12131$1M&0Ej)
        (fldiv . g$12130$1M&0Ej)
        (fldenominator . g$12129$1M&0Ej)
        (flcos . g$12128$1M&0Ej)
        (flceiling . g$12127$1M&0Ej)
        (flatan . g$12126$1M&0Ej)
        (flasin . g$12125$1M&0Ej)
        (flacos . g$12124$1M&0Ej)
        (flabs . g$12123$1M&0Ej)
        (fl>? . g$12122$1M&0Ej)
        (fl>=? . g$12121$1M&0Ej)
        (fl=? . g$12120$1M&0Ej)
        (fl<? . g$12119$1M&0Ej)
        (fl<=? . g$12118$1M&0Ej)
        (fl/ . g$12117$1M&0Ej)
        (fl- . g$12116$1M&0Ej)
        (fl+ . g$12115$1M&0Ej)
        (fl* . g$12114$1M&0Ej)
        (fixnum->flonum . g$12113$1M&0Ej)
        (fxzero? . g$12112$1M&0Ej)
        (fxxor . g$12111$1M&0Ej)
        (fxrotate-bit-field . g$7059$1M&0Ej)
        (fxreverse-bit-field . g$12110$1M&0Ej)
        (fxpositive? . g$12109$1M&0Ej)
        (fxodd? . g$12108$1M&0Ej)
        (fxnot . g$12107$1M&0Ej)
        (fxnegative? . g$12106$1M&0Ej)
        (fxmod0 . g$12105$1M&0Ej)
        (fxmod . g$12104$1M&0Ej)
        (fxmin . g$12103$1M&0Ej)
        (fxmax . g$12102$1M&0Ej)
        (fxlength . g$12101$1M&0Ej)
        (fxior . g$12100$1M&0Ej)
        (fxif . g$7053$1M&0Ej)
        (fxfirst-bit-set . g$12099$1M&0Ej)
        (fxeven? . g$12098$1M&0Ej)
        (fxdiv0-and-mod0 . g$12097$1M&0Ej)
        (fxdiv0 . g$12096$1M&0Ej)
        (fxdiv-and-mod . g$12095$1M&0Ej)
        (fxdiv . g$12094$1M&0Ej)
        (fxcopy-bit-field . g$7056$1M&0Ej)
        (fxcopy-bit . g$7054$1M&0Ej)
        (fxbit-set? . g$12093$1M&0Ej)
        (fxbit-field . g$7055$1M&0Ej)
        (fxbit-count . g$12092$1M&0Ej)
        (fxarithmetic-shift-right . g$7058$1M&0Ej)
        (fxarithmetic-shift-left . g$7057$1M&0Ej)
        (fxarithmetic-shift . g$12091$1M&0Ej)
        (fxand . g$12090$1M&0Ej)
        (fx>? . g$12089$1M&0Ej)
        (fx>=? . g$12088$1M&0Ej)
        (fx=? . g$12087$1M&0Ej)
        (fx<? . g$12086$1M&0Ej)
        (fx<=? . g$12085$1M&0Ej)
        (fx-/carry . g$12084$1M&0Ej)
        (fx- . g$12083$1M&0Ej)
        (fx+/carry . g$12082$1M&0Ej)
        (fx+ . g$12081$1M&0Ej)
        (fx*/carry . g$12080$1M&0Ej)
        (fx* . g$12079$1M&0Ej)
        (greatest-fixnum . g$12078$1M&0Ej)
        (least-fixnum . g$12077$1M&0Ej)
        (fixnum-width . g$12076$1M&0Ej)
        (fixnum? . g$12075$1M&0Ej)
        (bitwise-rotate-bit-field . g$7011$1M&0Ej)
        (bitwise-reverse-bit-field . g$12074$1M&0Ej)
        (bitwise-length . g$12073$1M&0Ej)
        (bitwise-if . g$7005$1M&0Ej)
        (bitwise-first-bit-set . g$12072$1M&0Ej)
        (bitwise-copy-bit-field . g$7008$1M&0Ej)
        (bitwise-copy-bit . g$7006$1M&0Ej)
        (bitwise-bit-set? . g$12071$1M&0Ej)
        (bitwise-bit-field . g$12070$1M&0Ej)
        (bitwise-bit-count . g$12069$1M&0Ej)
        (bitwise-xor . g$12068$1M&0Ej)
        (bitwise-ior . g$12067$1M&0Ej)
        (bitwise-and . g$12066$1M&0Ej)
        (bitwise-not . g$12065$1M&0Ej)
        (bitwise-arithmetic-shift-right . g$7010$1M&0Ej)
        (bitwise-arithmetic-shift-left . g$7009$1M&0Ej)
        (bitwise-arithmetic-shift . g$12064$1M&0Ej)
        (zero? . g$12063$1M&0Ej)
        (vector? . g$12062$1M&0Ej)
        (vector-set! . g$12061$1M&0Ej)
        (vector-ref . g$12060$1M&0Ej)
        (vector-map . g$12059$1M&0Ej)
        (vector-length . g$12058$1M&0Ej)
        (vector-for-each . g$12057$1M&0Ej)
        (vector-fill! . g$12056$1M&0Ej)
        (vector->list . g$12055$1M&0Ej)
        (vector . g$12054$1M&0Ej)
        (values . g$12053$1M&0Ej)
        (truncate . g$12052$1M&0Ej)
        (tan . g$12051$1M&0Ej)
        (symbol? . g$12050$1M&0Ej)
        (symbol=? . g$6000$1M&0Ej)
        (symbol->string . g$12049$1M&0Ej)
        (substring . g$12048$1M&0Ej)
        (string? . g$12047$1M&0Ej)
        (string>? . g$5997$1M&0Ej)
        (string>=? . g$5999$1M&0Ej)
        (string=? . g$5995$1M&0Ej)
        (string<? . g$5996$1M&0Ej)
        (string<=? . g$5998$1M&0Ej)
        (string-ref . g$12046$1M&0Ej)
        (string-length . g$12045$1M&0Ej)
        (string-for-each . g$12044$1M&0Ej)
        (string-copy . g$12043$1M&0Ej)
        (string-append . g$12042$1M&0Ej)
        (string->symbol . g$12041$1M&0Ej)
        (string->number . g$12040$1M&0Ej)
        (string->list . g$12039$1M&0Ej)
        (string . g$12038$1M&0Ej)
        (sqrt . g$12037$1M&0Ej)
        (sin . g$12036$1M&0Ej)
        (round . g$12035$1M&0Ej)
        (reverse . g$12034$1M&0Ej)
        (real? . g$12033$1M&0Ej)
        (real-valued? . g$12032$1M&0Ej)
        (real-part . g$12031$1M&0Ej)
        (rationalize . g$6041$1M&0Ej)
        (rational? . g$12030$1M&0Ej)
        (rational-valued? . g$12029$1M&0Ej)
        (procedure? . g$12028$1M&0Ej)
        (positive? . g$12027$1M&0Ej)
        (pair? . g$12026$1M&0Ej)
        (odd? . g$12025$1M&0Ej)
        (numerator . g$12024$1M&0Ej)
        (number? . g$12023$1M&0Ej)
        (number->string . g$12022$1M&0Ej)
        (null? . g$12021$1M&0Ej)
        (not . g$12020$1M&0Ej)
        (negative? . g$12019$1M&0Ej)
        (nan? . g$12018$1M&0Ej)
        (min . g$12017$1M&0Ej)
        (max . g$12016$1M&0Ej)
        (map . g$12015$1M&0Ej)
        (make-vector . g$12014$1M&0Ej)
        (make-string . g$12013$1M&0Ej)
        (make-rectangular . g$12012$1M&0Ej)
        (make-polar . g$12011$1M&0Ej)
        (magnitude . g$12010$1M&0Ej)
        (log . g$12009$1M&0Ej)
        (list? . g$12008$1M&0Ej)
        (list-tail . g$12007$1M&0Ej)
        (list-ref . g$12006$1M&0Ej)
        (list->vector . g$12005$1M&0Ej)
        (list->string . g$12004$1M&0Ej)
        (list . g$12003$1M&0Ej)
        (length . g$12002$1M&0Ej)
        (lcm . g$12001$1M&0Ej)
        (integer? . g$12000$1M&0Ej)
        (integer-valued? . g$11999$1M&0Ej)
        (integer->char . g$11998$1M&0Ej)
        (infinite? . g$11997$1M&0Ej)
        (inexact? . g$11996$1M&0Ej)
        (inexact . g$11995$1M&0Ej)
        (imag-part . g$11994$1M&0Ej)
        (gcd . g$11993$1M&0Ej)
        (for-each . g$11992$1M&0Ej)
        (floor . g$11991$1M&0Ej)
        (finite? . g$11990$1M&0Ej)
        (expt . g$11989$1M&0Ej)
        (exp . g$11988$1M&0Ej)
        (exact? . g$11987$1M&0Ej)
        (exact-integer-sqrt . g$11986$1M&0Ej)
        (exact . g$11985$1M&0Ej)
        (even? . g$11984$1M&0Ej)
        (error . g$11983$1M&0Ej)
        (eqv? . g$11982$1M&0Ej)
        (equal? . g$11981$1M&0Ej)
        (eq? . g$11980$1M&0Ej)
        (dynamic-wind . g$11979$1M&0Ej)
        (div0-and-mod0 . g$11978$1M&0Ej)
        (mod0 . g$11977$1M&0Ej)
        (div0 . g$11976$1M&0Ej)
        (div-and-mod . g$11975$1M&0Ej)
        (mod . g$11974$1M&0Ej)
        (div . g$11973$1M&0Ej)
        (denominator . g$11972$1M&0Ej)
        (cos . g$11971$1M&0Ej)
        (cons . g$11970$1M&0Ej)
        (complex? . g$11969$1M&0Ej)
        (char? . g$11968$1M&0Ej)
        (char>? . g$6038$1M&0Ej)
        (char>=? . g$6040$1M&0Ej)
        (char=? . g$6036$1M&0Ej)
        (char<? . g$6037$1M&0Ej)
        (char<=? . g$6039$1M&0Ej)
        (char->integer . g$11967$1M&0Ej)
        (ceiling . g$11966$1M&0Ej)
        (call-with-values . g$11965$1M&0Ej)
        (call/cc . g$11964$1M&0Ej)
        (call-with-current-continuation . g$11963$1M&0Ej)
        (cddddr . g$5960$1M&0Ej)
        (cdddar . g$5959$1M&0Ej)
        (cddadr . g$5958$1M&0Ej)
        (cddaar . g$5957$1M&0Ej)
        (cdaddr . g$5956$1M&0Ej)
        (cdadar . g$5955$1M&0Ej)
        (cdaadr . g$5954$1M&0Ej)
        (cdaaar . g$5953$1M&0Ej)
        (cadddr . g$5952$1M&0Ej)
        (caddar . g$5951$1M&0Ej)
        (cadadr . g$5950$1M&0Ej)
        (cadaar . g$5949$1M&0Ej)
        (caaddr . g$5948$1M&0Ej)
        (caadar . g$5947$1M&0Ej)
        (caaadr . g$5946$1M&0Ej)
        (caaaar . g$5945$1M&0Ej)
        (cdddr . g$5944$1M&0Ej)
        (cddar . g$5943$1M&0Ej)
        (cdadr . g$5942$1M&0Ej)
        (cdaar . g$5941$1M&0Ej)
        (caddr . g$5940$1M&0Ej)
        (cadar . g$5939$1M&0Ej)
        (caadr . g$5938$1M&0Ej)
        (caaar . g$5937$1M&0Ej)
        (cddr . g$5936$1M&0Ej)
        (cdar . g$5935$1M&0Ej)
        (cadr . g$5934$1M&0Ej)
        (caar . g$5933$1M&0Ej)
        (cdr . g$11962$1M&0Ej)
        (car . g$11961$1M&0Ej)
        (boolean? . g$11960$1M&0Ej)
        (boolean=? . g$6001$1M&0Ej)
        (atan . g$11959$1M&0Ej)
        (assertion-violation . g$11958$1M&0Ej)
        (asin . g$11957$1M&0Ej)
        (apply . g$11956$1M&0Ej)
        (append . g$11955$1M&0Ej)
        (angle . g$11954$1M&0Ej)
        (acos . g$11953$1M&0Ej)
        (abs . g$11952$1M&0Ej)
        (/ . g$11951$1M&0Ej)
        (* . g$11950$1M&0Ej)
        (- . g$11949$1M&0Ej)
        (+ . g$11948$1M&0Ej)
        (>= . g$11947$1M&0Ej)
        (> . g$11946$1M&0Ej)
        (= . g$11945$1M&0Ej)
        (<= . g$11944$1M&0Ej)
        (< . g$11943$1M&0Ej)
        (make-record-printer . g$11942$1M&0Ej)
        (eqv-hash . g$11941$1M&0Ej)
        (reverse! . g$11940$1M&0Ej)
        (deserialize-port . g$11939$1M&0Ej)
        (serialize-port . g$11938$1M&0Ej)
        (enum-set? . g$7371$1M&0Ej)
        (make-promise . g$6831$1M&0Ej)
        (load/args . g$11774$1M&0Ej)
        (printf . g$7481$1M&0Ej)
        (fprintf . g$7482$1M&0Ej)
        (format . g$7483$1M&0Ej)
        (procedure-form . g$11937$1M&0Ej)
        (procedure-environment . g$11936$1M&0Ej)
        (procedure-name . g$11935$1M&0Ej)
        (procedure-arity . g$11934$1M&0Ej)
        (gc-collect . g$11933$1M&0Ej)
        (clr-type? . g$11932$1M&0Ej)
        (get-clr-type . g$11931$1M&0Ej)
        (get-command-line . g$11930$1M&0Ej)
        (vector-append . g$11929$1M&0Ej)
        (vector-filter . g$11928$1M&0Ej)
        (vector-reverse! . g$11927$1M&0Ej)
        (vector-contains? . g$11926$1M&0Ej)
        (vector-index-of . g$11925$1M&0Ej)
        (vector-copy . g$11924$1M&0Ej)
        (vector-binary-search . g$11923$1M&0Ej)
        (string-ci-compare . g$11922$1M&0Ej)
        (string-compare . g$11921$1M&0Ej)
        (string-format . g$11920$1M&0Ej)
        (trace-printer . g$11771$1M&0Ej)
        (make-traced-procedure . g$11919$1M&0Ej)
        (make-traced-macro . g$7503$1M&0Ej)
        (assertion-error . g$8796$1M&0Ej)
        (pmap . g$11918$1M&0Ej)
        (time-it . g$11917$1M&0Ej)
        (make-parameter . g$7508$1M&0Ej)
        (library-locator . g$11916$1M&0Ej)
        (get-library-paths . g$11915$1M&0Ej)
        (environment-bindings . g$8775$1M&0Ej)
        (environment-symbols . g$8778$1M&0Ej)
        (interaction-environment-symbols . g$8774$1M&0Ej)
        (optimization-level . g$11914$1M&0Ej)
        (library-path . g$7938$1M&0Ej)
        (&no-nans . g$11913$1M&0Ej)
        (&no-infinities . g$11912$1M&0Ej)
        (&i/o-encoding . g$11911$1M&0Ej)
        (&i/o-decoding . g$11910$1M&0Ej)
        (&i/o-port . g$11909$1M&0Ej)
        (&i/o-file-does-not-exist . g$11908$1M&0Ej)
        (&i/o-file-already-exists . g$11907$1M&0Ej)
        (&i/o-file-is-read-only . g$11906$1M&0Ej)
        (&i/o-file-protection . g$11905$1M&0Ej)
        (&i/o-filename . g$11904$1M&0Ej)
        (&i/o-invalid-position . g$11903$1M&0Ej)
        (&i/o-write . g$11902$1M&0Ej)
        (&i/o-read . g$11901$1M&0Ej)
        (&i/o . g$11900$1M&0Ej)
        (&non-continuable . g$11899$1M&0Ej)
        (&undefined . g$11898$1M&0Ej)
        (&syntax . g$11897$1M&0Ej)
        (&lexical . g$11896$1M&0Ej)
        (&implementation-restriction . g$11895$1M&0Ej)
        (&non . g$11894$1M&0Ej)
        (&who . g$11893$1M&0Ej)
        (&irritants . g$11892$1M&0Ej)
        (&assertion . g$11891$1M&0Ej)
        (&violation . g$11890$1M&0Ej)
        (&error . g$11889$1M&0Ej)
        (&serious . g$11888$1M&0Ej)
        (&warning . g$11887$1M&0Ej)
        (&message . g$11886$1M&0Ej)
        (&condition . g$11885$1M&0Ej)
        (define-condition-type . g$11884$1M&0Ej)
        (define-enumeration . g$11883$1M&0Ej)
        (define-record-type . g$11882$1M&0Ej)
        (parent-rtd . g$11881$1M&0Ej)
        (nongenerative . g$11880$1M&0Ej)
        (opaque . g$11879$1M&0Ej)
        (sealed . g$11878$1M&0Ej)
        (protocol . g$11877$1M&0Ej)
        (parent . g$11876$1M&0Ej)
        (immutable . g$11875$1M&0Ej)
        (mutable . g$11874$1M&0Ej)
        (fields . g$11873$1M&0Ej)
        (error-handling-mode . g$11872$1M&0Ej)
        (file-options . g$11871$1M&0Ej)
        (buffer-mode . g$11870$1M&0Ej)
        (eol-style . g$11869$1M&0Ej)
        (guard . g$11868$1M&0Ej)
        (trace-letrec-syntax . g$11867$1M&0Ej)
        (trace-let-syntax . g$11866$1M&0Ej)
        (trace-define-syntax . g$11865$1M&0Ej)
        (trace-define . g$11864$1M&0Ej)
        (trace-lambda . g$11863$1M&0Ej)
        (unsyntax-splicing . g$11862$1M&0Ej)
        (unsyntax . g$11861$1M&0Ej)
        (unquote-splicing . g$11860$1M&0Ej)
        (unquote . g$11859$1M&0Ej)
        (_ . g$11858$1M&0Ej)
        (else . g$11857$1M&0Ej)
        (=> . g$11856$1M&0Ej)
        (... . g$11855$1M&0Ej)
        (assert . g$11854$1M&0Ej)
        (endianness . g$11853$1M&0Ej)
        (delay . g$11852$1M&0Ej)
        (time . g$11851$1M&0Ej)
        (or . g$11850$1M&0Ej)
        (and . g$11849$1M&0Ej)
        (do . g$11848$1M&0Ej)
        (cond . g$11847$1M&0Ej)
        (let* . g$11846$1M&0Ej)
        (let . g$11845$1M&0Ej)
        (identifier-syntax . g$11844$1M&0Ej)
        (with-syntax . g$11843$1M&0Ej)
        (quasisyntax . g$11842$1M&0Ej)
        (quasiquote . g$11841$1M&0Ej)
        (syntax-rules . g$11840$1M&0Ej)
        (include-into . g$11839$1M&0Ej)
        (include . g$11838$1M&0Ej)
        (define-struct . g$11837$1M&0Ej)
        (let-values . g$11836$1M&0Ej)
        (let*-values . g$11835$1M&0Ej)
        (record-constructor-descriptor . g$11834$1M&0Ej)
        (record-type-descriptor . g$11833$1M&0Ej)
        (fluid-let-syntax . g$11832$1M&0Ej)
        (case . g$11831$1M&0Ej)
        (parameterize . g$11830$1M&0Ej)
        (unless . g$11829$1M&0Ej)
        (when . g$11828$1M&0Ej)
        (if . g$11827$1M&0Ej)
        (letrec* . g$11826$1M&0Ej)
        (letrec . g$11825$1M&0Ej)
        (type-descriptor . g$11824$1M&0Ej)
        (case-lambda . g$11823$1M&0Ej)
        (lambda . g$11822$1M&0Ej)
        (syntax . g$11821$1M&0Ej)
        (syntax-case . g$11820$1M&0Ej)
        (quote . g$11819$1M&0Ej)
        (foreign-call . g$11818$1M&0Ej)
        (letrec-syntax . g$11817$1M&0Ej)
        (let-syntax . g$11816$1M&0Ej)
        (set! . g$11815$1M&0Ej)
        (export . g$11814$1M&0Ej)
        (import . g$11813$1M&0Ej)
        (library . g$11812$1M&0Ej)
        (begin . g$11811$1M&0Ej)
        (module . g$11810$1M&0Ej)
        (define-syntax . g$11809$1M&0Ej)
        (define . g$11808$1M&0Ej))
      '((g$8673$1M&0Ej core-prim . ellipsis-map)
        (g$12426$1M&0Ej core-prim . &no-nans-rcd)
        (g$12425$1M&0Ej core-prim . &no-nans-rtd)
        (g$12424$1M&0Ej core-prim . &no-infinities-rcd)
        (g$12423$1M&0Ej core-prim . &no-infinities-rtd)
        (g$12422$1M&0Ej core-prim . &i/o-encoding-rcd)
        (g$12421$1M&0Ej core-prim . &i/o-encoding-rtd)
        (g$12420$1M&0Ej core-prim . &i/o-decoding-rcd)
        (g$12419$1M&0Ej core-prim . &i/o-decoding-rtd)
        (g$12418$1M&0Ej core-prim . &i/o-port-rcd)
        (g$12417$1M&0Ej core-prim . &i/o-port-rtd)
        (g$12416$1M&0Ej core-prim . &i/o-file-does-not-exist-rcd)
        (g$12415$1M&0Ej core-prim . &i/o-file-does-not-exist-rtd)
        (g$12414$1M&0Ej core-prim . &i/o-file-already-exists-rcd)
        (g$12413$1M&0Ej core-prim . &i/o-file-already-exists-rtd)
        (g$12412$1M&0Ej core-prim . &i/o-file-is-read-only-rcd)
        (g$12411$1M&0Ej core-prim . &i/o-file-is-read-only-rtd)
        (g$12410$1M&0Ej core-prim . &i/o-file-protection-rcd)
        (g$12409$1M&0Ej core-prim . &i/o-file-protection-rtd)
        (g$12408$1M&0Ej core-prim . &i/o-filename-rcd)
        (g$12407$1M&0Ej core-prim . &i/o-filename-rtd)
        (g$12406$1M&0Ej core-prim . &i/o-invalid-position-rcd)
        (g$12405$1M&0Ej core-prim . &i/o-invalid-position-rtd)
        (g$12404$1M&0Ej core-prim . &i/o-write-rcd)
        (g$12403$1M&0Ej core-prim . &i/o-write-rtd)
        (g$12402$1M&0Ej core-prim . &i/o-read-rcd)
        (g$12401$1M&0Ej core-prim . &i/o-read-rtd)
        (g$12400$1M&0Ej core-prim . &i/o-rcd)
        (g$12399$1M&0Ej core-prim . &i/o-rtd)
        (g$12398$1M&0Ej core-prim . &undefined-rcd)
        (g$12397$1M&0Ej core-prim . &undefined-rtd)
        (g$12396$1M&0Ej core-prim . &syntax-rcd)
        (g$12395$1M&0Ej core-prim . &syntax-rtd)
        (g$12394$1M&0Ej core-prim . &lexical-rcd)
        (g$12393$1M&0Ej core-prim . &lexical-rtd)
        (g$12392$1M&0Ej core-prim . &implementation-restriction-rcd)
        (g$12391$1M&0Ej core-prim . &implementation-restriction-rtd)
        (g$12390$1M&0Ej core-prim . &non-continuable-rcd)
        (g$12389$1M&0Ej core-prim . &non-continuable-rtd)
        (g$12388$1M&0Ej core-prim . &who-rcd)
        (g$12387$1M&0Ej core-prim . &who-rtd)
        (g$12386$1M&0Ej core-prim . &irritants-rcd)
        (g$12385$1M&0Ej core-prim . &irritants-rtd)
        (g$12384$1M&0Ej core-prim . &assertion-rcd)
        (g$12383$1M&0Ej core-prim . &assertion-rtd)
        (g$12382$1M&0Ej core-prim . &violation-rcd)
        (g$12381$1M&0Ej core-prim . &violation-rtd)
        (g$12380$1M&0Ej core-prim . &error-rcd)
        (g$12379$1M&0Ej core-prim . &error-rtd)
        (g$12378$1M&0Ej core-prim . &serious-rcd)
        (g$12377$1M&0Ej core-prim . &serious-rtd)
        (g$12376$1M&0Ej core-prim . &warning-rcd)
        (g$12375$1M&0Ej core-prim . &warning-rtd)
        (g$12374$1M&0Ej core-prim . &message-rcd)
        (g$12373$1M&0Ej core-prim . &message-rtd)
        (g$12372$1M&0Ej core-prim . &condition-rcd)
        (g$12371$1M&0Ej core-prim . &condition-rtd)
        (g$12370$1M&0Ej core-prim . library-letrec*)
        (g$12369$1M&0Ej core-prim . annotation-stripped)
        (g$12368$1M&0Ej core-prim . annotation-source)
        (g$12367$1M&0Ej core-prim . annotation-expression)
        (g$12366$1M&0Ej core-prim . annotation?)
        (g$12365$1M&0Ej core-prim . read-annotated)
        (g$12364$1M&0Ej core-prim . tanh)
        (g$12363$1M&0Ej core-prim . cosh)
        (g$12362$1M&0Ej core-prim . sinh)
        (g$12361$1M&0Ej core-prim . make-guid)
        (g$12360$1M&0Ej core-prim . unspecified?)
        (g$12359$1M&0Ej core-prim . make-trace)
        (g$12358$1M&0Ej core-prim . make-list)
        (g$12357$1M&0Ej core-prim . last-pair)
        (g$12356$1M&0Ej core-prim . load-r5rs)
        (g$12355$1M&0Ej core-prim . license)
        (g$12354$1M&0Ej core-prim . stacktrace)
        (g$11776$1M&0Ej core-prim . ironscheme-build)
        (g$12353$1M&0Ej core-prim . define-clr-class-internal)
        (g$12352$1M&0Ej core-prim . clr-field-set!-internal)
        (g$12351$1M&0Ej core-prim . clr-field-get-internal)
        (g$12350$1M&0Ej core-prim . clr-cast-internal)
        (g$12349$1M&0Ej core-prim . clr-call-internal)
        (g$12348$1M&0Ej core-prim . clr-new-internal)
        (g$12347$1M&0Ej core-prim . clr-new-array-internal)
        (g$12346$1M&0Ej core-prim . clr-is-internal)
        (g$12345$1M&0Ej core-prim . clr-reference-internal)
        (g$12344$1M&0Ej core-prim . clr-using-internal)
        (g$12343$1M&0Ej core-prim . clr-clear-usings-internal)
        (g$8797$1M&0Ej core-prim . syntax-error)
        (g$8668$1M&0Ej core-prim . syntax-dispatch)
        (g$12342$1M&0Ej core-prim . compile-core)
        (g$12341$1M&0Ej core-prim . eval-core)
        (g$12340$1M&0Ej core-prim . set-symbol-value!)
        (g$12339$1M&0Ej core-prim . symbol-value)
        (g$12338$1M&0Ej core-prim . ungensym)
        (g$12337$1M&0Ej core-prim . gensym)
        (g$12336$1M&0Ej core-prim . void)
        (g$12335$1M&0Ej core-prim . load-serialized-library)
        (g$12334$1M&0Ej core-prim . serialize-library)
        (g$11778$1M&0Ej core-prim . compile-system-libraries)
        (g$11780$1M&0Ej core-prim . compile->closure)
        (g$11779$1M&0Ej core-prim . compile)
        (g$11775$1M&0Ej core-prim . load)
        (g$8806$1M&0Ej core-prim . interaction-environment)
        (g$12333$1M&0Ej core-prim . char-ready?)
        (g$12332$1M&0Ej core-prim . string-upcase)
        (g$12331$1M&0Ej core-prim . string-titlecase)
        (g$12330$1M&0Ej core-prim . string-normalize-nfkd)
        (g$12329$1M&0Ej core-prim . string-normalize-nfkc)
        (g$12328$1M&0Ej core-prim . string-normalize-nfd)
        (g$12327$1M&0Ej core-prim . string-normalize-nfc)
        (g$12326$1M&0Ej core-prim . string-foldcase)
        (g$12325$1M&0Ej core-prim . string-downcase)
        (g$6910$1M&0Ej core-prim . string-ci>?)
        (g$6912$1M&0Ej core-prim . string-ci>=?)
        (g$6908$1M&0Ej core-prim . string-ci=?)
        (g$6909$1M&0Ej core-prim . string-ci<?)
        (g$6911$1M&0Ej core-prim . string-ci<=?)
        (g$12324$1M&0Ej core-prim . char-whitespace?)
        (g$12323$1M&0Ej core-prim . char-upper-case?)
        (g$12322$1M&0Ej core-prim . char-title-case?)
        (g$12321$1M&0Ej core-prim . char-numeric?)
        (g$12320$1M&0Ej core-prim . char-lower-case?)
        (g$12319$1M&0Ej core-prim . char-general-category)
        (g$12318$1M&0Ej core-prim . char-upcase)
        (g$12317$1M&0Ej core-prim . char-titlecase)
        (g$12316$1M&0Ej core-prim . char-foldcase)
        (g$12315$1M&0Ej core-prim . char-downcase)
        (g$6949$1M&0Ej core-prim . char-ci>?)
        (g$6951$1M&0Ej core-prim . char-ci>=?)
        (g$6947$1M&0Ej core-prim . char-ci=?)
        (g$6948$1M&0Ej core-prim . char-ci<?)
        (g$6950$1M&0Ej core-prim . char-ci<=?)
        (g$12314$1M&0Ej core-prim . char-alphabetic?)
        (g$8405$1M&0Ej core-prim . variable-transformer-procedure)
        (g$8404$1M&0Ej core-prim . variable-transformer?)
        (g$8403$1M&0Ej core-prim . make-variable-transformer)
        (g$8801$1M&0Ej core-prim . identifier?)
        (g$8790$1M&0Ej core-prim . generate-temporaries)
        (g$8791$1M&0Ej core-prim . free-identifier=?)
        (g$8803$1M&0Ej core-prim . syntax->datum)
        (g$8802$1M&0Ej core-prim . datum->syntax)
        (g$8792$1M&0Ej core-prim . bound-identifier=?)
        (g$12313$1M&0Ej core-prim . record-type-descriptor?)
        (g$12312$1M&0Ej core-prim . record-predicate)
        (g$12311$1M&0Ej core-prim . record-mutator)
        (g$12310$1M&0Ej core-prim . record-constructor)
        (g$12309$1M&0Ej core-prim . record-accessor)
        (g$12308$1M&0Ej core-prim . make-record-type-descriptor)
        (g$12307$1M&0Ej core-prim . make-record-constructor-descriptor)
        (g$12306$1M&0Ej core-prim . record?)
        (g$12305$1M&0Ej core-prim . record-type-uid)
        (g$12304$1M&0Ej core-prim . record-type-sealed?)
        (g$12303$1M&0Ej core-prim . record-type-parent)
        (g$12302$1M&0Ej core-prim . record-type-opaque?)
        (g$12301$1M&0Ej core-prim . record-type-name)
        (g$12300$1M&0Ej core-prim . record-type-generative?)
        (g$12299$1M&0Ej core-prim . record-type-field-names)
        (g$12298$1M&0Ej core-prim . record-rtd)
        (g$12297$1M&0Ej core-prim . record-field-mutable?)
        (g$6485$1M&0Ej core-prim . delete-file)
        (g$6484$1M&0Ej core-prim . file-exists?)
        (g$12296$1M&0Ej core-prim . vector-sort!)
        (g$12295$1M&0Ej core-prim . vector-sort)
        (g$6848$1M&0Ej core-prim . list-sort)
        (g$12294$1M&0Ej core-prim . symbol-hash)
        (g$12293$1M&0Ej core-prim . string-ci-hash)
        (g$12292$1M&0Ej core-prim . string-hash)
        (g$12291$1M&0Ej core-prim . equal-hash)
        (g$12290$1M&0Ej core-prim . hashtable-equivalence-function)
        (g$12289$1M&0Ej core-prim . make-hashtable)
        (g$12288$1M&0Ej core-prim . hashtable-hash-function)
        (g$6452$1M&0Ej core-prim . make-eqv-hashtable)
        (g$6451$1M&0Ej core-prim . make-eq-hashtable)
        (g$12287$1M&0Ej core-prim . hashtable?)
        (g$6458$1M&0Ej core-prim . hashtable-update!)
        (g$6453$1M&0Ej core-prim . hashtable-size)
        (g$6455$1M&0Ej core-prim . hashtable-set!)
        (g$6454$1M&0Ej core-prim . hashtable-ref)
        (g$12286$1M&0Ej core-prim . hashtable-mutable?)
        (g$12285$1M&0Ej core-prim . hashtable-keys)
        (g$12284$1M&0Ej core-prim . hashtable-entries)
        (g$6456$1M&0Ej core-prim . hashtable-delete!)
        (g$12283$1M&0Ej core-prim . hashtable-copy)
        (g$6457$1M&0Ej core-prim . hashtable-contains?)
        (g$6459$1M&0Ej core-prim . hashtable-clear!)
        (g$7338$1M&0Ej core-prim . call-with-output-file)
        (g$7337$1M&0Ej core-prim . call-with-input-file)
        (g$12282$1M&0Ej core-prim . write-char)
        (g$12281$1M&0Ej core-prim . write)
        (g$7336$1M&0Ej core-prim . with-output-to-file)
        (g$7335$1M&0Ej core-prim . with-input-from-file)
        (g$12280$1M&0Ej core-prim . read-char)
        (g$12279$1M&0Ej core-prim . read)
        (g$12278$1M&0Ej core-prim . peek-char)
        (g$12277$1M&0Ej core-prim . open-output-file)
        (g$12276$1M&0Ej core-prim . open-input-file)
        (g$12275$1M&0Ej core-prim . newline)
        (g$12274$1M&0Ej core-prim . display)
        (g$12273$1M&0Ej core-prim . close-output-port)
        (g$12272$1M&0Ej core-prim . close-input-port)
        (g$12271$1M&0Ej core-prim . eof-object?)
        (g$12270$1M&0Ej core-prim . eof-object)
        (g$12269$1M&0Ej core-prim . current-error-port)
        (g$12268$1M&0Ej core-prim . current-output-port)
        (g$12267$1M&0Ej core-prim . current-input-port)
        (g$12266$1M&0Ej core-prim . output-port?)
        (g$12265$1M&0Ej core-prim . input-port?)
        (g$12264$1M&0Ej core-prim . utf-8-codec)
        (g$12263$1M&0Ej core-prim . utf-16-codec)
        (g$12262$1M&0Ej core-prim . transcoder-error-handling-mode)
        (g$12261$1M&0Ej core-prim . transcoder-eol-style)
        (g$12260$1M&0Ej core-prim . transcoder-codec)
        (g$12259$1M&0Ej core-prim . transcoded-port)
        (g$12258$1M&0Ej core-prim . textual-port?)
        (g$12257$1M&0Ej core-prim . string->bytevector)
        (g$12256$1M&0Ej core-prim . standard-output-port)
        (g$12255$1M&0Ej core-prim . standard-input-port)
        (g$12254$1M&0Ej core-prim . standard-error-port)
        (g$12253$1M&0Ej core-prim . set-port-position!)
        (g$12252$1M&0Ej core-prim . put-u8)
        (g$12251$1M&0Ej core-prim . put-string)
        (g$12250$1M&0Ej core-prim . put-datum)
        (g$12249$1M&0Ej core-prim . put-char)
        (g$12248$1M&0Ej core-prim . put-bytevector)
        (g$7314$1M&0Ej core-prim . port?)
        (g$12247$1M&0Ej core-prim . port-transcoder)
        (g$12246$1M&0Ej core-prim . port-position)
        (g$12245$1M&0Ej core-prim . port-has-set-port-position!?)
        (g$12244$1M&0Ej core-prim . port-has-port-position?)
        (g$12243$1M&0Ej core-prim . port-eof?)
        (g$12242$1M&0Ej core-prim . output-port-buffer-mode)
        (g$7313$1M&0Ej core-prim . open-string-output-port)
        (g$12241$1M&0Ej core-prim . open-string-input-port)
        (g$12240$1M&0Ej core-prim . open-file-output-port)
        (g$12239$1M&0Ej core-prim . open-file-input/output-port)
        (g$12238$1M&0Ej core-prim . open-file-input-port)
        (g$12237$1M&0Ej core-prim . open-bytevector-output-port)
        (g$12236$1M&0Ej core-prim . open-bytevector-input-port)
        (g$12235$1M&0Ej core-prim . native-transcoder)
        (g$12234$1M&0Ej core-prim . native-eol-style)
        (g$12233$1M&0Ej core-prim . make-transcoder)
        (g$12232$1M&0Ej core-prim . latin-1-codec)
        (g$7170$1M&0Ej core-prim . make-i/o-write-error)
        (g$7156$1M&0Ej core-prim . make-i/o-read-error)
        (g$7275$1M&0Ej core-prim . make-i/o-port-error)
        (g$7185$1M&0Ej core-prim . make-i/o-invalid-position-error)
        (g$7202$1M&0Ej core-prim . make-i/o-filename-error)
        (g$7218$1M&0Ej core-prim . make-i/o-file-protection-error)
        (g$7232$1M&0Ej core-prim . make-i/o-file-is-read-only-error)
        (g$7260$1M&0Ej core-prim . make-i/o-file-does-not-exist-error)
        (g$7246$1M&0Ej core-prim . make-i/o-file-already-exists-error)
        (g$7142$1M&0Ej core-prim . make-i/o-error)
        (g$7306$1M&0Ej core-prim . make-i/o-encoding-error)
        (g$7291$1M&0Ej core-prim . make-i/o-decoding-error)
        (g$12231$1M&0Ej core-prim . make-custom-textual-output-port)
        (g$12230$1M&0Ej core-prim . make-custom-textual-input/output-port)
        (g$12229$1M&0Ej core-prim . make-custom-textual-input-port)
        (g$12228$1M&0Ej core-prim . make-custom-binary-output-port)
        (g$12227$1M&0Ej core-prim . make-custom-binary-input/output-port)
        (g$12226$1M&0Ej core-prim . make-custom-binary-input-port)
        (g$12225$1M&0Ej core-prim . make-bytevector)
        (g$12224$1M&0Ej core-prim . lookahead-u8)
        (g$12223$1M&0Ej core-prim . lookahead-char)
        (g$7171$1M&0Ej core-prim . i/o-write-error?)
        (g$7157$1M&0Ej core-prim . i/o-read-error?)
        (g$7277$1M&0Ej core-prim . i/o-port-error?)
        (g$7187$1M&0Ej core-prim . i/o-invalid-position-error?)
        (g$7188$1M&0Ej core-prim . i/o-error-position)
        (g$7204$1M&0Ej core-prim . i/o-filename-error?)
        (g$7219$1M&0Ej core-prim . i/o-file-protection-error?)
        (g$7233$1M&0Ej core-prim . i/o-file-is-read-only-error?)
        (g$7261$1M&0Ej core-prim . i/o-file-does-not-exist-error?)
        (g$7247$1M&0Ej core-prim . i/o-file-already-exists-error?)
        (g$7143$1M&0Ej core-prim . i/o-error?)
        (g$7278$1M&0Ej core-prim . i/o-error-port)
        (g$7205$1M&0Ej core-prim . i/o-error-filename)
        (g$7308$1M&0Ej core-prim . i/o-encoding-error?)
        (g$7309$1M&0Ej core-prim . i/o-encoding-error-char)
        (g$7292$1M&0Ej core-prim . i/o-decoding-error?)
        (g$12222$1M&0Ej core-prim . get-u8)
        (g$12221$1M&0Ej core-prim . get-string-n!)
        (g$12220$1M&0Ej core-prim . get-string-n)
        (g$12219$1M&0Ej core-prim . get-string-all)
        (g$12218$1M&0Ej core-prim . get-line)
        (g$12217$1M&0Ej core-prim . get-datum)
        (g$12216$1M&0Ej core-prim . get-char)
        (g$12215$1M&0Ej core-prim . get-bytevector-some)
        (g$12214$1M&0Ej core-prim . get-bytevector-n!)
        (g$12213$1M&0Ej core-prim . get-bytevector-n)
        (g$12212$1M&0Ej core-prim . get-bytevector-all)
        (g$12211$1M&0Ej core-prim . flush-output-port)
        (g$12210$1M&0Ej core-prim . close-port)
        (g$12209$1M&0Ej core-prim . call-with-string-output-port)
        (g$12208$1M&0Ej core-prim . call-with-port)
        (g$12207$1M&0Ej core-prim . call-with-bytevector-output-port)
        (g$12206$1M&0Ej core-prim . bytevector->string)
        (g$12205$1M&0Ej core-prim . buffer-mode?)
        (g$12204$1M&0Ej core-prim . binary-port?)
        (g$8781$1M&0Ej core-prim . scheme-report-environment)
        (g$6828$1M&0Ej core-prim . quotient)
        (g$8780$1M&0Ej core-prim . null-environment)
        (g$6829$1M&0Ej core-prim . remainder)
        (g$6830$1M&0Ej core-prim . modulo)
        (g$12203$1M&0Ej core-prim . inexact->exact)
        (g$6832$1M&0Ej core-prim . force)
        (g$12202$1M&0Ej core-prim . exact->inexact)
        (g$12201$1M&0Ej core-prim . exit)
        (g$11772$1M&0Ej core-prim . command-line)
        (g$12200$1M&0Ej core-prim . string-fill!)
        (g$12199$1M&0Ej core-prim . string-set!)
        (g$12198$1M&0Ej core-prim . set-cdr!)
        (g$12197$1M&0Ej core-prim . set-car!)
        (g$5846$1M&0Ej core-prim . remove)
        (g$5847$1M&0Ej core-prim . remv)
        (g$5829$1M&0Ej core-prim . remp)
        (g$5848$1M&0Ej core-prim . remq)
        (g$5828$1M&0Ej core-prim . partition)
        (g$5836$1M&0Ej core-prim . memv)
        (g$5835$1M&0Ej core-prim . memq)
        (g$5838$1M&0Ej core-prim . memp)
        (g$5837$1M&0Ej core-prim . member)
        (g$5842$1M&0Ej core-prim . exists)
        (g$5841$1M&0Ej core-prim . for-all)
        (g$5845$1M&0Ej core-prim . fold-right)
        (g$5844$1M&0Ej core-prim . fold-left)
        (g$5827$1M&0Ej core-prim . find)
        (g$5830$1M&0Ej core-prim . filter)
        (g$5843$1M&0Ej core-prim . cons*)
        (g$5832$1M&0Ej core-prim . assv)
        (g$5831$1M&0Ej core-prim . assq)
        (g$5834$1M&0Ej core-prim . assp)
        (g$5833$1M&0Ej core-prim . assoc)
        (g$12196$1M&0Ej core-prim . with-exception-handler)
        (g$12195$1M&0Ej core-prim . raise-continuable)
        (g$12194$1M&0Ej core-prim . raise)
        (g$8783$1M&0Ej core-prim . eval)
        (g$8779$1M&0Ej core-prim . environment)
        (g$7396$1M&0Ej core-prim . make-enumeration)
        (g$7403$1M&0Ej core-prim . enum-set=?)
        (g$7397$1M&0Ej core-prim . enum-set-universe)
        (g$7404$1M&0Ej core-prim . enum-set-union)
        (g$7402$1M&0Ej core-prim . enum-set-subset?)
        (g$7408$1M&0Ej core-prim . enum-set-projection)
        (g$7401$1M&0Ej core-prim . enum-set-member?)
        (g$7405$1M&0Ej core-prim . enum-set-intersection)
        (g$7398$1M&0Ej core-prim . enum-set-indexer)
        (g$7406$1M&0Ej core-prim . enum-set-difference)
        (g$7399$1M&0Ej core-prim . enum-set-constructor)
        (g$7407$1M&0Ej core-prim . enum-set-complement)
        (g$7400$1M&0Ej core-prim . enum-set->list)
        (g$6739$1M&0Ej core-prim . who-condition?)
        (g$6650$1M&0Ej core-prim . warning?)
        (g$6692$1M&0Ej core-prim . violation?)
        (g$6816$1M&0Ej core-prim . undefined-violation?)
        (g$6800$1M&0Ej core-prim . syntax-violation?)
        (g$6802$1M&0Ej core-prim . syntax-violation-subform)
        (g$6801$1M&0Ej core-prim . syntax-violation-form)
        (g$8800$1M&0Ej core-prim . syntax-violation)
        (g$12193$1M&0Ej core-prim . simple-conditions)
        (g$6664$1M&0Ej core-prim . serious-condition?)
        (g$6754$1M&0Ej core-prim . non-continuable-violation?)
        (g$6635$1M&0Ej core-prim . message-condition?)
        (g$6737$1M&0Ej core-prim . make-who-condition)
        (g$6649$1M&0Ej core-prim . make-warning)
        (g$6691$1M&0Ej core-prim . make-violation)
        (g$6815$1M&0Ej core-prim . make-undefined-violation)
        (g$6797$1M&0Ej core-prim . make-syntax-violation)
        (g$6663$1M&0Ej core-prim . make-serious-condition)
        (g$6753$1M&0Ej core-prim . make-non-continuable-violation)
        (g$6633$1M&0Ej core-prim . make-message-condition)
        (g$6781$1M&0Ej core-prim . make-lexical-violation)
        (g$6720$1M&0Ej core-prim . make-irritants-condition)
        (g$6767$1M&0Ej core-prim . make-implementation-restriction-violation)
        (g$6677$1M&0Ej core-prim . make-error)
        (g$6705$1M&0Ej core-prim . make-assertion-violation)
        (g$6782$1M&0Ej core-prim . lexical-violation?)
        (g$6722$1M&0Ej core-prim . irritants-condition?)
        (g$6768$1M&0Ej core-prim . implementation-restriction-violation?)
        (g$6678$1M&0Ej core-prim . error?)
        (g$6740$1M&0Ej core-prim . condition-who)
        (g$12192$1M&0Ej core-prim . condition-predicate)
        (g$6636$1M&0Ej core-prim . condition-message)
        (g$6723$1M&0Ej core-prim . condition-irritants)
        (g$12191$1M&0Ej core-prim . condition-accessor)
        (g$12190$1M&0Ej core-prim . condition)
        (g$6706$1M&0Ej core-prim . assertion-violation?)
        (g$12189$1M&0Ej core-prim . condition?)
        (g$12188$1M&0Ej core-prim . utf32->string)
        (g$12187$1M&0Ej core-prim . utf16->string)
        (g$12186$1M&0Ej core-prim . utf8->string)
        (g$12185$1M&0Ej core-prim . uint-list->bytevector)
        (g$12184$1M&0Ej core-prim . u8-list->bytevector)
        (g$12183$1M&0Ej core-prim . string->utf8)
        (g$12182$1M&0Ej core-prim . string->utf32)
        (g$12181$1M&0Ej core-prim . string->utf16)
        (g$12180$1M&0Ej core-prim . sint-list->bytevector)
        (g$6491$1M&0Ej core-prim . native-endianness)
        (g$12179$1M&0Ej core-prim . bytevector?)
        (g$12178$1M&0Ej core-prim . bytevector=?)
        (g$12177$1M&0Ej core-prim . bytevector-uint-set!)
        (g$12176$1M&0Ej core-prim . bytevector-uint-ref)
        (g$12175$1M&0Ej core-prim . bytevector-u8-set!)
        (g$12174$1M&0Ej core-prim . bytevector-u8-ref)
        (g$6512$1M&0Ej core-prim . bytevector-u64-set!)
        (g$6508$1M&0Ej core-prim . bytevector-u64-ref)
        (g$6514$1M&0Ej core-prim . bytevector-u64-native-set!)
        (g$6510$1M&0Ej core-prim . bytevector-u64-native-ref)
        (g$6504$1M&0Ej core-prim . bytevector-u32-set!)
        (g$6500$1M&0Ej core-prim . bytevector-u32-ref)
        (g$6506$1M&0Ej core-prim . bytevector-u32-native-set!)
        (g$6502$1M&0Ej core-prim . bytevector-u32-native-ref)
        (g$6496$1M&0Ej core-prim . bytevector-u16-set!)
        (g$6492$1M&0Ej core-prim . bytevector-u16-ref)
        (g$6498$1M&0Ej core-prim . bytevector-u16-native-set!)
        (g$6494$1M&0Ej core-prim . bytevector-u16-native-ref)
        (g$12173$1M&0Ej core-prim . bytevector-sint-set!)
        (g$12172$1M&0Ej core-prim . bytevector-sint-ref)
        (g$12171$1M&0Ej core-prim . bytevector-s8-set!)
        (g$12170$1M&0Ej core-prim . bytevector-s8-ref)
        (g$6513$1M&0Ej core-prim . bytevector-s64-set!)
        (g$6509$1M&0Ej core-prim . bytevector-s64-ref)
        (g$6515$1M&0Ej core-prim . bytevector-s64-native-set!)
        (g$6511$1M&0Ej core-prim . bytevector-s64-native-ref)
        (g$6505$1M&0Ej core-prim . bytevector-s32-set!)
        (g$6501$1M&0Ej core-prim . bytevector-s32-ref)
        (g$6507$1M&0Ej core-prim . bytevector-s32-native-set!)
        (g$6503$1M&0Ej core-prim . bytevector-s32-native-ref)
        (g$6497$1M&0Ej core-prim . bytevector-s16-set!)
        (g$6493$1M&0Ej core-prim . bytevector-s16-ref)
        (g$6499$1M&0Ej core-prim . bytevector-s16-native-set!)
        (g$6495$1M&0Ej core-prim . bytevector-s16-native-ref)
        (g$12169$1M&0Ej core-prim . bytevector-length)
        (g$12168$1M&0Ej core-prim . bytevector-ieee-single-set!)
        (g$12167$1M&0Ej core-prim . bytevector-ieee-single-ref)
        (g$6518$1M&0Ej core-prim . bytevector-ieee-single-native-set!)
        (g$6516$1M&0Ej core-prim . bytevector-ieee-single-native-ref)
        (g$12166$1M&0Ej core-prim . bytevector-ieee-double-set!)
        (g$12165$1M&0Ej core-prim . bytevector-ieee-double-ref)
        (g$6519$1M&0Ej core-prim . bytevector-ieee-double-native-set!)
        (g$6517$1M&0Ej core-prim . bytevector-ieee-double-native-ref)
        (g$12164$1M&0Ej core-prim . bytevector-fill!)
        (g$12163$1M&0Ej core-prim . bytevector-copy!)
        (g$12162$1M&0Ej core-prim . bytevector-copy)
        (g$12161$1M&0Ej core-prim . bytevector->uint-list)
        (g$12160$1M&0Ej core-prim . bytevector->u8-list)
        (g$12159$1M&0Ej core-prim . bytevector->sint-list)
        (g$7128$1M&0Ej core-prim . no-nans-violation?)
        (g$7114$1M&0Ej core-prim . no-infinities-violation?)
        (g$7127$1M&0Ej core-prim . make-no-nans-violation)
        (g$7113$1M&0Ej core-prim . make-no-infinities-violation)
        (g$12158$1M&0Ej core-prim . real->flonum)
        (g$12157$1M&0Ej core-prim . flzero?)
        (g$12156$1M&0Ej core-prim . fltruncate)
        (g$12155$1M&0Ej core-prim . fltan)
        (g$12154$1M&0Ej core-prim . flsqrt)
        (g$12153$1M&0Ej core-prim . flsin)
        (g$12152$1M&0Ej core-prim . flround)
        (g$12151$1M&0Ej core-prim . flpositive?)
        (g$12150$1M&0Ej core-prim . flonum?)
        (g$12149$1M&0Ej core-prim . flodd?)
        (g$12148$1M&0Ej core-prim . flnumerator)
        (g$12147$1M&0Ej core-prim . flnegative?)
        (g$12146$1M&0Ej core-prim . flnan?)
        (g$12145$1M&0Ej core-prim . flmod0)
        (g$12144$1M&0Ej core-prim . flmod)
        (g$12143$1M&0Ej core-prim . flmin)
        (g$12142$1M&0Ej core-prim . flmax)
        (g$12141$1M&0Ej core-prim . fllog)
        (g$12140$1M&0Ej core-prim . flinteger?)
        (g$12139$1M&0Ej core-prim . flinfinite?)
        (g$12138$1M&0Ej core-prim . flfloor)
        (g$12137$1M&0Ej core-prim . flfinite?)
        (g$12136$1M&0Ej core-prim . flexpt)
        (g$12135$1M&0Ej core-prim . flexp)
        (g$12134$1M&0Ej core-prim . fleven?)
        (g$12133$1M&0Ej core-prim . fldiv0-and-mod0)
        (g$12132$1M&0Ej core-prim . fldiv0)
        (g$12131$1M&0Ej core-prim . fldiv-and-mod)
        (g$12130$1M&0Ej core-prim . fldiv)
        (g$12129$1M&0Ej core-prim . fldenominator)
        (g$12128$1M&0Ej core-prim . flcos)
        (g$12127$1M&0Ej core-prim . flceiling)
        (g$12126$1M&0Ej core-prim . flatan)
        (g$12125$1M&0Ej core-prim . flasin)
        (g$12124$1M&0Ej core-prim . flacos)
        (g$12123$1M&0Ej core-prim . flabs)
        (g$12122$1M&0Ej core-prim . fl>?)
        (g$12121$1M&0Ej core-prim . fl>=?)
        (g$12120$1M&0Ej core-prim . fl=?)
        (g$12119$1M&0Ej core-prim . fl<?)
        (g$12118$1M&0Ej core-prim . fl<=?)
        (g$12117$1M&0Ej core-prim . fl/)
        (g$12116$1M&0Ej core-prim . fl-)
        (g$12115$1M&0Ej core-prim . fl+)
        (g$12114$1M&0Ej core-prim . fl*)
        (g$12113$1M&0Ej core-prim . fixnum->flonum)
        (g$12112$1M&0Ej core-prim . fxzero?)
        (g$12111$1M&0Ej core-prim . fxxor)
        (g$7059$1M&0Ej core-prim . fxrotate-bit-field)
        (g$12110$1M&0Ej core-prim . fxreverse-bit-field)
        (g$12109$1M&0Ej core-prim . fxpositive?)
        (g$12108$1M&0Ej core-prim . fxodd?)
        (g$12107$1M&0Ej core-prim . fxnot)
        (g$12106$1M&0Ej core-prim . fxnegative?)
        (g$12105$1M&0Ej core-prim . fxmod0)
        (g$12104$1M&0Ej core-prim . fxmod)
        (g$12103$1M&0Ej core-prim . fxmin)
        (g$12102$1M&0Ej core-prim . fxmax)
        (g$12101$1M&0Ej core-prim . fxlength)
        (g$12100$1M&0Ej core-prim . fxior)
        (g$7053$1M&0Ej core-prim . fxif)
        (g$12099$1M&0Ej core-prim . fxfirst-bit-set)
        (g$12098$1M&0Ej core-prim . fxeven?)
        (g$12097$1M&0Ej core-prim . fxdiv0-and-mod0)
        (g$12096$1M&0Ej core-prim . fxdiv0)
        (g$12095$1M&0Ej core-prim . fxdiv-and-mod)
        (g$12094$1M&0Ej core-prim . fxdiv)
        (g$7056$1M&0Ej core-prim . fxcopy-bit-field)
        (g$7054$1M&0Ej core-prim . fxcopy-bit)
        (g$12093$1M&0Ej core-prim . fxbit-set?)
        (g$7055$1M&0Ej core-prim . fxbit-field)
        (g$12092$1M&0Ej core-prim . fxbit-count)
        (g$7058$1M&0Ej core-prim . fxarithmetic-shift-right)
        (g$7057$1M&0Ej core-prim . fxarithmetic-shift-left)
        (g$12091$1M&0Ej core-prim . fxarithmetic-shift)
        (g$12090$1M&0Ej core-prim . fxand)
        (g$12089$1M&0Ej core-prim . fx>?)
        (g$12088$1M&0Ej core-prim . fx>=?)
        (g$12087$1M&0Ej core-prim . fx=?)
        (g$12086$1M&0Ej core-prim . fx<?)
        (g$12085$1M&0Ej core-prim . fx<=?)
        (g$12084$1M&0Ej core-prim . fx-/carry)
        (g$12083$1M&0Ej core-prim . fx-)
        (g$12082$1M&0Ej core-prim . fx+/carry)
        (g$12081$1M&0Ej core-prim . fx+)
        (g$12080$1M&0Ej core-prim . fx*/carry)
        (g$12079$1M&0Ej core-prim . fx*)
        (g$12078$1M&0Ej core-prim . greatest-fixnum)
        (g$12077$1M&0Ej core-prim . least-fixnum)
        (g$12076$1M&0Ej core-prim . fixnum-width)
        (g$12075$1M&0Ej core-prim . fixnum?)
        (g$7011$1M&0Ej core-prim . bitwise-rotate-bit-field)
        (g$12074$1M&0Ej core-prim . bitwise-reverse-bit-field)
        (g$12073$1M&0Ej core-prim . bitwise-length)
        (g$7005$1M&0Ej core-prim . bitwise-if)
        (g$12072$1M&0Ej core-prim . bitwise-first-bit-set)
        (g$7008$1M&0Ej core-prim . bitwise-copy-bit-field)
        (g$7006$1M&0Ej core-prim . bitwise-copy-bit)
        (g$12071$1M&0Ej core-prim . bitwise-bit-set?)
        (g$12070$1M&0Ej core-prim . bitwise-bit-field)
        (g$12069$1M&0Ej core-prim . bitwise-bit-count)
        (g$12068$1M&0Ej core-prim . bitwise-xor)
        (g$12067$1M&0Ej core-prim . bitwise-ior)
        (g$12066$1M&0Ej core-prim . bitwise-and)
        (g$12065$1M&0Ej core-prim . bitwise-not)
        (g$7010$1M&0Ej core-prim . bitwise-arithmetic-shift-right)
        (g$7009$1M&0Ej core-prim . bitwise-arithmetic-shift-left)
        (g$12064$1M&0Ej core-prim . bitwise-arithmetic-shift)
        (g$12063$1M&0Ej core-prim . zero?)
        (g$12062$1M&0Ej core-prim . vector?)
        (g$12061$1M&0Ej core-prim . vector-set!)
        (g$12060$1M&0Ej core-prim . vector-ref)
        (g$12059$1M&0Ej core-prim . vector-map)
        (g$12058$1M&0Ej core-prim . vector-length)
        (g$12057$1M&0Ej core-prim . vector-for-each)
        (g$12056$1M&0Ej core-prim . vector-fill!)
        (g$12055$1M&0Ej core-prim . vector->list)
        (g$12054$1M&0Ej core-prim . vector)
        (g$12053$1M&0Ej core-prim . values)
        (g$12052$1M&0Ej core-prim . truncate)
        (g$12051$1M&0Ej core-prim . tan)
        (g$12050$1M&0Ej core-prim . symbol?)
        (g$6000$1M&0Ej core-prim . symbol=?)
        (g$12049$1M&0Ej core-prim . symbol->string)
        (g$12048$1M&0Ej core-prim . substring)
        (g$12047$1M&0Ej core-prim . string?)
        (g$5997$1M&0Ej core-prim . string>?)
        (g$5999$1M&0Ej core-prim . string>=?)
        (g$5995$1M&0Ej core-prim . string=?)
        (g$5996$1M&0Ej core-prim . string<?)
        (g$5998$1M&0Ej core-prim . string<=?)
        (g$12046$1M&0Ej core-prim . string-ref)
        (g$12045$1M&0Ej core-prim . string-length)
        (g$12044$1M&0Ej core-prim . string-for-each)
        (g$12043$1M&0Ej core-prim . string-copy)
        (g$12042$1M&0Ej core-prim . string-append)
        (g$12041$1M&0Ej core-prim . string->symbol)
        (g$12040$1M&0Ej core-prim . string->number)
        (g$12039$1M&0Ej core-prim . string->list)
        (g$12038$1M&0Ej core-prim . string)
        (g$12037$1M&0Ej core-prim . sqrt)
        (g$12036$1M&0Ej core-prim . sin)
        (g$12035$1M&0Ej core-prim . round)
        (g$12034$1M&0Ej core-prim . reverse)
        (g$12033$1M&0Ej core-prim . real?)
        (g$12032$1M&0Ej core-prim . real-valued?)
        (g$12031$1M&0Ej core-prim . real-part)
        (g$6041$1M&0Ej core-prim . rationalize)
        (g$12030$1M&0Ej core-prim . rational?)
        (g$12029$1M&0Ej core-prim . rational-valued?)
        (g$12028$1M&0Ej core-prim . procedure?)
        (g$12027$1M&0Ej core-prim . positive?)
        (g$12026$1M&0Ej core-prim . pair?)
        (g$12025$1M&0Ej core-prim . odd?)
        (g$12024$1M&0Ej core-prim . numerator)
        (g$12023$1M&0Ej core-prim . number?)
        (g$12022$1M&0Ej core-prim . number->string)
        (g$12021$1M&0Ej core-prim . null?)
        (g$12020$1M&0Ej core-prim . not)
        (g$12019$1M&0Ej core-prim . negative?)
        (g$12018$1M&0Ej core-prim . nan?)
        (g$12017$1M&0Ej core-prim . min)
        (g$12016$1M&0Ej core-prim . max)
        (g$12015$1M&0Ej core-prim . map)
        (g$12014$1M&0Ej core-prim . make-vector)
        (g$12013$1M&0Ej core-prim . make-string)
        (g$12012$1M&0Ej core-prim . make-rectangular)
        (g$12011$1M&0Ej core-prim . make-polar)
        (g$12010$1M&0Ej core-prim . magnitude)
        (g$12009$1M&0Ej core-prim . log)
        (g$12008$1M&0Ej core-prim . list?)
        (g$12007$1M&0Ej core-prim . list-tail)
        (g$12006$1M&0Ej core-prim . list-ref)
        (g$12005$1M&0Ej core-prim . list->vector)
        (g$12004$1M&0Ej core-prim . list->string)
        (g$12003$1M&0Ej core-prim . list)
        (g$12002$1M&0Ej core-prim . length)
        (g$12001$1M&0Ej core-prim . lcm)
        (g$12000$1M&0Ej core-prim . integer?)
        (g$11999$1M&0Ej core-prim . integer-valued?)
        (g$11998$1M&0Ej core-prim . integer->char)
        (g$11997$1M&0Ej core-prim . infinite?)
        (g$11996$1M&0Ej core-prim . inexact?)
        (g$11995$1M&0Ej core-prim . inexact)
        (g$11994$1M&0Ej core-prim . imag-part)
        (g$11993$1M&0Ej core-prim . gcd)
        (g$11992$1M&0Ej core-prim . for-each)
        (g$11991$1M&0Ej core-prim . floor)
        (g$11990$1M&0Ej core-prim . finite?)
        (g$11989$1M&0Ej core-prim . expt)
        (g$11988$1M&0Ej core-prim . exp)
        (g$11987$1M&0Ej core-prim . exact?)
        (g$11986$1M&0Ej core-prim . exact-integer-sqrt)
        (g$11985$1M&0Ej core-prim . exact)
        (g$11984$1M&0Ej core-prim . even?)
        (g$11983$1M&0Ej core-prim . error)
        (g$11982$1M&0Ej core-prim . eqv?)
        (g$11981$1M&0Ej core-prim . equal?)
        (g$11980$1M&0Ej core-prim . eq?)
        (g$11979$1M&0Ej core-prim . dynamic-wind)
        (g$11978$1M&0Ej core-prim . div0-and-mod0)
        (g$11977$1M&0Ej core-prim . mod0)
        (g$11976$1M&0Ej core-prim . div0)
        (g$11975$1M&0Ej core-prim . div-and-mod)
        (g$11974$1M&0Ej core-prim . mod)
        (g$11973$1M&0Ej core-prim . div)
        (g$11972$1M&0Ej core-prim . denominator)
        (g$11971$1M&0Ej core-prim . cos)
        (g$11970$1M&0Ej core-prim . cons)
        (g$11969$1M&0Ej core-prim . complex?)
        (g$11968$1M&0Ej core-prim . char?)
        (g$6038$1M&0Ej core-prim . char>?)
        (g$6040$1M&0Ej core-prim . char>=?)
        (g$6036$1M&0Ej core-prim . char=?)
        (g$6037$1M&0Ej core-prim . char<?)
        (g$6039$1M&0Ej core-prim . char<=?)
        (g$11967$1M&0Ej core-prim . char->integer)
        (g$11966$1M&0Ej core-prim . ceiling)
        (g$11965$1M&0Ej core-prim . call-with-values)
        (g$11964$1M&0Ej core-prim . call/cc)
        (g$11963$1M&0Ej core-prim . call-with-current-continuation)
        (g$5960$1M&0Ej core-prim . cddddr)
        (g$5959$1M&0Ej core-prim . cdddar)
        (g$5958$1M&0Ej core-prim . cddadr)
        (g$5957$1M&0Ej core-prim . cddaar)
        (g$5956$1M&0Ej core-prim . cdaddr)
        (g$5955$1M&0Ej core-prim . cdadar)
        (g$5954$1M&0Ej core-prim . cdaadr)
        (g$5953$1M&0Ej core-prim . cdaaar)
        (g$5952$1M&0Ej core-prim . cadddr)
        (g$5951$1M&0Ej core-prim . caddar)
        (g$5950$1M&0Ej core-prim . cadadr)
        (g$5949$1M&0Ej core-prim . cadaar)
        (g$5948$1M&0Ej core-prim . caaddr)
        (g$5947$1M&0Ej core-prim . caadar)
        (g$5946$1M&0Ej core-prim . caaadr)
        (g$5945$1M&0Ej core-prim . caaaar)
        (g$5944$1M&0Ej core-prim . cdddr)
        (g$5943$1M&0Ej core-prim . cddar)
        (g$5942$1M&0Ej core-prim . cdadr)
        (g$5941$1M&0Ej core-prim . cdaar)
        (g$5940$1M&0Ej core-prim . caddr)
        (g$5939$1M&0Ej core-prim . cadar)
        (g$5938$1M&0Ej core-prim . caadr)
        (g$5937$1M&0Ej core-prim . caaar)
        (g$5936$1M&0Ej core-prim . cddr)
        (g$5935$1M&0Ej core-prim . cdar)
        (g$5934$1M&0Ej core-prim . cadr)
        (g$5933$1M&0Ej core-prim . caar)
        (g$11962$1M&0Ej core-prim . cdr)
        (g$11961$1M&0Ej core-prim . car)
        (g$11960$1M&0Ej core-prim . boolean?)
        (g$6001$1M&0Ej core-prim . boolean=?)
        (g$11959$1M&0Ej core-prim . atan)
        (g$11958$1M&0Ej core-prim . assertion-violation)
        (g$11957$1M&0Ej core-prim . asin)
        (g$11956$1M&0Ej core-prim . apply)
        (g$11955$1M&0Ej core-prim . append)
        (g$11954$1M&0Ej core-prim . angle)
        (g$11953$1M&0Ej core-prim . acos)
        (g$11952$1M&0Ej core-prim . abs)
        (g$11951$1M&0Ej core-prim . /)
        (g$11950$1M&0Ej core-prim . *)
        (g$11949$1M&0Ej core-prim . -)
        (g$11948$1M&0Ej core-prim . +)
        (g$11947$1M&0Ej core-prim . >=)
        (g$11946$1M&0Ej core-prim . >)
        (g$11945$1M&0Ej core-prim . =)
        (g$11944$1M&0Ej core-prim . <=)
        (g$11943$1M&0Ej core-prim . <)
        (g$11942$1M&0Ej core-prim . make-record-printer)
        (g$11941$1M&0Ej core-prim . eqv-hash)
        (g$11940$1M&0Ej core-prim . reverse!)
        (g$11939$1M&0Ej core-prim . deserialize-port)
        (g$11938$1M&0Ej core-prim . serialize-port)
        (g$7371$1M&0Ej core-prim . enum-set?)
        (g$6831$1M&0Ej core-prim . make-promise)
        (g$11774$1M&0Ej core-prim . load/args)
        (g$7481$1M&0Ej core-prim . printf)
        (g$7482$1M&0Ej core-prim . fprintf)
        (g$7483$1M&0Ej core-prim . format)
        (g$11937$1M&0Ej core-prim . procedure-form)
        (g$11936$1M&0Ej core-prim . procedure-environment)
        (g$11935$1M&0Ej core-prim . procedure-name)
        (g$11934$1M&0Ej core-prim . procedure-arity)
        (g$11933$1M&0Ej core-prim . gc-collect)
        (g$11932$1M&0Ej core-prim . clr-type?)
        (g$11931$1M&0Ej core-prim . get-clr-type)
        (g$11930$1M&0Ej core-prim . get-command-line)
        (g$11929$1M&0Ej core-prim . vector-append)
        (g$11928$1M&0Ej core-prim . vector-filter)
        (g$11927$1M&0Ej core-prim . vector-reverse!)
        (g$11926$1M&0Ej core-prim . vector-contains?)
        (g$11925$1M&0Ej core-prim . vector-index-of)
        (g$11924$1M&0Ej core-prim . vector-copy)
        (g$11923$1M&0Ej core-prim . vector-binary-search)
        (g$11922$1M&0Ej core-prim . string-ci-compare)
        (g$11921$1M&0Ej core-prim . string-compare)
        (g$11920$1M&0Ej core-prim . string-format)
        (g$11771$1M&0Ej core-prim . trace-printer)
        (g$11919$1M&0Ej core-prim . make-traced-procedure)
        (g$7503$1M&0Ej core-prim . make-traced-macro)
        (g$8796$1M&0Ej core-prim . assertion-error)
        (g$11918$1M&0Ej core-prim . pmap)
        (g$11917$1M&0Ej core-prim . time-it)
        (g$7508$1M&0Ej core-prim . make-parameter)
        (g$11916$1M&0Ej core-prim . library-locator)
        (g$11915$1M&0Ej core-prim . get-library-paths)
        (g$8775$1M&0Ej core-prim . environment-bindings)
        (g$8778$1M&0Ej core-prim . environment-symbols)
        (g$8774$1M&0Ej core-prim . interaction-environment-symbols)
        (g$11914$1M&0Ej core-prim . optimization-level)
        (g$7938$1M&0Ej core-prim . library-path)
        (g$11913$1M&0Ej $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11912$1M&0Ej $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11911$1M&0Ej $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11910$1M&0Ej $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11909$1M&0Ej $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11908$1M&0Ej
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11907$1M&0Ej
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11906$1M&0Ej
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11905$1M&0Ej
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11904$1M&0Ej $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11903$1M&0Ej
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11902$1M&0Ej $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11901$1M&0Ej $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11900$1M&0Ej $core-rtd &i/o-rtd &i/o-rcd)
        (g$11899$1M&0Ej $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11898$1M&0Ej $core-rtd &undefined-rtd &undefined-rcd)
        (g$11897$1M&0Ej $core-rtd &syntax-rtd &syntax-rcd)
        (g$11896$1M&0Ej $core-rtd &lexical-rtd &lexical-rcd)
        (g$11895$1M&0Ej
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11894$1M&0Ej $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11893$1M&0Ej $core-rtd &who-rtd &who-rcd)
        (g$11892$1M&0Ej $core-rtd &irritants-rtd &irritants-rcd)
        (g$11891$1M&0Ej $core-rtd &assertion-rtd &assertion-rcd)
        (g$11890$1M&0Ej $core-rtd &violation-rtd &violation-rcd)
        (g$11889$1M&0Ej $core-rtd &error-rtd &error-rcd)
        (g$11888$1M&0Ej $core-rtd &serious-rtd &serious-rcd)
        (g$11887$1M&0Ej $core-rtd &warning-rtd &warning-rcd)
        (g$11886$1M&0Ej $core-rtd &message-rtd &message-rcd)
        (g$11885$1M&0Ej $core-rtd &condition-rtd &condition-rcd)
        (g$11884$1M&0Ej macro . define-condition-type)
        (g$11883$1M&0Ej macro . define-enumeration)
        (g$11882$1M&0Ej macro . define-record-type)
        (g$11881$1M&0Ej macro . parent-rtd)
        (g$11880$1M&0Ej macro . nongenerative)
        (g$11879$1M&0Ej macro . opaque)
        (g$11878$1M&0Ej macro . sealed)
        (g$11877$1M&0Ej macro . protocol)
        (g$11876$1M&0Ej macro . parent)
        (g$11875$1M&0Ej macro . immutable)
        (g$11874$1M&0Ej macro . mutable)
        (g$11873$1M&0Ej macro . fields)
        (g$11872$1M&0Ej macro . error-handling-mode)
        (g$11871$1M&0Ej macro . file-options)
        (g$11870$1M&0Ej macro . buffer-mode)
        (g$11869$1M&0Ej macro . eol-style)
        (g$11868$1M&0Ej macro . guard)
        (g$11867$1M&0Ej macro . trace-letrec-syntax)
        (g$11866$1M&0Ej macro . trace-let-syntax)
        (g$11865$1M&0Ej macro . trace-define-syntax)
        (g$11864$1M&0Ej macro . trace-define)
        (g$11863$1M&0Ej macro . trace-lambda)
        (g$11862$1M&0Ej macro . unsyntax-splicing)
        (g$11861$1M&0Ej macro . unsyntax)
        (g$11860$1M&0Ej macro . unquote-splicing)
        (g$11859$1M&0Ej macro . unquote)
        (g$11858$1M&0Ej macro . _)
        (g$11857$1M&0Ej macro . else)
        (g$11856$1M&0Ej macro . =>)
        (g$11855$1M&0Ej macro . ...)
        (g$11854$1M&0Ej macro . assert)
        (g$11853$1M&0Ej macro . endianness)
        (g$11852$1M&0Ej macro . delay)
        (g$11851$1M&0Ej macro . time)
        (g$11850$1M&0Ej macro . or)
        (g$11849$1M&0Ej macro . and)
        (g$11848$1M&0Ej macro . do)
        (g$11847$1M&0Ej macro . cond)
        (g$11846$1M&0Ej macro . let*)
        (g$11845$1M&0Ej macro . let)
        (g$11844$1M&0Ej macro . identifier-syntax)
        (g$11843$1M&0Ej macro . with-syntax)
        (g$11842$1M&0Ej macro . quasisyntax)
        (g$11841$1M&0Ej macro . quasiquote)
        (g$11840$1M&0Ej macro . syntax-rules)
        (g$11839$1M&0Ej macro . include-into)
        (g$11838$1M&0Ej macro . include)
        (g$11837$1M&0Ej macro . define-struct)
        (g$11836$1M&0Ej macro . let-values)
        (g$11835$1M&0Ej macro . let*-values)
        (g$11834$1M&0Ej core-macro . record-constructor-descriptor)
        (g$11833$1M&0Ej core-macro . record-type-descriptor)
        (g$11832$1M&0Ej core-macro . fluid-let-syntax)
        (g$11831$1M&0Ej macro . case)
        (g$11830$1M&0Ej macro . parameterize)
        (g$11829$1M&0Ej macro . unless)
        (g$11828$1M&0Ej macro . when)
        (g$11827$1M&0Ej core-macro . if)
        (g$11826$1M&0Ej core-macro . letrec*)
        (g$11825$1M&0Ej core-macro . letrec)
        (g$11824$1M&0Ej core-macro . type-descriptor)
        (g$11823$1M&0Ej core-macro . case-lambda)
        (g$11822$1M&0Ej core-macro . lambda)
        (g$11821$1M&0Ej core-macro . syntax)
        (g$11820$1M&0Ej core-macro . syntax-case)
        (g$11819$1M&0Ej core-macro . quote)
        (g$11818$1M&0Ej core-macro . foreign-call)
        (g$11817$1M&0Ej letrec-syntax)
        (g$11816$1M&0Ej let-syntax)
        (g$11815$1M&0Ej set!)
        (g$11814$1M&0Ej export)
        (g$11813$1M&0Ej import)
        (g$11812$1M&0Ej library)
        (g$11811$1M&0Ej begin)
        (g$11810$1M&0Ej module)
        (g$11809$1M&0Ej define-syntax)
        (g$11808$1M&0Ej define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7065$1M&0Ej
      'g$12463$1M&0Ej
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12342$1M&0Ej)
        (eval-core . g$12341$1M&0Ej)
        (set-symbol-value! . g$12340$1M&0Ej)
        (symbol-value . g$12339$1M&0Ej)
        (gensym . g$12337$1M&0Ej)
        (void . g$12336$1M&0Ej))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11142$1M&0Ej
     g$trace-printer$11182$1M&0Ej
     (g$make-parameter$6520$1M&0Ej write))
   (g$command-line$11143$1M&0Ej
     g$command-line$11183$1M&0Ej
     (g$make-parameter$6520$1M&0Ej (get-command-line)))
   (g$local-library-path$11144$1M&0Ej
     g$local-library-path$11184$1M&0Ej
     (case-lambda
       ((g$filename$11155$1M&0Ej)
        (cons
          (g$get-directory-name$5454$1M&0Ej g$filename$11155$1M&0Ej)
          (g$library-path$7049$1M&0Ej)))))
   (g$load/args$11145$1M&0Ej
     g$load/args$11185$1M&0Ej
     (case-lambda
       ((g$filename$11156$1M&0Ej . g$args$11157$1M&0Ej)
        (begin
          (apply
            g$load-r6rs-top-level$11152$1M&0Ej
            g$filename$11156$1M&0Ej
            'load
            g$args$11157$1M&0Ej)
          (void)))))
   (g$load$11146$1M&0Ej
     g$load$11186$1M&0Ej
     (case-lambda
       ((g$filename$11158$1M&0Ej)
        (begin
          (apply
            g$load-r6rs-top-level$11152$1M&0Ej
            g$filename$11158$1M&0Ej
            'load
            (cdr (g$command-line$11143$1M&0Ej)))
          (void)))))
   (g$ironscheme-build$11147$1M&0Ej
     g$ironscheme-build$11187$1M&0Ej
     (case-lambda (() (g$load$11146$1M&0Ej '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11148$1M&0Ej
     g$eval-top-level$11188$1M&0Ej
     (case-lambda
       ((g$x$11159$1M&0Ej)
        (g$eval$11117$1M&0Ej
          g$x$11159$1M&0Ej
          (g$interaction-environment$11140$1M&0Ej)))))
   (g$compile-system-libraries$11149$1M&0Ej
     g$compile-system-libraries$11189$1M&0Ej
     (case-lambda
       (()
        (g$eval-top-level$11148$1M&0Ej
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11150$1M&0Ej
     g$compile$11190$1M&0Ej
     (case-lambda
       ((g$filename$11160$1M&0Ej)
        (g$load-r6rs-top-level$11152$1M&0Ej g$filename$11160$1M&0Ej 'compile))))
   (g$compile->closure$11151$1M&0Ej
     g$compile->closure$11191$1M&0Ej
     (case-lambda
       ((g$filename$11161$1M&0Ej)
        (g$load-r6rs-top-level$11152$1M&0Ej g$filename$11161$1M&0Ej 'closure))))
   (g$load-r6rs-top-level$11152$1M&0Ej
     g$load-r6rs-top-level$11192$1M&0Ej
     (case-lambda
       ((g$filename$11162$1M&0Ej g$how$11163$1M&0Ej . g$args$11164$1M&0Ej)
        ((case-lambda
           ((g$library-path$11167$1M&0Ej g$library-path$11168$1M&0Ej)
            ((case-lambda
               ((g$swap$11169$1M&0Ej)
                (dynamic-wind
                  g$swap$11169$1M&0Ej
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11170$1M&0Ej)
                         ((case-lambda
                            ((g$t$11171$1M&0Ej)
                             (if (g$memv$4990$1M&0Ej
                                   g$t$11171$1M&0Ej
                                   '(closure))
                               (g$pre-compile-r6rs-top-level$11139$1M&0Ej
                                 g$x*$11170$1M&0Ej)
                               (if (g$memv$4990$1M&0Ej g$t$11171$1M&0Ej '(load))
                                 ((case-lambda
                                    ((g$command-line$11174$1M&0Ej
                                       g$command-line$11175$1M&0Ej)
                                     ((case-lambda
                                        ((g$swap$11176$1M&0Ej)
                                         (dynamic-wind
                                           g$swap$11176$1M&0Ej
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11138$1M&0Ej
                                                 g$x*$11170$1M&0Ej))))
                                           g$swap$11176$1M&0Ej)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11177$1M&0Ej)
                                             (begin
                                               (g$command-line$11174$1M&0Ej
                                                 g$command-line$11175$1M&0Ej)
                                               (set! g$command-line$11175$1M&0Ej
                                                 g$t$11177$1M&0Ej))))
                                          (g$command-line$11174$1M&0Ej)))))))
                                  g$command-line$11143$1M&0Ej
                                  (cons
                                    g$filename$11162$1M&0Ej
                                    (map (case-lambda
                                           ((g$x$11178$1M&0Ej)
                                            (g$format$6435$1M&0Ej
                                              '"~a"
                                              g$x$11178$1M&0Ej)))
                                         g$args$11164$1M&0Ej)))
                                 (if (g$memv$4990$1M&0Ej
                                       g$t$11171$1M&0Ej
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11138$1M&0Ej
                                       g$x*$11170$1M&0Ej)
                                     (g$serialize-all$7053$1M&0Ej
                                       serialize-library
                                       g$compile-core-expr$6767$1M&0Ej))
                                   (if '#f '#f (void)))))))
                          g$how$11163$1M&0Ej)))
                      (g$with-input-from-file$6263$1M&0Ej
                        g$filename$11162$1M&0Ej
                        (case-lambda
                          (()
                           ((letrec ((g$f$11179$1M&0Ej
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11180$1M&0Ej)
                                              (if (eof-object? g$x$11180$1M&0Ej)
                                                '()
                                                (cons
                                                  g$x$11180$1M&0Ej
                                                  (g$f$11179$1M&0Ej)))))
                                           (read-annotated))))))
                              g$f$11179$1M&0Ej))))))))
                  g$swap$11169$1M&0Ej)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11181$1M&0Ej)
                    (begin
                      (g$library-path$11167$1M&0Ej g$library-path$11168$1M&0Ej)
                      (set! g$library-path$11168$1M&0Ej g$t$11181$1M&0Ej))))
                 (g$library-path$11167$1M&0Ej)))))))
         g$library-path$7049$1M&0Ej
         (g$local-library-path$11144$1M&0Ej g$filename$11162$1M&0Ej)))))
   (g$fo$11153$1M&0Ej
     g$fo$11193$1M&0Ej
     (g$make-enumeration$6397$1M&0Ej '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7054$1M&0Ej
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11154$1M&0Ej)
         (if (g$serious-condition?$5716$1M&0Ej g$ex$11154$1M&0Ej)
           (raise g$ex$11154$1M&0Ej)
           (begin (display g$ex$11154$1M&0Ej) (newline))))))
    (set-symbol-value! 'load g$load$11146$1M&0Ej)
    (set-symbol-value! 'compile g$compile$11150$1M&0Ej)
    (set-symbol-value! 'compile->closure g$compile->closure$11151$1M&0Ej)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11148$1M&0Ej)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11108$1M&0Ej)
    (set-symbol-value! 'expanded2core g$expanded->core$6766$1M&0Ej)
    (set-symbol-value! 'trace-printer g$trace-printer$11142$1M&0Ej)
    (g$file-options-constructor$6521$1M&0Ej
      (g$enum-set-constructor$6400$1M&0Ej g$fo$11153$1M&0Ej))
    (g$library-path$7049$1M&0Ej (get-library-paths))))

